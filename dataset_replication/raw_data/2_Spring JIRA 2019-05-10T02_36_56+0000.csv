Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Description,Environment,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Depend),Outward issue link (Depends),Outward issue link (Depends),Outward issue link (Depends),Outward issue link (Duplicate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Related),Outward issue link (Related),Outward issue link (Supersede),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Acceptance Criteria),Custom field (Actual Story Points),Custom field (Business Value),Custom field (Days since last comment),Custom field (Epic Colour),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (First Response Date),Custom field (Global Rank),Custom field (Last commented by a User),Custom field (Last updater),Custom field (Out of Scope),Custom field (Platform),Custom field (Pull Request URL),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Ranking),Custom field (Reference URL),Custom field (Spring Forum Reference),Custom field (Story Points),Custom field (Virtual Machine),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
"Illegal SoapAction header: """,SWS-571,28013,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,janssk1,janssk1,21/Sep/09 2:53 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,21/Sep/09 9:16 PM,1.5.8,,,,,,1.5.9,,,Core,,,,,0,,"It seems that spring ws generates an illegal soapaction if no explicit soapaction is provided: an unmatched double quote. 

A quick look at the SoapUtils class shows the problem:

{code}
 public static String escapeAction(String soapAction) {
        if (soapAction == null) {
            soapAction = """";
        }
        if (!soapAction.startsWith(""\"""")) {
            soapAction = ""\"""" + soapAction;
        }
        if (!soapAction.endsWith(""\"""")) {
            soapAction = soapAction + ""\"""";
        }
        return soapAction;
    }
{code}

If you pass null as argument, it will return "" instead of """"
",,;21/Sep/09 9:16 PM;arjen.poutsma;600,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:44.711,7558,false,arjen.poutsma(arjen.poutsma),,,,0|i040b3:,23424,19947,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
CommonsHttpMessageSender no longer properly shuts down MultiThreadedHttpConnectionManager,SWS-564,27909,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,nblair,nblair,09/Sep/09 3:22 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,10/Nov/09 12:47 AM,,,,,,,1.5.9,,,,,,,,0,,"As of revision 1414 of  CommonsHttpMessageSender, the MultiThreadedHttpConnectionManager never gets it's shutdown method invoked.

It appears that the prior revision of CommonsHttpMessageSender implemented DisposableBean, and invoked this properly.
SWS-482 removed the destroy method to cope with a problem report, but the result is worse.

If you use MultiThreadedHttpConnectionManager, you have to call it's shutdown method, or it will block application exit.
For example, I have a class with a main method that uses WebServiceTemplate along with CommonsHttpMessageSender that is invoked via an ant task. The main method will complete, but the JVM cannot exit.

Lets revisit SWS-482 and come up with a means for resolving the issue appropriately.
The reporter of that issue mentions that:
""it happens it is always after we redeploy our application (weblogic 9.2MP2)"".
",,;10/Nov/09 12:44 AM;arjen.poutsma;14700,,,,,,,,,,,,,,,0,14700,,,0,14700,,,,,,,,,,,,SWS-482,,,,,,,,,,,,,,221270400,,,,,2009-09-10 18:59:19.2,7564,false,arjen.poutsma(arjen.poutsma),,,,0|i040br:,23427,19951,,,,,"09/Sep/09 3:33 AM;nblair;The problem reported in SWS-482 is likely due to the following sequence of events (with the prior revision of CommonsHttpMessageSender):

1. Customer tries to redeploy application using WebServiceTemplate and CommonsHttpMessageSender.
2. redeploy results in first stopping application, which shuts down Spring application context.
3. destroy in WebServiceTemplate results in CommonsHttpMessageSender#destroy
4. CommonsHttpMessageSender destroy results in MultiThreadedHttpConnectionManager#shutdown
5. Application shutdown, now started again by the container.

I think the actual solution here isn't to remove DisposableBean (and the MultiThreadedHttpConnectionManager#shutdown) implementation on CommonsHttpMessageSender.

One option might be to alter CommonsHttpMessageSender's afterPropertiesSet method - it should instantiate a new MultiThreadedHttpConnectionManager and supply it to the internal HttpClient.","10/Sep/09 6:59 PM;arjen.poutsma;Good suggestions, I will take a further look at this for 1.5.9.

Thanks!","10/Nov/09 12:47 AM;arjen.poutsma;I reintroduced the shutdown() call, and also solved the problem reported in SWS-482. 

The underlying problem (in SWS-482) was that a connection was retrieved from the CommonsHttpMessageSender, the app context was closed resulting in a the connection pool shutdown, and then the connection was used, resulting in the IllegalStateException. Now, we create a new, single-use connection pool for that connection. Not pretty, but it works.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
Provide support for Apache HttpClient 4.0,SWS-563,27853,,New Feature,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,alankstewart,alankstewart,03/Sep/09 9:56 AM,09/May/12 4:54 AM,10/May/19 2:37 AM,09/May/12 1:53 AM,,,,,,,2.1 RC1,,,Core,,,,,27,,"I would like to be able to use the Apache HttpClient 4.0 in Spring WS, now that it is out of beta",,;10/Dec/10 1:43 AM;arjen.poutsma;16980,;08/May/12 3:02 AM;arjen.poutsma;3240,;09/May/12 1:53 AM;arjen.poutsma;1860,,,,,,,,,,,,,0,22080,,,0,22080,,,,,,,,,,,,,,,24/Aug/11 4:13 AM;barrypitman;HttpClientConnection.java;https://jira.spring.io/secure/attachment/18593/HttpClientConnection.java,14/Sep/09 10:50 AM;alankstewart;HttpClientConnection.java;https://jira.spring.io/secure/attachment/15710/HttpClientConnection.java,24/Aug/11 4:13 AM;barrypitman;HttpClientMessageSender.java;https://jira.spring.io/secure/attachment/18592/HttpClientMessageSender.java,14/Sep/09 10:50 AM;alankstewart;HttpClientMessageSender.java;https://jira.spring.io/secure/attachment/15709/HttpClientMessageSender.java,10/Sep/09 9:18 AM;alankstewart;HttpClientMessageSender.java;https://jira.spring.io/secure/attachment/15706/HttpClientMessageSender.java,24/Aug/11 4:13 AM;barrypitman;ProtocolExceptionOverrideInterceptor.java;https://jira.spring.io/secure/attachment/18594/ProtocolExceptionOverrideInterceptor.java,,,,,,220838400,,,,,2009-09-10 00:28:40.691,1652,true,barrypitman(barrypitman),,,,0|i032iv:,17951,17349,http://forum.springsource.org/showthread.php?t=77023,,,,"10/Sep/09 12:28 AM;olegk;I am willing to give a helping hand with that.

Oleg (Apache HttpComponents committer)","10/Sep/09 9:25 AM;alankstewart;Oleg - that's great!  I mentioned in the forum entry that I would have a go at it. I created a class called HttpClientMessageSender (a copy of the CommonHttpMessageSender class) that also extends org.springframework.ws.transport.http.AbstractHttpWebServiceMessageSender . I converted most of the methods but there seems to be in some cases no direct equivalent from Commons to the new client. I got stuck on the setMaxConnectionsPerHost method. It may not be relevant anymore anyway but with your expertise in this, it should be quite trivial. An implementation of the org.springframework.ws.transport .WebServiceConnection is also required as well.
Thanks
Alan",10/Sep/09 7:01 PM;arjen.poutsma;Thanks for all the contributions everbody!,"10/Sep/09 10:00 PM;olegk;Alan
---
	public HttpClientMessageSender() {
		httpClient = new DefaultHttpClient();
		setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT_MILLISECONDS);
		setReadTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS);
	}
---

I would strongly recommend using ThreadSafeClientConnManager instead of the one created by HttpClient per default

http://hc.apache.org/httpcomponents-client/tutorial/html/connmgmt.html#d4e596

> Commons to the new client. I got stuck on the setMaxConnectionsPerHost method. It may not be relevant anymore 
> anyway but with your expertise in this, it should be quite trivial

One can use ConnPerRouteBean class to enforce max connection limit for individual HTTP routes, as described here:

http://hc.apache.org/httpcomponents-client/tutorial/html/connmgmt.html#d4e596
http://hc.apache.org/httpcomponents-client/httpclient/apidocs/org/apache/http/conn/params/ConnPerRouteBean.html

> An implementation of the org.springframework.ws.transport .WebServiceConnection is also required as well.

That's where things may get tricky. In any way I'll happily help with the HttpClient specific stuff.

Oleg","10/Sep/09 10:23 PM;olegk;One more thing. This bit looks ugly:
---
public void afterPropertiesSet() throws Exception {
    if (getCredentials() != null) {
        ((DefaultHttpClient) getHttpClient()).getCredentialsProvider().setCredentials(getAuthScope(), getCredentials());
        // ((DefaultHttpClient) getHttpClient()).getCredentialsProvider().setAuthenticationPreemptive(true);
    }
}
---

There are better ways of providing auth credentials at run-time, for instance by binding a custom credentials provider to the local execution context or by using a custom protocol interceptor. For details see:

http://hc.apache.org/httpcomponents-client/tutorial/html/authentication.html#d4e909
http://hc.apache.org/httpcomponents-client/tutorial/html/authentication.html#d4e942

Oleg","14/Sep/09 10:49 AM;alankstewart;> I would strongly recommend using ThreadSafeClientConnManager instead of the one created by HttpClient per default

I followed the same pattern as the CommonHttpMessageSender by allowing the default constructor to create a default client, and allow the user to inject a multi-threaded connection manager (like I do in my production systems) if desired. If you think this is still a bad idea, I can change it.

>> An implementation of the org.springframework.ws.transport .WebServiceConnection is also required as well.
>That's where things may get tricky. In any way I'll happily help with the HttpClient specific stuff.

I created a HttpClientConnection class which extends the Spring WS framework's org.springframework.ws.transport.http.AbstractSenderConnection as does the Commons class.
There are some abstract methods which must be implemented:
    /** Returns the HTTP status code of the response. */
    protected abstract int getResponseCode() throws IOException;

    /** Returns the HTTP status message of the response. */
    protected abstract String getResponseMessage() throws IOException;

    /** Returns the length of the response. */
    protected abstract long getResponseContentLength() throws IOException;

    /** Returns the raw, possibly compressed input stream to read the response from. */
    protected abstract InputStream getRawResponseInputStream() throws IOException;

I can get the last 2 working by returning  httpPost.getEntity().getContentLength() and httpPost.getEntity().getContent() respectively, but can't find equivalents for getResponseCode() and getResponseMessage in HttpPost or HttpEntity.

Attached are new versions of the code
Alan
","16/Sep/09 6:50 AM;olegk;> I followed the same pattern as the CommonHttpMessageSender by allowing the default constructor
> to create a default client, and allow the user to inject a multi-threaded connection manager 
> (like I do in my production systems) if desired. If you think this is still a bad idea, I can change it.

I believe (I may be wrong here, though) CommonHttpMessageSender can be used by multiple threads to execute requests concurrently. Therefore a multi-threaded connection manager should be used by default to enable proper handling of concurrent request execution.

> I can get the last 2 working by returning  httpPost.getEntity().getContentLength() and
> httpPost.getEntity().getContent() respectively, but can't find equivalents for 
> getResponseCode() and getResponseMessage in HttpPost or HttpEntity.

Please note some responses may have no enclosing response entity, so you should be checking for HttpResponse#getEntity being non null just in case.

Use HttpResponse#getStatusLine()#getStatusCode() in order to obtain the response code. Use HttpResponse#getStatusLine()#getReasonPhrase() in order to obtain the response message 
 
Also, make sure to call HttpEntity#consumeContent() in HttpClientConnection#onClose() to ensure correct re-use of the underlying HTTP connection and deallocation of system resources.

Last but not the least, we should eliminate in memory buffering of the request content body. For that we might have to change the subclass of HttpClientConnection from AbstractHttpSenderConnection to something else or just implement WebServiceConnection directly. In memory buffering of request content pretty much eliminates all the benefits of using HttpClient in the first place.

Oleg","21/Sep/09 12:08 PM;alankstewart;> Last but not the least, we should eliminate in memory buffering of the request content body. For that we might have to change the subclass of 
> HttpClientConnection from AbstractHttpSenderConnection to something else or just implement WebServiceConnection directly. In memory buffering of request 
> content pretty much eliminates all the benefits of using HttpClient in the first place.

To eliminate in memory buffering, do you mean to use something other than the ByteArrayEntity in the onSendAfterWrite method? The CommonsHttpConnection uses the older ByteArrayRequestEntity. What do you suggest instead?

Alan","21/Sep/09 7:37 PM;olegk;Alan

The problem is the implementation of the WebServiceConnection#send method by AbstractWebServiceConnection class [1]

In order to utilize HttpClient content streaming capability one should provide a custom implementation of HttpEntity interface that wraps the WebServiceMessage instance instead of writing its content out to an intermediate byte array and using ByteArrayEntity. This will enable HttpClient to write out the message content directly to the socket of the underlying HTTP connection.

The catch is AbstractWebServiceConnection can no longer be a base class for HttpClientConnection and therefore most of its functionality may need to be duplicated.

Oleg

[1] https://src.springframework.org/svn/spring-ws/trunk/core/src/main/java/org/springframework/ws/transport/AbstractWebServiceConnection.java
","10/Nov/10 5:44 AM;arjen.poutsma;To do proper justice to the new capabilities of HttpClient 4.0, we will probably have to rewrite some of the transport logic in Spring-WS. Unfortunately, I do not have time to do that before 2.0, so I am rescheduling for 2.1.

A shame, but that's the way it is.",27/Mar/11 5:56 AM;magott;Have a preliminary date been set for 2.1? Or for the milestone in which this will be included?,"29/Jun/11 1:58 AM;bazeusz;Guys, 

I needed to do this integration (httpclient 4 and spring-ws) now and faced some issues with jdk's 6 saaj and httpclient 4. It's not so much the spring issue but you have to deal with this anyway. 

The problem is the httpclient 4 is very restrictive in its RequestContent interceptor and throws ProtocolException when a Content-Length header has been set prior to calling its process method. And this is a case with a saaj's com.sun.xml.messaging.saaj.soap.MessageImpl. The class calculates a message size itself and sets a Content-Length header in saveChanges. 

Although I agree it's a transport layer responsibility to calculate it, for compatibility purposes httpclient should consider logging a warning and maybe overriding the header instead of throwing an exception. Otherwise it must be worked around by an integration code, Spring in this case. 

Piotr","24/Aug/11 4:10 AM;barrypitman;I also needed this feature (my application requires multiple HttpClient instances, each of which is configured with different client X509 keyStores at startup. As far as I know that can't be done with commons-httpclient but can with Apache HttpClient 4).

I took the attachments provided by Alan and applied all of Oleg's suggestions as well as working around the problem mentioned by Piotr (with a custom 'HttpRequestInterceptor' that clears the Content-Length and Transfer-Encoding headers set by SAAJ).

I'll attach the files to this issue in case anyone else needs this sooner rather than later. I have tested it in my test environment and its working fine. ",24/Aug/11 4:13 AM;barrypitman;Working HttpClient-based WebServiceMessageSender implementation,"08/May/12 3:03 AM;arjen.poutsma;This is now in SVN, as HttpComponentsMessageSender.

Thanks for the patches, guys, it really made my job a lot easier!","08/May/12 6:17 AM;barrypitman;Hi Arjen, 

One of my use-cases is that I need to be able to specify different HTTP Basic Auth credentials per request, based on the current user (the context). Looking at the changes at https://fisheye.springsource.org/browse/~br=trunk/spring-ws/trunk/core/src/main/java/org/springframework/ws/transport/http/HttpComponentsConnection.java?r=1981&r=1981, I don't think that will be possible, because I need to specify a {{org.apache.http.protocol.HttpContext}} when making the request.

Oleg alluded to using the HttpContext to supply credentials earlier:

{quote}There are better ways of providing auth credentials at run-time, for instance by binding a custom credentials provider to the local execution context or by using a custom protocol interceptor. For details see:

http://hc.apache.org/httpcomponents-client/tutorial/html/authentication.html#d4e909
http://hc.apache.org/httpcomponents-client/tutorial/html/authentication.html#d4e942
{quote}

The problem is that there is no way to provide a {{org.apache.http.protocol.HttpContext}} for httpClient.execute(httpPost, httpContext).

What I have been doing in the past is subclassing HttpComponentsMessageSender to override {{createConnection(URI uri)}}, creating a HttpComponentsConnection with a HttpContext instance like so:

{code}
public abstract class BasicAuthHttpComponentsMessageSender extends HttpComponentsMessageSender {

    @Override
    public WebServiceConnection createConnection(URI uri) throws IOException {
        HttpPost httpPost = new HttpPost(uri);
        if (isAcceptGzipEncoding()) {
            httpPost.addHeader(HttpTransportConstants.HEADER_ACCEPT_ENCODING, HttpTransportConstants.CONTENT_ENCODING_GZIP);
        }

        HttpHost targetHost = new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme());

        ((DefaultHttpClient) getHttpClient()).getCredentialsProvider().setCredentials(
                new AuthScope(targetHost.getHostName(), targetHost.getPort()), getCredentials());


        AuthCache authCache = new BasicAuthCache();
        BasicScheme basicAuth = new BasicScheme();
        authCache.put(targetHost, basicAuth);

        BasicHttpContext localContext = new BasicHttpContext();
        localContext.setAttribute(ClientContext.AUTH_CACHE, authCache);

        return new HttpComponentsConnection(getHttpClient(), httpPost, localContext);
    }

    protected abstract UsernamePasswordCredentials getCredentials();
}
{code}

Would it be possible to include a constructor for HttpComponentsConnection that takes a {{org.apache.http.protocol.HttpContext}}?

Thanks a lot",08/May/12 9:38 AM;arjen.poutsma;I'll take a look tomorrow.,"09/May/12 1:55 AM;arjen.poutsma;I've added a createContext(URI) template method that allows you to create a http context for a given URI. The default implementation returns null.

Hope that helps!","09/May/12 4:54 AM;barrypitman;Great, thanks!",,,,
IllegalStateException: Could not find SAAJ on the classpath after upgrading from 1.5.7 to 1.5.8,SWS-560,27755,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Fixed,arjen.poutsma,sslavic,sslavic,27/Aug/09 6:39 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,09/Nov/09 8:33 PM,1.5.8,,,,,,1.5.9,,,Core,,,,,1,,"Seems there is something wrong in fix for SWS-525 (r1427 on svn), saaj version doesn't get resolved well in case where a SOAP message's envelope has a body with elements that reference a non-declared namespace/prefix like in following:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Header/>
   <soapenv:Body>
      <ndns:DoSomethingRequest/>
   </soapenv:Body>
</soapenv:Envelope>

Such messages would previously (with SWS 1.5.7) result in SOAP Fault with Server faultcode and faultstring:

{{Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source:}}


while now (with SWS 1.5.8) a HTTP error 500 is returned with following stack trace:

java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init>(SaajSoapMessage.java:70)
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:168)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:387)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)

even though saaj api and impl 1.3 are on the path.",saaj 1.3,;09/Nov/09 8:29 PM;arjen.poutsma;5940,,,,,,,,,,,,,,,0,5940,,,0,5940,,,,,,,,,,,,,,,29/Aug/09 11:01 AM;sslavic;org.springframework.ws.spring-ws-core_SWS-560_fix.patch;https://jira.spring.io/secure/attachment/15651/org.springframework.ws.spring-ws-core_SWS-560_fix.patch,29/Aug/09 3:13 AM;sslavic;org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch;https://jira.spring.io/secure/attachment/15650/org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch,,,,,,,,,,221270400,,,,,2009-08-27 18:51:50.006,7567,false,arjen.poutsma(arjen.poutsma),,,,0|i040c7:,23429,19953,,,,,"27/Aug/09 6:51 PM;arjen.poutsma;Darn, we should fix this asap.","29/Aug/09 3:13 AM;sslavic;Attaching partial fix (org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch), which makes SaajSoapMessageException to be thrown, with appropriate error message, from SaajUtils.getSaajVersion(SOAPMessage soapMessage) method if envelope could not be accessed. Unit test included.

Still missing is part where instead of HTTP 500 error a SOAPFault should be returned - couldn't yet find which change made the difference.

In between the 1.5.7 and 1.5.8 versions AbstractWsSecurityInterceptor got new EndpointExceptionResolver exceptionResolver property (as part of resolving SWS-549 issue). Not sure if that change is related to this issue, but shouldn't AbstractWsSecurityInterceptor have some sort of a collection with all exception resolvers instead of just one (like in org.springframework.ws.server.MessageDispatcher), to give all the exception resolvers chance to try to resolve the exception in order they were configured? Similarly to MessagesDispatcher these exception resolvers should probably be automatically picked up ( @Autowired anyone :) ).","29/Aug/09 11:01 AM;sslavic;Here's another more complete patch ( org.springframework.ws.spring-ws-core_SWS-560_fix.patch ) which fixes changes made to AbstractWsSecurityInterceptor in SWS-549 (only single endpointExceptionResolver could be bound, and it had to be manually injected to AbstractWSSecurityInterceptor implementation, and there wasn't a way to have simple validation exception handling get triggered at all (resulting in HTTP 500 instead of SOAPFault in case when sole injected endpoint exception resolver didn't resolve exception and in case there was no endpoint exception resolver configured to the AbstractWSSecurityInterceptor).

To be backward compatible with pre SWS-549 behavior, additional parameter useEndpointExceptionResolvers has been added to AbstractWsSecurityInterceptor which defaults to false, thus by default using simple validation exception handling, but allowing use of endpoint exception resolvers to be configured - all endpoint exception resolvers are ""autowired"" to AbstractWSSecurityInterceptor, but different ones can be injected manually through configuration.

To solve issue where invalid message results in HTTP 500 instead of SOAPFault, I've adjusted WebServiceMessageReceiverObjectSupport.handleConnection method - if any unhandled exception is thrown during handling connection reception (like SaajSoapMessageException when trying to construct SaajSoapMessage), that exception would previously not get handled and only a HTTP 500 error would get returned; now with the patch soap fault with client/sender code is returned, and exception's message is used as fault string (just like in resolving validation exception). This part of the patch should probably be redone better.

Patch includes some javadoc comment typo fixes as well.","16/Sep/09 6:57 PM;arjen.poutsma;Thanks for the patches! Most appreciated!

I'm not entirely sure whether autodetection of exception resolvers for the security interceptor is such a good idea. The main reason for putting that behavior in the MessageDispatcher(Servlet) is that you typically don't configure the dispatcher explicitly, and hence they need to be detected. The interceptor, on the other hand, is always configured explicitly, so I see no harm in configuring the resolvers for it manually. Getting rid of the autodetection also removes the need of the ""useEndpointExceptionResolvers"" property, if I understand correctly.

Do you see my point? And if so, could you change your patch? I could do it too, of course, but I want to make sure you agree first :).

","24/Sep/09 11:26 AM;rmilstead;I tried 1.5.9-SNAPSHOT today and still have a problem similar to this.  The interesting thing is that it works fine when I deploy to a tomcat on my development box, but when I check the same project into svn and it gets built and deployed by hudson, the stack trace below is generated on the server.  Let me know if I can provide additional information, log files, configuration files, etc that may help you.

Note that I am using  <property name=""validationActions"" value=""Signature Timestamp Encrypt"" />   I do have the complete round trip working in my development environment.  This stack trace is masking whatever my real problem is in the alternate deployment environment.

I am also including a bit of my log showing the message sent from the same client to the deployment that works, so you can see the soap header.
{code:title=stack trace|borderStyle=solid}
2009-09-24 17:28:51,897 DEBUG (WebServiceMessageReceiverObjectSupport.java:114) - Accepting incoming [org.springframework.ws.transport.http.HttpServletConnection@2abd079e] to [http://desmond.hrworx.com:8380/formworx-ws/processService]
2009-09-24 17:28:51,923 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Envelope1_1Impl] implements SAAJ 1.3
2009-09-24 17:28:51,927 DEBUG (FrameworkServlet.java:588) - Could not complete request
java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:70)
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:168)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
{code}
{code:title=log|borderStyle=solid}
2009-09-24 16:29:28,123 TRACE (MessageDispatcher.java:163) - 
Received request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"">
<SOAP-ENV:Header xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
<wsse:BinarySecurityToken EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" 
ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""8978AAD679C263ABE212538313676254"" 
xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">

...

</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></SOAP-ENV:Body></SOAP-ENV:Envelope>]
2009-09-24 16:29:28,193 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Header1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:28,230 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.HeaderElement1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:28,234 DEBUG (AbstractAddressingEndpointMapping.java:177) - Request [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData] uses [WS-Addressing 1.0]
2009-09-24 16:29:28,284 DEBUG (AbstractActionEndpointMapping.java:95) - Looking up endpoint for action [http://hrworx.com/TaskList]
2009-09-24 16:29:28,289 DEBUG (MessageDispatcher.java:251) - Endpoint mapping [org.springframework.ws.soap.addressing.server.SimpleActionEndpointMapping@6a0ee670] maps request to endpoint [com.hrworx.formworx.ws.endpoint.TaskListEndpoint@15e3752b]
2009-09-24 16:29:28,290 DEBUG (SoapMessageDispatcher.java:119) - Handling MustUnderstand header {http://www.w3.org/2005/08/addressing}To
2009-09-24 16:29:28,291 DEBUG (Wss4jSecurityInterceptor.java:500) - Validating message [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData] with actions [Signature Timestamp Encrypt]
2009-09-24 16:29:29,944 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Body1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:29,945 DEBUG (AbstractLoggingInterceptor.java:160) - 
Request: <xml-fragment xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""/>
{code}
","09/Nov/09 8:33 PM;arjen.poutsma;Applied the patch, thanks! Also kudos for finding and fixing those typos in the code and javadoc.

I did not apply the change to WebServiceMessageReceiverObjectSupport, since that would have made the transport layer SOAP-specific, which it currently isn't. I also did not apply the detection of EndpointExceptionResolvers to  AbstractWsSecurityInterceptor, for reasons explained above.  ","17/Nov/09 5:39 PM;rhax;I noticed that this error emanated from a trivial typo on my part.
I had declared an element in my xsd with spaces in the beginning of its name attribute declaration.
like : <element name= "" annoyingElement""  type=""string""/>

and then got exactly the same error,

....SEVERE: Servlet.service() for servlet spring-ws threw exception
java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:70)............


 and thereafter landed on this page through search engine.
I've verified and replicated the error so i'm sure abt it now.","17/Nov/09 10:30 PM;arjen.poutsma;@Rahul:

Could you try a recent [snapshot|http://static.springsource.org/spring-ws/sites/1.5/downloads/snapshots.html] and see if that works better?","25/Nov/09 9:40 PM;rhax;Sorry for the delay.
I did try the snapshot.It now has a better error reporting.
Replicating the faulty namespace declaration and making the service call throws a clearer error description :

...SEVERE: Servlet.service() for servlet spring-ws threw exception
org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1231)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:333).......
",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,
Jaxb2Marshaller.createJaxbContext() doesn't respect provided classloader when checking JAXB version,SWS-550,27584,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,miguel,miguel,11/Aug/09 6:31 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,12/Aug/09 10:33 PM,1.5.7,,,,,,1.5.8,,,OXM,,,,,0,,"Jaxb2Marshaller.createJaxbContext() checks the JAXB version using JaxbUtils

        if (JaxbUtils.getJaxbVersion() < JaxbUtils.JAXB_2) {
            throw new IllegalStateException(
                    ""Cannot use Jaxb2Marshaller in combination with JAXB 1.0. Use Jaxb1Marshaller instead."");
        }

But this is incorrect because JaxbUtils is checking the version by seeing if it can load javax.xml.bind.Binder using the ClassUtils' getDefaultClassLoader. Instead it should use the supplied classloader set via setBeanClassLoader in Jaxb2Marshaller.",,;12/Aug/09 10:33 PM;arjen.poutsma;300,,,,,,,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:23.463,7577,false,arjen.poutsma(arjen.poutsma),,,,0|i01mm7:,9541,9578,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
integrate AbstractWsSecurityInterceptor with EndpointExceptionResolver,SWS-549,27571,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,nblair,nblair,10/Aug/09 5:20 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,16/Aug/09 7:31 PM,1.5.7,,,,,,1.5.8,,,Security,,,,,0,,"AbstractWsSecurityInterceptor is not currently integrated with Spring Web Services' EndpointExceptionResolver.

If an exception occurs during validation, AbstractWsSecurityInterceptor's own handleValidationException generates a SoapFault on it's own and populates the message with the input parameter ex's getMessage result.

A common cause of this behavior would be integration with a ClientUserDetailsService; in this example the loadUserByUsername method throws a UsernameNotFoundException.

This UsernameNotFoundException gets wrapped by a org.apache.ws.security.WSSecurityException (twice over), which in turn gets caught and turned into a org.springframework.ws.soap.security.wss4j.Wss4jSecurityValidationException, which is caught and passed into the handleValidationException method.

It would be useful to let the developer customize the SoapFault when these validation exceptions occur.
The obvious approach (to me at least :D) is to delegate to an EndpointExceptionResolver, particularly since this resolver is already likely being used within the Spring Web Services application.

I have a proposed patch that adds an EndpointExceptionResolver as a private field (with a public setter) and a re-factored handleValidationException method that allows the endpointExceptionResolver to step in if present.

This allows the developer to add their own custom message to the soap fault instead of (the current faultstring when these validation exceptions occur):

The security token could not be authenticated or authorized; nested exception is: 
	org.apache.ws.security.WSSecurityException: The security token could not be authenticated or authorized; nested exception is org.apache.ws.security.WSSecurityException: The security token could not be authenticated or authorized; nested exception is: 
	org.apache.ws.security.WSSecurityException: The security token could not be authenticated or authorized









",,;16/Aug/09 7:31 PM;arjen.poutsma;180,,,,,,,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,10/Aug/09 5:21 AM;nblair;interceptor-exceptionResolver.patch.txt;https://jira.spring.io/secure/attachment/15605/interceptor-exceptionResolver.patch.txt,,,,,,,,,,,221270400,,,,,2009-08-16 19:31:48.579,7578,false,arjen.poutsma(arjen.poutsma),,,,0|i01p4f:,9947,9963,,,,,10/Aug/09 5:21 AM;nblair;Attached proposed patch to integrate EndpointExceptionResolver with AbstractWsSecurityInterceptor.,10/Aug/09 5:22 AM;nblair;I should mention the patch is based off revision 1433 (trunk retrieved today - Mon Aug 10).,16/Aug/09 7:31 PM;arjen.poutsma;Done. Thanks for the patch!,"23/Sep/10 6:43 AM;hurragutt;Instead of introducing the EndpointExceptionResolver in this Interceptor, would it not be better to just let the exception flow up to the MessageDispatcher, where the resolvers already are configured (with sensible defaults)

And as this is not documented anywhere unlike the exception resolving in the MessageDispatcher (http://static.springsource.org/spring-ws/sites/1.5/reference/html/server.html#server-endpoint-exception-resolver), it is too easy to miss out on or forget this extra configuration step.

In my opinion this could be done for both the client and endpoint handleRequest/handleResponse methods by just removing the catch clauses.
I would be happy to contribute a patch for this if needed.

Regards,
Paul Nyheim",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,
Expose suppressNamespace and suppressXSIType as properties to CastorMarshaller,SWS-548,27555,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,ajeans,ajeans,07/Aug/09 3:28 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,16/Aug/09 7:49 PM,1.5.7,,,,,,1.5.8,,,OXM,,,,,0,,"The CastorMarshaller class supports customization of the underlying org.exolab.castor.Marshaller with the customizeMarshaller method.

However, some properties are already directly exposed to spring's CastorMarshaller as settable fields. This lets users add properties in the spring configuration rather than subclass CastorMarshaller.

I am asking for the addition of two fields to the standard properties of CastorMarshaller, so that this subclassing is not needed anymore.
- suppressXSIType
- suppressNamespaces

This would mean adding two fields in CastorMarshaller, adding the two corresponding setters, and adding the following code at the beginning of the customizeMarshaller method:

    protected void customizeMarshaller(Marshaller marshaller) {
		marshaller.setSuppressNamespaces(this.suppressNamespaces);
		marshaller.setSuppressXSIType(this.suppressXSIType);
                [....]
    }

Proper defaults can be given to the two fields so that today's behaviour is not affected by this change unless the fields are set by the spring configuration.

",,;16/Aug/09 7:49 PM;arjen.poutsma;960,,,,,,,,,,,,,,,0,960,,,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-08-16 19:49:59.938,7579,false,arjen.poutsma(arjen.poutsma),,,,0|i01mmf:,9542,9579,,,,,"16/Aug/09 7:49 PM;arjen.poutsma;Done, both in SWS and SPR, the new home of OXM.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException on AxiomSoap11Body.addFault,SWS-545,27459,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,jeremyhare,jeremyhare,27/Jul/09 5:11 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,02/Aug/09 7:05 PM,1.5.7,,,,,,1.5.8,,,Core,,,,,0,,"I have created a custom ExceptionResolver below:

{code:title=MyExceptionResolver .java}
public class MyExceptionResolver  extends AbstractSoapFaultDefinitionExceptionResolver {
	@Override
protected SoapFaultDefinition getFaultDefinition(Object endpoint,
		Exception ex) {		
	QName messageDeliveryFaultQName = new QName(INVOKER_NS_URI, ""MessageDeliveryFault"", ""invoker"");
	QName messageDeliveryFaultQNameNOPREFIX = new QName(INVOKER_NS_URI, ""MessageDeliveryFault"");

	if (ex instanceof WebServiceTransportException) {
		SoapFaultDefinition soapFaultDefinition = new SoapFaultDefinition();
		soapFaultDefinition.setFaultCode(messageDeliveryFaultQNameNOPREFIX );
			
		soapFaultDefinition.setFaultStringOrReason(ex.getMessage());	
		return soapFaultDefinition;
	}
	return null;
}
}
{code}
	
if I use the messageDeliveryFaultQNameNOPREFIX Qname as the fault code I get:

{code}
java.lang.IllegalArgumentException: Could not resolve namespace of code [{urn:www.thiess.com.au:services:eProcurement:QuadremInvoker:v1}MessageDeliveryFault]
	at org.springframework.ws.soap.axiom.AxiomSoap11Body.setValueText(AxiomSoap11Body.java:117)
	at org.springframework.ws.soap.axiom.AxiomSoap11Body.addFault(AxiomSoap11Body.java:92)
	at org.springframework.ws.soap.server.endpoint.AbstractSoapFaultDefinitionExceptionResolver.resolveExceptionInternal(AbstractSoapFaultDefinitionExceptionResolver.java:89)
	at org.springframework.ws.server.endpoint.AbstractEndpointExceptionResolver.resolveException(AbstractEndpointExceptionResolver.java:106)
	at org.springframework.ws.server.MessageDispatcher.processEndpointException(MessageDispatcher.java:311)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:235)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:168)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:523)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:463)
{code}

The other  Qname with a prefix works fine.","OC4J 10.1.3.3
spring ws 1.5.7
axiom 1.2.8
Java HotSpot(TM) Server VM (build 1.5.0_06-b05, mixed mode)",;02/Aug/09 7:05 PM;arjen.poutsma;780,,,,,,,,,,,,,,,0,780,,,0,780,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:46.254,7582,false,arjen.poutsma(arjen.poutsma),,,,0|i040db:,23434,19959,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Update OSGi headers to accept Spring 3.0,SWS-541,27323,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,15/Jul/09 5:56 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,03/Aug/09 7:22 PM,1.5.7,,,,,,1.5.8,,,,,,,,1,,"We need to update our OSGi headers to accept Spring 3.0 (currently it's [2.0, 3.0) ).",,;03/Aug/09 7:22 PM;arjen.poutsma;1200,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,7586,false,arjen.poutsma(arjen.poutsma),,,,0|i03rs7:,22043,18512,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Adding XML declaration to a response,SWS-540,27300,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,jterstiege,jterstiege,13/Jul/09 2:11 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,07/Apr/10 10:41 PM,1.5.7,,,,,,2.0 M2,,,Core,,,,,1,,"We were asked to add the XML declaration {code:xml}<?xml version=""1.0"" encoding=""UTF-8""?>{code} to the response delivered by our web service endpoints.

Since SAAJ 1.2 there seems to be a way to enable the declaration by setting the property {code}WRITE_XML_DECLARATION{code} on the soap message: http://java.sun.com/webservices/saaj/faq.html

Are there any plans to add this feature to the current Spring ws implementation? We are using classes that implement the {code}PayloadEndpoint{code} interface in combination with the {code}PayloadRootQNameEndpointMapping{code}.",,;07/Apr/10 10:40 PM;arjen.poutsma;2760,,,,,,,,,,,,,,,0,2760,,,0,2760,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-08-27 20:44:24.079,7587,false,arjen.poutsma(arjen.poutsma),,,,0|i040dr:,23436,19963,http://forum.springsource.org/showthread.php?t=49412,,,,"27/Aug/09 8:44 PM;nino;This would also fix the problem we are having described in this post:
http://forum.springsource.org/showthread.php?t=76216",07/Mar/10 7:51 PM;dart0;It is possible (and simple) to create an Interceptor to achieve this. It would be great if such interceptor was part of Spring WS.,07/Apr/10 10:41 PM;arjen.poutsma;Done. I've added a 'messageProperties' property to SaajSoapMessageFactory. Properties set this way will be applied to any created SaajSoapMessage,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
Add getters to WS-A ActionCallback,SWS-537,27154,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,skaffman,skaffman,01/Jul/09 8:25 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,06/Jan/10 1:13 AM,1.5.7,,,,,,1.5.9,,,,,,,,0,,Please add getter methods for the various properties of org.springframework.ws.soap.addressing.client.ActionCallback. It's difficult to extend this class without them.,,;06/Jan/10 1:13 AM;arjen.poutsma;660,,,,,,,,,,,,,,,0,660,,,0,660,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:20.143,7590,false,arjen.poutsma(arjen.poutsma),,,,0|i040dz:,23437,19965,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Request JMS correlation id field not used to set response message JMS correlation id,SWS-534,27073,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Blocker,Fixed,arjen.poutsma,gflood,gflood,24/Jun/09 6:51 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,30/Jul/09 8:12 PM,1.5.4,,,,,,1.5.8,,,,,,,,1,,"In JmsReceiverConnection.onSendBeforeWrite(...) the following code sets the response correlation id field :-

>> responseMessage.setJMSCorrelationID(requestMessage .getJMSMessageID());

There does not seem to be a check on the inbound request's correlation id as in the following code from JmsInvokerServiceExporter.createResponseMessage(.. .) 

>>String correlation = request.getJMSCorrelationID();
>>if (correlation == null) {
>>correlation = request.getJMSMessageID();
>>}
>>response.setJMSCorrelationID(correlation);

The above logic has also been implemented in MessageListnenerAdapter and I am looking for the same behaviour in JmsReceiverConnection.onSendBeforeWrite(...).

This seems to be related to http://jira.springframework.org/browse/SPR-4647
",Windows XP SP2,;30/Jul/09 8:12 PM;arjen.poutsma;420,,,,,,,,,,,,,,,0,420,,,0,420,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-06-24 19:03:37.854,7593,false,arjen.poutsma(arjen.poutsma),,,,0|i040e7:,23438,19968,http://forum.springsource.org/showthread.php?p=247490#post247490,,,,"24/Jun/09 7:03 PM;arjen.poutsma;This is in accordance with the SOAP over JMS spec, see http://www.w3.org/TR/2009/CR-soapjms-20090604/#responder-transition","24/Jul/09 4:15 AM;somjitc;I am also  facing the same problem.
I am using the oracle service bus to post the message to the request queue.
I am seeting the response correlation pattern as correlation id.
The spring web serivice picks up the message from the request queue and after procerssing it sends the response back to the response queue.But the message is not getting picked up from the response queue.
But when i use Message Id as the respose correlation pattern,the message is gettnig picked up from the response queue.
This means by default, the request message id is set to the response correlation id.
when correlation id pattern is used then the request correlation id must be copied to the response correlation id. This is the reason why the Oracle service bus is not able to identify the message and hence not getting picked up.
The condition check for

if (correlation id==null)
response.setCorrelationID(request,getMessageId)
else
response.setCorrelationID(request,getCorrelationID)

Please fix this bug .","26/Jul/09 6:21 PM;arjen.poutsma;We might be able to make this a configurable feature, i.e. you can pick whether you want response messages to use the request's message id or correlation id.",26/Jul/09 7:07 PM;gflood;I'm happy that the Spring source is correctly implementing the spec. Possibly having a configurable feature with the current behaviour being the default would be a decent compromise. We have been able to work around the issue such that the message id being used as the correlation id is acceptable for our solution.,"30/Jul/09 8:12 PM;arjen.poutsma;I've decided against making it an option, and went for an automatic fallback instead of explicit configuration, just like JmsInvokerServiceExporter.","03/Aug/09 3:40 PM;somjitc;Thanks for the help.
How should i use it now.Is there any separate updated jar file available having this option?",03/Aug/09 6:34 PM;arjen.poutsma;SNapshots are available at http://static.springsource.org/spring-ws/sites/1.5/downloads/snapshots.html,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,
Document use of WsdlDefinition when not using MessageDispatcherServlet,SWS-527,26928,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,skaffman,skaffman,16/Jun/09 12:31 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,03/Aug/09 7:37 PM,1.5.7,,,,,,1.5.8,,,Documentation,,,,,0,,"A lot of the logic for handling publishing of WSDL using WsdlDefinition beans is handled in the MessageDispatcherServlet. In cases where this servlet is not being used, this makes it quite awkward to use the WsdlDefinition stuff.

Specifically, MessageDispatcherServlet has an explicit bit of code hor dealing with WSDL requests, and it doesn't use the HandlerMapping framework - it intercepts the request before getting that far. When using the vanilla DispatcherServlet (using the guidelines in the ref docs), all requests are routed to the MessageDispatcher, which knows nothing about WSDL requests.

Can either either provuide an easier mechanism for handling this, or improve the ref docs to demonstrate how to publish WSDL when using DispatcherServlet?",,;03/Aug/09 7:37 PM;arjen.poutsma;660,,,,,,,,,,,,,,,0,660,,,0,660,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-06-16 00:54:49.437,7600,false,arjen.poutsma(arjen.poutsma),,,,0|i01q2n:,10101,10097,,,,,"16/Jun/09 12:54 AM;arjen.poutsma;Actually, most of the logic for dealing with WSDLs is in the WsdlDefinitionHandlerAdapter , so you need to wire that up. In a plain DispatcherServlet scenario, you can map all *.wsdl requests to the WsdlDefinition beans like so:

{code:xml}
<beans>

    <bean class=""org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter""/>
    <bean class=""org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter""/>

    <bean class=""org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"">
        <property name=""mappings"">
           <props>
             <prop key=""*.wsdl"">myServiceDefinition</prop>
           </props>
        </property>
        <property name=""defaultHandler"" ref=""messageDispatcher""/>
    </bean>

    <bean id=""messageDispatcher"" class=""org.springframework.ws.soap.server.SoapMessageDispatcher""/>

    <bean id=""myServiceDefinition"" class=""org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition"">
       <prop name=""wsdl"" value=""/WEB-INF/myServiceDefintion.wsdl""/>
    </bean>

</beans>
{code}


See [http://static.springframework.org/spring/docs/2.5.x/reference/mvc.html#mvc-handlermapping-urlhandlermapping] for more info.","16/Jun/09 12:58 AM;skaffman;Ah, that's pretty easy, right enough. Perhaps a line or two in the Spring-WS docs? ","16/Jun/09 1:00 AM;arjen.poutsma;That's a good idea. I'll re-open, and change the title to something more fitting.",03/Aug/09 7:37 PM;arjen.poutsma;Added documentation.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,
SaajSoapMessage can get wrong SAAJ version,SWS-525,26874,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,skaffman,skaffman,09/Jun/09 9:21 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,31/Jul/09 12:34 AM,1.5.7,,,,,,1.5.8,,,,,,,,0,,"The getImplementation() method of SaajSoapMessage uses SaajUtils to determine which version of SAAJ is being used. However, SaajUtils uses messageFactory.newInstance() to do this, which returns the default MessageFactory. This may not be the same MessageFactory that was used to create the SOAPMessage which was used to construct the SaajSoapMessage.

In some cases (which is how i discovered this problem), the call to MessageFactory.newInstance() as invoked by SaajUtils fails completely. In my case it's because I'm using a JBoss environment with their WebServices stack removed, but it still looks for the JBoss SAAJ implementation and fails.

I think SaajUtils isSaaj13() and isSaaj12() need to be rewritten to be given the MessageFactory on which to operate, rather than using the environment default.",,;31/Jul/09 12:34 AM;arjen.poutsma;9060,,,,,,,,,,,,,,,0,9060,,,0,9060,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-07-31 00:34:33.265,7602,false,arjen.poutsma(arjen.poutsma),,,,0|i040ef:,23439,19975,,,,,31/Jul/09 12:34 AM;arjen.poutsma;Done. Can you try a recent snapshot and see if it works?,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
CLONE -Namespace prefix in attribute value not resolved correctly,SWS-523,26781,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Won't Fix,arjen.poutsma,dart0,dart0,01/Jun/09 11:25 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,24/Aug/09 8:14 PM,1.5.6,1.5.7,,,,,1.5.8,,,Core,,,,,1,,"I have following SOAP request. 

{noformat} 
<soapenv:Envelope  xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} 

When umarshalling is called only the payload is passed to the unmarshaller. So DOM equivalent of following is used

{noformat} 
<ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
</ns:getRights>
{noformat} 

Please note that namespace prefix ns is not defined. Usually this is not a problem since in DOM namespaces are already resolved. There is one exception - attribute value. When XmlBeans try to unmarshall the element, they are not able to resolve the namespace and do not work correctly. I assume that Spring-WS should somehow take this situation into account. 

If following request is used (the only difference is position of ns prefix declaration) everything works fine

{noformat} 
<soapenv:Envelope  xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0""> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} ",,;20/Aug/09 9:06 PM;arjen.poutsma;9180,;24/Aug/09 8:15 PM;arjen.poutsma;115200,;21/Sep/09 9:15 PM;arjen.poutsma;23880,,,,,,,,,,,,,0,148260,,,0,148260,,,,,,,,,,,,SWS-509,,,01/Jun/09 11:58 PM;dart0;test-ws-1.0-SNAPSHOT-src.zip;https://jira.spring.io/secure/attachment/15441/test-ws-1.0-SNAPSHOT-src.zip,01/Jun/09 11:28 PM;dart0;test-ws-1.0-SNAPSHOT-src.zip;https://jira.spring.io/secure/attachment/15440/test-ws-1.0-SNAPSHOT-src.zip,,,,,,,,,,221270400,,,,,2009-06-18 19:50:55.202,7604,false,arjen.poutsma(arjen.poutsma),,,,0|i03idb:,20518,17687,http://forum.springsource.org/showthread.php?t=71673,,,,01/Jun/09 11:26 PM;dart0;Clone of SWS-509 which in my opinion was not resolved in 1.5.7,"01/Jun/09 11:28 PM;dart0;Project with tests. Two valid equivalent SOAP request, one fails, the other one succeeds.",01/Jun/09 11:58 PM;dart0;Test project fixed,"18/Jun/09 7:50 PM;janssk1;Another strange effect. If the namespace is defined in both the envelope and the body, the namespace is not passed to the marshaller. 

So: 

<soapenv:Envelope  xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0""> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>

Does not work either. Apparantly, the namespace is automatically removed from the body if it is already define in the envelope.",20/Jul/09 9:13 PM;dart0;JAXB marshaller works in both cases,"24/Aug/09 8:14 PM;arjen.poutsma;I've been hacking this for a couple of days now, but I can't find a satisfactory solution. So I'm closing as Won't Fix for now.

The problem here seems to be that XMLBeans will not query the DOM tree for the resolution of the namespace of the attribute value. In the end, what we're doing in the SAAJ message to return the payload source simply comes down to:

{code}
SOAPMessage saajMessage = ...
Element element = saajMessage.getSoapBody();
return new DOMSource(element);
{code}

We don't manipulate the DOM tree at all for getPayloadSource(), since that would result in a lot of overhead which is mostly unnecessary: all the necessary namespace information can be retrieved through querying the DOM tree. The problem described here is that XMLBeans does not do that, which is more a XMLBeans issue than a Spring-WS one.

",04/Jan/10 9:07 PM;dart0;Issue created in XMLBeans project JIRA https://issues.apache.org/jira/browse/XMLBEANS-427,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,
UnsupportedOperationException During Validation After Upgrade From 1.5.6 to 1.5.7,SWS-521,26719,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,jrduncans,jrduncans,27/May/09 7:03 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,10/Nov/09 2:39 AM,1.5.7,,,,,,1.5.9,,,,,,,,1,,"After upgrading from 1.5.6 to 1.5.7, a test where I have client-side validation turned on failed with the following stack trace.  Reverting to 1.5.6 made the problem disappear:

java.lang.UnsupportedOperationException
        at java.util.AbstractList.add(AbstractList.java:131)
        at java.util.AbstractList.add(AbstractList.java:91)
        at org.springframework.xml.namespace.SimpleNamespaceContext.bindNamespaceUri(SimpleNamespaceContext.java:108)
        at org.springframework.xml.stream.StaxStreamXmlReader.startPrefixMapping(StaxStreamXmlReader.java:171)
        at org.springframework.xml.stream.StaxStreamXmlReader.handleStartElement(StaxStreamXmlReader.java:145)
        at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:80)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
        at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
        at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
        at javax.xml.validation.Validator.validate(Validator.java:127)
        at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
        at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.handleRequest(AbstractValidatingInterceptor.java:171)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:542)
        at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:394)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:384)
",,;30/Jul/09 8:02 PM;arjen.poutsma;300,,,,,,,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-07-30 19:45:08.67,7606,false,arjen.poutsma(arjen.poutsma),,,,0|i040en:,23440,19976,,,,,30/Jul/09 7:45 PM;arjen.poutsma;Can you supply me with a sample XML payload which triggers this behavior? That would make it a lot easier to solve.,30/Jul/09 8:02 PM;arjen.poutsma;I think I fixed it. Can you try a recent snapshot and see if it works now?,"27/Aug/09 1:48 AM;jrduncans;I'm sorry I wasn't able to get around to testing with a snapshot before the 1.5.8 release.  I just tried with the 1.5.8 release and got the same stack trace (with a few line numbers changed in some classes):

java.lang.UnsupportedOperationException
        at java.util.AbstractList.add(AbstractList.java:131)
        at java.util.AbstractList.add(AbstractList.java:91)
        at org.springframework.xml.namespace.SimpleNamespaceContext.bindNamespaceUri(SimpleNamespaceContext.java:115)
        at org.springframework.xml.stream.StaxStreamXmlReader.startPrefixMapping(StaxStreamXmlReader.java:171)
        at org.springframework.xml.stream.StaxStreamXmlReader.handleStartElement(StaxStreamXmlReader.java:145)
        at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:80)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
        at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
        at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
        at javax.xml.validation.Validator.validate(Validator.java:127)
        at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
        at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.handleRequest(AbstractValidatingInterceptor.java:171)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:542)
        at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:394)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:384)
",27/Aug/09 1:50 AM;arjen.poutsma;Can you supply me with a sample XML payload which triggers this behavior? That would make it a lot easier to solve.,"27/Aug/09 2:16 AM;jrduncans;The following string triggers the exception:

""<r:GetAllRuleSetsRequest xmlns='http://cid.cormineid.com/service/rules' xmlns:r='http://cid.cormineid.com/service/rules'/>""

The following modification does not:

""<GetAllRuleSetsRequest xmlns='http://cid.cormineid.com/service/rules' />""

So, it looks like it's when there's the same namespace bound to multiple names.  Please let me know if you're able to reproduce, as I plan on just fixing up the XML in these tests to avoid the problem...",10/Nov/09 2:39 AM;arjen.poutsma;Really fixed this time. Could you try a recent snapshot and give it a shot?,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,
Echo sample application fails to build due to missing dependency,SWS-518,26672,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,dussab,dussab,22/May/09 1:04 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,30/Jul/09 7:42 PM,1.5.7,,,,,,1.5.8,,,Samples,,,,,0,,"When building the samples applications i receive the following error:

--------------------------------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.springframework.ws:echo
POM Location: C:\downloads\spring-ws-1.5.7\samples\echo\pom.xml
Validation Messages:

    [0]  'dependencies.dependency.version' is missing for stax:stax-api


Reason: Failed to validate POM for project org.springframework.ws:echo at C:\dow
nloads\spring-ws-1.5.7\samples\echo\pom.xml
-----------------------------------------------------------------------------------
The workaround was to add the following entry to the spring-ws-parent-1.5.7.pom

<dependency>
	<groupId>stax</groupId>
	<artifactId>stax-api</artifactId>
	<version>1.0.1</version>
</dependency>
            ","Windows XP, Sun JDK 1.5",;30/Jul/09 7:42 PM;arjen.poutsma;240,,,,,,,,,,,,,,,0,240,,,0,240,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:29.697,7609,false,arjen.poutsma(arjen.poutsma),,,,0|i01n2f:,9614,9651,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Soap response validation errors after update to 1.5.7,SWS-517,26670,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,couzteau,couzteau,22/May/09 10:15 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,13/Aug/09 9:52 PM,1.5.7,,,,,,1.5.8,,,OXM,XML,,,,0,,"Upgrade from SpringWS 1.5.6 to 1.5.7 and update.  - No code changes. 
After upgrade error ""java.lang.ArrayIndexOutOfBoundsException: -1"" was thrown during validation. Turning validation off works as a workaround.

my Soap API has 130 calls. Most respones were working fine, not all were tested. I wonder if It might have something to do with the size of the response, all other tested responses were pretty small,  see forum post for bean configurations, errors and response sample.


","Mac OSX 10.5.6, Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b06-284), JBoss 4.2.2GA, Spring 2.5.6, hibernate 3.3.1GA, Maven version: 2.0.9, 

",;12/Aug/09 10:27 PM;arjen.poutsma;14280,;12/Aug/09 10:55 PM;arjen.poutsma;18000,;13/Aug/09 9:52 PM;arjen.poutsma;4020,,,,,,,,,,,,,0,36300,,,0,36300,,,,,,,,,,,,,,,13/Aug/09 3:40 AM;couzteau;GMK-Response.xml;https://jira.spring.io/secure/attachment/15609/GMK-Response.xml,22/May/09 10:16 AM;couzteau;GetMetaDataKeysResonse.xml;https://jira.spring.io/secure/attachment/15407/GetMetaDataKeysResonse.xml,06/Aug/09 6:15 AM;couzteau;codexws.xsd;https://jira.spring.io/secure/attachment/15594/codexws.xsd,,,,,,,,,221270400,,,,,2009-08-03 20:01:49.152,7610,false,arjen.poutsma(arjen.poutsma),,,,0|i01mmn:,9543,9580,http://forum.springsource.org/showthread.php?p=242464#post242464,,,,22/May/09 10:16 AM;couzteau;Full response.,"03/Aug/09 8:01 PM;arjen.poutsma;I tried to reproduce this locally, but it works for me. 

Could you try a recent snapshot (http://static.springsource.org/spring-ws/sites/1.5/downloads/snapshots.html) and see if this still occurs?

If it does, please attach your XSD schema. I cannot reproduce it fully without the schema...","06/Aug/09 6:14 AM;couzteau;Thanks Arjen - I did try with the latest snapshot and can still reprom, attaching wsdl",06/Aug/09 6:16 AM;couzteau;schema added (not the wsdl).,"12/Aug/09 11:01 PM;arjen.poutsma;Thanks for the schema. Even with that, I still can't reproduce it: the GetMetaDataKeysResonse.xml you attached validates fine. See the method testAxiom in 

https://fisheye.springsource.org/browse/spring-ws/trunk/core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java?r=1435

DId you replace both the XML and the Core module with snapshots? I did some fixes to the XML module which are related...","13/Aug/09 3:32 AM;couzteau;yes, I used the 1.5.8-SNAPSHOT for all of the following maven artefacts:
spring-xml, 
spring-ws-core, 
spring-ws-core-tiger, 
spring-oxm, 
spring-oxm-tiger, 
spring-ws-security.",13/Aug/09 3:40 AM;couzteau;Here is the full response that I logged using Spring-WS 1.5.6 - The previous response was shortened.,"13/Aug/09 3:51 AM;couzteau;Tried again - just to make sure - still seeing ArrayIndexOutOfBoundsException: -1 in 

	at com.sun.org.apache.xerces.internal.util.NamespaceSupport.popContext(NamespaceSupport.java:184)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.endPrefixMapping(ValidatorHandlerImpl.java:373)
	at org.springframework.xml.stream.StaxStreamXmlReader.handleEndElement(StaxStreamXmlReader.java:186)
	at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:85)
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.process(ValidatorImpl.java:192)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:147)
        .....

I assume that in PayloadValidatingInterceptorTest  you can set    
 private static final String VALID_MESSAGE = ""GMK-Response.xml""; 
to my attached response and then run testAxiom();

Which should repro the problem unless my app is still doing something else - I'd be happy to give you more info - but I don't know what to look for.
",13/Aug/09 8:55 AM;couzteau;FYi: I have run my test suite against the app that uses the 1.5.8-SNAPSHOT of spring web services. There are no other calls that have this problem. ,"13/Aug/09 8:58 PM;arjen.poutsma;I can finally reproduce it. It seems to be related to Xerces in the JDK: the test runs fine when using JDK 1.6, but under 1.5, it fails.

As a workaround, you can try upgrading to a recent version of Xerces (thus overriding the com.sun.org.apache.xerces that's built in the JDK). 

I will also investigate further, and see if I can fix this.",13/Aug/09 9:53 PM;arjen.poutsma;I think I've fixed it. Can you try a recent snapshot (as of tonight) and try again?,"14/Aug/09 5:22 AM;couzteau;verified fix with latest 1.5.8 Snapshot. (Yay!)

Thank you! much appreciated.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,
Add a new HttpsUrlConnectionMessageSender implementation to allow customization of certificate management,SWS-468,25173,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,alex_marshall,alex_marshall,21/Dec/08 10:44 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,20/Aug/09 11:44 PM,1.5.5,,,,,,1.5.8,,,Core,,,,,2,,"Currently, there are only two WebServiceMessageSender implementations, and neither easily allow communication with web service gateways that use HTTPS / SSL.  Specifically, those servers that use self-signed certificates.  A new HttpsUrlConnectionMessageSender should be created that allows manipulation of the TrustManager and KeyManager assigned to the URLConnection created by HttpUrlConnectionMessageSender.  This would make using self signed certificates considerably easier.",,;20/Aug/09 11:44 PM;arjen.poutsma;9360,,,,,,,,,,,,,,10800,1440,9360,86%,10800,1440,9360,,,,,,,,,,,,,,,21/Dec/08 10:47 PM;alex_marshall;message_sender.zip;https://jira.spring.io/secure/attachment/14981/message_sender.zip,,,,,,,,,,,221270400,,,,,2009-08-20 23:44:54.431,7651,false,arjen.poutsma(arjen.poutsma),,,,0|i040hz:,23455,19997,,,,,"21/Dec/08 10:47 PM;alex_marshall;The attached file contains at HttpsUrlConnectionMessageSender implementation and corresponding X509TrustManager and HostNameVerifier implementations to ease using self-signed certificates with Spring WS.
",20/Aug/09 11:44 PM;arjen.poutsma;Done. Thanks for the patch!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,
XMPP support,SWS-428,23921,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,09/Sep/08 12:52 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,23/Apr/10 1:43 AM,,,,,,,2.0 M2,,,Core,,,,,1,,"Adding support for XMPP (jabber) transports.

We probably want to use the Smack library (http://www.igniterealtime.org/projects/smack/index.jsp) as a Java library for doing XMPP.",,;23/Apr/10 1:42 AM;arjen.poutsma;30480,,,,,,,,,,,,,,,0,30480,,,0,30480,,,,,,,,,,,,,,,31/Oct/08 5:27 AM;hikage;xmpp-springws-smack.rar;https://jira.spring.io/secure/attachment/14824/xmpp-springws-smack.rar,,,,,,,,,,,221270400,,,,,2008-10-31 05:27:39.869,7687,false,arjen.poutsma(arjen.poutsma),,,,0|i02m87:,15310,14548,,,,,"31/Oct/08 5:27 AM;hikage;First version of XMPP transport for Spring WS, based on Smack API.
It is not yet finished, I am always working on it.

Actually, the Smack API is not yet on Maven Central repository, but according to Mark Tucker, It will be put on it soon ( two or three weeks ).
Certainly with the 3.1 release, so I will upgrade the project on it.","31/Oct/08 6:01 AM;arjen.poutsma;Great stuff, thanks! I will check it out soon :)",23/Apr/10 1:43 AM;arjen.poutsma;Done. Thanks for your contribution!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
Full streaming WebServiceMessage/SoapMessage,SWS-352,21986,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,03/May/08 12:55 AM,04/May/12 7:03 AM,10/May/19 2:37 AM,10/Nov/10 3:10 AM,,,,,,,2.0 RC1,,,Core,,,,,16,,"Currently, WebServiceMessage and its subinterface SoapMessage offer the getSource() and getResult() methods to the contents of the payload. When an endpoint is invoked, the response Source it returns is transormed into the Result of the response message. This transformation has the benefit that the message is always in sync, i.e. the writeTo() method will write the current contents of the message. The downside is that this transformation is rather slow, since a DOM/Axiom tree needs to be built.

As an alternative, we could do this conversion lazily: if we introduce a setSource(Source) method on the WebServiceMessage (or an sub-interface which extends WebServiceMessage), we could simply set the result of the endpoint on the response message, not creating a DOM tree (yet). Later, when the message is written to the transport stream, we directly transform the set payload Source to the stream, thus saving overhead.

In a way, this is similar to SWS-302, but has the extra benefit that the payload contents is not kept in a buffer.

",,;25/Aug/10 6:32 AM;arjen.poutsma;31260,;10/Nov/10 3:09 AM;arjen.poutsma;2160,,,,,,,,,,,,,144000,110580,33420,23%,144000,110580,33420,,,,,,,,,,,,SWS-302,,,11/Mar/10 11:20 PM;sandermak;axiom-jaxb-fullcontent-streaming.zip;https://jira.spring.io/secure/attachment/16281/axiom-jaxb-fullcontent-streaming.zip,11/Dec/08 12:22 AM;olegk;full-content-streaming-axiom.zip;https://jira.spring.io/secure/attachment/14951/full-content-streaming-axiom.zip,,,,,,,,,,221270400,,,,,2008-05-26 16:11:33.203,7758,false,arjen.poutsma(arjen.poutsma),,,,0|i031on:,17815,17220,,,,,"26/May/08 4:11 PM;jim;Doing a delayed transform from a Source to a Result is interesting and would avoid needing a temporary buffer.  But I wonder if doing a transform for these potentially large payloads might introduce extra processing (like possibly parsing the Source) that could be avoided.  It might also be tough to do StAX-based (or other on-the-fly transforms/msg generation) endpoints without creating some kind of Source that temporarily stored payload data.

What if you were able to somehow delay the invocation of the endpoint until the response was actually being written to the transport stream?  Maybe a variation of MessageDispatcher could instead of calling the endpoint, it could put a placeholder payload node into the response message holding onto the endpoint (with Axiom maybe a DataSource subclass via the SourcedElement mechanism, not sure if you'd even do streaming with SAAJ), such that when the response message is being serialized to the transport, the endpoint would get called.  The response message could maybe be setup so that as the endpoint generates its response, that the Result would write directly to the transport instead of to the message object. 

Offhand it seems like something like this (if it worked) might support endpoints that do large response message generation themselves (via transformations, logic, etc) and for endpoints that primarily get the large response from an external source (db, files, hosts, ...).","11/Dec/08 12:22 AM;olegk;Folks

I am submitting for your consideration a workaround for Spring WS 1.5.5 extending the stock version of the Axiom based SOAP object model with the support for full content streaming. One of my goals was to avoid having to patch Spring WS core source code even if that came at an expense of certain code duplication. I fully realize this is far from being a comprehensive solution to the problem but it still might be a reasonable starting point.

Here's the basic concept of the extended API

EntityResult represents a transformation result backed by an arbitrary content entity.

-------------------------------------
public interface EntityResult extends Result {

    void setContentEntity(ContentEntity entity);
    
}
-------------------------------------

ContentEntity is an abstract entity capable of streaming its content out to a OutputStream / Writer

-------------------------------------
public interface ContentEntity {

    QName getQName();
    
    boolean isRepeatable();
    
    InputStream getContent() throws IOException;
    
    void writeTo(OutputStream outstream) throws IOException;
    
    void writeTo(Writer writer) throws IOException;
    
}
-------------------------------------

XmlObjectEntity is an example of a content entity based on XMLBeans API.

-------------------------------------
public class XmlObjectEntity implements ContentEntity {

    private final XmlObject obj;    
    private final XmlOptions opts;    
    
    public XmlObjectEntity(final XmlObject xmlobject) {
        super();
        Assert.notNull(xmlobject, ""'xmlobject' must not be null"");
        this.obj = xmlobject;
        this.opts = new XmlOptions();
        this.opts.setSaveNoXmlDecl();
    }

    public InputStream getContent() throws IOException {
        return this.obj.newInputStream();
    }

    public QName getQName() {
        return this.obj.newXMLStreamReader().getName();
    }

    public boolean isRepeatable() {
        return true;
    }

    public void writeTo(final OutputStream outstream) throws IOException {
        this.obj.save(outstream, this.opts);
        outstream.flush();
    }

    public void writeTo(final Writer writer) throws IOException {
        this.obj.save(writer, this.opts);
        writer.flush();
    }
    
}
-------------------------------------

EntityResult aware endpoints can simply return an instance of ContentEntity as result of the endpoint invocation without having to build an Axiom representation of the payload content in memory or buffering its content in a temporary buffer.

The only _really_ ugly bit about this workaround is that some class loaders raise IllegalAccessError if an application class extends a package private class from a different JAR. I found no solution to this problem other than adding my classes to the spring-ws-core JAR, which really kind of sucks.

Is there any hope of this issue being resolved rather sooner than later? I am willing to invest more time into working on a more comprehensive solution, if it is.

Would it at least be possible to provide a means of replacing stock version of NonCachingPayload with a custom one without having to subclass all those package visible classes in the org.springframework.ws.soap.axiom package?

Thank you in advance

Oleg
","11/Dec/08 8:07 PM;arjen.poutsma;Thanks, Oleg!","12/Dec/08 1:18 AM;olegk;My pleasure. 

I do not mean to be pushy, but what the changes of this issue being resolved any time in a foreseeable future? 

Alternatively, would it at least be possible to provide a means of replacing stock version of NonCachingPayload with a custom one? 

Oleg","12/Dec/08 9:52 PM;arjen.poutsma;This is major change, so I can't apply it in the 1.5 timeline. As soon as the work on Spring 3 has tuned down a little bit, I will start the milestone phase of the next major version (probably 2.0).

Arjen","12/Dec/08 9:59 PM;arjen.poutsma;Resolved. Thanks for the patch, Tareq!","12/Dec/08 9:59 PM;arjen.poutsma;Oops, wrong issue.","07/Apr/09 6:30 PM;thrantal;Hello, Oleg,

Thankyou for this promising-looking idea!

It's a bit unclear to us how to use your approach in practice -- for example what kind of endpoint to use. We tried applying your code to our spring-ws 1.5.6 based application, and got to the point where Woodstox complained  ""Can not instantiate a writer for XML result type ContentPayload$EntityResultImpl"". 

Do you have any kind of a proof of concept implementation that you could share? Or even hints on how to get started (what kind of endpoint to use and how to provide our own ContentEntity instances where needed).

We're grateful for all help!","07/Apr/09 7:39 PM;olegk;The hacked version of Spring-WS 1.5.x with support for full content streaming happily runs in production of a major European bank.

I found no way of plugging-in a custom EntityResult implementation other than forking pretty much the entire org.springframework.ws.soap.axiom package [1] and using a custom SoapMessageFactory implementation.

Unfortunately, I am unable to disclosing any additional details.

Cheers

Oleg

[1] https://src.springframework.org/svn/spring-ws/tags/spring-ws-1.5.6/core/src/main/java/org/springframework/ws/soap/axiom/","11/Mar/10 11:19 PM;sandermak;I created a combined solution from Oleg's attachment and the solution proposed in [1]. This was developed against Spring-WS 1.5.9.

It works both for incoming and outgoing MTOM messages. Furthermore, it does not force all outgoing messages from the endpoint to be MTOM optimized like the earlier proposed solution [1] (check isXopPackage() in StreamingAxiomSoapMessage). So it is possible to combine both MTOM and non-MTOM methods on the same endpoint. I've tested this solution only in combination with JAXB marshalling. With the combination of Axiom and JAXB and attachmentCaching enabled it is possible to send and receive large attachments (I tested up to 100mb) while using at most 3mb of heapspace. To use it, build the attached files as part of your project and configure the hacked streaming messagefactory:

{code:xml}
<bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.StreamingAxiomSoapMessageFactory""> 
    	<property name=""payloadCaching"" value=""false"" /> 
    	<property name=""attachmentCaching"" value=""true"" /> 
    	<property name=""attachmentCacheThreshold"" value=""1024""/>
    	<!-- Configure tempdir, should be cleaned regularly! -->  
</bean> 
{code}

I'm sure there is a better way to implement this functionality, so view this code as a temporary and mostly untested workaround. Having to duplicate Spring-WS code is always bad, but in this case I see no other option, like the previous commenters on this issue. Arjen, could you give us some insight as to the status of Axiom/MTOM streaming of outgoing attachments for Spring WS 2.0? Will it be included?

[1] http://forum.springsource.org/showthread.php?p=161742
","30/May/10 8:52 PM;sandermak;Seeing that this issue is picked up again, I'd like to add that my previous attached implementation does not work as it claims it does. I could not get it to work both on incoming and outgoing requests correctly (i.e. creating/parsing a XOP message, but only when necessary, i.e., if there really is a large attachment). The override of isXopPackage() and friends did not work as I intended. Anyway, thanks for working on this issue.","25/Aug/10 6:44 AM;arjen.poutsma;It took a while, but I'm happy to announce that this issue has been implemented :). I largely based myself on Oleg's code, but made some changes along the way.

The basic idea is that there is now a org.springframework.ws.stream.StreamingWebServiceMessage, which looks like this:

{code}
public interface StreamingWebServiceMessage extends WebServiceMessage {

    void setStreamingPayload(StreamingPayload payload);
}
{code}

The StreamingPayload looks like this:

{code}
public interface StreamingPayload {

    QName getName();

    void writeTo(XMLStreamWriter streamWriter) throws XMLStreamException;
}
{code}

AxiomSoapMessage now implements StreamingWebServiceMessage, and if setStreamingPayload is called, I basically wrap the StreamingPayload in an Axiom OMDataSource, and add that to the body.

Initial non-scientific testing has shown that this new approach is really fast. When marshalling a JAXB Object with 500 children 1000 times, I get the following:

{noformat}
-----------------------------------------
ms     %     Task name
-----------------------------------------
01010  030%  caching
01024  031%  non-caching
01120  034%  streaming-caching
00184  006%  streaming-non-caching
{noformat}

Basically, the first two rows are the approaches we already had. The last two are new, and you can see that the last row (when combining this new setStreamingPayload() functionality with the non-repeatable reads/writes that {{setPayloadCaching(false}} gives) is really really fast.
","30/Sep/10 4:22 AM;nikkeri;Do you have any compelete example how to implement working endpoint using this new feature?
I wrote a new thread about this on forum. http://forum.springsource.org/showthread.php?t=96124","30/Sep/10 4:33 AM;arjen.poutsma;@Nikkeri

Not yet, but that will be coming in the RC phase. In the mean time, you can look at the unit tests.","06/Oct/10 3:16 AM;nikkeri;Ok,

I should be wery close now. For some reason I get stack trace on console and and response on client side contains only soap envelope and empty body.

Client response looks like this:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Body/>
</soapenv:Envelope>


If you could check the trace and tell your dependencies that may differ, please.

Problems seems to start when com.sun.xml.internal.bind.v2.runtime.MarshallerImpl starts to write xml from jaxb Response object: com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write -> Can not output XML declaration, after other output has already been done.

Should I use some particular version of Jaxb (java)?

My java version is (build 1.6.0_07-b06).
Spring ws is taken from trunk last week.




org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@22c0a0]: null; nested exception is javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@22c0a0]: null
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:288)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:45)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:97)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
Caused by: javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@22c0a0]: null
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:331)
	at org.springframework.ws.soap.axiom.StreamingOMDataSource.serialize(StreamingOMDataSource.java:67)
	at org.apache.axiom.om.impl.llom.OMSourcedElementImpl.internalSerialize(OMSourcedElementImpl.java:691)
	at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:965)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.serializeInternally(SOAPEnvelopeImpl.java:283)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.internalSerialize(SOAPEnvelopeImpl.java:245)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.internalSerialize(SOAPMessageImpl.java:72)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.internalSerialize(OMDocumentImpl.java:294)
	at org.apache.axiom.om.impl.llom.OMSerializableImpl.serializeAndConsume(OMSerializableImpl.java:193)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:282)
	... 24 more
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.]
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(Unknown Source)
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:328)
	... 33 more
Caused by: javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1547)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1576)
	at com.ctc.wstx.sw.BaseStreamWriter.doWriteStartDocument(BaseStreamWriter.java:667)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:655)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:643)
	at org.apache.axiom.util.stax.wrapper.XMLStreamWriterWrapper.writeStartDocument(XMLStreamWriterWrapper.java:153)
	at org.apache.axiom.om.impl.MTOMXMLStreamWriter.writeStartDocument(MTOMXMLStreamWriter.java:263)
	at com.sun.xml.internal.bind.v2.runtime.output.XMLStreamWriterOutput.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.prewrite(Unknown Source)
	... 36 more
2010-10-06 10:52:21.867::WARN:  Nested in org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@22c0a0]: null; nested exception is javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@22c0a0]: null:
javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1547)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1576)
	at com.ctc.wstx.sw.BaseStreamWriter.doWriteStartDocument(BaseStreamWriter.java:667)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:655)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:643)
	at org.apache.axiom.util.stax.wrapper.XMLStreamWriterWrapper.writeStartDocument(XMLStreamWriterWrapper.java:153)
	at org.apache.axiom.om.impl.MTOMXMLStreamWriter.writeStartDocument(MTOMXMLStreamWriter.java:263)
	at com.sun.xml.internal.bind.v2.runtime.output.XMLStreamWriterOutput.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.prewrite(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(Unknown Source)
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:328)
	at org.springframework.ws.soap.axiom.StreamingOMDataSource.serialize(StreamingOMDataSource.java:67)
	at org.apache.axiom.om.impl.llom.OMSourcedElementImpl.internalSerialize(OMSourcedElementImpl.java:691)
	at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:965)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.serializeInternally(SOAPEnvelopeImpl.java:283)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.internalSerialize(SOAPEnvelopeImpl.java:245)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.internalSerialize(SOAPMessageImpl.java:72)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.internalSerialize(OMDocumentImpl.java:294)
	at org.apache.axiom.om.impl.llom.OMSerializableImpl.serializeAndConsume(OMSerializableImpl.java:193)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:282)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:45)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:97)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
2010-10-06 12:14:00.336::WARN:  /mpis/mpisValidating/
org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@1fdb2]: null; nested exception is javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@1fdb2]: null
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:288)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:45)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:97)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
Caused by: javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@1fdb2]: null
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:331)
	at org.springframework.ws.soap.axiom.StreamingOMDataSource.serialize(StreamingOMDataSource.java:67)
	at org.apache.axiom.om.impl.llom.OMSourcedElementImpl.internalSerialize(OMSourcedElementImpl.java:691)
	at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:965)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.serializeInternally(SOAPEnvelopeImpl.java:283)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.internalSerialize(SOAPEnvelopeImpl.java:245)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.internalSerialize(SOAPMessageImpl.java:72)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.internalSerialize(OMDocumentImpl.java:294)
	at org.apache.axiom.om.impl.llom.OMSerializableImpl.serializeAndConsume(OMSerializableImpl.java:193)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:282)
	... 24 more
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.]
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(Unknown Source)
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:328)
	... 33 more
Caused by: javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1547)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1576)
	at com.ctc.wstx.sw.BaseStreamWriter.doWriteStartDocument(BaseStreamWriter.java:667)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:655)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:643)
	at org.apache.axiom.util.stax.wrapper.XMLStreamWriterWrapper.writeStartDocument(XMLStreamWriterWrapper.java:153)
	at org.apache.axiom.om.impl.MTOMXMLStreamWriter.writeStartDocument(MTOMXMLStreamWriter.java:263)
	at com.sun.xml.internal.bind.v2.runtime.output.XMLStreamWriterOutput.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.prewrite(Unknown Source)
	... 36 more
2010-10-06 12:14:00.336::WARN:  Nested in org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@1fdb2]: null; nested exception is javax.xml.stream.XMLStreamException: Could not marshal [com.myapp.jaxb.MyAppResponseComplexType@1fdb2]: null:
javax.xml.stream.XMLStreamException: Can not output XML declaration, after other output has already been done.
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1547)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1576)
	at com.ctc.wstx.sw.BaseStreamWriter.doWriteStartDocument(BaseStreamWriter.java:667)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:655)
	at com.ctc.wstx.sw.BaseStreamWriter.writeStartDocument(BaseStreamWriter.java:643)
	at org.apache.axiom.util.stax.wrapper.XMLStreamWriterWrapper.writeStartDocument(XMLStreamWriterWrapper.java:153)
	at org.apache.axiom.om.impl.MTOMXMLStreamWriter.writeStartDocument(MTOMXMLStreamWriter.java:263)
	at com.sun.xml.internal.bind.v2.runtime.output.XMLStreamWriterOutput.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.startDocument(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.prewrite(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(Unknown Source)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(Unknown Source)
	at org.springframework.ws.server.endpoint.adapter.method.jaxb.AbstractJaxb2PayloadMethodProcessor$JaxbStreamingPayload.writeTo(AbstractJaxb2PayloadMethodProcessor.java:328)
	at org.springframework.ws.soap.axiom.StreamingOMDataSource.serialize(StreamingOMDataSource.java:67)
	at org.apache.axiom.om.impl.llom.OMSourcedElementImpl.internalSerialize(OMSourcedElementImpl.java:691)
	at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:965)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.serializeInternally(SOAPEnvelopeImpl.java:283)
	at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.internalSerialize(SOAPEnvelopeImpl.java:245)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.internalSerialize(SOAPMessageImpl.java:72)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.internalSerialize(OMDocumentImpl.java:294)
	at org.apache.axiom.om.impl.llom.OMSerializableImpl.serializeAndConsume(OMSerializableImpl.java:193)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:282)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:45)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:97)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
","06/Oct/10 4:29 AM;thrantal;Hello,

I thought that by setting 

{code:xml}
        <property name=""marshallerProperties"">
            <map>
                <entry key=""jaxb.fragment"" value=""false""/>
            </map>
        </property>
{code}

for the Jaxb2Marshaller bean we could get rid of the extra prolog, but no dice. Debugging showed that the relevant code (createMarshaller, initMarshaller) was not even called! createUnMarshaller and initUnMarshaller were visited OK, but the same methods for Marshallers not.

Then I realised that in JaxbStreamingPayload , the Marshaller is created directly with JaxbContext.createMarshaller() . Could it be that Jaxb2Marshaller should be used here, so that the Marshaller properties could be customised? At the moment, it's not possible to get to customise JaxbStreamingPayload behavior (without heavy copy-pasting), as it is a private class whose instance is created directly in AbstractJaxb2PayloadMethodProcessor where it's used.

Best wishes,
Timo
","10/Nov/10 3:13 AM;arjen.poutsma;@Timo

This should now be fixed, as I set the JAXB_FRAGMENT now.

The reason we are not using the Jaxb2Marshaller abstraction here is that this particular piece of functionality goes beyond what the abstraction can offer. In general, Spring-WS 2.0 has a lot more native JAXB2 support, since comes with the JDK now.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,
Allow for custom ErrorHandler in PayloadValidatingInterceptor,SWS-242,18648,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,avthart,avthart,22/Nov/07 11:45 PM,04/May/12 7:03 AM,10/May/19 2:37 AM,24/Mar/11 3:15 AM,1.0.2,,,,,,2.0.1,,,Core,OXM,XML,,,0,,"Validating a SOAP request or response with PayloadValidatingInterceptor or Jaxb2Marshaller fails when using MTOM.

The spring-ws MTOM sample fails when PayloadValidatingInterceptor is added to the endpoint interceptor chain.

Schema:
    <element name=""SendRequest"" type=""tns:SendMessage""/>

    <complexType name=""SendMessage"">
       	<sequence>
   		<element name=""sender"" type=""string""/>
   		<element name=""recipient"" type=""string""/>
            	<element name=""content"" type=""base64Binary"" xmime:expectedContentTypes=""*/*""/>
       	</sequence>
   </complexType>

SOAP request:
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:mail=""http://www.enovation.nl/ems/mailwebservice"">
   <soapenv:Header/>
   <soapenv:Body>
      <mail:SendRequest>
         <mail:sender>1</mail:sender>
         <mail:recipient>2</mail:recipient>
         <mail:content><inc:Include xmlns:inc=""http://www.w3.org/2004/08/xop/include"" href=""cid:768176637073""/></mail:content>
      </mail:SendRequest>
   </soapenv:Body>
</soapenv:Envelope>

SOAP response:
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SOAP-ENV:Fault>
         <faultcode>SOAP-ENV:Client</faultcode>
         <faultstring xml:lang=""en"">Validation error</faultstring>
         <detail>
            <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-type.3.1.2: Element 'mail:content' is a simple type, so it must have no element information item [children].</spring-ws:ValidationError>
         </detail>
      </SOAP-ENV:Fault>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>",,;24/Mar/11 3:12 AM;arjen.poutsma;2640,,,,,,,,,,,,,,,0,2640,,,0,2640,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2007-11-23 00:05:41.0,3853,false,arjen.poutsma(arjen.poutsma),,,,0|i01mtr:,9575,9612,,,,,"23/Nov/07 12:05 AM;arjen.poutsma;I don't think this can't be fixed, because the underlying validation mechanism (i.e. javax.xml.validation) is not aware of XOM and MTOM. 

Unless a solution is suggested, I will resolve this as won't (or rather: can't) fix.
","23/Nov/07 12:55 AM;avthart;I already have looked in the source code for a possible fix and also think this can't be fixed easily.

","23/Nov/07 8:47 AM;arjen.poutsma;Can't fix, unless we find a way to let JAXP deal with XOM.","07/Jan/11 1:21 AM;epostaci;What about the suggested fix on this post.
http://forum.springsource.org/showthread.php?t=71974

Skip elements can be a workaround for this issue.","07/Jan/11 5:56 AM;arjen.poutsma;Perhaps that will work, I will take a look at it for 2.0.1","24/Mar/11 3:18 AM;arjen.poutsma;You can now provide your own error handler for the PayloadValidationInterceptor (which should implement org.springframework.xml.validation.ValidationErrorHandler). In that error handler, you can do anything you like (including skipping elements).

I did not provide a way to skip element by default, because it essentially comes down to stack-trace parsing, and I am reluctant to put fragile code like that in the SWS code base.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,
Update ivy configuration for ivy 2.0 to remove deprecation warnings in build,SWF-395,17674,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,nebhale,kdonald,kdonald,20/Aug/07 6:27 AM,20/Aug/07 10:47 AM,10/May/19 2:37 AM,20/Aug/07 10:47 AM,,,,,,,2.0 M1,,,Build System,,,,,0,,,,;20/Aug/07 10:47 AM;nebhale;2700,,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,,,,,,,,,,,,,,,369792000,,,,,2007-08-20 10:47:32.0,13637,false,tmarshall(tmarshall),,,,0|i04q73:,27618,22393,,,,,20/Aug/07 10:47 AM;nebhale;Updated and working.,,,,,,,,,,,,,,,,,,,,,,
Add reference manual chapter documenting Spring Faces 2.0 m1,SWF-392,17648,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,jeremyg484,kdonald,kdonald,16/Aug/07 8:24 AM,20/Aug/07 10:04 PM,10/May/19 2:37 AM,20/Aug/07 4:17 AM,,,,,,,2.0 M1,,,Documentation: Reference Manual,,,,,0,,We need to document the extent of the functionality provided by the org.springframework.faces component in 2.0 m1.,,;20/Aug/07 10:04 PM;nebhale;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,370137600,,,,,,13639,true,tmarshall(tmarshall),,,,0|i04q67:,27614,22389,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extract all JSF-related code into a separate component project,SWF-388,17644,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,jeremyg484,jeremyg484,jeremyg484,16/Aug/07 1:42 AM,20/Aug/07 10:04 PM,10/May/19 2:37 AM,16/Aug/07 10:14 AM,2.0 M1,,,,,,2.0 M1,,,JSF,,,,,0,,The JSF-related code should be extracted into it's own spring-faces component project.,,;20/Aug/07 10:04 PM;nebhale;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,370137600,,,,,2007-08-16 03:11:54.0,13643,false,tmarshall(tmarshall),,,,0|i04q6n:,27616,22391,,,,,"16/Aug/07 3:11 AM;nebhale;The directory is created and incorporated into the builds.  However there are still a number of things to do:


1.  Move code
2.  Update /readme.txt
3.  Update /spring-webflow/changelog.txt
4.  Update /spring-faces/ivy.xml
5.  Update /spring-faces/pom.xml
",,,,,,,,,,,,,,,,,,,,,,
Remove spring-webflow-sandbox,SWF-384,17633,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Trivial,Fixed,nebhale,kdonald,kdonald,15/Aug/07 1:51 AM,19/Aug/07 9:35 PM,10/May/19 2:37 AM,15/Aug/07 2:36 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Build System,,,,,0,,It is not being used.,,;19/Aug/07 9:35 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,15/Aug/07 2:36 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12790/mylyn-context.zip,,,,,,,,,,,370310400,,,,,,13647,true,tmarshall(tmarshall),,,,0|i026hb:,12759,12565,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow users to specify the namespace to register a flow in,SWF-380,17615,,Improvement,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Won't Fix,kdonald,nebhale,nebhale,14/Aug/07 8:01 AM,15/Nov/07 5:54 AM,10/May/19 2:37 AM,15/Nov/07 5:54 AM,1.0.4,,,,,,2.0 M2,,,Core: Flow Definition Registry,,,,,0,,"Currently the XMLFlowRegistrar will register all flows into the root namespace.  The registrar should be able to take an explicit namespace mapping for a collection of flows and register all flows in that connection with the proper namespace.  This ability should be extended to the <flow:registry/> element in the XML namespace configuration.  For example:

<flow:registry>
  <location path=""sellitem-flow.xml""/>
</flow:registry>

would register the `sellitem-flow` flow in the root or `` namespace.  Wildcards are still acceptable in the location tag.

<flow:registry>
  <namespace name=""/account"">
    <location path=""/WEB-INF/account/show.xml""/>
    <location path=""/WEB-INF/account/delete.xml""/>
  </namespace>
</flow:registry>

would register a collection of flows explicitly to a namespace.  In this example there would be a `show` and a `delete` flow in the `account` namespace.  Wildcards are still acceptable in the location tag.

<flow:registry>
  <namespace name=""/booking"">
    <location path=""/WEB-INF/booking/main/main.xml""/>
    <location path=""/WEB-INF/booking/seatassignment/seatassignment.xml""/>
    <location path=""/WEB-INF/booking/checkout/checkout.xml""/>
  </namespace>
</flow:registry>

would register `main`, `seatassignment`, and `checkout` flows in the `booking` namespace.

<flow:registry>
  <namespace root=""/WEB-INF""/>
</flow:registry>

/WEB-INF/
    +  account/
        +  show.xml
        +  delete.xml
    +  booking/
        +  main/
            +  main.xml
        + seatassignment/
            +  seatassignment.xml

would register all flows in the subdirectories of `/WEB-INF/flows` to a namespace of their directories and a name of the file.  In this example there would be a `show` and a `delete` flow in the `account` namespace.  TODO:  Decide what happens with the booking directory",,;27/Aug/07 9:15 PM;nebhale;28800,,,,,,,,,,,,,,36000,7200,28800,80%,36000,7200,28800,,,,,,,,,,,,SWF-363,,,17/Aug/07 10:23 AM;nebhale;clipboard.txt;https://jira.spring.io/secure/attachment/12806/clipboard.txt,16/Aug/07 7:27 AM;nebhale;clipboard.txt;https://jira.spring.io/secure/attachment/12797/clipboard.txt,15/Aug/07 10:30 AM;nebhale;clipboard.txt;https://jira.spring.io/secure/attachment/12793/clipboard.txt,27/Aug/07 7:10 PM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12830/mylyn-context.zip,17/Aug/07 10:23 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12807/mylyn-context.zip,16/Aug/07 7:27 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12798/mylyn-context.zip,15/Aug/07 10:30 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12794/mylyn-context.zip,,,,,362275200,,,,,2007-11-15 05:54:11.0,13650,true,tmarshall(tmarshall),,,,0|i026i7:,12763,12569,,,,,16/Aug/07 7:27 AM;nebhale;Second try at this code,15/Nov/07 5:54 AM;kdonald;Not a good suggestion. Flows themselves provide their own namespaces.,,,,,,,,,,,,,,,,,,,,,
Build and upload 1.0.5 release,SWF-379,17607,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,nebhale,kdonald,kdonald,14/Aug/07 12:52 AM,30/Oct/07 12:27 PM,10/May/19 2:37 AM,30/Oct/07 12:27 PM,,,,,,,1.0.5,,,Build System,,,,,0,,,,;30/Oct/07 12:24 PM;nebhale;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,370396800,,,,,,13651,true,tmarshall(tmarshall),,,,0|i04q5b:,27610,22384,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session binding conversation containers cannot be used in a cluster,SWF-378,17604,,Bug,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,kdonald,kdonald,kdonald,14/Aug/07 12:40 AM,06/Sep/07 8:24 AM,10/May/19 2:37 AM,15/Aug/07 4:23 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Core: Flow Execution Repository,,,,,0,,"See http://forum.springframework.org/showthread.php?t=41950

Original issue report:
--
Prior to version 1.0.4 I was able to have the functionality where if i had to restart tomcat for any reason users would be able to pick up right where they left off in a flow when tomcat came back up. This was because I am persisting my httpsessions on restart.  Since I have upgraded to SWF 1.0.4 When i restart tomcat my session are persisted as normal however I get a NoSuchConversationException.

Could this be the reason:

New in 1.0.4 you now use the session key ""webflow.conversation.container."" + new RandomGuid().toString(); to store the conversationContainer in the httpsession

However when tomcat restarts and we try to resume our webflow, since that RandomGuid() has now generated a different key it can no longer reference the ConversationContainer in the session since it used the old random key that was generated before tomcat restarted.

So my conversationcontainer is still in the session, but the sessionBindingConversationManager has no way to find it since the random key assigned as they session key has now changed.

Can anyone shine some light on this?
--

This was introduced in 1.0.4.  We should allow the key of a conversation container to be specified manually to allow unique containers per session without this random guid problem.",,;19/Aug/07 9:36 PM;nebhale;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,SWF-304,,,15/Aug/07 4:23 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12791/mylyn-context.zip,,,,,,,,,,,368323200,,,,,2007-09-06 08:24:06.0,13652,true,tmarshall(tmarshall),,,,0|i026if:,12764,12570,,,,,15/Aug/07 4:09 AM;kdonald;Caused by 304.,"15/Aug/07 4:23 AM;kdonald;Made SessionBindingConversationManager's ""sessionKey"" property configurable. By default it is""webflow.conversationContainer"", but it can be overridden on a per-conversation manager basis.  This allows unique session keys to support mulitple conversation containers in the same application, working safely in a cluster with standard session replication.","06/Sep/07 8:24 AM;euxx;Keith, did this fix made to the SFW 2.0m1?",,,,,,,,,,,,,,,,,,,,
Build and upload 2.0 m1 release,SWF-377,17599,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,nebhale,kdonald,kdonald,13/Aug/07 2:56 PM,21/Aug/07 1:43 AM,10/May/19 2:37 AM,21/Aug/07 1:43 AM,,,,,,,2.0 M1,,,Build System,,,,,0,,,,;21/Aug/07 1:43 AM;nebhale;9000,,,,,,,,,,,,,,7200,0,9000,125%,7200,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,370396800,,,,,,13653,true,tmarshall(tmarshall),,,,0|i04q5j:,27611,22386,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a Seam comparison sample application,SWF-366,17571,,Task,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,jeremyg484,jeremyg484,jeremyg484,10/Aug/07 7:42 AM,20/Aug/07 10:04 PM,10/May/19 2:37 AM,16/Aug/07 10:15 AM,,,,,,,2.0 M1,,,Documentation: Samples,,,,,0,,"In an effort to answer ongoing questions about how SWF + JSF compares to Seam, we will create a comparison sample that fulfills similar requirements to the Seam booking example using Web Flow's conversation model.  This will also serve to show off some of the new features of SWF 1.1, including:
-Flow-scoped persistence contexts
-Unified EL integration
-Spring 2.0 custom scopes
-Validation support ",,;20/Aug/07 10:04 PM;nebhale;216000,,,,,,,,,,,,,,216000,0,216000,100%,216000,0,216000,,,,,,,,,,,,,,,,,,,,,,,,,,370137600,,,,,,13661,true,tmarshall(tmarshall),,,,0|i04q6f:,27615,22390,,,,,16/Aug/07 10:15 AM;jeremyg484;The new sample is available as booking-jsf in the spring-webflow-samples directory.,,,,,,,,,,,,,,,,,,,,,,
Make the Flow Definition Registry Implementation Namespace Aware,SWF-363,17568,,Improvement,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,nebhale,nebhale,nebhale,10/Aug/07 6:35 AM,20/Aug/07 10:02 PM,10/May/19 2:37 AM,14/Aug/07 9:15 AM,1.0.4,,,,,,2.0 M1,,,Core: Flow Definition Registry,,,,,0,,"The Flow Definition Registry should be able to understand a namespace preceeding a flow id.  Currently, the namespace for flow ids is flat.  Therefore, `show` and `account/show` would be grouped together in the root of the flow definition namespace.  The Flow Definition Registry should be enhanced so that `/account/show` and `/account/create` are grouped together at a lower level than `show`.  The registry should understand the following:

/account/show => `/account` namespace, `show` flow id
/tax/federal/personal => `/tax/federal` namespace, `personal` flow id
show => no namespace, `show` flow id

This will allow
- A group of related flows to be categorized together in a unique namespace e.g. within the account namespace: ""show"", ""create"", ""update"", ""delete""
- Such a namespace could be navigated using a management client to see the available set of flow definitions.",,;20/Aug/07 10:02 PM;nebhale;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,14/Aug/07 1:36 AM;nebhale;clipboard.txt;https://jira.spring.io/secure/attachment/12783/clipboard.txt,14/Aug/07 9:15 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12787/mylyn-context.zip,14/Aug/07 1:36 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12784/mylyn-context.zip,14/Aug/07 1:35 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12782/mylyn-context.zip,13/Aug/07 12:18 AM;nebhale;mylyn-context.zip;https://jira.spring.io/secure/attachment/12779/mylyn-context.zip,,,,,,,370396800,,,,,,13664,false,tmarshall(tmarshall),,,,0|i026jb:,12768,12574,,,,,13/Aug/07 12:18 AM;nebhale;Incremental Work,14/Aug/07 1:35 AM;nebhale;For Code Review,,,,,,,,,,,,,,,,,,,,,
Improve documentation of exception handling options,SWF-357,17420,,Improvement,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Minor,Fixed,kdonald,derek,derek,24/Jul/07 9:20 PM,19/Aug/07 9:34 PM,10/May/19 2:37 AM,16/Aug/07 1:14 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Documentation: Reference Manual,,,,,0,,"This subject seems a bit thin on the ground in the reference manual.

Would be good to have a section that discusses all the different options one has for handling exceptions alongside each other.

Also the sample apps don't include any examples of:
<exception-handler ... /> 
or 
<global-transitions>
    <transition on-exception ... />
</global-transitions>
which seems like a simple way of declaring a global handler",,;19/Aug/07 9:34 PM;nebhale;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,16/Aug/07 1:14 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12795/mylyn-context.zip,,,,,,,,,,,372124800,,,,,,13670,true,tmarshall(tmarshall),,,,0|i026k7:,12772,12578,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix several Web Flow reference manual typos,SWF-349,17366,,Bug,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Minor,Fixed,kdonald,ronatartifact,ronatartifact,17/Jul/07 4:48 AM,19/Aug/07 9:34 PM,10/May/19 2:37 AM,15/Aug/07 6:56 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Documentation: Reference Manual,,,,,0,,"On Page 68 of the Reference manual

There are lots of sentences that are hard to parse but this section was too much.

5.6.2 Configuring the Web Flow system
""The artifacts defined faces-config.xml use Spring to locate the Web Flow system.""
looks like an ""in the"" was omitted
The artifacts defined in the faces-config.xml use Spring to locate the Web Flow system.

Same section next paragraph. I am not sure what it was supposed to say but my guess is as follows.
""In this example inside webflow-config.xml resides the configuration of the Web Flow system the JSF artifacts
will delegate to.""
Might be possible to parse it it said,
""In this example, the configuration of the JSF artifacts, to which the Web Flow system will delegate, resides inside webflow-config.xml.""

I hope that this is what was intended. 


Here are a few commas ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please distribute them throughout the manual.
Look for sentences and phrases that start with ""if"", If"", ""in"" and ""In"". Other places are short of commas but this would be a start.
English is a bitch of a language without proper punctuation. We just string words and phrases together and use punctuation to help guide the reader. Leave out the punctuation and it is anyone's guess as to what goes with what.

Keep up the good work.",All,;19/Aug/07 9:34 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,370224000,,,,,2007-07-18 16:16:29.0,13676,true,tmarshall(tmarshall),,,,0|i026l3:,12776,12582,,,,,18/Jul/07 4:16 PM;klr8;Thanks for the commas! :),15/Aug/07 6:56 AM;kdonald;Thanks for the commas :-),,,,,,,,,,,,,,,,,,,,,
RequestContext.attributes should never be null,SWF-347,17342,,Bug,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Trivial,Fixed,kdonald,niallsmart,niallsmart,12/Jul/07 11:03 PM,19/Aug/07 9:33 PM,10/May/19 2:37 AM,15/Aug/07 2:07 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Core: Flow Engine: Engine Implementation,,,,,0,,DefaultMultiActionMethodResolver:40 assumes that context.getAttributes() returns non-null.,,;19/Aug/07 9:33 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,12/Jul/07 11:04 PM;niallsmart;TestDefaultMultiActionMethodResolver.java;https://jira.spring.io/secure/attachment/12719/TestDefaultMultiActionMethodResolver.java,15/Aug/07 2:07 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12789/mylyn-context.zip,,,,,,,,,,372988800,,,,,2007-07-14 18:45:00.0,13678,false,tmarshall(tmarshall),,,,0|i026lj:,12778,12584,,,,,12/Jul/07 11:04 PM;niallsmart;JUnit test to demonstrate bug.   Uncomment line 38 to get it to work.,"14/Jul/07 6:45 PM;klr8;RequestContext.getAttributes() should never return null, so DefaultMultiActionMethodResolver does not need to test that.
RequestControlContextImpl.setAttributes() also checks for this to make sure you don't set the attributes to null.
However, initially the attributes map seems to be null -- that's a bug.
MockRequestContext also seems to make sure the attributes are always not-null
",,,,,,,,,,,,,,,,,,,,,
MapAccessor does not correctly handle null values,SWF-343,17289,,Bug,Closed,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,kdonald,klr8,klr8,07/Jul/07 10:24 PM,13/Nov/09 8:41 AM,10/May/19 2:37 AM,15/Aug/07 2:33 AM,1.0.4,,,,,,1.0.5,2.0 M1,,Binding: Collection Utilities,,,,,0,,"See the following forum thread:
http://forum.springframework.org/showthread.php?t=40620",,;19/Aug/07 9:36 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,373593600,,,,,,13682,false,tmarshall(tmarshall),,,,0|i026m7:,12781,12587,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for multiple listeners in flow execution tests,SWF-334,17075,,Improvement,Closed,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,kdonald,klr8,klr8,11/Jun/07 3:04 AM,13/Nov/09 8:41 AM,10/May/19 2:37 AM,12/Jun/07 7:37 AM,1.0.3,,,,,,1.0.4,2.0 M1,,,,,,,1,,"See:
http://forum.springframework.org/showthread.php?t=39459",,;20/Aug/07 10:01 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,375753600,,,,,2007-06-12 07:37:14.0,13690,false,tmarshall(tmarshall),,,,0|i04o27:,27272,21957,,,,,12/Jun/07 7:37 AM;nebhale;Added a setFlowExecutionListeners([]) method.,,,,,,,,,,,,,,,,,,,,,,
Improve support for mock actions,SWF-317,16939,,Improvement,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Minor,Fixed,kdonald,kdonald,kdonald,25/May/07 5:50 AM,19/Aug/07 9:36 PM,10/May/19 2:37 AM,16/Aug/07 5:57 AM,1.0.3,,,,,,1.0.5,2.0 M1,,Core: Flow Test Support,,,,,1,,"For flow executions with a lot of complex action logic, it may be best to unit test the action logic separately from the flow definition execution logic.  In this case, it should be made easier to mock out the action layer when unit testing the execution logic.  A MockAction that can be programmed to return a specific result for a given test scenario + an example showing its use is probably all we need.",,;19/Aug/07 9:36 PM;nebhale;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,16/Aug/07 5:57 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12796/mylyn-context.zip,,,,,,,,,,,376876800,,,,,2007-05-30 18:08:50.0,13707,false,tmarshall(tmarshall),,,,0|i04q7b:,27619,22394,,,,,"30/May/07 6:08 PM;klr8;Any reason you can't just use something like EasyMock here?
An example is a good idea though.",,,,,,,,,,,,,,,,,,,,,,
Add flow system cleanup filter to ensure Flow execution resources are definiteively cleaned up after request processing,SWF-306,16746,,Improvement,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,nebhale,kdonald,kdonald,01/May/07 1:28 AM,20/Aug/07 10:05 PM,10/May/19 2:37 AM,12/Jun/07 7:18 AM,1.0.3,,,,,,1.0.4,2.0 M1,,JSF,,,,,0,,"JSF unfortunately has no cleanup callbacks.  This is a known limitation of the JSF specification.

The only way to ensure cleanup of resources definitively in all cases is to install a custom cleanup filter.",,;20/Aug/07 10:05 PM;nebhale;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,375753600,,,,,2007-06-12 07:18:08.0,13717,false,tmarshall(tmarshall),,,,0|i04q5z:,27613,22388,,,,,12/Jun/07 7:18 AM;nebhale;Added the FlowSystemCleanupFilter.,,,,,,,,,,,,,,,,,,,,,,
Add EL support to spring-binding,SWF-287,16556,,New Feature,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,jeremyg484,jeremyg484,jeremyg484,08/Apr/07 10:55 PM,20/Aug/07 10:06 PM,10/May/19 2:37 AM,16/Aug/07 12:24 AM,1.0.2,,,,,,2.0 M1,,,Binding: Expression Language Support,,,,,0,,"An alternate implementation of ExpressionParser that uses the new unified EL API could be extremely useful in enabling further integration possibilities in SWF, especially with regards to JSF.  

The first step is to add a standalone ELExpressionParser to spring-binding that only introduces dependencies on the EL RI.  This parser should be completely pluggable into any SWF application, whether using JSF or any other view technology.

See previous discussion here:
http://forum.springframework.org/showthread.php?t=36693",,;20/Aug/07 10:06 PM;nebhale;115200,,,,,,,,,,,,,,115200,0,115200,100%,115200,0,115200,,,,,,,,,,,,,,,08/Apr/07 11:40 PM;jeremyg484;ELExpressionParser.patch;https://jira.spring.io/secure/attachment/12526/ELExpressionParser.patch,15/May/07 2:07 PM;jeremyg484;ELExpressionParserJBossEL.patch;https://jira.spring.io/secure/attachment/12598/ELExpressionParserJBossEL.patch,15/May/07 2:07 PM;jeremyg484;ELExpressionParserJBossELTests.patch;https://jira.spring.io/secure/attachment/12599/ELExpressionParserJBossELTests.patch,20/Apr/07 11:01 AM;jeremyg484;ELExpressionParserRevised.patch;https://jira.spring.io/secure/attachment/12550/ELExpressionParserRevised.patch,20/Apr/07 11:01 AM;jeremyg484;ELExpressionParserRevisedTests.patch;https://jira.spring.io/secure/attachment/12551/ELExpressionParserRevisedTests.patch,08/Apr/07 11:40 PM;jeremyg484;ELExpressionParserTests.patch;https://jira.spring.io/secure/attachment/12527/ELExpressionParserTests.patch,08/Apr/07 11:40 PM;jeremyg484;sellitem-el.zip;https://jira.spring.io/secure/attachment/12528/sellitem-el.zip,21/Apr/07 12:03 AM;jeremyg484;swf-numberguess-el.zip;https://jira.spring.io/secure/attachment/12554/swf-numberguess-el.zip,,,,378172800,,,,,,13734,true,tmarshall(tmarshall),,,,0|i04q5r:,27612,22387,,,,,"08/Apr/07 11:40 PM;jeremyg484;This patch contains an EL based ExpressionParser implementation along with the necessary supporting classes and unit tests.

Also included is a modified SWF sellitem example application that has been configured to use EL expressions instead of the default ognl.  A maven 2 pom has been included with the example and is configured to use the jetty plugin for easy testing.  The example can be built and run by executing 'mvn jetty:run'.  It can then be accessed in a browser at http://localhost:7001/swf-sellitem-el/

Note that the standalone EL implementation requires Java 5 due to the use of generics in the base EL resolvers of the reference implementation.  The DelegatingELContext was constructed with legacy support in mind so that users of older Java versions will still be able to make use of EL expressions if they are using JSF 1.1.

","09/Apr/07 12:25 AM;jeremyg484;The required EL dependencies can be obtained by adding the following entries to the pom.xml of spring-binding:

<repositories>
    <repository>
        <id>java.net</id>
        <url>https://maven-repository.dev.java.net/nonav/repository</url>
        <layout>legacy</layout>
    </repository>
</repositories>

and in the dependencies section:

<dependency>
    <groupId>javax.el</groupId>
    <artifactId>el-api</artifactId>
    <version>1.0</version>
</dependency>

<dependency>
    <groupId>el-impl</groupId>
    <artifactId>el-impl</artifactId>
    <version>1.0</version>
</dependency>","10/Apr/07 8:54 AM;jeremyg484;Current Discussion:
http://forum.springframework.org/showthread.php?t=37183",20/Apr/07 11:01 AM;jeremyg484;Revised patches for the ELExpressionParser.  Some changes made to the DelegatingELContext with regard to how it merges in and stores the delegate ELContexts.  These changes were necessary for the JSF usage scenario.  Also enhanced the parser itself further to be capable of recognizing foo.bar(baz.foo) style method expressions as this is not supported out-of-the-box by the EL spec in the way it is with OGNL. ,21/Apr/07 12:03 AM;jeremyg484;Attaching a version of the number guess example app that has the ELExpressionParser configured.  This demonstrates the added ability of the ELExpressionParser to handle the types of method invocations common in SWF evaluate-actions.,"15/May/07 2:07 PM;jeremyg484;Attaching one more version of the ELExpressionParser that uses JBoss-EL for the parsing implementation.  JBoss-EL has extended the standard EL to implement method invocations and projections in a manner similar to OGNL.

The JBoss-EL library has not yet seen a formal release.  It is expected that it will be released along with JBoss Seam 1.3.0 in the near future.  The current code base for the project is available at https://svn.jboss.org/repos/jboss-el

The previously attached modified example applications work without any changes with this revised implementation.",,,,,,,,,,,,,,,,,
Flash scope should be a property of the Flow Execution instead of the active Flow Session,SWF-221,15674,,Improvement,Closed,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,kdonald,klr8,klr8,09/Dec/06 4:18 AM,13/Nov/09 8:41 AM,10/May/19 2:37 AM,16/Aug/07 7:47 AM,1.0.4,,,,,,2.0 M1,,,Core: Flow Engine: Engine Implementation,,,,,2,,"The contents of flash scope (the flash map) is stored in the FlowSession. As a result the contents of flash scope is lost when a FlowSession ends (e.g. because of a subflow ending).

Is this the desired behavior? Or should flash scope really be scoped at the level of an 'external user event'? The current documentation seems to indicate the latter (from ScopeType JavaDoc):

	 * The ""flash"" scope type. Attributes placed in flash scope exist through
	 * the life of the current request <i>and until the next user event is
	 * signaled in a subsequent request</i>. When the next external user event
	 * is signaled flash scope is cleared.

See also:

http://forum.springframework.org/showthread.php?t=32364",,;20/Aug/07 10:03 PM;nebhale;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,16/Aug/07 7:47 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12799/mylyn-context.zip,,,,,,,,,,,378259200,,,,,2007-05-14 11:31:45.0,13795,true,tmarshall(tmarshall),,,,0|i026o7:,12790,12596,,,,,27/Dec/06 7:57 PM;klr8;Moving this to 1.1 since we can't change the behavior anyway for a point release (1.0.1).,"27/Dec/06 8:01 PM;klr8;One possible way to 'fix' this, if we decide to fix it, is to store the flashMap directly in the FlowExecutionImpl. That way it would no longer be related to the flow session and could really be scoped at the level of an external user event.","27/Dec/06 8:10 PM;klr8;I tried the change (move flashMap to FlowExecutionImpl) and it is trivial to make. The impact on client code should also be minimal since that should be accessing flash scope via the RequestContext facade.

The only public API breakage is in the FlowSession interface, where the getFlashMap() method would need to be removed.","14/May/07 11:31 AM;kdonald;Another note on this:

With Flash scope part of flow scope currently errors generated by subflows that end expecting the parent flow to render those errors don't display (they are lost due to the fact flow scope ends.)",,,,,,,,,,,,,,,,,,,
Add Spring 2.0 custom scopes for Web Flow's scopes,SWF-163,14755,,New Feature,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,,swamp_ig,swamp_ig,13/Aug/06 12:11 PM,29/Jan/08 5:15 AM,10/May/19 2:37 AM,02/May/07 7:42 AM,1.0,,,,,,2.0 M1,,,,,,,,4,,"The conversation and flow scopes should get integrated into the spring scope system available in 2.0.

Also the request scope should check the request scope from webflow as well as the request scope from the servlet request.

I'm coding up this feature now, I don't expect it'll take much effort. Will contrib code when complete.",,;20/Aug/07 10:01 PM;nebhale;72000,,,,,,,,,,,,,,72000,0,72000,100%,72000,0,72000,,,,,,,,,,,,,,,26/Oct/06 11:14 AM;swamp_ig;scope.zip;https://jira.spring.io/secure/attachment/12069/scope.zip,07/May/07 6:15 PM;slopetown;stacktrace.txt;https://jira.spring.io/secure/attachment/12587/stacktrace.txt,,,,,,,,,,375235200,,,,,2006-08-13 14:06:40.0,13849,true,tmarshall(tmarshall),,,,0|i02rhr:,16163,15263,,,,,"13/Aug/06 2:06 PM;kdonald;Thanks Chris, your contributions here are welcome and will be reviewed for integration.","19/Sep/06 6:30 PM;swamp_ig;I've been working on other projects for a while so haven't looked at this quite yet.

Back on the project now so will contrib soon.","26/Oct/06 11:14 AM;swamp_ig;Here's the code for this.

It's WRT spring 2.0.

At the moment the FlowRequestContextListener acts as a BeanFactoryPostProcessor to register the three contexts. This might be better rolled into the FlowExecutorImpl, that would seem to be the logical place for it. 

The FlowExecutor could also perform the actions currently performed by the listener, setting the current flow execution context into the context holder and cleaning up the various contexts at the appropriate juncture.
","26/Oct/06 11:16 AM;swamp_ig;Oh, please note that I've not updated to webflow RC4 yet either, so the code might change a little. I don't see the new context introduced in RC4 requiring a spring context, since it's only transient anyhow.",19/Apr/07 2:11 AM;kdonald;Scheduled for 1.1.  Particularly useful in a JSF environment with a Spring DelegatingVariableResolver for lazy-initialized flow-scoped beans.,"02/May/07 7:42 AM;nebhale;Added scope support for conversation, flow, and flash scope.  To enable point to the new 1.1 version of the config XSD and use <flow:enable-scopes/>.

Committed in revision 6989.","07/May/07 6:13 PM;slopetown;I tried.
However, I failed to launch a new flow.

Environment: spring-webflow-1.1-SNAPSHOT-20070507-85.zip SWF+JSF

""index.jsp""
<jsp:forward page=""dummy.faces?_flowId=PhonebookFlow"" />

""PhonebookFlow.xml""
<flow ...>
  <start-state idref=""start"" />
  <action-state id=""start"">
    <bean-action bean=""PhonebookFlowAction"" method=""start"" />
  </action-state>

PhonebookFlowAction refers PhonebookFlowData.
PhonebookFlowData is a flow-scoped bean.

Attachment file: stacktrace.txt

","04/Jun/07 11:33 PM;kai@systemfabrikken.no;Regarding Suzumis comment;
Ive experienced the same problem - seems to be caused by the fact that the FlowDefinition is built prior to the setting of the flowexecution in the thread local required by the bean factory used in the bean action.

postponing the retrieval of the bean until after the FlowDefinition has been created and the flowexecution has been set in the thread local would help - by means of a lazy LocalBeanInvokingAction - that doesnt retrieve the bean from the beanFactory until invocation time..","08/Jun/07 3:31 AM;nebhale;Hideyuki the problem is that you're creating a singleton that depends on a non-singleton.  This is actually a common problem in all of the scoping schemes not just when using Web Flow.  While Kai's solution will work the stack trace explains the best solution: 'consider defining a scoped proxy for this bean if you intend to refer to it from a singleton'  So you'd see something like this:

<bean id=""phoneBookFlowAction"" class=""...PhoneBookFlowAction"">
    <property name=""phoneBookFlowData"" ref=""phoneBookFlowData""/>
</bean>

<bean id=""phoneBookFlowData"" class=""...PhoneBookFlowData"" scope=""flow"">
    <aop:scoped-proxy/>
</bean>

Basically what this does is inject a proxy into the singleton FlowAction and then only look up the target object when the proxy is invoked.  It's basically the native Spring way to do Kai's solution and works in all of Spring, not just Spring Web Flow.","14/Jun/07 4:02 PM;slopetown;This issue is not fixed in non-JSF environment.
","14/Jun/07 4:05 PM;slopetown;For more details:
http://forum.springframework.org/showthread.php?t=39294","18/Jun/07 7:07 PM;kai@systemfabrikken.no;in reply to Ben:
is one always supposed to wrap non-singleton beans used in flow actions in proxies in order to achieve ""laziness"" ? Note that the problem i am referring to exists irrespectively of bean dependencies, a flow referencing a single bean with no dependencies will still cause problems as long as the bean is declared with a scope requiring the thread local flowexecution beeing set.
Isnt this a flow-initialization problem and not a bean dependency problem?
kai:) ",,,,,,,,,,,
Add Flow Managed Persistence Context Support for Hibernate and JPA,SWF-92,13589,,New Feature,Resolved,SWF,Spring Web Flow,software,rstoya05-aop,Spring's stateful UI controller framework,http://www.springframework.org/webflow,Major,Fixed,kdonald,kdonald,kdonald,22/Mar/06 11:01 AM,20/Aug/07 10:06 PM,10/May/19 2:37 AM,15/Aug/07 7:55 AM,1.0,,,,,,2.0 M1,,,Integration: Persistence Support,,,,,23,,"Implementation of the long session per conversation pattern.  To be implemented:
- Hibernate-based (session per conversation)
- JPA (JSR-220) based (managed persistence context)

Patterns:
- Stateful Session Bean Pattern
- Flow Listener Pattern",,;20/Aug/07 10:05 PM;nebhale;2400,;20/Aug/07 10:06 PM;nebhale;144000,,,,,,,,,,,,,144000,0,146400,101%,144000,0,146400,,,,,,,,,,,,,,,24/Mar/06 10:51 AM;ande;ExtendedFlowExecutionListenerInterceptor.java;https://jira.spring.io/secure/attachment/11521/ExtendedFlowExecutionListenerInterceptor.java,24/Mar/06 10:51 AM;ande;OpenSessionInFlow-exampleImpl.zip;https://jira.spring.io/secure/attachment/11522/OpenSessionInFlow-exampleImpl.zip,14/Jan/07 11:48 PM;donnchadh;OpenSessionInFlow-exampleImplUpdated.zip;https://jira.spring.io/secure/attachment/12337/OpenSessionInFlow-exampleImplUpdated.zip,24/Mar/06 10:51 AM;ande;OpenSessionInFlowListenerInterceptor.java;https://jira.spring.io/secure/attachment/11520/OpenSessionInFlowListenerInterceptor.java,15/Aug/07 7:56 AM;kdonald;mylyn-context.zip;https://jira.spring.io/secure/attachment/12792/mylyn-context.zip,,,,,,,370828800,,,,,2006-03-24 10:51:24.0,13915,true,tmarshall(tmarshall),,,,0|i03oy7:,21584,18077,,,,,"24/Mar/06 10:51 AM;ande;Attaching a listener/interceptor that can be used for long sessions in webflows. The two java files are the main classes; the zip file has these, and the various support classes needed to get it running as-is. I don't anticiapte it depends on more than: hibernate 3, swf 1.0ea, Spring 1.2.7, log4j

See the javadocs for info and example config, specifically the javadoc for OpenSessionInFlowListenerInterceptor.java

I'll post a comment with general issues I ran into. Also, this version is adapted from an earlier one that worked with previous versions of swf.  I'll comment on how it got harder with 1.0 ,as well as 1.0's potential for simplifying things.","24/Mar/06 11:46 AM;ande;Some issues I ran into on this:
-supporting lazy initialization
Since a view is rendered by the DispatcherServlet after the FlowController has finished processing (and hence, after the requestProcessed method is called for FlowExecutionlisteners), a session has to be kept open longer than the flow session is active in order to support lazy initialization within the view objects. This is something we needed, and so moved the disconnecting of a session out to a handler interceptor postHandle method.

-supporting webflow continuations
The ability to load a serialized flowExecution to continue at a flow at a particular point leads to some interesting questions on how it should be handled with a long hibernate session. Since the persistence context and the flow scope are two separate storage locations that might share object references, if the hibernate session is not kept inside the flowExecution, any differences between the state of objects in the flowExecution (flow scoped objects) and the state of the persistence context needs to be reconciled. If they are kept together, then the hibernate session has to be serializable. Neither of these seemed very attractive. The SessionStorage implementations attached are meant to represent these two options, one storing the hibernate externally in the http session, the other storing it in the flow scope. This brings up the following two issues.

-keeping flow scoped objects in sync with objects in the persistence context 
The way I use it now, the state of objects in the persistence context ""wins out"" over that of the flow scope. When the flow session becomes active, the listener has an option to iterate through options in the flow scope and try to get the copy from the persistence context. In that way, even if you skip back several steps in a webflow, the object(s) you are working with will reflect the most recent state. I'm still testing what the result of that will be; for my application, it doesn't seem to be of consequence.

-serializing/deserializing hibernate objects
When you serialize and deserialize objects that reside in the persistence context, you end up with different object references, and disconnected persistent collections. For example, you have an object graph in flow scope that you just pulled from a session.get call. The flow scope is serialized out to continuation storage, then deserialized and you pull the object out of flow scope. You will have a different object reference than prior to serializing (and the one in the persistence context), yet if you tried to session.save the object, you probably would get a non-unique object exception because it generates the same persistence key. To complicate things more, any persistent collections in the object graph have a null session reference when deserialized. If you try and access unloaded elements, exceptions are thrown. This was addressed in the same way as above: when the session becomes active, the objects in flow scope are traded for those in the persistence context, which also produces functional collections.

-new (unpersisted) flow objects
One of my primary uses for webflow was as a ""wizard"" that lead users through creating a new object graph that would eventually be saved to the database. The previous issues I layed out make this more difficult with long sessions that spans several activations/deactivations of the hibernate session. The method for iterating through the flow scope, replacing objects with their persistence context copy, doesn't work if the object is not yet in the persistence context. Worse yet, if that new object has persistent objects attached to the object graph you are building, they will quickly lose sync with the persistence contex through serialization/deserialization, and attempts to save the new object at the end of the flow will fail. My solution for this was to persist objects early, and not flush them to the db until the transaction is committed. This can be done using session.persist()  early (provided your id generation mechanism does not require that the entity be saved to the database before an id is generated), and a session with on ""COMMIT"" flush mode. Again, for my situation, this was not a problem, but in some cases it could be.

I hope this is information someone find valuable. It would be great to hear ideas on other solutions to any of these problems.
","19/Sep/06 1:15 AM;mraible;Keith - is this patch being considered?  If so, can you assign a ""fix version"" to this issue?  Thanks.","14/Jan/07 11:12 PM;donnchadh;Andrew - have you got any unit tests to go along with this code? I've started using it and would like to create some unit tests, but it would be great if some already exist.",14/Jan/07 11:48 PM;donnchadh;Updated for SWF 1.0,"17/Jan/07 10:48 AM;vitasthefetus;Donna -- If you have your unit tests working, please share them here (along with the configuration files, if possible).  Thanks!","05/Apr/07 7:42 AM;wheazel;I've been using this openSessionInFlowInterceptor for couple of weeks, and things are looking great.
However, I had some problem getting it to work, with the update example posted here.
Here is my 'setup', hope it helps someone!

The following setup is in a Spring MVC - Spring WebFlow setup. Since the OpenSessionInView and OpenSessionInFlow can't exist side by side, I had to split them up.

<!--
        ###########################
        Maps url's to controllers
        No webflow's
        ###########################
    -->
    <util:properties id=""urlMapping-mappings""
        location=""classpath:xxx/xxx/xxx/web/urlMapping-controllerMappings.properties"" />
    <bean id=""urlMapping""
        class=""org.springframework.web.servlet.handler.SimpleUrlHandlerMapping "">
        <property name=""mappings"" ref=""urlMapping-mappings"" />
        <property name=""order"" value=""1"" />
        <property name=""interceptors"">
            <list>
                <ref bean=""openSessionInViewInterceptor"" />
            </list>
        </property>
    </bean>

    <!--
        ###########################
        Maps url's to controllers
        Webflow's
        ###########################
    -->
    <util:properties id=""urlMapping-mappings-flows""
        location=""classpath:xxx/xxx/xxx/web/urlMapping- flows-controllerMappings.properties"" />
    <bean id=""urlMapping-flows""
        class=""org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"">
        <property name=""mappings"" ref=""urlMapping-mappings-flows"" />
        <property name=""order"" value=""2"" />
        <property name=""interceptors"">
            <list>
                <ref bean=""openSessionInFlowListenerInterceptor"" />
            </list>
        </property>
    </bean>
    
    <!--
        ###########################
        Interceptors
        ###########################
    -->
    <bean name=""openSessionInViewInterceptor""
        class=""org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor"">
        <property name=""sessionFactory"">
            <ref bean=""sessionFactory"" />
        </property>
    </bean>

    <bean id=""openSessionInFlowListenerInterceptor""
        class=""org.springframework.webflow.session.OpenSessionInFlowListenerInterceptor "">
        <property name=""sessionStorage"" >
            <bean class=""org.springframework.webflow.session.impl.HttpSessionBackedSessionWrapperStorage"" />        
        </property>
        <property name=""sessionFactory"" ref=""sessionFactory"" />
    </bean>


from applicationContext-controller.xml

<!-- ################### -->
    <!-- WEBFLOW CONTROLLERS -->
    <!-- ################### -->

    <bean name=""customerFlowController""
        class=""org.springframework.webflow.executor.mvc.FlowController"">
        <property name=""flowExecutor"" ref=""flowExecutor"" />
        <property name=""defaultFlowId"" value=""customer-flow"" />
    </bean>


    <bean id=""flowExecutor""
        class=""org.springframework.webflow.config.FlowExecutorFactoryBean "">
        <property name=""definitionLocator"" ref=""flowRegistry"" />
        <property name=""repositoryType"" value=""CONTINUATION"" />
        <property name=""executionListenerLoader"" ref=""listenerLoader""/>
    </bean>

    <bean id=""flowRegistry""
        class=""org.springframework.webflow.engine.builder.xml.XmlFlowRegistryFactoryBean"">
        <property name=""flowLocations"">
            <list>
                <value>/WEB-INF/flows/xxx/**-flow.xml</value>
            </list>
        </property>
    </bean>

    <bean id=""listenerLoader""
        class=""org.springframework.webflow.execution.factory.ConditionalFlowExecutionListenerLoader"">
        <property name=""listeners"">
            <map>
                <entry>
                    <key><ref bean=""openSessionInFlowListenerInterceptor"" /></key>
                    <value>*</value>
                </entry>
            </map>
        </property> 
    </bean>","09/May/07 1:30 AM;nebhale;Added a HibernateSessionPerConversationListener.  Add the SessionFactory to the listener and the listener to the executor.  All standard Spring/Hibernate behavior will work.  Both native Hibernate and HibernateTemplate repositories will participate in the session and transaction created by the listener.

Revision 7064
","16/May/07 10:56 PM;donnchadh;Hi Ben, nice work.

A couple of questions:
i) Does the session remain bound for the rendering of the view? it looks like it doesn't.
ii) How will this work in an AJAX scenario? access the hibernate session would need to be serialised

In both of these cases HibernateSessionPerConversationListener could be extended to provide the required functionality but this may be something to keep in mind.","03/Jun/07 9:18 PM;willparker;Can the updated patch, (including HibernateSessionPerConversationListener), of this enhancement be made available before 1.1 release? If not, when is 1.1 due to be released?

Apologies if this update is available - I cant seem to locate it. The attachments above our out-dated.
",04/Jun/07 10:33 PM;willparker;Ignore the above - I've accessed the snapshot.,"19/Jun/07 6:46 AM;klr8;A comment from the forums (by Will Parker):

Hi

With regards to the above class which is still in beta version...

Shouldn't the exceptionThrown() method rollback the transaction? Currently it calls unBindSession() which performs a commit().

Should the lines in exceptionThrown() be changed from:

Session hibSession = getHibernateSession(context);
unBindSession(hibSession);


to....


Session hibSession = getHibernateSession(context);
hibSession.getTransaction().rollback();
TransactionSynchronizationManager.unbindResource(h ibSession);

",08/Aug/07 3:03 AM;kdonald;Enhancing for SWF 1.1 m1,,,,,,,,,,
provide a tooltip and decoration for applications,STS-524,73588,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,spingel,spingel,29/Sep/09 10:53 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,01/Oct/09 9:32 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,;30/Sep/09 5:06 PM;ldossantos;18000,,,,,,,,,,,,,,14400,0,18000,125%,14400,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,303091200,,,,,2009-09-30 13:38:37.019,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9kf:,9223372036854775807,9223372036854775807,,,,,"30/Sep/09 1:38 PM;ldossantos;The server tooltip extension point is currently broken, and doesn't take multiple contributions. I've filed a bug at eclipse.org and attached a patch.

290965: the org.eclipse.wst.server.ui.serverToolTip extension point does not accept multiple contributions for a server type
https://bugs.eclipse.org/bugs/show_bug.cgi?id=290965",30/Sep/09 2:57 PM;spingel;Thanks Leo. Then let's focus on providing labels in the view for now.,30/Sep/09 5:06 PM;ldossantos;Added the deployment state to the label decorator. Will look at using a new icon decoration to differentiate 'cloud' based applications versus locally deployed applications ,,,,,,,,,,,,,,,,,,,,
implement categorized discovery view,STS-522,75916,73526,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,29/Sep/09 10:39 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,08/Oct/09 1:50 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,"290853: consider category-based listing of discovery entries
https://bugs.eclipse.org/bugs/show_bug.cgi?id=290853

284501: support reuse of Mylyn Discovery by other tools
https://bugs.eclipse.org/bugs/show_bug.cgi?id=284501",,;05/Oct/09 8:46 PM;spingel;16200,;06/Oct/09 10:47 PM;spingel;18000,,,,,,,,,,,,,28800,0,34200,118%,28800,0,34200,,,,,,,,,,,,,,,,,,,,,,,,,,303177600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9g7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quickfix and validate as-you-type doesn't understand factory-method and reports an error about a missing constructor,STS-510,72909,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,awilkinson,awilkinson,23/Sep/09 1:45 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,21/Oct/09 3:20 PM,2.1.0.SR01,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,1,y3m2,"<beans:bean factory-method=""getPackageAdmin"" class=""com.springsource.kernel.deployer.core.internal.RegionAwarePackageAdminAccessor"">
    <beans:constructor-arg>
        <reference interface=""com.springsource.kernel.osgi.region.Region""/>
    </beans:constructor-arg>
</beans:bean>

The above bean declaration results in an error being reported in the editor. The error reads ""The constructor RegionAwarePackageAdminAccessor with 1 arguments is not defined"". It would appear that it doesn't understand that the use of factory-method means that the ""constructor"" argument is, in fact, an argument to getPackageAdmin which is a static method on RegionAwarePackageAdminAccessor.",,"Time worked: 01:51 from Mon, 19 Oct 2009 00:00:00 -0700 to Mon, 19 Oct 2009 23:59:59 -0700.;20/Oct/09 9:19 AM;thon;6660","Time worked: 08:50 from Tue, 20 Oct 2009 00:00:00 -0700 to Tue, 20 Oct 2009 23:59:59 -0700.;21/Oct/09 3:30 PM;thon;31800",,,,,,,,,,,,,0,0,38460,"9,223,372,036,854,775,807%",0,0,38460,,,,,,,,,,,,,,,23/Sep/09 4:40 AM;cdupuis;sts-510.zip;https://jira.spring.io/secure/attachment/23951/sts-510.zip,,,,,,,,,,,301276800,,,,,2009-09-23 04:39:59.084,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a8uf:,9223372036854775807,9223372036854775807,,,,,"23/Sep/09 4:39 AM;cdupuis;This is another incarnation of differences between the quickfix, validate as-you-type and Spring IDE validations as this only raises an error annotation in the former validation.

Assigning to Terry for fixing in Sprint 4. ",23/Sep/09 4:40 AM;cdupuis;Sample project showing the error.,21/Oct/09 3:20 PM;thon;I have fixed this problem. We still need to do a better job though at using the same rules for validate as-you-type and the Spring IDE validation.,,,,,,,,,,,,,,,,,,,,
Quick fix and as-you-type validation don't understand class and method names and bean references in  namespace elements,STS-509,74905,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,cdupuis,cdupuis,22/Sep/09 1:29 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,08/Feb/10 11:01 AM,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,0,Y3M5,,,"Time worked: 00:04 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;240","Time worked: 05:28 from Wed, 18 Nov 2009 00:00:00 -0800 to Wed, 18 Nov 2009 23:59:59 -0800.;20/Nov/09 9:20 AM;thon;19680","Time worked: 01:09 from Thu, 19 Nov 2009 00:00:00 -0800 to Thu, 19 Nov 2009 23:59:59 -0800.;20/Nov/09 9:20 AM;thon;4140","Time worked: 03:00 from Mon, 7 Dec 2009 00:00:00 -0800 to Mon, 7 Dec 2009 23:59:59 -0800.;08/Dec/09 9:21 AM;thon;10800","Time worked: 01:31 from Tue, 8 Dec 2009 00:00:00 -0800 to Tue, 8 Dec 2009 23:59:59 -0800.;09/Dec/09 1:42 PM;thon;5460",,,,,,,,,,0,0,40320,"9,223,372,036,854,775,807%",0,0,40320,,,,,,,,,,,,,,,,,,,,,,,,,,302572800,,,,,2009-09-22 13:53:11.487,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a8rz:,9223372036854775807,9223372036854775807,,,,,"22/Sep/09 1:53 PM;thon;Christian, can you provide an example of that? Do you mean that quick fix does not work when beans is not the default namespace?","06/Oct/09 4:36 PM;cdupuis;Yes. there is a new class in Spring IDE now: NamespaceElementsRule and also a test with some sample xml. Interestingly this class operates on Xml Elements so we might be able to resue it from the validate as-you-type infrastructure.

{code}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:util=""http://www.springframework.org/schema/util""
	xmlns:task=""http://www.springframework.org/schema/task""
	xmlns:osgi=""http://www.springframework.org/schema/osgi""
	xsi:schemaLocation=""http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"">

	<bean id=""target1"" class=""java.lang.String"" />
 
    <util:list id=""test1"" list-class=""java.lang.String"" />
    <util:list id=""test2"" list-class=""java.lang.NoSuchClass"" />
    <util:list id=""test3"" list-class=""java.util.ArrayList"" />
  
	 	
 	<task:scheduled-tasks>  
 		<task:scheduled ref=""target1"" method=""toString"" fixed-rate=""1""/>
 		<task:scheduled ref=""target1"" method=""nosuchmethod"" fixed-rate=""1""/>
 		<task:scheduled ref=""target2"" method=""toString"" fixed-rate=""1""/>
 	</task:scheduled-tasks>
	
	
	<osgi:reference id=""test4"" > 
		<osgi:interfaces>
			<value>java.util.List</value>	
			<value>java.lang.NoSuchClass</value>	
			<value>java.util.ArrayList</value>	
		</osgi:interfaces>
	</osgi:reference>   
	 
	<util:constant static-field=""org.springframework.core.Ordered.HIGHEST_PRECEDENCE""/> 
	<util:constant static-field=""org.springframework.core.Ordered.NO_SUCH_FIELD""/> 
	<util:constant static-field=""org.springframework.core.NoSuchClass.NO_SUCH_FIELD""/> 
	
</beans>

{code}",,,,,,,,,,,,,,,,,,,,,
Test tc Server support on Workstation 6.5 and 7,STS-505,73872,72161,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,cdupuis,cdupuis,22/Sep/09 4:59 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,12/Oct/09 9:49 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,;06/Oct/09 11:06 PM;spingel;7200,,,,,,,,,,,,,,28800,21600,7200,25%,28800,21600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,303782400,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a3xz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement and test UI WTP server integration for Cloud Foundry,STS-502,73005,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,cdupuis,cdupuis,22/Sep/09 4:56 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,01/Oct/09 9:27 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,"Time worked: 01:29 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;5340","Time worked: 04:14 from Wed, 23 Sep 2009 00:00:00 -0700 to Wed, 23 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;15240","Time worked: 06:24 from Thu, 24 Sep 2009 00:00:00 -0700 to Thu, 24 Sep 2009 23:59:59 -0700.;28/Sep/09 10:42 AM;thon;23040","Time worked: 05:46 from Fri, 25 Sep 2009 00:00:00 -0700 to Fri, 25 Sep 2009 23:59:59 -0700.;28/Sep/09 10:43 AM;thon;20760","Time worked: 05:30 from Mon, 28 Sep 2009 00:00:00 -0700 to Mon, 28 Sep 2009 23:59:59 -0700.;29/Sep/09 10:25 AM;thon;19800","Time worked: 06:20 from Tue, 29 Sep 2009 00:00:00 -0700 to Tue, 29 Sep 2009 23:59:59 -0700.;30/Sep/09 9:40 AM;thon;22800","Time worked: 05:11 from Wed, 30 Sep 2009 00:00:00 -0700 to Wed, 30 Sep 2009 23:59:59 -0700.;01/Oct/09 9:07 AM;thon;18660",;01/Oct/09 9:08 AM;thon;300,"Time worked: 00:19 from Wed, 30 Sep 2009 00:00:00 -0700 to Wed, 30 Sep 2009 23:59:59 -0700.;01/Oct/09 9:09 AM;thon;1140","Time worked: 00:34 from Thu, 1 Oct 2009 00:00:00 -0700 to Thu, 1 Oct 2009 23:59:59 -0700.;01/Oct/09 9:09 AM;thon;2040",;01/Oct/09 6:28 PM;ldossantos;12900,"Time worked: 07:47 from Thu, 1 Oct 2009 00:00:00 -0700 to Thu, 1 Oct 2009 23:59:59 -0700.;01/Oct/09 6:36 PM;thon;28020",;01/Oct/09 9:27 PM;spingel;9000,"Time worked: 00:02 from Fri, 2 Oct 2009 00:00:00 -0700 to Fri, 2 Oct 2009 23:59:59 -0700.;02/Oct/09 6:04 PM;thon;120",144000,0,179160,124%,144000,0,179160,,,,,,,,,,,,,,,,,,,,,,,,,,303782400,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a3z3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement and test core WTP server integration for Cloud Foundry,STS-501,75895,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,cdupuis,cdupuis,22/Sep/09 4:56 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,01/Oct/09 7:43 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,"Time worked: 01:10 from Wed, 23 Sep 2009 00:00:00 -0700 to Wed, 23 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;4200",;29/Sep/09 10:21 AM;spingel;23400,;29/Sep/09 6:19 PM;spingel;18000,;01/Oct/09 12:52 AM;spingel;28800,;01/Oct/09 6:27 PM;ldossantos;10800,;01/Oct/09 7:43 PM;spingel;12600,,,,,,,,,144000,0,97800,67%,144000,0,97800,,,,,,,,,,,,,,,,,,,,,,,,,,303782400,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a3yv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix download template errors after updating to 2.2.0,STS-485,74222,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,21/Sep/09 11:28 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,09/Oct/09 4:12 PM,2.2.0.RELEASE,Sprint 4,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,"Time worked: 00:38 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;2280","Time worked: 01:13 from Mon, 5 Oct 2009 00:00:00 -0700 to Mon, 5 Oct 2009 23:59:59 -0700.;06/Oct/09 9:18 AM;thon;4380","Time worked: 00:21 from Tue, 6 Oct 2009 00:00:00 -0700 to Tue, 6 Oct 2009 23:59:59 -0700.;06/Oct/09 4:21 PM;thon;1260","Time worked: 01:46 from Wed, 7 Oct 2009 00:00:00 -0700 to Wed, 7 Oct 2009 23:59:59 -0700.;08/Oct/09 5:09 PM;thon;6360","Time worked: 04:09 from Fri, 9 Oct 2009 00:00:00 -0700 to Fri, 9 Oct 2009 23:59:59 -0700.;09/Oct/09 4:21 PM;thon;14940",,,,,,,,,,7200,0,29220,405%,7200,0,29220,,,,,,,,,,,,,,,,,,,,,,,,,,303868800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6an:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Template selection wizard should show arrow if there is a new version to download,STS-484,73498,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,21/Sep/09 10:51 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,07/Oct/09 11:09 AM,2.2.0.RELEASE,Sprint 4,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,"Currently if the project was downloaded previously, even if there is a newer version no arrow is shown next to the project name in the selection page.",,"Time worked: 01:21 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;4860","Time worked: 03:03 from Mon, 5 Oct 2009 00:00:00 -0700 to Mon, 5 Oct 2009 23:59:59 -0700.;06/Oct/09 9:18 AM;thon;10980",,,,,,,,,,,,,7200,0,15840,220%,7200,0,15840,,,,,,,,,,,,,,,,,,,,,,,,,,302486400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a67z:,9223372036854775807,9223372036854775807,,,,,07/Oct/09 11:08 AM;thon;An arrow is now shown when a newer version is available. ,,,,,,,,,,,,,,,,,,,,,,
Update batch-graph features for Spring Batch 2.1,STS-480,74318,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,dsyer,dsyer,13/Sep/09 9:12 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,04/Feb/10 5:10 PM,2.1.0.SR01,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,0,Y3M5,Work is underway for Spring Batch 2.1 and the XSD has some changes.  Does that affect the graph view (or normal Spring IDE)?,,;28/Jan/10 5:53 PM;ldossantos;21600,;04/Feb/10 5:10 PM;ldossantos;9900,,,,,,,,,,,,,0,0,31500,"9,223,372,036,854,775,807%",0,0,31500,,,,,,,,,,,,,,,,,,,,,,,,,,292118400,,,,,2010-02-01 16:37:43.995,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2jz:,9223372036854775807,9223372036854775807,,,,,"01/Feb/10 4:37 PM;ldossantos;I've done some work towards generating editor form pages based on the XSD (see STS-784). Spring Batch 2.1 and all future versions will be supported. The graph components need to be updated by hand, but the changes are straightforward enough to make it into STS 2.3.1",04/Feb/10 5:10 PM;ldossantos;The major change here is that there seems to be more use cases of the flow element. The graph has been updated accordingly.,,,,,,,,,,,,,,,,,,,,,
batch-graph editor pane needs scroll bars,STS-479,76327,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,dsyer,dsyer,13/Sep/09 9:10 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,29/Sep/09 4:40 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,Y3M1,batch-graph editor pane needs scroll bars,,"Time worked: 00:23 from Thu, 17 Sep 2009 00:00:00 -0700 to Thu, 17 Sep 2009 23:59:59 -0700.;17/Sep/09 4:45 PM;thon;1380",;29/Sep/09 4:40 PM;ldossantos;7200,,,,,,,,,,,,,0,0,8580,"9,223,372,036,854,775,807%",0,0,8580,,,,,,,,,,,,,,,,,,,,,,,,,,303177600,,,,,2009-09-17 11:24:58.383,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2jr:,9223372036854775807,9223372036854775807,,,,,"17/Sep/09 11:24 AM;thon;Hi Dave, could you please attach screen shot of the area that you think scroll bars will be needed? Currently there are scroll bars in the graph panes. Did you mean the part with the controls for adding job, flow, etc? Thanks!","29/Sep/09 2:43 PM;ldossantos;Horizontal scrolling seems to be alright, but the editor pane is definitely miscalculating the vertical space. I'll take a look at it.",29/Sep/09 4:40 PM;ldossantos;The next release should do a better job of calculating scroll bars for complex graphs.,,,,,,,,,,,,,,,,,,,,
Dashboard should display cached feeds on startup,STS-473,74220,72575,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,04/Sep/09 4:23 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,10/Sep/09 9:38 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,"Dashboard should be populated with cached feeds right after startup. If there are new entries, then refresh those entries only",,"Time worked: 04:51 from Wed, 9 Sep 2009 00:00:00 -0700 to Wed, 9 Sep 2009 23:59:59 -0700.;09/Sep/09 5:06 PM;thon;17460","Time worked: 00:42 from Thu, 10 Sep 2009 00:00:00 -0700 to Thu, 10 Sep 2009 23:59:59 -0700.;10/Sep/09 9:39 AM;thon;2520","Time worked: 00:41 from Fri, 11 Sep 2009 00:00:00 -0700 to Fri, 11 Sep 2009 23:59:59 -0700.;11/Sep/09 4:55 PM;thon;2460",,,,,,,,,,,,14400,0,22440,155%,14400,0,22440,,,,,,,,,,,,,,,,,,,,,,,,,,304819200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xdj:,9223372036854775807,9223372036854775807,,,,,10/Sep/09 9:38 AM;thon;Dashboard now displays cached feeds on startup and refreshes only when there are new feeds.,,,,,,,,,,,,,,,,,,,,,,
Fix template wizard UI nits,STS-472,75933,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,04/Sep/09 4:22 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,04/Sep/09 4:31 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,"* change refresh button in selection page to use words instead of icon
* show task name in progress bar during refresh",,"Time worked: 00:08 from Fri, 4 Sep 2009 00:00:00 -0700 to Fri, 4 Sep 2009 23:59:59 -0700.;04/Sep/09 5:00 PM;thon;480",,,,,,,,,,,,,,0,0,480,"9,223,372,036,854,775,807%",0,0,480,,,,,,,,,,,,,,,,,,,,,,,,,,305337600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xcv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Template project wizard should show better messages,STS-471,74312,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,04/Sep/09 4:20 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,17/Sep/09 10:07 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,Empty required fields should show instruction like message to prompt user. Error messages should only be used if something is entered that does not fit criteria.,,"Time worked: 00:25 from Fri, 4 Sep 2009 00:00:00 -0700 to Fri, 4 Sep 2009 23:59:59 -0700.;04/Sep/09 5:00 PM;thon;1500","Time worked: 01:36 from Wed, 9 Sep 2009 00:00:00 -0700 to Wed, 9 Sep 2009 23:59:59 -0700.;09/Sep/09 5:06 PM;thon;5760",,,,,,,,,,,,,7200,0,7260,100%,7200,0,7260,,,,,,,,,,,,,,,,,,,,,,,,,,305337600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xc7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
allow running from workspace metadata configuration,STS-470,76017,72561,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,03/Sep/09 9:33 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,03/Sep/09 9:52 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,,,,;03/Sep/09 9:52 PM;spingel;3600,;08/Sep/09 3:06 PM;spingel;3600,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,305424000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09zbz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request Mapping view does not refresh if project is closed.,STS-463,74302,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,mpollack,mpollack,02/Sep/09 11:59 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,03/Sep/09 1:00 PM,Sprint 3,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,,,;03/Sep/09 1:00 PM;ldossantos;4200,,,,,,,,,,,,,,0,0,4200,"9,223,372,036,854,775,807%",0,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,305424000,,,,,2009-09-03 13:00:11.256,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09tef:,9223372036854775807,9223372036854775807,,,,,03/Sep/09 1:00 PM;ldossantos;The view will refresh itself if the project is closed or the resource belonging to the input is deleted.,,,,,,,,,,,,,,,,,,,,,,
Unable to update the eclipse 3.4 from spring update site,STS-462,74041,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Cannot Reproduce,,amit_jat,amit_jat,28/Aug/09 11:16 PM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,07/Dec/09 10:41 AM,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,0,y3m3,"
Sir ,
             I am unable to update the eclipse through your update site for spring. 

site url is -   http://www.springsource.org/update/e3.4
and i m using the eclipse 3.4 IDE .
",,"Time worked: 00:59 from Tue, 17 Nov 2009 00:00:00 -0800 to Tue, 17 Nov 2009 23:59:59 -0800.;18/Nov/09 7:56 AM;thon;3540",,,,,,,,,,,,,,0,0,3540,"9,223,372,036,854,775,807%",0,0,3540,,,,,,,,,,,,,,,,,,,,,,,,,,297216000,,,,,2009-11-17 14:50:55.644,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a91b:,9223372036854775807,9223372036854775807,,,,,"17/Nov/09 2:50 PM;thon;Hi Amit, can you try adding the following sites and updating again:

http://download.eclipse.org/tools/mylyn/update/e3.4
http://download.eclipse.org/tools/mylyn/update/extras","07/Dec/09 10:41 AM;spingel;Amit, please reopen this bug if you are still experiencing the error after adding the update sites listed in comment 1.",,,,,,,,,,,,,,,,,,,,,
feature license issues,STS-461,73513,,Task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,,cdupuis,cdupuis,28/Aug/09 3:19 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,01/Sep/09 6:02 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,y3m1,"The Mylyn Integration Source feature uses a wrong feature.properties file.

Missing line break before ""Applicable licenses""",,;01/Sep/09 6:01 PM;spingel;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,305510400,,,,,2009-08-28 16:03:37.59,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a9dz:,9223372036854775807,9223372036854775807,,,,,28/Aug/09 4:03 PM;spingel;I'll take a look.,01/Sep/09 6:02 PM;spingel;Fixed in next Mylyn weekly build.,02/Sep/09 11:45 AM;cdupuis;Interesting that you fixed that in Mylyn as this was meant to be a Spring IDE bug.,"02/Sep/09 1:06 PM;spingel;Oops, my mistake. The Mylyn licenses were apparently missing a bunch line breaks as well.",02/Sep/09 1:13 PM;cdupuis;umso besser. :-),,,,,,,,,,,,,,,,,,
JFace exception on launch of Project Wizard,STS-460,74012,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,cdupuis,cdupuis,28/Aug/09 3:18 PM,30/Nov/10 5:00 PM,10/May/19 2:37 AM,28/Aug/09 3:41 PM,Sprint 3,,,,,,2.5.0.RC1,,,,,,,,0,Y2M8,"java.lang.NullPointerException
	at org.eclipse.jface.wizard.WizardDialog.updateButtons(WizardDialog.java:1257)
	at com.springsource.sts.wizard.template.TemplateSelectionWizardPage$5.selectionChanged(TemplateSelectionWizardPage.java:276)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:162)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:160)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:2132)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1669)
	at org.eclipse.jface.viewers.TableViewer.setSelection(TableViewer.java:158)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:392)
	at com.springsource.sts.wizard.template.TemplateSelectionWizardPage.refreshPage(TemplateSelectionWizardPage.java:414)
	at com.springsource.sts.wizard.template.TemplateSelectionWizardPage.createControl(TemplateSelectionWizardPage.java:280)
	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:170)
	at org.eclipse.jface.wizard.WizardDialog.createPageControls(WizardDialog.java:675)
	at org.eclipse.jface.wizard.WizardDialog.createContents(WizardDialog.java:549)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1089)
	at org.eclipse.ui.internal.actions.NewWizardShortcutAction.run(NewWizardShortcutAction.java:122)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1287)",,"Time worked: 00:15 from Fri, 28 Aug 2009 00:00:00 -0700 to Fri, 28 Aug 2009 23:59:59 -0700.;28/Aug/09 5:08 PM;thon;900",,,,,,,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,305942400,,,,,2009-08-28 15:41:01.477,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9fj:,9223372036854775807,9223372036854775807,,,,,28/Aug/09 3:41 PM;thon;Should be fixed now. Let me know if you still see the NPE.,,,,,,,,,,,,,,,,,,,,,,
As a user I would like to be able to use an NTLM proxy,STS-459,72876,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,28/Aug/09 1:39 PM,07/Apr/17 7:52 AM,10/May/19 2:37 AM,26/Feb/10 9:46 AM,,,,,,,2.3.1.RELEASE,2.3.2.RELEASE,Sprint 10,,,,,,2,,"252002: [filetransfer] support NTLMv2 authentication with httpclient provider
https://bugs.eclipse.org/bugs/show_bug.cgi?id=252002",,;09/Nov/09 2:36 PM;spingel;7200,,,,,,,,,,,,,,,0,7200,,0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,65836800,,,,,2017-04-07 07:52:09.475,9223372036854775807,false,mlippert(mlippert),,,,0|i09w0f:,9223372036854775807,9223372036854775807,,,,,"07/Apr/17 7:52 AM;mlippert;We moved issue tracking for this project to https://github.com/spring-projects/spring-ide.
If you would like to comment on or re-open this issue, please file a new issue at GitHub and refer to this one.",,,,,,,,,,,,,,,,,,,,,,
Create project descriptor from project file in template wizard,STS-455,74315,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,27/Aug/09 9:03 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,28/Aug/09 11:30 AM,Sprint 1,Sprint 3,,,,,2.1.0.RELEASE,Sprint 1,Sprint 3,,,,,,0,Y2M8,"Currently a new project descriptor is created when a template project is created, which omits the spring and java nature that exist in the zipped project.",,"Time worked: 02:32 from Thu, 27 Aug 2009 00:00:00 -0700 to Thu, 27 Aug 2009 23:59:59 -0700.;27/Aug/09 1:21 PM;thon;9120",,,,,,,,,,,,,,7200,0,9120,126%,7200,0,9120,,,,,,,,,,,,,,,,,,,,,,,,,,306028800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5in:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error during project creation,STS-454,76044,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,cdupuis,cdupuis,26/Aug/09 5:14 PM,30/Nov/10 4:59 PM,10/May/19 2:37 AM,17/Sep/09 10:48 AM,,,,,,,2.5.0.RC1,,,,,,,,0,,"when running the Shared Services WAR project template creation

{code}
org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:3884)
	at org.eclipse.swt.SWT.error(SWT.java:3799)
	at org.eclipse.swt.SWT.error(SWT.java:3770)
	at org.eclipse.swt.widgets.Display.error(Display.java:1127)
	at org.eclipse.swt.widgets.Display.checkDevice(Display.java:628)
	at org.eclipse.swt.widgets.Display.getActiveShell(Display.java:1247)
	at com.springsource.sts.ui.UiUtil.getShell(UiUtil.java:79)
	at com.springsource.sts.ui.UiStatusHandler.logAndDisplay(UiStatusHandler.java:16)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator.importFiles(TemplateProjectCreator.java:170)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator.access$2(TemplateProjectCreator.java:147)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator$1.execute(TemplateProjectCreator.java:83)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
	at com.springsource.sts.wizard.template.infrastructure.processor.TemplateProjectCreator.createProject(TemplateProjectCreator.java:111)
	at com.springsource.sts.wizard.template.infrastructure.processor.DirectoryProcessor.process(DirectoryProcessor.java:44)
	at com.springsource.sts.wizard.template.infrastructure.processor.Processor.process(Processor.java:35)
	at com.springsource.sts.wizard.template.TemplateWizard$1.run(TemplateWizard.java:105)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)

{code}",,"Time worked: 00:17 from Thu, 17 Sep 2009 00:00:00 -0700 to Thu, 17 Sep 2009 23:59:59 -0700.;17/Sep/09 4:45 PM;thon;1020",,,,,,,,,,,,,,0,0,1020,"9,223,372,036,854,775,807%",0,0,1020,,,,,,,,,,,,,,,,,,,,,,,,,,306115200,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a5jr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add refresh button for template wizard,STS-453,73530,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,26/Aug/09 4:42 PM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,28/Aug/09 11:21 AM,2.1.0.RELEASE,Sprint 3,,,,,2.1.0.RELEASE,2.2.0.RELEASE,Sprint 3,,,,,,0,Y2M8,Add refresh button for refreshing list of available templates. Refresh should automatically update the list in the list without users reopening the wizard.,,"Time worked: 01:30 from Thu, 27 Aug 2009 00:00:00 -0700 to Thu, 27 Aug 2009 23:59:59 -0700.;27/Aug/09 1:21 PM;thon;5400",,,,,,,,,,,,,,14400,0,5400,37%,14400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,306115200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5jz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update templates to use new json descriptor,STS-449,74183,72325,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 5:10 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,26/Aug/09 11:12 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,Project name is no longer specify as a UI element. All template wizards will have the project name/location section that project wizard has. Needs to update existing templates to remove projectname fields.,,"Time worked: 00:44 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 11:11 AM;thon;2640","Time worked: 00:16 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 4:46 PM;thon;960",,,,,,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,306115200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5an:,9223372036854775807,9223372036854775807,,,,,"26/Aug/09 11:12 AM;thon;updated shared library, shared service, shared services war templates as well as updated wiki.",,,,,,,,,,,,,,,,,,,,,,
add support for recognizing static resources,STS-448,73838,74641,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,25/Aug/09 4:59 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,20/Sep/09 6:21 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,y3m2,,,;11/Sep/09 9:41 PM;spingel;10800,;20/Sep/09 6:21 PM;spingel;10800,,,,,,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5v3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
support editing of property files,STS-447,72801,72561,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,25/Aug/09 4:58 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,08/Sep/09 3:07 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,,,,;03/Sep/09 10:46 PM;spingel;14400,;08/Sep/09 3:07 PM;spingel;7200,,,,,,,,,,,,,57600,0,21600,37%,57600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5vb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
modify tutorials to reuse Tomcat installed through configurator,STS-446,72726,74212,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,25/Aug/09 4:53 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,09/Sep/09 8:36 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,,,,;09/Sep/09 8:36 PM;spingel;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5vr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
design dashboard UI for installing server runtimes,STS-445,74332,74212,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,25/Aug/09 4:53 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,11/Sep/09 9:42 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,, * Validate configuration after download and remove directory if download is canceled or fails.,,;09/Sep/09 6:41 PM;spingel;10800,"Time worked: 00:14 from Thu, 10 Sep 2009 00:00:00 -0700 to Thu, 10 Sep 2009 23:59:59 -0700.;10/Sep/09 5:01 PM;thon;840","Time worked: 01:22 from Tue, 15 Sep 2009 00:00:00 -0700 to Tue, 15 Sep 2009 23:59:59 -0700.;17/Sep/09 11:03 AM;thon;4920",,,,,,,,,,,,14400,0,16560,115%,14400,0,16560,,,,,,,,,,,,,,,09/Sep/09 6:27 PM;spingel;screenshot.png;https://jira.spring.io/secure/attachment/24070/screenshot.png,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5vz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
replace shell scripts with ant based build,STS-443,74533,74338,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,25/Aug/09 4:46 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,19/Jan/10 7:01 PM,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,0,y3m5,"* Make build basebuilder based
* Support running Eclipse, Performance and SWTbot tests

http://wiki.eclipse.org/Getting_Started_With_Aggregator_(Buckminster)",,;21/Sep/09 8:46 PM;spingel;10800,;04/Nov/09 6:17 AM;spingel;10800,;09/Nov/09 2:18 PM;spingel;10800,;23/Dec/09 7:43 PM;spingel;14400,;23/Dec/09 7:43 PM;spingel;14400,;23/Dec/09 7:44 PM;spingel;7200,;19/Jan/10 7:01 PM;spingel;43200,,,,,,,,57600,0,111600,193%,57600,0,111600,,,,,,,,,,,,,,,,,,,,,,,,,,304732800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5tb:,9223372036854775807,9223372036854775807,,,,,11/Sep/09 3:20 PM;spingel;Using the mirror task for provisioning has turned out to be rather brittle and cumbersome to maintain. I'll take a look at Buckminster to validate if that is an option for managing dependencies.,,,,,,,,,,,,,,,,,,,,,,
Implement bean rename refactoring from renaming @bean methods,STS-442,76370,74066,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 2:02 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,17/Sep/09 9:12 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,,,"Time worked: 04:29 from Tue, 1 Sep 2009 00:00:00 -0700 to Tue, 1 Sep 2009 23:59:59 -0700.;01/Sep/09 5:00 PM;thon;16140","Time worked: 04:30 from Wed, 2 Sep 2009 00:00:00 -0700 to Wed, 2 Sep 2009 23:59:59 -0700.;03/Sep/09 9:18 AM;thon;16200","Time worked: 05:00 from Thu, 3 Sep 2009 00:00:00 -0700 to Thu, 3 Sep 2009 23:59:59 -0700.;03/Sep/09 10:27 PM;thon;18000","Time worked: 03:41 from Fri, 4 Sep 2009 00:00:00 -0700 to Fri, 4 Sep 2009 23:59:59 -0700.;04/Sep/09 5:00 PM;thon;13260","Time worked: 02:40 from Thu, 10 Sep 2009 00:00:00 -0700 to Thu, 10 Sep 2009 23:59:59 -0700.;10/Sep/09 5:01 PM;thon;9600","Time worked: 05:48 from Fri, 11 Sep 2009 00:00:00 -0700 to Fri, 11 Sep 2009 23:59:59 -0700.;11/Sep/09 4:55 PM;thon;20880","Time worked: 04:59 from Tue, 15 Sep 2009 00:00:00 -0700 to Tue, 15 Sep 2009 23:59:59 -0700.;17/Sep/09 11:03 AM;thon;17940","Time worked: 00:45 from Thu, 17 Sep 2009 00:00:00 -0700 to Thu, 17 Sep 2009 23:59:59 -0700.;17/Sep/09 4:45 PM;thon;2700","Time worked: 01:14 from Fri, 18 Sep 2009 00:00:00 -0700 to Fri, 18 Sep 2009 23:59:59 -0700.;18/Sep/09 2:53 PM;thon;4440",,,,,,86400,0,119160,137%,86400,0,119160,,,,,,,,,,,,,,,,,,,,,,,,,,304214400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5u7:,9223372036854775807,9223372036854775807,,,,,17/Sep/09 9:12 AM;thon;Added refactoring of bean reference when renaming the method definition with an @bean annotation,,,,,,,,,,,,,,,,,,,,,,
implement problem markers in the servers view,STS-440,74498,73974,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 2:02 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,02/Sep/09 3:55 PM,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,0,Y3M1,,,;28/Aug/09 3:41 PM;ldossantos;12000,,,,,,,,,,,,,,43200,0,12000,27%,43200,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,305510400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5qv:,9223372036854775807,9223372036854775807,,,,,02/Sep/09 3:55 PM;ldossantos;First pass adds a label decorator to the applications stating whether the application has been deployed successfully or not. We'll need more information from the server if we want to give details about what caused the deployment failure.,,,,,,,,,,,,,,,,,,,,,,
investigate the new server view's common navigator api,STS-438,76305,73974,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:50 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,28/Aug/09 3:40 PM,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,0,Y2M8,,,;28/Aug/09 3:40 PM;ldossantos;2400,,,,,,,,,,,,,,14400,0,2400,16%,14400,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5mn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add project location option to new template project wizard,STS-437,74534,72325,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 1:45 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,26/Aug/09 10:25 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,"Time worked: 02:07 from Tue, 25 Aug 2009 00:00:00 -0700 to Tue, 25 Aug 2009 23:59:59 -0700.;25/Aug/09 5:15 PM;thon;7620","Time worked: 00:57 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 10:25 AM;thon;3420","Time worked: 00:33 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 4:46 PM;thon;1980",,,,,,,,,,,,28800,0,13020,45%,28800,0,13020,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5ov:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
rework the config editor to honour the graphical capabilities preference,STS-435,72767,72541,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:41 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,31/Aug/09 5:20 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,;31/Aug/09 5:20 PM;ldossantos;13500,,,,,,,,,,,,,,28800,0,13500,46%,28800,0,13500,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5pj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
implement a preference option for enabling/disabling graphical capabilities,STS-434,76309,72541,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:39 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,31/Aug/09 1:52 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,;31/Aug/09 1:52 PM;ldossantos;4500,,,,,,,,,,,,,,14400,0,4500,31%,14400,0,4500,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5pz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
hook formatter into manifest auto-generation tools,STS-433,72515,72580,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:38 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,22/Oct/09 6:47 PM,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,0,Y3M2,,,;26/Aug/09 5:50 PM;ldossantos;24300,;01/Sep/09 5:49 PM;ldossantos;18000,;02/Sep/09 5:39 PM;ldossantos;14400,;03/Sep/09 5:32 PM;ldossantos;6300,;22/Oct/09 6:47 PM;ldossantos;18900,,,,,,,,,,7200,0,81900,"1,137%",7200,0,81900,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5nb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
investigate PDE's manifest formatter for reuse possibilty,STS-432,74257,72580,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:37 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,25/Aug/09 4:32 PM,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,0,Y2M8,,,;25/Aug/09 4:32 PM;ldossantos;3900,,,,,,,,,,,,,,14400,10500,3900,27%,14400,10500,3900,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5nj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine format and location to persist RSS feeds,STS-431,75918,72575,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 1:35 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,31/Aug/09 1:00 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,"Time worked: 00:30 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 4:46 PM;thon;1800",,,,,,,,,,,,,,14400,0,1800,12%,14400,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,305683200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5o7:,9223372036854775807,9223372036854775807,,,,,31/Aug/09 1:00 PM;thon;Storing in .metadata/.sts/feeds,,,,,,,,,,,,,,,,,,,,,,
implement and test a mechanism for saving an editor's last active tab,STS-430,75185,75239,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,25/Aug/09 1:35 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,27/Aug/09 4:43 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,;27/Aug/09 4:43 PM;ldossantos;19200,,,,,,,,,,,,,,28800,0,19200,66%,28800,0,19200,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5on:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement RSS feeds persistence,STS-429,74098,72575,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 1:34 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,31/Aug/09 1:02 PM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,,,"Time worked: 03:23 from Fri, 28 Aug 2009 00:00:00 -0700 to Fri, 28 Aug 2009 23:59:59 -0700.;28/Aug/09 5:08 PM;thon;12180","Time worked: 03:16 from Mon, 31 Aug 2009 00:00:00 -0700 to Mon, 31 Aug 2009 23:59:59 -0700.;31/Aug/09 1:02 PM;thon;11760","Time worked: 00:07 from Tue, 1 Sep 2009 00:00:00 -0700 to Tue, 1 Sep 2009 23:59:59 -0700.;01/Sep/09 5:00 PM;thon;420",,,,,,,,,,,,28800,0,24360,84%,28800,0,24360,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5lj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement strategy for making sure updated RSS feeds are saved,STS-428,74196,72575,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,25/Aug/09 1:33 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,01/Sep/09 9:39 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y2M8,"Needs to implement mechanism to determine if feeds are read correctly. If getting new feeds failed, read from old feeds. Otherwise read from new feeds and store new feeds in cache.",,"Time worked: 03:42 from Mon, 31 Aug 2009 00:00:00 -0700 to Mon, 31 Aug 2009 23:59:59 -0700.;31/Aug/09 7:39 PM;thon;13320",,,,,,,,,,,,,,14400,0,13320,92%,14400,0,13320,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a65r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
review UI and implementation,STS-424,74568,72605,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,ldossantos,ldossantos,25/Aug/09 11:22 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,06/Oct/09 11:08 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,,,,;11/Sep/09 9:43 PM;spingel;3600,;29/Sep/09 6:20 PM;spingel;3600,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,302572800,,,,,2009-10-06 23:08:41.654,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a67j:,9223372036854775807,9223372036854775807,,,,,06/Oct/09 11:08 PM;spingel;This is done. The commit is pending a Mylyn release,,,,,,,,,,,,,,,,,,,,,,
Quickfix validation does not understand nested property paths,STS-415,72499,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,cdupuis,cdupuis,20/Aug/09 12:59 PM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,29/Jan/10 8:00 AM,2.1.0.SR01,,,,,,2.3.1.RELEASE,,,,,,,,0,Y3M5,"Example:

{code}
<bean id="""" class=""Foo"" >
	<property name=""bar.foo"" value=""test"" />
</bean>
{code}",,"Time worked: 03:11 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;11460","Time worked: 07:20 from Sun, 18 Oct 2009 00:00:00 -0700 to Sat, 24 Oct 2009 23:59:59 -0700.;23/Oct/09 10:51 AM;thon;26400","Time worked: 07:32 from Mon, 2 Nov 2009 00:00:00 -0800 to Mon, 2 Nov 2009 23:59:59 -0800.;03/Nov/09 9:25 AM;thon;27120",,,,,,,,,,,,0,0,64980,"9,223,372,036,854,775,807%",0,0,64980,,,,,,,,,,,,,,,,,,,,,,,,,,306633600,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a1w7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve SpringSource logo in template selection wizard,STS-413,76452,,Task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,thon,thon,20/Aug/09 11:09 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,17/Sep/09 11:06 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,give the SpringSource logo a ~5px outer glow,,"Time worked: 00:36 from Thu, 17 Sep 2009 00:00:00 -0700 to Thu, 17 Sep 2009 23:59:59 -0700.;17/Sep/09 4:45 PM;thon;2160",,,,,,,,,,,,,,,0,2160,,,0,2160,,,,,,,,,,,,,,,,,,,,,,,,,,306633600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1x3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
support specification of version constraints for remote content,STS-408,74890,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,19/Aug/09 2:39 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,19/Aug/09 9:27 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,y2m8,The remote descriptor should support specifying version constraints if a template or tutorial requires a certain version of STS so it is not displayed on older versions.,,;19/Aug/09 9:27 PM;spingel;3600,,,,,,,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,306720000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1tb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
add UI polish,STS-405,74219,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,18/Aug/09 3:39 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,20/Aug/09 2:15 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"* -View needs an icon-
* -Menu actions invoked from the view need icons-
* -Need to add a menu action to open the view from a config file in the Package Explorer. Can currently only populate the view from the common navigator (Spring Explorer/Project Explorer)-
* -Would be nice to have an option to toggle between horizontal & vertical modes for the Javadoc viewer. Currently defaults to horizontal orientation.-
* -Need to ensure that view and menu actions are contributed into the correct categories (ex. view currently sits under Other category instead of Spring category.-
* -Want the Open URL Wizard to remember the last 10 items per field.-
* -Handle exceptions gracefully & externalize strings.-",,;18/Aug/09 5:19 PM;ldossantos;6000,;19/Aug/09 5:21 PM;ldossantos;19200,;20/Aug/09 2:15 PM;ldossantos;9900,,,,,,,,,,,,0,0,35100,"9,223,372,036,854,775,807%",0,0,35100,,,,,,,,,,,,,,,,,,,,,,,,,,306806400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a227:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
When a target manifest.mf/test.mf has syntax errors bundlor does not overwrite it,STS-391,72538,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Cannot Reproduce,,rklaren,rklaren,11/Aug/09 8:48 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,06/Nov/09 10:45 AM,2.1.0.SR01,,,,,,2.3.0.RELEASE,Sprint 6,,,,,,,0,," * Put a comma on the last import-package of manifest (note: no highlight of syntax error in manifest, same for template.mf/test.mf)
 * Run manifest generation -> get error about manifest not existing in any source folder
",,;26/Oct/09 3:53 PM;ldossantos;2700,,,,,,,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,299894400,,,,,2009-10-26 15:53:25.859,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09zw7:,9223372036854775807,9223372036854775807,,,,,"11/Aug/09 10:28 AM;rklaren;See also STS-394. It turns out that the problem is mostly with test.mf and only with the manifest.mf if build automatically is turned off.
","26/Oct/09 3:53 PM;ldossantos;Is this still a problem, or was this fixed alongside STS-394. I'm unable to reproduce at the moment.",06/Nov/09 10:45 AM;thon;Closing this issue. Please reopen if this problem still exists.,,,,,,,,,,,,,,,,,,,,
Implement context menu actions for selection,STS-389,74447,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,07/Aug/09 4:42 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,11/Aug/09 10:24 AM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"From initial design discussion, features would include:
* Navigate to Java source
* Toggle breakpoint on handler method
* Open in browser (covered by STS-377)",,;10/Aug/09 6:02 PM;ldossantos;5400,;11/Aug/09 10:24 AM;ldossantos;4500,,,,,,,,,,,,,14400,0,9900,68%,14400,0,9900,,,,,,,,,,,,,,,,,,,,,,,,,,307411200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yef:,9223372036854775807,9223372036854775807,,,,,11/Aug/09 10:24 AM;ldossantos;Open in Java Editor and Toggle Breakpoint actions have been added to the view's context menu. Open in Browser will be covered by STS-377,,,,,,,,,,,,,,,,,,,,,,
Implement a sorter for the view,STS-388,72799,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,07/Aug/09 4:42 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,10/Aug/09 3:55 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"From comment #2 of STS-246:

I second this: putting all @RequestMappings in one separate window, rather than in the Tree Control That Rules Them All, is a good idea.

Extra browny points the mappings are sorted in order of explicitness. So given a list with the following patterns:

/hotels/new
/hotels/{hotel}
/hotels/*

the returned comparator will sort this list so that the order will be as above. You can use the AntPatchMatcher.getPatternComparator(null) for this. Ping me for details.",,;10/Aug/09 2:21 PM;ldossantos;5400,;10/Aug/09 3:55 PM;ldossantos;1800,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,307756800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yen:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle Classpath container disappears,STS-387,75076,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Complete,,vkok,vkok,07/Aug/09 5:55 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,20/Aug/09 1:41 AM,2.1.0.RELEASE,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,,"Currently busy with importing some OSGi projects in my eclipse. What I do is:
 
 * Import project with Eclipse
 * Add Spring OSGi nature and DM as target runtime
 * Add it to my par project to so my bundle will see my other bundles
 * Build automatically is on so a rebuild is initiated
 

Suddenly some of my other open bundles won't compile anymore as they don't see a lot of my common bundles any more (like Hibernate) and indeed my Bundle Repository is missing in my list. When doing a Sprint Tools -> Refresh Bundle Classpath Container the bundle repository is back and its compiling again.

Please contact me for more info.
 ",Windows XP. Eclipse 3.5 ,;15/Aug/09 2:00 PM;cdupuis;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,19/Aug/09 1:23 AM;rklaren;error-log-2.1.1.200908181942-CI-R3651-B357.txt;https://jira.spring.io/secure/attachment/24712/error-log-2.1.1.200908181942-CI-R3651-B357.txt,19/Aug/09 10:02 AM;rklaren;error-log-2.1.1.200908191541-CI-R302-B102.txt;https://jira.spring.io/secure/attachment/24636/error-log-2.1.1.200908191541-CI-R302-B102.txt,,,,,,,,,,306720000,,,,,2009-08-07 06:03:37.445,9223372036854775807,false,tmarshall(tmarshall),,,,0|i09ypb:,9223372036854775807,9223372036854775807,,,,,"07/Aug/09 6:03 AM;cdupuis;I'm not quite sure I understand the section 'and indeed my Bundle Repository is missing in my list'. Can add some more details to that please? To what list are you referring?

Thanks for reporting this.

Christian","07/Aug/09 7:05 AM;vkok;yeah you're right quite vague description.

What I mean is the leaf  ""Bundle Dependencies"" in the package explorer.

Grtz,

Vincent","07/Aug/09 9:13 AM;cdupuis;Vincent, can you see any suspicious entries in your error log?

Would it be possible to get some sample project with which I can try to re-create this issue. I can't seem to be able a setup that exhibits the same problem.

Thanks, Christian","10/Aug/09 2:04 AM;vkok;Christian,

The only log I get in my error log is a nullpointer in some AOP parts:

eclipse.buildId=I20090611-1540
java.version=1.6.0_05
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86 -product com.springsource.sts.ide


Error
Mon Aug 10 09:07:14 CEST 2009
Internal Error

java.lang.NullPointerException
at org.springframework.ide.eclipse.core.java.Introspector.findMethod(Introspector.java:247)
at org.springframework.ide.eclipse.core.java.JdtUtils.getMethod(JdtUtils.java:353)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob$1.doWithActiveProjectClassLoader(AopReferenceModelBuilderJob.java:236)
at org.springframework.ide.eclipse.core.java.JdtUtils$DefaultProjectClassLoaderSupport.executeCallback(JdtUtils.java:770)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.buildAopReferencesForBean(AopReferenceModelBuilderJob.java:207)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.buildAopReferencesForBeans(AopReferenceModelBuilderJob.java:306)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.buildAopReferencesForBeansConfig(AopReferenceModelBuilderJob.java:294)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.buildAopReferencesForFile(AopReferenceModelBuilderJob.java:390)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.buildAopModel(AopReferenceModelBuilderJob.java:136)
at org.springframework.ide.eclipse.aop.core.internal.model.builder.AopReferenceModelBuilderJob.run(AopReferenceModelBuilderJob.java:432)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)


I don't know whether this has something to do with it. Just checked my .classpath file as well and the: <classpathentry kind=""con"" path=""com.springsource.server.ide.jdt.core.MANIFEST_CLASSPATH_CONTAINER""/> is still there.


I will be travelling the coming weeks so won't be able to respond. Will ask my colleague to watch this issue and respond on your questions. He has the same issue.

Grtz Vincent","10/Aug/09 2:17 AM;bjansen;Hi Christian,

I am the collegue of Vincent :)
I'm having the same problem.

In my error log I see a different error message. Not sure if it has to do with this issue, but I hope you can tell me.

java.lang.RuntimeException: java.nio.channels.OverlappingFileLockException
at com.springsource.repository.internal.nio.NioFileTemplate.execute(NioFileTemplate.java:71)
at com.springsource.repository.internal.SerializingArtifactDescriptorPersister.persistArtifactDescriptors(SerializingArtifactDescriptorPersister.java:70)
at com.springsource.repository.internal.StandardArtifactDescriptorDepository.persist(StandardArtifactDescriptorDepository.java:154)
at com.springsource.repository.internal.ExternalStorageRepository.<init>(ExternalStorageRepository.java:63)
at com.springsource.repository.internal.StandardRepositoryFactory.createRepository(StandardRepositoryFactory.java:77)
at com.springsource.repository.internal.StandardRepositoryFactory.createRepository(StandardRepositoryFactory.java:56)
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10.createBundleRepository(DependencyLocator10.java:714)
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10.access$2(DependencyLocator10.java:697)
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10$SystemPackageFilteringCompositeBundleRepository.<init>(DependencyLocator10.java:505)
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10.<init>(DependencyLocator10.java:145)
at com.springsource.server.ide.runtime.core.ServerUtils.createDependencyLocator(ServerUtils.java:167)
at com.springsource.server.ide.runtime.core.ServerUtils.createDependencyLocator(ServerUtils.java:138)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.createDependencyLocator(ServerClasspathContainer.java:540)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.refreshClasspathEntries(ServerClasspathContainer.java:261)
at com.springsource.server.ide.jdt.internal.core.util.ClasspathUtils.updateClasspathContainer(ClasspathUtils.java:174)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainerUpdateJob.runInWorkspace(ServerClasspathContainerUpdateJob.java:76)
at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.nio.channels.OverlappingFileLockException
at sun.nio.ch.FileChannelImpl$SharedFileLockTable.checkList(FileChannelImpl.java:1173)
at sun.nio.ch.FileChannelImpl$SharedFileLockTable.add(FileChannelImpl.java:1075)
at sun.nio.ch.FileChannelImpl.lock(FileChannelImpl.java:837)
at java.nio.channels.FileChannel.lock(FileChannel.java:860)
at com.springsource.repository.internal.nio.NioFileTemplate.execute(NioFileTemplate.java:68)
... 17 more

Greets, Bas Jansen","10/Aug/09 2:30 AM;bjansen;I restarted again and now I get the same error as above, but with a different description:

java.lang.RuntimeException: java.lang.RuntimeException: Unable to create a new Repository file with path 'D:\~development\EclipseWorkspaces\sts\.metadata\.plugins\com.springsource.server.ide.runtime.core\repository-cache-1249896386173-201641422\main-cachedep-loc-main-10.index'
	at com.springsource.repository.internal.nio.NioFileTemplate.execute(NioFileTemplate.java:71)
	at com.springsource.repository.internal.SerializingArtifactDescriptorPersister.persistArtifactDescriptors(SerializingArtifactDescriptorPersister.java:70)
(and the rest like above...)","10/Aug/09 2:47 AM;cdupuis;Thanks for the update. The exceptions helped to identify the problem!

I fixed the NPE which is unrelated to the actual problem of the classpath container disappearing. 

The Classpath Container uses code from dm Server to implement a bundle and library repository. This code is outdated as the dm Server team already fixed the locking and concurrency problems you are seeing. I'll update the embedded code during this Sprint. A snapshot build that fixes the problem should be available within the next few days.

I'll report back as soon as we have build that fixes this problem. Thanks for reporting and taking the time to provide so much detail.

Christian

PS. Safe travel ....","12/Aug/09 2:00 AM;cdupuis;The NPE in the AOP model creation is fixed. 

Updated to latest repository code of dm Server that should fix the locking issue on Windows.","12/Aug/09 2:45 AM;bjansen;Christian,

That's great!

Can I already try it?
Where/how can I get the two updates?","19/Aug/09 1:22 AM;rklaren;Tried nightly snapshot  2.1.1.200908181942-CI-R3651-B357, but still the classpath container disappears. Attached error log.

","19/Aug/09 1:23 AM;rklaren;Error log with latest snapshot 2.1.1.200908181942-CI-R3651-B357.
","19/Aug/09 2:30 AM;cdupuis;Ric, sorry for the confusion. You updated the STS pieces only and not the dm Server Tools which live in another svn repos and use another build process. I know that this isn't very user friendly and also confusing. We are trying to improve this in the next Sprint.

Please update your dm Server Tools - which contain the fix - from http://dist.springsource.com/snapshot/DMS-TOOLS/nightly. You might be required to also update your Spring IDE from http://dist.springframework.org/snapshot/IDE/nightly.

Let me know if that helps.","19/Aug/09 6:39 AM;rklaren;No problem I'm happy to be able to test this, its blocking the check-in of quite some work. I updated the tools and IDE.

* The locking exceptions are gone now.
* The bundle classpath container seems ok now. No disappearances so far.

But now I get this exception (while refreshing the repository and restarting eclipse, and ):

java.io.IOException: A failure occurred during repository creation
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10$SystemPackageFilteringCompositeBundleRepository.<init>(DependencyLocator10.java:511)
at com.springsource.kernel.osgi.provisioning.tools.DependencyLocator10.<init>(DependencyLocator10.java:146)
at com.springsource.server.ide.runtime.core.ServerUtils.createDependencyLocator(ServerUtils.java:167)
at com.springsource.server.ide.runtime.core.ServerUtils.createDependencyLocator(ServerUtils.java:138)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.createDependencyLocator(ServerClasspathContainer.java:540)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.refreshClasspathEntries(ServerClasspathContainer.java:261)
at com.springsource.server.ide.jdt.internal.core.util.ClasspathUtils.updateClasspathContainer(ClasspathUtils.java:173)
at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainerUpdateJob.runInWorkspace(ServerClasspathContainerUpdateJob.java:76)
at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

If I got time I'll test things in a clean workspace to see if it's due to some old files lying about.

Cheers,

Ric
","19/Aug/09 7:43 AM;cdupuis;Ric, I tried to re-create this problem and failed. 

I've added some error logging to see what is causing this and triggered another snapshot build. Could you install another snapshot of the dm Server Tools and see if you get an entry in the Error Log with more details.

Thanks for your help. 

Christian","19/Aug/09 10:02 AM;rklaren;Here's the error log I get now. I first suspected it was my (old) workspace so I made a new one. Clean directory and remove .settings directory in project before importing.

The first few bundles went ok. (error did not resurface when refreshing the repository) Yet when I added all bundles the problem resurfaced. Would it be possible to log the name of the bundle that is getting cached (at least if there's a cache per bundle)?

At some point in the old workspace I deleted the contents of <workspace>\.metadata\.plugins\com.springsource.server.ide.runtime.core before refreshing but that did not help. (assuming that is the cache)

Cheers,

Ric
","19/Aug/09 1:07 PM;cdupuis;Ric, I triggered another snapshot build that has some changes around thread safety of the repository code. Could please give this build a try and report back. I hope that this fixes the issues that your are seeing but since I can't reproduce you are my only chance.

Thanks for you patience.

Christian

PS: I've reopended the issue since this is blocking you.","20/Aug/09 1:27 AM;rklaren;I tried it and it resolves the bundle classpath disappearing problems :) I can restart eclipse without having to manually fix the build by refreshing classpath containers in build order.

There are still some cases where a transitive dependency is not rebuild/fixed by refreshing an 'earlier' bundle but that can be due to other problems, I'll log issues for those now this is resolved.

Thanks very much for the support :)

Cheers,

Ric
","20/Aug/09 1:41 AM;cdupuis;Ric, thanks for confirming that this indeed fixes your problem.

With regards to the transitive dependency refresh problem you are mentioning there is already an open JIRA at:

STS-396: If I fix build path issues with Refresh Bundle Classpath Container only direct descendants get their issues fixed as well
https://issuetracker.springsource.com/browse/STS-396

Is that correctly reflecting the issue that you're talking about.

Christian","20/Aug/09 1:58 AM;rklaren;That's the one although my impression so far is that it improved greatly with this fix, I wanted to play around a bit more before confirming it in that one. 

I now have some other weird problems with package imports being visible in one bundle and not in another (while it is imported in the manifest even a require bundle on the offending bundle does not help) switching between project and maven artifact seems not to matter. Although another project appears twice in the bundle manifest container, I'll open another ticket for that issue (probably later today/tomorow have to switch to some other tasks for today).

Aside note: a new option appeared in the snapshot Preferences -> Spring ->Manifest Generation -> Scan output folders which is enabled by default. This pretty much makes the bundlor generated manifests useless, it misses a lot of packages. Often direct imports of classes (but this happens often yet inconsistently). To work around the lack of template.mf syntax for TEST.MF only imports we use some dummy java files that import something from the necessary packages, these get missed more often with this option turned on. (When it works it works perfectly though)
","20/Aug/09 2:11 AM;cdupuis;In reply to comment #19:

> I now have some other weird problems with package imports being visible in one
> bundle and not in another (while it is imported in the manifest even a require
> bundle on the offending bundle does not help) switching between project and
> maven artifact seems not to matter. Although another project appears twice in
> the bundle manifest container, I'll open another ticket for that issue (probably
> later today/tomorow have to switch to some other tasks for today).

Yes, please open a JIRA with some details to reproduce this.

> > Aside note: a new option appeared in the snapshot Preferences -> Spring
> ->Manifest Generation -> Scan output folders which is enabled by default. This
> pretty much makes the bundlor generated manifests useless, it misses a lot of
> packages. Often direct imports of classes (but this happens often yet
> inconsistently). To work around the lack of template.mf syntax for TEST.MF only
> imports we use some dummy java files that import something from the necessary
> packages, these get missed more often with this option turned on. (When it works
> it works perfectly though)

This is a new option which uses Bundlor default byte-code scanning on project output folders. As you are using a nightly build it could be that there are still issues with this new feature. If you experience issues please let me know with details on how to reproduce and I'll take a look.

There might be something special with your project setup that some classes or so are not being scanned. Right now I iterate over all output folders (project's default + output folder for each source folder) and scan that using default Bundlor byte-code scanning. Are you only using project source folders or do you use some kind of linking?

Christian",,,
Ensure proper project import for template project creation,STS-384,74408,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,05/Aug/09 11:02 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,06/Aug/09 11:08 AM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,There are cases where dialog would pop up during project creation that prevents the project wizard from closing and the wizard still asks the user to cancel or click OK where OK creates the project again.,,"Time worked: 04:41 from Wed, 5 Aug 2009 00:00:00 -0700 to Wed, 5 Aug 2009 23:59:59 -0700.;06/Aug/09 9:37 AM;thon;16860","Time worked: 01:41 from Thu, 6 Aug 2009 00:00:00 -0700 to Thu, 6 Aug 2009 23:59:59 -0700.;06/Aug/09 11:08 AM;thon;6060",,,,,,,,,,,,,14400,0,22920,159%,14400,0,22920,,,,,,,,,,,,,,,,,,,,,,,,,,307929600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09uyv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error handling during template project creation,STS-383,74885,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,05/Aug/09 10:55 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,10/Sep/09 9:39 AM,,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,,,"Time worked: 00:52 from Wed, 5 Aug 2009 00:00:00 -0700 to Wed, 5 Aug 2009 23:59:59 -0700.;06/Aug/09 9:37 AM;thon;3120","Time worked: 03:01 from Fri, 14 Aug 2009 00:00:00 -0700 to Fri, 14 Aug 2009 23:59:59 -0700.;17/Aug/09 5:04 PM;thon;10860","Time worked: 02:07 from Tue, 18 Aug 2009 00:00:00 -0700 to Tue, 18 Aug 2009 23:59:59 -0700.;18/Aug/09 4:40 PM;thon;7620","Time worked: 01:03 from Wed, 19 Aug 2009 00:00:00 -0700 to Wed, 19 Aug 2009 23:59:59 -0700.;19/Aug/09 4:49 PM;thon;3780","Time worked: 02:18 from Thu, 20 Aug 2009 00:00:00 -0700 to Thu, 20 Aug 2009 23:59:59 -0700.;20/Aug/09 4:37 PM;thon;8280","Time worked: 00:10 from Fri, 4 Sep 2009 00:00:00 -0700 to Fri, 4 Sep 2009 23:59:59 -0700.;04/Sep/09 5:00 PM;thon;600",,,,,,,,,28800,0,34260,118%,28800,0,34260,,,,,,,,,,,,,,,,,,,,,,,,,,305337600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09uz3:,9223372036854775807,9223372036854775807,,,,,04/Sep/09 4:18 PM;thon;Error dialog is still missing in some cases when template project can't be deleted. User needs to be prompted.,,,,,,,,,,,,,,,,,,,,,,
PAR exporter prompts twice when attempting to overwrite an existing file,STS-380,72737,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,awilkinson,awilkinson,04/Aug/09 6:27 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,22/Sep/09 10:18 AM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,Y3M1,,Nightly build of dm Server tools from 20090801,"Time worked: 00:32 from Tue, 22 Sep 2009 00:00:00 -0700 to Tue, 22 Sep 2009 23:59:59 -0700.;23/Sep/09 4:52 PM;thon;1920",,,,,,,,,,,,,,0,0,1920,"9,223,372,036,854,775,807%",0,0,1920,,,,,,,,,,,,,,,,,,,,,,,,,,303782400,,,,,2009-09-22 10:18:49.386,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v7z:,9223372036854775807,9223372036854775807,,,,,22/Sep/09 10:18 AM;thon;This has now been fixed.,,,,,,,,,,,,,,,,,,,,,,
Interacting with the Servers view results in a NoClassDefFoundError. Starting a Server creates 10s of them.,STS-378,73082,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,,awilkinson,awilkinson,04/Aug/09 2:59 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,14/Oct/09 4:50 AM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,,"Clicking on an entry in the Servers view results in a dialog appearing that tells me that multiple errors have occurred, and that those errors are NoClassDefFoundErrors. I can persevere and right-click the Server and start it, but this creates 10s errors in the error log. I've attached the error log to this issue.",STS 2.1.0.RC2 (Eclipse 3.5 Carbon) on OS X,"Time worked: 01:00 from Mon, 12 Oct 2009 00:00:00 -0700 to Sun, 18 Oct 2009 23:59:59 -0700.;12/Oct/09 9:57 PM;spingel;3600",,,,,,,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,04/Aug/09 2:59 AM;awilkinson;sts.log;https://jira.spring.io/secure/attachment/23872/sts.log,,,,,,,,,,,302313600,,,,,2009-08-04 03:02:40.093,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v8f:,9223372036854775807,9223372036854775807,,,,,04/Aug/09 3:01 AM;awilkinson;Restarting STS has got rid of the problem. I have no idea why.,"04/Aug/09 3:02 AM;cdupuis;This has already been reported and is - unfortunately - a know WTP issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=279479

I can work-around that bug by keeping the Servers View open and focused and then restart.

I'm going to decrease the priority on this as we can't really solve this within STS.","09/Oct/09 4:42 PM;ldossantos;It looks like in the latest WebTools (3.1.1) the Servers view is always initializing the decorator manager, so this may no longer be a problem.",,,,,,,,,,,,,,,,,,,,
Implement UI and functionality for open URL in embedded browser,STS-377,74483,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,cdupuis,cdupuis,31/Jul/09 5:49 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,18/Aug/09 3:29 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,;14/Aug/09 6:03 PM;ldossantos;17400,;17/Aug/09 6:03 PM;ldossantos;21600,;18/Aug/09 3:29 PM;ldossantos;14400,,,,,,,,,,,,57600,0,53400,92%,57600,0,53400,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0ajsn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a Javadoc display for the @RequestMapping selection.,STS-376,72724,73846,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,31/Jul/09 2:36 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Aug/09 4:41 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,This could be as simple as a rich tooltip upon hovering over the selection. Alternative would be to open the selection in the existing Eclipse Javadoc view.,,;11/Aug/09 5:29 PM;ldossantos;900,;12/Aug/09 5:10 PM;ldossantos;1500,;13/Aug/09 4:41 PM;ldossantos;16200,,,,,,,,,,,,28800,0,18600,64%,28800,0,18600,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajpj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement improvements to the replacement infrastructure,STS-373,74662,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,ldossantos,ldossantos,31/Jul/09 2:23 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,11/Aug/09 3:05 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,Changed so that top level package can be any names the template creator chooses. The only limitation is that the names must be unique as a simple token replacement is used to change the package names to match the user input.,,"Time worked: 06:00 from Fri, 7 Aug 2009 00:00:00 -0700 to Fri, 7 Aug 2009 23:59:59 -0700.;07/Aug/09 4:41 PM;thon;21600","Time worked: 05:50 from Mon, 10 Aug 2009 00:00:00 -0700 to Mon, 10 Aug 2009 23:59:59 -0700.;11/Aug/09 10:41 AM;thon;21000","Time worked: 04:57 from Tue, 11 Aug 2009 00:00:00 -0700 to Tue, 11 Aug 2009 23:59:59 -0700.;11/Aug/09 3:06 PM;thon;17820",,,,,,,,,,,,57600,0,60420,104%,57600,0,60420,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajlz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement improvements to the JSON descriptor,STS-372,76357,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,ldossantos,ldossantos,31/Jul/09 2:22 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,11/Aug/09 10:41 AM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"New JSON schema: (* specifies required values and quotes are removed for simplicity)

{
  info :{
    elements : {
      element : [
      {
        *name,
        replaceKind (default: token),
        description,
        *type,
        *page,
        order (default: 1... elements will appear as defined),
        required (default: false),
        defaultValue
        pattern (regular expression that the entry must match)
        errorMessage
      }
      ]
      
    }
    
    *topLevelPackage (names in topLevelPackage should be unique throughout the project)
    
    pages : {
      page : [
      {
        order,
        description
      }
      ]
    }
}

replaceKind can be the following:
* projectName
* topLevelPackage
* token (by default)",,"Time worked: 02:06 from Tue, 4 Aug 2009 00:00:00 -0700 to Tue, 4 Aug 2009 23:59:59 -0700.;05/Aug/09 10:06 AM;thon;7560","Time worked: 00:49 from Wed, 5 Aug 2009 00:00:00 -0700 to Wed, 5 Aug 2009 23:59:59 -0700.;06/Aug/09 9:37 AM;thon;2940","Time worked: 04:51 from Thu, 6 Aug 2009 00:00:00 -0700 to Thu, 6 Aug 2009 23:59:59 -0700.;07/Aug/09 9:44 AM;thon;17460",,,,,,,,,,,,57600,0,27960,48%,57600,0,27960,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajlb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement improvements to the existing UI,STS-371,76336,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,ldossantos,ldossantos,31/Jul/09 2:22 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,20/Aug/09 2:05 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"* turn wizard drop down box to a list with description of the selected template being displayed below the list
* add icon to templates in template selection page
* add additional icon if template requires downloading",,"Time worked: 01:52 from Tue, 4 Aug 2009 00:00:00 -0700 to Tue, 4 Aug 2009 23:59:59 -0700.;05/Aug/09 10:05 AM;thon;6720","Time worked: 01:54 from Wed, 5 Aug 2009 00:00:00 -0700 to Wed, 5 Aug 2009 23:59:59 -0700.;06/Aug/09 9:37 AM;thon;6840","Time worked: 04:42 from Wed, 19 Aug 2009 00:00:00 -0700 to Wed, 19 Aug 2009 23:59:59 -0700.;19/Aug/09 4:49 PM;thon;16920","Time worked: 03:05 from Thu, 20 Aug 2009 00:00:00 -0700 to Thu, 20 Aug 2009 23:59:59 -0700.;20/Aug/09 4:37 PM;thon;11100",,,,,,,,,,,28800,0,41580,144%,28800,0,41580,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajlj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement and test download on demand for the templates.,STS-370,74426,72547,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,ldossantos,ldossantos,31/Jul/09 2:21 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,20/Aug/09 1:18 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,"Time worked: 00:41 from Mon, 10 Aug 2009 00:00:00 -0700 to Mon, 10 Aug 2009 23:59:59 -0700.;11/Aug/09 10:42 AM;thon;2460","Time worked: 06:27 from Wed, 12 Aug 2009 00:00:00 -0700 to Wed, 12 Aug 2009 23:59:59 -0700.;12/Aug/09 4:57 PM;thon;23220","Time worked: 06:53 from Thu, 13 Aug 2009 00:00:00 -0700 to Thu, 13 Aug 2009 23:59:59 -0700.;14/Aug/09 9:45 AM;thon;24780","Time worked: 03:14 from Fri, 14 Aug 2009 00:00:00 -0700 to Fri, 14 Aug 2009 23:59:59 -0700.;17/Aug/09 5:04 PM;thon;11640","Time worked: 05:23 from Mon, 17 Aug 2009 00:00:00 -0700 to Mon, 17 Aug 2009 23:59:59 -0700.;17/Aug/09 5:05 PM;thon;19380",;17/Aug/09 5:22 PM;spingel;7200,"Time worked: 00:56 from Tue, 18 Aug 2009 00:00:00 -0700 to Tue, 18 Aug 2009 23:59:59 -0700.;18/Aug/09 4:40 PM;thon;3360",,,,,,,,57600,0,92040,159%,57600,0,92040,,,,,,,,,,,,,,,,,,,,,,,,,,308188800,,,,,2009-08-02 05:32:27.206,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0ajlr:,9223372036854775807,9223372036854775807,,,,,"02/Aug/09 5:32 AM;cdupuis;Terry, can work with Steffen on this as it is very similar to the tutorial download and should probably extend the work that Steffen did.",,,,,,,,,,,,,,,,,,,,,,
Implement and test a plugin discovery portal,STS-369,75173,72605,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,ldossantos,ldossantos,31/Jul/09 2:20 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,20/Aug/09 2:35 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,,,,;17/Aug/09 5:09 PM;spingel;14400,;17/Aug/09 5:55 PM;spingel;21600,;18/Aug/09 7:46 PM;spingel;14400,;20/Aug/09 2:35 PM;spingel;3600,,,,,,,,,,,144000,0,54000,37%,144000,0,54000,,,,,,,,,,,,,,,,,,,,,,,,,,306633600,,,,,2009-08-18 13:37:32.774,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajyv:,9223372036854775807,9223372036854775807,,,,,"18/Aug/09 1:37 PM;spingel;* Add a cancel button when install is running
* Clear selection and refresh list when installation completes
* Handle case when dashboard is closed while install is running",18/Aug/09 3:08 PM;spingel;* PMD is currently displayed in the list of available connectors even if installed due to this bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=280349,20/Aug/09 2:35 PM;spingel;I have tested with the latest nightly build by exporting the c.s.s.disovery-directory plug-in to the dropins folder. Further updates to the content are tracked on STS-406.,,,,,,,,,,,,,,,,,,,,
Investigate Mylyn discovery portal for possibility of extension or reuse.,STS-368,72144,72605,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,ldossantos,ldossantos,31/Jul/09 2:15 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,12/Aug/09 3:43 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,y2m8,,,;12/Aug/09 3:43 PM;spingel;14400,,,,,,,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,307324800,,,,,2009-08-12 15:43:07.539,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajzj:,9223372036854775807,9223372036854775807,,,,,"12/Aug/09 3:43 PM;spingel;I have put together a proto-type that's embedded in the STS dashboard which was possible with minor changes to Mylyn. The current discovery implementation is coupled to a wizard but it can be extracted into a reusable component easily. There are some hard-coded properties such as the extension types that are Mylyn specific but that could be changed.

One thing to consider is that the discovery mechanism works on Eclipse 3.5 only. Support for Eclipse 3.4 would require back-porting the code that drives P2.",,,,,,,,,,,,,,,,,,,,,,
Implement a model for the view,STS-367,72298,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,31/Jul/09 2:07 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,12/Aug/09 4:42 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"The view needs to be able to respond to updates. ie: annotations added, annotations removed, annotations modified",,;11/Aug/09 5:28 PM;ldossantos;16800,;12/Aug/09 3:09 PM;ldossantos;10800,;12/Aug/09 4:42 PM;ldossantos;3600,,,,,,,,,,,,28800,0,31200,108%,28800,0,31200,,,,,,,,,,,,,,,,,,,,,,,,,,307324800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajvz:,9223372036854775807,9223372036854775807,,,,,11/Aug/09 5:28 PM;ldossantos;Almost there. View is currently updating with an older version of the model. Still don't understand why that's happening. Seems to always be one edit behind....,12/Aug/09 4:42 PM;ldossantos;The view will now respond to model changes *after* they've been processed.,,,,,,,,,,,,,,,,,,,,,
Create an @RequestMapping table,STS-366,72255,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,31/Jul/09 2:01 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,07/Aug/09 4:36 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,;07/Aug/09 4:36 PM;ldossantos;20700,,,,,,,,,,,,,,28800,0,20700,71%,28800,0,20700,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajw7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement an API for gathering @RequestingMapping annotations.,STS-365,72295,75487,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,31/Jul/09 1:58 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,06/Aug/09 2:42 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,;05/Aug/09 5:24 PM;ldossantos;21600,;06/Aug/09 2:42 PM;ldossantos;10800,,,,,,,,,,,,,14400,0,32400,225%,14400,0,32400,,,,,,,,,,,,,,,,,,,,,,,,,,308361600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajwn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a working set selector to the new par bundle & par project wizards and test the feature.,STS-364,72364,72832,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,31/Jul/09 1:40 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,04/Aug/09 4:28 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,;04/Aug/09 4:28 PM;ldossantos;16200,,,,,,,,,,,,,,0,0,16200,"9,223,372,036,854,775,807%",0,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,308016000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajwv:,9223372036854775807,9223372036854775807,,,,,04/Aug/09 4:28 PM;ldossantos;Complete with tests.,,,,,,,,,,,,,,,,,,,,,,
Implement and test changes to Bundlor project builder,STS-360,73896,76500,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,cdupuis,cdupuis,cdupuis,30/Jul/09 4:09 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,15/Aug/09 1:59 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,,,,;12/Aug/09 12:19 PM;cdupuis;57600,GREENHOPPER AUTO-RESET;15/Aug/09 1:59 PM;cdupuis;60,,,,,,,,,,,,,144000,0,57660,40%,144000,0,57660,,,,,,,,,,,,,,,,,,,,,,,,,,308448000,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0ak9r:,9223372036854775807,9223372036854775807,,,,,30/Jul/09 4:12 PM;cdupuis;Figuring out a way to clearly distinguish class files coming from source or test folders is going to be tricky. This is for setups where the source classes and test classes end up in the same output folders.,,,,,,,,,,,,,,,,,,,,,,
Implement and test version detection,STS-353,72289,72595,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,cdupuis,cdupuis,30/Jul/09 4:00 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,19/Aug/09 2:30 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,y2m8,,,;18/Aug/09 9:37 PM;spingel;7200,;19/Aug/09 2:30 PM;spingel;7200,,,,,,,,,,,,,28800,0,14400,50%,28800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,306720000,,,,,2009-08-19 14:30:14.56,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ak4v:,9223372036854775807,9223372036854775807,,,,,19/Aug/09 2:30 PM;spingel;Added auto-detection of Tomcat 6.x.,,,,,,,,,,,,,,,,,,,,,,
Exported dm Server project has a corrupted MANIFEST.MF,STS-336,74115,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,ewolff,ewolff,15/Jul/09 6:13 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,08/Oct/09 3:29 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,"If you create a Bundle Project and the MANIFEST.MF does not include an empty line as the last line the export does not work correctly.

Steps to recreate:
- Import attached dm Server Project
- open MANIFEST.MF
- notice that the last line is ""Bundle-Version: 1.0.0""
- Export as Spring Bundle Project
- open exported JAR
- notice the last line in MANIFEST.MF is ""Bundle-SymbolicName: ExportBug""
- notice that the Bundle-Version is missing.

Notice that there is no error message anywhere.",STS 2.0.2 on Mac OS X,"Time worked: 03:00 from Wed, 26 Aug 2009 00:00:00 -0700 to Wed, 26 Aug 2009 23:59:59 -0700.;26/Aug/09 4:46 PM;thon;10800","Time worked: 00:28 from Tue, 1 Sep 2009 00:00:00 -0700 to Tue, 1 Sep 2009 23:59:59 -0700.;01/Sep/09 5:00 PM;thon;1680","Time worked: 01:53 from Fri, 18 Sep 2009 00:00:00 -0700 to Fri, 18 Sep 2009 23:59:59 -0700.;18/Sep/09 2:53 PM;thon;6780",,,,,,,,,,,,0,0,19260,"9,223,372,036,854,775,807%",0,0,19260,,,,,,,,,,,,,,,15/Jul/09 6:13 AM;ewolff;ExportBug-Project.zip;https://jira.spring.io/secure/attachment/23870/ExportBug-Project.zip,,,,,,,,,,,302572800,,,,,2009-07-28 10:49:43.985,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9gn:,9223372036854775807,9223372036854775807,,,,,"28/Jul/09 10:49 AM;cdupuis;Terry, can you look into this?","01/Sep/09 4:37 PM;thon;It seems like the jdt team is following the JAR manifest spec and the specification says that there has to be a newline at the end of the file (http://java.sun.com/j2se/1.3/docs/guide/jar/jar.html#JAR Manifest). Christian, do you want me to manipulate the manifest file and add a new line at the end to make it work with the jar export? Or should we leave it the way it is for now?",18/Sep/09 11:42 AM;thon;Added warning if there is no newline at the end of a manifest file.,06/Oct/09 11:06 AM;thon;Marking this task as fixed. Please reopen if the warnings are not sufficient.,,,,,,,,,,,,,,,,,,,
Documentation still talks about Spring AP,STS-331,72910,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,ewolff,ewolff,28/May/09 9:07 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,09/Oct/09 1:37 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,Y3M1,See screenshot,,;09/Oct/09 1:36 PM;ldossantos;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,28/May/09 9:07 AM;ewolff;Bildschirmfoto 2009-05-28 18-02-11.png;https://jira.spring.io/secure/attachment/23853/Bildschirmfoto+2009-05-28+18-02-11.png,,,,,,,,,,,302313600,,,,,2009-10-09 13:36:08.211,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yp3:,9223372036854775807,9223372036854775807,,,,,09/Oct/09 1:36 PM;ldossantos;I've updated all teh screenshots so that they refer to the dm Server instead of the AP Server.,,,,,,,,,,,,,,,,,,,,,,
"Quick Fix for Import-Bundle doesn't offer all matches, and returns matches that don't satisfy the version range in the manifest",STS-328,74927,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,awilkinson,awilkinson,04/Mar/09 7:01 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,08/Oct/09 2:22 PM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,Y3M1,"The quick fix for Import-Bundle: com.springsource.org.eclipse.persistence.jpa;version=""[1.0.0, 1.0.0]"" only offers a single result: com.springsource.org.eclipse.persistence.jpa at version 1.0.1. There are two problems with this:

 - The 1.0.0 version of the bundle is missing from the search results. Interestingly this bundle is found when driven manually via the Repository tab in the dm Server 'editor'.
 - The 1.0.1 version that is offered doesn't meet the requirements of the specified version range
",,;08/Oct/09 2:22 PM;ldossantos;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,302400000,,,,,2009-10-08 14:22:43.485,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a4q7:,9223372036854775807,9223372036854775807,,,,,"08/Oct/09 2:22 PM;ldossantos;The dialog was presenting only the most up to date bundle. I've changed it so that the dialog will present all bundles that match the id, regardless of version. I'll leave it up to the user's discretion which version of the bundle they want to download.",,,,,,,,,,,,,,,,,,,,,,
Improve the modularity of the releng scripts,STS-276,74338,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,28/Jul/09 9:28 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,19/Jan/10 7:01 PM,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,0,y3m5,"To merge the shell and ant scripts used as part of the build process and to make running tests more reliability the ant releng scripts need to be improved.

Requirements:
* Create mirror of all dependencies with custom category structure
** Update mirror prior to build with latest version of dependencies
* Provide separate mirrors for different platform targets (3.4, 3.5, 3.6)
* Provision target platforms based on dependencies

The key is to specify the list of dependencies, sites and platform archives in a single place which is used as input for mirroring and provisioning.
",,;03/Sep/09 9:55 PM;spingel;3600,;03/Sep/09 9:55 PM;spingel;3600,,,,,,,,,,,,,,0,7200,,57600,0,145800,,,,,,,,,,,,,,,,,,,,,,,,,,296956800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a33r:,9223372036854775807,9223372036854775807,,,,,"10/Dec/09 5:03 PM;spingel;Available options:

* PDE target platform provisioning
** coupled to workbench
** definitions bound to specific feature versions
* Buckminster
** see STS-652
* P2
** supports mirroring and provisioning
** requires custom scripts to automate build
",,,,,,,,,,,,,,,,,,,,,,
Dashboard ignores proxy authentication settings,STS-275,74152,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,paulpach,paulpach,27/Jul/09 8:04 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,27/Jul/09 4:01 PM,2.1.0.RC1,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M8,"My company is behind a proxy that requires authentication.
I have configured the proxy in window->preferences->general->network connections, and I have configured proxy authentication with my login and password.

However, when sts starts, the dashboard prompts me for proxy authentication 4 times (1 should be enough), ignoring the proxy settings in the preferences dialog.

The issue of it asking multiple times for the same authentication reminds me of this bug from eclipse, which was corrected in 3.5, maybe it is related?
https://bugs.eclipse.org/bugs/show_bug.cgi?id=256281
",,;27/Jul/09 4:01 PM;ldossantos;16200,,,,,,,,,,,,,,0,0,16200,"9,223,372,036,854,775,807%",0,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,308707200,,,,,2009-07-27 08:19:15.971,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ag2v:,9223372036854775807,9223372036854775807,,,,,"27/Jul/09 8:19 AM;cdupuis;Steffen, Leo, any chance we get that fixed for 2.1.0.RELEASE and use the Eclipse credentials to authenticate?","27/Jul/09 9:51 AM;ldossantos;I believe we are already using Eclipse's proxy authentication. This is probably an Eclipse 3.4 issue, or a threading issue on our end. I'll take a look.","27/Jul/09 4:01 PM;ldossantos;The dashboard page will now pick up the proxy authentication settings from the Network Connections sections of the preferences dialog, without prompting the user. If no proxy settings are found, the dashboard will display a hyperlink that will open up the prefs dialog.",,,,,,,,,,,,,,,,,,,,
Test STS package on Linux,STS-263,72883,73527,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,20/Jul/09 3:03 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,24/Jul/09 6:57 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,,,;20/Jul/09 7:13 PM;spingel;10800,;21/Jul/09 6:01 PM;spingel;7200,;24/Jul/09 6:57 AM;spingel;3600,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,,,,,,,,,,,,,,,309312000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ad33:,9223372036854775807,9223372036854775807,,,,,20/Jul/09 5:38 PM;spingel;Fixed NPE due to missing include in build.properties.,,,,,,,,,,,,,,,,,,,,,,
Investigate & fix latest SWTBot related build errors in the nightly build.,STS-261,72291,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,13/Jul/09 10:50 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Jul/09 3:35 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,;13/Jul/09 2:00 PM;ldossantos;6600,;13/Jul/09 3:35 PM;ldossantos;600,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,309916800,,,,,2009-07-13 11:38:40.987,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahxb:,9223372036854775807,9223372036854775807,,,,,13/Jul/09 11:38 AM;spingel;Note that the build runs on Eclipse 3.4 and Java 1.5.0_18.,13/Jul/09 1:16 PM;ldossantos;Looks like a new SWTBot build went up on Friday that changed a couple of methods signatures. Cleaning them up right now.,13/Jul/09 2:00 PM;ldossantos;I've fixed the compilation errors and kicked off a build. Should be about 30mins before we see the results.,13/Jul/09 3:35 PM;ldossantos;Nightly build is passing once again.,,,,,,,,,,,,,,,,,,,
download dependent sample projects with tutorials,STS-259,74258,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,12/Jul/09 5:40 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Jul/09 11:55 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,If a tutorial references a sample project the dependent project should be downloaded with the tutorial.,,;12/Jul/09 2:03 PM;spingel;3600,;13/Jul/09 11:55 AM;spingel;5400,,,,,,,,,,,,,10800,7200,9000,83%,10800,7200,9000,,,,,,,,,,,,,,,,,,,,,,,,,,310003200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ai47:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
support new descriptor fields in authoring tools,STS-258,76369,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,12/Jul/09 5:39 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,14/Jul/09 2:59 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,The authoring tools should support entering a name and description for a tutorial and allow exporting of a tutorial.,,;14/Jul/09 2:59 PM;spingel;14400,,,,,,,,,,,,,,10800,0,14400,133%,10800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,310003200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ai3z:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
convert existing tutorial descriptors and publish on website,STS-257,73684,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,cdupuis,spingel,spingel,12/Jul/09 5:34 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,22/Jul/09 6:19 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,"The extension point based descriptions need to moved into the tutorial descriptors, packaged and uploaded to a web-server.",,;14/Jul/09 5:06 PM;spingel;5400,,,,,,,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,309830400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahzb:,9223372036854775807,9223372036854775807,,,,,14/Jul/09 5:06 PM;spingel;The existing tutorials have been converted.,,,,,,,,,,,,,,,,,,,,,,
Console view not available on Mac,STS-254,76372,,Task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,pharris,pharris,09/Jul/09 7:39 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,28/Jul/09 2:18 PM,,,,,,,2.1.0.RELEASE,,,,,,,,0,Y2M8,"Console viewing is not available on the Mac - it requires a browser plugin that only works on IE, or a different plugin that works on FF2 under Windows or Linux only.

We should update documentation to reflect this limitation (pointing out that it's a VMWare thing, not us!), and disable the options in the GUI for the Mac version of STS if that's possible.",,"Time worked: 02:04 from Thu, 9 Jul 2009 00:00:00 -0700 to Thu, 9 Jul 2009 23:59:59 -0700.;09/Jul/09 5:13 PM;thon;7440",,,,,,,,,,,,,,,0,7440,,,0,7440,,,,,,,,,,,,,,,,,,,,,,,,,,308620800,,,,,2009-07-09 10:30:02.078,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ail3:,9223372036854775807,9223372036854775807,,,,,"09/Jul/09 10:30 AM;cdupuis;Terry, could please update the docs and also remove the link on mac os x.","10/Jul/09 7:03 AM;pharris;Update: My original understanding is that this *just* showed the console for the VM you were currently working with.  It appears from the documentation that it actually shows the entire Lab Manager GUI, though opening up the console screen for the VM as the initial screen.

In theory we could still show the Lab Manager GUI - the only bit that won't work is the console itself (i.e. the vnc view of the VM).  I'm not sure what benefit that would have over just opening it in a browser, but I'm not a developer.  If we do keep it we should probably rename the menu option from 'Show Consoles' to 'View in Lab Manager' or something similar.  The reason for this is that Lab Manager has an option to show just the consoles in a pop-up, and the user might be misled into thinking that's what we do.","10/Jul/09 9:33 AM;thon;Yes, I agree that there should be a way for mac user to open the Lab Manager GUI since not all functionalities are implemented in STS. Do you think the console page should still be shown for Windows and Linux? Or should the lab manager GUI (say the page showing details of the selected configuration) be shown for all OS to make it consistent?",28/Jul/09 2:18 PM;thon;I've removed the Show Consoles action if user is on Mac and added View in Lab Manager action for all platforms to show configuration in the web lab manager UI.,,,,,,,,,,,,,,,,,,,
Lab Manager - Error messages appear in triplicate,STS-253,74190,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,pharris,pharris,08/Jul/09 7:09 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,08/Jul/09 2:34 PM,2.1.0.RC1,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,"When a normal error/warning message is displayed through STS it appears in triplicate.

See attached screen shot for an example.",OSX,"Time worked: 00:39 from Wed, 8 Jul 2009 00:00:00 -0700 to Wed, 8 Jul 2009 23:59:59 -0700.;08/Jul/09 4:47 PM;thon;2340",,,,,,,,,,,,,,0,0,2340,"9,223,372,036,854,775,807%",0,0,2340,,,,,,,,,,,,,,,08/Jul/09 7:09 AM;pharris;Triple Error.jpg;https://jira.spring.io/secure/attachment/23967/Triple+Error.jpg,,,,,,,,,,,310348800,,,,,2009-07-08 10:03:14.525,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0agxr:,9223372036854775807,9223372036854775807,,,,,"08/Jul/09 10:03 AM;cdupuis;Terry, can you work with Paul to resolve this please.","08/Jul/09 1:58 PM;thon;Christian, the error messages are returned from the SOAP calls to lab manager. I will work on truncating the message and only displaying the same string once though.",08/Jul/09 2:34 PM;thon;The error message should not contain any duplicates now. Marking as fixed.,,,,,,,,,,,,,,,,,,,,
"Lab Manager - Deploying an image works, but gives error",STS-252,72559,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,pharris,pharris,08/Jul/09 7:02 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,20/Aug/09 10:52 AM,2.1.0.RC1,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,"I have a basic Ubuntu image that deploys and undeploys fine in Lab Manager directly.

Trying to deploy it from STS gives the following error:

     https://10.5.0.200/LabManager/ControlPanel/Configurations/ConfigurationDetail/FullVMsPage.aspx?id=18

     Page load failed with error: bad server certificate

The deploy works correctly.

Note that trying to view the console for the VM gives the same message - could be a configuration issue rather than a code one?",OSX,"Time worked: 00:17 from Wed, 8 Jul 2009 00:00:00 -0700 to Wed, 8 Jul 2009 23:59:59 -0700.;08/Jul/09 4:47 PM;thon;1020","Time worked: 01:39 from Tue, 28 Jul 2009 00:00:00 -0700 to Tue, 28 Jul 2009 23:59:59 -0700.;28/Jul/09 5:09 PM;thon;5940","Time worked: 01:47 from Tue, 4 Aug 2009 00:00:00 -0700 to Tue, 4 Aug 2009 23:59:59 -0700.;05/Aug/09 10:05 AM;thon;6420",,,,,,,,,,,,0,0,13380,"9,223,372,036,854,775,807%",0,0,13380,,,,,,,,,,,,,,,,,,,,,,,,,,306633600,,,,,2009-07-08 10:04:19.855,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0agx3:,9223372036854775807,9223372036854775807,,,,,"08/Jul/09 10:04 AM;cdupuis;Terry, can you work with Paul to resolve this please.","09/Jul/09 11:39 AM;thon;Hi Paul, were you able to deploy the application in STS? Is it just giving a bad server certificate when it attempts to load the console url? Or did it fail before that?",20/Aug/09 10:52 AM;thon;Marking this as fixed. Please reopen if the problem still occurs.,,,,,,,,,,,,,,,,,,,,
Convert junit tests to junit4 tests,STS-249,74555,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,thon,thon,07/Jul/09 11:04 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,07/Jul/09 5:27 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,We need to convert existing junit 3 tests to junit 4 to coexist with the SWTBot tests,,"Time worked: 02:10 from Tue, 7 Jul 2009 00:00:00 -0700 to Tue, 7 Jul 2009 23:59:59 -0700.;07/Jul/09 5:28 PM;thon;7800",,,,,,,,,,,,,,0,0,7800,"9,223,372,036,854,775,807%",0,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,310435200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajd3:,9223372036854775807,9223372036854775807,,,,,07/Jul/09 5:27 PM;thon;Turns out just changing test plugin dependency to depend on junit4 works. Marking this as done.,"07/Jul/09 5:28 PM;thon;Time worked: 02:10 from Tue, 7 Jul 2009 00:00:00 -0700 to Tue, 7 Jul 2009 23:59:59 -0700.",,,,,,,,,,,,,,,,,,,,,
indicate locally downloaded and new tutorials on the dashboard,STS-242,74441,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,02/Jul/09 6:40 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Jul/09 1:00 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,,,;13/Jul/09 1:00 PM;spingel;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,309916800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aef3:,9223372036854775807,9223372036854775807,,,,,13/Jul/09 1:00 PM;spingel;Tutorials that have not been viewed and hence not downloaded and tutorials for which newer versions are available are now decorated with a blue incoming error. Once a tutorial is viewed and downloaded for the first time the arrow disappears.,,,,,,,,,,,,,,,,,,,,,,
download tutorials and samples on demand,STS-241,73055,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,02/Jul/09 6:23 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Jul/09 11:54 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,"* Indicate to user that a download is required
* Download and extract tutorial to workspace/.metadata/.sts showing progress
",,;12/Jul/09 2:03 PM;spingel;14400,;13/Jul/09 11:54 AM;spingel;7200,,,,,,,,,,,,,28800,14400,21600,75%,28800,14400,21600,,,,,,,,,,,,,,,,,,,,,,,,,,310867200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aehb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
implement mechanism for reading remote descriptor for available tutorials and samples,STS-240,74468,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,02/Jul/09 4:33 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,12/Jul/09 2:02 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,"* A pre-defined descriptor should be available at build time and included in the distribution
* Needs to be updateable from a web server",,;12/Jul/09 2:02 PM;spingel;14400,,,,,,,,,,,,,,14400,14400,14400,100%,14400,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,310867200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aeh3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
integrate deployment of tutorials and assembly of tutorial descriptor into build,STS-239,75917,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,02/Jul/09 4:24 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,16/Jul/09 6:24 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,,,;09/Jul/09 5:05 PM;spingel;10800,;12/Jul/09 2:01 PM;spingel;7200,;16/Jul/09 6:24 PM;spingel;3600,,,,,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,309744000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aehr:,9223372036854775807,9223372036854775807,,,,,15/Jul/09 4:40 PM;spingel;Need to create standalone jar to run ant task.,,,,,,,,,,,,,,,,,,,,,,
create releng script that creates a zip files for each tutorial and shared sample project,STS-238,74439,72413,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,02/Jul/09 4:23 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,09/Jul/09 5:06 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,,,;09/Jul/09 5:06 PM;spingel;3600,,,,,,,,,,,,,,10800,10800,3600,33%,10800,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,310867200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aehj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
make SWTBot tests run as part of continuous build,STS-237,74527,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,02/Jul/09 1:57 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,16/Jul/09 5:29 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,"http://wiki.eclipse.org/SWTBot/Ant
http://wiki.eclipse.org/ETF_JUnit4_Changes
https://bugs.eclipse.org/bugs/show_bug.cgi?id=153429",,"Time worked: 02:00 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.;02/Jul/09 9:54 PM;spingel;7200",;08/Jul/09 6:07 PM;spingel;28800,;16/Jul/09 5:29 PM;spingel;10800,,,,,,,,,,,,0,7200,46800,"9,223,372,036,854,775,807%",0,7200,46800,,,,,,,,,,,,,,,,,,,,,,,,,,309657600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aegf:,9223372036854775807,9223372036854775807,,,,,"02/Jul/09 9:50 PM;spingel;SWTbot installation fails with old UM:

282334: unable to install SWTbot using old UM
https://bugs.eclipse.org/bugs/show_bug.cgi?id=282334

I have changed the build scripts to use P2 for installing SWTbot.","02/Jul/09 9:54 PM;spingel;Time worked: 02:00 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.",16/Jul/09 5:29 PM;spingel;Tests are run as part of the test plan.,,,,,,,,,,,,,,,,,,,,
create a test that opens an external manifest,STS-233,74832,74420,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,30/Jun/09 1:49 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,30/Jun/09 5:35 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,The test should open a manifest file in the bundle and par editors that is not in the workspace.,,;30/Jun/09 5:35 PM;spingel;5400,,,,,,,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,311040000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aeof:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
write a test that checks for leaks of the XML model during the config editor lifecycle,STS-232,74512,72566,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,30/Jun/09 10:01 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,30/Jun/09 1:23 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,"One test may open the config editor, flip between several pages in the editor, then close the editor. Check the model reference count.
Another test may open the config editor, make an edit and save the editor, then close the editor. Check the model reference count.
Tricky part may be holding onto a non-null reference to the model after the editor has been closed. Scheduling 1-2 hours.",,;30/Jun/09 1:27 PM;ldossantos;8100,,,,,,,,,,,,,,7200,0,8100,112%,7200,0,8100,,,,,,,,,,,,,,,,,,,,,,,,,,311040000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aepz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for XML namespace usage in elements not at root level,STS-229,75093,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,dsyer,dsyer,28/Jun/09 7:48 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,30/Jun/09 6:09 PM,2.0.2.RELEASE,2.1.0.M1,2.1.0.M2,2.1.0.RC1,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,"Support for XML namespace usage in elements not at root level.  E.g. this is valid XML (and works fine at runtime):

{code}
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">

	<description>Example job to get you started. It provides a
		skeleton for a typical batch application.</description>

	<job id=""job1"" xmlns=""http://www.springframework.org/schema/batch"">
		<step id=""step1"" parent=""simpleStep"">
			<tasklet>
				<chunk reader=""reader"" writer=""writer"" />
			</tasklet>
		</step>
	</job>
	
</beans>
{code}

but if you us the Spring IDE editor tabs to manage the namespaces (e.g. add aop:) then the Batch schema locations are removed from the root level.  Equally when you add the batch namespace the IDE always puts xmlns:batch= in the root element, even if I didn't want it there.  So I have to keep hand editing schema locations and namespace declarations, even though the IDE is supposed to be able to manage them.",,;29/Jun/09 6:46 PM;ldossantos;14400,;30/Jun/09 6:09 PM;ldossantos;14400,,,,,,,,,,,,,0,0,28800,"9,223,372,036,854,775,807%",0,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,311040000,,,,,2009-06-29 18:45:59.646,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aeyv:,9223372036854775807,9223372036854775807,,,,,"29/Jun/09 6:45 PM;ldossantos;There are definitely some corner cases where the editor's namespace management gets tripped up, and this is a great example of one of them. I've done some work to get the editor to recognize that the batch namespace has been enabled in this case, and now it loads the batch form page and visual editor, which it wasn't doing before. Enabling an additional namespace still mangles the schema locations - still working on a fix for that.","30/Jun/09 6:09 PM;ldossantos;I've fixed the namespace mangling issue, and I've also added several unit tests that test against scoped namespaces.",,,,,,,,,,,,,,,,,,,,,
Core & UI tests for the manifest editing,STS-226,76313,74420,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,ldossantos,ldossantos,26/Jun/09 1:07 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,23/Jul/09 11:11 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M8,,,Logging work done on Wednesday July 14;15/Jul/09 10:17 AM;ldossantos;2700,;15/Jul/09 5:25 PM;ldossantos;14400,;16/Jul/09 5:47 PM;ldossantos;20700,;17/Jul/09 6:08 PM;ldossantos;19800,;20/Jul/09 5:36 PM;ldossantos;14400,,,,,,,,,,144000,0,72000,50%,144000,0,72000,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0af1b:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create JUnit tests for Lab Manager,STS-222,74360,72566,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Jun/09 12:55 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,27/Jul/09 10:22 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,"Time worked: 01:45 from Fri, 10 Jul 2009 00:00:00 -0700 to Fri, 10 Jul 2009 23:59:59 -0700.;13/Jul/09 4:35 PM;thon;6300","Time worked: 00:24 from Mon, 13 Jul 2009 00:00:00 -0700 to Mon, 13 Jul 2009 23:59:59 -0700.;15/Jul/09 9:32 AM;thon;1440",,,,,,,,,,,,,57600,0,7740,13%,57600,0,7740,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afbj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create JUnit tests for AMS integration,STS-221,72647,72566,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Jun/09 12:53 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,17/Aug/09 5:08 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,Y2M8,,,"Time worked: 04:00 from Thu, 9 Jul 2009 00:00:00 -0700 to Thu, 9 Jul 2009 23:59:59 -0700.;09/Jul/09 5:13 PM;thon;14400","Time worked: 03:18 from Fri, 10 Jul 2009 00:00:00 -0700 to Fri, 10 Jul 2009 23:59:59 -0700.;13/Jul/09 4:35 PM;thon;11880","Time worked: 02:05 from Mon, 13 Jul 2009 00:00:00 -0700 to Mon, 13 Jul 2009 23:59:59 -0700.;15/Jul/09 9:32 AM;thon;7500","Time worked: 04:44 from Tue, 14 Jul 2009 00:00:00 -0700 to Tue, 14 Jul 2009 23:59:59 -0700.;15/Jul/09 9:33 AM;thon;17040","Time worked: 00:59 from Wed, 15 Jul 2009 00:00:00 -0700 to Wed, 15 Jul 2009 23:59:59 -0700.;16/Jul/09 9:41 AM;thon;3540","Time worked: 06:32 from Thu, 16 Jul 2009 00:00:00 -0700 to Thu, 16 Jul 2009 23:59:59 -0700.;17/Jul/09 10:09 AM;thon;23520","Time worked: 00:05 from Tue, 21 Jul 2009 00:00:00 -0700 to Tue, 21 Jul 2009 23:59:59 -0700.;21/Jul/09 5:41 PM;thon;300","Time worked: 02:07 from Mon, 20 Jul 2009 00:00:00 -0700 to Mon, 20 Jul 2009 23:59:59 -0700.;21/Jul/09 5:47 PM;thon;7620","Time worked: 04:28 from Mon, 27 Jul 2009 00:00:00 -0700 to Mon, 27 Jul 2009 23:59:59 -0700.;28/Jul/09 5:10 PM;thon;16080",,,,,,57600,0,101880,176%,57600,0,101880,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afcv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test all tutorials,STS-218,72646,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,26/Jun/09 12:49 PM,07/Apr/17 7:52 AM,10/May/19 2:37 AM,19/Aug/09 8:25 PM,,,,,,,2.2.0.RELEASE,Sprint 2,,,,,,,0,,"I've run through all the tutorials, found a few errors posted above. STS couldn't find the Tomcat download so I wasn't able to run all the tutorials to their fullest.",,;22/Jul/09 5:37 PM;ldossantos;7200,;28/Jul/09 9:24 AM;ldossantos;1800,;19/Aug/09 8:25 PM;spingel;3600,,,,,,,,,,,,28800,0,12600,43%,28800,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,65836800,,,,,2009-07-22 16:54:48.485,9223372036854775807,false,mlippert(mlippert),,,,0|i0af9j:,9223372036854775807,9223372036854775807,,,,,"22/Jul/09 4:54 PM;ldossantos;While running Integration Testing with Spring and JUnit 4 : Could not get context handle from /Users/leods/Documents/workspace-sts-2.1.0.RC2/.metadata/.sts/content/org.springframework.tutorials.usingstoredprocedures-1.0.0/context27492.zip

Also : Cannot initiate source download
Caused by: java.io.FileNotFoundException: /PetClinic/lib/spring-test-2.5.1.jar (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at org.sonatype.nexus.index.DefaultNexusIndexer.identify(DefaultNexusIndexer.java:503)
	at org.maven.ide.eclipse.internal.index.NexusIndexManager.identify(NexusIndexManager.java:214)
	... 77 more
","22/Jul/09 5:18 PM;ldossantos;While running Getting Started with Spring JDBC : Could not get context handle from /Users/leods/Documents/workspace-sts-2.1.0.RC2/.metadata/.sts/content/org.springframework.tutorials.gettingstartedwithspringjdbc-1.0.0/context30503.zip

Also : Could not get context handle from /Users/leods/Documents/workspace-sts-2.1.0.RC2/.metadata/.sts/content/org.springframework.tutorials.gettingstartedwithspringjdbc-1.0.0/context30505.zip","22/Jul/09 5:20 PM;ldossantos;While running Message-Driven Beans with Spring and JMS: Cannot initiate source download
Caused by: java.io.FileNotFoundException: /messaging/lib/spring-jms.jar (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at org.sonatype.nexus.index.DefaultNexusIndexer.identify(DefaultNexusIndexer.java:503)
	at org.maven.ide.eclipse.internal.index.NexusIndexManager.identify(NexusIndexManager.java:214)
	... 77 more",28/Jul/09 9:24 AM;ldossantos;Steffen to look at the cause of the errors.,"19/Aug/09 8:25 PM;spingel;Thanks Leo. I have fixed the first two steps in the JDBC tutorial which were not supposed to have contexts.

I have filed this bug against m2eclipse to track the logged error: https://issues.sonatype.org/browse/MNGECLIPSE-1593 . It does not affect running the tutorial so I'll mark this issue as resolved.",19/Aug/09 8:26 PM;spingel;In addition I have added support for double-click and filtering when selecting a tutorial from the Help > Task-Focused Tutorials selection dialog.,"07/Apr/17 7:52 AM;mlippert;We moved issue tracking for this project to https://github.com/spring-projects/spring-ide.
If you would like to comment on or re-open this issue, please file a new issue at GitHub and refer to this one.",,,,,,,,,,,,,,,,
re-author tutorials that require Tomcat,STS-216,72631,72402,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 12:44 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,15/Jul/09 3:25 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,,,;15/Jul/09 3:25 PM;spingel;900,,,,,,,,,,,,,,14400,13500,900,6%,14400,13500,900,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0af9z:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
extract SpringTravel project,STS-213,73878,72613,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 12:39 PM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,02/Jul/09 3:47 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,,,;02/Jul/09 3:47 PM;spingel;1800,,,,,,,,,,,,,,10800,9000,1800,16%,10800,9000,1800,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afsn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
UI test for AMS integration,STS-201,72175,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Jun/09 10:23 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,23/Jul/09 11:08 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,"Time worked: 00:21 from Tue, 7 Jul 2009 00:00:00 -0700 to Tue, 7 Jul 2009 23:59:59 -0700.;07/Jul/09 5:28 PM;thon;1260","Time worked: 00:25 from Wed, 8 Jul 2009 00:00:00 -0700 to Wed, 8 Jul 2009 23:59:59 -0700.;08/Jul/09 4:47 PM;thon;1500","Time worked: 03:07 from Tue, 21 Jul 2009 00:00:00 -0700 to Tue, 21 Jul 2009 23:59:59 -0700.;21/Jul/09 5:41 PM;thon;11220","Time worked: 01:28 from Wed, 22 Jul 2009 00:00:00 -0700 to Wed, 22 Jul 2009 23:59:59 -0700.;23/Jul/09 9:32 AM;thon;5280",,,,,,,,,,,57600,0,19260,33%,57600,0,19260,,,,,,,,,,,,,,,,,,,,,,,,,,309916800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afmv:,9223372036854775807,9223372036854775807,,,,,13/Jul/09 4:49 PM;thon;Created UI test for creating an AMS runtime environment. Additional tests require a test AMS server.,,,,,,,,,,,,,,,,,,,,,,
UI test for vmware lab manager integration,STS-200,74104,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Jun/09 10:23 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,23/Jul/09 10:49 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,"Time worked: 05:45 from Mon, 13 Jul 2009 00:00:00 -0700 to Mon, 13 Jul 2009 23:59:59 -0700.;13/Jul/09 4:35 PM;thon;20700","Time worked: 01:34 from Fri, 10 Jul 2009 00:00:00 -0700 to Fri, 10 Jul 2009 23:59:59 -0700.;13/Jul/09 4:35 PM;thon;5640","Time worked: 02:50 from Tue, 21 Jul 2009 00:00:00 -0700 to Tue, 21 Jul 2009 23:59:59 -0700.;21/Jul/09 5:41 PM;thon;10200","Time worked: 04:47 from Wed, 22 Jul 2009 00:00:00 -0700 to Wed, 22 Jul 2009 23:59:59 -0700.;23/Jul/09 9:32 AM;thon;17220",,,,,,,,,,,57600,0,53760,93%,57600,0,53760,,,,,,,,,,,,,,,,,,,,,,,,,,309916800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afmf:,9223372036854775807,9223372036854775807,,,,,13/Jul/09 4:50 PM;thon;Created UI test for Lab Manager view and login functionality (failure case). Additional UI tests require a Lab Manager test instance.,,,,,,,,,,,,,,,,,,,,,,
UI test for visual editing,STS-199,73088,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,thon,thon,26/Jun/09 10:18 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,14/Jul/09 4:12 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,;08/Jul/09 5:51 PM;ldossantos;1800,;09/Jul/09 5:54 PM;ldossantos;18000,;10/Jul/09 5:50 PM;ldossantos;18900,;13/Jul/09 5:53 PM;ldossantos;13500,;14/Jul/09 4:12 PM;ldossantos;12600,,,,,,,,,,115200,0,64800,56%,115200,0,64800,,,,,,,,,,,,,,,,,,,,,,,,,,309830400,,,,,2009-07-14 16:12:33.809,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afnj:,9223372036854775807,9223372036854775807,,,,,14/Jul/09 4:12 PM;ldossantos;Eclemma shows about 65% coverage of the visual editing plugin. Moving onto other testing work. May revisit if time permits.,,,,,,,,,,,,,,,,,,,,,,
write test case that downloads Tomcat,STS-198,72197,72402,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 10:17 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,22/Jul/09 3:57 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m8,,,;22/Jul/09 3:57 PM;spingel;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afnb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
create UI that prompts for Tomcat download,STS-197,73899,72402,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 10:15 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,15/Jul/09 3:28 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,,,;15/Jul/09 3:28 PM;spingel;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,309744000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afhr:,9223372036854775807,9223372036854775807,,,,,15/Jul/09 3:28 PM;spingel;Tomcat is now managed as a separately installed item equivalent to tutorials and samples.,,,,,,,,,,,,,,,,,,,,,,
UI test for quickfix,STS-195,74442,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Jun/09 10:08 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,15/Jul/09 2:48 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,"Time worked: 05:55 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.;03/Jul/09 10:41 AM;thon;21300","Time worked: 05:35 from Fri, 3 Jul 2009 00:00:00 -0700 to Fri, 3 Jul 2009 23:59:59 -0700.;06/Jul/09 10:04 AM;thon;20100","Time worked: 06:27 from Mon, 6 Jul 2009 00:00:00 -0700 to Mon, 6 Jul 2009 23:59:59 -0700.;07/Jul/09 9:50 AM;thon;23220","Time worked: 03:01 from Tue, 7 Jul 2009 00:00:00 -0700 to Tue, 7 Jul 2009 23:59:59 -0700.;07/Jul/09 5:28 PM;thon;10860","Time worked: 05:00 from Wed, 8 Jul 2009 00:00:00 -0700 to Wed, 8 Jul 2009 23:59:59 -0700.;08/Jul/09 4:47 PM;thon;18000","Time worked: 02:00 from Thu, 9 Jul 2009 00:00:00 -0700 to Thu, 9 Jul 2009 23:59:59 -0700.;09/Jul/09 5:13 PM;thon;7200","Time worked: 01:52 from Tue, 14 Jul 2009 00:00:00 -0700 to Tue, 14 Jul 2009 23:59:59 -0700.;15/Jul/09 9:33 AM;thon;6720","Time worked: 04:40 from Wed, 15 Jul 2009 00:00:00 -0700 to Wed, 15 Jul 2009 23:59:59 -0700.;15/Jul/09 4:03 PM;thon;16800","Time worked: 00:44 from Tue, 21 Jul 2009 00:00:00 -0700 to Tue, 21 Jul 2009 23:59:59 -0700.;21/Jul/09 5:41 PM;thon;2640","Time worked: 01:50 from Mon, 20 Jul 2009 00:00:00 -0700 to Mon, 20 Jul 2009 23:59:59 -0700.;21/Jul/09 5:46 PM;thon;6600",,,,,115200,0,133440,115%,115200,0,133440,,,,,,,,,,,,,,,,,,,,,,,,,,310435200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afif:,9223372036854775807,9223372036854775807,,,,,"03/Jul/09 10:41 AM;thon;Time worked: 05:55 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.","06/Jul/09 10:04 AM;thon;Time worked: 05:35 from Fri, 3 Jul 2009 00:00:00 -0700 to Fri, 3 Jul 2009 23:59:59 -0700.","07/Jul/09 9:50 AM;thon;Time worked: 06:27 from Mon, 6 Jul 2009 00:00:00 -0700 to Mon, 6 Jul 2009 23:59:59 -0700.","07/Jul/09 5:28 PM;thon;Time worked: 03:01 from Tue, 7 Jul 2009 00:00:00 -0700 to Tue, 7 Jul 2009 23:59:59 -0700.",,,,,,,,,,,,,,,,,,,
UI test for content assist in config editor,STS-194,73537,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,thon,thon,26/Jun/09 10:07 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,06/Jul/09 6:13 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,,,;02/Jul/09 6:30 PM;ldossantos;19800,;06/Jul/09 11:28 AM;ldossantos;20700,;06/Jul/09 6:13 PM;ldossantos;19800,,,,,,,,,,,,28800,0,60300,209%,28800,0,60300,,,,,,,,,,,,,,,,,,,,,,,,,,310521600,,,,,2009-07-06 11:28:00.204,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ag07:,9223372036854775807,9223372036854775807,,,,,06/Jul/09 11:28 AM;ldossantos;Logging time worked on Friday.,"06/Jul/09 6:13 PM;ldossantos;I've committed tests for content assist in the config editor, and for other common UI interactions as well. The content assist tests aren't very robust, I may revisit before the end of the sprint if time permits.",,,,,,,,,,,,,,,,,,,,,
Investigate technology for UI tests,STS-192,74346,72512,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,thon,thon,26/Jun/09 10:06 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,08/Jul/09 5:03 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M7,"* SWTBot
* other technologies for testing GEF?",,;02/Jul/09 11:00 AM;ldossantos;1800,;07/Jul/09 6:05 PM;ldossantos;16200,;08/Jul/09 5:03 PM;ldossantos;14400,,,,,,,,,,,,57600,0,32400,56%,57600,0,32400,,,,,,,,,,,,,,,,,,,,,,,,,,310348800,,,,,2009-06-26 12:54:22.653,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ag0n:,9223372036854775807,9223372036854775807,,,,,"26/Jun/09 12:54 PM;ldossantos;Could be that SWTBot already works for testing GEF? Will need to investigate, and if not then find another solution.","02/Jul/09 11:00 AM;ldossantos;Doing some reading, it looks like some folks have got SWTBot working with GEF with some massaging, although it doesn't look like there's much official support in SWTBot for GEF. Before I commit to using STWBot to test the visual editor, I'm going to try writing some config editor tests with SWTBot to familiarize myself with the framework.",08/Jul/09 5:03 PM;ldossantos;We've got SWTBot working to test our config editor form pages and source page. It also looks like we'll be able to test our GEF based visual editor pages with some modifications to SWTBot.,,,,,,,,,,,,,,,,,,,,
create a command for downloading Tomcat,STS-191,74027,72402,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 10:00 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,15/Jul/09 3:26 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,Tutorials require additional dependencies in the Tomcat classpath. These dependencies need to be downloaded and installed separately.,,;15/Jul/09 3:26 PM;spingel;3600,,,,,,,,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,309744000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ag0f:,9223372036854775807,9223372036854775807,,,,,15/Jul/09 3:26 PM;spingel;Tomcat is downloaded with the tutorial when it is first started.,,,,,,,,,,,,,,,,,,,,,,
re-author tutorials that include the SpringTravel project,STS-189,74130,72613,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,26/Jun/09 9:56 AM,01/Dec/10 12:00 PM,10/May/19 2:37 AM,13/Jul/09 2:05 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,"Tutorials that include SpringTravel:
* org.springframework.web.tutorials/org.springframework.web.tutorials.webprojectoverview
* org.springframework.web.tutorials/org.springframework.web.tutorials.creatingcontroller",,;13/Jul/09 2:05 PM;spingel;3600,,,,,,,,,,,,,,10800,7200,3600,33%,10800,7200,3600,,,,,,,,,,,,,,,,,,,,,,,,,,311385600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0afz3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling mistake in web-application-config file in Getting Started with Spring Web Flow,STS-185,74317,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Trivial,Fixed,,tjccjt,tjccjt,26/Jun/09 4:06 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,28/Jul/09 1:23 PM,2.0.2.RELEASE,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,Y2M8,"Steps to Reproduce:
1. Open Spring Tool Suite
2. Select STS Dashboard item Spring Web Flow - Get Started with Spring Web Flow
3. Follow tasks to step 'Adding a Flow'
4. web-application-config.xml contains this comment:

<!-- Imports the ""application-layer"" definining business logic and data access services -->
	
This should read ...*defining* business logic....
",,"Time worked: 01:39 from Tue, 28 Jul 2009 00:00:00 -0700 to Tue, 28 Jul 2009 23:59:59 -0700.;28/Jul/09 5:09 PM;thon;5940",,,,,,,,,,,,,,0,0,5940,"9,223,372,036,854,775,807%",0,0,5940,,,,,,,,,,,,,,,,,,,,,,,,,,308620800,,,,,2009-07-28 10:53:53.865,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0abc7:,9223372036854775807,9223372036854775807,,,,,"28/Jul/09 10:53 AM;cdupuis;Terry, can you look into this?","28/Jul/09 1:23 PM;thon;It seems like this has been fixed already. I only see the following line in web-application-config.xml

<!-- Imports the configurations of the different infrastructure systems of the application -->

Please reopen if you still see the mistake.",,,,,,,,,,,,,,,,,,,,,
"As a user, I want to easily install third-party plugins into STS",STS-179,72605,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,,cdupuis,cdupuis,25/Jun/09 9:56 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,14/Oct/09 4:49 AM,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,0,y3m1,,,;06/Oct/09 11:08 PM;spingel;3600,,,,,,,,,,,,,,,0,3600,,169200,3600,86460,,,,,,,,,,,,,,,,,,,,,,,,,,302572800,,,,,2009-10-06 23:08:00.939,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a24f:,9223372036854775807,9223372036854775807,,,,,30/Jul/09 3:52 PM;cdupuis;Similar to the Mylyn connector discovery. Actually pretty much the same but not for connectors but for third-party plugins.,06/Oct/09 11:08 PM;spingel;This is done. The commit is pending a Mylyn release ,,,,,,,,,,,,,,,,,,,,,
"As a user, I want to install tutorials and project templates on-demand and get notifications for new items",STS-175,72413,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,,cdupuis,cdupuis,25/Jun/09 9:50 AM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,21/Jul/09 8:59 AM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,,"Each tutorial needs to self-contained and distributed as a zip file with well-structured contents:
 * folder projects (all projects to import)
 * folder tasks (all task contents)
 * in the root the meta data files for the cheatsheet

The tutorials can't be bundles since authors need to be able to create them without knowledge about PDE or OSGi.

The list of available tutorials is hosted on a web server to allow updating of tutorials outside of STS release cycles.",,"Time worked: 01:30 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.;02/Jul/09 9:55 PM;spingel;5400",,,,,,,,,,,,,,,0,5400,,111600,52200,106200,,,,,,,,,,,,,,,,,,,,,,,,,,310867200,,,,,2009-07-02 21:55:01.572,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0acav:,9223372036854775807,9223372036854775807,,,,,"02/Jul/09 9:55 PM;spingel;Time worked: 01:30 from Thu, 2 Jul 2009 00:00:00 -0700 to Thu, 2 Jul 2009 23:59:59 -0700.",,,,,,,,,,,,,,,,,,,,,,
Include Spring-Travel as an example project,STS-155,72613,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,17/Jun/09 8:54 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,13/Jul/09 2:06 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,Multiple tutorials use the SpringTravel example project. It would be useful to make it available as project that is available from the import wizard.,,;02/Jul/09 3:43 PM;spingel;2700,,,,,,,,,,,,,,,0,2700,,21600,16200,8100,,,,,,,,,,,,,,,,,,,,,,,,,,306201600,,,,,2009-08-25 05:18:39.647,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9af:,9223372036854775807,9223372036854775807,,,,,"30/Jun/09 7:10 PM;spingel;The SpringTravel sample application is available as the ""Hotel Booking Reference App"".",02/Jul/09 3:43 PM;spingel;Turns out that the SpringTravel project is a different implementation that the Hotel Booking sample. I have commited a new org.springframework.samples.springtravel project.,"25/Aug/09 5:18 AM;mahesh_yamsani;May I know the Url for downloading, spring travel latest example",25/Aug/09 1:02 PM;spingel;The SpringTravel project is included in STS. If you download the latest version of the SpringSource Tool Suite you can import the project from File > Import > Sample Projects.,,,,,,,,,,,,,,,,,,,
Enable manager app in included tc Server and Tomcat,STS-154,76025,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,17/Jun/09 8:52 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,15/Jul/09 4:18 PM,,,,,,,2.1.0.RELEASE,,,,,,,,0,y2m7,"Enable manager app in tc Server and Tomcat. Add this to to server.xml:

      <Context docBase=""manager"" path=""/manager"" reloadable=""false""/>

Edit tomcat-users.xml to provide a user in the ""manager"" role, e.g.:

  <role rolename=""manager""/>
  <user username=""admin"" password=""admin"" roles=""manager""/>
",,;15/Jul/09 4:18 PM;spingel;5400,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,309744000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a4br:,9223372036854775807,9223372036854775807,,,,,15/Jul/09 4:18 PM;spingel;The manager app now gets added as an external web application when the STS Tomcat is installed for the first time either through a tutorial or the dashboard. The credentials default to admin/admin.,,,,,,,,,,,,,,,,,,,,,,
Add visual editing support to the config editor for the integration namespace.,STS-153,76328,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,17/Jun/09 5:19 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,16/Jun/10 11:43 AM,,,,,,,2.3.3.M2,,,,,,,,9,,With STS 2.1 the config editor will support visual editing of Spring Batch configuration files. It would be useful to extend this support for visual editing of Spring Integration configuration files as well.,,;17/Nov/09 11:15 AM;ldossantos;86400,,,,,,,,,,,,,,,0,86400,,230400,3600,1412400,,,,,,,,,,,,,,,,,,,,,,,,,,280713600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09t3j:,9223372036854775807,9223372036854775807,,,,,"18/Jun/09 4:02 PM;ldossantos;There have been requests for this kind of support based on the http://enterpriseintegrationpatterns.com/ book. We'll need to decide if we want a patterns based editor, or flow based editor like the one for Spring Batch.",16/Jun/10 11:43 AM;ldossantos;Will ship with STS 2.3.3 release.,,,,,,,,,,,,,,,,,,,,,
Add forms support to the config editor for the integration namespace,STS-145,72944,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Jun/09 5:16 PM,30/Nov/10 4:57 PM,10/May/19 2:37 AM,15/Dec/09 11:42 AM,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,8,,The config editor provides forms based editing of XML files for several projects in the Spring portfolio. It would be useful to add support for the integration namespace to the editor.,,;29/Oct/09 4:25 PM;ldossantos;5400,;02/Nov/09 6:13 PM;ldossantos;23400,;03/Nov/09 5:13 PM;ldossantos;18000,;04/Nov/09 3:58 PM;ldossantos;2400,,,,,,,,,,,,0,49200,,14400,0,76200,,,,,,,,,,,,,,,,,,,,,,,,,,312163200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1xb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Project created by Spring ""Create a new Shared Services Project"" template has build errors",STS-133,73737,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,jolong,acolyer,acolyer,15/Jun/09 9:18 AM,03/Jul/11 5:52 PM,10/May/19 2:37 AM,03/Jul/11 5:52 PM,2.1.0.M2,,,,,,2.7.0.RELEASE,,,,,,,,1,,"In a clean STS installation, in a fresh workspace, do File -> New -> Spring Template Project -> Shared Services Bundle Project""

Created project has 28 build errors. Manually fixing the target runtime error reduces this to 20. See attached screenshot.

Projects created by the template should build without error immediately.",,"Time worked: 02:07 from Tue, 18 Aug 2009 00:00:00 -0700 to Tue, 18 Aug 2009 23:59:59 -0700.;18/Aug/09 4:40 PM;thon;7620",,,,,,,,,,,,,,0,7200,7620,"9,223,372,036,854,775,807%",0,7200,7620,,,,,,,,,,,,,,,15/Jun/09 9:18 AM;acolyer;shared-services-problems.tiff;https://jira.spring.io/secure/attachment/23999/shared-services-problems.tiff,,,,,,,,,,,311731200,,,,,2009-06-22 09:34:04.366,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a55r:,9223372036854775807,9223372036854775807,,,,,22/Jun/09 9:34 AM;cdupuis;Keith since you initially created this template can you take a look at this problem and let me know how you'd like that to be handled?,,,,,,,,,,,,,,,,,,,,,,
"Project created by Spring ""Create a new Shared Library Project"" template has build errors",STS-131,74704,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Complete,jolong,acolyer,acolyer,15/Jun/09 8:58 AM,03/Jul/11 5:45 PM,10/May/19 2:37 AM,03/Jul/11 5:45 PM,2.1.0.M2,,,,,,2.7.0.RELEASE,,,,,,,,2,,"Using a vanilla 2.1.0 M2 install, in a fresh workspace:
* Start up STS
* Select File->New->Spring Template Project->Shared Library Bundle Project
* fill in the wizard fields.

Created project fails to build with 5 errors:

* Target runtime SpringSource dm Server (Runtime) v1.0 is not defined.	com.myco.mybundle		
* Test cannot be resolved to a type	ExampleTypeTest.java	com.myco.mybundle/src/test/java/com/myco/mybundle line 14	
*The import org.junit cannot be resolved	ExampleTypeTest.java	com.myco.mybundle/src/test/java/com/myco/mybundle	line 3
* The import org.junit cannot be resolved	ExampleTypeTest.java	com.myco.mybundle/src/test/java/com/myco/mybundle	line 5	Java Problem
* The method assertEquals(String, String, String) is undefined for the type ExampleTypeTest	ExampleTypeTest.java	com.myco.mybundle/src/test/java/com/myco/mybundle	line 16	Java Problem

Looking at the pre-defined runtime environments I have a runtime environment named ""SpringSource dm Server v1.0"" (does not match name used in project), that is of *type* ""SpringSource dm Server (Runtime) v1.0"".

Changing the project properties to point at the pre-defined dm Server instance only solves the first problem, the other 4 remain.

A project created by a template should always build successfully out of the box...",,"Time worked: 00:04 from Tue, 18 Aug 2009 00:00:00 -0700 to Tue, 18 Aug 2009 23:59:59 -0700.;18/Aug/09 4:40 PM;thon;240",,,,,,,,,,,,,,0,7200,240,"9,223,372,036,854,775,807%",0,7200,240,,,,,,,,,,,,,,,,,,,,,,,,,,247708800,,,,,2009-06-22 09:32:09.981,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a54f:,9223372036854775807,9223372036854775807,,,,,"15/Jun/09 9:01 AM;acolyer;Additional error after fixing server reference:

Import-Bundle: com.springsource.org.junit [0.0.0, ∞) could not be resolved	TEST.MF	com.myco.mybundle/src/test/java/META-INF	line 1	SpringSource Bundle Dependency Problem

...which explains why the test stuff is missing, but should I expect to have that on my server??","22/Jun/09 9:32 AM;cdupuis;Keith, I fixed the runtime name problem. 

Since you initially created this template how do you envision users get a hold of JUnit and other test dependencies that don't ship with dm Server?",03/Jul/11 5:45 PM;jolong;fixed in the upcoming release,,,,,,,,,,,,,,,,,,,,
Built in tc Server cannot be stopped,STS-114,76356,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,dsyer,dsyer,01/Jun/09 4:11 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,15/Oct/09 6:54 PM,2.1.0.M1,,,,,,2.2.0.RELEASE,2.2.1.RELEASE,Sprint 5,,,,,,0,y3m1,"Built in tc Server cannot be stopped.  When you run the server from the Servers view a new process is created, but that process never seems to die (has to be killed manually), preventing any other server from using port 8080.",,;10/Sep/09 3:30 PM;spingel;5400,,,,,,,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,301795200,,,,,2009-06-01 09:42:38.486,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09zwv:,9223372036854775807,9223372036854775807,,,,,"01/Jun/09 9:42 AM;cdupuis;I cannot reproduce this with 2.1.0.M2 on windows or mac. Dave, could you please retry with the M2?","01/Jun/09 4:01 PM;spingel;The shutdown mechanism for tc Server relies stopping Catalina through JMX at the moment and then killing the remains of the process. The reason for this is that the default tc Server configuration does not have a shutdown port specified. 

Using a shutdown port would be much nicer. Christian, can we enable that in the tc Server that ships with STS?","04/Jun/09 3:23 PM;cdupuis;Steffen, that is problematic since this requires the modification to be present for all tc Server instances which is probably not a good assumption when pointing to an tc Server that does not come with STS. 

Can we provide some startup args that would it?

Christian",08/Sep/09 2:36 PM;spingel;We could set the property for shutdown.port in the launch configuration to an available port. This would work for the standard case where ${shutdown.port} is configured as the administrative port in server.xml.,"10/Sep/09 3:29 PM;spingel;I have looked into this but wasn't able to make it work. The shutdown.port property set in catalina.properties which defaults to -1 takes precedence over properties specified on the command line. Looking at the standard script that comes with tc Server it looks like on non Windows platform a ""kill $PID"" and ""kill -9 $PID"" is executed to stop tc Server. This is similar to how the tc Server tooling does it. I'll verify that this works on properly but I don't see what else can be done here other than modifying the configuration.

Dave, as a work-around you will be able to edit the shutdown.port property from the server editor in the next version of STS.
","15/Oct/09 6:54 PM;spingel;I have verified that tc Server properly shuts down when being stopped from the Servers view with the latest STS 2.2.0 RC. Dave, please reopen this bug in case you are still experiencing the problem with the latest.",,,,,,,,,,,,,,,,,
Template project wizard: projects listed twice in drop down,STS-107,75045,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,dsyer,dsyer,25/May/09 6:37 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,10/Sep/09 10:48 AM,2.1.0.M1,,,,,,2.2.0.RELEASE,Sprint 3,,,,,,,0,Y3M1,"Template projects double listed in drop down.  When I want to test a template project, I launch Eclipse from the workspace where I made the change.  The New->Other...->STS->Template Project wizard contains two entries with the same name, so I can't tell which is which.  It would be better if only the upgraded version showed up.  Is there a way to do that, by updating the version or something?  They both have the same template_project id though (obviously).",,"Time worked: 01:07 from Thu, 10 Sep 2009 00:00:00 -0700 to Thu, 10 Sep 2009 23:59:59 -0700.;10/Sep/09 10:48 AM;thon;4020","Time worked: 02:23 from Thu, 10 Sep 2009 00:00:00 -0700 to Thu, 10 Sep 2009 23:59:59 -0700.;10/Sep/09 5:01 PM;thon;8580",,,,,,,,,,,,,0,0,12600,"9,223,372,036,854,775,807%",0,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,304819200,,,,,2009-09-10 03:05:20.961,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09vo7:,9223372036854775807,9223372036854775807,,,,,"10/Sep/09 3:05 AM;cdupuis;Terry, can you please ensure that only the template with the highest version is displayed.",10/Sep/09 10:48 AM;thon;I've added a check for version number so that only the highest version with a given ID is shown. Please reopn if you still see two of the sample template listed in the list.,,,,,,,,,,,,,,,,,,,,,
Download dm Server link should not have to go out to internet,STS-88,72537,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,dsyer,dsyer,11/May/09 3:54 AM,30/Nov/10 4:58 PM,10/May/19 2:37 AM,15/Jul/09 1:59 PM,,,,,,,2.1.0.RELEASE,Sprint 1,,,,,,,0,y2m7,"Download dm Server link should not have to go out to internet.  When I clicked on the link on the Configuration tab of STS dashboard computer went nuts - I figured maybe ""Download"" was a typo, since there is an instance of dm Server locally that I installed with STS.  But it seems to be off in La La Land.  And when I tried to cancel the operation it took several minutes to respond.",,;15/Jul/09 1:59 PM;spingel;7200,,,,,,,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,309744000,,,,,2009-05-11 03:55:25.681,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1g7:,9223372036854775807,9223372036854775807,,,,,"11/May/09 3:55 AM;cdupuis;Steffen, we should only go and download if the dm server is not bundled (on the same level as the sts install folder).","11/May/09 9:36 AM;spingel;Ok, I can change the strategy to check for the local installation first. I can also look into replacing the Webtools download mechanism with our own to provide cancellation support.","15/Jul/09 1:59 PM;spingel;I have renamed the dashboard link to ""Install ..."". It now checks for a local installation first and then shows a prompt before a download is started. I have also improved the progress reporting and added cancellation support.",,,,,,,,,,,,,,,,,,,,
"Provide 10,000 ft intro page on spring.net features on web site",SPRNET-777,18561,,Task,Resolved,SPRNET,Spring.NET,software,sbohlen,A .NET application framework inspired by the Java based Spring Framework,http://www.springframework.net/,Major,Fixed,mark.pollack,mark.pollack,mark.pollack,16/Nov/07 3:13 AM,27/Nov/07 5:01 AM,10/May/19 2:37 AM,27/Nov/07 5:01 AM,1.1 RC2,,,,,,1.1.0,,,Spring-NET-DA,,,,,0,,,,;27/Nov/07 5:01 AM;mark.pollack;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,362188800,,,,,,14586,false,mark.pollack(mark.pollack),,,,0|i01m13:,9446,9492,,,,,,,,,,,,,,,,,,,,,,,,,,,
a Uri Value is incorrectly extracted if it contains '.'.,SPR-6164,28093,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,rstoya05-aop,zwu_ca,zwu_ca,29/Sep/09 8:12 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,21/Jun/11 4:59 AM,3.0 M4,3.0 RC1,,,,,3.1 RC1,,,Web,,,,,2,,"Suppose we have the controller request mapping as the following

 
 @RequestMapping(value = ""/my/{vari}"", method = RequestMethod.GET)
 @ResponseBody
    public String getVari(@PathVariable String vari) {
        System.out.println(""vari="" + vari);
        return vari;
    }
 

If a request such as  ""http://localhost/myapp/my/abc.mycontroller.com"" is submitted, the actually value of 'vari' obtained by Spring API only returns 'abc.mycontroller'.  

Further investigation turns out the issue is at line 564 in https://src.springframework.org/svn/spring-framework/tags/spring-framework-3.0.0.RC1/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java. The pattern generated by the line results in ""{vari}.*"". With  the 'pathMatcher' (the matcher used at line 565) object created by AntPathStringMatcher(""{vari}.*"", ""abc.mycontroller.com"", map), the value of 'vari' will be 'abc.mycontroller' in the 'map' variable after executing line 566.
",,;14/Oct/09 8:18 PM;arjen.poutsma;2880,,,,,,,,,,,,,,,0,2880,,,0,2880,,,,,,,SPR-7632,,,,,SPR-5537,,,29/Sep/09 8:18 AM;zwu_ca;MyController.java;https://jira.spring.io/secure/attachment/15751/MyController.java,,,,,,,,,,,9936000,,,,,2009-10-14 01:42:34.559,1319,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00p4n:,4116,5460,,,,Sun JVM -> 1.6,29/Sep/09 8:18 AM;zwu_ca;The controller for reproducing the issue. ,"14/Oct/09 1:42 AM;arjen.poutsma;This is an unfortunate side effect to the resolution of SPR-5537. And if we would roll back the fix for that issue, people using file extensions will complain :).

There is a workaround, by explicitly configuring a DefaultAnnotationHandlerMapping in your servlet context and to disable the useDefaultSuffixPattern property, like so:

{code:xml}
<bean class=""org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"">
  <property name=""useDefaultSuffixPattern"" value=""false""/>
</bean>
{code}

This will override the default DefaultAnnotationHandlerMapping that is created, and not map file extensions.","14/Oct/09 9:58 PM;grzegorzborkowski;I had similar problems: see my comment to SPR-5636 (http://jira.springframework.org/browse/SPR-5636?focusedCommentId=44259&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_44259). 
(At that time, we decided to use IDs in urls instead of domain names, in order to not have dots, because of this issue)
","19/Oct/09 2:57 AM;zwu_ca;Hi Arjen, the workaround provided here has side effect: uri '/my' and '/my/' won't return the same result. Usually one only maps '/my'; '/my/' should return the same result as '/my'. ","01/Sep/10 4:30 PM;praveen.krishnan@citrix.com;I am using spring-web 3.0.3-RELEASE and i guess it should be resolved. But when i invoke my rest url, the path variable i get is still removing the .com at the end. ","25/Apr/11 5:21 AM;digitalsanctum;I'm using 3.0.5.RELEASE and still have this issue. In my case I have an email address being passed as a PathVariable but the TLD is getting truncated. For example foo@bar.com gets truncated to foo@bar.

Can someone from SpringSource verify this is still an issue?","01/Jun/11 6:53 AM;eldontc;I'm using 3.0.5 RELEASE too and still have this issue too. My case is the same as Shane Witbeck say. Even after apply the configuration that Arjen Poutsma did post, the problem still occurs. Please SpringSource guys, help us. ","21/Jun/11 4:58 AM;rstoya05-aop;The new {{RequestMappingHandlerMapping}} in Spring 3.1 now provides an option to disable pattern matching by  suffix, which does not affect matching to URLs with a trailing slash as described SPR-5636. 

There is work planned for Spring 3.2, which will provide a better alternative to turning pattern matching off completely by checking against a list of configured suffix types. This is described in SPR-8474.",25/Jun/12 6:47 PM;rstoya05-aop;Related issue SPR-7632 is now resolved providing a better solution for this issue. There should be no need to disable suffix pattern matching any more as long you have configured valid file extensions. ,"31/Oct/12 2:19 PM;dserodio;@Rossen, SPR-7632 is for Spring 3.2, which isn't release yet. What is the suggested fix/workaround for Spring 3.1 users?","15/Jul/13 8:02 PM;itsaurabh1;It is pretty simple just add "":.+"" with your parameter like below:

here username is e-mail id
	
	@RequestMapping(value = ""checkuser/{username:.+}"" , method=RequestMethod.GET)
    @ResponseBody
    boolean getUserName(@PathVariable(""username"") String userName) {
		boolean isUserAvailable = userDao.checkAvailable(userName);
		return isUserAvailable;
	}

I am passing value from URL like : 
http://localhost:8081/user/checkuser/test@test.com","30/Sep/13 11:47 PM;sandip.jadhav99@gmail.com;I am using version 3.2.4 of spring and still facing same issue , do i need to do some more configurations ?",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10832|https://github.com/spring-projects/spring-framework/issues/10832]. ,,,,,,,,,,
@ResponseBody with returned String results in unresolvable view ServletException,SPR-6148,28045,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,ande,ande,24/Sep/09 3:20 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,24/Sep/09 9:34 PM,3.0 M4,,,,,,3.0 RC1,,,Web,,,,,0,,"We are using the @ResponseBody similar as indicated in the reference doc, like:
@RequestMapping(value = ""/something"", method = RequestMethod.PUT)
@ResponseBody
public String helloWorld()  {
  return ""Hello World"";
}

The returned String does get written to the response by the StringHttpMessageConverter (and the remote client is happy), but then the String goes on to be rendered as an InternalResourceView. Since the strings we are returning are not valid as internal resources, we see a ServletException that is, among other things, caught by our HandlerInterceptor.

One reason this is a problem is because we are mixing together some responses that are marshalled to XML, some that are returned as a strings via the ResponseBody, and others that are valid InternalResourceViews.

One approach may be that AnnotationMethodHandlerAdapter should return null instead of attempting to create a ModelAndView after this condition is met:

AnnotationMethodHandlerAdapter.getModelAndView(..) :
if (returnValue != null && handlerMethod.isAnnotationPresent(ResponseBody.class)) {
        handleRequestBody(returnValue, webRequest);
}

As it is, it proceeds to:

if (returnValue instanceof String) {
        return new ModelAndView((String) returnValue).addAllObjects(implicitModel);
}",,;24/Sep/09 9:34 PM;arjen.poutsma;480,,,,,,,,,,,,,,,0,480,,,0,480,,,,,,,,,,,,,,,24/Sep/09 3:21 PM;ande;ResponseBodyTest.java;https://jira.spring.io/secure/attachment/15738/ResponseBodyTest.java,24/Sep/09 3:22 PM;ande;Test-servlet.xml;https://jira.spring.io/secure/attachment/15739/Test-servlet.xml,,,,,,,,,,9936000,,,,,2019-01-14 20:38:47.306,3631,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qhr:,4337,5635,,,,Mac OS X JVM -> 1.6,24/Sep/09 3:21 PM;ande;Test attempting to demonstrate the issue.,24/Sep/09 3:22 PM;ande;Servlet config to be used with test class,"25/Sep/09 5:10 AM;ande;I added some somewhat-related discussion about @ResponseBody to this thread:
http://forum.springsource.org/showthread.php?t=76969",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10816|https://github.com/spring-projects/spring-framework/issues/10816]. ,,,,,,,,,,,,,,,,,,,
@ResponseStatus annotation is ignored in an @Controller redirect (RedirectView),SPR-6144,28029,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,flyinwolf,flyinwolf,22/Sep/09 3:23 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,24/Sep/09 9:23 PM,3.0 M4,,,,,,3.0 RC1,,,Web,,,,,0,,"In a controller that returns a RedirectView or ""redirect:someViewName"" the @ResponseStatus annotation is ignored.  RedirectView always returns a hard coded 303 (or 302) in spite of the given value in the @ResponseStatus annotation.

i.e.
@{code}
@Controller
@RequestMapping(value = ""/games"")
public class GameController {
...
  @RequestMapping(method = RequestMethod.POST)
  @ResponseStatus( value=HttpStatus.CREATED ) 
  public View createGame( @ModelAttribute(""gameForm"") GameForm gameForm ) {
    return getRedirectViewForCreate(); // ""redirect:somelocation.html"";
  }
...
{code}

Got:
{noformat}
$ curl -i -d name=""game1"" http://localhost:8080/rook2/rest/games/form.html
HTTP/1.1 302 Moved Temporarily
Server: Apache-Coyote/1.1
Location: http://localhost:8080/rest/games/1.html
Content-Language: en-US
Content-Length: 0
Date: Wed, 23 Sep 2009 04:03:15 GMT
{noformat}

Expected:
{noformat}
$ curl -i -d name=""game2"" http://localhost:8080/rook2/rest/games/form.html
HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
Location: /rook2/rest/games/2.html
Content-Language: en-US
Content-Length: 0
Date: Wed, 23 Sep 2009 02:44:55 GMT
{noformat}

I notice this could also maybe solve - http://jira.springframework.org/browse/SPR-5468

RedirectView.sendRedirect(...) could look something like this:
{code}
protected void sendRedirect(
			HttpServletRequest request, HttpServletResponse response, String targetUrl, boolean http10Compatible)
			throws IOException {
		
		if (http10Compatible) {
			// Always send status code 302.
			response.sendRedirect(response.encodeRedirectURL(targetUrl));
		}
		else if ( getHttpStatusCode() == null ) {
			// Correct HTTP status code is 303, in particular for POST requests.
			response.setStatus(303);
			response.setHeader(""Location"", response.encodeRedirectURL(targetUrl));
		} else {
			if ( !isHttpStatusCodePreviouslySet() ) { // whatever... main thing is do NOT set it if the @ResponseStatus sets the status code
				response.setStatus( getHttpStatusCode() );
			}
			response.setHeader(""Location"", response.encodeRedirectURL(targetUrl));
		}

	}
{code}
Extending RedirectView works for me, but of course ""redirect:something.html"" would not work without also changing the class instantiated when ""redirect:"" is used.  But again, as is, it does give unexpected behaviour.
",,;24/Sep/09 9:23 PM;arjen.poutsma;23040,,,,,,,,,,,,,,1800,0,23040,"1,280%",1800,0,23040,,,,,,,,,,,,SPR-5468,,,,,,,,,,,,,,9936000,,,,,2009-09-23 19:09:39.032,15944,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i016uv:,6988,7699,,,,Sun JVM -> 1.6,22/Sep/09 3:56 PM;flyinwolf;http://jira.springframework.org/browse/SPR-6008 (resolved) was also a problem where the annotation was ignored.,23/Sep/09 7:09 PM;arjen.poutsma;Added formatting,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10812|https://github.com/spring-projects/spring-framework/issues/10812]. ,,,,,,,,,,,,,,,,,,,,
Be able to specify a default content type when no extension is used in ContentNegotiatingViewResolver,SPR-6130,27994,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,egervari,egervari,19/Sep/09 2:20 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,21/Sep/09 1:27 AM,3.0 M4,,,,,,3.0 RC1,,,Web,,,,,0,,"I'm having a problem where I am trying to get xml, json, html, etc. to work using the content negotiator. It works perfectly... almost. The main problem I'm having is that the default content type is coming up as XML. Here is the dispatcher servlet xml:

{code:xml}
    <bean id=""contentNegotiatingViewResolver""
          class=""org.springframework.web.servlet.view.ContentNegotiatingViewResolver"">
        <property name=""order"" value=""2""/>
        <property name=""mediaTypes"">
            <map>
                <entry key=""ftl"" value=""text/html""/>
                <entry key=""xml"" value=""application/xml""/>
                <entry key=""json"" value=""application/json""/>
                <entry key=""atom"" value=""application/atom+xml""/>
                <entry key=""rss"" value=""application/rss+xml""/>
            </map>
        </property>
        <property name=""defaultViews"">
            <list>
                <bean class=""org.springframework.web.servlet.view.xml.MarshallingView"">
                    <property name=""marshaller"">
                        <bean class=""org.springframework.oxm.xstream.XStreamMarshaller"">
                            <property name=""autodetectAnnotations"" value=""true""/>
                        </bean>
                    </property>
                </bean>
                <bean class=""org.springframework.web.servlet.view.json.MappingJacksonJsonView""/>
            </list>
        </property>
        <property name=""viewResolvers"">
            <list>
                <bean id=""viewResolver"" class=""org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"">
                    <property name=""order"" value=""1""/>
                    <property name=""cache"" value=""false""/>
                    <property name=""prefix"" value=""""/>
                    <property name=""suffix"" value="".ftl""/>
                    <property name=""exposeSpringMacroHelpers"" value=""true""/>
                </bean>
            </list>
        </property>
    </bean>
{code}

As it stands, mapping to ""/"" results in Spring trying to get to ""/.xml"", which is terrible since it really needs to get mapped to what I have in @RequestMapping in a controller (mine points to ""index"", which in turns should get mapped to ""index.ftl"" in the view resolver)

Ultimately though, despite the above mentioned problem, having to specify "".ftl"" whenever I want a text/html view is somewhat annoying. It's workable mind you... but then there is no change of having a proper index page.

If there is quick workaround, would you please email me? Maybe I set it up incorrectly too... and if that's the case, I apologize for posting this.

Thanks for all of your help!",,;21/Sep/09 1:27 AM;arjen.poutsma;21600,,,,,,,,,,,,,,,0,21600,,,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-09-20 18:26:46.941,15951,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00m7j:,3643,5032,http://forum.springsource.org/showthread.php?p=261035#post261035,,,Sun JVM -> 1.6,"19/Sep/09 8:44 PM;egervari;Oh, this kind of an aside... is there a way to tell the web.xml that I only want a couple of patterns and not just /*? Currently, this will intercept *.gif and stuff like that... which is obviously bad. I really don't want to send those urls to the dispatcher servlet ;)

I can only come up with two ways to fix it. I can map to /spring/* for all my dispatcher servlet needs... which would make it possible for /images/blah.gif to be resolved normally. Or, I could create dispatcher servlets... but that defeats the whole point of content negotiation ;(

I wish Sun smartened up when they made the web.xml and let me people use a list of patterns :( They always mess things up for everybody on just about everything they touch.",20/Sep/09 6:26 PM;arjen.poutsma;Fixed formatting,20/Sep/09 6:28 PM;arjen.poutsma;Fixed formatting,"20/Sep/09 6:55 PM;egervari;Thanks for fixing the formatting :)

I also want to add that using content negotiation does have a drawback with how the web.xml needs to be setup.

In order to get all the urls to be served correctly without extensions, we usually map like /*. This in turn blocks javascript, images, css, etc. as they are sent to the dispatcher servlet. So, we usually have to make our url-patterns more fine-grain with 2.5 servlet spec (2.4 won't help). 

Honestly, what I think would help, once all the bugs are ironed out, is solid documentation showing how to configure a web.xml and xyz-servlet.xml properly with all the trimmings, just so people can get this up and running quickly and bug-free. Because honestly, I played with it for hours getting settings that worked reasonably well... and no sense why everyone should do that ;) You can use my code as a place to start even.

I think having a default content for no file extension would be very good... and possibly turning off reading the application type in the headers. I feel really confident I can develop the file names correctly... so this sort of thing can mess things up and become unpredictable. Turning it on/off would be a good idea as well.","20/Sep/09 7:49 PM;arjen.poutsma;The issue you are describing initially is that you have listed the MarshallingView (with an XML content type) as default view. As such, you will end up with XML as default. It's better to have an alternative ViewResolver (such as the BeanNameViewResolver), and use that directly.

Additionally, using a /* pattern is typically not a good idea (especially when using JSPs, which you don't). Some parts of the web app do not have to be served by the DispatcherServlet (such as gifs, and other resources).

Finally, I will add a flag to disable reading the accept headers, as you suggest in your last comment.","20/Sep/09 11:56 PM;egervari;Hi Arien, Thanks for your response. I tried to respond early, but then the status was closed. I am glad you have reopened it.

I wanted to say that I misunderstood what defaultViews did - I thought that this view resolver would only use those views if xml or json was requested. I did not think it would default to them.

Even if that is the case... there is no way to know if xml or json is the prefered view, unless it just selects the first one in the last. And then if it does that... then why bother having a list in the first place?

And if the default views is only to select a default... then why does .xml and .json actually work? It kind of behaves like my assumption on how it worked.

Basically, I think the easiest way to get this to work as expected is by changing a couple of things

1) Make those json/xml views and turn them into view resolvers. As it stands, I don't know how to make those into view resolvers; or

2) Make default views only work for their respective content types. I'm actually thinking of a structure that is a bit different, and I think it makes sense. 

{code:xml}
<property name=""mediaTypes"">
	<list>
		<bean p:mediaType=""application/xml"" p:extension=""xml"" class=""MediaType"">
			<property name=""defaultView"">
				<bean class=""org.springframework.web.servlet.view.xml.MarshallingView""> 
					<property name=""marshaller""> 
						<bean class=""org.springframework.oxm.xstream.XStreamMarshaller""> 
							<property name=""autodetectAnnotations"" value=""true""/> 
						</bean> 
					</property> 
				</bean> 
			</property>
		</bean>
		<bean p:mediaType=""application/json"" p:extension=""json"" class=""MediaType"">
			<property name=""defaultView"">
				<bean class=""org.springframework.web.servlet.view.json.MappingJacksonJsonView""/> 
			</property>
		</bean>
		<bean p:mediaType=""text/html"" p:extension=""ftl"" class=""MediaType"" />
	</list>
</property>
<property name=""defaultRestMediaType"" value=""text/html"" />
{code}

It's just an idea. It's different than how yours works now, but I think it's more intuitive. I dunno - this is how I thought about the problem, and this is what I wanted to express to spring.

I'm also aware that /* is a bad ;) Like I said, I narrowed it down to a subset. This was my guess since documentation is a bit brittle right now, and unfortunately, blogs and ""advice"" on the net actually says to do this. Other blogs giving advice say /rest/*, but I think that's just as bad. The last thing I want is /myproject/rest/login.ftl

Thanks so much for the help and for entertaining my ideas!

Ken","21/Sep/09 12:03 AM;arjen.poutsma;Those default views are considered for each request, even when no view resolver resolves them. They are considered as candidates, and they still need to match the media type of the request (be it through file extension, parameter, or accept header).","21/Sep/09 12:09 AM;egervari;Well, that's behaviour I don't really want. I know that I am not the only one having problems wrapping my head around this. I've googled this a lot and read many spring posts before I posted a JIRA request and lots of people are having problems with this. 

For example, I read about some browsers (I think it was firefox) having different priorities for xml and html content types than other browsers, so the result is unpredictable. This is very, very bad, and is a good reason to allow developers to turn it off.

I guess *I* want to be in control as to what happens... not the browser. I want my application to server what I tell it to, and there isn't enough options (at least I don't know of any) in this new view resolver to dictate what I want it to do.

What I want to do is simple... simple enough that I think most people using your framework will want to do it too.

I want to have urls like 
{quote}
/userAccount/list
{quote}

go to freemarker. I also want

{quote}
/userAccount/lists.ftl
{quote}

to go to freemarker.

And if I allow it to, I want 
{quote}
/userAccount/list.xml
/userAccount/list.json
{quote}

to work as well. It's really a very, very simple idea ;) And as a consequence, it should be simple to set this up ;)","21/Sep/09 1:01 AM;arjen.poutsma;As stated before, I am adding a property to disable inspection of the Accept header, and also allow for a default content-type, that will be used when the other mechanisms (extension, parameter, accept header) fail.

In other words: don't worry, I am giving you what you want.","21/Sep/09 1:16 AM;egervari;Woo hoo! 

Thanks Arjen Poutsma! ;)",21/Sep/09 1:27 AM;arjen.poutsma;Done. Added ignoreAcceptHeader and defaultContentType properties.,21/Sep/09 1:33 AM;egervari;Yay! You rock Arjen! That's perfect! I can't wait to try it out when it becomes available.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10798|https://github.com/spring-projects/spring-framework/issues/10798]. ,,,,,,,,,,
MVC Annotation Inheritance,SPR-6093,27911,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,washley,washley,09/Sep/09 5:23 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,24/Sep/09 7:46 PM,3.0 M4,,,,,,3.0 RC1,,,Web,,,,,1,,"I currently run a patched M4 build to work around problems with @ExceptionHandler methods (and @ResponseStatus on them) not functioning with overridden methods (in my case it's due to @Transactional CGlib proxies). While patching these issues, I also changed handling of some other annotations which were being queried using Method.getAnnotation/Method.isAnnotationPresent as opposed to AnnotationUtils.findAnnotation.

I have attached my patch as a starting point. I believe I found all instances where AnnotationUtils.findAnnotation was not being used and fixed them. However, I only updated the tests for AnnotationMethodHandlerExceptionResolver. I did not feel confident with the amount of time I had to update the tests for AnnotationMethodHandlerAdapter.

I think these changes are in line with a recent checkin (revision 1852) related to inheritance of JMX annotations (SPR-3635 SPR-5039 and SPR-5813).

",,;24/Sep/09 7:46 PM;arjen.poutsma;2460,,,,,,,,,,,,,,,0,2460,,,0,2460,,,,,,,,,,,,,,,09/Sep/09 5:24 AM;washley;mvc-annotation-inheritance.patch;https://jira.spring.io/secure/attachment/15703/mvc-annotation-inheritance.patch,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:45.33,15960,true,issuemaster(issuemaster),,,,0|i016rj:,6973,7685,,,,,09/Sep/09 5:24 AM;washley;Patch for AnnotationMethodHandlerAdapter (without tests) and for AnnotationMethodHandlerExceptionResolver (with tests).,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10761|https://github.com/spring-projects/spring-framework/issues/10761]. ,,,,,,,,,,,,,,,,,,,,,
Add support for arrays in EL Selections and Projections,SPR-6051,27764,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,28/Aug/09 8:20 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,28/Oct/09 8:39 AM,3.0 M4,,,,,,3.0 RC2,,,,,,,,0,,Arrays of Object types and primitives should be supported.,,;28/Oct/09 1:44 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:43.941,15976,true,issuemaster(issuemaster),,,,0|i03rfz:,21988,18457,,,,,28/Oct/09 1:45 AM;mark.fisher;Implemented the functionality. Now awaiting a review with Andy.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10720|https://github.com/spring-projects/spring-framework/issues/10720]. ,,,,,,,,,,,,,,,,,,,,,
Ability to configure a XStream subclass on XStreamMarshaller,SPR-6037,27712,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,spring_user,spring_user,24/Aug/09 9:33 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,25/Aug/09 8:37 PM,3.0 M4,,,,,,3.0 RC1,,,OXM,,,,,0,,"This is about XStreamMarshaller.

http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/oxm/xstream/XStreamMarshaller.html

XStream allows you to customize XStream by specifying a MapperWrapper like so -

    class MyXStream extends XStream {

        @Override
        protected MapperWrapper wrapMapper(MapperWrapper next) {
            // TODO Auto-generated method stub
            return new MyClassMapper(next);
        }

    }

But Spring 3.x XStreamMarshaller instantiates a XStream instance by default.
So I'm not sure how we can supply our MapperWrapper .

I was wondering if Spring 3.x can provide a hook method that allows one to return their own custom XStream instance.
Or an option to specify our XStream subclass class. (XStreamMarsheller.setXStreamClass(Class xstreamClass);
You can probably use XStream.class by default.
I guess you guys know best how to achieve this.

I see that a method

protected void    customizeXStream(com.thoughtworks.xstream.XStream xstream)

exists on XStreamMarshaller. But what I was looking for is a hook that allows us to specify our own XStream custom subclass.

Since Spring 3.x is not final yet, I was wondering if this hook can be added. 

thanks! ",All platforms.,;25/Aug/09 8:36 PM;arjen.poutsma;180,,,,,,,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-08-25 20:37:23.882,15987,true,issuemaster(issuemaster),,,,0|i03r4v:,21938,18407,,,,,"25/Aug/09 8:37 PM;arjen.poutsma;I've made the getXstream method non-final, so that you can override that and return your own custom XStream instance.","02/Jan/10 6:35 AM;erezmazor;Since the [proposed|http://svn.codehaus.org/xstream/trunk/xstream/src/test/com/thoughtworks/acceptance/CustomMapperTest.java] XStream implementation for Mapperwrapper is to extend XStream overriding the wrapMapper method) to implement the solution above you'd have to extend XStreamMarshaller and keep another instance of XStream in the extending class (overriding the getXStream method to supply the second instance). 

This will in effect cause two instances of XStream to be created. Why not move the XStream private member instantiation to an overridable method *createXStream*

{code}
private final XStream xstream = createXStream();

protected XStream createXStream() {
	return new XStream();
}
{code}

This would allow extending the marshaller and control of the XStream instantiation. This [blog|http://techo-ecco.com/blog/2009/12/26/xstream-spring-ws-oxm-and-generics/] shows an alternate method to control XStream mapping of specific classes with spring but it would be nice to be able to use XStream's global mapping intervention feature.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10706|https://github.com/spring-projects/spring-framework/issues/10706]. ,,,,,,,,,,,,,,,,,,,,
Allow for using MultiValueMap in GET request for mapping multiple request params,SPR-6021,27640,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,grzegorzborkowski,grzegorzborkowski,17/Aug/09 11:50 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,22/Mar/10 9:52 PM,3.0 M3,,,,,,3.0.2,,,Web,,,,,0,,"If you send GET request with multiple params (and changing number thereof), instead of writing method like this:
{code}
method(@RequestParam String param1, @RequestParam String param2, @RequestParam String param3, @RequestParam String param4, ...)
{code}
it would be simpler to use MutliValueMap for this purpose:
{code}
method(@RequestParam MutliValueMap params)
{code}
(or create new annotation @RequestParams for this purpose)",,;22/Mar/10 2:31 AM;arjen.poutsma;1020,;22/Mar/10 9:50 PM;arjen.poutsma;2940,,,,,,,,,,,,,,0,3960,,,0,3960,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-10-28 23:19:29.091,15996,true,issuemaster(issuemaster),,,,0|i0165j:,6874,7611,,,,,"28/Oct/09 11:19 PM;arjen.poutsma;Done. Supports both Map<String,String> and MultiValueMap<String,String>.","19/Mar/10 6:51 AM;sganesh;This fix has introduced another issue. I'm not able to bind a param to a custom map using CustomMapEditor. It always returns either a MutliValueMap or a Map.

The feature requested for is support for a MultiValueMap but at the same time it should allow customization of a Map as well.

Please see below for the suggested fix instead.

{code}
private Object resolveRequestParam(String paramName, boolean required, String defaultValue,
			MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall)
			throws Exception {

		Class<?> paramType = methodParam.getParameterType();
	/*	if (Map.class.isAssignableFrom(paramType)) { */
        // Instead of the checking if its assignable to a map, we can check for a MultiValueMap 
                if (MultiValueMap.class.isAssignableFrom(paramType)) {
			return resolveRequestParamMap((Class<? extends Map>) paramType, webRequest);
		}

{code}","22/Mar/10 2:33 AM;arjen.poutsma;Indeed, the cutomeditors are overridden in this case. I've fixed it by only allowing the HttpHeaders type to be injected, thus dropping support for Map and MultiValueMap. Since HttpHeaders is a 'well-known' type, it no longer needs a @RequestParam annotation.","22/Mar/10 2:44 AM;grzegorzborkowski;Arjen, what do you mean by ""dropping support for MultiValueMap""? We use it in many places, so after upgrading to 3.0.2 our code will blow up?
Request params and request headers are different things, so using HttpHeaders for injecting request params is sementically incorrect.","22/Mar/10 3:18 AM;arjen.poutsma;Gregorz, 

You are right, I made a mistake. I will revert these changes and find another way to solve the issue that Ganesh reported.","22/Mar/10 9:54 PM;arjen.poutsma;My second try at fixing this: we will only do our special Map conversion if the @RequestParam contains no parameter name. So if you want to bind to a specific parameter with your own Map editor, you will have to use something like {{@RequestParam(""map"") Map map}}. This makes sense, because the special Map conversion binds to all request parameters, not just a single one.",22/Mar/10 10:46 PM;sganesh;Sounds perfect.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10690|https://github.com/spring-projects/spring-framework/issues/10690]. ,,,,,,,,,,,,,,,
"@ExceptionHandler methods are still expected to return a ModelAndView, even when consuming a ServletResponse/OutputStream/Writer",SPR-6009,27614,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,washley,washley,14/Aug/09 6:53 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,18/Aug/09 10:03 PM,3.0 M3,,,,,,3.0 RC1,,,Web,,,,,0,,"@RequestMapping handlers are considered to have written the response themselves if they take a ServletResponse/OutputStream/Writer argument. This isn't the case with @ExceptionHandler methods.

Controller:
{noformat}
package com.test;

import java.io.PrintWriter;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class Test
{
	@ExceptionHandler
	public void exception( Throwable t, PrintWriter out )
	{
		out.println( ""Oops"" );
//		out.close();
	}
	
	@RequestMapping( ""/busted"" )
	public void get( PrintWriter out )
	{
		throw new RuntimeException( ""foo"" );
	}
	
	@RequestMapping( ""/works"" )
	public void works( PrintWriter out )
	{
		out.println( ""Works!"" );
	}
}
{noformat}


Works correctly with a @RequestMapping
{noformat}
$ curl -i ""http://localhost/test/works""
HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Length: 8
Date: Fri, 14 Aug 2009 19:51:11 GMT

Works!
{noformat}

But does not with an @ExceptionHandler
{noformat}
$ curl -i ""http://localhost/test/busted""
HTTP/1.1 500 Internal Server Error
Server: Apache-Coyote/1.1
Content-Type: text/html;charset=utf-8
Content-Length: 2940
Date: Fri, 14 Aug 2009 19:52:03 GMT
Connection: close

<html><head><title>Apache Tomcat/6.0.18 - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 500 - </h1><HR size=""1"" noshade=""noshade""><p><b>type</b> Exception report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The server encountered an internal error () that prevented it from fulfilling this request.</u></p><p><b>exception</b> <pre>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.RuntimeException: foo
        org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:625)
        org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:525)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
</pre></p><p><b>root cause</b> <pre>java.lang.RuntimeException: foo
        com.test.Test.get(Test.java:22)
        sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        java.lang.reflect.Method.invoke(Method.java:597)
        org.springframework.web.bind.annotation.support.HandlerMethodInvoker.doInvokeMethod(HandlerMethodInvoker.java:626)
        org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:150)
        org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:354)
        org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:342)
        org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:763)
        org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:709)
        org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:613)
        org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:525)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
</pre></p><p><b>note</b> <u>The full stack trace of the root cause is available in the Apache Tomcat/6.0.18 logs.</u></p><HR size=""1"" noshade=""noshade""><h3>Apache Tomcat/6.0.18</h3></body></html>
{noformat}


Note: If you uncomment the out.close() on the exception handler, the correct response is written only because the container is no longer able to reset the response and do whatever it normally does for uncaught exceptions (The exception is still thrown in the same manner and logged by the container).

",,;18/Aug/09 10:03 PM;arjen.poutsma;840,,,,,,,,,,,,,,,0,840,,,0,840,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:42.447,4192,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qnj:,4363,5661,,,,,"14/Aug/09 6:56 AM;washley;That title is not really correct.

It's not that a @ExceptionHandler method is expected to return a ModelAndView, it is just not assumed that it has written a response.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10677|https://github.com/spring-projects/spring-framework/issues/10677]. ,,,,,,,,,,,,,,,,,,,,,
@ResponseStatus on @ExceptionHandler method is ignored,SPR-6008,27613,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,washley,washley,14/Aug/09 6:42 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,18/Aug/09 1:37 AM,3.0 M3,,,,,,3.0 RC1,,,Web,,,,,0,,"@ResponseStatus annotations have no effect when used on @ExceptionHandler methods

Controller:
{code}
package com.test;

import java.io.PrintWriter;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class Test
{
	@ExceptionHandler
	@ResponseStatus( value=HttpStatus.NOT_ACCEPTABLE )
	public ModelAndView exception( Throwable t, PrintWriter out )
	{
		out.println( ""Should be a 406"" );
		return new ModelAndView();
	}
	
	@RequestMapping( ""/busted"" )
	public void get( PrintWriter out )
	{
		throw new RuntimeException( ""foo"" );
	}
	
	@RequestMapping( ""/works"" )
	@ResponseStatus( value=HttpStatus.ACCEPTED )
	public void works( PrintWriter out )
	{
		out.println( ""Should be a 202"" );
	}
}
{code}

Note: I am returning an empty ModelAndView to work around another issue that I will open next.

Everything is fine on the @RequestMapping
{code}
$ curl -i ""http://localhost/test/works""
HTTP/1.1 202 Accepted
Server: Apache-Coyote/1.1
Content-Length: 17
Date: Fri, 14 Aug 2009 19:27:11 GMT

Should be a 202
{code}

But not so on the @ExceptionHandler
{code}
$ curl -i ""http://localhost/test/busted""
HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Length: 17
Date: Fri, 14 Aug 2009 19:27:16 GMT

Should be a 406
{code}
",,;18/Aug/09 1:37 AM;arjen.poutsma;780,,,,,,,,,,,,,,,0,780,,,0,780,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-08-18 01:24:33.961,4193,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qnr:,4364,5662,,,,,"14/Aug/09 6:43 AM;washley;Sorry, should have used the noformat macro

{noformat}
package com.test;

import java.io.PrintWriter;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class Test
{
	@ExceptionHandler
	@ResponseStatus( value=HttpStatus.NOT_ACCEPTABLE )
	public ModelAndView exception( Throwable t, PrintWriter out )
	{
		out.println( ""Should be a 406"" );
		return new ModelAndView();
	}
	
	@RequestMapping( ""/busted"" )
	public void get( PrintWriter out )
	{
		throw new RuntimeException( ""foo"" );
	}
	
	@RequestMapping( ""/works"" )
	@ResponseStatus( value=HttpStatus.ACCEPTED )
	public void works( PrintWriter out )
	{
		out.println( ""Should be a 202"" );
	}
}
{noformat}",18/Aug/09 1:24 AM;arjen.poutsma;Edited to add code tags.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10676|https://github.com/spring-projects/spring-framework/issues/10676]. ,,,,,,,,,,,,,,,,,,,,
org.springframework.beans.propertyeditors.URIEditor does double escaping for % signes for URIs that contain a schema,SPR-6005,27608,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,nd,nd,13/Aug/09 7:14 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,08/Nov/09 7:15 PM,3.0 M3,,,,,,3.0 RC2,,,Core,,,,,0,,"org.springframework.beans.propertyeditors.URIEditor does a double escaping of URLs with a schema that use % escaping.

Test:

System.out.println(new SimpleTypeConverter().convertIfNecessary(""http://de.wikipedia.org/wiki/%C3%96"", URI.class));

prints

http://de.wikipedia.org/wiki/%25C3%2596


I ran into this behavior when I wanted to make use of URIEditor's feature that it can resolve classpath: URLs. If the classpath contains spaces or other characters that need to be escaped in URLs, then the resulting URI contains double escaped % signs.

My current workaround is to extend URIEditor and override createURI to always return new URI(value). when registered as custom editor for URIs, this PropertyEditor returns the proper URI.",,;08/Nov/09 7:15 PM;arjen.poutsma;1200,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,05/Oct/09 7:57 AM;edisonf;SPR-6005-URIEditor-patch.txt;https://jira.spring.io/secure/attachment/15769/SPR-6005-URIEditor-patch.txt,,,,,,,,,,,9936000,,,,,2009-10-05 07:57:16.137,4194,true,issuemaster(issuemaster),,Standalone,,0|i00qnz:,4365,5663,,,,Sun JVM,"05/Oct/09 7:57 AM;edisonf;Currently the URIEditor relies on the java.net.URI, specifically using the following constructor for URI prefixed with a schema:

URI(String scheme, String ssp, String fragment) 

From the Java API:

{panel:title=java.net.URI#(String scheme, String ssp, String fragment) | borderStyle=dashed| borderColor=#ccc| titleBGColor=#AAAAAA}

This constructor first builds a URI in string form using the given components as follows: 

   1. Initially, the result string is empty.
   2. If a scheme is given then it is appended to the result, followed by a colon character (':').
   3. If a scheme-specific part is given then it is appended. *Any character that is not a legal URI character is quoted*.
   4. Finally, if a fragment is given then a hash character ('#') is appended to the string, followed by the fragment. Any character that is not a legal URI character is quoted.
{panel} 

By using this constructor the URIEditor assumes that the provided URI might contain illegal URI characters, and always applies URI character encoding.

Alternatively, the editor could accommodate for already encoded URIs. This could be accomplished by  initially searching for escaped characters in the source URI, and if present then simply call the static create(String str)  method.

I've attached a patch to the URIEditor and URIEditorTests","08/Nov/09 7:03 PM;arjen.poutsma;Detecting whether a given URI is encoded or not is a tricky path. Basically, there is no way to know whether a % followed by two hexadecimals signifies an escape sequence, or is just a % with two characters behind it.

For instance, the String [http://example.com/foo%20bar] could either mean [http://example.com/foo bar], or [http://example.com/foo%2520bar]; there is no way to tell.

So rather than detecting encoding, I'm going to add a boolean property to the URLEditor that indicates whether the editor should encode the given string or not.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10673|https://github.com/spring-projects/spring-framework/issues/10673]. ,,,,,,,,,,,,,,,,,,,,
Improve CastorMarshaller support for loading class descriptors,SPR-6003,27594,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,sslavic,sslavic,12/Aug/09 2:49 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,26/Aug/09 8:06 PM,2.5.6,3.0 M3,,,,,3.0 RC1,,,OXM,,,,,1,,"Spring framework's CastorMarshaller currently supports specifying class descriptors only via mapping XML files or by defining a single class. Please extend support for specifying multiple classes via packages (string array) and possibly via classes (class array) too.

OXM is regularly used in context of developing web services. With contract first approach, and Castor's (directly or via castor-maven-plugin) support for generating DTO classes and their descriptor classes from XSD's, using mapping xml files is no longer needed. In fact it is advised to use descriptor classes instead of mapping XML because of value added through better support for validation, etc. It would be good if Spring OXM would come bundled with this workflow supported.

See following related castor mailing list discussion for more details: http://www.mail-archive.com/user@castor.codehaus.org/msg07593.html",Castor 1.3,;26/Aug/09 8:05 PM;arjen.poutsma;12360,,,,,,,,,,,,,,,0,12360,,,0,12360,,,,,,,,,,,,,,,18/Aug/09 3:06 AM;sslavic;org.springframework.oxm-EnhancedCastorSupport.patch;https://jira.spring.io/secure/attachment/15621/org.springframework.oxm-EnhancedCastorSupport.patch,,,,,,,,,,,9936000,,,,,2009-08-12 18:36:18.431,16006,true,issuemaster(issuemaster),,,,0|i03rlz:,22015,18484,,,,,"12/Aug/09 6:36 PM;wguttmn;Let me just add to this a bit:

a) With Castor XML, one is able to generate domain classes (plus descriptor classes plus .castor.cdr) files from a given set of XML schemas.
b) Once you have done so, and you have included all of the classes/files mentioned above on your class path, ...
c) One can create an instance of {{XMLContext}}, and instantiate a Castor {{(Un)Marshaller}} instance as follows

{code:java}
XMLContext context = new XMLContext();
Unmarshaller unmarshaller = context.createUnmarshaller();
{code}

By definition, as long as requirement b) is met, you will be able to unmarshal to any of the domain classes as generated in step a) issuing 

{code:java}
SomeClass someClass = (SomeClass) unmarshaller.unmarshal(...);
{code}

I don't see a reason why this should not be supported.","17/Aug/09 11:10 PM;sslavic;Wish Spring-OXM dependency to Castor 1.2 (org.codehause.castor:castor) would be upgraded to Castor 1.3 (org.codehaus.castor:castor-xml) as well, but I guess that's not likely since [this|http://jira.codehaus.org/browse/CASTOR-2747] Castor issue hasn't been resolved yet, unless SpringSource creates and adds Castor 1.3 bundle to [SpringSource EBR|http://www.springsource.com/repository/app/search?query=castor&includeLibraries=true&_includeLibraries=on&includeBundles=true&_includeBundles=on&version=].","18/Aug/09 3:06 AM;sslavic;Attaching ""org.springframework.oxm-EnhancedCastorSupport.patch"" created against Spring-OXM v3.0.0.BUILD-SNAPSHOT (r1733). 

This patch enhances support for configuring multiple Castor descriptor classes to CastorMarshaller using:

-Class array (replaces previous single Class option; users just need to rename property name in their Spring context's, from targetClass to targetClasses)
-package names array (newly added; package names should be specified as CSV strings in Spring context configuration)


Previously one could either specify single class or mapping file(s). Proposed solution allows configuring CastorMarshaller using all 3 means together or in any combination.


Existing tests have been adjusted. Patch doesn't contain additional test case for new package names array configuration option.",25/Aug/09 9:01 PM;arjen.poutsma;Deferring until we Castor 1.3 is added to the EBR.,"25/Aug/09 9:50 PM;wguttmn;Arjen, there's absolutely no requirement to depend on castor 1.3 for this. As mentioned above, it would be a nice to have.","25/Aug/09 11:00 PM;arjen.poutsma;Oops, guess I misunderstood. I've put in a request to put in 1.3 in the EBR anyway.

Rerescheduling for 3.0 again :).","25/Aug/09 11:17 PM;wguttmn;Thanks, Arjen. Just one more thing: please note that Stevo's patch addresses some of the issues mentioned. It definitely does not the address the fact that when you start with source generation using castor XML, one does *not* need to register any classes with Castor XML for (un)marshalling to get things working.","25/Aug/09 11:45 PM;arjen.poutsma;I think it actually does address that issue. If no mapping location, target classes or packages are defined, a default empty XMLContext is created. Or am I missing something again?

Stevo, can you comment on this?","26/Aug/09 12:00 AM;sslavic;Yes, with addition: if one wants control over which of multiple classes, or packages should be registered with a given Castor's XMLContext , there was only mapping.xml option; while with the patch one can explicitly specify classes/packages.","26/Aug/09 8:06 PM;arjen.poutsma;Patch applied, thanks!

The only major change I made was to leave the targetClass property in place, for backwards compat reasons.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10671|https://github.com/spring-projects/spring-framework/issues/10671]. ,,,,,,,,,,,,
Broken ref to non-existing REST chapter in what's new section in reference guide,SPR-5978,27525,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,jkuipers,jkuipers,03/Aug/09 7:44 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,04/Aug/09 10:54 PM,3.0 M4,,,,,,3.0 M4,,,[Documentation],,,,,0,,"I built the reference docs from SVN, and noticed that section 2.5.5.1 still links to the REST chapter that seems to have been removed. This should be fixed.",,;04/Aug/09 10:54 PM;arjen.poutsma;1260,,,,,,,,,,,,,,,0,1260,,,0,1260,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:41.482,4203,true,issuemaster(issuemaster),,,,0|i00qpz:,4374,5672,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10646|https://github.com/spring-projects/spring-framework/issues/10646]. ,,,,,,,,,,,,,,,,,,,,,,
BufferedImageHttpMessageConverter doesn't work on Google AppEngine,SPR-5975,27517,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,ndpar,ndpar,02/Aug/09 5:20 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,03/Aug/09 7:07 PM,3.0 M3,,,,,,3.0 M4,,,Web,,,,,0,,"After upgrading Spring version to 3.0.0, application deployed on GAE fails with exception:

{code}
Caused by: java.lang.NoClassDefFoundError: javax.imageio.ImageIO is a restricted class. Please see the Google App Engine developer's guide for more details.
	at com.google.apphosting.runtime.security.shared.stub.javax.imageio.ImageIO.<clinit>(ImageIO.java)
	at org.springframework.http.converter.BufferedImageHttpMessageConverter.<init>(BufferedImageHttpMessageConverter.java:70)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.<init>(AnnotationMethodHandlerAdapter.java:166)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.google.apphosting.runtime.security.shared.intercept.java.lang.reflect.Constructor_.newInstance(Constructor_.java:60)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:127)
{code}

See also: http://code.google.com/p/googleappengine/issues/detail?id=1268",Google AppEngine,;03/Aug/09 7:07 PM;arjen.poutsma;180,,,,,,,,,,,,,,0,0,180,"9,223,372,036,854,775,807%",0,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-08-02 23:38:57.346,16014,true,issuemaster(issuemaster),,,,0|i016xr:,7001,7707,,,,,"02/Aug/09 11:38 PM;juergen.hoeller;Arjen, can we somehow reflectively check whether to register that default BufferedImageHttpMessageConverter there? Or do some late initializiation of those default converters?

I wonder whether a Class.forName(""javax.imageio.ImageIO"") check actually works on a GAE: Is the class present and not usable there, or not present at all - in the sense of not visible in the ClassLoader?

Juergen","03/Aug/09 12:43 AM;david_syer;Class.formName(""javax.imageio.ImageIO"") does not fail on GAE.  It returns a proxy with some other type (""com.google.apphosting.runtime.security.shared.stub.javax.imageio.ImageIO"")  which then barfs if you try and use it.","03/Aug/09 1:37 AM;arjen.poutsma;Thanks for investigating, Dave. I guess I will just remove the BufferedImageHttpMessageConverter as a default, so that it has to be enabled explicitly.",03/Aug/09 7:07 PM;arjen.poutsma;BufferedImageHttpMessageConverter removed as default.,03/Aug/09 11:04 PM;ndpar;Issue resolved. Thanks Arjen.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10643|https://github.com/spring-projects/spring-framework/issues/10643]. ,,,,,,,,,,,,,,,,,
"Add additional ""query builder"" features to UriTemplate",SPR-5973,27511,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,david_syer,david_syer,31/Jul/09 8:15 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,15/Sep/11 3:31 AM,3.0 M4,,,,,,3.1 RC1,,,Core,,,,,0,,"Add additional ""query builder"" features to UriTemplate.  The UrlTag already duplicates some features of UriTemplate, and I want to get the same features in Freemarker (SPR-5937).  A good starting point would be a common place to get the parameter-appending feature that is needed in the UI.  A method like 
{code}
public URI expandAndAppend(List<ParameterValue> parameters) {
   ...
}
{code}
would work generically.  The ParameterValue is a new convenience class containing a name and value pair.  The ""append"" piece could also be separated out for use on its own, but the combined method is needed to get the feature needed in UrlTag (replace placeholders and append the query parameters that are not used in replacement).

Convenience methods that allow the user to pass in a Map<String,String> (in the case where multi-valued parameters are not needed) would also help.",,;14/Jun/11 2:05 AM;arjen.poutsma;53160,;06/Sep/11 8:45 AM;arjen.poutsma;28800,,,,,,,,,,,,,0,0,81960,"9,223,372,036,854,775,807%",0,0,81960,,,,,,,,,,,,,,,02/Aug/09 10:12 PM;david_syer;UriBuilder.java;https://jira.spring.io/secure/attachment/15582/UriBuilder.java,02/Aug/09 10:13 PM;david_syer;UriBuilderTests.java;https://jira.spring.io/secure/attachment/15583/UriBuilderTests.java,,,,,,,,,,9936000,,,,,2011-09-15 03:31:23.21,1326,true,issuemaster(issuemaster),,,,0|i00pwf:,4241,1545,,,,,02/Aug/09 10:12 PM;david_syer;Attached proposal UriBuilder.java,02/Aug/09 10:13 PM;david_syer;Attached test cases UriBuilderTests.java,"15/Sep/11 3:31 AM;arjen.poutsma;This is now complete, through the introduction of the UriComponents class and UriComponentsBuilder, which offer URI building facilities, superior encoding, and uri template expansion.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10641|https://github.com/spring-projects/spring-framework/issues/10641]. ,,,,,,,,,,,,,,,,,,,
Enable AbstractRequestLoggingFilter implementations to access the request body,SPR-5961,27468,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,jbar,jbar,28/Jul/09 5:33 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,28/Jul/09 11:50 PM,3.0 M3,,,,,,3.0 M4,,,Web,,,,,0,,See SPR-5960 - this is primarly useful for debugging POST requests with invalid RequestBody parameters. The patch is based is on [this|http://www.pascalalma.net/2007/08/24/debugging-soap-by-logging-the-incoming-httprequest/] blog post.,,;28/Jul/09 11:14 PM;arjen.poutsma;480,,,,,,,,,,,,,,,0,480,,,0,480,,,,,,,,,,,,,,,28/Jul/09 5:34 AM;jbar;patch.zip;https://jira.spring.io/secure/attachment/15569/patch.zip,,,,,,,,,,,9936000,,,,,2009-07-28 23:50:10.196,16018,true,issuemaster(issuemaster),,,,0|i016y7:,7003,7708,,,,,28/Jul/09 11:50 PM;arjen.poutsma;Done,31/Jul/09 4:02 AM;jbar;Thanks.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10629|https://github.com/spring-projects/spring-framework/issues/10629]. ,,,,,,,,,,,,,,,,,,,,
Allow SimpleMappingExceptionResolver to Resolve HTTP Status Codes,SPR-5953,27430,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,npadgett,npadgett,23/Jul/09 4:18 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,28/Jul/09 11:58 PM,,,,,,,3.0 M4,,,,,,,,1,,"It would be nice if SimpleMappingExceptionResolver had the ability to resolve HTTP status codes as well.  Currently, I have the following class:

{code:title=StatusCodeMappingExceptionResolver.java}
public class StatusCodeMappingExceptionResolver extends
        SimpleMappingExceptionResolver {
    private Map<String, Integer> statusCodeMappings;

    @Override
    protected Integer determineStatusCode(final HttpServletRequest request,
            final String viewName) {
        Integer statusCode = null;
        // Check for specific status code mappings.
        if (null != this.statusCodeMappings) {
            statusCode = this.statusCodeMappings.get(viewName);
        }
        // Return default status code else, if defined.
        if (null == statusCode) {
            statusCode = super.determineStatusCode(request, viewName);
        }
        return statusCode;
    }

    public void setStatusCodeMappings(Map<String, Integer> statusCodeMappings) {
        this.statusCodeMappings = statusCodeMappings;
    }
}
{code}",,;28/Jul/09 11:49 PM;arjen.poutsma;2040,;28/Jul/09 11:57 PM;arjen.poutsma;360,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-07-28 23:58:06.163,16021,true,issuemaster(issuemaster),,,,0|i04rmn:,27850,22729,,,,,28/Jul/09 11:58 PM;arjen.poutsma;Fixed.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10621|https://github.com/spring-projects/spring-framework/issues/10621]. ,,,,,,,,,,,,,,,,,,,,,
Slight Improvement for Main JavaDoc in RedirectView,SPR-5910,27235,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Fixed,arjen.poutsma,hooknc,hooknc,08/Jul/09 6:05 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,23/Sep/09 7:31 PM,2.5.5,,,,,,3.0 RC1,,,,,,,,0,,"http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/web/servlet/view/RedirectView.html

Currently (as of Spring Framework API 2.5) a reader of the RedirectView JavaDoc is lead to believe that ""... by default exposing all model attributes as HTTP query parameters.""

I read that to mean that all values in the passed model regardless of its object type are added as query parameters.  HOWEVER, is is not the case.  A user of the RedirectView has to also read the JavaDoc for the protected method, isEligibleProperty(String key, Object value), which states:

""...
The default implementation considers Strings and primitives as eligible, and also arrays and Collections/Iterables with corresponding elements.
...""

to figure out that no, not all attributes are added, only Strings and primitives are added as query parameters.  It might be inappropriate to force a reader to read a protected method's JavaDoc to figure out important behavior of a class.

It would be nice if the main JavaDoc of the class clearly states that NOT ALL model attributes are added as query parameters, but only model attributes that are: Strings, primitive, and primitive wrappers.

Thank you for your time.",,;23/Sep/09 7:31 PM;arjen.poutsma;240,,,,,,,,,,,,,,,0,240,,,0,240,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:39.273,16033,true,issuemaster(issuemaster),,,,0|i04rj3:,27834,22713,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10579|https://github.com/spring-projects/spring-framework/issues/10579]. ,,,,,,,,,,,,,,,,,,,,,,
RestTemplate - access to Request Headers,SPR-5866,27076,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,graham_z,graham_z,24/Jun/09 8:40 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,11/Mar/10 3:34 AM,,,,,,,3.0.2,,,Core,,,,,2,,"Hi,

When sending GET and POST requests, we are required to send a Security token in the HTTP header. Currently with RestTemplate there is no easy way to set headers on the request. 

The only way that seems possible is to provide a custom RequestCallback, in which the httpRequest object can be manipulated in doWithRequest(), making all but the execute() method unusable.

Is there a clean and easy way to set http headers on requests? (I can't think of one without some significant rewrites).

thanks,
Graham",,;11/Mar/10 3:33 AM;arjen.poutsma;1740,,,,,,,,,,,,,,,0,1740,,,0,1740,,,SPR-6969,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-06-29 20:25:30.444,16055,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i02rm7:,16183,346,,,,Sun JVM -> 1.6,"29/Jun/09 8:25 PM;arjen.poutsma;Currently there is no way to do this easily, but we could introduce an interceptor mechanism. Something similar to 

http://static.springframework.org/spring-ws/sites/1.5/apidocs/org/springframework/ws/client/support/interceptor/ClientInterceptor.html",13/Jul/09 9:41 PM;arjen.poutsma;Rescheduling to 3.1.,22/Feb/10 11:13 PM;tzolov;This is an essential feature if the RestTemplate is to be used in real production environments. ,"23/Feb/10 5:29 AM;arjen.poutsma;It's possible to add request headers with a RequestCallback using the [execute|http://static.springsource.org/spring/docs/current/api/org/springframework/web/client/RestTemplate.html#execute(java.lang.String,%20org.springframework.http.HttpMethod,%20org.springframework.web.client.RequestCallback,%20org.springframework.web.client.ResponseExtractor,%20java.lang.Object...)] method, and to use the HttpMessageConverterExtractor to resolve response extraction. Granted, it's not as easy as the other methods of the RestTemplate, but it works now, before we introduce the interceptor functionality scheduled for 3.1.","06/Mar/10 8:58 PM;tzolov;Thanks for the tip Arjen. I've put together a very simple RestTemplate extension that could help in certain scenarios that require http request header access: http://tzolov.blogspot.com/2010/03/spring-3-resttemplate-access-to-request.html 

",11/Mar/10 2:55 AM;arjen.poutsma;Rescheduling for 3.0.2,"11/Mar/10 3:45 AM;arjen.poutsma;With the introduction of HttpEntity, this turned out to be pretty easy. I've introduced an 'exchange method', with which you can do the following:

{code}
HttpHeaders requestHeaders = new HttpHeaders();
requestHeaders.set(""MyHeader"", ""MyValue"");
HttpEntity<?> requestEntity = new HttpEntity(requestHeaders);
HttpEntity<String> response = template.exchange(""http://example.com"", HttpMethod.GET, requestEntity, String.class);
System.out.println(response.getBody());
{code}

or 

{code}
HttpHeaders requestHeaders = new HttpHeaders();
requestHeaders.set(""MyHeader"", ""MyValue"");
HttpEntity<String> requestEntity = new HttpEntity<String>(helloWorld, requestHeaders);
HttpEntity<?> result = template.exchange(""http://example.com"", HttpMethod.POST, requestEntity, null);
System.out.println(result.getHeaders().getLocation());
System.out.println(result.hasBody()); // prints false, since the response body was empty
{code}

This will be in 3.0.2, please try a recent snapshot and see how you like it.","19/Aug/10 2:24 PM;dew_the_fifth;It's a shame you didn't end up implementing this using interceptors. I find the interceptors that are on WebServiceTemplate and other framework classes to be invaluable, and was disappointed to see that the RestTemplate does not have one. I tend to dislike AOP, but without interceptors I guess I'm forced to use it.

",20/Aug/10 12:49 AM;arjen.poutsma;@Duane: we might still do interceptors :).,"24/Aug/10 2:40 PM;dew_the_fifth;I so greatly desired interceptors that I have put together an implementation of RestTemplate which uses them. 

I ""borrowed"" liberally from spring-ws (Arjen specifically) in my implementation, but I had to roll my own interceptor interfaces and the message context, because of some of the differences between traditional WS and REST. I'd love to submit this back to the project, either for you to laugh at or use, but don't really know what the process for doing so would be. Please advise as to whether you think such an effort would yield anything valuable.

Thanks",25/Aug/10 1:44 AM;arjen.poutsma;@Duane: I have created [SPR-7494|https://jira.springsource.org/browse/SPR-7494] to add interceptors to the RestTemplate. You can simply comment and/or attach your code there.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10535|https://github.com/spring-projects/spring-framework/issues/10535]. ,,,,,,,,,,,
Allow for concurrent test execution in the TestContext framework,SPR-5863,27066,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,krosenvold,krosenvold,24/Jun/09 9:55 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,05/Sep/16 5:08 PM,3.0 M3,,,,,,5.0 M2,,,Test,,,,,42,concurrency,"h4. Status Quo

Newer versions of JUnit support concurrent test execution; however, the _Spring TestContext Framework_ is not designed for concurrency. 

h4. Proposed Solution

The enclosed fixes sharpen focus on concurrency (including making mutable state much more distinct from immutable state), increasing separation between data for each test method run and the class they are being run on.

The patch consists of a failing test (patch 1) and a fix (patch 2), including several new tests. If you choose to apply the patch with the failing test, you must revert this before applying the fix (failing test is contained in fix patch). The included failing test may not produce concurrency issues (fail) in all cases and on all hardware platforms. They have been known to fail consistently on 3 different machines, usually upon first run.

h5. Details of the Patch

The patch contains minor changes to the {{ContextLoader}} interface. The most significant changes have been made to the {{TestContextManager}} and {{TestContext}} classes.

Additionally upon completing the functionality, I had multiple deadlocks in the JVM when running my real test suite. I solved this by using a Java 5 {{ReentrantReadWriteLock}} in the {{RequestAttributes.getSessionMutex()}} method. It really looks to me like the creation of this mutex should be moved to one of the loader filters, since it's always created as of this patch.

Additionally, the patch contains a {{MockContextLoader}} that transfers attributes between threads. I'd really like you guys to check that code out before accepting it; there may be other smarter ways of doing this. It's only a part of the test code-base, but once it's included it sets a standard.

h4. Real-life Tests

The patch has been applied to a local version of Spring 3 that has been running stably with multi-core machines and multi-CPU servers too. We have been running a continuous build using parallel classes, methods, and a combination of both. This is a full-scale build that was adaptable to multi-threaded test execution. The application under test uses lots of web-scopes, etc.

h4. Proposed Documentation

{quote}
*Parallel Test Execution*

From version 3.0, Spring supports parallel test execution in the _Spring TestContext Framework_. Executing builds in parallel with JUnit is only supported in later versions of JUnit, and it is recommended to use at least JUnit 4.6 for this feature. Please also note that there's no guarantee your tests will run properly in parallel; a number of general concurrency issues have to be taken into account when executing tests in parallel. Your runner can usually let you choose between classes, methods, and a combination of both. Classes are usually the easiest to get working; ""a combination of both"" is the hardest. All three modes are supported.
{quote}","Ubuntu, RHEL, windows",triage and analysis of proposed patch;30/Jul/12 8:58 AM;sbrannen;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,SPR-10536,SPR-8942,SPR-7687,SPR-8857,SPR-8055,,,,04/Oct/09 7:56 PM;krosenvold;1concurrencyFix2051.patch;https://jira.spring.io/secure/attachment/15764/1concurrencyFix2051.patch,04/Oct/09 7:56 PM;krosenvold;2tests2051.patch;https://jira.spring.io/secure/attachment/15765/2tests2051.patch,17/Jun/10 9:59 PM;krosenvold;3428_SPR5863.patch;https://jira.spring.io/secure/attachment/16722/3428_SPR5863.patch,04/Oct/09 7:56 PM;krosenvold;3dirtiesContext2051.patch;https://jira.spring.io/secure/attachment/15766/3dirtiesContext2051.patch,24/Jun/09 9:57 AM;krosenvold;completeFix.patch;https://jira.spring.io/secure/attachment/15500/completeFix.patch,24/Jun/09 9:56 AM;krosenvold;springFailingTest.patch;https://jira.spring.io/secure/attachment/15499/springFailingTest.patch,,,,,,9936000,,,,,2011-12-13 01:00:40.708,16056,true,issuemaster(issuemaster),,Standalone,,0|i00i7r:,2996,602,,,,Sun JVM -> 1.5,"24/Jun/09 9:56 AM;krosenvold;This is the failing test in isolation, can be applied to trunk of spring m3",24/Jun/09 9:57 AM;krosenvold;The complete patch. Apply this to a CLEAN svn up; do not apply the failing-test  patch first. Merged well at rev 1417.,"13/Sep/09 5:55 PM;krosenvold;I have come to understand that I can split this patch in two; I can separate the concurrency issue into a separate issue, thereby reducing the overall footprint of the patch slightly. 

The concurrency issue only arises when you have concurrent construction of session scoped artifacts within the same session. In real life this is probably only an issue for quite few applications, and the chances of this occuring are slim. When running parallel tests, this happens all of the time, but can be solved by introducing a non-blocking session scope from within the MockContextLoader instead. 

Is there any chance I can make you reconsider the main concurrency fix for 3.0 if I split the patch it in two ? (I'm probably a few months late with this suggestion ;)
The patch for the main concurrency fixes would only affect spring-test.

","04/Oct/09 7:56 PM;krosenvold;Enclosed is an updated version of the concurrency patches that apply cleanly on trunk release 2051. Apply patches within the org.springframework.test module, using patch -p1

Due to the mentioned workaround for deadlock issue wrt Session object, I will be making a separate issue for this problem. 

This patch now consists of three files with ""2051"" in the name. The two first are the main fix for concurrency issues. These two first patches do not support the use of ""DirtiesContext"" in a concurrent environment. DirtiesContext is supported with the third patch, although this third patch is more of an idea and you may consider accepting this too. 

The original ""failing test"" can still be used as evidence.

The patch is being maintained at http://github.com/krosenvold/spring-test

","02/Mar/10 12:43 AM;krosenvold;Just for the record, all the relevant bits and pieces necessary to support this patch are now released (aspectj 1.6.6), junit 4.8.1 (works from 4.7 but important concurrency bugs are fixed in 4.8.1). maven surefire2.5 support running with concurrent junit. This patch has also been running stably for quite some time in a number of projects.",17/Jun/10 9:59 PM;krosenvold;3428* patch revised for 3.0.3 trunk at r3428,"13/Dec/11 1:00 AM;fprumbau;So is there any issue why it isn't fixed until 3.2m1? 
With 3.1.RC2 I still seem to have concurrency issues and running
the Spring tests in parallel mode seems still to be no option. Is
this correct or is this issues description outdated (since it has not
been revised for quite a long time now)?","29/Mar/12 12:20 AM;krosenvold;I have not bothered resubmitting this patch based on trunk since it's been more or less permanently on the ""move forward"" list in the issue tracker. This is probably because the patch contains an interface change.

I think it should be possible to re-work the patch to not contain any breaking changes, especially if this increases the likelihood of getting the patch accepted. The patch is certainly quite stale as applied on current trunk. Let me know if reworking the patch will increase the probability of this getting applied to >0, which seems to be its current value.","28/May/12 12:19 PM;sbrannen;Hi guys,

Due to the increasing popularity of this issue, I'm assigning the fix version to 3.2 M2, and I'll take a look at in the M2 time frame.

Regards,

Sam","07/Feb/13 2:31 AM;juergen.hoeller;Kristian,

We are currently working on some remaining TestContext framework enhancements for 3.2.2, and have been considering this request as well. We do realize the importance of parallel test execution and will definitely address this over the next few months. Note that we got 3.2.2 upcoming in early March as well as 4.0 M1 in late April.

It would be great if you could submit a pull request on GitHub since that's much easier to consume for us these days. We might not be able to accept the full set of changes for 3.2.2 due to backwards compatibility issues but are definitely up for doing a thorough revision for the 4.0 line then - even for 4.0 M1 in April already.

Juergen","28/Mar/13 4:36 PM;ibrandt;The http://github.com/krosenvold/spring-test link above is broken.  I'm guessing that https://github.com/krosenvold/org.springframework.test is its replacement?  There is no pull request from that repo however.

Would this fix include context caching across parallel tests?  If I recall correctly when I last tried to use JUnit 4.8 parallel testing with Spring 3.0.7 integration tests I ran into two issues: deadlocks as mentioned above, and identical context locations not being reused across tests.  No inheritance or profiles were being used.  The tests were run via the Maven Failsafe plugin with the default fork mode of ""once"".",14/Apr/16 12:25 PM;elennaro;Is there any known easy workaround to be able to run parallel test for today?,22/Jun/16 1:00 PM;paranoiabla;41 votes and still no workaround... Sigh...,"03/Sep/16 2:34 PM;sbrannen;FYI: initial work on this issue has been pushed to {{master}} for inclusion in Spring Framework 5.0.

The following commits aim to address concurrency issues within the {{TestContextManager}} and {{DefaultTestContext}}.

- https://github.com/spring-projects/spring-framework/commit/ec7aefa8589d2baf0aea28eac6fd8baae1167de6
- https://github.com/spring-projects/spring-framework/commit/a10a8e56df80e6855d104d07010e6f1445100a61

Note that concurrency issues with regard to the loading and eviction of {{ApplicationContexts}} have not yet beed addressed. However, having said that, it may be the case that recent changes to the context caching support in {{spring-test}} combined with the aforementioned improvements to {{TestContextManager}} and {{DefaultTestContext}} may already get you quite far in terms of being able to execute tests in parallel.

So, with that in mind, we would be grateful if people could start trying out parallel test execution in Spring Framework 5.0 snapshots.

Cheers,

Sam","03/Sep/16 4:15 PM;sbrannen;h4. Update

I have copied over [~krosenvold]'s failing tests from https://github.com/krosenvold/org.springframework.test and applied that to {{master}} (i.e., Spring Framework 5.0).

This work can be seen in my personal branch here: https://github.com/sbrannen/spring-framework/commits/SPR-5863-krosenvold-github

His custom {{ContextCleaner}} no longer works, so I simply replaced that with calls to {{ContextCacheTestUtils.resetContextCache()}}. If I recall correctly, that is all that's required to get the code compiling.

I then replaced:

{code:java}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(
    locations = ""model/applicationContext-concurrency-simple.xml"",
    loader = MockContextLoader.class)
public class SpringJUnit4ClassRunnerEnvironmentAssumptionsTests { /* ... */ }
{code}

... with:

{code:java}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(""model/applicationContext-concurrency-simple.xml"")
@WebAppConfiguration
public class SpringJUnit4ClassRunnerEnvironmentAssumptionsTests { /* ... */ }
{code}

Note that his custom {{MockContextLoader}} was replaced by the now built-in support for {{@WebAppConfiguration}}.

With those minor changes, all of his concurrency tests now pass on {{master}}.

Soooooo, it's looking like we are in much better shape now in terms of parallel test execution! (y)

But the Spring Team would greatly appreciate it if people in the community could report back on their experiences with recent Spring Framework 5.0 snapshots! ;)

Cheers,

Sam
","03/Sep/16 4:19 PM;sbrannen;[~krosenvold], since I unfortunately cannot merge your work without it going through the official channels (i.e., Pivotal CLA, etc.)...

Would you mind submitting a pull request on GitHub that only includes the failing tests (similar to what I've done in my {{SPR\-5863-krosenvold-github}} branch)?

Thanks,

Sam","05/Sep/16 10:35 AM;sbrannen;[~krosenvold], please disregard my request for you to create a PR. I have come up with an alternative means to complete our test suite coverage of concurrent test execution, and I will push that to {{master}} in the near future.
","05/Sep/16 3:32 PM;sbrannen;For those interested in the details, the following additional refinements have been pushed to {{master}}:

- https://github.com/spring-projects/spring-framework/commit/fbfad8695ecc9262f23fd31b0b425eca38b58d01
- https://github.com/spring-projects/spring-framework/commit/e822e4cbe87b09b901eb2363bc884a635a96a01e

Furthermore, [2699504|https://github.com/spring-projects/spring-framework/commit/2699504cb8150d7be3e3a4033215acb8fbf1e851] replaces the need for the tests originally implemented by [~krosenvold].","05/Sep/16 5:00 PM;sbrannen;A new ""Parallel test execution"" section has been added to the ""Testing"" chapter of the reference manual in [commit 3e96cab|https://github.com/spring-projects/spring-framework/commit/3e96cab0bb9e2861f9555f81117eb46098674f8e].","05/Sep/16 5:08 PM;sbrannen;Resolving this issue as _complete_.

For a list of general guidelines and _unsupported_ use cases, please consult the new _Parallel test execution_ section in the _Testing_ chapter of the reference manual.

Please give Spring Framework 5.0 snapshots a try and let us know how parallel test execution works for you.

Thanks!",25/Oct/16 3:55 PM;ahoehma;This fix was not merged back to 3.2.17.RELEASE right?,"25/Oct/16 4:08 PM;juergen.hoeller;This isn't even in a 4.x release... It's 5.0 only, available as of 5.0 M2.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10532|https://github.com/spring-projects/spring-framework/issues/10532]. 
NullPointerException when using @CookieValue annotation,SPR-5802,26808,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,littleli,littleli,04/Jun/09 4:13 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,29/Nov/09 8:16 PM,3.0 M3,,,,,,3.0 RC3,,,Web,,,,,0,,"When using annotated controller such as:

{code}
@RequestMapping(value = ""/auth"", method = RequestMethod.POST)
public String authentication(@RequestParam(""username"") String username, @RequestParam(""password"") String password, @CookieValue(value=""X-AUTH"") String tokenString) {
...
}
{code}

and there is no cookie (X-AUTH) sent by client side browser, than invocation failes while mapping cookie value with NullPointerException. Here goes stacktrace:
{noformat}
java.lang.NullPointerException at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.resolveCookieValue(AnnotationMethodHandlerAdapter.java:629)
        at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveCookieValue(HandlerMethodInvoker.java:482)
        at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveHandlerArguments(HandlerMethodInvoker.java:259)
        at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:146)
        at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:354)
        at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:342)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:763)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:709)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:613)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:536)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:71)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:619)
{noformat}

It happens even when defaultValue is set. I expect tokenString to be null or defaultValue (if it's set).
Solution to this problem is trivial, after I looked to source code, but let me introduce more advanced idea. 
It would be great if anotated @CookieValue argument could be of any user type and should be resolved through registered property editors such as arguments with @RequestParam are.",,;29/Nov/09 8:16 PM;arjen.poutsma;240,,,,,,,,,,,,,,,0,240,,,0,240,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-06-10 19:47:43.569,4237,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qyn:,4413,5711,,,,Sun JVM -> 1.6,10/Jun/09 7:47 PM;arjen.poutsma;Added formatting.,"10/Jun/09 7:54 PM;arjen.poutsma;Fixed the NPE bug.

Feel free to open a new issue for the feature request of using PropertyEditors for CookieValue conversion.",27/Nov/09 4:21 AM;mbingham;The NPE bug still exists in RC2 in the portlet version of AnnotationMethodHandlerAdapter.resolveCookieValue().,29/Nov/09 8:16 PM;arjen.poutsma;Fixed in Portlet environment too,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10472|https://github.com/spring-projects/spring-framework/issues/10472]. ,,,,,,,,,,,,,,,,,,
Portlet-version of @ExceptionHandler,SPR-5633,26187,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,30/Mar/09 4:01 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,29/Jul/09 9:10 PM,,,,,,,3.0 M4,,,,,,,,0,,"Basically the same as SPR-4677, but for Portlet environments.",,;29/Jul/09 9:10 PM;arjen.poutsma;5640,,,,,,,,,,,,,,,0,5640,,,0,5640,,,,,,,,,,,,SPR-4677,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:30.197,16145,true,issuemaster(issuemaster),,,,0|i02sz3:,16403,15476,,,,,29/Jul/09 9:10 PM;arjen.poutsma;Done.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10304|https://github.com/spring-projects/spring-framework/issues/10304]. ,,,,,,,,,,,,,,,,,,,,,
Provide support for context hierarchies in the TestContext Framework,SPR-5613,26152,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,tawek,tawek,25/Mar/09 9:11 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,06/Mar/13 5:19 PM,2.5.6,,,,,,3.2.2,,,Test,,,,,10,,"h4. Status Quo

Currently the TestContext framework supports creating only _flat_, non-hierarchical contexts. There is no easy way to create contexts with parent-child relationships.

----
h4. Goals

- Add support for creating a test context with a parent context. 
- Configuration in the TestContext framework should allow for any number of levels in the context hierarchy.
- Different levels in the context hierarchy may have different types of contexts (e.g., XML or annotation classes).

h6. Example Hierarchies

- Root {{WebApplicationContext}} <-- Dispatcher {{WebApplicationContext}}
- EAR {{ApplicationContext}} <-- Root {{WebApplicationContext}} <-- Dispatcher {{WebApplicationContext}}

----
h4. Deliverables

# (/) Introduce a new {{@ContextHierarchy}} annotation that can contain nested {{@ContextConfiguration}} declarations
# (/) Introduce a new {{name}} attribute in {{@ContextConfiguration}} that can be used for merging or overriding _named_ {{@ContextConfiguration}} elements in the context hierarchy
# (/) Assemble the context hierarchy for a given test class based on the levels defined in {{@ContextHierarchy}} in a single test class
# (/) Assemble the context hierarchy for a given test class based on the levels defined in {{@ContextHierarchy}} and {{@ContextConfiguration}} within the test class hierarchy
# (/) Support merging of configuration files or classes at any level in the hierarchy via the {{name}} attribute of {{@ContextConfiguration}}
# (/) Support overriding of configuration files or classes at any level in the hierarchy via the {{name}} and {{inheritLocations}} attributes of {{@ContextConfiguration}}
# (/) Cache each individual context within a hierarchy
# (/) Support _dirtying_ of the context hierarchy, including _dirtying_ of any other affected hierarchies that share a common ancestor context
# (/) Detect default XML resource location or default annotated classes, if feasible

----
h4. Implementation Considerations

- (/) {{MergedContextConfiguration}} should have a reference to the parent {{MergedContextConfiguration}} (i.e., a {{private final}} field)
- (/) {{MergedContextConfiguration}} should provide a {{public ApplicationContext getParentApplicationContext()}} method that {{SmartContextLoader}} instances can use to retrieve and set the parent {{ApplicationContext}}
-- (/) {{MergedContextConfiguration}} will need an internal reference to the context cache (or at least a way to retrieve the parent context from the cache)

----
h4. Pseudocode Examples

----
h5. Single Test Class with Context Hierarchy

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy({
	@ContextConfiguration(""parent.xml""),
	@ContextConfiguration(""child.xml"")
})
public class AppCtxHierarchyTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+------------+
| parent.xml |
+------------+
      ^
      |
+------------+
| child.xml  |
+------------+
{noformat}

----
h5. Class Hierarchy with Implicit Parent Context

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy(@ContextConfiguration(classes = AppConfig.class))
public abstract class AbstractTests {}

@ContextHierarchy(@ContextConfiguration(""/A-config.xml""))
public class A extends AbstractTests {}

@ContextHierarchy(@ContextConfiguration(""/B-config.xml""))
public class B extends AbstractTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+-----------------+
| AppConfig.class |
+-----------------+
         ^
         |
+-----------------+
|  A-config.xml   |
+-----------------+
{noformat}

{noformat}
+-----------------+
| AppConfig.class |
+-----------------+
         ^
         |
+-----------------+
|  B-config.xml   |
+-----------------+
{noformat}

----
h5. Class Hierarchy with Bare @ContextConfiguration in a Superclass

In this scenario it is assumed that {{AbstractTests}} existed prior to the introduction of {{@ContextHierarchy}} support and that the author does not wish to (or cannot) modify {{AbstractTests}} to declare a {{@ContextHierarchy}}.

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = AppConfig.class)
public abstract class AbstractTests {}

@ContextHierarchy(@ContextConfiguration(""/A-config.xml""))
public class A extends AbstractTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+-----------------+
| AppConfig.class |
+-----------------+
         ^
         |
+-----------------+
|  A-config.xml   |
+-----------------+
{noformat}

----
h5. Class Hierarchy with Bare @ContextConfiguration in a Subclass

This scenario is not necessarily recommended, but it should still be supported for the sake of consistency.

Ideally, if the author of a test class knows that the context for the test class should take part in a context hierarchy, then the author should explicitly declare {{@ContextConfiguration}} within {{@ContextHierarchy}}.

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy(@ContextConfiguration(classes = AppConfig.class))
public abstract class AbstractTests {}

@ContextConfiguration(""/A-config.xml"")
public class A extends AbstractTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+-----------------+
| AppConfig.class |
+-----------------+
         ^
         |
+-----------------+
|  A-config.xml   |
+-----------------+
{noformat}

----
h5. Class Hierarchy with Merged Configuration

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy({
    @ContextConfiguration(name = ""parent"", locations = ""/app-config.xml""),
    @ContextConfiguration(name = ""child"",  locations = ""/user-config.xml"")
})
public class BaseTests {}

@ContextHierarchy(
    @ContextConfiguration(name = ""child"",  locations = ""/order-config.xml"")
)
public class ExtendedTests extends BaseTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+----------------+
| app-config.xml |
+----------------+
        ^
        |
+-----------------+
| user-config.xml |
+-----------------+
{noformat}

{noformat}
          +----------------+
          | app-config.xml |
          +----------------+
                  ^
                  |
+-----------------------------------+
| user-config.xml, order-config.xml |
+-----------------------------------+
{noformat}

----
h5. Class Hierarchy with Overridden Configuration

{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy({
    @ContextConfiguration(name = ""parent"", locations = ""/app-config.xml""),
    @ContextConfiguration(name = ""child"",  locations = ""/user-config.xml"")
})
public class BaseTests {}

@ContextHierarchy(
    @ContextConfiguration(name = ""child"",  locations = ""/test-user-config.xml"", inheritLocations=false)
)
public class ExtendedTests extends BaseTests {}
{code}

h6. Resulting Hierarchies

{noformat}
+----------------+
| app-config.xml |
+----------------+
        ^
        |
+-----------------+
| user-config.xml |
+-----------------+
{noformat}

{noformat}
   +----------------+
   | app-config.xml |
   +----------------+
           ^
           |
+----------------------+
| test-user-config.xml |
+----------------------+
{noformat}

----",,,,,,,,,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,SPR-5428,,,,,,,,,,,,9936000,,,,,2010-11-15 09:44:01.871,12974,true,issuemaster(issuemaster),,,,0|i01c3b:,7836,634,,,,,"15/Nov/10 9:44 AM;david_syer;I have a suggestion: what about extending @ContextConfiguration to be an optional method-level annotation?  The meaning would be: create a new context if there is none, or use the existing type-level value as a parent otherwise.  I would also suggest the default should be to have an implicit @DirtiesContext applying only to the child context (with an option to switch it off I guess), otherwise the context cache could get quite large with no great benefit.

This would also be a great feature for integration testing where you want to override a handful of beans just for the test to provide a stubbed or alternative environment, or where you want to test multiple profiles in one go, without having to reset system properties.","28/Feb/12 5:52 PM;tadaya;different implementation of the comment above, but I wrote a code to support parent app context for spring test framework.

pull request here:
https://github.com/SpringSource/spring-framework/pull/43","28/Jun/12 2:50 AM;nealeu;Looking forward to seeing SPR-4632 resolved by this, with the test context always as a child of the context specified in @ContextConfiguration :)","17/Jul/12 10:54 AM;sbrannen;If you are _watching_ this issue, please feel free to participate in the discussion regarding the proposed _Deliverables_ and the corresponding _Pseudocode Examples_ listed in this issue's _Description_.

Thanks!

Sam","17/Jul/12 1:31 PM;tadaya;Hi Sam,
I think it's a great idea to distinguish contexts by name.

I just want to poke around corner-case behaviors:

{code}
@ContextHierarchy( {
  @ContextConfiguration(""parent.xml""), 
  @ContextConfiguration(""child.xml"")
})
public class BaseTests {}

@ContextHierarchy( {
  @ContextConfiguration(locations=""another.xml"", inheritLocations=true)
})
public class ExtendedTests extends BaseTests {}
{code}

In ExtendedTests, I didn't specify the name on the @ContextConfiguration, nor in  BaseTests.

In this case, three contexts with this hierarchy to be expected?
""parent"" <-- ""child"" <-- ""another""

Another case:
{code}
@ContextHierarchy( {@ContextConfiguration(""parent.xml"")})
public class BaseTests {}

@ContextHierarchy( {@ContextConfiguration(locations=""child.xml"", inheritLocations=true)})
public class ExtendedTests extends BaseTests {}
{code}

Does this merge the configuration(_parent.xml_ and _child.xml_)? 
If so, behavior is slightly different from the first case.(inherit vs merge)
","17/Jul/12 2:54 PM;sbrannen;Hi Tadaya,

Thanks for the feedback!

The answers to your questions are ""yes"" and ""no"", respectively.

Based on the current design, merging and overriding is only possible if the contexts in question are explicitly named; otherwise, unnamed contexts (or contexts with a different name) are considered to define separate levels in the hierarchy, following a top-down approach based on the location of the {{@ContextHierarchy}} annotation in the class hierarchy.

So, in your examples you would get:

- parent <-- child <-- another
- parent <-- child

Note that the {{inheritLocations}} attribute of {{@ContextConfiguration}} is {{true}} by default. So there is no need to declare it unless you are naming context hierarchy levels and overriding (i.e., setting {{inheritLocations}} to {{false}}).

Regards,

Sam","17/Jul/12 3:10 PM;sbrannen;Please note that I've added _Resulting Hierarchies_ ASCII art to help everyone visualize the semantics of the proposal.

\- Sam","17/Jul/12 3:39 PM;tadaya;Thank you, Sam.

Another question: 
Is @ContextHierarchy required annotation? 
Or consider bare ""@ContextConfiguration"" is equal to ""@ContextHierarchy({@ContextConfiguration})""
Or consider them different?

sample:
{code}
@ContextConfiguration(""foo.xml"")
public class Tests {}
{code}

is considered as this?
{code}
@ContextHierarchy( {@ContextConfiguration(""foo.xml"")} )
public class Tests {}
{code}

----
Based on the answer above, I think result of the following would be different:

{code}
@ContextConfiguration(""parent.xml"")
public class BaseTests {}

@ContextConfiguration(""child.xml"")
public class ExtendedTests extends BaseTests {}
{code}

# not valid (@ContextHierarchy is required)
# two contexts: ""parent"" <-- ""child""  (inheritance)
# or, merge ""parent"" and ""child""  => existing behavior

Regards,","18/Jul/12 12:30 PM;sbrannen;Tadaya,

Thanks again for your feedback. You are raising some very good questions! ;)

{quote}Is @ContextHierarchy required annotation?{quote}

In general, no, {{@ContextHierarchy}} is not a required annotation.

For backwards compatibility, the semantics for a stand-alone {{@ContextConfiguration}} annotation (_in a class hierarchy that does not declare {{@ContextHierarchy}}_) will remain consistent with the semantics defined since Spring 2.5.

However, {{@ContextHierarchy}} *is* required if you want a context hierarchy.

{quote}Or consider bare {{@ContextConfiguration}} is equal to {{@ContextHierarchy(@ContextConfiguration)}}{quote}

Yes, within a class hierarchy that declares context hierarchies, a bare {{@ContextConfiguration}} annotation will be interpreted as {{@ContextHierarchy(@ContextConfiguration)}}.

For example, if {{@ContextHierarchy}} is present on a superclass *A* but subclass *B* only declares a bare {{@ContextConfiguration}}, then the context for the test class *B* will be a child of the context for test class *A*.

I'll add some more examples in the _Pseudocode Examples_ section to make this clearer.

----

{code}
@ContextConfiguration(""parent.xml"")
public class BaseTests {}

@ContextConfiguration(""child.xml"")
public class ExtendedTests extends BaseTests {}
{code}

The above example has been a valid configuration since Spring 2.5. Thus the semantics for this kind of setup will remain unchanged. Specifically, no context hierarchy will be created. Instead, two contexts will be loaded, one for {{BaseTests}} using \{""parent.xml""\} and one for {{ExtendedTests}} using \{""parent.xml"", child.xml""\}.

Regards,

Sam","21/Jan/13 1:40 PM;sbrannen;Hi everybody,

If you're actively following this issue, you may be interested in a sneak peak at the current code in my GitHub repository: https://github.com/sbrannen/spring-framework/tree/SPR-5613

The only part that is currently missing is support for dirtying a context (with {{@DirtiesContext}}) that resides in a context hierarchy.

So feel free to take it for a spin...

Feedback is welcome!

Sam","19/Feb/13 11:54 PM;tadaya;Hi Sam,

I was looking your sneakpeak code and implementing the @DirtiesContext support for context hierarchy.

I was thinking the usage to be like this:
{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextHierarchy({
	@ContextConfiguration(name=""foo"", locations=""/foo-config.xml""),
	@ContextConfiguration(name=""bar"", locations=""/bar-config.xml""), 
	@ContextConfiguration(name=""baz"", locations=""/baz-config.xml"")
})
public class AppCtxHierarchyTests {
	@Test
	@DirtiesContext(""bar"")
	public void testTaintsBar(){...}
}
{code}

The above example would mark ""bar"" and it's child contexts such as ""baz"" as dirty.

If this is the expected behavior, I'll finish up the implementation and send a pull request.

Thanks,
","20/Feb/13 11:02 PM;tadaya;Hi Sam,
I wrote ""@DirtiesContext context hierarchy support"" on top of your SPR-5613 branch based on the spec in my comment above.

pull request is here:
https://github.com/sbrannen/spring-framework/pull/1

Thanks,
","01/Mar/13 10:43 AM;sbrannen;[~tadaya], thanks for submitting the pull request!

Unfortunately, using the names of context hierarchy levels to clear the context cache is fundamentally flawed. Please see my [comments in your pull request|https://github.com/ttddyy/spring-framework/commit/66bdbde01b393b5cc3e2cf21013e0bd93f474c8c#commitcomment-2723674] for details.

Regards,

Sam",06/Mar/13 5:02 PM;sbrannen;Submitted pull request: https://github.com/SpringSource/spring-framework/pull/247,"06/Mar/13 5:19 PM;sbrannen;Completed as described in the comments for [GitHub commit 4c5d771764|https://github.com/SpringSource/spring-framework/commit/4c5d771764145616658deaaaca669dc6cb5b0ba9]:

{quote}
*Provide support for context hierarchies in the TCF*

Prior to this commit the Spring TestContext Framework supported creating
only flat, non-hierarchical contexts. There was no easy way to create
contexts with parent-child relationships.

This commit addresses this issue by introducing a new @ContextHierarchy
annotation that can be used in conjunction with @ContextConfiguration
for declaring hierarchies of application contexts, either within a
single test class or within a test class hierarchy. In addition,
@DirtiesContext now supports a new 'hierarchyMode' attribute for
controlling context cache clearing for context hierarchies.

- Introduced a new @ContextHierarchy annotation.
- Introduced 'name' attribute in @ContextConfiguration.
- Introduced 'name' property in ContextConfigurationAttributes.
- TestContext is now aware of @ContextHierarchy in addition to
  @ContextConfiguration.
- Introduced findAnnotationDeclaringClassForTypes() in AnnotationUtils.
- Introduced resolveContextHierarchyAttributes() in ContextLoaderUtils.
- Introduced buildContextHierarchyMap() in ContextLoaderUtils.
- @ContextConfiguration and @ContextHierarchy may not be used as
  top-level, class-level annotations simultaneously.
- Introduced reference to the parent configuration in
  MergedContextConfiguration and WebMergedContextConfiguration.
- Introduced overloaded buildMergedContextConfiguration() methods in
  ContextLoaderUtils in order to handle context hierarchies separately
  from conventional, non-hierarchical contexts.
- Introduced hashCode() and equals() in ContextConfigurationAttributes.
- ContextLoaderUtils ensures uniqueness of @ContextConfiguration
  elements within a single @ContextHierarchy declaration.
- Introduced CacheAwareContextLoaderDelegate that can be used for
  loading contexts with transparent support for interacting with the
  context cache -- for example, for retrieving the parent application
  context in a context hierarchy.
- TestContext now delegates to CacheAwareContextLoaderDelegate for
  loading contexts.
- Introduced getParentApplicationContext() in MergedContextConfiguration
- The loadContext(MergedContextConfiguration) methods in
  AbstractGenericContextLoader and AbstractGenericWebContextLoader now
  set the parent context as appropriate.
- Introduced 'hierarchyMode' attribute in @DirtiesContext with a
  corresponding HierarchyMode enum that defines EXHAUSTIVE and
  CURRENT_LEVEL cache removal modes.
- ContextCache now internally tracks the relationships between contexts
  that make up a context hierarchy. Furthermore, when a context is
  removed, if it is part of a context hierarchy all corresponding
  contexts will be removed from the cache according to the supplied
  HierarchyMode.
- AbstractGenericWebContextLoader will set a loaded context as the
  ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE in the MockServletContext when
  context hierarchies are used if the context has no parent or if the
  context has a parent that is not a WAC.
- Where appropriate, updated Javadoc to refer to the
  ServletTestExecutionListener, which was introduced in 3.2.0.
- Updated Javadoc to avoid and/or suppress warnings in spring-test.
- Suppressed remaining warnings in code in spring-test.
{quote}",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10284|https://github.com/spring-projects/spring-framework/issues/10284]. ,,,,,,,
Support loading WebApplicationContexts with the TestContext Framework,SPR-5243,24462,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,geoffm,geoffm,27/Oct/08 10:54 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,07/Oct/12 3:51 PM,2.5 final,3.0 GA,3.1 GA,,,,3.2 RC1,,,Test,Web,,,,30,,"h4. Status Quo

When the _Spring TestContext Framework_ was introduced in Spring 2.5, it supported loading an {{ApplicationContext}} from either XML or Java Properties files. Spring 3.1 introduced support for loading an {{ApplicationContext}} from _annotated classes_ (e.g., {{@Configuration}} classes).

The underlying implementation for the existing support creates a {{GenericApplicationContext}}; however, a {{GenericApplicationContext}} is not suitable for testing a web application since a web application relies on an implementation of {{WebApplicationContext}} (_WAC_).

In order to integration test Spring-powered web applications the Spring TestContext Framework needs to be able to load a {{WebApplicationContext}}, either from XML configuration files or from annotated classes. Furthermore, the {{ServletContext}} used by such a WAC needs to be configurable within tests, and common context hierarchies must be supported (e.g., _root_ and _dispatcher_ WACs in a parent-child relationship).

h6. Original Author's Description

While writing some MVC integration tests, context errors were thrown when loading an {{XmlViewResolver}} and when attempting to recover command object property validation errors using the {{RequestContext}}. The reason is that each of these requires access to a {{WebApplicationContext}}, not a  {{GenericApplicationContext}} which the TestContext framework makes available by default.

----
h4. Goals

- Introduce an annotation that allows developers to configure a mock {{ServletContext}} from within integration tests.
- Introduce {{SmartContextLoaders}} that can load {{WebApplicationContexts}} from either XML or annotated classes, using the configured mock {{ServletContext}}.
- Provide a means for developers to access the mocks for the {{HttpServletRequest}} and {{HttpServletResponse}} objects and ensure that thread-local state in Spring MVC is kept in sync with these mock objects.
- Ensure that metadata used to create the {{WebApplicationContext}} (e.g., {{ServletContext}} path) is used to define the unique application context cache key.

----
h4. Deliverables

# (/) Implement a {{SmartContextLoader}} that loads a {{WebApplicationContext}} from XML resource locations defined via {{@ContextConfiguration}}
# (/) Implement a {{SmartContextLoader}} that loads a {{WebApplicationContext}} from annotated classes defined via {{@ContextConfiguration}}
# (/) Introduce a new class-level {{@WebAppConfiguration}} annotation that allows for configuration of the {{ServletContext}} base resource path, using Spring's {{Resource}} abstraction
#- see {{ContextMockMvcBuilder.configureWebAppRootDir()}} from {{spring-test-mvc}}
#- the base path must be filesystem-based by default, in contrast to the {{locations}} attribute in {{@ContextConfiguration}} which is classpath-based
#- the base path should default to _""src/main/webapp""_, which follows the Maven convention
#- determine if {{@WebAppConfiguration}} should be _inherited_ (i.e., annotated with {{@Inherited}}), keeping in mind that the top-level context in an EAR would not be a WAC
# (/) Ensure that the two newly introduced {{SmartContextLoader}} implementations create a {{MockServletContext}} on demand (i.e., if a root WAC), when the WAC is loaded, and set the {{MockServletContext}} as the {{ServletContext}} in the application contexts that they load
# (/) Set a loaded context as the {{ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE}} in the {{MockServletContext}} when context hierarchies are not used
# (/) Introduce a subclass of {{MergedContextConfiguration}} specific for web apps (e.g., {{WebMergedContextConfiguration}}) that stores the {{ServletContext}} base path
#- the subclass of MCC must override {{equals()}} and {{hashCode()}} to include the metadata that uniquely identifies the resulting WAC for proper context caching
#- the {{buildMergedContextConfiguration()}} method in {{ContextLoaderUtils}} will likely need to instantiate either a standard {{MergedContextConfiguration}} or a {{WebMergedContextConfiguration}}
# (/) Set up _default_ thread local state via {{RequestContextHolder}} before each test method by implementing a new Servlet-specific {{TestExecutionListener}}
#- by using the {{MockServletContext}} already present in the WAC and by creating a {{MockHttpServletRequest}}, {{MockHttpServletResponse}}, and {{ServletWebRequest}} which will be set in the {{RequestContextHolder}}
# (/) Ensure that the {{MockServletContext}}, {{MockHttpServletRequest}}, {{MockHttpServletResponse}}, and {{ServletWebRequest}} can be injected into the test instance (e.g., via {{@Autowired}})
# (/) Clean up thread locals after each test method
# (/) Ensure that the Servlet-specific {{TestExecutionListener}} is configured as a default {{TestExecutionListener}} _before_ {{DependencyInjectionTestExecutionListener}}
# (/) Introduce a new web-specific {{DelegatingSmartContextLoader}} to incorporate support for the {{SmartContextLoader}} types introduced in this issue and ensure that the correct delegating loader is picked based on the presence or absence of {{@WebAppConfiguration}}
# (/) Consider being able to accommodate a future request to support mocks for Spring Portlet MVC

----
h4. Pseudocode Examples

----
h5. Root WAC with Injected Mocks

{code}
@WebAppConfiguration // path defaults to ""file:src/main/webapp""
@ContextConfiguration(""file:src/main/webapp/WEB-INF/applicationContext.xml"")
public class RootWacTests {

    @Autowired
    private WebApplicationContext wac;

    @Autowired
    private MockServletContext servletContext;

    @Autowired
    private MockHttpServletRequest request;

    @Autowired
    private MockHttpServletResponse response;

    @Autowired
    private MockHttpSession session;

    @Autowired
    private ServletWebRequest webRequest;

    //...
}
{code}

----
h4. Further Resources

h5. Blogs and Custom Solutions

- http://codinghood.blogspot.com/2009/01/spring-integration-testing-for-web.html
- http://jamesfarrell129.wordpress.com/2011/04/20/integration-testing-for-spring-portlet-mvc/
- http://tedyoung.me/2011/02/14/spring-mvc-integration-testing-controllers/
- http://code.google.com/p/ted-young/source/browse/trunk/blog.spring-mvc-integration-testing/

h5. Forum Discussions

- http://forum.springframework.org/showthread.php?p=210177#post210177
- http://forum.springframework.org/showthread.php?p=210181
- http://forum.springsource.org/showthread.php?t=76744

----",,"Research, design meetings with Rossen Stoyanchev, design draft, etc.;30/Jul/12 8:57 AM;sbrannen;57600",,,,,,,,,,,,,,,0,115200,,,0,115200,,SPR-5613,,,,,,,,,,,,SPR-9799,23/Feb/11 12:05 AM;gpitteloud;web_listener_loader.zip;https://jira.spring.io/secure/attachment/17654/web_listener_loader.zip,,,,,,,,,,,9936000,,,,,2008-10-28 10:30:33.92,16274,true,issuemaster(issuemaster),,,,0|i028iv:,13090,328,,,,,28/Oct/08 10:30 AM;narada;I would absolutely love this.  I've spent a lot of time trying to get this to work.  It shouldn't be this difficult.  It'd be great if this not uncommon use case was available out of the box.  Thanks.,"23/Feb/11 12:00 AM;gpitteloud;Loading a WebApplicationContext is not a difficult task on its own : you just provide a @ContextConfiguration.loader that creates a GenericWebApplicationContext. The difficult task is that the basic contract of a WebApplicationContext is that it knows the ServletContext for several reasons.

I have built a solution based on a test listener (so-called WebListener) that creates the web environment (based on spring mock classes) : Mock ServletContext, Mock request, response, session. The ServletContext is created once (beforeTestClass) for a test class, and is <i>injected</i> into the ContextLoader (there's no API to do this, thus I had to do it with reflexion, which is the goal of my TestContextUtils class). I have to ensure that the context is not loaded yet, or this trick will not work (I mark it as dirty for that purpose, and also because it might have been loaded by another test class earlier, or will be used by another test class later on).

You will find attached the WebListener and Web ContextLoader that are working together.

The web listener's duty also includes a way to inject the web mocks (ServletContext, request, response, etc.) into test instance variables that are annotated with @WebResource. I found it quite useful.

The WebListener is actually split into an AbstractWebListener and its subclass WebListener because I also implemented a JsfListener with the same semantics, with the only jsf mock lib I found so far : shale-test.

There are tests in the listener that test for the existence of an application context (by looking for a @ContextConfiguration annotation in the test class hiererchy) : the reason for this is that the web listener may also be used without an application context in place, i.e. only for creating a mock web environment.

The mock objects (request, response, session) are shared for other listeners to use thanks to TestContext internal attributes map, which also happens to be useful.","01/Jun/11 4:20 PM;sslavic;Checkout Spring MVC integration test support Rosen and Arjen have been building @ https://github.com/SpringSource/spring-test-mvc
First heard about it on S2G Forum 2011 Amsterdam, and Spring 3.2 was mentioned as likely target. Not sure if there is separate ticket for this, but I think they are related.",02/Jun/11 1:26 AM;rstoya05-aop;The two might be quite complementary. You could use this to create and initialize a WebApplicationContext once per test fixture and then provide it to the main class of the Spring MVC integration test support.,"18/Jul/12 1:22 PM;sbrannen;If you are _watching_ this issue, please feel free to participate in the discussion regarding the proposed _Deliverables_ and the corresponding _Pseudocode Examples_ listed in this issue's _Description_.

Thanks!

Sam","18/Jul/12 11:45 PM;gpitteloud;2 comments:
* When @WebAppConfiguration is present, the WAC should not be cached and reused in next tests that share the same @ContextConfiguration.locations, because the lifespan of its ServletContext is limited to the test class.
* I found it quite useful to have tests that run with mock environment (mock servlet context, request, response, session), RequestContext thread locals, etc., but that do not need a WAC to be set up. Thus we have lighter tests, still using mock injection and thread locals facilities. It would be nice to allow such tests.

And 2 questions:
* Is there a plan to include some sort of security support, so that {{request.isUserInRole(String role)}} and {{request.getUserPrincipal()}} return some configurable values ? The idea would be a @Secured annotation on test methods (with username and roles), that defines the security context of a test case.
* Does all this work with a test execution listener or will it be integrated into the TestContext framework ?","19/Jul/12 9:19 AM;sbrannen;Hi Gaetan,

{quote}
When @WebAppConfiguration is present, the WAC should not be cached and reused in next tests that share the same @ContextConfiguration.locations, because the lifespan of its ServletContext is limited to the test class.
{quote}

One of the key features of the TestContext framework is caching. Thus the WAC will certainly be cached by default.

Please note that the proposed subclass of {{MergedContextConfiguration}} will be responsible for ensuring that the MCC uniquely identifies the WAC for proper caching.

Why do you say that ""_the lifespan of its ServletContext is limited to the test class_""?

I would argue that the lifespan of the {{ServletContext}} is tied directly to the lifespan of the corresponding {{WebApplicationContext}}. Thus if the WAC is used across multiple test classes, it should definitely be cached.

If you want to _disable_ caching of a WAC after a particular test class, simply annotate the test class with {{@DirtiesContext}}.

{quote}
I found it quite useful to have tests that run with mock environment (mock servlet context, request, response, session), RequestContext thread locals, etc., but that do not need a WAC to be set up. Thus we have lighter tests, still using mock injection and thread locals facilities. It would be nice to allow such tests.
{quote}

How do you propose to inject the mocks if not from a configured WAC?

Are you proposing to just have a custom {{TestExecutionListener}} for this purpose?

Can you please provide some pseudocode to demonstrate your use case?

{quote}
Is there a plan to include some sort of security support, so that request.isUserInRole(String role) and request.getUserPrincipal() return some configurable values? The idea would be a @Secured annotation on test methods (with username and roles), that defines the security context of a test case.
{quote}

No, there is currently no plan to support this, but it is an interesting idea.

So feel free to create a separate JIRA issue to request it.

{quote}
Does all this work with a test execution listener or will it be integrated into the TestContext framework ?
{quote}

The code needed to support the features in this issue will be integrated in the TestContext framework, tentatively including two {{SmartContextLoader}} implementations, a subclass of {{MergedContextConfiguration}}, a {{TestExecutionListener}}, and an annotation.

Regards,

Sam
","20/Jul/12 1:42 AM;gpitteloud;Hi Sam,

Thanks for the reply and explanations.

Regarding caching, I was thinking about a first test with a plain ApplicationContext and a second test with a WebApplicationContext, both defined with similar xml locations. Using current caching facility (key=xml locations), both contexts would be stored under same key.
But this is now OK as long as the context cache key contains WAC and ServletContext info.

{quote}
I would argue that the lifespan of the {{ServletContext}} is tied directly to the lifespan of the corresponding {{WebApplicationContext}}. Thus if the WAC is used across multiple test classes, it should definitely be cached.
{quote}
You're right, the lifespan of the {{ServletContext}} is bound to the lifespan of the WAC, not the test that uses the WAC. My first thoughts in implementating this web test feature was a test case that creates a {{ServletContext}} in @BeforeClass and then symmetrically ""destroys"" it in @AfterClass. But the context caching feature introduces another lifecycle that is not bound to the test lifecycle; the {{ServletContext}} is definitively part of this alternate lifecycle.

Regarding web tests without WAC, a simple TestExecutionListener can do the job :
* before class : introspect the class to find @Autowired fields of type ServletRequest, ServletResponse, HttpSession, ServletContext, etc. (or subclasses).
* prepare instance : creates mock request, response, etc. and injects them into @Autowired fields
* before method: register thread local RequestContext
* after method : reset thread local

This helps writing tests for a POJO web controller that does not need application context infrastructure, but just access to a request/response pair and maybe a user session. With such a listener, there's no need to write a @Before method that creates all these objects. But it's not linked to WAC and thus not linked to this JIRA issue. I can write such a listener by myself.

Regarding security, I created the issue SEC-2015.

Regards,
Gaëtan",20/Jul/12 9:39 AM;sbrannen;This issue depends on SPR-5613 in order to support common context hierarchies in Spring MVC web applications.,"20/Jul/12 9:41 AM;rstoya05-aop;bq. This helps writing tests for a POJO web controller that does not need application context infrastructure, but just access to a request/response pair and maybe a user session.

The spring-test-mvc project (to be included in Spring 3.2) might fit this description. The ""standalone"" setup does not require an ApplicationContext and uses the mock request/response internally. See [this example|https://github.com/SpringSource/spring-test-mvc/blob/master/src/test/java/org/springframework/test/web/server/samples/standalone/ResponseBodyTests.java] as well as many others in that package and sub-packages.","07/Oct/12 12:48 PM;sbrannen;If you're following this issue, you may interested in knowing that support for {{WebApplicationContext}} hierarchies in integration tests has been split out into a new issue: SPR-9863

Regards,

Sam",07/Oct/12 3:27 PM;sbrannen;Pull request submitted: https://github.com/SpringSource/spring-framework/pull/160,"07/Oct/12 3:47 PM;sbrannen;This work has been addressed as discussed in the comments for [GitHub commit 9937f840d5|https://github.com/SpringSource/spring-framework/commit/9937f840d5dbd2be819f45f5101dd6486aa382f6]:

{quote}
*Support loading WebApplicationContexts in the TCF*

Prior to this commit, the Spring TestContext Framework only supported
loading an ApplicationContext in integration tests from either XML or
Java Properties files (since Spring 2.5), and Spring 3.1 introduced
support for loading an ApplicationContext in integration tests from
annotated classes (e.g., @Configuration classes). All of the
ContextLoader implementations used to provide this support load a
GenericApplicationContext. However, a GenericApplicationContext is not
suitable for testing a web application since a web application relies on
an implementation of WebApplicationContext (WAC).

This commit makes it possible to integration test Spring-powered web
applications by adding the following functionality to the Spring
TestContext Framework.

- Introduced AbstractGenericWebContextLoader and two concrete 
   subclasses:
-- XmlWebContextLoader
-- AnnotationConfigWebContextLoader

- Pulled up prepareContext(context, mergedConfig) from
   AbstractGenericContextLoader into AbstractContextLoader to allow it
   to be shared across web and non-web context loaders.

- Introduced AnnotationConfigContextLoaderUtils and refactored
   AnnotationConfigContextLoader accordingly. These utils are also used
   by AnnotationConfigWebContextLoader.

- Introduced a new @WebAppConfiguration annotation to denote that the
   ApplicationContext loaded for a test should be a WAC and to configure
   the base resource path for the root directory of a web application.

- Introduced WebMergedContextConfiguration which extends
   MergedContextConfiguration with support for a baseResourcePath for
   the root directory of a web application.

- ContextLoaderUtils.buildMergedContextConfiguration() now builds a
   WebMergedContextConfiguration instead of a standard 
   MergedContextConfiguration if @WebAppConfiguration is present on the
   test class.

- Introduced a configureWebResources() method in
   AbstractGenericWebContextLoader that is responsible for creating a
   MockServletContext with a proper ResourceLoader for the 
   resourceBasePath configured in the WebMergedContextConfiguration. The 
   resulting mock ServletContext is set in the WAC, and the WAC is 
   stored as the Root WAC in the ServletContext.

- Introduced a WebTestExecutionListener that sets up default thread 
   local state via RequestContextHolder before each test method by using
   the MockServletContext already present in the WAC and by creating a
   MockHttpServletRequest, MockHttpServletResponse, and
   ServletWebRequest that is set in the RequestContextHolder. WTEL also
   ensures that the MockHttpServletResponse and ServletWebRequest can be
   injected into the test instance (e.g., via @Autowired) and cleans up
   thread locals after each test method.

- WebTestExecutionListener is configured as a default 
   TestExecutionListener before DependencyInjectionTestExecutionListener

- Extracted AbstractDelegatingSmartContextLoader from
   DelegatingSmartContextLoader and introduced a new
   WebDelegatingSmartContextLoader.

- ContextLoaderUtils now selects the default delegating ContextLoader
   class name based on the presence of @WebAppConfiguration on the test
   class.

- Tests in the spring-test-mvc module no longer use a custom 
   ContextLoader to load a WebApplicationContext. Instead, they now
   rely on new core functionality provided in this commit.
{quote}",31/Oct/12 9:54 AM;sbrannen;Note that {{WebTestExecutionListener}} has been renamed to {{ServletTestExecutionListener}}.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#9917|https://github.com/spring-projects/spring-framework/issues/9917]. ,,,,,,,,
@RequestMapping-based controllers do not work for JDK proxies with annotated interfaces,SPR-5084,23622,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,mycroft,mycroft,14/Aug/08 4:51 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,17/Aug/09 9:49 PM,2.5.4,,,,,,3.0 RC1,,,Web,,,,,1,,"When using JDK proxies (proxy-target-class=false), it is not possible to use @RequestMapping to automatically define controllers.

This works very well if no proxying is involved. However, when AOP is used and a proxy of the controller is created (implementing the appropriate interface, where the interface has @RequestMapping at type and method level), then it fails.

The code in DefaultAnnotationHandlerMapping properly finds @RequestMapping at type level in the interface (since it uses AnnotationUtils.findAnnotation), but then it looks for method-level annotations in DefaultAnnotationHandlerMapping.determineUrlsForHandlerMethods()

This method only looks at the implementation class (the proxy), and finds no such annotation.

It should use the same kind of logic that AnnotationUtils does, and check the method declaration in the relevant interface(s) for any annotation there. Alternatively, perhaps declaring @RequestMapping as @Inheritable would suffice? Not sure. In any case, it should be simple to find the interfaces, get the right method, and check for annotations there.

The reason I prefer JDK proxies to CGLIB-based ones is because when we use CGLIB, it creates memory leaks when the application is reloaded in Tomcat, while JDK proxies don't have this problem.",,;17/Aug/09 9:45 PM;arjen.poutsma;115200,,,,,,,,,,,,,,,0,115200,,,0,115200,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-06-04 00:09:16.137,16336,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i010fj:,5947,7103,,,,Sun JVM -> 1.5,"14/Aug/08 5:05 AM;mycroft;Digging a little further, the above description is partially incorrect.

The code in DefaultAnnotationHandlerMapping is correct if the URLs are defined at type level, since then it uses AnnotationUtils, and finds the annotation in the interface. It fails if the urls are defined at method level.

When defined at type level, DefaultAnnotationHandlerMapping has the correct behaviour.

However, it fails later on when DispatcherServlet calls AnnotationMethodHandlerAdapter.supports(handler), because it finds no supported handler methods.

The problem is in the constructor of HandlerMethodResolver, which looks at the handler type for RequestMapping at method level. It doesn't find any, obviously, since the handler type is a proxy, and it does not look at interfaces either.

So HandlerMethodResolver has the same problem, it doesn't detect the @RequestMapping at method level, so it can't find any handler methods, and the controller cannot be used. A similar fix should be made for both HandlerMethodResolver AND DefaultAnnotationHandlerMapping (when no type-level @RequestMapping is present).

AnnotationUtils should have a method that does the interface lookup for methods as well as types.","04/Jun/09 12:09 AM;grant.gochnauer;I just ran into this issue with Spring 2.5.6 when trying to remove cglib from my classpath to reduce some memory issues we are having with it. I have some AOP advice applied to my controllers but I need to keep cglib in order to generate these proxies. 

This will be a welcome improvement",08/Aug/09 9:54 AM;grant.gochnauer;I'm hoping this doesn't get bumped from Spring 3.0 -- it's affecting our ability to completely remove cglib from our environment which is causing us to restart our production server after every redeployment. Thanks!!,"17/Aug/09 9:49 PM;arjen.poutsma;This should work now.

Note, however, that the annotations have to be on the interface, and cannot be on the implementing class. This is due to the fact that the AOP target might change at runtime, and it would be very inefficient to introspect the hander each time a web request comes in.",18/Aug/09 12:59 AM;grant.gochnauer;Thanks Arjen. Does this mean that this is already available in M4 as I haven't seen any new trunk commits lately?,"18/Aug/09 1:04 AM;arjen.poutsma;No, it is not in M4; I committed it this morning.","01/Sep/09 5:54 AM;ande;Will a similar fix help in the AnnotationMethodHandlerExceptionResolver, for dealing with the @ExceptionHandler method-level annotation?

It seems related to SPR-5959, which also does not pick up the @ExceptionHandler annotation (but that is logged for a CGLIB class proxy).",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#9757|https://github.com/spring-projects/spring-framework/issues/9757]. ,,,,,,,,,,,,,,,
Doc: @Autowired not working in BeanFactoryPostProcessor,SPR-4935,22675,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,rpiotrow,rpiotrow,18/Jun/08 11:04 PM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,12/May/11 8:41 PM,2.5.4,,,,,,3.1 M2,,,Core,,,,,0,,"I create simple bean which implements BeanFactoryPostProcessor and has dependent bean injected with @Autowired annotation. Injection does not occur.

Workaround is to use standard XML dependency injection.",,;26/Mar/10 5:41 AM;olivergierke;900,,,,,,,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,26/Mar/10 5:39 AM;olivergierke;autowired.patch;https://jira.spring.io/secure/attachment/16350/autowired.patch,18/Jun/08 11:05 PM;rpiotrow;autowired_bug.zip;https://jira.spring.io/secure/attachment/14199/autowired_bug.zip,19/Jun/08 8:59 PM;rpiotrow;autowired_bug_2.zip;https://jira.spring.io/secure/attachment/14209/autowired_bug_2.zip,26/Mar/10 5:39 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/16351/mylyn-context.zip,,,,,,,,9936000,,,,,2008-06-19 19:38:23.15,12932,true,issuemaster(issuemaster),,,,0|i04qrj:,27710,265,,,,Sun JVM,18/Jun/08 11:05 PM;rpiotrow;Example of bug. You have to run SampleServiceTest (as JUnit4 test).,"19/Jun/08 2:50 AM;rpiotrow;AbstractApplicationContext.java:

[...]
362:    // Invoke factory processors registered as beans in the context.
363:    invokeBeanFactoryPostProcessors(beanFactory);
364:    
365:    // Register bean processors that intercept bean creation.
366:    registerBeanPostProcessors(beanFactory);
[...]

As you can see BeanFactoryPostProcessors are created and invoked before any BeanPostProcessor is created. AutowiredAnnotationBeanPostProcessor (postprocessor responsible for @Autowired annotation) is BeanPostProcessor and it is not applied to any BeanFactoryPostProcessors.","19/Jun/08 7:38 PM;juergen.hoeller;This is actually intended: Annotation-based injection is available to application objects only, which in particular excludes post-processors. The technical reason for this is that annotation processing itself is implemented as post-processors. That said - it's also by definition, so we need to document this properly.

Juergen","19/Jun/08 8:59 PM;rpiotrow;The same thing applies to factoryBeans and to beans that factoryBeans use (that are inject to some factoryBean by XML) when beanFactoryPostprocessor invokes beanFactory.getBeansOfType(Class) or beanFactory.getBeansOfType(Class, boolean, boolean) with last argument set to true.

Attached zip contains updated sample application with JUnit4 test class (SampleTest).","20/Jun/08 3:22 PM;paul4christ79;Juergen, that documentation should go straight into the annotation's javadoc. That limitation sounds too important to be left to the Reference guide alone.","28/Nov/09 9:53 PM;david_syer;Rafal: the factory bean effect you are seeing is a side effect of the implementation of your BeanFactoryPostProcessor - if you play with the bean instances from the BeanFactory in a factory post processor, you bypass the normal ApplicationContext bean creation features, like applying BeanPostProcessors.  In other words: it's expected behaviour.

I'll change this issue to a documentation issue.",26/Mar/10 5:39 AM;olivergierke;Attached patch to alter {{@Autowired}} javadoc to mention that it cannot be used inside {{Bean(Factory)PostProcessor}} implementations.,26/Mar/10 5:40 AM;olivergierke;Forward to Jürgen to review and apply patch.,"12/May/11 8:41 PM;cbeams;Thanks, Ollie for the patch.  With minor modifications it has been applied, as well as a similar update to @Value and AutowiredAnnotationBeanPostProcessor Javadoc.  A note on limitations for these annotations has also been added to the reference documentation.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#9610|https://github.com/spring-projects/spring-framework/issues/9610]. ,,,,,,,,,,,,,
Add single checkbox input macro for Velocity and Freemarker,SPR-4700,21676,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,yabon,yabon,14/Apr/08 4:29 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,04/Aug/09 11:16 PM,2.5.3,,,,,,3.0 M4,,,Web,,,,,0,,"Currently for creating a single checkbox input we have 3 solutions:
 * use formCheckboxes macro but with a hard coded single element options parameter.
 * bind to the right field and then add two inputs (one for the real input and optionally one for multi page submission).
 * and the dirty one where we manually create the input and fill its contents.

It would be nice to has a formCheckbox macro for a single checkbox.

Indeed, it would be more flexible for:
* choosing where we want to put the label
* linking the input to a label element (not possible with the second solution because there is no id attribute).",,;04/Aug/09 11:16 PM;arjen.poutsma;360,,,,,,,,,,,,,,0,0,360,"9,223,372,036,854,775,807%",0,0,360,,,,,,,,,,,,,,,04/Aug/09 9:50 PM;david_syer;SPR-4700-ftl.patch;https://jira.spring.io/secure/attachment/15588/SPR-4700-ftl.patch,04/Aug/09 10:59 PM;david_syer;SPR-4700-vm.patch;https://jira.spring.io/secure/attachment/15589/SPR-4700-vm.patch,14/Apr/08 4:34 AM;yabon;velocity-freemarker-single-checkbox.patch;https://jira.spring.io/secure/attachment/13938/velocity-freemarker-single-checkbox.patch,,,,,,,,,9936000,,,,,2008-09-20 08:12:50.858,16477,true,issuemaster(issuemaster),,,,0|i016vz:,6993,7704,,,,,"14/Apr/08 4:34 AM;yabon;A patch for adding this feature with documentation update.
The binding works for boolean fields (the main case with false/true) and String fields (null/""true"").",20/Sep/08 8:12 AM;candrews;The addition of single checkbox boolean binding would be really great... Just pinging this item because it's been dormant for a while.,"12/Nov/08 4:34 AM;marianogo;I have this solution 

  <#macro formCheckbox path label attributes="""">
     <@spring.bind path/>
     <#assign id=""${spring.status.expression}"">
     <#assign status=""${spring.stringStatusValue}"">
     <input type=""checkbox"" id=""${id}"" name=""${id}""
     <#if status=""true"">checked=""checked""</#if> ${attributes}
     <@spring.closeTag/>
     <label for=""${id}"">${label?html}</label>
  </#macro>","14/Jan/09 11:13 PM;vkozlov;mariano,

your solution works only for rendering (if checkbox was initially checked and after them unchecked on the webpage, new value is not posted back to controller). So, handling of FALSE is needed.

I modified your code according to http://opensource.atlassian.com/confluence/spring/display/COOK/Checkboxes+-+Dealing+with+single+checkboxes (i.e. added one line with hidden input: )

<#macro formCheckbox path attributes="""">
    <@spring.bind path />
     <#assign id=""${spring.status.expression}"">
     <#assign status=""${spring.stringStatusValue}"">    
	<input type=""hidden"" name=""_${id}"" value=""false"" />
    <input type=""checkbox"" id=""${id}"" name=""${id}""
        <#if spring.status.value>checked=""checked""</#if>
        ${attributes}
    <@spring.closeTag/>
</#macro>

Now it works in both cases.",04/Aug/09 9:50 PM;david_syer;Attached patch for Freemarker only (SPR-4700-ftl.patch) with slightly different implementation and a test case.  Patch is against spring-webmvc project 3.0.0 (r 1674).  I'll try to do the Velocity one as well the same way.,04/Aug/09 10:59 PM;david_syer;Attached velocity patch (with test cases) SPR-4700-vm.patch,04/Aug/09 11:16 PM;arjen.poutsma;Patches applied.,14/Jan/19 8:37 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#9377|https://github.com/spring-projects/spring-framework/issues/9377]. ,,,,,,,,,,,,,,,
Provide support for session/request scoped beans for integration testing,SPR-4588,21135,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,david@davidkarlsen.com,david@davidkarlsen.com,15/Mar/08 5:00 AM,15/Jan/19 5:26 PM,10/May/19 2:37 AM,13/Oct/12 10:58 AM,2.5.2,,,,,,3.2 RC1,,,Test,Web,,,,11,,"h4. Overview

It would be very handy if Spring could provide support for {{session}} and {{request}} scoped beans for integration testing (e.g. in the TestContext framework).

h4. Further Resources

- Forum discussions
-- http://forum.springframework.org/archive/index.php/t-40257.html
-- http://forum.springsource.org/showthread.php?27933-Testing-scope-session/page2
-- http://forum.springsource.org/showthread.php?50722-Integration-tests-with-mocked-session/page2
- Spring Batch's {{StepScopeTestExecutionListener}}
-- [source code|https://github.com/SpringSource/spring-batch/blob/master/spring-batch-test/src/main/java/org/springframework/batch/test/StepScopeTestExecutionListener.java]
-- [reference manual|http://static.springsource.org/spring-batch/reference/html-single/index.html#d0e7538]
",,,,,,,,,,,,,,,,,0,14400,,,0,14400,,SPR-5243,,,,,SPR-4524,,,,,,,,26/May/08 11:12 AM;david@davidkarlsen.com;AbstractJUnit4SpringWebContextTests.java;https://jira.spring.io/secure/attachment/14105/AbstractJUnit4SpringWebContextTests.java,,,,,,,,,,,9936000,,,,,2009-08-24 20:34:31.412,16516,true,issuemaster(issuemaster),,,,0|i02rdb:,16143,309,,,,,"15/Mar/08 5:14 AM;david@davidkarlsen.com;There's also a thread on the forum related to this: http://forum.springframework.org/archive/index.php/t-40257.html .
We're getting around it by using a prototype instead during testing (or just inserting a bean ourselves) - but I'd prefer a OOTB solution.",27/Mar/08 4:15 AM;david@davidkarlsen.com;Did I hear a fix-version 2.5.3? ;-),23/Apr/08 9:21 PM;david@davidkarlsen.com;This discussion is relevant and points on some ways to solve this: http://forum.springframework.org/showthread.php?t=27933,26/May/08 11:12 AM;david@davidkarlsen.com;Attached is a somewhat naive approach which could be further refined.,"24/Aug/09 8:34 PM;stefan.scheidt@opitz-consulting.de;There's a forum thread showing a solution that works with Spring TestContext and uses a custom context loader in @ContextConfiguration, see: http://forum.springsource.org/showthread.php?t=50722&page=2
 ",25/May/11 3:51 AM;magott;Spring Batch uses a custom TestExecutionListener to test step scoped components: http://static.springsource.org/spring-batch/reference/html-single/index.html#d0e7538 A similar approach for session and request scopes would make sense?,"13/Oct/12 10:58 AM;sbrannen;GitHub [commit 21ebbb9c02|https://github.com/SpringSource/spring-framework/commit/21ebbb9c028c5ac05f9d541d87b53b08bb021818] introduces {{RequestAndSessionScopedBeansWacTests}} which verifies support for request and session scoped beans in the Spring TestContext Framework (TCF).

This support was actually introduced as an intentional side effect of the work performed for SPR-5243 through the addition of the new {{ServletTestExecutionListener}}.","29/Jan/14 5:24 PM;dlazerka;Attached file has non-static @BeforeClass method, which JUnit 4.11 doesn't accept. But it's not possible to make it static, because it uses non-static applicationContext.","31/Jan/14 1:29 PM;sbrannen;[~dlazerka], that's correct: the code in the {{AbstractJUnit4SpringWebContextTests}} attachment does not work, but fear not: this issue was resolved in October 2013. Thus, there is no need for such custom solutions beginning with Spring Framework 3.2.

Please see the [Testing request and session scoped beans|http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/testing.html#testcontext-web-scoped-beans] section of the reference manual for details.

Regards,

Sam",14/Jan/19 8:37 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#9265|https://github.com/spring-projects/spring-framework/issues/9265]. ,,,,,,,,,,,,,
Support MultipartFile-array property,SPR-2784,15386,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,juergen.hoeller,mwinkels,mwinkels,31/Oct/06 7:26 PM,15/Jan/19 5:25 PM,10/May/19 2:37 AM,15/Aug/10 3:53 PM,2.0 final,,,,,,3.0.4,,,Web,,,,,7,,"When posting multiple non-file form fields with the same name, the CommonsMultipartResolver(as CommonsFileUploadSupport ) recognizes this as an array property. When posting multiple file form fields with the same name, the property value is overwritten. If the same logic would be applied, a bean could be populated with a MulitpartFile[] property.

exmaple:

public class Bean {
  private String aString;
  private String[] aStringArray;
  private MultipartFile aFile;
  private MulitpartFile[] aFileArray;
}

<form>
  <input name=""aString"" type=""text""/>
  <input name=""aStringArray"" type=""text""/>
  <input name=""aStringArray"" type=""text""/>
  <input name=""aFile"" type=""file""/>
  <input name=""aFileArray"" type=""file""/>
  <input name=""aFileArray"" type=""file""/>
</form>

if this forms is processed with the CommonsMultipartResolver, the String and String[] properties will be populated correctly (containing the two values in he array), the MultipartFile property will be filled correctly, but the MultipartFile[] property will contain only the last file.",,;04/Aug/09 11:09 PM;arjen.poutsma;660,;06/Aug/09 10:27 PM;arjen.poutsma;11460,;27/Aug/09 8:15 PM;arjen.poutsma;25500,,,,,,,,,,,,,0,37620,,,0,37620,,,,,,,,,,,,,,,31/Oct/06 10:37 PM;mwinkels;patch.txt;https://jira.spring.io/secure/attachment/12079/patch.txt,,,,,,,,,,,9936000,,,,,2009-05-07 06:55:59.768,17261,true,issuemaster(issuemaster),,,,0|i015an:,6735,3090,,,,,"31/Oct/06 10:37 PM;mwinkels;The attached patch implements this improvement for commons-upload. It seems that COS doesn't support file parts with the same name, thus the feature cannot be implemented there.","07/May/09 6:55 AM;john.dunlap;As I understand it, COS support was removed from Spring in 2.5. That being the case, would it be possible to get this implemented?","26/Aug/09 7:42 PM;alacazam;Hi There, Love to see this one fixed, as it limits the ability to do multiple flie multipart uploads from Adobe Flex. Yes their are some workarounds ... http://dhruba.name/2008/12/27/implementing-single-and-multiple-file-multipart-uploads-using-spring-25/ . But we really shouldn't need these. Cheers Cameron","27/Aug/09 8:17 PM;arjen.poutsma;Fixed. The MultipartRequest now has a List<MultipartFile> getFiles(String) method, as well as a MultiValueMap<String, MultipartFile> getMultiFileMap() method.","07/Jul/10 4:32 AM;jonyfive;bindMultipartFiles is not using the news methods getFiles(String) and getMultiFileMap(), in this way the property ""aFileArray"" is not bound correctly.","07/Jul/10 4:49 AM;juergen.hoeller;Reopened for revisiting DataBinder's MultipartFile support.

Juergen","07/Jul/10 5:12 AM;jonyfive;If someone wants to check this error:

public class Bean {MulitpartFile[] aFileArray;}

<form>
<input name=""aFileArray"" type=""file"" multiple=""multiple""/>
</form>

This only fill the first file.","15/Aug/10 3:53 PM;juergen.hoeller;Finally fixed for 3.0.4: WebDataBinder and @MVC request params detect and introspect MultipartFile arrays as well.

Juergen","15/Sep/10 5:42 AM;lbois;Hi

I recently downloaded Spring 3.0.4 from http://www.springsource.com/download/community?sid=723222
Upgraded my project 

And i need to do multi file upload in a spring webflow

I tried 
public class MultipartFileHandler {

  MultipartFile[] files;

  public void setFiles(MultipartFile[] files) {
      this.files = files;
  }

  public MultipartFile[] getFiles() {
      return files;
  }

  public MultiPartFileUploadHandler processFiles() {
    if (files != null && files.length > 0) {
      for (int i = 0 ; i < files.length; i++ ) {
        System.out.println(""============= "" + i + "" ============="");
        System.out.println("" Processing file "" + files[i].getOriginalFilename() + "" / "" + files[i].getContentType() );
      }
    }
  }  
}


In the HTML form :

<form:form modelAttribute=""fileUploadHandler"" method=""post"" enctype=""multipart/form-data"">

        <p>Type: <input type=""hidden"" name=""type"" value=""genericFileMulti"" size=""60"" /></p>
        <p>File (Use CTRL Click to select multiple files): <input type=""file"" name=""files"" multiple="""" /></p>
</form:form>

I use the tip for Firefox 3.6 
<input type=""file"" multiple=""""/>

src http://hacks.mozilla.org/2009/12/multiple-file-input-in-firefox-3-6/

But this doesn't work on server side (method processFiles from the Model above MultipartFileHandler)... i only get the first file from the selected files chosen in the file picker from the HTML form

Thanks for your help
","15/Sep/10 6:07 AM;lbois;I also changed the HTML form, cf beginning of this thread.

       <form:form modelAttribute=""fileUploadHandler"" method=""post"" enctype=""multipart/form-data"">
        <p>File (2): <input type=""file"" name=""files"" size=""60""  /></p>
        <p>File (3): <input type=""file"" name=""files"" size=""60""  /></p>
 
</form:form>

Stil have the problem ...only the first file of the list is handled.

Laurent","12/Nov/10 5:20 PM;sslavic;I've just created improvement request SWF-1422, to have this same feature available in Spring Webflow - anyone interested, please vote for that ticket.

I wonder why haven't ""MultipartFile getFile(String name)"" and ""Map<String, MultipartFile> getFileMap()"" methods in org.springframework.web.multipart.MultipartRequest been at least marked as deprecated if not removed, since getFiles and getMultiFileMap seem to cover well both case with single and multiple MultipartFile values per request parameter name.",14/Jan/19 8:36 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#7471|https://github.com/spring-projects/spring-framework/issues/7471]. ,,,,,,,,,,,
ConfigurationSupport.getObject() should not throw Exception,SJC-168,23743,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Minor,Fixed,cbeams,grzegorzborkowski,grzegorzborkowski,24/Aug/08 9:37 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,27/Aug/08 1:20 PM,1.0.0.M4,,,,,,1.0.0.M4,,,Public API,,,,,0,,"I followed the suggested way of configuration of Maven repositories described in last comments to SJC-96 and pointed Maven to snapshots repositories as described there.
However, now compiler underlines usage of method getObject from ConfigurationSupport, saying that it declares ""throws Exception"" and I have to deal with this Exception. What's wrong with it?",,;27/Aug/08 1:23 PM;cbeams;5400,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,SJC-148,,,27/Aug/08 1:46 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14605/mylyn-context.zip,,,,,,,,,,,337564800,,,,,2008-08-27 13:13:26.737,5212,true,cbeams(cbeams),,,,0|i0538n:,29731,25795,,,,,"27/Aug/08 1:13 PM;cbeams;Hi Grzegorz,

Not really a bug as this was originally by design, but it is a good improvement request to have ConfigurationSupport#getObject() wrap and re-throw any exceptions thrown from the underlying call to FactoryBean#getObject().  This will save @Bean methods from having to unnecessarily propagate 'throws Exception' everywhere.","27/Aug/08 1:20 PM;cbeams;ConfigurationSupport#getObject() now catches any Exception thrown from the underlying call to FactoryBean#getObject(), wraps and rethrows as an (unchecked) FactoryBeanObjectCreationException

Fixed in rev. 783",,,,,,,,,,,,,,,,,,,,,
Provide support equivalent to <context:annotation-config/>,SJC-161,23631,,New Feature,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,15/Aug/08 4:37 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,23/Sep/08 5:06 AM,,,,,,,1.0.0.M4,,,Plugins,,,,,0,,"Proposed:

@AnnotationDrivenConfig
@Configuration
public class AppConfig {
	// ... @Bean declarations...
}

Note that naming is not exactly 1:1 with the namespace element <context:annotation-config/> mainly to help distinguish between 'annotation-driven configuration' and annotation-driven transaction management'.  The latter annotation will probably look like: @AnnotationDrivenTx.  See SJC-96 for more on that.",,;15/Aug/08 8:03 AM;cbeams;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,SPR-5102,,,,,,,,,,,SJC-88,15/Aug/08 7:59 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14544/mylyn-context.zip,,,,,,,,,,,338601600,,,,,,5219,true,cbeams(cbeams),,,,0|i0532f:,29703,25731,,,,,"15/Aug/08 7:59 AM;cbeams;Works as advertised above.

Note that @Required is NOT supported automatically when declaring this annotation (unlike <context:annotation-config/>). See SJC-91 for additional details as to why.",,,,,,,,,,,,,,,,,,,,,,
Make @Configuration annotation mandatory,SJC-140,22683,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,19/Jun/08 6:36 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,19/Jun/08 11:36 AM,,,,,,,1.0.0.M4,,,Internals,Public API,,,,0,,"Currently, declaring the @Configuration annotation is optional.*

This has one advantage:

1) Simpler to declare configuration classes, less code to write

And  a number of downsides:

1) The implementation has to jump through hoops to determine whether a class is a candidate Configuration class.  In the implicit case (no @Configuration annotation provided), each class must be inspected for @Bean/@ExternalBean/@ExternalValue/@AutoBean methods.  This is not only less performant, but creates considerable complexity within the internals.

See: https://fisheye.springframework.org/browse/spring-javaconfig/trunk/org.springframework.config.java/src/main/java/org/springframework/config/java/internal/util/ConfigurationUtils.java?r=664
https://fisheye.springframework.org/browse/spring-javaconfig/trunk/org.springframework.config.java/src/main/java/org/springframework/config/java/process/ConfigurationBeanDefinitionDecoratingBeanFactoryPostProcessor.java?r=669

2) I believe it's actually less intuitive.  It would be better to have a consistent programming model where users simply must declare @Configuration.  I also have a gut feeling that most users do this anyway.  e.g.: most forum postings and issue reports I see have @Configuration on their config classes.

On the whole, I believe the downsides outweigh the benefit.

Of course, this will create breakage for anyone using the implicit form, but now is the time to do that (pre-1.0 GA).


* This is only partially true.  In the case of component scanning for configuration classes, they currently must be appropriately annotated (that's how the ClassPathScanningComponentProvider filters for them).  This is yet one more reason we should simply make the annotation required, IMO, if only for consistency's sake.",,;19/Jun/08 11:36 AM;cbeams;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,19/Jun/08 11:36 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14207/mylyn-context.zip,19/Jun/08 10:17 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14206/mylyn-context.zip,,,,,,,,,,343526400,,,,,,5240,true,cbeams(cbeams),,,,0|i053a7:,29738,25809,,,,,"19/Jun/08 11:36 AM;cbeams;Resolved, see checkin comments for details.",,,,,,,,,,,,,,,,,,,,,,
Support @ExternalValue on fields,SJC-133,22591,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,14/Jun/08 2:42 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,15/Jun/08 3:24 AM,,,,,,,1.0.0.M4,,,Public API,,,,,0,,"Proposed:

@Configuration
@ResourceBundles(""settings/datasource"")
public class Config {
    private @ExternalValue String jdbcUrl;

    public @Bean DataSource dataSource() {
        return new DriverManagerDataSource(jdbcUrl, ...);
    }
}

The approach above will complement the existing support for @ExternalValue-annotated methods.

It will have the advantage of being more concise and intuitive.

It will have the disadvantage of being incapable of supporting dynamically-updated ValueSource implementations (e.g.: backed by database)

The combination of both options will offer the best of both worlds.  The best practice would be to use the field option, unless the dynamic nature of the method approach is necessary.",,;15/Jun/08 3:25 AM;cbeams;18000,,,,,,,,,,,,,,,0,18000,,,0,18000,,,,,,,,,,,,,,,15/Jun/08 3:24 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14180/mylyn-context.zip,,,,,,,,,,,343872000,,,,,,5247,true,cbeams(cbeams),,,,0|i02m73:,15305,14543,,,,,"15/Jun/08 3:24 AM;cbeams;Complete.  The above proposal works as expected, see

org.springframework.config.java.internal.factory.ExternalValueInjectingBeanPostProcessorTests (unit test)
systest.feature.externalvalue.field.ExternalValueOnFieldsTests (system test)

for details",,,,,,,,,,,,,,,,,,,,,,
Eliminate and/or suppress any warnings as appropriate,SJC-130,22557,,Task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,11/Jun/08 3:12 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,19/Jun/08 12:00 PM,,,,,,,1.0.0.M4,,,,,,,,0,,A number of warnings exist throughout the codebase.  Eliminate them.,,;18/Jun/08 10:28 AM;cbeams;1800,;19/Jun/08 12:01 PM;cbeams;3600,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,19/Jun/08 12:00 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14208/mylyn-context.zip,,,,,,,,,,,343526400,,,,,,5249,true,cbeams(cbeams),,,,0|i05333:,29706,25753,,,,,19/Jun/08 12:00 PM;cbeams;Resolved.  Codebase is at zero warnings.,,,,,,,,,,,,,,,,,,,,,,
Multiple @ResourceBundles declarations causes IllegalStateException,SJC-129,22555,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,11/Jun/08 8:17 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,11/Jun/08 1:02 PM,1.0.0.M4,,,,,,1.0.0.M4,,,,,,,,0,,"[Thanks to Baruch for his original forum post related to this issue at http://forum.springframework.org/showthread.php?p=185875]


Running the following test produces the stack trace below:

public class ResourceBundlesBugTests {
    public @Test void test() {
        JavaConfigApplicationContext ctx = new JavaConfigApplicationContext(Config1.class, Config2.class);
        assertThat(ctx.getBean(TestBean.class).getName(), equalTo(""foo""));
    }

    @ResourceBundles(""issues/config1"")
    public static class Config1 {
        public @Bean Object bar() { return new Object(); }
    }

    @ResourceBundles(""issues/config2"")
    public static class Config2 {
        public @Bean TestBean foo() { return new TestBean(""foo""); }
    }
}


Cause:

Line 134 of ConfigurationModelBeanDefinitionReader registers a new singleton named valueSource without checking to see if it already exists.




-- Error Log from JUnit --
Class: issues.ResourceBundlesBugTests
Method: test
Actual: null
Expected: null
Stack Trace:
java.lang.IllegalStateException: Could not register object [org.springframework.config.java.valuesource.MessageSourceValueSource@3d4c49] under bean name 'valueSource': there is already object [org.springframework.config.java.valuesource.MessageSourceValueSource@5b5783] bound
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.registerSingleton(DefaultSingletonBeanRegistry.java:123)
	at org.springframework.config.java.internal.factory.support.ConfigurationModelBeanDefinitionReader.loadBeanDefinitionsForResourceBundles(ConfigurationModelBeanDefinitionReader.java:137)
	at org.springframework.config.java.internal.factory.support.ConfigurationModelBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationModelBeanDefinitionReader.java:87)
	at org.springframework.config.java.internal.factory.support.ConfigurationModelBeanDefinitionReader.loadBeanDefinitions(ConfigurationModelBeanDefinitionReader.java:73)
	at org.springframework.config.java.internal.factory.support.AbstractJavaConfigBeanDefinitionReader.loadBeanDefinitionsFromModel(AbstractJavaConfigBeanDefinitionReader.java:76)
	at org.springframework.config.java.internal.factory.support.AbstractJavaConfigBeanDefinitionReader.loadBeanDefinitions(AbstractJavaConfigBeanDefinitionReader.java:54)
	at org.springframework.config.java.internal.process.InternalConfigurationPostProcessor.parseAnyConfigurationClasses(InternalConfigurationPostProcessor.java:104)
	at org.springframework.config.java.internal.process.InternalConfigurationPostProcessor.postProcessBeanFactory(InternalConfigurationPostProcessor.java:56)
	at org.springframework.config.java.context.JavaConfigApplicationContext.invokeBeanFactoryPostProcessors(JavaConfigApplicationContext.java:85)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
	at org.springframework.config.java.context.JavaConfigApplicationContext.<init>(JavaConfigApplicationContext.java:54)
	at issues.ResourceBundlesBugTests.__CLR2_3_1zi4lt36cl(ResourceBundlesBugTests.java:15)
	at issues.ResourceBundlesBugTests.test(ResourceBundlesBugTests.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)
	at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)
	at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

",,;11/Jun/08 1:06 PM;cbeams;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,11/Jun/08 12:36 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14173/mylyn-context.zip,,,,,,,,,,,344217600,,,,,,5250,true,cbeams(cbeams),,,,0|i0536n:,29722,25777,,,,,11/Jun/08 12:36 PM;cbeams;Attaching context associated with revision 605,"11/Jun/08 1:02 PM;cbeams;Resolved, also ensuring that ordering of @ResourceBundles works as expected across multiple @Configuration classes.",,,,,,,,,,,,,,,,,,,,,
Improve presentation of usage errors,SJC-122,22411,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Won't Fix,cbeams,cbeams,cbeams,30/May/08 6:11 AM,13/Aug/10 4:23 PM,10/May/19 2:37 AM,18/Aug/09 4:05 AM,,,,,,,1.0 M1,,,,,,,,0,,"Thanks to work completed in SJC-98, JavaConfig now sports a much more robust error-handling model.  Any errors related to parsing @Configuration classes are aggregated and displayed to the user in one single exception, much like the way a compiler displays syntax errors.

However, these errors are currently rather primitive-looking, and not too user-friendly.  The presentatation of errors should be improved for readability and utility.

Note that when SJC-103 is complete, these errors will even be able to display line numbers next to parsing/syntax errors.",,;06/Jun/08 3:58 PM;cbeams;43200,;09/Jun/08 4:02 PM;cbeams;32400,,,,,,,,,,,,,0,0,75600,"9,223,372,036,854,775,807%",0,0,75600,,,,,,,,,,,,,,,09/Jun/08 3:43 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14167/mylyn-context.zip,06/Jun/08 3:57 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14153/mylyn-context.zip,05/Jun/08 9:08 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14146/mylyn-context.zip,,,,,,,,,306806400,,,,,,5257,true,cbeams(cbeams),,,,0|i052vz:,29674,25696,,,,,05/Jun/08 9:08 AM;cbeams;attaching context,06/Jun/08 3:57 PM;cbeams;Attaching context associated with revision 601,"09/Jun/08 3:43 PM;cbeams;+ Attached latest context
+ Changed name of issue to 'Improve presentation of usage errors' to reflect the UsageError hierarchy in the codebase","18/Aug/09 4:05 AM;cbeams;Complete, but implemented in Spring Core (SPR), not in JavaConfig (SJC)",,,,,,,,,,,,,,,,,,,
JPA-related exceptions being thrown on ApplicationContext close,SJC-121,22396,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Minor,Fixed,cbeams,cbeams,cbeams,29/May/08 8:07 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 5:24 AM,,,,,,,,,,,,,,,0,,"See attached stack trace.  The exceptions are non fatal, i.e.: all tests pass, but are irritating and suggest a potentially critical problem lying in wait.

I noticed that some user-submitted test cases were exhibiting these same errors.  If I added the 1.0 version of the JPA API to their classpath, the problem goes away.  However, this is not the case with JavaConfig core.  Adding JPA to the pom appears to have no effect.",,;30/May/08 7:26 AM;cbeams;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,30/May/08 5:24 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14130/mylyn-context.zip,29/May/08 8:08 PM;cbeams;stacktrace.txt;https://jira.spring.io/secure/attachment/14125/stacktrace.txt,,,,,,,,,,345254400,,,,,,5258,true,cbeams(cbeams),,,,0|i03mkn:,21199,25804,,,,,30/May/08 5:24 AM;cbeams;Eliminated optional dependency on spring-orm and the issue went away. Exact cause remains unknown.,,,,,,,,,,,,,,,,,,,,,,
Support attributing metadata to @Bean declarations,SJC-119,22391,,New Feature,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Minor,Fixed,cbeams,cbeams,cbeams,29/May/08 4:37 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,29/May/08 4:42 AM,,,,,,,1.0.0.M4,,,Compatibility,Public API,,,,0,,"As XML configuration supports <meta/> elements within <bean/> elements, so should JavaConfig support attributing metadata.

Approach:

@Configuration
public class MyConfig {
    @Bean(meta={@Meta(key=""key1"", value=""value1""), @Meta(key=""key2"", value=""value2"")})
    public Object beanWithMetadata() {
        return ...
    }
}

",,;29/May/08 5:27 AM;cbeams;5400,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,29/May/08 4:42 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14122/mylyn-context.zip,,,,,,,,,,,345254400,,,,,,5260,true,cbeams(cbeams),,,,0|i0537j:,29726,25786,,,,,"29/May/08 4:42 AM;cbeams;This functionality was actually implemented some time ago, but a) never documented and b) regressed after implementing SJC-87.  It is now fully functional once again.","30/May/08 1:47 PM;cbeams;Updated code example, 'name' attribute to @Meta annotation is now 'key' for consistency with XML",,,,,,,,,,,,,,,,,,,,,
Eager BeanPostProcessor propagation short-circuits @Autowired functionality,SJC-118,22359,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,28/May/08 4:33 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,28/May/08 2:04 PM,1.0.0.M3,,,,,,1.0.0.M4,,,,,,,,0,,"Per jbaruch's original test case submission at http://forum.springframework.org/showthread.php?p=182914


-- Error Log from JUnit --
Class: issues.sjc118.BppTest
Method: testBppInjection
Actual: null
Expected: null
Stack Trace:
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:203)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:255)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:93)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:130)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoBean': Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public final issues.sjc118.Bean issues.sjc118.SpringConfig$$EnhancerByCGLIB$$ec4b4c6f.demoBean()] threw exception; nested exception is java.lang.IllegalArgumentException: ConfigurationSupport must be injected before calling this
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:901)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:815)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:96)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:44)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:173)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:199)
	... 16 more
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public final issues.sjc118.Bean issues.sjc118.SpringConfig$$EnhancerByCGLIB$$ec4b4c6f.demoBean()] threw exception; nested exception is java.lang.IllegalArgumentException: ConfigurationSupport must be injected before calling this
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:127)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:414)
	... 34 more
Caused by: java.lang.IllegalArgumentException: ConfigurationSupport must be injected before calling this
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at issues.sjc118.SpringConfig.demoBean(SpringConfig.java:22)
	at issues.sjc118.SpringConfig$$EnhancerByCGLIB$$ec4b4c6f.CGLIB$demoBean$0(<generated>)
	at issues.sjc118.SpringConfig$$EnhancerByCGLIB$$ec4b4c6f$$FastClassByCGLIB$$a7fe1fb4.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:167)
	at org.springframework.config.java.internal.enhancement.CglibConfigurationEnhancer$BeanMethodInterceptor.doIntercept(CglibConfigurationEnhancer.java:252)
	at org.springframework.config.java.internal.enhancement.CglibConfigurationEnhancer$AbstractMethodInterceptor.intercept(CglibConfigurationEnhancer.java:116)
	at issues.sjc118.SpringConfig$$EnhancerByCGLIB$$ec4b4c6f.demoBean(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:115)
	... 35 more

",,;28/May/08 2:06 PM;cbeams;28800,,,,,,,,,,,,,,0,0,28800,"9,223,372,036,854,775,807%",0,0,28800,,,,,,,,,,,,SJC-22,,,28/May/08 2:04 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14114/mylyn-context.zip,,,,,,,,,,,345427200,,,,,,5261,true,cbeams(cbeams),,,,0|i053c7:,29747,25827,,,,,"28/May/08 1:49 PM;cbeams;When initializing the JavaConfigBeanFactory, InternalConfigurationPostProcessor propagates BeanPostProcessor beans from the parent (external) BeanFactory to the new internal factory.  This causes premature instantiation of baruch's ConfigurationSupportInjector BPP.  'Premature' in the sense that it's instantiated before the BPPs related to autowiring are instantiated.  So, during instantiation, the beanfactory is asked whether it has any autowire-capbable BPPs and the answer (at that time) is 'no'.

Long story short, I've reworked the implementation so that this explicit / early propagation of BPPs does not need to happen at all:  DefaultJavaConfigBeanFactory now overrides getBeanPostProcessors() such that it always merges it's parent BeanFactory's BPPs with it's own.  This is more in alignment with the semantics of JCBF / DJCBF anyway - that it effectively 'merges' two bean factories into one for the purpose of enabling bean hiding in a relatively seamless fashion.","28/May/08 2:04 PM;cbeams;Resolved as of revision 572.

Baruch - thanks for taking the time to submit this: it resulted in a number of important improvements and fixes to the codebase.  Your testcase should work as submitted now, please do give it a try and let me know if there are any issues.

Note that if you build from source, the repository has changed: https://src.springframework.org/svn/spring-javaconfig/trunk

The nightly snapshot build will be available w/in 24 hours as well: http://s3browse.com/explore/maven.springframework.org/snapshot/org/springframework/config/java/spring-javaconfig/1.0.0.m4-SNAPSHOT/
",,,,,,,,,,,,,,,,,,,,,
Point SJC Bamboo at src.springframework.org,SJC-116,22345,22339,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,27/May/08 4:08 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 7:29 AM,,,,,,,,,,,,,,,0,,,,;30/May/08 7:29 AM;cbeams;900,,,,,,,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,345254400,,,,,,5263,true,cbeams(cbeams),,,,0|i03myn:,21262,25815,,,,,"30/May/08 7:29 AM;cbeams;Done, for both TRUNK and NIGHTLY build plans.",,,,,,,,,,,,,,,,,,,,,,
Point SJC FishEye at src.springframework.org SVN,SJC-115,22344,22339,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,tmarshall,cbeams,cbeams,27/May/08 4:06 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 9:55 AM,,,,,,,,,,,,,,,0,,"https://fisheye.springframework.org/browse/spring-javaconfig/ currently points to https://springframework.svn.sourceforge.net/svnroot/springframework/spring-javaconfig

and should now point to http://src.springframework.org/spring-javaconfig",,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,345254400,,,,,,18699,true,cbeams(cbeams),,,,0|i03mz3:,21264,25768,,,,,30/May/08 9:55 AM;cbeams;Done,,,,,,,,,,,,,,,,,,,,,,
No bean named '_exceptionTranslationFilter' is defined,SJC-113,22218,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,moldarion,moldarion,20/May/08 7:43 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,29/May/08 8:32 PM,1.0.0.M3,,,,,,1.0.0.M4,,,Internals,Public API,,,,1,,"See http://forum.springframework.org/showthread.php?p=181230

Spring JavaConfig in conjunction with Spring Security prevents Appplication Context to start.

ERROR - TestContextManager.prepareTestInstance(258): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@af5350] to prepare test instance [spring.security.bug.ExceptionTranslationFilterTest@86d315]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:203)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:255)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:93)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:130)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named '_exceptionTranslationFilter' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:387)
	at org.springframework.security.config.HttpSecurityConfigPostProcessor.injectAuthenticationEntryPointIntoExceptionTranslationFilter(HttpSecurityConfigPostProcessor.java:128)
	at org.springframework.security.config.HttpSecurityConfigPostProcessor.postProcessBeanFactory(HttpSecurityConfigPostProcessor.java:38)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:501)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
	at org.springframework.config.java.process.ConfigurationProcessor$2.onApplicationEvent(ConfigurationProcessor.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster$1.run(SimpleApplicationEventMulticaster.java:78)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:76)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:275)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:737)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:384)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:96)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:44)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:173)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:199)
	... 20 more
","Mac OS X 10.5, Maven 2.0.9, Spring 2.5.4, Spring JavaConfig 1.0.0.m3",;29/May/08 8:45 PM;cbeams;28800,,,,,,,,,,,,,,,0,28800,,,0,28800,,,SJC-119,,,,,,,,,SJC-22,SJC-47,,20/May/08 7:44 AM;moldarion;exceptionTranslationFilter.tgz;https://jira.spring.io/secure/attachment/14070/exceptionTranslationFilter.tgz,29/May/08 8:32 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14126/mylyn-context.zip,,,,,,,,,,345254400,,,,,2008-05-21 07:33:25.214,5264,true,cbeams(cbeams),,,,0|i034af:,18237,17582,,,,,20/May/08 7:44 AM;moldarion;Maven project containing JUnit test case to reproduce the bug,21/May/08 7:33 AM;luke;JavaConfig is still pre-release and as such I can't see that this is a critical bug in Spring Security.,22/May/08 2:58 AM;luke;This issue appears to be related to the use of JavaConfig. If someone can produce a test case which is independent of JavaConfig I'll take a look at it. Otherwise we'll move this issue to that project.,"25/May/08 2:40 PM;joshjdevl;I'm also experiencing this issue using Grails v1.0.2
If I use the same exact config with plan Spring MVC I don't receive this error.
It appears to me ( I may be wrong) that it has to do something with refreshing the spring context...

my securityContext.xml (where myApplicationContext.xml defines our services,daos, and spring security config)

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
        xmlns:sec=""http://www.springframework.org/schema/security""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:util=""http://www.springframework.org/schema/util""
        xmlns:context=""http://www.springframework.org/schema/context""
        xmlns:aop=""http://www.springframework.org/schema/aop""
        xsi:schemaLocation=""
                        http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                        http://www.springframework.org/schema/util    http://www.springframework.org/schema/util/spring-util-2.5.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd"">

  
       <import resource=""classpath:myApplicationContext.xml"" />

      
      
        <sec:http auto-config=""true"">
             <sec:intercept-url pattern=""/**"" access=""ROLE_SUPERVISOR""/>
        </sec:http>
       
    <sec:authentication-provider user-service-ref=""userDetailsDao""/>


</beans>


Grails refreshes the spring context which is why I'm thinking it has something to do with the refresh...
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
    at org.codehaus.groovy.grails.commons.spring.GrailsWebApplicationContext.refresh(GrailsWebApplicationContext.java:141)


The full stacktrace...
[34764] StackTrace Sanitizing stacktrace:
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named '_exceptionTranslationFilter' is defined
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:387)
    at org.springframework.security.config.HttpSecurityConfigPostProcessor.injectAuthenticationEntryPointIntoExceptionTranslationFilter(HttpSecurityConfigPostProcessor.java:128)

    at org.springframework.security.config.HttpSecurityConfigPostProcessor.postProcessBeanFactory(HttpSecurityConfigPostProcessor.java:38)
    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:501)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
    at org.codehaus.groovy.grails.commons.spring.GrailsWebApplicationContext.refresh(GrailsWebApplicationContext.java:141)
    at org.codehaus.groovy.grails.commons.spring.DefaultRuntimeSpringConfiguration.getApplicationContext(DefaultRuntimeSpringConfiguration.java:130)
    at org.codehaus.groovy.grails.commons.spring.GrailsRuntimeConfigurator.configure(GrailsRuntimeConfigurator.java:277)
    at org.codehaus.groovy.grails.commons.spring.GrailsRuntimeConfigurator.configure(GrailsRuntimeConfigurator.java:242)
    at org.codehaus.groovy.grails.web.context.GrailsConfigUtils.configureWebApplicationContext(GrailsConfigUtils.java:107)
    at org.codehaus.groovy.grails.web.context.GrailsContextLoader.createWebApplicationContext(GrailsContextLoader.java:50)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)
    at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:530)
    at org.mortbay.jetty.servlet.Context.startContext(Context.java:135)
    at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1218)
    at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:500)
    at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
    at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:117)
    at org.mortbay.jetty.Server.doStart(Server.java:220)
    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:86)
    at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:226)
    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:899)
    at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:946)
    at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:740)
    at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:765)
    at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:753)
    at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:167)
    at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethod0(ScriptBytecodeAdapter.java:195)
    at RunApp_groovy$_run_closure2_closure7.doCall(RunApp_groovy:68)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)","27/May/08 1:44 PM;cbeams;I've verified that this is a JavaConfig issue.  As Spring Security is not at fault here, we'll move this issue to the SJC project shortly.","28/May/08 5:03 AM;injecteer;My set-up:

Grails 1.0.2, SpringSecurity 2.0 (isolated from Grails), SJC is NOT used (at least explicitly)

Here's my ctx:

<?xml version=""1.0"" encoding=""UTF-8""?>
<b:beans xmlns:b=""http://www.springframework.org/schema/beans""
       xmlns=""http://www.springframework.org/schema/security""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd"">

  <http access-denied-page=""/accessDenied.gsp"">
    <intercept-url pattern=""/abstractpoi/delete/**"" access=""ROLE_USER, ROLE_ADMIN"" />
    <intercept-url pattern=""/abstractpoi/createpoi/**"" access=""ROLE_USER, ROLE_ADMIN"" />
    <intercept-url pattern=""/abstractpoi/edit/*"" access=""ROLE_USER, ROLE_ADMIN"" />
    <intercept-url pattern=""/**"" access=""IS_AUTHENTICATED_ANONYMOUSLY"" />
    <anonymous />

    <form-login authentication-failure-url=""/login/login.gsp"" 
                default-target-url=""/login/abstractPOI/showCategories"" 
                login-page=""/login/login.gsp"" />

    <logout logout-success-url=""/login/login.gsp"" />
    <remember-me />
  </http>

  <authentication-provider user-service-ref=""userDetailsService"">
    <password-encoder hash=""sha"">
      <salt-source user-property=""id""/>
    </password-encoder>
  </authentication-provider>
  
  <b:bean id=""userDetailsService"" class=""com.wextent.acegi.dao.UserAccountDao""/>

</b:beans>

I tried similar context on another project, but result is the same:

org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named '_exceptionTranslationFilter' is defined 

","28/May/08 5:34 AM;cbeams;Konstantyn,

It would be very helpful if you would put together and attach a very simple project that demonstrates the error you're getting.  If I can reproduce it locally I'll have a much better chance of tracking it down.

Thanks!","29/May/08 8:32 PM;cbeams;Resolved as of revision 576 - moldarion's originally submitted 'exceptionTranslationFilter' test case now passes.

Cause:

JavaConfig was being too eager about copying BeanFactoryPostProcessors from the parent bean factory into its 'internal' or 'hidden' bean factory.  This copying must now be explicitly configured:

Via XML:

    <bean class=""org.springframework.config.java.process.ConfigurationPostProcessor"">
    <bean class=""com.acme.MyConfig"">

    <!-- this BFPP will be copied into the hidden bean factory and will post-process all hidden bean definitions -->
    <bean id=""myBFPP"" class=""com.acme.MyBeanFactoryPostProcessor"">
        <meta key=""COPY_HIDDEN"" value=""true""/>
    </bean>
    
    <!-- this BFPP will not be copied, and will apply only to 'public' beans -->
    <bean id=""otherBFPP"" class=""com.acme.OtherBeanFactoryPostProcessor""/>


Via Java:

    @Configuration
    public class MyConfig {
        @Bean
        public Foo publicBean() { ... }
        
        @Bean
        Bar hiddenBean() { ... }
        
        // this BFPP will be applied to both the beans above
        @Bean(meta=@Meta(key=BeanMetadata.COPY_HIDDEN, value=""true""))
        public BeanFactoryPostProcessor myBPP() {
            return new com.acme.MyBeanFactoryPostProcessor();
        }

        // this BFPP will be applied only to publicBean() above
        @Bean
        public BeanFactoryPostProcessor otherBPP() {
            return new com.acme.OtherBeanFactoryPostProcessor();
        }
                
    }

See also SJC-22, SJC-47",29/May/08 10:19 PM;plethora;Sure looks like an ugly exposure of internal details ;-),"30/May/08 3:35 AM;cbeams;Hi Taras,

I couldn't agree more, actually.  Unfortunately, this was a lesser-of-two-evils kind of choice:

a) continue blindly copying BFPPs to the hidden bean factory and risk violating assumptions that it's reasonable for BFPPs to make
b) put the burden on SJC users to be explicit about propagating BFPPs

I think that (b) is the better of the two choices, although I don't like either.

My reasons for this:

* SJC users know which beans are hidden and so can make an informed decision about whether or not to apply BFPPs to them.
* most importantly, I think the use cases for applying BFPPs in an SJC context are quite small.  Given the fact that SJC @Bean declarations don't have any notion of PropertyValues, there's little for BFPPs to do.  There are some notable exceptions here, I'm sure, but I think it'll be the 5% case that a user both needs a @Bean to be hidden and actually can make use of a BFPP.
* option (a) isn't really an option at all.  It breaks Spring Security, as this bug pointed out.  The onus was on SJC to do something to rectify this.

Between BeanFactoryPostProcessing and BeanPostProcessing, I think BeanPostProcessing is the more important of the two, and the good news is that it looks like it's pretty well worked out now with no significant downsides to its implementation.

I'm wide open to suggestions here, especially if you have ideas around how to make enabling this functionality better from a user experience point of view.

Thanks for your feedback.  I know you've been around and watching a number of SJC issues for a long while, so your thoughts are especially appreciated!",,,,,,,,,,,,,
Migrate build from Maven to Spring Build,SJC-112,22341,22339,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,27/May/08 10:57 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,16/Jun/08 8:25 PM,,,,,,,1.0.0.M4,,,Build,,,,,0,,,,;29/May/08 5:14 AM;cbeams;7200,Additional correspondence & fixes working with Ben & Tony;30/May/08 5:29 AM;cbeams;7200,,,,,,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,29/May/08 5:14 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14124/mylyn-context.zip,,,,,,,,,,,343785600,,,,,,5265,true,cbeams(cbeams),,,,0|i0536f:,29721,25773,,,,,"29/May/08 5:14 AM;cbeams;commit -m ""OPEN - issue SJC-112: Migrate build from Maven to Spring Build 
+ in order to work with Spring Build, all abstract test case classes are now named with the prefix 'Abstract'
+ subclasses of the above abstract classes have been broken out from inner classes to top-level classes"" /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/AsmConfigurationParser.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/AbstractSjc87Tests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/ReflectiveSjc87Tests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/sjc118/BppTest.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/sjc118/BppTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/Sjc74Tests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/Sjc87Tests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AbstractCircularImportDetectionTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AbstractConfigurationParserTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AsmCircularImportDetectionTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AsmConfigurationParserTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationModelTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationParserTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ReflectiveCircularImportDetectionTests.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ReflectiveConfigurationParserTests.java
    Sending        /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/AsmConfigurationParser.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/AbstractSjc87Tests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/ReflectiveSjc87Tests.java
    Deleting       /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/sjc118/BppTest.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/sjc118/BppTests.java
    Replacing      /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/Sjc74Tests.java
    Deleting       /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/issues/Sjc87Tests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AbstractCircularImportDetectionTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AbstractConfigurationParserTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AsmCircularImportDetectionTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/AsmConfigurationParserTests.java
    Sending        /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationModelTests.java
    Deleting       /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationParserTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ReflectiveCircularImportDetectionTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ReflectiveConfigurationParserTests.java
    Transmitting file data ...
    Committed revision 575.",16/Jun/08 8:25 PM;cbeams;Complete.  SJC now builds on Spring Build.,,,,,,,,,,,,,,,,,,,,,
Export SVN from SF.net,SJC-111,22340,22339,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,27/May/08 10:55 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,27/May/08 4:03 PM,,,,,,,1.0.0.M4,,,,,,,,0,,,,;27/May/08 12:45 PM;cbeams;12600,,,,,,,,,,,,,,0,0,12600,"9,223,372,036,854,775,807%",0,0,12600,,,,,,,,,,,,,,,27/May/08 12:43 PM;cbeams;spring-javaconfig-dumpfile.clean.gz;https://jira.spring.io/secure/attachment/14111/spring-javaconfig-dumpfile.clean.gz,,,,,,,,,,,345513600,,,,,2008-05-27 17:35:00.734,5266,false,cbeams(cbeams),,,,0|i05347:,29711,25759,,,,,"27/May/08 11:31 AM;cbeams;Steps to export from SF.net, per instructions at:

    http://alexandria.wiki.sourceforge.net/Subversion+-+Version+Control+for+Source+Code
    http://svnbook.red-bean.com/en/1.4/svn.ref.svnadmin.c.dump.html
    http://svnbook.red-bean.com/en/1.4/svn.reposadmin.maint.html#svn.reposadmin.maint.filtering


1) rsync -av --recursive springframework.svn.sourceforge.net::svn/springframework/* sjc-repos  (approx 35 mins)

2) svnadmin dump sjc-repos > sjc-repos-dumpfile (approx. 5 mins)

3) svndumpfilter include --drop-empty-revs --renumber-revs spring-javaconfig < sjc-repos-dumpfile > spring-javaconfig-dumpfile (approx. 2 mins)
","27/May/08 12:37 PM;cbeams;Post-process the file to remove leading spring-javaconfig/ path from Node-path: and Node-copyfrom-path: headers:

sed 's|^\(Node-.*path: *\)spring-javaconfig/|\1|' spring-javaconfig-dumpfile > spring-javaconfig-dumpfile.clean","27/May/08 12:38 PM;cbeams;There was a spurious empty 'spring-javaconfig' directory in the root of the project.  Eliminating it:

svndumpfilter exclude spring-javaconfig < spring-javaconfig-dumpfile.clean > spring-javaconfig-dumpfile.clean.tmp
mv spring-javaconfig-dumpfile.clean.tmp spring-javaconfig-dumpfile.clean","27/May/08 12:43 PM;cbeams;Attaching (gzipped) file, used below to create and successfully populate the new spring-javaconfig repos.

svnadmin create spring-javaconfig
svnadmin load spring-javaconfig < spring-javaconfig-dumpfile.clean","27/May/08 4:03 PM;cbeams;Complete, see attached file and instructions in comments.","27/May/08 5:35 PM;tmarshall;Cheers Chris, this will come in handy moving anything else from SourceForge.",,,,,,,,,,,,,,,,,
Implement AsmConfigurationParser,SJC-107,22315,21305,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,26/May/08 9:41 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,15/Jul/08 7:19 AM,,,,,,,1.0.0.M4,,,Internals,,,,,0,,AsmConfigurationParser exists in stubbed-out form right now.  This class needs to be developed such that it satisfies the tests in ConfigurationParserTests.  See ReflectiveConfigurationParser for a reflection-based reference implementation.,,"Code review w/ Christian, minor refactoring, minor project mgmt stuff.;30/May/08 12:26 PM;cbeams;3600",;15/Jul/08 7:28 AM;cbeams;108000,,,,,,,,,,,,,0,0,111600,"9,223,372,036,854,775,807%",0,0,111600,,,SJC-101,,,,,,,,,,,,09/Jul/08 2:23 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14339/mylyn-context.zip,23/Jun/08 6:42 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14222/mylyn-context.zip,30/May/08 12:20 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14137/mylyn-context.zip,,,,,,,,,341280000,,,,,,5270,true,cbeams(cbeams),,,,0|i032fr:,17937,17335,,,,,"30/May/08 12:20 PM;cbeams;Christian is going to take a cut at this (thanks in advance!)

Attaching a Mylyn context that will give a good refresher of everything we went over in the code review.","30/May/08 12:25 PM;cbeams;Christian, keep an eye on SJC-101.  This task was regarding building out the integration test for ConfigurationParser implementations.  I had resolved it, but just reopened it after seeing that ReflectiveConfigurationParser wasn't entirely covered.  I'll patch those missed bits up shortly.","23/Jun/08 6:41 AM;cbeams;Re-assigining to me.  Christian, I'll let you know if I have questions.","09/Jul/08 2:22 PM;cbeams;All tests pass, so implementation is now functional.  Refactoring is necessary, though.  For the moment, moving on to SJC-108 to round out the ASM bits.  Will then try dropping the new implementation in place of the existing Reflective* code.  Will then loop back and refactor as necessary.","15/Jul/08 7:19 AM;cbeams;Complete, inasmuch that the compatibility tests pass.  AsmConfigurationParser is now functionally equivalent to ReflectiveConfigurationParser.  At work on refactoring now in a separate issue.",,,,,,,,,,,,,,,,,,
Refactor internal.process.* BeanFactoryPostProcessors into single class,SJC-106,22312,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Minor,Fixed,cbeams,cbeams,cbeams,26/May/08 8:10 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,26/May/08 9:39 AM,,,,,,,1.0.0.M4,,,Internals,,,,,0,,Currently there are three BeanFactoryPostProcessors that are always used in conjunction to process @Configuration classes.  Better would be to unify them under a single BeanFactoryPostProcessor umbrella.,,;30/May/08 7:30 AM;cbeams;14400,,,,,,,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,26/May/08 9:34 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14102/mylyn-context.zip,26/May/08 8:34 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14101/mylyn-context.zip,,,,,,,,,,345600000,,,,,,5271,true,cbeams(cbeams),,,,0|i0534n:,29713,25761,,,,,26/May/08 8:34 AM;cbeams;Attaching context after submitting revision 12567,,,,,,,,,,,,,,,,,,,,,,
Develop integration tests for ConfigurationParser implementations,SJC-101,22307,21305,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,26/May/08 7:21 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 4:00 PM,,,,,,,1.0.0.M4,,,,,,,,0,,,,;30/May/08 7:32 AM;cbeams;21600,Tightening up coverage;30/May/08 4:02 PM;cbeams;7200,,,,,,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,30/May/08 4:01 PM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14138/mylyn-context.zip,,,,,,,,,,,345254400,,,,,,5276,true,cbeams(cbeams),,,,0|i0539j:,29735,25805,,,,,"26/May/08 7:25 AM;cbeams;Complete, developed during SJC-98.

Integration test is available at

    org.springframework.config.java.internal.model.ConfigurationParserTests

this test case is abstract and has two implementations:

    RefectiveConfigurationParserTests
    AsmConfigurationParserTests

Also see

    ReflectiveCircularImportDetectionTests
    AsmCircularImportDetectionTests

These latter two should be considered part of the 'suite' of integration tests for ConfigurationParser implementations.","30/May/08 12:23 PM;cbeams;Christian and I just noticed that there are a few methods in ReflectiveConfigurationParser that aren't covered when running ReflectiveConfigurationParserTests against it.  To ensure the easiest migration path to ASM, these coverage holes should be patched up.","30/May/08 2:51 PM;cbeams;Christian,

As mentioned in the original description, be sure to implement both

    AsmConfigurationParserTests

as well as

    AsmCircularImportDetectionTests

I forgot to show you the latter in the code review, but if you do a coverage test while running both ReflectiveConfigurationParserTests and ReflectiveCircularImportDetectionTests, you'll see that coverage improves for ReflectiveConfigurationParser.

",30/May/08 4:00 PM;cbeams;ReflectiveConfigurationParser is now 100% covered by ReflectiveConfigurationParserTests and ReflectiveCircularImportTests,30/May/08 4:01 PM;cbeams;Attaching context.,,,,,,,,,,,,,,,,,,
Support detection of circular @Import,SJC-100,22306,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,26/May/08 4:00 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,26/May/08 6:35 AM,1.0.0.M3,,,,,,1.0.0.M4,,,Internals,,,,,0,,"Currently, given two configurations:

@Import(B.class)
public class A {
    public @Bean TestBean a() { return new TestBean(); }
}

@Import(A.class)
public class B {
    public @Bean TestBean b() { return new TestBean(); }
}

upon processing A

    new JavaConfigApplicationContext(A.class);
    
the circular import is not detected, and a StackOverflowException is ultimately thrown.",,;30/May/08 7:33 AM;cbeams;18000,,,,,,,,,,,,,,0,0,18000,"9,223,372,036,854,775,807%",0,0,18000,,,,,,,,,,,,,,,26/May/08 6:35 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14099/mylyn-context.zip,,,,,,,,,,,345600000,,,,,,5277,true,cbeams(cbeams),,,,0|i03jlb:,20716,17811,,,,,"26/May/08 6:35 AM;cbeams;commit -m ""OPEN - issue SJC-100: Support detection of circular @Import 
+ ReflectiveConfigurationParser now throws a CircularImportException upon detecting circular use of @Import"" /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/AsmConfigurationParser.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/CircularImportException.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/ReflectiveConfigurationParser.java /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationParserTests.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/AsmConfigurationParser.java
    Adding         /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/CircularImportException.java
    Sending        /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/main/java/org/springframework/config/java/internal/parsing/ReflectiveConfigurationParser.java
    Sending        /Users/cbeams/Work/springsource/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/internal/model/ConfigurationParserTests.java
    Transmitting file data ...
    Committed revision 12565.
    

Note on implementation: it would be preferable to have the ConfigurationParser register an error with the ConfigurationModel to be handled at a later time during validation.  The eager throwing of an exception here will not play as nicely with tooling (Spring IDE)",,,,,,,,,,,,,,,,,,,,,,
"Repackage new internals, ensuring no cycles exist",SJC-99,22281,21305,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,23/May/08 12:21 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,25/May/08 8:32 AM,,,,,,,1.0.0.M4,,,,,,,,0,,,,;25/May/08 8:34 AM;cbeams;43200,,,,,,,,,,,,,,,0,43200,,,0,43200,,,,,,,,,,,,,,,26/May/08 6:39 AM;cbeams;zero-tangles.jpg;https://jira.spring.io/secure/attachment/14100/zero-tangles.jpg,,,,,,,,,,,345600000,,,,,,5278,true,cbeams(cbeams),,,,0|i0536v:,29723,25779,,,,,25/May/08 8:32 AM;cbeams;Complete & verified with s101.,26/May/08 6:39 AM;cbeams;view from Design level 2 in Structure 101,,,,,,,,,,,,,,,,,,,,,
Refactor internals to support a model-driven approach and decouple parsing,SJC-98,22280,21305,Sub-task,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,cbeams,cbeams,23/May/08 12:03 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,23/May/08 12:17 PM,,,,,,,1.0.0.M4,,,Internals,,,,,0,,"In order to facilitate SJC-87, we'll need to move to ASM.  First, separate out bean definition reading from @Configuration class parsing.  First step should be to create a ReflectiveConfigurationParser and eliminate the old ConfigurationProcessor approach.  Once this is done, then an AsmConfigurationParser can be developed and swapped in.",,;23/May/08 12:18 PM;cbeams;432000,,,,,,,,,,,,,,,0,432000,,,0,432000,,,,,,,,,,,,,,,,,,,,,,,,,,345859200,,,,,,5279,true,cbeams(cbeams),,,,0|i053d3:,29751,25833,,,,,"23/May/08 12:17 PM;cbeams;cbeams@kaizen:~/Work/springsource/spring-javaconfig/trunk>$ svn ci -m""Merging in changes from branches/SJC-87 (-r11846:12521).  This work is actually being attributed to SJC-98, now a sub-task of SJC-87.""
...
Transmitting file data .........................................................
Committed revision 12522.

",,,,,,,,,,,,,,,,,,,,,,
Spring-WS client needs explicit afterPropertiesSet call,SJC-95,22170,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Won't Fix,cbeams,grafpoo,grafpoo,16/May/08 7:59 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,27/May/08 2:11 PM,,,,,,,,,,,,,,,0,,"i was trying to migrate a springWS client to JavaConfig. the spring config in XML is:
<beans>
	<bean id=""eventsClientTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"">
		<property name=""messageFactory"">
			<bean class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory""/>
		</property>
		<property name=""messageSender"" ref=""messageSender""/>
		<property name=""defaultUri"" value=""http://localhost/myapp/service""/>
	</bean>
	<bean id=""messageSender"" class=""org.springframework.ws.transport.http.HttpUrlConnectionMessageSender"">
	</bean>
	<bean id=""client"" class=""mil.oni.seaport.service.client.Dom4jEventsClient"">
		<property name=""wsTemplate"" ref=""eventsClientTemplate""/>
		<property name=""param"" value=""R04427""/>
	</bean>
</beans>

the javaConfig i came up with:
	@org.springframework.config.java.annotation.Configuration
	public static class SeaportWebServiceClientConfiguration {
		@Bean
		public WebServiceTemplate eventsClientTemplate() {
			WebServiceTemplate wst = new WebServiceTemplate();
			wst.setMessageFactory(new SaajSoapMessageFactory());
			wst.setMessageSender(new HttpUrlConnectionMessageSender());
			return wst;
		}
		@Bean
		public EventsClient client() {
			Dom4jEventsClient client = new Dom4jEventsClient();
			client.setWsTemplate(eventsClientTemplate());
			return client;
		}
	}
}

throws a NPE in the SaajSoapMessageFactory for the code:
    public WebServiceMessage createWebServiceMessage() {
        try {
            return new SaajSoapMessage(messageFactory.createMessage());
        }
        catch (SOAPException ex) {
            throw new SoapMessageCreationException(""Could not create empty message: "" + ex.getMessage(), ex);
        }
    }

turns out the messageFactory here is set in the SaajSoapMessageFactory's afterPropertiesSet method - if i explicitly call it all is well...

","Vista, Spring-WS 1.5.1, JavaConfig 1.0.0m3",;30/May/08 7:25 AM;cbeams;2700,,,,,,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,345254400,,,,,2008-05-27 14:11:24.509,5282,true,cbeams(cbeams),,,,0|i03mq7:,21224,25732,,,,,"27/May/08 2:11 PM;cbeams;Hi John,

I'm resolving this issue as WONTFIX, because rather than being a bug, it's simply part of the way JavaConfig works.

JavaConfig will apply lifecycle callbacks (such as InitializingBean's afterPropertiesSet) to any @Bean instances you create.  i.e.: if the return type of the @Bean method implements InitializingBean, the framework will notice this and call the appropriate method.

However, if you create objects manually *within* a @Bean method, the framework has no control over those objects.  Indeed, the framework doesn't even know you created them.

So, if you need full lifecycle support, AOP proxying, or any of the other services provided by the container, simply make the object in question a @Bean and refer to it by method.

See below, as I've reworked your example to demonstrate:


@Configuration
public static class SeaportWebServiceClientConfiguration {
    @Bean
    public WebServiceTemplate eventsClientTemplate() {
        WebServiceTemplate wst = new WebServiceTemplate();
        wst.setMessageFactory(soapMessageFactory());  // <-- refer to @Bean
        wst.setMessageSender(new HttpUrlConnectionMessageSender());
        return wst;
    }

    @Bean
    public EventsClient client() {
        Dom4jEventsClient client = new Dom4jEventsClient();
        client.setWsTemplate(eventsClientTemplate());
        return client;
    }

    @Bean
    SaajSoapMessageFactory soapMessageFactory() { // <-- the framework will service this object with callbacks, etc.
        return new SaajSoapMessageFactory();
    }

}


To understand this completely, it's important to realize that the framework enhances your @Configuration classes, such that the soapMessageFactory isn't as simple as it appears above.  It will be sure to run the returned object through all the usual bean paces.

Also note that the new soapMessageFactory has default (package-private) visibility?  This means that soapMessageFactory() is a 'hidden' bean and will not be available from the external context.  e.g.: a call to context.getBean(SaajSoapMessageFactory.class) would fail with a NoSuchBeanDefinitionException.  This hiding may or may not be desirable for you in this situation.  At any rate, it's not required - you could make the @Bean public as well.  Just thought I'd mention it in passing.

The above should be working just fine in the milestone you're using.  If you have any additional issues, don't hesitate to ask!","28/May/08 9:46 AM;cbeams;John,

Another option that would be valid:  have your @Configuration class extend ConfigurationSupport and use the getConfigured() method

@Configuration
public static class SeaportWebServiceClientConfiguration extends ConfigurationSupport { // <-- extend base class
    @Bean
    public WebServiceTemplate eventsClientTemplate() {
        WebServiceTemplate wst = new WebServiceTemplate();
        wst.setMessageFactory(getConfigured(new SaajSoapMessageFactory())); // <-- call to getConfigured() runs object through container lifecycle
        wst.setMessageSender(new HttpUrlConnectionMessageSender());
        return wst;
    }

    @Bean
    public EventsClient client() {
        Dom4jEventsClient client = new Dom4jEventsClient();
        client.setWsTemplate(eventsClientTemplate());
        return client;
    }
} ","30/May/08 6:59 AM;grafpoo;thanks! you are both correct and very helpful. i shall buy you a beer someday
",,,,,,,,,,,,,,,,,,,,
Circular dependencies in Javaconfig raise StackOverflow Error,SJC-94,22102,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Won't Fix,cbeams,mjeanson,mjeanson,13/May/08 12:52 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 6:02 AM,1.0.0.M3,,,,,,,,,Internals,,,,,0,,"
I a new to Javaconfig (but not to Spring), and I encounter issues with circular dependencies.

Here is my problem:

I have two classes A and B with mutual dependency :

public class A {

private B b;

public B getB() { return b; }

public void setB(B b) { this.b = b; }

}

public class B {

private A a;

public A getA() { return a; }

public void setA(A a) { this.a = a; }

}



I have built a Configuration class as follows:

@Configuration
public class TestLoad {

@Bean
public A a() {
A a = new A();
a.setB(b());
return a;
}


@Bean
public B b() {
B b = new B();
b.setA(a());
return b;
}

}


And I instantiate the application context with the following code:

JavaConfigApplicationContext context = new JavaConfigApplicationContext(TestLoad.class);


When executing this last piece of code, I get the following error (which actually never stops occurring):

Caused by: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException:
... (100+ times)
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.StackOverflowError
at org.springframework.config.java.core.StandardBeanM ethodProcessor.createNewOrGetCachedSingletonBean(S tandardBeanMethodProcessor.java:85)
at org.springframework.config.java.enhancement.cglib. BeanMethodMethodInterceptor.returnWrappedResultMay BeCached(BeanMethodMethodInterceptor.java:59)
at org.springframework.config.java.enhancement.cglib. BeanMethodMethodInterceptor.intercept(BeanMethodMe thodInterceptor.java:52)
at test.TestLoad$$EnhancerByCGLIB$$9f00849b.a(<genera ted>)
at test.TestLoad.b(TestLoad.java:22)
at test.TestLoad$$EnhancerByCGLIB$$9f00849b.CGLIB$b$1 (<generated>)
at test.TestLoad$$EnhancerByCGLIB$$9f00849b$$FastClas sByCGLIB$$546c3d84.invoke(<generated>)
at net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodP roxy.java:167)
at org.springframework.config.java.enhancement.cglib. BeanMethodMethodInterceptor$1.invokeOriginalClass( BeanMethodMethodInterceptor.java:65)
at org.springframework.config.java.core.MethodBeanWra pper.wrapResult(MethodBeanWrapper.java:118)
at org.springframework.config.java.core.StandardBeanM ethodProcessor.createNewOrGetCachedSingletonBean(S tandardBeanMethodProcessor.java:82)
... 958 more



Also, when I change TestLoad to use ConfigurationSupport and getBean (code below):

@Configuration
public class TestLoad extends ConfigurationSupport {

@Bean
public A a() {
A a = new A();
a.setB(getBean(B.class));
return a;
}


@Bean
public B b() {
B b = new B();
b.setA(getBean(A.class));
return b;
}

}


I get the following exception:

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationExce ption: Error creating bean with name 'a' defined in Bean creation method a in class test.TestLoad: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionSt oreException: Factory method [public final test.A test.TestLoad$$EnhancerByCGLIB$$9cfb512d.a()] threw exception; nested exception is java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationExce ption: Error creating bean with name 'b' defined in Bean creation method b in class test.TestLoad: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionSt oreException: Factory method [public final test.B test.TestLoad$$EnhancerByCGLIB$$9cfb512d.b()] threw exception; nested exception is java.lang.RuntimeException: org.springframework.beans.factory.NoSuchBeanDefini tionException: No unique bean of type [test.A] is defined:



The question is: does Javaconfig support circular references at least in the same way the XML config does (for setters but not constructors)?

Thaks for any help on this,

Kind regards,

Michel.","Windows Vista Pro, JDK6",;30/May/08 7:25 AM;cbeams;9000,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,30/May/08 6:02 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14132/mylyn-context.zip,13/May/08 12:58 AM;mjeanson;test-spring-javaconfig.zip;https://jira.spring.io/secure/attachment/14052/test-spring-javaconfig.zip,,,,,,,,,,345254400,,,,,2008-05-27 14:56:10.297,5283,true,cbeams(cbeams),,,,0|i03mjj:,21194,25821,,,,,"13/May/08 12:58 AM;mjeanson;I attach a very succinct Eclipse project highlighting the issue.
Depndencies may have to be updated to suit your Eclipse environment.
/M","27/May/08 2:56 PM;cbeams;Hi Michel,

""The question is: does Javaconfig support circular references at least in the same way the XML config does (for setters but not constructors)?""

The simplest answer to this question is 'no'.

Because you are creating the object manually, and calling the setters programmatically, JavaConfig cannot handle circular references quite as elegantly as XML-driven config can.

There are, however, some reasonable workarounds for the problem:

1) Consider using @Bean(autowired=Autowired.BY_TYPE)

If you configure your @Bean definitions to be autowired, then JavaConfig *can* handle circular refrences a bit better:

    @Bean(autowired=Autowired.BY_TYPE)
    public A a() {
        return new A();
    }

    @Bean(autowired=Autowired.BY_TYPE)
    public B b() {
        return new B();
    }
    
In the above, both instances will be created and then set on each other by the container.  This avoids the circular reference problem entirely.

As a second option, you could use @AutoBean, which takes instantiation out of your hands entirely:

    @AutoBean
    public abstract A a();

    @AutoBean
    public abstract B b();

I'm going to leave this bug open for the moment, as I consider other alternatives, and how robust the cyclic reference detection / error handling should be.  I'd be very interested to hear if either of the above approaches satisfy your needs.

Thanks!","30/May/08 6:02 AM;cbeams;Michel,

After further thought, I'm resolving this as Won't Fix.  Based on comments above and further consideration, direct programmatic circular dependencies are a kind of 'natural limitation' for JavaConfig.  There are however, a number of ways to work around that limitation.  I've added a test case that demonstrates these various approaches, see org.springframework.config.java.CircularDependenciesTests for details.

Regards,

- Chris","30/May/08 7:17 AM;mjeanson;Thank you Chris for your feedback and your work.
I shall work around the issue.
Rgds, Michel.",,,,,,,,,,,,,,,,,,,
PermGen OutOfMemoryError occurs after multiple hot-deploys of JavaConfig-based webapp,SJC-93,21438,,Bug,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,blairzajac,blairzajac,02/Apr/08 11:43 AM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,24/Jul/08 7:10 AM,1.0.0.M3,,,,,,1.0.0.M4,,,Internals,,,,,0,,"Using a standard Spring XML config, my web application completely
unloads so I can redeploy it many times without running out of
permament generation space in the JVM.

Switching over to JavaConfig and deleting my applicationContenxt and
making the necessary changes to my web.xml, are undeploying, static
objects still exist in the JVM.

There's nothing extremeley fancy about my JavaConfig class (writen in
Scala, but shouldn't matter):

@Configuration { val defaultLazy = Lazy.TRUE }
@ResourceBundles(Array(""classpath:vnp""))
abstract class ApplicationConfig
{
  @ExternalValue(""ice.hostname"")
  def ice_hostname : String

  @ExternalValue(""ice.port"")
  defice_port : String

  @ExternalValue(""ice.encoding.cache.version"")
  def ice_encoding_cache_version_str : String

  @Bean
  def ice_encoding_cache_version = ice_encoding_cache_version_str.toInt

  @ExternalValue(""memcached.servers"")
  def memcached_servers_str : String
...
...

}

Loading the application in Tomcat 6.0.16 and undeploying it then
viewing a heapdump in NetBeans 6.0.1

Using a org.springframework.config.java.naming.MethodNamingStrategy
instance as an example object that should not exist in the process and
using the ""Show Nearest GC Root"" shos this chain:

Field - Type
this - MethodNamingStrategey
  namingStrategy - ExternalBeanMethodProcessor
    beanMethodProcessor - BeanMethodInterceptor
      [ ] - Callback[]
        value - ThreadLocal%ThreadLocalMap$Entry
          [ ] - ThreadLocal$ThreadLocalMap$Entry[]
            table - ThreadLocal$ThreadLocalMap
              threadLocals (thread object) - Thread

This Thread has a name ""ContainerBackgroundProcessor[StandardEngine[Catalina]]""

I don't know if this is enough to figure out what's keeping it, I'm
used to using YourKit but I don't have a current license to tried to
use NetBeans today.

http://opensource.atlassian.com/confluence/spring/pages/viewpage.action?pageId=2669

To test this, make a small app, load in Tomcat and undeploy it.  If
you use NetBeans profiler to load a heapdump, the objects will still
be there, which you can tell by searching for the GC root.

I'll add more info if I find a better tool to getting the object that's keeping the
ClassLoader around.

Regards,
Blair
","Centos 4.4 i386, Sun Java 6u4, 2 Gbytes memory",;24/Jul/08 7:11 AM;cbeams;57600,,,,,,,,,,,,,,,0,57600,,,0,57600,,,,,,,,,,,,,,,08/May/08 5:40 AM;blairzajac;javaconfig-undeploy-memory-leak.png;https://jira.spring.io/secure/attachment/14041/javaconfig-undeploy-memory-leak.png,24/Jul/08 8:35 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14449/mylyn-context.zip,,,,,,,,,,340502400,,,,,2008-05-08 06:38:06.87,5284,true,cbeams(cbeams),,,,0|i03sof:,22188,18654,,,,,"08/May/08 5:40 AM;blairzajac;Screenshot showing a trace from a scala.None$ to a GC root in an
undeployed Tomcat app.  With XML Spring config, scala.None$ does not
exist in the Java process since there are no references to it.
","08/May/08 5:57 AM;blairzajac;Did some more work on this issue.  Here's what I've discovered.

If you look at the screenshot, you'll see the GC root keeping all the
static variables around.  They are referred to by a ThreadLocal which
is keeping the
org.springframework.config.java.enhancement.cglib.callbacks Callback[]
array around.  This array here has 5 elements and so does the one
created in the CglibConfigurationEnhancer constructor.

Hibernate had a similar issue:

http://opensource.atlassian.com/projects/hibernate/browse/HHH-2481

and they fixed it with this:

http://opensource.atlassian.com/projects/hibernate/secure/attachment/13083/fix.diff

The key line here is that they call Enhancer.registerCallbacks() with
a null Callback [] after they are done.

And the Javadoc for registerCallbacks says this:

     * The registered callbacks are overwritten and subsequently cleared
     * when calling any of the <code>create</code> methods (such as
     * {@link #create}), or any {@link Factory} <code>newInstance</code> method.
     * Otherwise they are <i>not</i> cleared, and you should be careful to set them
     * back to <code>null</code> after creating new instances via reflection if
     * memory leakage is a concern.

Using the Hibernate trick doesn't work, it appears in JavaConfig one
needs to keep the callbacks around for as long as the enhanced class
will be used for bean lookups as I got test suite failures if I put
the null callback anywhere in the set up code in JavaConfig.

I was unable to get the callback array cleared in a destroyBeans()
method in the JavaConfigWebApplicationContext class when my web
application undeploys because I had a different thread shutting down
Spring than the thread that created the enhanced Java config class, so
the ThreadLocal storage for the original thread wouldn't be cleared.

Is it possible for JavaConfig to make an instance of the enhanced
class instead of a proxy class and passing that to Spring?  This may
allow it to set the callbacks on an enhancer instance and avoid thread
local storage.

I was able to work around the issue in my application code by putting
a call to
  net.sf.cglib.proxy.Enhancer.registerCallbacks(this.getClass(), null)
in the last bean definition that is used, since this happens in the
context of the thread setting up the context.
","08/May/08 6:38 AM;cbeams;Blair,

Thanks for all your work on this and providing such detailed feedback.  I've slated this for the forthcoming m4 release - hopefully your suggestions will take care of the issue.  Glad to hear you've got a workaround in the meantime.","24/Jul/08 7:10 AM;cbeams;As Blair correctly diagnosed, this issue was due to the way that JavaConfig is using CGLIB to register a thread-bound Callback[] for use by instances of generated @Configuration subclasses.

The memory leak arises from the fact that that ThreadLocal state is never purged, and it accumulates over the process of hot-deploying an app many times within the same servlet container instance.  For that reason, this issue was not a problem for most standalone apps, and even most webapps, except during development.

Fixing the problem was not easy.

As Blair alluded to, the difficult part is knowing when to purge the ThreadLocal state.  Because the generated @Configuration subclass could technically be used at any time (think prototype-scoped beans), the only logical time to purge is during the closing of the container.  However, in the case of a webapp, that closing is going to be initiated by the registerShutdownHook() call and is going to be happening in a different thread.  Therefore, any DisposableBean designed to call Enhancer.registerCallbacks(subclass, null); is going to be ineffective as it won't be happening against the originally bound-to thread.

Two solutions posed themselves here:

1) Stop using threadlocal state entirely, and move to Enhancer.registerStaticCallbacks(...)
    This one was a non starter because it would render JavaConfig non-threadsafe.  If there were multiple JavaConfigApplicationContexts starting up that deal with the same @Configuration classes, those instances would risk stepping on each others' Callbacks.

2) Devise a way to 'seek and destroy' CGLIB's Callback[] ThreadLocals across all threads.


Option (2) is the chosen solution.  CglibConfigurationEnhancer now registers a DisposableBean that upon it's call to destroy() invokes a utility that traverses up the thread/thread group hierarchy and then performs a search across each thread in the VM, looking for ThreadLocals containing Callback[] values and removing them from the threads they are bound to.

Limitations of this approach:  Technically, this approach could also have issues under concurrency, because when any JavaConfigApplicationContext is closed, it will remove all Callback[] ThreadLocals, regardless of which context registered them.   This is a potential issue, but really an extreme edge case.  It is very unlikely to cause a problem under any kind of normal usage scenario.",,,,,,,,,,,,,,,,,,,
Add option to @Import for importing configuration into sub ApplicationContext,SJC-92,21374,,Improvement,Closed,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Cannot Reproduce,cbeams,olivergierke,olivergierke,30/Mar/08 9:45 PM,02/Aug/10 6:17 AM,10/May/19 2:37 AM,30/May/08 9:50 AM,,,,,,,,,,,,,,,0,,"Currently @Import allows to import configuration files into the same application context as the configuration file that declares the import resides in. Real nesting is only possible with static inner classes. 

This results in strange behaviour when importing configurations: suppose you have configuration class A importing configuration class B. To access beans of B from A you have to declare them as public. But that also exposes them to clients of A, which might be unwanted. Also as I know that A and B will reside in the same application context, it's quite inconsistent that beans that should be visible vor A can not be protected in B. (I guess this due to method visibility issues?)

To me it would feel nice to place imported configuration classes into a sub application context so that public beans would only be visible in the importing configuration file but not be exposed to its clients in turn. The static inner classes are not a very elegant solution as they do not allow physical separation of classes.

So perhaps a boolean flag in the @Import annotation could decide whether to place imported bean declarations into the same application context or a sub one?

Regards,
Ollie",,;30/May/08 9:49 AM;cbeams;2700,,,,,,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,30/May/08 9:48 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14136/mylyn-context.zip,,,,,,,,,,,345254400,,,,,2008-05-30 09:48:27.676,2458,true,cbeams(cbeams),,,,0|i00xyn:,5547,6813,,,,,"30/May/08 9:48 AM;cbeams;Hi Ollie,

I've just added ImportTests.java to the codebase to demonstrate what you're talking about here.  It may be that the semantics around bean hiding were a bit different in an earlier milestone, but currently, they work as (I belive) you're saying you'd like them to above.  Please have a look (see link below, or just check out the latest codebase)

https://fisheye.springframework.org/browse/spring-javaconfig/trunk/core/src/test/java/org/springframework/config/java/ImportTests.java?r=586

Does this meet your needs?

As far as optionally spawning a new context for imported classes, this will be unlikely as it introduces considerable complexity to do so.

I'm resolving this for now, but will be happy to re-open it if there's something you need that's not being met.",,,,,,,,,,,,,,,,,,,,,,
Define OSGi bundle metadata for JavaConfig,SJC-64,20468,21356,Sub-task,Resolved,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Minor,Fixed,cbeams,cbeams,cbeams,05/Feb/08 4:35 PM,18/Jun/08 10:29 AM,10/May/19 2:37 AM,18/Jun/08 10:29 AM,,,,,,,1.0.0.M4,,,Build,Compatibility,,,,0,,JavaConfig should be deployable as an OSGi bundle,,working with Ben to get the initial manifest worked out;30/May/08 7:28 AM;cbeams;5400,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,343612800,,,,,,5311,true,cbeams(cbeams),,,,0|i032cn:,17923,17321,,,,,11/Apr/08 2:09 AM;cbeams;Consider using the maven-bundle-plugin for this purpose: http://cwiki.apache.org/FELIX/bundle-plugin-for-maven-bnd.html,28/May/08 3:47 AM;cbeams;initial cut at manifest now checked in at src/main/resources/META-INF/MANIFEST.MF,18/Jun/08 10:29 AM;cbeams;Complete.  SJC is now a compliant OSGi bundle.,,,,,,,,,,,,,,,,,,,,
Allow @AutoBean to wire constructor arguments,SJC-62,20463,,New Feature,Resolved,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,jdigger,jdigger,05/Feb/08 7:39 AM,19/Jun/08 12:19 PM,10/May/19 2:37 AM,19/Jun/08 12:19 PM,,,,,,,1.0.0.M4,,,Public API,,,,,0,,"Right now you can do

@AutoBean
public JdbcContactRepository contactRepo() {
  return new JdbcContactRepository();
}

and the fields/properties that have been marked as @Autowired/Resource will get wired.  But that only works when it's not the constructor that needs to be autowired.  (e.g., Passing the DataSource in to the constructor.)  That's because we need to create an instance to return from the method, but there's no way to do the auto-wiring from within Java itself.

If instead we simply marked the method as being abstract, then SJC could do exactly the same thing that core Spring does when it comes across <bean id=""contactRepo"" class=""JdbcContactRepository""/>

An alternative is to implement SJC-50 but with the ""AutoBean twist"".",,;30/May/08 9:25 AM;cbeams;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,SJC-50,,,30/May/08 9:21 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14135/mylyn-context.zip,30/May/08 7:08 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14134/mylyn-context.zip,,,,,,,,,,343526400,,,,,2008-02-05 07:58:07.135,5313,true,cbeams(cbeams),,,,0|i058wf:,30648,27677,,,,,"05/Feb/08 7:58 AM;cbeams;Generally agreed on this, and it should be pretty straightforward to implement.  Thanks, Jim.

Just for clarity, once implemented, users would be able to create definitions as follows:

@AutoBean
public abstract JdbcContactRepository contactRepo();

And JavaConfig will do the work of instantiating the object and doing all autowiring, including that of constructors.",30/May/08 7:08 AM;cbeams;Reworked AutoBeanTests to demonstrate the lack of ctor autowiring support more clearly (constructorAutowiring() is currently @Ignored),"30/May/08 9:21 AM;cbeams;Jim,

I've added support for constructor autowiring with @AutoBean, but it comes with some 'gotchas'.

Unfortunately, using the core containers support for autowiring, it is not possible to specify an autowiring mode that makes a bean a candidate for both setter and constructor injection.  It's unfortunately an either-or kind of proposition.

Currently, you'll need to be explicit about the fact that you want constructor injection:

    @AutoBean(autowire=AutowireMode.CONSTRUCTOR)
    public abstract Foo foo(); 
    
You'll notice that AutowireMode is a new enum, as well.  This was a necessary evil as core Spring's Autowire enum does not expose a CONSTRUCTOR value.

There are a number of potential tweaks that can further improve this support, but what I'd like now is to have you try it out and tell me what you think.

I'm leaving the issue Open for now, pending further feedback and refinement.

One open question: should @Bean(autowire=...) also use AutowireMode for consistency?  (it currently uses the core Autowired enum)",19/Jun/08 12:19 PM;cbeams;Resolving based on comments above.,,,,,,,,,,,,,,,,,,,
BeanPostProcessors are not applied to private beans,SJC-47,18825,,Bug,Resolved,SJC,Spring JavaConfig,software,tmarshall,"PLEASE NOTE: Spring JavaConfig is no longer accepting new issues.
<p/>
Key features of the Spring JavaConfig project have been migrated into the core
Spring Framework as of version 3.0.
<p/>
Please file any issues regarding @Configuration classes in the SPR project.
<p/>
See:
<ul>
<li><a href=""http://jira.springsource.org/browse/SPR""/>http://jira.springsource.org/browse/SPR</li>
<li><a href=""http://static.springsource.org/spring-javaconfig/README.TXT""/>http://static.springsource.org/spring-javaconfig/README.TXT</li>
</ul>",http://www.springframework.org/javaconfig,Major,Fixed,cbeams,benrowlands,benrowlands,07/Dec/07 5:19 AM,12/Jun/08 2:16 AM,10/May/19 2:37 AM,27/May/08 10:03 AM,1.0 M2,,,,,,1.0.0.M4,,,,,,,,0,,"Private beans are placed in a hidden child context to enforce the visibility constraint. But Spring will only apply post-processors to the specific BeanFactory they are set on (does not walk up to the parent). So we don't get any post-processors applied to hidden (ie, !public) beans.

Arguably, this might be OK (needs to be documented) if you view a private bean as not belonging to the enclosing bean factory ... but it means a lot of the powerful features of Spring don't work on these beans.

I hit this issue using the new @Autowire annotation on a private bean (which is implemented using the AutowiredAnnotationBeanPostProcessor!).

A fix might be to propagate *all* bean-post-processors (and bean-factory-post-processors and perhaps other state that is local to the bean factory) to the child factory so we get the same bean creation semantics?",,;27/May/08 10:06 AM;cbeams;21600,;27/May/08 10:07 AM;cbeams;21600,,,,,,,,,,,,,0,0,43200,"9,223,372,036,854,775,807%",0,0,43200,,,,,,,,,,,,,,,07/Jan/08 3:30 AM;benrowlands;BeanPostProcessorPropagationTest.java;https://jira.spring.io/secure/attachment/13256/BeanPostProcessorPropagationTest.java,07/Dec/07 5:22 AM;benrowlands;JavaConfigAutowireTest.java;https://jira.spring.io/secure/attachment/13187/JavaConfigAutowireTest.java,07/Dec/07 5:20 AM;benrowlands;JavaConfigAutowireTest.java;https://jira.spring.io/secure/attachment/13186/JavaConfigAutowireTest.java,27/May/08 10:03 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14108/mylyn-context.zip,27/May/08 8:25 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/14107/mylyn-context.zip,,,,,,,345513600,,,,,2007-12-08 03:45:37.0,5328,true,cbeams(cbeams),,,,0|i01cnj:,7927,8351,,,,,07/Dec/07 5:20 AM;benrowlands;Test case.,07/Dec/07 5:22 AM;benrowlands;Fixed test,"07/Dec/07 5:28 AM;benrowlands;Woops, just noticed this is duplicate of SJC-22","08/Dec/07 3:45 AM;cbeams;Hi Ben,

Have you grabbed a recent nightly build to verify that the fix to SJC-22 indeed solves the problem?","08/Dec/07 4:04 AM;cbeams;Ben - scratch my last comment.  I ran your test and I see that it still fails.  Foremost, it fails because we've eliminated private @Bean methods altogether going forward (Rod can provide full details as to why, but it has to do with the changes in SJC-22).

However, changing the visibility of your test case's bean from private to protected or package-private (which remain legal) still results in an error -- the autowiring does not occur.

I'm assigning this to Rod, perhaps he can dig into it while I finish up work on your earlier issue, SJC-38.  You're keeping us busy!","08/Dec/07 5:47 AM;rod.johnson;I made private bean methods illegal because it's impossible to support the correct semantics for them. It is typically necessary to override such methods in a subclass generated by CGLIB. We can't do this for private methods.

Private bean methods could be supported if we performed byte code modification on @Configuration classes (as JDO or JPA implementations do) instead of subclassing. However, this would complicate deployment, requiring instrumentation.","07/Jan/08 2:53 AM;benrowlands;Rob/Chris, thanks for clarification.

I got a chance to have a look at why the test is still failing. It appears to be down to the different ways BeanPostProcessors are handled between ApplicationContexts and BeanFactories. In the former, a call to refresh() will scan the container for BPP's, in the later the only BPP's applied are those registered via ConfigurableBeanFactory#addBeanPostProcessor().

It looks like beans are hidden in a private *BeanFactory* and not a private *ApplicationContext* (in ConfigurationProcessor). In my test I was registering the Autowire BPP as a plain bean (as it uses some of the BF callbacks like BeanFactoryAware, so didn't just register a new instance) :

    context = new JavaConfigApplicationContext( MyConfig.class )
    {
      @Override
      protected void customizeBeanFactory( DefaultListableBeanFactory beanFactory_ )
      {
        beanFactory_.registerBeanDefinition(
            AutowiredAnnotationBeanPostProcessor.class.getName(),
            new RootBeanDefinition( AutowiredAnnotationBeanPostProcessor.class ) );
      }
    };

The test *does* work if I register the BPP using the explicit API:

    context = new JavaConfigApplicationContext( MyConfig.class )
    {
      @Override
      protected void customizeBeanFactory( DefaultListableBeanFactory beanFactory_ )
      {
        AutowiredAnnotationBeanPostProcessor processor = new  AutowiredAnnotationBeanPostProcessor();
        processor.setBeanFactory( beanFactory_ ); // manually fire BF callbacks 
        beanFactory_.addBeanPostProcessor( processor );
      }
    };

I'd imagine this will cause some confusion so perhaps the child bean factory in ConfigurationProcessor should be an application context (or mimic the same behavior regarding detection of BPP?)",07/Jan/08 3:30 AM;benrowlands;Added test showing that BPP registered via definitions are not applied. The test that registers the BPP as a definition should fail.,"07/Jan/08 3:34 AM;benrowlands;Another issue I noticed that may be related is that the implicit ConfigurationPostProcessor added in JavaConfigApplicationContext#registerDefaultPostProcessors() never gets a reference to the enclosing ApplicationContext as it is added via the addBeanFactoryPostProcessor() API. BFPP add this way never get BF callbacks (ie, ApplicationContextAware), only BFPP registered as definitions seem to get these.

A simple fix would be to create a new instance of the ConfigurationPostProcessor and call setApplicationContext in the JavaConfigBeanFactoryPostProcessorRegistry#addAllPostProcessors() util.","08/Feb/08 12:15 PM;cbeams;Reassigning this issue to me and will review shortly.  Ben, it's been a while since you entered this.  If you have any additional feedback / insights, they would be appreciated.","27/May/08 8:59 AM;cbeams;Ben, your tests now pass.  See AutowiredAnnotationBeanPostProcessorCompatibilityTests.","27/May/08 10:03 AM;cbeams;Resolved, note that the preferred approach going forward for applying BeanPostProcessors is to simply declare them as a @Bean in one of your @Configuration classes.

For example:

@Configuration
public class MyConfig {
    public @Bean TestBean testBean() {
        return new TestBean();
    }
    
    public @Bean BeanPostProcessor myBPP() {
        return new AutowireAnnotationBeanPostProcessor(); // or any other BPP
    }
}

public BeanPostProcessor @Bean instances are guaranteed to apply to all beans, visible and hidden.

hidden BeanPostProcessors, however, are NOT fully supported.  The natural semantics here would be that any hidden (!public) @Bean with a return type of BeanPostProcessor would be applied only to hidden beans.  This does in fact work, but there's a hitch: if an externally visible @Bean references a hidden bean, it circumvents the normal lifecycle for application of BeanPostProcessors, prematurely instantiating the hidden bean and registering it as a singleton.  Any hidden BeanPostProcessors never get applied.  Because this is a difficult issue to fix, I'm leaving this functionality explicitly not supported for the time being.  If users really want it, we'll reconsider at that time.  There is an @Ignore'd testcase that demonstrates this issue at BeanPostProcessorPropagationTests#hiddenBeanPostProcessorIsAppliedToHiddenBeansEvenWhenVisibleBeanAccessesHiddenBean().",,,,,,,,,,,
Referencing other variables in Properties Files does not work,SESPRINGACTIONSCRIPTAS-60,27453,,Bug,Resolved,SESPRINGACTIONSCRIPTAS,SX Spring Actionscript,software,cherreman,,http://www.springactionscript.org,Major,Fixed,cherreman,rfkrocktk,rfkrocktk,27/Jul/09 9:03 AM,07/Sep/09 6:03 PM,10/May/19 2:37 AM,27/Jul/09 7:05 PM,0.8,,,,,,0.8.1,,,IoC container,,,,,0,,"When referencing other properties in a Spring Actionscript properties file, variables are left as string literals rather than being replaced by their referenced values:

Eg:
# myProperties.properties
myProperty1.property = ${myProperty2.property}/hello
myProperty2.property = /world

When printing the value of ""myProperty1.property,"" the literal value ""${myProperty2.property}/hello"" is output rather than the expected ""/world/hello"". ",,;27/Jul/09 7:04 PM;cherreman;3600,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,308707200,,,,,,19105,true,cherreman(cherreman),,,,0|i03m8n:,21145,20218,http://forum.springsource.org/showthread.php?t=75380&goto=newpost,,,,,,,,,,,,,,,,,,,,,,,,,,
The context allows to register multiple objects with the same id but only the last declared one is actually instanciated,SESPRINGACTIONSCRIPTAS-45,26777,,Improvement,Resolved,SESPRINGACTIONSCRIPTAS,SX Spring Actionscript,software,cherreman,,http://www.springactionscript.org,Critical,Fixed,cherreman,aekidna,aekidna,01/Jun/09 7:49 PM,18/Jun/09 7:36 PM,10/May/19 2:37 AM,18/Jun/09 7:36 PM,,,,,,,,,,IoC container,,,,,0,,"If a context config file contains the following declarations

    <object 
    	id=""myObject"" 
    	class=""it.aekidna.TestController""
    	/>

    <object 
    	id=""myObject"" 
    	class=""it.aekidna.TestDomainModel""
    	/>

only the TestDomainModel is actually made available to the application.

Overriding objects declaration might be useful but there must be some kind of override-policy configurable on the context loader.",,ObjectDefinitionStoreError is now thrown when re-registering a definition while it is not allowed;18/Jun/09 7:35 PM;cherreman;3600,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,313545600,,,,,,19117,true,cherreman(cherreman),,,,0|i03jqv:,20741,26622,,,,,"01/Jun/09 7:51 PM;aekidna;At the moment no exception or warning is raised.

When dealing with big context files, an unintentional object declaration override might lead to unpredictable behaviours and might take days to isolate the cause.",,,,,,,,,,,,,,,,,,,,,,
Error in DefaultListableObjectFactory#getObjectNamesForType if an object definition is abstract and does not specify the class attribute,SESPRINGACTIONSCRIPTAS-44,26745,,Bug,Resolved,SESPRINGACTIONSCRIPTAS,SX Spring Actionscript,software,cherreman,,http://www.springactionscript.org,Major,Fixed,cherreman,jfai,jfai,29/May/09 5:18 AM,18/Jun/09 8:06 PM,10/May/19 2:37 AM,18/Jun/09 8:06 PM,,,,,,,,,,IoC container,,,,,0,,"In the process of testing the latest trunk revisions of AS3Commons and Spring AS (rev. 305) with our application, I ran into an issue that was not present in 0.7.1.

One context XML defines something like:

<object id=""baseServiceLocator"" factory-method=""getInstance"" abstract=""true""> ... </object>

Note that there is no class attribute.

Then another context XML defines something like:

<object id=""serviceLocator"" parent=""baseServiceLocator"" class=""com.acesis.framework.Services""> ... </object>

This worked prior to the updates, although the ""abstract"" attribute is basically ignored and the _baseServiceLocator_ is instantiated as a singleton anyway.

With rev. 305, the _baseServiceLocator definition caused an error in _ClassUtils.forName_, because there is no class name. I worked around this by checking the class name in _DefaultListableObjectFactory#getObjectNamesForType()_:

public function getObjectNamesForType(type:Class):Array {
    var result:Array = [];
    var objectDefinition:IObjectDefinition;

    for (var key:String in objectDefinitions) {
        objectDefinition = objectDefinitions[key];
				
        // JF - abstract object may not specify a class name
        if (objectDefinition.className && ClassUtils.isAssignableFrom(type, ClassUtils.forName(objectDefinition.className))) {
	result.push(key);
        }
    }
    return result;
}
",,;18/Jun/09 8:06 PM;cherreman;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,312076800,,,,,2009-06-18 20:06:44.287,19118,true,cherreman(cherreman),,,,0|i03jrb:,20743,26621,,,,,18/Jun/09 8:06 PM;cherreman;abstract definitions are no longer registered,,,,,,,,,,,,,,,,,,,,,,
<util:constant /> support,SESPRINGACTIONSCRIPTAS-40,26118,,New Feature,Resolved,SESPRINGACTIONSCRIPTAS,SX Spring Actionscript,software,cherreman,,http://www.springactionscript.org,Major,Fixed,cherreman,hanso,hanso,24/Mar/09 12:48 AM,18/Jun/09 8:08 PM,10/May/19 2:37 AM,18/Jun/09 8:08 PM,,,,,,,,,,IoC container,,,,,0,,"Referencing constants would be a great feature:

In Java it works like:

<bean id=""..."" class=""..."">
  <property name=""isolation"">
    <util:constant static-field=""java.sql.Connection.TRANSACTION_SERIALIZABLE""/>
  </property>
</bean>

see http://static.springframework.org/spring/docs/2.0.x/reference/xsd-config.html#xsd-config-body-schemas-util

thanks a lot",,;18/Jun/09 8:07 PM;cherreman;14400,,,,,,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,312076800,,,,,2009-05-26 03:03:37.503,19122,true,cherreman(cherreman),,,,0|i03jq7:,20738,26620,,,,,"26/May/09 3:03 AM;666shooter;event though the util:constant markup is much shorter, and therefore should perhaps still be considered to be implemented,
the desired functionality is already possible by using the FieldRetrievingFactoryObject.

http://www.springactionscript.org/docs/reference/html/container-documentation.html#d4e685

cheers,

Roland","18/Jun/09 8:08 PM;cherreman;introduced a ""util"" namespace and added support for the ""constant"" element",,,,,,,,,,,,,,,,,,,,,
Create FtpInboundSynchronizer (to replace FtpSource),SESIA-5,24505,,Refactoring,Closed,SESIA,SX Spring Integration Adapters Extension,software,iwein,,,Major,Fixed,iwein,iwein,iwein,29/Oct/08 7:38 PM,23/Nov/08 12:53 AM,10/May/19 2:37 AM,03/Nov/08 9:33 PM,,,,,,,,,,,,,,,0,,To get rid of the Backlog the Inbound synchronization and the directory polling need to be split into two classes. The FtpInboundSynchronizer should keep a remote ftp directory in sync with a local directory. This local directory can then be polled with a PollableFileSource.,,"Created the Class, next is the redefinition of the namespace elements;30/Oct/08 6:51 AM;iwein;28800",,,,,,,,,,,,,,172800,57600,28800,16%,172800,57600,28800,,,,,,,,,,,,,,,29/Oct/08 7:45 PM;iwein;mylyn-context.zip;https://jira.spring.io/secure/attachment/14810/mylyn-context.zip,,,,,,,,,,,332121600,,,,,,19172,false,iwein(iwein),,,,0|i054on:,29965,26885,,,,,,,,,,,,,,,,,,,,,,,,,,,
get rid of Backlog,SESIA-4,24366,,Improvement,Closed,SESIA,SX Spring Integration Adapters Extension,software,iwein,,,Major,Fixed,iwein,iwein,iwein,19/Oct/08 8:12 PM,23/Nov/08 12:54 AM,10/May/19 2:37 AM,23/Nov/08 12:52 AM,,,,,,,,,,Ftp Adapters,,,,,0,,Backlog violates the Poutsma principle. Coming up with a solution that doesn't might be a bit of a challenge.,,;03/Nov/08 9:37 PM;iwein;43200,,,,,,,,,,,,,,57600,14400,43200,75%,57600,14400,43200,,,,,,,,,,,,,,,,,,,,,,,,,,330048000,,,,,,19173,false,iwein(iwein),,,,0|i054of:,29964,26884,,,,,23/Nov/08 12:52 AM;iwein;Ftp components are much cleaner now. Basically the work is split in two between an inbound synchronizer (that moves new files into a local work directory) and a FileReadingMessageSource that works with this local directory. Nice side effect is that the local directory would survive a restart where the Backlog wouldn't have.,,,,,,,,,,,,,,,,,,,,,,
move org.springframework.integration.ftp from int to sesia,SESIA-2,24364,,Task,Closed,SESIA,SX Spring Integration Adapters Extension,software,iwein,,,Major,Fixed,iwein,iwein,iwein,19/Oct/08 8:08 PM,27/Oct/08 10:27 PM,10/May/19 2:37 AM,27/Oct/08 10:27 PM,,,,,,,,,,Ftp Adapters,,,,02/Nov/08 12:00 AM,0,,need to wait for RC1 to sort dependency on latest-integration. Some cleanup is needed to make it work. ,,moved the project over. build fails b/c it depends on latest integration. blocked until release;19/Oct/08 8:08 PM;iwein;3600,fixed build and polished sorted out .classpath;27/Oct/08 10:26 PM;iwein;7200,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,332985600,,,,,,19175,false,iwein(iwein),,,,0|i055n3:,30120,27082,,,,,,,,,,,,,,,,,,,,,,,,,,,
LdapTemplate caches password with pooled connections,LDAP-183,27019,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,olimih,olimih,22/Jun/09 2:58 AM,05/Feb/16 9:18 PM,10/May/19 2:37 AM,13/Aug/13 1:04 AM,1.3.0,,,,,,1.3.2,,,,,,,,0,,"It seems the LdapTemplate caches the DirContext for a specific user+password combination.

1. Create LdapTemplate with ""cn=Directory Manager""
2. Call ""LdapTemplate.authenticate"" for user ""cn=joe, dc=de"" and password ""test"" -> Result: true
3. Use the LdapTemplate to change the userPassword Attribute to ""tets""
4. Call ""LdapTemplate.authenticate"" for user ""cn=joe, dc=de"" and password ""test"" -> Result: true!!
5. Restart the application
6. Call ""LdapTemplate.authenticate"" for user ""cn=joe, dc=de"" and password ""test"" -> Result: false

Disabling the connection pooling solves this issue.

","Gnu/Linux, Java1.6.0_13, OpenDS 1.2.0","The actual work for in this issue wasn't much, but I invested a lot of work in trying to get an integration test scenario in place before actually doing anything about it.

Turns out I couldn't get either the embedded ApacheDS or my instance of Active Directory to work properly with changed passwords; ApacheDS in the version we're using for the integration tests doesn't apply changed passwords until restart, and Active Directory seems to take a while to apply changed passwords.

In the end I came to the conclusion that the change is minimal, and we'll do fine without integration test case for this specific authentication scenario. In the end there's still integration test cases for all {{ContextSource.getContext}} methods, verifying the environment settings so we should be ok.;13/Aug/13 1:02 AM;marthursson;240",Wrong time log on the last entry.;13/Aug/13 1:03 AM;marthursson;14400,,,,,,,,,,,,,,0,14640,,,0,14640,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2009-06-22 03:53:49.111,24883,false,rwinch(rwinch),,,,0|i0518v:,29408,24853,,,,,"22/Jun/09 3:53 AM;marthursson;I agree this might be confusing, but I wouldn't go so far as to call this a bug. You're asking for pooled connections (pooled connections are turned off in Spring LDAP 1.3), and pooled connections are what you're getting. Guess we might add a slight improvement in {{AbstractContextSource}} to make perfectly sure that the connection pooling is turned off in {{ContextSource#getContext(String principal, String credentials)}}. That would solve your problem, and you could still have a pooled {{ContextSource}}, which might be useful since the actual user search (which also requires getting a connection) can use a pooled connection.","28/Sep/10 6:46 PM;sbattaglia;I would recommend explicitly not using pooled connections for ContextSource#getContext(String principal, String credentials).  I think I was the person who suggested that method and when we had implemented it in CAS before it was implemented here, we explicitly did not use pooled connections for that method. We only used pooled onces for the ones that ContextSource actually managed.",16/Oct/10 1:48 AM;ulsa;Anyone has more to say about this? Should we or should we not limit pooling explicitly?,"13/Aug/13 12:55 AM;marthursson;Explicitly disabling native Java LDAP connection pooling for the {{ContextSource#getContext(String principal, String credentials)}}.",05/Feb/16 9:18 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/216,,,,,,,,,,,,,,,,,,
DataSource connections not being released when LDAP connection fails in JDBC integrated transaction.,LDAP-179,26394,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,kbobrien,kbobrien,22/Apr/09 9:12 PM,05/Feb/16 9:18 PM,10/May/19 2:37 AM,14/Aug/13 3:22 AM,1.3.0,,,,,,1.3.2,,,,,,,,0,,"When using JDBC transaction integration in Spring LDAP, we have discovered that when our LDAP server is unavailable the doBegin() method of the ContextSourceAndDataSourceTransactionManager first calls super.doBegin() of the DataSourceTransactionManager which is successful, then it calls doBegin() of the ldapManagerDelegate which fails throwing a TransactionException , however no cleanup of the DataSource connection is being performed in this case.

This leaves a binding in the TransactionSynchronizationManager resources for the DataSource and also an open connection to the database, even though it was never used. 

Later if the same thread attempts to create a transaction the following IllegalStateException is being thrown because the DataSource is still bound to the thread in the TransactionSynchronizationManager:

java.lang.IllegalStateException: Already value [org.springframework.jdbc.datasource.ConnectionHold er@79b1d1] for key [org.apache.commons.dbcp.BasicDataSource@335297] bound to thread [DefaultQuartzScheduler_Worker-7]

","Spring 2.5, OpenLDAP, Oracle 9i",;14/Aug/13 3:41 AM;marthursson;3600,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-14 03:22:12.216,24886,false,rwinch(rwinch),,,,0|i0519z:,29413,24977,http://forum.springsource.org/showthread.php?p=237677#post237677,,,,"22/Apr/09 9:30 PM;kbobrien;Suggested fix for this would be to add a try catch to ContextSourceAndDataSourceTransactionManager.doBegin() and call the doCleanupAfterCompletion() method.  However, some changes to AbstractCompensatingTransactionManagerDelegate.doCleanupAfterCompletion() would be required so that IllegalStateException is not thrown because the ContextSource part of the transaction has not been created yet. ","14/Aug/13 3:22 AM;marthursson;Now making sure that the created DataSource or Hibernate transation is properly cleaned up (including closing the underlying database connection) if failing to create the Ldap transaction, e.g. if the LDAP server is not available.",05/Feb/16 9:18 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/213,,,,,,,,,,,,,,,,,,,,
LdapUtils convertLdapException fails to convert exceptions when they are extended,LDAP-177,26197,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,kodarc,kodarc,31/Mar/09 12:08 AM,05/Feb/16 9:18 PM,10/May/19 2:37 AM,18/Nov/13 3:42 AM,1.3.0,,,,,,2.0.0,,,,,,,,0,,"Changes to LdapUtils were made to facilitate LDAP-100. However, by changing the checks to be based on the class, versus doing an instanceof comparison, sub-classes of the exceptions do not meet the condition and are all being classified as UncategorizedLdapException.

For example, the {{javax.naming.NameNotFoundException}} is defined by Apache DS as {{LdapNameNotFoundException extends javax.naming.NameNotFoundException}}",,;18/Nov/13 3:43 AM;marthursson;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,31/Mar/09 12:09 AM;kodarc;LdapUtils.patch;https://jira.spring.io/secure/attachment/15267/LdapUtils.patch,31/Mar/09 1:02 AM;kodarc;LdapUtilsTest.patch;https://jira.spring.io/secure/attachment/15268/LdapUtilsTest.patch,,,,,,,,,,102729600,,,,,2010-10-26 15:35:21.976,24888,false,rwinch(rwinch),,,,0|i05167:,29396,24836,,,,,"31/Mar/09 12:09 AM;kodarc;Notice that the hierarchy issues of LDAP-100 have already been handled in the sorting order of the condition checks. 

Modified the LdapUtils.convertLdapException to perform instanceof comparisons instead","31/Mar/09 1:02 AM;kodarc;Added test scenario for testing the conversion of Ldap exceptions for both exceptions in the javax.naming.* package, as well as Mock exceptions extended from the javax.naming.* package","26/Oct/10 3:35 PM;ulsa;I'm considering this patch, but I have a question:

When I decided to check for an exact match of the class, I deliberately didn't check the abstract base classes, like {{javax.naming.NamingSecurityException}} or {{javax.naming.ReferralException}}, because no instance could ever have the same class as one of those. However, going your route with {{instanceof}}, shouldn't those also be checked? I mean, you could very well have a {{MockReferralException}} extending {{javax.naming.ReferralException}}, right?",05/Feb/16 9:18 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/211,,,,,,,,,,,,,,,,,,,
Recursive Unbinds fail in transactional context,LDAP-168,25674,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Works as Designed,,kmbarlow,kmbarlow,16/Feb/09 2:24 AM,05/Feb/16 9:18 PM,10/May/19 2:37 AM,12/Aug/13 12:25 AM,1.3.0,,,,,,1.3.2,,,,,,,,0,,"The LdapTemplate object allows you to unbind an object and any nodes under it. The DefaultTempEntryRenamingStrategy generate the proper names, however, it gets called for the leaves first and then the higher level nodes. This is perfect with one exception... the performOperation() routine in the CompensatingTransactionOperationManager which creates the OperationExecutors for transactional operations, does not update the temporary DN of leaf DNs when a higher level node is unbound and renamed. Thus, when the commit is called, the leaf is still searched for under the original object name which has since been renamed and an EntryNotFound exception is thrown.

Forum discussion contains a simple solution which runs in N time - N should generally be small.  I do not believe the issue applies to any other operations (rebinds are the only other operations which invoke the renaming logic and they do not delete entries).",Spring LDAP - no environment dependencies.,;12/Aug/13 12:27 AM;marthursson;12600,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2009-02-16 05:27:10.89,24897,false,rwinch(rwinch),,,,0|i051a7:,29414,24978,http://forum.springsource.org/showthread.php?p=227045&posted=1#post227045,,,,"16/Feb/09 5:27 AM;marthursson;I wouldn't completely agree that it should be called a bug, since we do provide a means for solving this type of problem (pluggable TempEntryRenamingStrategy). However, it would possibly make sense to make this work out of the box. 

It will have to be a generic solution; we need to think this through and come up with some kind of hook to fit this into the intended architecture.","16/Feb/09 6:07 AM;kmbarlow;I agree with your assessment that a generic hook should be found... however, I just wanted to let you know that I did take the approach of using a custom TempEntryRenamingStrategy 1st (it was what you had suggested originally) and that only seemed to put me further away from a solution.  I did not trace it out as well as I had the current solution so I cannot say where it really started to deviate.  However: the real issue, in my opinion, was that operations where not queued... they are executed immediately and a queue is created for the clean-up work on commit.  In my opinion, it seems that to compensate for the scenario, one of two approaches were necessary... queue all incoming transactions until you know your full set of results, then apply changes... or 2... parse the current queue for modifications.  You guys do come up with some ingenious stuff so maybe you have a better solution...  as you said... an event based situation perhaps... I don't know... I just wanted to let you know that a custom TempEntryRenaming strategy did not solve my situation.

PS... as I think about it... it probably went awry because the renaming strategy is invoked to determine what the temp entry should be but if you try to compensate for future events at that point... (events which have not yet occurred) you will try assigning your temp entry to a location that does not yet exist.  This were the problems I experienced.","12/Aug/13 12:25 AM;marthursson;After digging into this a little bit deeper I have come to the conclusion that this works as advertised, provided that the recommended {{TempEntryRenamingStrategy}}, ({{DifferentSubtreeTempEntryRenamingStrategy}})is used.

I have verified it to work with a couple of new test cases.

It's not definitely not ideal that the default setup ({{DefaultTempEntryRenamingStrategy}}) doesn't work for more complex scenarios; I think the best solution would probably be to require explicit configuration of {{TempEntryRenamingStrategy}} but that would not be a change suitable for a point release. We might want to keep this in mind for the 2.0 release.

In the meantime, I have done a couple of things to make things clearer:
* Now stressing the {{TempEntryRenamingStrategy}} problems more in the reference documentation.
* Added a log warning on startup if the {{DefaultTempEntryRenamingStrategy}} is used.",05/Feb/16 9:18 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/202,,,,,,,,,,,,,,,,,,,
Add utility method to simplify working with SingleContextSource,LDAP-142,24503,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,marthursson,marthursson,29/Oct/08 6:54 PM,05/Feb/16 9:18 PM,10/May/19 2:37 AM,10/Sep/13 5:44 AM,,,,,,,2.0.0.M1,,,,,,,,0,,"Wiring a {{SingleContextSource}} up in the application context is typically not a very good idea - if the target connection goes bad you will have no way of refreshing it and none of your LDAP calls will work. Maybe we should have some utility method that does all of the messy stuff, providing a callback where the user can work with an {{LdapTemplate}} instance specifically created to work against a {{SingleContextSource}}. Something like the following:
{code}
public void doWithSingleConnection(ContextSource targetContextSource, LdapTemplateCallback callback){
  SingleContextSource singleContextSource = null;
  try{
    singleContextSource = new SingleContextSource(targetContextSource);
    LdapTemplate ldapTemplate = new LdapTemplate(singleContextSource);
    callback.doWithLdapTemplate(ldapTemplate);
  } finally {
    if(singleContextSource != null) {
      singleContextSource.destroy();
    }
  }
}
{code}",,;10/Sep/13 5:45 AM;marthursson;18000,,,,,,,,,,,,,,,0,18000,,,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2009-03-13 06:11:37.269,10669,false,rwinch(rwinch),,,,0|i0519b:,29410,24974,,,,,"13/Mar/09 6:11 AM;mariuss;Good idea, but SingleContextSource cannot be constructed based on a ContectSource. Not sure why is that.

Also, what is LdapTemplateCallback?

That being said, tried using SingleContextSource with VLV (from sandbox) and it did not work:
http://forum.springsource.org/showthread.php?t=68749
",10/Sep/13 5:44 AM;marthursson;Added this and cleaned up the open LDAP integration tests along the way. Installed a local OpenLDAP server to make sure everything works.,05/Feb/16 9:18 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/180,,,,,,,,,,,,,,,,,,,,
modifyAttributes produces invalid SchemaViolationException in a particular use case,LDAP-119,22779,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,richrem,richrem,24/Jun/08 7:25 AM,05/Feb/16 9:17 PM,10/May/19 2:37 AM,14/Aug/13 2:26 AM,1.2.1,,,,,,1.3.2,,,,,,,,1,,"This is most likely not related to any environment, but I have found the following issue with modifyAttributes:

Use case is a basic user/role relationship where we want to update the list of users that have been assigned to a role. A role has the following structure in our system, where values in <angle brackets> are variable:

objectClass: groupOfUniqueNames
objectClass: top
cn: <ROLE_NAME>
uniqueMember: <DN of a user>
uniqueMember: <optional DN of another user>
...
description: <optional description>

Since a groupOfUniqueNames must have at least one uniqueMember, the following use case pseudo code fails for us:

1) retrieve an existing role using the role DN
2) convert to a role domain object using a context mapper
3) update the list of uniqueMember (users) to a completely different set of users from the original using DirContextOperations.setAttributeValues(""uniqueMember"", newMembers)
4) call ldapTemplate.modifyAttributes
5) watch a completely (now explainable) bogus SchemaViolationException get thrown

The problem is that (I believe) the spring-ldap code deletes all the uniqueMember entries before adding the new ones, so the SchemaViolationException is thrown because you can't have zero uniqueMembers.

Note: the SchemaViolationException is not thrown when at least one of the new users is the same as one that already exists for the role.

What (I believe) needs to happen is that more logic needs to be applied under the covers when the multi-attribute being modified is a required attribute, such that the zero value condition is not reached. A suggested approach might be to do set compares (old values vs new values) and add new (non-existing) ones first, then delete obsolete (existing, but not in new set) attribute values.
","MacOSX, Apache Directory Server 1.0.2",;14/Aug/13 3:43 AM;marthursson;7200,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-14 02:26:55.301,24944,false,rwinch(rwinch),,,,0|i0519r:,29412,24976,,,,,"14/Aug/13 2:26 AM;marthursson;It appears this is caused by a peculiarity in ApacheDS. The order of ADD/REMOVE modifications doesn't matter - if all values are removed it will still return a SchemaViolation error.

I did test the same scenario on Active Directory, and it seems to be happy either way; as long as the attribute value is not empty after all modifications it will happily go along its business.

I did implement a workaround that appears to be working: if all existing attribute values are being replaced, a single REPLACE modification will now be issued instead of individual ADD/REMOVE modifications.

If it is a ""normal"" modification however, it will still work as before, i.e. individual ADD/REMOVE modifications will still be issued.",05/Feb/16 9:17 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/158,,,,,,,,,,,,,,,,,,,,,
allow eager invalidation of dirty (pooled) connections,LDAP-101,20598,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,joekearney,joekearney,14/Feb/08 8:25 PM,05/Feb/16 9:17 PM,10/May/19 2:37 AM,11/Sep/13 2:03 AM,1.2.1,,,,,,2.0.0.M1,,,,,,,,2,,"If a search fails due to a connection fault, the connection should be assumed invalid. In the pooling context source implementation (single context models are similarly affected) if a connection fails it should be removed from the pool. Under current behaviour, this is only possible through validation on borrow and return, which are a certain performance hit. Worse, if the pool is heavily loaded, even with test-on-idle semantics a dirty connection may never be removed from the pool, just reused by many pool clients.

Suggested solution: mark on the context that it has failed, as early as possible. For example, in the LdapTemplate#search NamingException catch block (line 295 in v1.2.1). Could be implemented using a mixin interface, for example FailureAwareDirContext. If the exception was a non-transient one (e.g. CommunicationException rather than SizeLimitExceededException) then mark on the context that it has failed. When it is returned to the pool (e.g. in DelegatingContext#close or PoolingContextSource#returnObject) check if the DirContext implements this interface, check its status and invalidate it if necessary.

This solution will not provide retry for clients of the pool, but will at least prevent dirty contexts staying too long in the pool.",,;11/Sep/13 2:06 AM;marthursson;14400,,,,,,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2008-03-25 21:31:33.295,12963,false,rwinch(rwinch),,,,0|i04zbz:,29098,24036,,,,,"21/Feb/08 5:32 AM;joekearney;Improvement to suggested solution: give protected access to the pool. This would give access to, in particular, invalidate() and evict().",25/Mar/08 9:31 PM;marthursson;Seems you have a resonable solution. Would you be willing to provide a patch?,"27/Mar/08 6:24 AM;joekearney;I would be willing to, but it will take a couple of weeks to get around to it I'm afraid.

Incidentally, I take back my comment that giving protected access to the pool would solve the problem - it wouldn't. This needs to be fixed in org.springframework.ldap.pool.DelegatingContext#close(), which should call invalidateObject() as appropriate.","27/Mar/08 10:03 PM;marthursson;Well, we're not very close to any new release right now, so time is not that critical.","17/Jun/08 7:29 PM;marthursson;Any progress on this? We're getting closer to release now, so if this would be included we need to have it pretty soon or postpone it for next release.","01/Jul/08 4:56 AM;joekearney;Hi Mattias, Eric,

The solution I used for this is fairly hacky, and works around the problem rather than solving it in the Spring-LDAP code, so I can't really submit a patch. I will describe as well as possible what I think can be done, and I hope this will be enough for you to put together a solution easily.

My workaround was as follows:
* At creation (in the context source) wrap the DirContext in a proxy that catches all throwables on any method invocation.
* If the caught exception is not in a set of transient exceptions (explanation later), mark the proxy as ""invalid"", i.e. set a flag.
* Enforce that the pool tests on borrow and return (don't need to bother with idle), and in validation test whether the DirContext is our FailureAwareDirContextHandler invocation handler, then test the flag as a shortcut before running any real validation (if any).
* This means that by the time close() is called on the context (through LdapTemplate:309, closeContextAndNamingEnumeration()), the proxy already knows to ensure test failure.
* Even running with no real validation (running a fast ldap query), any dirty connection will only live for at most one bad operation before being evicted by the flag.

Transient exceptions are exceptions thrown by the DirContext's methods that *definitely* do not require the connection to be closed and rebuilt. A conservative list is:
* NameNotFoundException
* SizeLimitExceededException
* TimeLimitExceededException
Note that these will all be javax.naming exceptions, since we wrap the real DirContext before the rest of Spring gets a look-in.

What I would suggest:
* Add an invalidate() method (maybe through a FailureAwareContext/PooledObject interface or something, maybe something similar already exists for this?) to org.springframework.ldap.pool.DelegatingContext to simply flag when called.
* In the finally block in LdapTemplate#search(...), if an exception is caught (ex != null) and the exception is not transient (as above) then check whether the context is one of these (interface or concrete type) and invalidate().
* Alter DelegatingContext#close to query the flag before returnObject(), calling invalidateObject() instead as appropriate.
* When LdapTemplate#closeContextAndNamingEnumeration is called for the context, close will not blindly return the possibly dirty context back to the pool.

I hope this helps, and with any luck it shouldn't require more than a few lines of code. Please contact me if I can help any more, I'll try to reply a little quicker this time!",16/Oct/10 1:49 AM;ulsa;Is this still relevant?,28/Sep/11 5:24 AM;cvanes;Is this likely to be included in an upcoming release? We're facing the same problem.,28/May/12 3:58 AM;cvanes;Any further update on this?,"11/Sep/13 2:03 AM;marthursson;In the end I decided to completely handle this inside of the pooling part of the library; {{LdapTemplate}} doesn't know and doesn't care about connections or their validity.

Turned out not to be too complicated really: building on the suggestions in this thread, we now create generated proxies (implementing a new {{FailureAwareContext}} interface) around all pooled {{DirContext}} instances and automatically invalidate the instances when they are closed based on exceptions thrown during their usage.

The only way in which my solution differs to the suggestions here is that in the end I decided against the *transient* approach and used the exact opposite instead. This means that the {{PoolingContextSource}} is configured with *non-transient* Exceptions, i.e. the Exceptions that should cause eager invalidation are explicitly configured rather than implicitly assumed, which feels like a safer approach. 

I could really only find one Exception that should be considered non-transient out of the box, and that is {{javax.naming.CommunicationException}}. This is the default if nothing is particularly configured. For specific requirements the {{nonTransientExceptions}} property of {{PoolingContextSource}} should be used, but if you guys have suggestions on other Exceptions that should cause eager invalidation int the default configuration, please let me know asap.",05/Feb/16 9:17 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/141,,,,,,,,,,,,
DefaultInboundRequestMapper strips out the newline when the content-type of the http request is text/plain or text/xml,INT-808,28077,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,biju.kunjummen,biju.kunjummen,28/Sep/09 6:20 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,30/Sep/09 8:12 AM,1.0.3,,,,,,1.0.4,2.0 M1,,Adapters,,,,,0,,"DefaultInboundRequestMapper strips out the newline from the Posted content when the content-type of the http request is text/plain or text/xml. 
This bug can be traced to the following code:
	
private Object createPayloadFromTextContent(HttpServletRequest request) throws IOException {
		StringBuilder sb = new StringBuilder();
		BufferedReader reader = request.getReader();
		String line = reader.readLine();
		while (line != null) {
			sb.append(line);
			line = reader.readLine();
		}
		return sb.toString();
}

In the above code, no newline is being added to the Stringbuffer. I think a simpler code will be to convert the inputstream to a String.
",,;30/Sep/09 8:03 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,28/Sep/09 7:23 AM;biju.kunjummen;test.zip;https://jira.spring.io/secure/attachment/15746/test.zip,,,,,,,,,,,303091200,,,,,2009-09-28 07:29:16.783,10872,false,mark.fisher(mark.fisher),,,,0|i04cv3:,25458,3408,http://forum.springsource.org/showthread.php?t=77883,,,,"28/Sep/09 7:23 AM;biju.kunjummen;Attached test can be used to verify the bug. 
",28/Sep/09 7:29 AM;mark.fisher;Thanks for pointing this out and especially for providing a test case.,"30/Sep/09 8:12 AM;mark.fisher;Newlines are now preserved. This has been resolved for both 2.0.M1 and the 1.0.x branch (1.0.4).
",,,,,,,,,,,,,,,,,,,,
Upgrade to Spring 3.0 RC1,INT-807,28064,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,27/Sep/09 2:38 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,28/Sep/09 11:02 PM,,,,,,,2.0 M1,,,Build,,,,,0,,,,;28/Sep/09 3:22 PM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,303350400,,,,,,25896,false,mark.fisher(mark.fisher),,,,0|i0523j:,29546,25386,,,,,,,,,,,,,,,,,,,,,,,,,,,
dynamically create directories with file:outbound-channel-adapter,INT-805,28050,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,corani,corani,25/Sep/09 7:10 AM,26/Sep/12 8:26 AM,10/May/19 2:37 AM,15/Jun/12 8:30 AM,2.2 M2,,,,,,2.2 M3,2.2 M3 Sprint 2,,Adapters,,,,,7,,"I am writing an application that handles messages coming in thru a webservice. For auditing all incoming messages have to be saved to disk. Because a potential large amount of messages will be handled, and they should be easily found back later, I would like to be able to save my messages into different directories based on the date.

Currently I can set a filename per message. In addition to that I would like to be able to set a directory relative to the base-directory specified in the outbound-channel-adapter. If this directory doesn't exist, it should be created.

To remain backwards compatible I image the filename header can contain a String - use the current behaviour - or a File - use the proposed behaviour.

In addition, the FilenameGenerator should be enhanced to be able to return a full (relative) path.",,;14/Jun/12 3:02 PM;hillert;21600,,,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,,,,27/Mar/12 1:03 PM;morgan;ArchiveFileNameGenerator.java;https://jira.spring.io/secure/attachment/19547/ArchiveFileNameGenerator.java,,,,,,,,,,,217814400,,,,,2012-03-14 10:21:52.42,25898,false,hillert(hillert),,,,0|i01bu7:,7795,3305,http://forum.springsource.org/showthread.php?78170-file-outbound-channel-adapter-filename-generator-not-working,,,,"14/Mar/12 10:21 AM;mark.fisher;Gunnar, feel free to assign to Oleg if that makes more sense. Sounds like this one might be resolved already via other issues.","19/Mar/12 10:15 AM;mark.fisher;It should be possible to use a filename expression where the base path is static but the dynamic part is appended to it.

We might want to consider a NEW issue that makes it possible to have the filename expression considered as a relative path (when not starting with a slash, for example), but as long as the above workaround is feasible, we could defer that new feature until 2.2.0.","27/Mar/12 9:53 AM;hillert;This will fail:

{code}
    <int-file:outbound-channel-adapter  auto-create-directory=""true"" channel=""outputChannel"" directory=""target/out"" filename-generator-expression=""'/bb/file.txt'"" temporary-file-suffix="".writing""/>
{code}

Directory 'bb' does not exist and 'auto-create-directory' only applies to the 'directory' attribute which is created at initialization.","27/Mar/12 10:00 AM;oleg.zhurakousky@springsource.com;Gunnar

Could you please attach a test or link to the github that reproduces it. Best is to create a branch for this issue with failing tests and push it so we can look at see what's going on.",27/Mar/12 1:05 PM;morgan;I had to do something similar and wrote a FileNameGenerator instance that wraps around another FileNameGenerator (see attached file).  I then created a bean instance with the root directory assigned as a constructor-arg and assigned the bean as the filename-generator attribute.,"02/Apr/12 1:40 PM;hillert;Created 2 cases illustrating the issue. One test-case succeeds and one test case fails:

https://github.com/ghillert/spring-integration/commit/ab425b1cf23c6a506df9e3225158241e037f204c

{code}
<outbound-channel-adapter id=""save-to-base-directory""
		channel=""inputChannelSaveToBaseDir""
        auto-create-directory=""true""
        filename-generator-expression=""'foo.txt'""
		directory=""target/base-directory"" />

<outbound-channel-adapter id=""save-to-sub-directory""
		channel=""inputChannelSaveToSubDir""
        auto-create-directory=""true""
        filename-generator-expression=""'/sub-directory/foo.txt'""
		directory=""target/base-directory"" />
{code}","02/Apr/12 1:56 PM;hillert;Workaround:

Depending on your use-case, you can use a custom implementation of the FileNameGenerator interface. The following custom FileNameGenerator is references by the *File Outbound Channel Adapter* and uses a *base directory* and retrieves the sub-directory from the Message Header. The *outbound-channel-adapter's* *directory* attribute is mandatory and is set to equal the MyFilenameGenerator's *baseDirectory* property.

{code}
public class MyFilenameGenerator implements FileNameGenerator {
	
  private String baseDirectory = """";
	
  public String generateFileName(Message<?> message) {

    File directory = (File) message.getHeaders().get(""directory"");	
    new File(new File(baseDirectory), directory.getPath()).mkdirs();	
    return directory.getPath() + ""/"" + message.getHeaders().get(FileHeaders.FILENAME);
	
  }
	
  public void setBaseDirectory(String baseDirectory) {
    Assert.notNull(baseDirectory);
    this.baseDirectory = baseDirectory;

  }	
}
{code}","13/Jun/12 10:04 PM;hillert;Issued Pull Request:

https://github.com/SpringSource/spring-integration/pull/494

Added *directory-expression* attribute for File Outbound Channel Adapter and File Outbound Gateway",,,,,,,,,,,,,,,
"Setting JMS header with <jms:header-enricher reply-to=""queue""/> does not work",INT-804,28043,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,ron,ron,24/Sep/09 8:50 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,30/Sep/09 4:53 AM,1.0.3,,,,,,1.0.4,2.0 M1,,Core,,,,,0,,"Setting JMS header with <jms:header-enricher reply-to=""replyQueue""/> does not work. Attribute value is already treated as a String regardless of what is specified. On the other hand a reference to JMS destination is expected. As result, it failed to set JMS ""reply to"" header.

My config.xml: 
	<jms:header-enricher reply-to=""replyQueue""/>
..........
	<bean id=""replyQueue"" class=""com.tibco.tibjms.TibjmsQueue"">
		<constructor-arg type=""java.lang.String"" value=""test.replyqueue""/>

Looking into the code, it failed in the following check in SimpleHeaderEnricherParser class:

	Object value = (this.referenceAttributes.contains(name))
		? new RuntimeBeanReference(node.getNodeValue())
		: node.getNodeValue();

The value of name is the property name, ""replyTo"" which is not in the referenceAttributes that contains the attribute name of ""reply-to"".

A quick fix would be to change the JmsNamespaceHandler class to initialize the paser with ""replyTo"" instead of ""reply-to"".

	this.registerBeanDefinitionParser(""header-enricher"",
				new SimpleHeaderEnricherParser(JmsHeaders.PREFIX, new String[] { ""replyTo"" }));
",,;30/Sep/09 4:49 AM;mark.fisher;3600,,,,,,,,,,,,,,5400,1800,3600,66%,5400,1800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,303091200,,,,,2009-09-30 04:53:46.901,25899,false,mark.fisher(mark.fisher),,,,0|i0528v:,29570,3407,,,,,"30/Sep/09 4:53 AM;mark.fisher;Thanks for pointing this out and debugging!

The issue is now resolved for both 1.0.4 and 2.0.M1 (see the Fisheye tab for details).

NOTE: in 2.0, we are likely modifying header-enrichers so that key/value pairs are provided as sub-elements. Generally, we're reluctant to make changes that break backwards-compatibility, but having the headers at top-level alongside attributes such as ""input-channel"" and ""output-channel"" seems to generate a lot of confusion. We'd be interested in your thoughts on that issue as well: INT-712",,,,,,,,,,,,,,,,,,,,,,
hashCode and toString are considered for ServiceActivator,INT-797,27937,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,13/Sep/09 2:04 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,22/Sep/09 6:33 AM,2.0 M1,,,,,,1.0.4,2.0 M1,,,,,,,0,,"Caused by: java.lang.IllegalArgumentException: At most one method can expect only Message headers rather than a Message or payload, but found two: [public final java.lang.String Obfuscated$$EnhancerByCGLIB$$17c03c3f.toString()] and [public final int Obfuscated$$EnhancerByCGLIB$$17c03c3f.hashCode()]
	at org.springframework.util.Assert.isTrue(Assert.java:65)
	at org.springframework.integration.handler.PayloadTypeMatchingHandlerMethodResolver.initMethodMap(PayloadTypeMatchingHandlerMethodResolver.java:71)

I'm running against 2.0.0.BUILD-SNAPSHOT",,;22/Sep/09 6:06 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,303782400,,,,,2009-09-16 00:56:49.85,25905,false,mark.fisher(mark.fisher),,,,0|i04cxb:,25468,3406,,,,,"16/Sep/09 12:56 AM;mark.fisher;I would like to know if this affects 1.0.3 as well, since that's when the no-arg methods were first considered valid for a Service Activator. Could you check that?

Other than that, it seems that the reason that these methods are not being ""filtered out"" is that they are on a CGLIB proxy whereas the util method that checks for valid messaging methods is excluding those which are defined on Object. See: HandlerMethodUtils.isValidHandlerMethod()

We should be able to modify that so that any methods that are *originally* defined on Object are bypassed.",22/Sep/09 5:56 AM;mark.fisher;Adding 1.0.4 as a fix target as well.,22/Sep/09 6:11 AM;mark.fisher;Resolved for 2.0-M1,22/Sep/09 6:33 AM;mark.fisher;Resolved for 1.0.4 also.,,,,,,,,,,,,,,,,,,,
DefaultConfiguringBeanFactoryPostProcessor shouldn't be registered twice,INT-796,27908,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,09/Sep/09 2:10 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,02/Oct/09 9:00 AM,2.0 M1,,,,,,1.0.4,2.0 M1,,Core,,,,,0,,"DefaultConfiguringBeanFactoryPostProcessor shouldn't be registered twice.  The handler that registers it could easily check for an existing instance, but it doesn't, and the result is that the context cannot start up because two NullChannels are registered.",,;02/Oct/09 9:01 AM;mark.fisher;10800,,,,,,,,,,,,,,3600,0,10800,300%,3600,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,302918400,,,,,2009-09-29 00:01:27.824,25906,false,mark.fisher(mark.fisher),,,,0|i0529z:,29575,3412,,,,,"29/Sep/09 12:01 AM;mark.fisher;The handler that registers it does actually perform the following check:
{code}
if (!parserContext.getRegistry().isBeanNameInUse(DEFAULT_CONFIGURING_POSTPROCESSOR_BEAN_NAME)) { ... }
{code}

Can you describe how to reproduce the bug? I assume you must have seen this while working with a hierarchy of contexts?... while the parserContext.getRegistry() check is limited to its own level of a hierarchy.
","01/Oct/09 10:24 PM;david_syer;If I recall correctly, this happens when you create a child application context  and copy over the BeanFactoryPostProcessors from the parent.  The check in the handler could just use the bean type as well as or instead of the name (since registering two post proecessors of the same type would probably also be an error)?  Or would that break in the IDE?","02/Oct/09 3:47 AM;mark.fisher;I think I'm going to need a failing test case. I have been trying to reproduce this with no luck. I created a parent and a child from XML files where both are using the Spring Integration namespace. I copied over the parent's BeanFactoryPostProcessors, and then I refreshed the child context. I am not seeing any errors.","02/Oct/09 9:00 AM;mark.fisher;The AbstractIntegrationNamespaceHandler now checks the parent context as well to see if there is already a DefaultConfiguringBeanFactoryPostProcessor.

The most significant result of this change is that child contexts now use the same ""errorChannel"" and ""taskScheduler"" as the parent context *unless* a new one is configured explicitly in the child.

See the following test case for more detail:
https://fisheye.springsource.org/browse/~raw,r=2510/spring-integration/trunk/org.springframework.integration/src/test/java/org/springframework/integration/config/xml/DefaultConfiguringBeanFactoryPostProcessorHierarchyTests.java#r2510
",02/Oct/09 9:03 AM;mark.fisher;resolved for the 1.0.x branch as well (1.0.4),,,,,,,,,,,,,,,,,,
Add @Publisher annotation,INT-792,27865,20077,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Sep/09 2:37 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,04/Sep/09 2:37 AM,,,,,,,2.0 M1,,,Core,,,,,0,,"The annotation should provide the EL expression to use for creating a message payload (perhaps a default of ""#return"") and optional expressions for header values (as a String array of ""key=expression"" entries).

The annotation should also accept a channel name to be the destination of the published Message. That can be optional since the interceptor that relies on this information would most likely support a ""defaultChannel"" property itself.
",,;04/Sep/09 2:37 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,305337600,,,,,,25910,false,mark.fisher(mark.fisher),,,,0|i02lpr:,15227,14475,,,,,"04/Sep/09 2:37 AM;mark.fisher;The @Publisher annotation exists. Currently, it is in the 'org.springframework.integration.aop' package.",,,,,,,,,,,,,,,,,,,,,,
Create an outbound JDBC Channel Adapter,INT-791,27864,25284,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,mark.fisher,mark.fisher,04/Sep/09 2:14 AM,13/Sep/10 6:00 PM,10/May/19 2:37 AM,06/May/10 7:01 PM,,,,,,,2.0 M4,,,Adapters,,,,,1,,Performs an insert or update. It should accept a Message with a Map payload as input.,,;06/May/10 7:01 PM;david_syer;7200,,,,,,,,,,,,,,28800,21600,7200,25%,28800,21600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,284256000,,,,,2010-05-06 19:01:42.165,25911,false,mark.fisher(mark.fisher),,,,0|i02lcv:,15169,3144,,,,,06/May/10 7:01 PM;david_syer;Fixed.  There is no restriction on the payload type of the outgoing message.,,,,,,,,,,,,,,,,,,,,,,
Add UDP outbound adapter,INT-783,27784,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Aug/09 4:48 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,09/Oct/09 4:16 AM,,,,,,,2.0 M1,,,Adapters,,,,,1,,,,;09/Oct/09 3:55 AM;mark.fisher;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,302313600,,,,,,25917,false,mark.fisher(mark.fisher),,,,0|i0525b:,29554,25394,,,,,"09/Oct/09 4:16 AM;mark.fisher;the initial, rough version of the UDP datagram packet sending MessageHandler has been committed for 2.0 M1

In addition to namespace support (INT-841), this will likely require some additional configuration options (perhaps a simple specification for multicast, etc.).",,,,,,,,,,,,,,,,,,,,,,
Add UDP inbound adpater,INT-782,27783,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Aug/09 4:48 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,09/Oct/09 4:16 AM,,,,,,,2.0 M1,,,,,,,,1,,"This should be a background listener, and it should delegate to a TaskExecutor.",,;09/Oct/09 3:37 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,302313600,,,,,,25918,false,mark.fisher(mark.fisher),,,,0|i02j3z:,14805,14110,,,,,"09/Oct/09 4:16 AM;mark.fisher;the initial, rough version of the UDP datagram packet receiving Channel Adapter has been committed for 2.0 M1

In addition to namespace support (INT-841), this will likely require some additional configuration options (perhaps a simple specification for multicast, etc.).",,,,,,,,,,,,,,,,,,,,,,
Create EL-based Filter,INT-777,27765,25488,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,28/Aug/09 8:52 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,31/Aug/09 4:36 AM,,,,,,,2.0 M1,,,Core,,,,,0,,"This would be valid with any SpEL expression that evaluates to a boolean value:

{code}
   <filter input-channel=""numbers"" expression=""payload &gt; 0"" output-channel=""positives""/>
{code}",,;31/Aug/09 4:35 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,305942400,,,,,,10705,false,mark.fisher(mark.fisher),,,,0|i02lpj:,15226,14474,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor parsers to accommodate EL-based endpoints without code duplication,INT-776,27763,25488,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,28/Aug/09 6:25 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,01/Oct/09 3:29 AM,,,,,,,2.0 M1,,,Core,,,,,0,,,,;28/Aug/09 6:38 AM;mark.fisher;14400,;01/Oct/09 3:30 AM;mark.fisher;7200,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,303004800,,,,,,25921,false,mark.fisher(mark.fisher),,,,0|i03087:,17579,16993,,,,,"28/Aug/09 8:37 AM;mark.fisher;TransformerParser, SplitterParser, and DefaultRouterParser are now all extending AbstractDelegatingConsumerEndpointParser where almost all of the ref vs. inner-bean vs. expression logic exists.
","01/Oct/09 3:29 AM;mark.fisher;FilterParser is also now a subclass.

As of now, the idea with regard to ""service-activator"" is that ""expression"" will not be supported. Basically, a ""transformer"" element could always be used in such a case, and if the message is being modified based on a simple EL expression, then it is semantically within the realm of a transformer. This way ""service-activator"" is really limited to those cases where you are actually invoking a service layer object. Hence the ""ref"" is required for ""service-activator"" (although we may support scripts there in the future... unless the same rule applies where a script-based endpoint would always fall under the category of ""transformer"" instead).

The only other candidate for EL expressions that does not yet have the support is the Aggregator. We will include that support post-2.0.M1 (hopefully M2) since there are other big changes taking place within the Aggregator codebase. See: INT-818
",,,,,,,,,,,,,,,,,,,,,
Create EL-based Router,INT-775,27762,25488,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,,mark.fisher,mark.fisher,28/Aug/09 6:24 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,28/Aug/09 8:32 AM,,,,,,,2.0 M1,,,Core,,,,,0,,,,;28/Aug/09 8:28 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,305942400,,,,,,25922,false,mark.fisher(mark.fisher),,,,0|i0523b:,29545,25385,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create EL-based Splitter,INT-774,27761,25488,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,28/Aug/09 4:55 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,28/Aug/09 5:23 AM,,,,,,,2.0 M1,,,Core,,,,,0,,"SpEL expressions should be able to evaluation against the payload and/or headers. Collection projection and selection may also be useful, e.g.:

{code}
   <splitter input-channel=""input"" expression=""payload.numbers.?[#this &lt; 5]"" output-channel=""output""/>
{code}",,;28/Aug/09 4:56 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,305942400,,,,,,10962,false,mark.fisher(mark.fisher),,,,0|i02lpz:,15228,14476,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create EL-based Transformer,INT-773,27746,25488,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,26/Aug/09 8:11 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,26/Aug/09 8:31 AM,,,,,,,2.0 M1,,,Core,,,,,0,,"Namespace support should be like this:
{code}
<transformer input-channel=""in"" expression=""payload.foo + headers.bar"" output-channel=""out""/>
{code}",,;26/Aug/09 8:30 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,306115200,,,,,,25923,false,mark.fisher(mark.fisher),,,,0|i02lfb:,15180,14447,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ExpressionEvaluationMessageProcessor,INT-767,27680,27678,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Aug/09 9:25 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,26/Aug/09 8:20 AM,,,,,,,2.0 M1,,,Core,,,,,0,,"This will be a MessageProcessor implementation that delegates to Spring's ExpressionParser and EvaluationContext to process the Message according to a user-provided EL expression.

It will then be usable for Transformers, Filters, Routers, etc.
",,;26/Aug/09 8:20 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,INT-766,,,,,,,,,,,,,,,,,,,,,,,306547200,,,,,,25929,false,mark.fisher(mark.fisher),,,,0|i02lq7:,15229,14477,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Please add support for ""selector"" attribute on both inbound-channel-adapter and message-driven-channel-adapter",INT-764,27676,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,ron,ron,21/Aug/09 7:18 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,04/Sep/09 8:17 AM,1.0.3,,,,,,2.0 M1,,,Adapters,,,,,0,,"Please add support for ""selector"" attribute on both inbound-channel-adapter and message-driven-channel-adapter
",,;04/Sep/09 8:17 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,305337600,,,,,2009-09-04 08:17:03.385,12499,false,mark.fisher(mark.fisher),,,,0|i02khb:,15027,14321,http://forum.springsource.org/showthread.php?t=50183,,,,"04/Sep/09 8:17 AM;mark.fisher;The 'selector' attribute is now supported on the <inbound-channel-adapter/>, <message-driven-channel-adapter/>, and <inbound-gateway/> elements within the JMS namespace. Any valid JMS Message selector expression may be provided.
",,,,,,,,,,,,,,,,,,,,,,
file outbound channel parser adds file: prefix to property placeholders,INT-740,27371,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,18/Jul/09 6:10 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,18/Jul/09 6:29 AM,1.0.2.SR1,,,,,,1.0.3,,,Adapters,,,,,0,,This is the mirror issue of INT-731 for outbound file adapters. Goes for channel adapter as well as gateway.,,;18/Jul/09 6:12 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,309484800,,,,,2009-07-18 06:29:19.383,25950,false,mark.fisher(mark.fisher),,,,0|i01wcf:,11117,11096,,,,,18/Jul/09 6:29 AM;mark.fisher;https://fisheye.springsource.org/changelog/spring-integration/?cs=2335,,,,,,,,,,,,,,,,,,,,,,
"add ""apply-sequence"" boolean flag to RecipientListRouter",INT-679,27021,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,khanh,khanh,22/Jun/09 4:19 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,29/Jun/09 9:42 AM,1.0.2.SR1,,,,,,1.0.3,,,Core,,,,,0,,"In the book of G. Hohpe and B. Woolf, it can be done either with a Recipient List or with a Publish Subscribe Channel according to where the knowledge of recipients is.

If the PublishSubscribe Channel can add properties, the RecipientList should too.",,;29/Jun/09 9:40 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,311126400,,,,,2009-06-29 09:42:45.226,26002,false,mark.fisher(mark.fisher),,,,0|i01wkn:,11154,11133,http://forum.springsource.org/showthread.php?t=73780,,,,"29/Jun/09 9:42 AM;mark.fisher;The 'applySequence' flag is now available on RecipientListRouter.The default value is false (to avoid any overhead of creating new Message instances when not necessary).

Commit log:
https://fisheye.springsource.org/changelog/spring-integration?cs=2169
",,,,,,,,,,,,,,,,,,,,,,
Add support for Multipart File uploads for inbound HTTP,INT-673,26965,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Jun/09 10:04 AM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,29/Jun/09 1:23 PM,,,,,,,1.0.3,,,Adapters,,,,,0,,"The inbound request mapper should be able to delegate to a MultipartResolver implementation if available within the context (using the same default bean name as DispatcherServlet: ""multipartResolver""). The responsibility for locating a MultipartResolver bean should probably be in the HttpInboundEndpoint (and it can configure the DefaultInboundRequestMapper's reference - as long as no explicit request mapper has been provided).

If the request has been wrapped as a MultipartHttpServletRequest, then the content type can be checked. If it is known, and it begins with ""text"", then the MultipartFile can be copied to a String in the parameter map (we should support a charset option). If the contentType does not begin with ""text"", then the MultipartFile can be copied to a byte array within the parameter map instead.",,;29/Jun/09 1:14 PM;mark.fisher;43200,,,,,,,,,,,,,,43200,0,43200,100%,43200,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,311126400,,,,,,26006,false,mark.fisher(mark.fisher),,,,0|i01cyf:,7976,8390,,,,,"29/Jun/09 1:22 PM;mark.fisher;Perhaps in 2.0 we might consider support for moving the MultipartFile to a directory and passing a File instance within the Message payload instead...

In case the MultipartFile should instead be copied to a File (rather than actually passed within a Message payload as String or byte array), then we could even support a directory configuration option. The MultipartFile could be copied to that directory using the last part of the original filename (which is most often missing any path info anyways). If the file-copy approach is used, then the resulting message payload would be a File instance pointing to that newly copied File.
","29/Jun/09 1:23 PM;mark.fisher;String and byte array conversion are now supported.

We may consider the MultipartFile to File conversion in 2.0 if there is demand.
",,,,,,,,,,,,,,,,,,,,,
Add namespace support for PayloadTypeRouter,INT-663,26791,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,oleg.zhurakousky@springsource.com,mark.fisher,mark.fisher,02/Jun/09 11:55 PM,28/Jun/09 11:48 AM,10/May/19 2:37 AM,19/Jun/09 3:55 AM,,,,,,,1.0.3,,,Core,,,,,0,,,,Namespace support has been implemented. See PayloadTypeRouterParser and HeaderValueRouterParser as well as RouterParser. Schema was updated to reflect new element structures.;18/Jun/09 3:25 PM;oleg.zhurakousky@springsource.com;10800,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,311990400,,,,,2009-06-18 09:17:47.773,26013,false,oleg.zhurakousky@springsource.com(oleg.zhurakousky@springsource.com),,,,0|i01wn3:,11165,11144,,,,,"14/Jun/09 10:03 AM;mark.fisher;Likewise, INT-669 (the new HeaderValueRouter) still requires namespace support.","16/Jun/09 2:49 AM;mark.fisher;Here's an example of what the namespace support might look like:
{code}
<payload-type-router input-channel=""channel0"">
    <mapping type=""X"" channel=""channel1""/>
    <mapping type=""Y"" channel=""channel2""/>
</payload-type-router>
{code}

Thoughts?
","18/Jun/09 9:17 AM;oleg.zhurakousky@springsource.com;What about using *payload* to be consistent with what it does
{code}
<payload-type-router input-channel=""channel0"">
    <payload type=""X"" channel=""channel1""/>
    <payload type=""Y"" channel=""channel2""/>
</payload-type-router>
{code}
Then we can do similar using *header* for the  _header-value-router_
{code}
<header-value-router input-channel=""routingChannelB"" header-name=""testHeader"">
   <header value=""1"" channel=""channel1"" />
   <header value=""2"" channel=""channel2"" />
</header-value-router>
{code}","19/Jun/09 3:55 AM;mark.fisher;The <payload-type-router/> element is now supported. See the following test cases for an example of usage:
https://fisheye.springsource.org/browse/spring-integration/trunk/org.springframework.integration/src/test/java/org/springframework/integration/router/config/PayloadTypeRouterParserTests-context.xml",,,,,,,,,,,,,,,,,,,
XpathMessageSplitter swallows message if not Node or String,INT-652,26559,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,12/May/09 11:20 PM,13/Sep/10 5:57 PM,10/May/19 2:37 AM,18/May/09 9:02 AM,1.0.2.SR1,,,,,,1.0.3,,,,,,,,0,,"Trying the following configuration

{code}
<si-xml:xpath-splitter input-channel=""mixedXmlDinings""
	output-channel=""xmlDinings"">
	<si-xml:xpath-expression expression=""/dining"" />
</si-xml:xpath-splitter>
{code}

It took me a while to figure out that it was not my expression, but the fact that I passed in a DOMSource as the payload that caused no message to be sent on the xmlDinings channel.

Problem is in splitMessage method (line 100) that works for Nodes and Strings, but for all other types returns null.

If the payload is not understood this should cause an exception.",,;18/May/09 9:00 AM;mark.fisher;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,314755200,,,,,2009-05-18 09:02:30.165,10993,false,mark.fisher(mark.fisher),,,,0|i01wp3:,11174,11153,,,,,"18/May/09 9:02 AM;mark.fisher;XPathMessageSplitter now throws an Exception if the received Message's payload type is not a Node or String.

Commit log:
https://fisheye.springsource.org/changelog/spring-integration?cs=2077",,,,,,,,,,,,,,,,,,,,,,
Documentation improvements regarding complex structures,INT-638,26315,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,13/Apr/09 7:00 PM,14/Apr/09 4:21 AM,10/May/19 2:37 AM,14/Apr/09 4:21 AM,,,,,,,1.0.2.SR1,,,,,,,,0,,"Some questions came up, I'll capture them in documentation:

a) the ref docs for <chain/> are pretty thin.  What happens if there are multiple <service-activator/>s? 
b) are there any examples of other dispatcher strategies (round robin or broadcasting)? 
c) What can you do with a <header-enricher/>?  I was going to suggest a ChannelInterceptor to do that - is that wrong?
",,"added some clarification on how MessageHandlers are chained, and a little explanation with <header-enricher/> I also tweaked the MessageHandlerChain javadoc. We should add better documentation to the xsd as well.;13/Apr/09 8:34 PM;iwein;3600",added answers to Dave's questions and incorporated feedback;14/Apr/09 4:20 AM;iwein;3600,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,317692800,,,,,,26027,false,iwein(iwein),,,,0|i02pev:,15826,14999,,,,,14/Apr/09 4:21 AM;iwein;This is such a minor update that it can go with 1.0.2.SR1 (only doc + javadoc),,,,,,,,,,,,,,,,,,,,,,
Control Bus for managing endpoints,INT-627,26281,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,mark.fisher,david_syer,david_syer,09/Apr/09 12:09 AM,13/Sep/10 5:59 PM,10/May/19 2:37 AM,11/Mar/10 1:39 PM,1.0.2,,,,,,2.0 M3,,,Core,,,,,1,,"Control Bus for managing endpoints.  Mark says: I think the Control Bus should be able to perform typical actions that one would do via JMX.... start/stop, modify a poller's cron/interval, etc... so ideally we would expose these ops to JMX and also have the Control Bus passing Command messages/triggers to the same ops via channels.",,;09/Mar/10 7:19 AM;mark.fisher;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,INT-212,,,,,,,,,,,,289094400,,,,,2010-03-03 00:54:09.729,7311,false,mark.fisher(mark.fisher),,,,0|i03j07:,20621,17720,,,,,03/Mar/10 12:54 AM;mark.fisher;The Control Bus will also enable monitoring of Message Channels.,"11/Mar/10 1:39 PM;mark.fisher;The basic control bus is in place. It registers all endpoints and channels in the context as MBeans. It provides an operation channel, so for example, one can send a message to start/stop endpoints. See ControlBusTests for sample usage.

This will definitely be enhanced between now and 2.0 GA.",11/Mar/10 1:40 PM;mark.fisher;See also: ControlBusOperationChannelTests,,,,,,,,,,,,,,,,,,,,
Concurrent modification exception in PayloadTypeMatchingHandlerMethodResolver,INT-624,26230,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Blocker,Fixed,mark.fisher,scusin,scusin,02/Apr/09 9:01 PM,13/Apr/09 1:04 AM,10/May/19 2:37 AM,12/Apr/09 11:31 PM,1.0.2,,,,,,1.0.2.SR1,,,Core,,,,,0,,"When we start you application with a big load of message (500/s) with 16 consumers threads on a jms queue we have a java.util.ConcurrentModificationException.

In this class: org.springframework.integration.handler.PayloadTypeMatchingHandlerMethodResolver the access of methodMap is not Thread safe !!!


[25/03/09 17:01:34.701] FATAL [Thread-131] [] [IntegrationMessageListener] - Process message error.
org.springframework.integration.message.MessageHandlingException: error occurred in message handler [ServiceActivator for [org.springframework.integration.handler.MessageMappingMethodInvoker@1e4a649]]
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:54)
        at org.springframework.integration.dispatcher.AbstractDispatcher.sendMessageToHandler(AbstractDispatcher.java:75)
        at org.springframework.integration.dispatcher.SimpleDispatcher.dispatch(SimpleDispatcher.java:45)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:56)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:116)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:94)
        at com.swissquote.info.apps.platform.bus.jms.IntegrationMessageListener.onMessage(IntegrationMessageListener.java:125)
        at com.atomikos.jms.extra.MessageConsumerSession$ReceiverThread.run(MessageConsumerSession.java:473)
Caused by: java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$EntryIterator.next(HashMap.java:834)
        at java.util.HashMap$EntryIterator.next(HashMap.java:832)
        at java.util.HashMap$AbstractManagedEntriesIterator.nextEntry(HashMap/java:750)
        at java.util.HashMap$AbstractManagedEntriesIterator.next(HashMap/java:741)
        at java.util.HashMap$AbstractManagedEntriesIterator.nextEntry(HashMap/java:750)
        at java.util.HashMap$AbstractManagedEntriesIterator.next(HashMap/java:741)
        at java.util.HashMap$KeysIterator.next(HashMap/java:791)
        at org.springframework.integration.handler.PayloadTypeMatchingHandlerMethodResolver.findClosestMatch(PayloadTypeMatchingHandlerMethodResolver.java:121)
        at org.springframework.integration.handler.PayloadTypeMatchingHandlerMethodResolver.resolveHandlerMethod(PayloadTypeMatchingHandlerMethodResolver.java:57)
        at org.springframework.integration.handler.MessageMappingMethodInvoker.invokeMethod(MessageMappingMethodInvoker.java:97)
        at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:49)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:90)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:48)
        ... 7 more",Solaris and Linux with jdk 1.6,;08/Apr/09 12:19 AM;mark.fisher;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,12/Apr/09 10:08 PM;scusin;PayloadTypeMatchingHandlerMethodResolver-UnitTest.zip;https://jira.spring.io/secure/attachment/15312/PayloadTypeMatchingHandlerMethodResolver-UnitTest.zip,,,,,,,,,,,317865600,,,,,2009-04-08 00:19:01.042,7467,false,mark.fisher(mark.fisher),,,,0|i02v33:,16746,15768,,,,,"08/Apr/09 12:19 AM;mark.fisher;The methodMap is now a ConcurrentHashMap:
https://fisheye.springsource.org/changelog/spring-integration/?cs=2069

Please test your example that was previously failing against the SVN trunk if possible.

Build status:
http://build.springframework.org/browse/INT-TRUNK-1570/
","12/Apr/09 10:08 PM;scusin;I can reproduce the probleme only in the production environment, but I have reproduce the bug with JUnit test. See the attach zip file.

To reproduce the bug I have make a copy of the class and add this line Thread.yield(); in findClosestMatch method.

The fix correct the bug. Thank you.",12/Apr/09 11:31 PM;mark.fisher;Confirmed fix with test case.,13/Apr/09 1:04 AM;mark.fisher;This will be included in 1.0.2.SR1,,,,,,,,,,,,,,,,,,,
JMS id is not copied to SI message,INT-543,25283,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,06/Jan/09 10:44 PM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,10/Mar/09 3:07 AM,1.0.1,,,,,,1.0.2,,,Adapters,,,,,0,,to prevent duplication it is convenient to have the jms id of the message available.,,;08/Jan/09 7:29 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,320716800,,,,,2009-01-08 07:34:36.646,12438,false,mark.fisher(mark.fisher),,,,0|i0201z:,11718,11652,,,,,"08/Jan/09 7:34 AM;mark.fisher;For an inbound JMS Message, the JMSMessageId will now be copied to the Spring Integration MessageHeaders with the header name defined by JmsHeaders.MESSAGE_ID.

See commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1892

Before resolving this issue, we need to decide if it makes sense to also copy from a JmsHeaders.MESSAGE_ID value *to* an outbound JMS Message. Since the JMS provider will generate the ID, it seems like doing this by default would be counter-intuitive. For example, there may be a case where a JMS Message is received, mapped to a Spring Integration Message, passed through a pipeline, and then sent through an outbound JMS Channel Adapter. In such a case, the originally received Message ID would have been stored in the Spring Integration MessageHeaders and thus passed along to the outbound JMS Message. I'd be interested in feedback on that point though.
","10/Mar/09 3:07 AM;mark.fisher;We have decided not to copy the Message ID to outbound JMS Messages by default. If someone wants that behavior, they can provide a custom MessageConverter or header mapper.

In the future, if there is demand for explicitly assigning the outbound JMS Message ID, then we could add a boolean flag to enable that. The default value would still remain 'false' in that case.",,,,,,,,,,,,,,,,,,,,,
add optional Comparator argument to FileReadingMessageSource (to pass into the PriorityBlockingQueue constructor),INT-541,25274,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,06/Jan/09 1:05 AM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,24/Jan/09 1:39 AM,,,,,,,1.0.2,,,Adapters,,,,,0,,"Users need to be able to specify the ordering in the queue. This will not guarantee ordering in concurrent scenarios, but it is a cheap extension point to provide.",,"added constructor, improved javadoc, added test;09/Jan/09 12:59 AM;iwein;10800",,,,,,,,,,,,,,3600,7200,10800,300%,3600,7200,10800,,,,,,,,,,,,,,,09/Jan/09 12:47 AM;iwein;mylyn-context.zip;https://jira.spring.io/secure/attachment/15023/mylyn-context.zip,09/Jan/09 12:45 AM;iwein;mylyn-context.zip;https://jira.spring.io/secure/attachment/15022/mylyn-context.zip,,,,,,,,,,324691200,,,,,,26095,false,mark.fisher(mark.fisher),,,,0|i052b3:,29580,25407,,,,,"09/Jan/09 12:45 AM;iwein;Added the features to the FRMS, but still need to look at namespace support. Do we want that too?",24/Jan/09 1:39 AM;iwein;No namespace support implemented. We can do that later if it turns out to be popular.,,,,,,,,,,,,,,,,,,,,,
"MailSendingMessageHandler should only accept mail message, byte array, or String payloads",INT-535,25180,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Dec/08 7:40 AM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,22/Dec/08 7:53 AM,1.0.1,1.0 Final,,,,,1.0.2,,,Adapters,,,,,0,,"Currently, the MailSendingMessageHandler will invoke the toString() method on any Message payload that is not already a Mail Message or a byte array. This is too lenient and confusing. We should enforce that the Message is already a String if not a Mail Message or byte array.

With the addition of the ObjectToStringTransformer, it is trivial to explicitly add this behavior (see INT-514).

This will be consistent with the change made to FileWritingMessageHandler in 1.0.1 (see INT-515).",,;22/Dec/08 7:42 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,327456000,,,,,,26101,false,mark.fisher(mark.fisher),,,,0|i02033:,11723,11657,,,,,"22/Dec/08 7:53 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1887

build status:
https://build.springframework.org/browse/INT-TRUNK-1416",,,,,,,,,,,,,,,,,,,,,,
The 'advice-chain' does not apply to inbound channel adapters,INT-533,25153,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Dec/08 2:29 AM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,18/Dec/08 3:31 AM,1.0.1,,,,,,1.0.2,,,Core,,,,,0,,When a poller element has an 'advice-chain' sub-element it is supposed to create a proxy for the poller that includes those advice elements. This works for regular channel pollers (consumer endpoints) but not for inbound channel-adapters.,,;18/Dec/08 3:23 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,327801600,,,,,,26103,false,mark.fisher(mark.fisher),,,,0|i0203b:,11724,11658,,,,,"18/Dec/08 3:31 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1886

build status:
https://build.springframework.org/browse/INT-TRUNK-1415",,,,,,,,,,,,,,,,,,,,,,
DefaultConfiguringBeanFactoryPostProcessor should only be registered once per context,INT-532,25150,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Dec/08 11:23 PM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,26/Jan/09 6:16 AM,1.0.1,,,,,,1.0.2,,,,,,,,0,,"This problem was first detected with 'allowBeanDefinitionOverriding' set to false on DefaultListableBeanFactory. See the forum post:
http://forum.springframework.org/showthread.php?t=65067

We need to add a check so that the post-processor is only registered if its unique bean name is not already in use within the current BeanDefinitionRegistry.
",,;26/Jan/09 6:10 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,324432000,,,,,,26104,false,mark.fisher(mark.fisher),,,,0|i0203j:,11725,11659,,,,,"17/Dec/08 11:47 PM;mark.fisher;Added the 'isBeanNameInUse' check:
https://fisheye.springframework.org/changelog/spring-integration/?cs=1885

However, I'm leaving this issue open as a reminder to consider other options for automatically registering this single bean within the context (other than doing so in the NamespaceHandler).
","26/Jan/09 6:16 AM;mark.fisher;This issue has been resolved, but the solution can be refactored in the future as described in: INT-562
",,,,,,,,,,,,,,,,,,,,,
Add TransformerFactoryBean to enable ref with optional method in 'transformer' elements,INT-529,25137,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,16/Dec/08 11:02 PM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 11:28 PM,,,,,,,1.0.1,,,Core,,,,,0,,"This is the same general approach with the current SplitterFactoryBean and RouterFactoryBean. Essentially, the creation of the actual handler implementation is deferred until the FactoryBean step in order to accept a 'ref' that is already a Transformer or a 'ref' without a 'method' (potentially resolving methods based on @Transformer annotations at method-level).
",,;16/Dec/08 11:18 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26107,false,mark.fisher(mark.fisher),,,,0|i052en:,29596,25423,,,,,"16/Dec/08 11:28 PM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1879

build status:
https://build.springframework.org/browse/INT-TRUNK-1408",,,,,,,,,,,,,,,,,,,,,,
Mail transformers should throw a MessageTransformationException if the payload is not a mail message,INT-526,25134,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,16/Dec/08 2:33 PM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 2:47 PM,1.0 Final,,,,,,1.0.1,,,,,,,,0,,"The transformers currently return the untransformed Message if the payload is not a javax.mail.Message. To be consistent, they should throw Exceptions,",,;16/Dec/08 2:33 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26110,false,mark.fisher(mark.fisher),,,,0|i052fj:,29600,25427,,,,,"16/Dec/08 2:47 PM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1878

build status:
https://build.springframework.org/browse/INT-TRUNK-1407",,,,,,,,,,,,,,,,,,,,,,
Default error channel and TaskScheduler should be configured by a BeanFactoryPostProcessor,INT-525,25128,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,16/Dec/08 5:11 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 5:51 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,"The default beans (for the reserved bean names: 'errorChannel' and 'taskScheduler') are currently being created within the IntegrationNamespaceHandler. However, a BeanFactoryPostProcessor should be registered there instead. That post-processor can then decide *at the proper time* whether the defaults are necessary by checking if explicit bean definitions have already been provided using those reserved bean names.
",,;16/Dec/08 5:48 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26111,false,mark.fisher(mark.fisher),,,,0|i052fr:,29601,25428,,,,,16/Dec/08 5:51 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1862,,,,,,,,,,,,,,,,,,,,,,
Add logging-channel-adapter including namespace support,INT-524,25127,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,16/Dec/08 5:06 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 6:02 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,"A LoggingHandler implementation should accept the log-level and should log the Message payload. If the payload is an Exception, however, the stacktrace should be logged.

Namespace support should also be added, such as:
   <logging-channel-adapter channel=""someChannel"" level=""WARN""/>

The default level defined in the XSD should probably be INFO. The enumeration should include all commons-logging levels (FATAL, ERROR, WARN, INFO, DEBUG, TRACE)

This can also be used as the default subscriber for the default error channel.
",,;16/Dec/08 5:21 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26112,false,mark.fisher(mark.fisher),,,,0|i02l9j:,15154,14431,,,,,"16/Dec/08 6:02 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1860
https://fisheye.springframework.org/changelog/spring-integration?cs=1861
https://fisheye.springframework.org/changelog/spring-integration?cs=1862

build status:
https://build.springframework.org/browse/INT-TRUNK-1396",,,,,,,,,,,,,,,,,,,,,,
stdout and stderr channel adapters should print the stacktrace for an exception,INT-522,25114,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Dec/08 7:13 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,15/Dec/08 8:38 AM,1.0 Final,,,,,,1.0.1,,,Adapters,,,,,0,,"Currently, the toString() method is called on any Object that is not already a String, character array, or byte array.

We should printout the full stacktrace for Exception types instead.",,;15/Dec/08 8:21 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328060800,,,,,,26113,false,mark.fisher(mark.fisher),,,,0|i02s8v:,16285,15361,,,,,"15/Dec/08 8:38 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1859

build status:
http://build.springframework.org/browse/INT-TRUNK-1393",,,,,,,,,,,,,,,,,,,,,,
The 'chain' element does not accept a 'poller' sub-element.,INT-521,25112,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Dec/08 7:06 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,15/Dec/08 8:08 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,"The ChainParser currently treats *all* child elements as Message handlers to be parsed. It should ignore a 'poller' element if available.
",,;15/Dec/08 8:00 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328060800,,,,,,26114,false,mark.fisher(mark.fisher),,,,0|i02von:,16843,15846,,,,,"15/Dec/08 8:08 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1857

build status:
https://build.springframework.org/browse/INT-TRUNK-1391",,,,,,,,,,,,,,,,,,,,,,
Default 'errorChannel' should be publish-subscribe,INT-520,25110,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Dec/08 3:32 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 6:03 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,"Currently the default is a QueueChannel and has no subscribers. There are a couple disadvantages to that approach. First, the QueueChannel is asynchronous whereas Exception messages should probably be handled synchronously by default. Second, with no subscribers, the queue may eventually produce OutOfMemoryErrors (it is using the default 'unbounded' capacity).

The proposed improvement is to use a PublishSubscribeChannel for the 'errorChannel' and to at least log the Exception stacktraces at WARN level. This logging may be accomplished by a subscriber or potentially an interceptor.

For any other behavior, a user is still free to provide their own 'errorChannel' and their own subscribers.
",,;15/Dec/08 8:10 AM;mark.fisher;3600,;16/Dec/08 5:11 AM;mark.fisher;3600,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,INT-524,INT-525,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26115,false,mark.fisher(mark.fisher),,,,0|i052ev:,29597,25424,,,,,"15/Dec/08 8:13 AM;mark.fisher;The errorChannel is now a PublishSubscribeChannel, but there is not yet a default subscriber on that channel. Of course, it is trivial to add a 'stream:stderr-channel-adapter' to a configuration. However, that is in the 'stream' module and cannot be referenced as a default option for the core.

The IntegrationNamespaceHandler code also needs to avoid class-level dependencies (using class name Strings instead).",15/Dec/08 8:13 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1858,16/Dec/08 5:13 AM;mark.fisher;The IntegrationNamespaceHandler will be registering a BeanFactoryPostProcessor to configure the defaults instead (including the default logging subscriber). See the related JIRA issues for more detail (INT-524 and INT-525).,"16/Dec/08 6:03 AM;mark.fisher;Resolved as of: https://build.springframework.org/browse/INT-TRUNK-1396

See INT-524 and INT-525 for more detail.",,,,,,,,,,,,,,,,,,,
Add namespace support for PayloadSerializingTransformer and PayloadDeserializingTransformer,INT-517,25092,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Dec/08 5:47 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,12/Dec/08 7:54 AM,,,,,,,1.0.1,,,Core,,,,,0,,,,;12/Dec/08 7:35 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,26118,false,mark.fisher(mark.fisher),,,,0|i052e7:,29594,25421,,,,,"12/Dec/08 7:54 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1847
https://fisheye.springframework.org/changelog/spring-integration?cs=1848

build status:
https://build.springframework.org/browse/INT-TRUNK-1383
https://build.springframework.org/browse/INT-TRUNK-1384",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for ObjectToStringTransformer,INT-516,25091,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Dec/08 5:47 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,12/Dec/08 7:29 AM,,,,,,,1.0.1,,,Core,,,,,0,,,,;12/Dec/08 7:12 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,26119,false,mark.fisher(mark.fisher),,,,0|i052f3:,29598,25425,,,,,"12/Dec/08 7:29 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1846

build status:
https://build.springframework.org/browse/INT-TRUNK-1382
",,,,,,,,,,,,,,,,,,,,,,
"FileWritingMessageHandler should accept only File, byte array, or String",INT-515,25089,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Dec/08 5:02 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,12/Dec/08 5:27 AM,,,,,,,1.0.1,,,Adapters,,,,,0,,"Currently the FileWritingMessageHandler will copy a File or byte array payload, but if the payload is *any other object*, it calls the toString() method on that object. This seems rather arbitrary. Instead, we should throw an Exception for any 'unsupported' type, and the only supported types should be File, byte[], and String.

The new ObjectToStringTransformer (see INT-514) will enable this behavior to be configured explicitly.",,;12/Dec/08 5:16 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,26120,false,mark.fisher(mark.fisher),,,,0|i052fb:,29599,25426,,,,,"12/Dec/08 5:27 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1842

build status:
https://build.springframework.org/browse/INT-TRUNK-1378",,,,,,,,,,,,,,,,,,,,,,
Add ObjectToStringTransformer,INT-514,25088,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Dec/08 5:00 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,12/Dec/08 5:52 AM,,,,,,,1.0.1,,,Core,,,,,0,,This should be a very simple payload transformer that invokes the toString method on any Object.,,;12/Dec/08 5:45 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,26121,false,mark.fisher(mark.fisher),,,,0|i052dz:,29593,25420,,,,,"12/Dec/08 5:52 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1843

build status:
https://build.springframework.org/browse/INT-TRUNK-1379",,,,,,,,,,,,,,,,,,,,,,
Add PayloadSerializingTransformer and PayloadDeserializingTransformer,INT-513,25087,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Dec/08 4:45 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,12/Dec/08 6:38 AM,,,,,,,1.0.1,,,Core,,,,,0,,"The PayloadSerializingTransformer should convert any Serializable object payload into a byte array.

The PayloadDeserializingTransformer should convert a byte array that is itself a result of Serialization into a deserialized instance.

These transformers could then be used in a variety of scenarios. For example:

  OUTBOUND:   [Message<Serializable>] -> [PayloadSerializingTransformer] -> [file:outbound-channel-adapter] -> (bytes written to a file)

   INBOUND:      [file:inbound-channel-adapter] -> [FileToByteArrayTransformer] -> [PayloadDeserializingTransformer] -> .... (next component handles strongly-typed payload)

",,;12/Dec/08 6:25 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,26122,false,mark.fisher(mark.fisher),,,,0|i02pfr:,15830,15002,,,,,"12/Dec/08 6:38 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1845

build status:
https://build.springframework.org/browse/INT-TRUNK-1381",,,,,,,,,,,,,,,,,,,,,,
JMS adapter code should conform with JMS spec for property identifier names in JMS messages,INT-511,25025,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,jpartner,jpartner,09/Dec/08 12:32 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,09/Dec/08 7:45 AM,1.0 Final,,,,,,1.0.1,,,Adapters,,,,,0,,JMS 1.1 spec part 3.8.1.1 requires that property identifiers start with a java start character where Character.isJavaIdentifierStart returns true and is followed only by characters where Character.isJavaIdentifierPart is true.  This excludes the '.' character which is currently used extensively. ,,;09/Dec/08 7:31 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,328579200,,,,,2008-12-09 02:35:22.719,26124,false,mark.fisher(mark.fisher),,,,0|i052fz:,29602,25429,,,,,09/Dec/08 2:35 AM;mark.fisher;Related forum discussion: http://forum.springframework.org/showthread.php?p=217109,"09/Dec/08 7:45 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1825

build status:
https://build.springframework.org/browse/INT-TRUNK-1366
",,,,,,,,,,,,,,,,,,,,,
Support for advice-chain in XML,INT-503,24985,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,05/Dec/08 4:53 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 9:10 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,Support for advice-chain in XML.  Used to be in the @Poller in RC2.,,;16/Dec/08 9:01 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,2008-12-16 09:10:16.174,26130,false,mark.fisher(mark.fisher),,,,0|i02vn3:,16836,15842,,,,,"16/Dec/08 9:10 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1864

build status:
https://build.springframework.org/browse/INT-TRUNK-1398",,,,,,,,,,,,,,,,,,,,,,
SI-Javadocs availability as a download or instructions to build it,INT-501,24979,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,bgargesh,bgargesh,04/Dec/08 9:01 PM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,27/Jan/09 7:20 AM,,,,,,,1.0.2,,,Documentation,,,,,0,,Provision to build SI-Javadocs or availability of it in the downloads.,,;15/Dec/08 6:16 AM;mark.fisher;900,,,,,,,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,324345600,,,,,2008-12-05 03:05:32.214,26132,false,mark.fisher(mark.fisher),,,,0|i01rbb:,10302,10294,,,,,"05/Dec/08 3:05 AM;mark.fisher;We will add these instructions to the documentation or readme.txt

I posted the steps in this forum issue:
http://forum.springframework.org/showthread.php?t=64390
","15/Dec/08 6:19 AM;mark.fisher;Added a note to the readme.txt file:
https://fisheye.springframework.org/changelog/spring-integration?cs=1855",27/Jan/09 7:15 AM;mark.fisher;We should add the javadoc target to the build so that it is included in the distribution.,"27/Jan/09 7:20 AM;mark.fisher;The JavaDoc will be available as part of the distribution beginning with version 1.0.2.

https://fisheye.springframework.org/changelog/spring-integration?cs=1908",,,,,,,,,,,,,,,,,,,
Email transformers cannot be used in message handler chains,INT-498,24911,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_geary,david_geary,27/Nov/08 4:18 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,10/Dec/08 4:09 AM,1.0 Final,,,,,,1.0.1,,,Core,,,,,0,,The transformerType in the mail schema needs the input -channel and output-channel attributes to be made optional so that the transformers can be used in chains.,All - This is against the 1.0.0 version made available on 26 Nov,;10/Dec/08 3:58 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,328492800,,,,,2008-12-10 04:09:51.073,26134,false,mark.fisher(mark.fisher),,,,0|i02vnr:,16839,15844,,,,,"10/Dec/08 4:09 AM;mark.fisher;commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1829

build status:
https://build.springframework.org/browse/INT-TRUNK-1370",,,,,,,,,,,,,,,,,,,,,,
Demonstrate 'chain' and 'header-enricher' in one of the samples,INT-490,24847,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Nov/08 2:19 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,22/Nov/08 2:19 AM,,,,,,,1.0 Final,,,Samples,,,,,0,,"The WebServiceDemo can use a 'chain' for the 'header-enricher' and 'ws:outbound-gateway'. The header enricher will be used to provide the ""soap-action"" value. This will simplify the code within WebServiceDemo's main() method.
",,;22/Nov/08 2:19 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,330134400,,,,,,26140,false,mark.fisher(mark.fisher),,,,0|i01nr3:,9725,9756,,,,,22/Nov/08 2:19 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1743,,,,,,,,,,,,,,,,,,,,,,
Add header-enricher to core namespace,INT-489,24846,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Nov/08 12:05 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,22/Nov/08 1:45 AM,,,,,,,1.0 Final,,,Core,,,,,0,,"This should support all configurable values in the MessageHeaders as well as a Map of custom headers. For example:

<header-enricher input-channel=""in"" output-channel=""out"" correlation-id=""ABC"" reply-channel=""someChannel"">
   <header name=""foo"" value=""someValue""/>
   <header name=""bar"" ref=""someRef""/>
</header-enricher>
",,;22/Nov/08 1:43 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,330134400,,,,,,26141,false,mark.fisher(mark.fisher),,,,0|i052hb:,29608,25435,,,,,"22/Nov/08 1:45 AM;mark.fisher;Added the 'header-enricher' element. This can be either a top-level element (defining an endpoint with input/output channels) or as a sub-element within a top-level 'chain' element.

See the commit log for details:
https://fisheye.springframework.org/changelog/spring-integration?cs=1741",,,,,,,,,,,,,,,,,,,,,,
JMS Gateway does not use DestinationResolver,INT-488,24845,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,eberhardwolff,eberhardwolff,21/Nov/08 9:41 PM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,22/Nov/08 4:22 AM,1.0 RC2,,,,,,1.0 Final,,,Adapters,,,,,0,,The JMS Gateway has an attribute destination but it does not have an attribute destination-name like the channel adapter. So a JMS DestinationResolver cannot be used. That should be improved.,,;22/Nov/08 3:50 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,330048000,,,,,2008-11-22 04:22:06.561,26142,false,mark.fisher(mark.fisher),,,,0|i03nan:,21316,17906,,,,,"22/Nov/08 4:22 AM;mark.fisher;Added support for destination names and also for a destination-resolver reference.

See the commit log for details:
https://fisheye.springframework.org/changelog/spring-integration?cs=1747
https://fisheye.springframework.org/changelog/spring-integration?cs=1748
",,,,,,,,,,,,,,,,,,,,,,
Add a boolean flag to MessageFilter for enabling Exception-throwing and remove the 'selector' property from handlers,INT-487,24842,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Nov/08 7:48 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,21/Nov/08 8:04 AM,,,,,,,1.0 Final,,,,,,,,0,,"With the new addition of a MessageHandlerChain, the use of ""filter"" and other endpoints together is simple. Removing this property from the handler itself provides for clearer separation of responsibilities. It also makes it easier to control when the selector is invoked (e.g. before/after transformation).",,;21/Nov/08 8:02 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330134400,,,,,,7472,false,mark.fisher(mark.fisher),,,,0|i04cwn:,25465,21484,,,,,21/Nov/08 8:04 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1737,,,,,,,,,,,,,,,,,,,,,,
Add documentation for the new 'bridge' and 'chain' support,INT-486,24839,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Nov/08 4:35 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,23/Nov/08 2:14 PM,,,,,,,1.0 Final,,,Documentation,,,,,0,,See INT-193 and INT-391 for details about these new features.,,;23/Nov/08 11:55 AM;mark.fisher;3600,;23/Nov/08 2:14 PM;mark.fisher;3600,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,329961600,,,,,,26143,false,mark.fisher(mark.fisher),,,,0|i01rbz:,10305,10296,,,,,"23/Nov/08 11:57 AM;mark.fisher;Added a ""Messaging Bridge"" chapter:
https://fisheye.springframework.org/changelog/spring-integration?cs=1761
","23/Nov/08 2:14 PM;mark.fisher;Added a ""Message Handler Chain"" chapter:
https://fisheye.springframework.org/changelog/spring-integration?cs=1762
",,,,,,,,,,,,,,,,,,,,,
MethodInvokingTransformer is wrapping Message-typed return values,INT-484,24830,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Nov/08 1:46 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,21/Nov/08 2:07 AM,,,,,,,1.0 Final,,,,,,,,0,,"MethodInvokingTransformer should check if the return value is already a Message. If so, it should return it as-is. Currently, it is wrapping a returned Message inside another Message. In other words, the payload of the returned Message is itself a Message instance.
",,;21/Nov/08 2:05 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,330220800,,,,,,12505,false,mark.fisher(mark.fisher),,,,0|i052hj:,29609,25436,,,,,21/Nov/08 2:07 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1733,,,,,,,,,,,,,,,,,,,,,,
Provide an option for specifying MessageListenerContainer,INT-482,24806,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,paulpach,paulpach,19/Nov/08 2:06 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,20/Nov/08 8:40 AM,,,,,,,1.0 Final,,,Adapters,,,,,0,,"related to #INT-477

using jms:inbound-gateway only works for two way communication as described in #INT-477. But even if I have a 2 way communication, it does not provide a way for connecting to a pubsub (instead of a queue) and do event-driven messaging. It also does not provide a way to specify the implementation of MessageListenerContainer that I want to use, or use some of the more advanced options of DefaultMessageListenerContainer.

Please, for both jms:inbound-gateway and jms:inbound-channel-adapter tags, provide an option for injecting my own container bean.
",,;20/Nov/08 8:38 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,330220800,,,,,2008-11-19 02:13:20.978,26146,false,mark.fisher(mark.fisher),,,,0|i030w7:,17687,17101,,,,,"19/Nov/08 2:13 AM;mark.fisher;What do you mean by this: ""even if I have a 2 way communication, it does not provide a way for connecting to a pubsub"" ?
","19/Nov/08 2:37 AM;paulpach;I don't need to connect to a peer 2 peer queue. I need to connect to a pubsub (aka a topic). See my definition for the DefaultMessageListener that I am using:

       <!-- this class inherits DefaultMessageListenerContainer, and all the properties are the same -->
	<bean id=""listenerContainer"" class=""com.aa.rpt.cas.queue.MessageListenerContainer"">

		<property name=""connectionFactory"" ref=""connectionFactory"" />
		<property name=""pubSubDomain"" value=""true"" />
		<property name=""messageListener"" ref=""messageListener"" />
		<property name=""autoStartup"" value=""true"" />
		<property name=""destinationName"" value=""${pubsub.topic}"" />
		<property name=""subscriptionDurable"" value=""true"" />
		<property name=""durableSubscriptionName"" value=""${pubsub.durableSubscriptionName}"" />
		<property name=""concurrentConsumers"" value=""1"" />
		<property name=""transactionManager"" ref=""transactionManager"" />
		<property name=""sessionTransacted"" value=""true"" />
		<!--  wait 1 minute before trying to reconnect -->
		<property name=""recoveryInterval"" value=""${pubsub.reconectInterval}"" />
		<property name=""exceptionListener"" ref=""exceptionListener"" />
		<!-- <property name=""maxRetries"" value=""5""/> -->
		<property name=""cacheLevel"">
			<bean
				id=""org.springframework.jms.listener.DefaultMessageListenerContainer.CACHE_CONSUMER""
				class=""org.springframework.beans.factory.config.FieldRetrievingFactoryBean"" />
		</property>
	</bean>

so I need to connect to a pubsub (topic), and It needs to be a durable subscription.

Currently I could do it with a JMSTemplate and poll it, but I would like to have event driven messaging. 

Does that make more sense?","20/Nov/08 8:40 AM;mark.fisher;The 'inbound-gateway' element now accepts a 'container' reference. If no 'container' reference is provided, it will accept various container properties and create a DefaultMessageListenerContainer. The options are mutually exclusive (if 'container' *is* provided along with any of those properties, it will throw an exception).

Also, added support for a 'message-driven-channel-adapter' element, and it likewise accepts the 'container' reference. See INT-477 for details.",,,,,,,,,,,,,,,,,,,,
Provide an event-driven option for the jms:inbound-channel-adapter,INT-477,24751,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,kwbeam,kwbeam,14/Nov/08 2:18 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,20/Nov/08 8:37 AM,,,,,,,1.0 Final,,,Adapters,,,,,3,,"Provide the option to have an event-driven jms:inbound-channel-adapter.

The current implementation polls the JMS destination, while we want an option to have the adapter be message-driven, similar to the jms:inbound-gateway.  Since the intent of the channel-adapter is to be one-way (not request/reply), the inbound-channel-adapter appears to be the right place to add this functionality.

This was discussed in the forums at: http://forum.springsource.org/showthread.php?t=63456",,;20/Nov/08 8:38 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,330220800,,,,,2008-11-20 08:37:49.147,12753,false,mark.fisher(mark.fisher),,,,0|i02lan:,15159,14434,,,,,"20/Nov/08 8:37 AM;mark.fisher;Added support for a 'message-driven-channel-adapter' element. It is essentially a one-way equivalent of the inbound-gateway element, and it accepts a 'container' reference (by default it will accept various container properties and create a DefaultMessageListenerContainer).

See the commit log for more details. There were several changes between 1722 and 1732:
https://fisheye.springframework.org/changelog/spring-integration/?cs=1732",,,,,,,,,,,,,,,,,,,,,,
"Add support for 'delivery-mode', time-to-live', and 'priority' for the JmsOutboundGateway",INT-468,24720,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Nov/08 10:35 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,12/Nov/08 10:38 AM,,,,,,,1.0 RC2,,,Adapters,,,,,0,,,,;12/Nov/08 10:36 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,296438400,,,,,2009-12-16 12:17:25.838,26156,true,mark.fisher(mark.fisher),,,,0|i01y5z:,11412,11388,,,,,12/Nov/08 10:38 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1676,16/Dec/09 12:17 PM;alvincys;Can the same configurable properties be added for ChannelPublishingJmsMessageListener please?,16/Dec/09 12:26 PM;alvincys;Created INT-932 for ChannelPublishingJmsMessageListener.,,,,,,,,,,,,,,,,,,,,
Refactor JMS outbound gateway to support a reply queue,INT-466,24707,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Nov/08 11:48 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,12/Nov/08 9:58 AM,,,,,,,1.0 RC2,,,Adapters,,,,,0,,The current implementation is based upon a QueueRequestor and thus creates a new TemporaryQueue per-request. We should also accept a 'replyDestination' property that will be reused along with a MessageSelector-based receive that checks for the correlationId.,,;12/Nov/08 9:57 AM;mark.fisher;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,330912000,,,,,,26158,false,mark.fisher(mark.fisher),,,,0|i01y6f:,11414,11390,,,,,"12/Nov/08 9:58 AM;mark.fisher;See the commit log for details:
https://fisheye.springframework.org/changelog/spring-integration?cs=1674",,,,,,,,,,,,,,,,,,,,,,
GatewayProxyFactoryBean should throw checked excpetions which are declared on the service interface rather than wrapping in a runtime,INT-465,24694,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,jpartner,jpartner,11/Nov/08 7:41 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,12/Nov/08 1:59 AM,1.0 RC1,,,,,,1.0 RC2,,,Core,,,,,0,,Currently checked exceptions are always thrown wrapped in a runtime exception.  Where the underlying cause of the runtime is a checked exception declared as thrown by the service interface it would better to unwrap and throw the checked exception. ,,;12/Nov/08 1:55 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,330998400,,,,,2008-11-12 01:59:14.197,26159,false,mark.fisher(mark.fisher),,,,0|i01y6n:,11415,11391,,,,,12/Nov/08 1:59 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1667,,,,,,,,,,,,,,,,,,,,,,
Message Endpoints should have an auto-startup property,INT-463,24690,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Nov/08 5:08 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,13/Nov/08 2:15 AM,,,,,,,1.0 RC2,,,,,,,,0,,This should be 'true' by default but configurable - including namespace-based configuration support.,,;13/Nov/08 2:13 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,330912000,,,,,,26161,false,mark.fisher(mark.fisher),,,,0|i01y73:,11417,11393,,,,,"13/Nov/08 2:15 AM;mark.fisher;The endpoints now extend a base class that supports auto-startup. By default, endpoints will start (subscribe or schedule a poller - depending on the endpoint type), and the default SimpleTaskScheduler will also startup automatically (in the latter case, when the context refreshed event occurs).

The namespace support now includes the 'auto-startup' attribute.",,,,,,,,,,,,,,,,,,,,,,
Remove ApplicationContextMessageBus,INT-462,24689,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Nov/08 5:07 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,11/Nov/08 9:18 AM,,,,,,,1.0 RC2,,,Core,,,,,0,,"The Message Bus role has been reduced to managing the Lifecycle of Message Endpoints and the TaskScheduler. Rather than requiring any centralized control beyond that of the Spring ApplicationContext, these responsibilities should be shifted to the endpoints and the scheduler itself. In other words, endpoints will be autonomous and more directly aware of the ApplicationContext within which they are running.",,;11/Nov/08 9:09 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,330998400,,,,,,7474,false,mark.fisher(mark.fisher),,,,0|i01y7b:,11418,11394,,,,,"11/Nov/08 6:13 AM;mark.fisher;Most of this refactoring has been completed: https://fisheye.springframework.org/changelog/spring-integration?cs=1658

A few more changes are necessary before resolving this issue.
","11/Nov/08 9:10 AM;mark.fisher;Removed the <message-bus/> element:
https://fisheye.springframework.org/changelog/spring-integration?cs=1659
",11/Nov/08 9:18 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1660,,,,,,,,,,,,,,,,,,,,
Namespace support for XPathSelector is broken.,INT-461,24637,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,david_geary,david_geary,07/Nov/08 12:25 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,07/Nov/08 1:59 AM,1.0 RC1,,,,,,1.0 RC2,,,,,,,,0,,"The namespace support for the xpath selector when using evaluation-result-type=""string"" doesn't work.

Ie 

<si-xml:xpath-selector id=""queue13Selector"" xpath-expression-ref=""queueExpression"" evaluation-result-type=""string"" string-test-value=""13""/>  	

produces a long stack trace including 

Related cause:
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'queue13Selector': Unsatisfied dependency expressed through constructor argument with index 1 of type [java.lang.String]: Could not convert constructor argument value of type [org.springframework.xml.xpath.Jaxp13XPathExpressionFactory$Jaxp13XPathExpression] to required type [java.lang.String]: Failed to convert value of type [org.springframework.xml.xpath.Jaxp13XPathExpressionFactory$Jaxp13XPathExpression] to required type [java.lang.String]; nested exception is java.lang.IllegalArgumentException: Cannot convert value of type [org.springframework.xml.xpath.Jaxp13XPathExpressionFactory$Jaxp13XPathExpression] to required type [java.lang.String]: no matching editors or conversion strategy found",,;07/Nov/08 1:59 AM;mbogoevici;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,331430400,,,,,2008-11-07 01:59:37.222,26162,false,mark.fisher(mark.fisher),,,,0|i01y7j:,11419,11395,,,,,07/Nov/08 1:59 AM;mbogoevici;Fixed in revision 1652.,,,,,,,,,,,,,,,,,,,,,,
Refactor inbound mail channel adapters,INT-444,24525,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,30/Oct/08 7:50 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,30/Oct/08 7:53 AM,,,,,,,1.0 RC1,,,Adapters,,,,,0,,"The polling adapter should have namespace support with an ""inbound-channel-adapter"", and the IMAP IDLE adapter should be a distinct element since it does not require a poller.",,;30/Oct/08 7:50 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,332035200,,,,,,26178,false,mark.fisher(mark.fisher),,,,0|i01vhr:,10979,10958,,,,,"30/Oct/08 7:53 AM;mark.fisher;See the commit log for details:
https://fisheye.springframework.org/changelog/spring-integration?cs=1573",,,,,,,,,,,,,,,,,,,,,,
Exceptions thrown by a consumer polled by a task executor thread do not result in error messages on the errorChannel,INT-440,24427,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,jpartner,jpartner,23/Oct/08 1:33 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,19/Nov/08 2:54 AM,1.0 M6,,,,,,1.0 Final,,,,,,,,0,,"This was reported here and I have been able to reproduce. http://forum.springframework.org/showthread.php?t=61939

There is no attempt to handle exceptions thrown in runnables passed to the task executor in AbstractPollingEndpoint.

So the following works ok with exceptions appearing on the errorChannel 

<si:channel id=""channelOne"">
	<si:queue capacity=""10""/>
</si:channel>


<si:service-activator ref=""consumerOne"" input-channel=""channelOne"" >
	<si:poller>
		<si:interval-trigger interval=""500""  />
	</si:poller>
</si:service-activator>
<bean id=""consumerOne"" class=""ErrorThrowingConsumer""/>

But the following configuration results in no errors on the errorChannel

<si:channel id=""channelOne"">
	<si:queue capacity=""10""/>
</si:channel>


<si:service-activator ref=""consumerOne"" input-channel=""channelOne"" >
	<si:poller task-executor=""poolOne"">
		<si:interval-trigger interval=""500""  />
	</si:poller>
</si:service-activator>
<bean id=""consumerOne"" class=""ErrorThrowingConsumer""/>

<si:thread-pool-task-executor id=""poolOne"" max-size=""10"" />


",,;19/Nov/08 2:54 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330307200,,,,,2008-10-23 01:53:46.462,26182,false,mark.fisher(mark.fisher),,,,0|i03j0n:,20623,17721,,,,,23/Oct/08 1:53 AM;mark.fisher;The problem here is that the task submitted to the TaskExecutor is not wrapped in an exception handling runnable as it is when run directly by the SimpleTaskScheduler.,13/Nov/08 8:27 AM;jpartner;Fixed for classes extending AbstractPollingEndpoint however issue still exists where the PublishSubscribeChannel has a task executor.,"19/Nov/08 2:54 AM;mark.fisher;Fixed for PublishSubscribeChannel.

See commit log for detalis: https://fisheye.springframework.org/changelog/spring-integration?cs=1716
",,,,,,,,,,,,,,,,,,,,
Fire MessageBus started/stopped events and remove the MessageBusInterceptor,INT-435,24367,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Oct/08 10:30 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,19/Oct/08 10:38 PM,,,,,,,1.0 RC1,,,Core,,,,,0,,,,;19/Oct/08 10:37 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,332985600,,,,,,26186,false,mark.fisher(mark.fisher),,,,0|i01viv:,10984,10963,,,,,19/Oct/08 10:38 PM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1518,,,,,,,,,,,,,,,,,,,,,,
"The <router/> element should support a ""ref"" without a ""method""",INT-434,24360,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Oct/08 9:56 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,19/Oct/08 10:05 AM,,,,,,,1.0 RC1,,,Core,,,,,0,,"If the ""ref"" is a reference to a subclass of AbstractMessageRouter, this should resolve automatically (e.g. PayloadTypeRouter).

Otherwise, the method should be resolved if there is a single method annotated with @Router, or finally, if there is a single public method. This is consistent with Splitter and Service Activator - both of which have had this functionality added recently.

This will require a RouterFactoryBean (similar to SplitterFactoryBean).

See discussion on the forum here: http://forum.springframework.org/showthread.php?t=61772",,;19/Oct/08 9:57 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,INT-433,,,,,,,,,,,,,,,,,,,,,,,332985600,,,,,,10996,false,mark.fisher(mark.fisher),,,,0|i01vj3:,10985,10964,,,,,19/Oct/08 10:05 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1515,,,,,,,,,,,,,,,,,,,,,,
MethodInvokingRouter should accept a target object only (no method name) and check for @Router,INT-433,24359,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Oct/08 9:51 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,19/Oct/08 10:04 AM,,,,,,,1.0 RC1,,,Core,,,,,0,,This should be consistent with the newly added behavior for Splitter and Service Activator. Both use the DefaultMethodResolver to check for annotations else fallback to a single public method if available.,,;19/Oct/08 9:57 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,332985600,,,,,,10986,false,mark.fisher(mark.fisher),,,,0|i01vjb:,10986,10965,,,,,19/Oct/08 10:04 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1515,,,,,,,,,,,,,,,,,,,,,,
Add JMS samples,INT-430,24348,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Oct/08 4:48 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,17/Oct/08 7:22 AM,,,,,,,1.0 RC1,,,Samples,,,,,0,,"The samples should demonstrate each of the JMS adapter types:
  JMS Inbound Channel Adapter
  JMS Outbound Channel Adapter
  JMS Inbound Gateway
  JMS Outbound Gateway
",,;17/Oct/08 7:18 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333158400,,,,,,12833,false,mark.fisher(mark.fisher),,,,0|i01nrb:,9726,9757,,,,,"17/Oct/08 7:22 AM;mark.fisher;The org.springframework.integration.samples.jms package now includes:
   ChannelAdapterDemo
   GatewayDemo

The configuration is provided for running with ActiveMQ in embedded mode. The configuration files can easily be changed (see ""common.xml"") to run with a different provider or with ActiveMQ as a standalone process (for example, change the 'brokerURL' property from ""vm://locahost"" to ""tcp://localhost:61616"").

Also, the main() methods in ChannelAdapterDemo and GatewayDemo are only bootstrapping the ApplicationContext, so it is trivial to setup with the ""inbound"" and ""outbound"" config running in 2 separate VMs - each with its own bootstrapped context.
",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for JmsOutboundGateway,INT-429,24347,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Oct/08 4:46 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,17/Oct/08 8:55 AM,,,,,,,1.0 RC1,,,Adapters,,,,,0,,,,;17/Oct/08 8:53 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333158400,,,,,,26189,false,mark.fisher(mark.fisher),,,,0|i01vjr:,10988,10967,,,,,17/Oct/08 8:55 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1504,,,,,,,,,,,,,,,,,,,,,,
DefaultMethodResolver cannot find annotated method on Proxy,INT-425,24300,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,13/Oct/08 11:38 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,14/Oct/08 1:20 AM,1.0 M6,,,,,,1.0 RC1,,,Core,,,,,0,,"With a CGLib proxy I get a nonsensical exception from AnnotationMethodResolver saying it found two methods with @ServiceActivator.  With a JDK proxy I get an equally nonsensical message from DefaultMethodResolver saying there is more than one public method (maybe so, but one of them is annotated).",,;14/Oct/08 1:14 AM;mark.fisher;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,2008-10-14 01:20:59.236,26193,false,mark.fisher(mark.fisher),,,,0|i01vkn:,10992,10971,,,,,"14/Oct/08 12:33 AM;david_syer;Actually with proxy-target-class=""true"" (explicitly) it works when the service implements an interface and the interface is used in the point cut.  If proxy-target-class=""false"" it fails with the same settings elsewhere.",14/Oct/08 1:20 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1448,,,,,,,,,,,,,,,,,,,,,
"The <interval-trigger/> should support a ""time-unit"" attribute",INT-424,24299,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,13/Oct/08 11:12 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,13/Oct/08 11:44 PM,,,,,,,1.0 RC1,,,Core,,,,,0,,Possible values should be an enumeration matching the TimeUnit enum values.,,;13/Oct/08 11:41 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,,26194,false,mark.fisher(mark.fisher),,,,0|i01vkv:,10993,10972,,,,,13/Oct/08 11:44 PM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1447,,,,,,,,,,,,,,,,,,,,,,
Modify poller element to accept trigger as sub-element,INT-423,24298,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,13/Oct/08 11:04 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,13/Oct/08 11:45 PM,,,,,,,1.0 RC1,,,Core,,,,,0,,"Currently the <poller/> is overloaded with support for both ""interval"" and ""cron"" trigger values, but there are attributes that only relate to interval-based triggers (e.g. initial-delay).

The <poller/> should instead accept a sub-element. The generic poller properties can remain in the poller element.

Example with interval-based trigger:
   <poller task-executor=""somePool"" max-messages-per-poll=""10"">
      <interval-trigger interval=""3000"" initial-delay=""60000""/>
   </poller>

Example with cron-based trigger:
   <poller task-executor=""somePool"" max-messages-per-poll=""10"">
      <cron-trigger expression=""*/10 * * * * MON-FRI""/>
   </poller>

",,;13/Oct/08 11:25 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,,26195,false,mark.fisher(mark.fisher),,,,0|i01vl3:,10994,10973,,,,,13/Oct/08 11:45 PM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1446,,,,,,,,,,,,,,,,,,,,,,
Document RMI support,INT-416,24286,24285,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,mark.fisher,mark.fisher,13/Oct/08 9:58 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,15/Oct/08 4:07 AM,,,,,,,1.0 RC1,,,,,,,,0,,This should cover the RMI inbound gateway and outbound gateway components including the namespace configuration options.,,Wrote rmi.xml. Still need to remove the adapter section for rmi;14/Oct/08 6:56 AM;iwein;7200,finished;15/Oct/08 4:07 AM;iwein;3600,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,,26201,false,mark.fisher(mark.fisher),,,,0|i01vlz:,10998,10977,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add JMS header enricher,INT-414,24283,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,13/Oct/08 9:21 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,13/Oct/08 9:53 AM,,,,,,,1.0 RC1,,,Adapters,,,,,0,,"This should be very similar to the <mail:header-enricher/> but allowing for properties such as the JMS ""reply-to"". The header enricher functionality will need to be extended to include support for handling bean references in addition to literal values.",,;13/Oct/08 9:46 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,,26203,false,mark.fisher(mark.fisher),,,,0|i01vm7:,10999,10978,,,,,"13/Oct/08 9:53 AM;mark.fisher;See commit logs for details:
   https://fisheye.springframework.org/changelog/spring-integration?cs=1441
   https://fisheye.springframework.org/changelog/spring-integration?cs=1442",,,,,,,,,,,,,,,,,,,,,,
Refactor common annotation configuration logic into a utils class,INT-411,24254,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,10/Oct/08 1:28 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,10/Oct/08 1:37 AM,,,,,,,1.0 RC1,,,Core,,,,,0,,"Currently, there is duplication for parsling @Poller and @Transactional annotations. For example, both ChannelAdapterAnnotationPostProcessor and AbstractMethodAnnotationPostProcessor perform the same tasks (creating triggers, configuring transactions, resolving the TaskExecutor reference, etc). This should be moved into an AnnotationConfigUtils to avoid such duplication.",,;10/Oct/08 1:31 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,26206,false,mark.fisher(mark.fisher),,,,0|i01vmf:,11000,10979,,,,,10/Oct/08 1:37 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1402,,,,,,,,,,,,,,,,,,,,,,
"Provide support for the ""taskExecutor"" reference within the @Poller annotation",INT-409,24252,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,10/Oct/08 12:30 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,10/Oct/08 1:49 AM,,,,,,,1.0 RC1,,,Core,,,,,0,,"Originally we had a @Concurrency annotation for configuring thread pools directly on the annotated message endpoint methods. However, this was quite limited since there are many types of thread management beyond simple Java 5 thread pools. Therefore, we added the more general taskExecutor property for pollers, and we accommodate for this within the namespace support (with ""task-executor"" on <poller/>). We need to provide the same support for the @Poller annotation (e.g. @Poller(interval=1000, taskExecutor=""somePool"").
",,;10/Oct/08 1:43 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,26208,false,mark.fisher(mark.fisher),,,,0|i01vmn:,11001,10980,,,,,10/Oct/08 1:49 AM;mark.fisher;https://fisheye.springframework.org/changelog/spring-integration?cs=1403,,,,,,,,,,,,,,,,,,,,,,
The @Poller annotation should be consistent when provided with @ChannelAdapter,INT-408,24245,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Oct/08 4:47 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,09/Oct/08 7:44 AM,,,,,,,1.0 RC1,,,,,,,,0,,"The @Poller annotation now accepts @Transactional as well as an 'adviceChain' property when configured along with consumer endpoints (e.g. @ServiceActivator).

However, the configuration is not applied when the @Poller is provided with @ChannelAdapter. The results should be the same.",,;09/Oct/08 7:38 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,26209,false,mark.fisher(mark.fisher),,,,0|i01vmv:,11002,10981,,,,,"09/Oct/08 7:44 AM;mark.fisher;See the commit log for details: https://fisheye.springframework.org/changelog/spring-integration?cs=1395

The test cases listed in the diff provide some good examples.
",,,,,,,,,,,,,,,,,,,,,,
Support advice chain in the @Poller annotation,INT-407,24244,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Oct/08 4:30 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,09/Oct/08 4:42 AM,,,,,,,1.0 RC1,,,Core,,,,,0,,"The advice chain should accept bean name references to any Advice instances.

The advice will be applied to the Poller instance within a polling endpoint. Therefore the interception will always be for a Runnable.run() method (therefore, no arguments will ever be available to advice). The order provided in the annotation should be maintained in the actual advice chain.
",,;09/Oct/08 4:37 AM;mark.fisher;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,26210,false,mark.fisher(mark.fisher),,,,0|i01vn3:,11003,10982,,,,,"09/Oct/08 4:42 AM;mark.fisher;The @Poller annotation now accepts an 'adviceChain' whose value may be either a String array or a comma-delimited String. The individual Strings should be bean name references to Advice instances. If any are provided, then the AbstractPollingEndpoint will proxy its Poller instance applying the advice in the same order as specified within the annotation.
",,,,,,,,,,,,,,,,,,,,,,
SplitterParser assumes ref should be wrapped in a MethodInvokingSplitter ,INT-397,24215,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,jpartner,jpartner,06/Oct/08 6:57 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,09/Oct/08 1:57 AM,1.0 M6,,,,,,1.0 RC1,,,,,,,,0,,This means a ref can not now refer to beans which extend AbstractMessageSplitter directly,,;09/Oct/08 1:54 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-10-09 01:57:23.703,26218,false,mark.fisher(mark.fisher),,,,0|i01vov:,11011,10990,,,,,09/Oct/08 1:57 AM;mark.fisher;See commit log for details: https://fisheye.springframework.org/changelog/spring-integration?cs=1389,,,,,,,,,,,,,,,,,,,,,,
Update documentation on file reading,INT-396,24197,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,05/Oct/08 7:30 PM,13/Oct/08 8:43 PM,10/May/19 2:37 AM,13/Oct/08 8:43 PM,,,,,,,,,,Documentation,,,,,0,,Since the replacement of FileSource with PollableFileSource some documentation needs to be updated (before FileSource can be put to sleep).,,first draft made monday;08/Oct/08 7:23 AM;iwein;21600,;13/Oct/08 8:43 PM;iwein;7200,,,,,,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,,26219,false,iwein(iwein),,,,0|i01rev:,10318,3389,,,,,13/Oct/08 8:43 PM;iwein;removed documentation section from adapters and replaced with file.xml,,,,,,,,,,,,,,,,,,,,,,
Add support for chaining endpoints,INT-391,24172,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,jpartner,jpartner,02/Oct/08 8:00 PM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,21/Nov/08 4:36 AM,1.0 M6,,,,,,1.0 Final,,,Core,,,,,0,,"For a simple receive from adapter, transform, split and send via adapter use case the configuration is currently quite heavy creating a large number of channels (direct by default) which add little.
Adding support as below would allow a cleaner configuration for this type of use case

<endpoint-chain input-chanel='..' output-channel='..'>
   <chain>
     <jms-source .../>
     <xslt-transformer ../>
     <splitter ../>
   </chain>
</endpoint-chain>   
 
The connecting channels could automatically be created and could also not be registered ensuring they are not to be visible outside of the chain
This would also eliminate the need for the special case of chaining transformers INT-387",,;21/Nov/08 4:36 AM;mark.fisher;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,330134400,,,,,2008-11-20 01:07:01.766,11001,false,mark.fisher(mark.fisher),,,,0|i02vnb:,16837,15843,,,,,"20/Nov/08 1:07 AM;mark.fisher;Initial commit:
https://fisheye.springframework.org/changelog/spring-integration?cs=1725","21/Nov/08 4:36 AM;mark.fisher;Added namespace support:
https://fisheye.springframework.org/changelog/spring-integration?cs=1736",,,,,,,,,,,,,,,,,,,,,
Allow configuration of a WebServiceMessageSender instance for WS handlers ,INT-389,24167,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,jpartner,jpartner,02/Oct/08 6:50 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,02/Oct/08 9:42 PM,1.0 M6,,,,,,1.0 RC1,,,Web Services,,,,,0,,This would be useful since it would allow for use of the commons HTTP MessageSender,,;02/Oct/08 9:43 PM;jpartner;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,334454400,,,,,,26223,false,mark.fisher(mark.fisher),,,,0|i01vpj:,11014,10993,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPath message splitter,INT-388,24146,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,jpartner,jpartner,01/Oct/08 2:20 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,13/Oct/08 6:56 AM,1.0 M6,,,,,,1.0 RC1,,,XML,,,,,0,,XPath based splitter which splits a Node/Document by evaluating the XPath expression as returning a NodeList.,,"XPath splitter supporting String and Node payloads implemented
namespace support to follow;02/Oct/08 10:19 PM;jpartner;14400",,,,,,,,,,,,,,14400,14400,14400,100%,14400,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,334627200,,,,,,10960,false,mark.fisher(mark.fisher),,,,0|i01ozr:,9926,9942,,,,,,,,,,,,,,,,,,,,,,,,,,,
write integration test for Splitter,INT-382,24105,23759,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,27/Sep/08 3:46 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,28/Sep/08 8:22 AM,,,,,,,1.0 RC1,,,,,,,,0,,Write an integration test to confirm this was fixed,,TestCase finalized and already green due to Mark's fixes in the parsing;28/Sep/08 8:24 AM;iwein;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,334886400,,,,,,10970,false,mark.fisher(mark.fisher),,,,0|i01vqn:,11019,10998,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS inbound gateway should recognize a payload that is already a Spring Integration Message,INT-376,24011,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Sep/08 10:15 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,17/Oct/08 6:58 AM,,,,,,,1.0 RC1,,,,,,,,0,,"When the HeaderMappingMessageConverter receives the JMS Message's payload, it builds a new Spring Integration Message:
    MessageBuilder.withPayload(payload).copyHeaders(headerMap).build();

However, if the JMS Message's payload is itself a Spring Integration Message already, it should simply copy it (and its headers):
    MessageBuilder.fromMessage((Message<?>) payload).build();

It should probably still copy any user-defined headers that were provided in the JMS Message as well using copyHeadersIfAbsent(..).
",,;17/Oct/08 6:58 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,335750400,,,,,,26233,false,mark.fisher(mark.fisher),,,,0|i01vrj:,11023,11002,,,,,,,,,,,,,,,,,,,,,,,,,,,
make AbstractDirectorySource use default message creator instead of FileMessageCreator,INT-356,23763,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,26/Aug/08 4:51 AM,21/Sep/08 5:33 AM,10/May/19 2:37 AM,21/Sep/08 5:33 AM,,,,,,,,,,,,,,,0,,"FtpSource is broken because of AbstractDirectorySourceParser line 75. The workaround is to provide a message-creator reference to <ftp-source> but without it breaks ugly. Possibly DefaultMessageCreator will do for both FileSource and FtpSource, possibly they need to be ripped out of their hierarchy... it has been feeling too artificial.",,"removed type attribute support for ftp source, pushed down to FileSource.;01/Sep/08 4:42 AM;iwein;10800",,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,335404800,,,,,,12484,false,iwein(iwein),,,,0|i03f2n:,19984,3386,,,,,26/Aug/08 4:55 AM;iwein;http://forum.springframework.org/showthread.php?p=198205,"01/Sep/08 4:45 AM;iwein;responsibility for defaults rests in the FileSource and FtpSource now, not set in AbstractDirectorySource parser unless specified. The FileSourceParser still creates message creators based on type, but this doesn't make sense for the FtpSource so support for type has been removed there. xsd is not changed yet.",11/Sep/08 12:48 AM;iwein;We will clean out all relations between Ftp and File related sources.,21/Sep/08 5:33 AM;iwein;MessageCreator is no longer used by PollableFileSource,,,,,,,,,,,,,,,,,,,
Backlog is not threadsafe,INT-353,23734,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,23/Aug/08 3:33 AM,31/Aug/08 10:52 PM,10/May/19 2:37 AM,31/Aug/08 10:52 PM,,,,,,,,,,,,,,,0,,"This is a classic: when multiple methods were introduced that influence the HashMap used to store the backlog items in, the Backlog became unnecessary blocking. Backlog should be threadsafe, but allow for maximum concurrent use.

With INT-241 and INT-269 in mind it makes more sense to have backlog based on a PriorityBlockingQueue. This requires a FileInfo refactoring (to include the file reference)",,"FileInfo -> FileSnapshot, Backlog based on Priority queue. Still needs concurrent tests and reduction of synchronization.;24/Aug/08 12:54 AM;iwein;7200","removed unneeded synchronization, added concurrent test;30/Aug/08 5:22 AM;iwein;7200",,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,337219200,,,,,,26249,false,iwein(iwein),,,,0|i02van:,16780,3385,,,,,"31/Aug/08 10:52 PM;iwein;added concurrent test and kept locking on the pessimistic side for now. It might be a good idea to use thread safe collections an dedicated locks, but it works as is now. ",,,,,,,,,,,,,,,,,,,,,,
NextTarget() set in the MessageHandler must be reset before the message is sent.,INT-351,23729,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Fixed,mbogoevici,mbogoevici,mbogoevici,22/Aug/08 2:37 PM,22/Aug/08 2:45 PM,10/May/19 2:37 AM,22/Aug/08 2:45 PM,1.0 M6,,,,,,,,,,,,,,0,,"Because the nextTarget header attribute is never reset, any endpoint that does not set or reset the value will cause the message to be sent to the same queue, instead of considering the output-channel, e.g.:

A router sending a message to the 'hotDrinks' channel followed by a service-activator that reads messages from said channel and defines 'preparedDrinks' as the outputChannel. Because nextTarget is never reset, the result of service-activator is sent to 'hotDrinks' rather than 'preparedDrinks'.",,;22/Aug/08 2:45 PM;mbogoevici;1800,,,,,,,,,,,,,,1800,1800,1800,100%,1800,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,337996800,,,,,,12473,false,mbogoevici(mbogoevici),,,,0|i02v3z:,16750,3379,,,,,22/Aug/08 2:45 PM;mbogoevici;NextTarget is now reset after a message is sent by the DefaultEndpoint.,,,,,,,,,,,,,,,,,,,,,,
Update documentation for M6 release,INT-348,23670,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Aug/08 1:56 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,19/Aug/08 6:37 PM,,,,,,,1.0 M6,,,Documentation,,,,,0,,,,;19/Aug/08 6:38 PM;mark.fisher;28800,,,,,,,,,,,,,,21600,0,28800,133%,21600,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,338342400,,,,,,26251,false,mark.fisher(mark.fisher),,,,0|i01rf3:,10319,10308,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractMailHeaderMapper wrong type FROM/REPLY_TO attributes,INT-345,23664,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mdond,mdond,18/Aug/08 10:11 PM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,18/Aug/08 11:45 PM,,,,,,,1.0 M6,,,Adapters,,,,,0,,"In AbstractMailHeaderMapper the attributes FROM and REPLY_TO are put into the MessageHeader as an array of strings.
However in DefaultMailMessageHeaderMapper the attributes are read as a single string. Therefore DefaultMailMessageHeaderMapper.getFrom() and getReplyTo() always return NULL.

The error is in AbstractMailHeaderMapper: FROM and REPLY_TO should be put into the MessageHeader as a single string, not as an array of strings.",,;18/Aug/08 11:44 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,338342400,,,,,2008-08-18 23:45:48.177,26254,true,mark.fisher(mark.fisher),,,,0|i052m7:,29630,25457,,,,,"18/Aug/08 11:45 PM;mark.fisher;This has been fixed. See DefaultMailMessageHeaderMapTests for some examples.

If you get a chance, could you please verify that it works for you?

Thanks,
Mark
","19/Aug/08 1:18 AM;mdond;Works fine for me.

Thanks,
Maarten",,,,,,,,,,,,,,,,,,,,,
Channel Adapter should create a channel if none is configured,INT-340,23645,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Aug/08 12:28 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,18/Aug/08 12:30 AM,,,,,,,1.0 M6,,,Core,,,,,0,,"To define a Channel Adapter that retrieves from a PollableSource and sends to a MessageChannel requires the following:
    <channel-adapter id=""in"" source=""s"" channel=""c"">
        <poller period=""5000""/>
    </channel-adapter>

To define a Channel Adapter that retrieves from a MessageChannel and sends to a MessageTarget requires the following:
    <channel-adapter id=""out"" channel=""c"" target=""t"">
        <poller period=""3000""/>
    </channel-adapter>

(for the target, the poller is only necessary if the MessageChannel is a PollableChannel. It should not be provided if the channel is a DirectChannel or PublishSubscribeChannel.

Being able to connect a Channel Adapter to a shareable channel is good for many use-cases (apply source-specific transformers, connect multiple sources to a router, etc), but it is overkill for simpler use-cases. Therefore, the ""channel"" attribute should be optional, and when not provided, the channel-adapter's ""id"" attribute can be used as the name of a channel. The default channel type would be DirectChannel:

    <channel-adapter id=""in"" source=""s"">
        <poller period=""5000""/>
    </channel-adapter>

    <service-activator id=""service"" input-channel=""in"" ref=""pojo"" method=""someMethod"" output-channel=""out""/>

    <channel-adapter id=""out"" target=""t"">

In the example above, both ""in"" and ""out"" are created automatically as DirectChannel instances. Since it is a DirectChannel, no poller is necessary on either the <service-activator/> or the target <channel-adapter/>.
",,;18/Aug/08 12:28 AM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,338428800,,,,,,10606,false,mark.fisher(mark.fisher),,,,0|i02l8n:,15150,14429,,,,,"18/Aug/08 12:30 AM;mark.fisher;The ChannelAdapterParser now creates a DirectChannel instance if no ""channel"" attribute is available. If the ""channel"" is provided, it will be considered a reference to a channel instance that may be shared with other adapters.

See the ""file-copy"" demos in the ""samples"" project for usage examples.
",,,,,,,,,,,,,,,,,,,,,,
AbstractMessageDispatcher should use a set,INT-335,23615,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,13/Aug/08 10:56 PM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,13/Aug/08 11:58 PM,,,,,,,1.0 M6,,,Core,,,,,0,,"AbstractDispatcher currently uses a CopyOnWriteArrayList. This should be replaced with a CopyOnWriteArraySet to prevent duplicate subscribers. Also, tests should be added for the concrete implementations to verify this prevention of subscriber duplication as well as unsubscribing.
",,;13/Aug/08 11:56 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,338774400,,,,,,26260,false,mark.fisher(mark.fisher),,,,0|i02vxr:,16884,15886,,,,,"13/Aug/08 11:58 PM;mark.fisher;The AbstractDispatcher now uses a CopyOnWriteArraySet.

Duplicate and unsubscribe tests have been added in BroadcastingDispatcherTests and SimpleDispatcherTests.
",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for WireTap,INT-323,23395,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Aug/08 12:04 PM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,12/Aug/08 9:52 AM,,,,,,,1.0 M6,,,Core,,,,,0,,"The <wire-tap/> element should be accepted within a channel's <interceptors/> element.

The ""channel"" (or ""copy-to"") attribute should be required, and the ""selector"" attribute should be optional.
",,;12/Aug/08 9:49 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,338860800,,,,,,26268,false,mark.fisher(mark.fisher),,,,0|i02s9b:,16287,15363,,,,,"12/Aug/08 9:52 AM;mark.fisher;Added support for the <wire-tap/> element within a channel's <interceptors/>. For example:

    <channel id=""example"">
        <interceptors>
            <wire-tap target=""someTarget""/>
        </interceptors>
    </channel>

The ""target"" attribute is required. The ""selector"" attribute is optional, and the ""timeout"" attribute is also optional. By default a WireTap has no MessageSelector (so it accepts all Messages for sending to its target), and the default timeout is 0 (to prevent any blocking due to the WireTap target).
",,,,,,,,,,,,,,,,,,,,,,
XML Payload Handling ease of use with Spring Integration XML Configuration,INT-311,23239,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,david_geary,david_geary,22/Jul/08 4:55 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,29/Sep/08 1:30 AM,1.0 M5,,,,,,1.0 RC1,,,XML,,,,,1,,"When using XML payloads the various components that can accept and manipulate XML payloads are inconsistent in what they accept and produce. For example by default the following behaviours exist (please check!):

XmlPayloadMarshallingTransformer outputs DomResult (can be changed to StringResult)
XmlPayloadUnmarshallingTransformer accepts Document or String
XPathRouter accepts Node.
XsltTransformer accepts a Document or String , outputs DomResult (can be changed to StringResult) 
ResultToDocumentTransformer accepts DomResult or StringResult and outputs Document.
SourceCreatingTransformer accepts Document or String outputs DomSource
SimpleWebServiceHandler accepts Source or String but not Document

Other components such as file and jms handle strings (and hence string xml) by default.

In particular a lot the components output a result object which means having to convert this before it can be used in other XML components and there is a ResultToDocumentTransformer but no ToString one.

We are producing a customisable event publishing mechanism where we want integrators / customers to be able to use a spring integration XML configuration file to customise where these event messages get sent and how they get transformed. In general the namespace support in spring integration is shaping up well for this, but having to run things through a 'result to document' transformer our own 'to string'  transformer for StringResults seems unnecessarily low level and distracting from the intent of what is being done in the configuration. We've also had to create a StringSourceFactory.

The source / result stuff in general and the factory stuff in particular is possibly too low level here (although the flexibility should be kept). For example use of the xslt transformer would be a lot simpler if by default it output a string when it got a string in and likewise for a document. In fact it does these and uses the factory strategy to work out how to handle it internally so maybe there needs to be another strategy on converting the result object to the actual payload output (by default using the same as was input) and keeping the entire source/result thing internal. Also the XML marshaller should be able to output a string or document directly.

In summary updating the default behaviour of the components to better handle input and output of the string and document forms of XML would make configuration a lot easier, for example XPath router could handle a string payload by converting to Node internally to perform the XPath operation and output the original string. Explicit conversions can always be done if necessary, but the idea is to transparently handle XML in either document or string form and it will stay in that form unless you explicitly convert it.

See also INT-310 which affects the current default handling.",All,;19/Aug/08 2:48 AM;jpartner;28800,,,,,,,,,,,,,,86400,57600,28800,33%,86400,57600,28800,,,,,,,,,,,,,,,,,,,,,,,,,,334800000,,,,,2008-07-22 06:11:36.94,26275,false,mark.fisher(mark.fisher),,,,0|i01p0n:,9930,9946,,,,,"22/Jul/08 6:11 AM;mark.fisher;David,

Thanks for the detailed explanation. We should probably provide a configurable element for this (e.g <xml:defaults/>). We are also experimenting with global transformers that would follow a similar approach to Spring's type-converters in general (i.e. when a component expects Y but receives X, it checks for an X->Y converter). This would include some pre-defined transformers in the registry (e.g. Document-to-String) but would also support registration of user-provided transformers.
","19/Aug/08 3:45 AM;jpartner;XsltPayloadTransformer and XmlPayloadUnmarshallingTransformer now accept String, Document, Source and can be customised using the a SourceFactory to handle other payload types.

XsltPayloadTransformer will now by default return a String or a Document where that is passed in.  This can be overridden where a Result is preferred.  
XsltPayloadTransformer and XmlPayloadMarshallingTransformer have an optional collaborator ResultTransformer which converts the Result before returning when not using default String and Document returning behaviour.   Document and String creating implementations are provided. 

Next on the list will be XPathRouter which will be changed to support String, Document and Source as inputs.


","19/Aug/08 6:17 AM;mark.fisher;This issue is partially complete but will continue to evolve for RC1.

Feedback on the functionality provided thus far would be greatly appreciated!","22/Aug/08 3:52 AM;david_geary;Have tried out the new XSLT Transformer in M6 with String XML payloads and it now works straight away without extra configuration of Source or Result Factories. This makes the XML config a lot cleaner.

Will try with Document payloads and also try out the Marshalling Transformer as soon as I get a chance - so far so good!","29/Sep/08 1:30 AM;jpartner;XPath router now supports String as well as Document payloads
",,,,,,,,,,,,,,,,,,
XPath Message Selector,INT-309,23234,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,david_geary,david_geary,22/Jul/08 3:10 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,01/Oct/08 4:40 AM,1.0 M5,,,,,,1.0 RC1,,,XML,,,,,2,,"XPath message selector for use with messages with an xml payload with namespace support of the form

<xpath-selector id=""blueColourSelector"" xpath-expression=""//colour"" match-value=""blue""> or
<xpath-selector id=""blueColourSelector"" xpath-expression-ref=""colourXPathExpression"" match-value=""blue"">

Additionally both here and in the xpath router it would be nice if there was some way to add xpath namespace prefix definitions (to use say xpath-expression=""//nsprefix:colour"") without having to resort to using xpath-expression-ref and and standard spring xml factory method type configuration with XPathExpressionFactory. Not sure how do do this without using a map though. in my simple case im using a custom namespace so only need to define one prefix in the xpath expression.

",All,"added boolean and string based XPath selectors, namespace to follow ;29/Sep/08 3:11 AM;jpartner;14400",,,,,,,,,,,,,,,7200,14400,,,7200,14400,,,,,,,,,,,,,,,,,,,,,,,,,,334540800,,,,,2008-10-01 04:40:51.512,12469,false,mark.fisher(mark.fisher),,,,0|i01p13:,9932,9948,,,,,"15/Sep/08 11:11 PM;david_geary;Actually a map would be fine eg

<xpath-selector id=""blueColourSelector"" xpath-expression=""//exampleprefix:colour"" match-value=""blue"" xpath-namespaces=""blueColourSelectorNamespaces"">  

<util:map id=""blueColourSelectorNamespaces"">
    <entry key=""exampleprefix"" value=""http://www.domain.com/schemas/examplenamespace""/>
</util:map>

This is a cleaner way to configure it avoiding the bean style configuration for 

<beans:bean id=""colourExpression"" class=""org.springframework.xml.xpath.XPathExpressionFactory"" factory-method=""createXPathExpression"">
  		<beans:constructor-arg value=""//exampleprefix:queue""/>
		<beans:constructor-arg>
			 <beans:map>
			 	<beans:entry key=""exampleprefix"" value=""http://www.domain.com/schemas/examplenamespace""/>
			 </beans:map>
		</beans:constructor-arg>
</beans:bean>   

As mentioned this would be good on the xpath router also.","01/Oct/08 4:40 AM;jpartner;Added two variants on this, one that evaluates boolean XPath expressions and another that tests for a given string value

Tests if the node exists 
<si-xml:xpath-selector id='selector' evaluation-result-type='boolean'>
	<si-xml:xpath-expression expression='/name'/>
</si-xml:xpath-selector>

test for the given value of the node
<si-xml:xpath-selector id='selector' evaluation-result-type='string' string-test-value='someValue'>
	<si-xml:xpath-expression expression='/name'/>
</si-xml:xpath-selector>


Namespace configuration can be provided in a number of ways
As part of the xpath-expression tag in the case of one namespace
 
<si-xml:xpath-selector id='selector'  evaluation-result-type='boolean'>
	<si-xml:xpath-expression expression='/ns:name' ns-prefix='ns' ns-uri='www.example.org'/> 
</si-xml:xpath-selector>

By reference to a map defined elsewhere
<si-xml:xpath-selector id='selector'  evaluation-result-type='boolean'>
		<si-xml:xpath-expression expression='/ns:name' namespace-map='myNamespaceMap'/> 
</si-xml:xpath-selector>	

By use of a map defined as a child of the XPath expression	
<si-xml:xpath-selector id='selector' evaluation-result-type='boolean'>
	<si-xml:xpath-expression expression='/ns:name' >
		<map><entry key='ns' value='www.example.org'></map>
	<si-xml:xpath-expression/>
</si-xml:xpath-selector>

The same namespace options are also available for xpath-router.
In addition the xpath-expression tag can also be defined as a top level bean and referenced potentially from multiple router or selectors. ",,,,,,,,,,,,,,,,,,,,,
Message filter and selector enhancements,INT-308,23233,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_geary,david_geary,22/Jul/08 2:55 AM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,14/Oct/08 4:43 AM,1.0 M5,,,,,,1.0 RC1,,,Core,,,,,0,,"Namespace support of the form

<filter id=""bluecolourfilter"" selector=""bluecolourselector""/>

<selector-chain id=bluecolourandtype1selector>
<selector ref=""bluecolourselector""/>
<selector ref=""type1selector""/>
</selectorchain>

Also it would be useful to have some way to combine selectors with an 'or' logic as well as the chain 'and' logic eg blueorgreenselector. 

I'm not sure if this fits in the selector chain but it could be done there eg 

<selector-chain id=blueorgreencolourselector combination-logic=""or"">
<selector ref=""bluecolourselector""/>
<selector ref=""greencolourselector""/>
</selector-chain>


",All,;14/Oct/08 4:38 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333417600,,,,,2008-09-15 01:26:21.93,10679,false,mark.fisher(mark.fisher),,,,0|i01vun:,11037,11016,,,,,"15/Sep/08 1:26 AM;dthume;""Not"" logic would also be extremely useful.

IMO three separate, composable, namespace elements would be the easiest to work with, e.g:

<and-selector id=""blueOrGreenButNotType1Selector"">

  <or-selector>
    <selector ref=""bluecolourselector"" />
    <selector ref=""greencolourselector"" />
  </or-selector>

  <not-selector>
    <selector ref=""type1selector"" />
  </not-selector>

</and-selector>","07/Oct/08 7:50 AM;mark.fisher;Namespace support for a <filter/> element has been added. Either a POJO method or a MessageSelector implementation may be provided.

For example:
    <filter input-channel=""x"" ref=""somePojo"" method=""aBooleanReturnMethod"" output-channel=""y""/>

    <filter input-channel=""x"" ref=""someMessageSelector"" output-channel=""y""/>

The improvements for MessageSelector will be considered separately (this issue remains open).
","14/Oct/08 3:18 AM;mark.fisher;Added the functionality for OR / AND logic. In fact, the MessageSelectorChain now defines an inner enum (Strategy) with the following available values: [ALL, ANY, AT_LEAST_HALF, MORE_THAN_HALF]

This does not yet include namespace support, so I'm leaving the issue open.","14/Oct/08 4:43 AM;mark.fisher;Namespace support has now been added. This includes the ""strategy"" value as well as nested <selector-chain/> elements.

See the example in 'selectorChainParserTests.xml' within this commit log:
https://fisheye.springframework.org/changelog/spring-integration?cs=1454
","14/Oct/08 5:21 AM;mark.fisher;Changed the enum name to VotingStrategy, and the valid values are now: ALL, ANY, MAJORITY, MAJORITY_OR_TIE

The revised XML example is available here:
https://fisheye.springframework.org/changelog/spring-integration?cs=1456
",,,,,,,,,,,,,,,,,,
Remove @HeaderProperty and rename @HeaderAttribute to @Header,INT-306,23208,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Jul/08 4:14 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,18/Jul/08 4:33 AM,,,,,,,1.0 M6,,,Core,,,,,0,,"Now that we have a single MessageHeaders map (no java.util.Properties), only one annotation is necessary.",,;18/Jul/08 4:32 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,341020800,,,,,,26277,false,mark.fisher(mark.fisher),,,,0|i052k7:,29621,25448,,,,,18/Jul/08 4:33 AM;mark.fisher;There is now a single @Header annotation.,,,,,,,,,,,,,,,,,,,,,,
Issue with Web Service Adapoters running in JBoss,INT-295,23067,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,cjd11,cjd11,09/Jul/08 4:33 AM,09/Jul/08 12:56 PM,10/May/19 2:37 AM,09/Jul/08 12:56 PM,1.0 M4,,,,,,1.0 M5,,,Web Services,,,,,0,,"This issue is related to issue INT-291
We have been experiencing issues with Jboss trying to create its message factory; there  are class clashes caused through Jboss class loading issues.
We need a way to set a message factory  (for SOAP) that enables us NOT to use the default JBoss Message Factory. INT-291 has added an attribute to the namesapce; however, there is still a problem, since when creating the WebServiceTemplate, using hte default constructor, a default message factory will be created.

AbstractWebServiceTargetAdapter:
public abstract class AbstractWebServiceTargetAdapter implements MessageHandler {
	public static final String SOAP_ACTION_PROPERTY_KEY = ""_ws.soapAction"";
	private final WebServiceTemplate webServiceTemplate = new WebServiceTemplate(); .... Etc.

On creation of the WebServiceTemplate(), the Spring ws code tries to instantiate a MessageFactory (even though we will set one later). 
The message factory instance needs to be passed in to the construction of the WebServiceTemplate, if you are trying to override the message factory reference and creation.
","Windows, JBoss 4.2.x, JDK 1.5.0_11",;09/Jul/08 12:55 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,341798400,,,,,2008-07-09 12:56:04.532,26288,false,mark.fisher(mark.fisher),,,,0|i058jz:,30592,27614,,,,,09/Jul/08 12:56 PM;mark.fisher;The WebServiceMessageFactory is now provided to the WebServiceTemplate constructor by WebServiceHandlerParser.,,,,,,,,,,,,,,,,,,,,,,
Remove DispatcherPolicy,INT-292,23038,,Refactoring,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jul/08 1:02 PM,07/Jul/08 1:32 PM,10/May/19 2:37 AM,07/Jul/08 1:32 PM,,,,,,,1.0 M5,,,,,,,,0,,"The DispatcherPolicy should be removed since the retry logic is better suited for an interceptor. Also, this has been too tightly coupled to the channel.
",,;07/Jul/08 1:17 PM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,341971200,,,,,,26290,false,mark.fisher(mark.fisher),,,,0|i058kf:,30594,27616,,,,,"07/Jul/08 1:32 PM;mark.fisher;The retryInterval, rejectionLimit, and failOnRejectionLimit properties are now available on SimpleDispatcher. After M5, we will consider whether to apply these via interceptors only or to make these options available on dispatcher configuration (e.g. for pubsub-channels).",,,,,,,,,,,,,,,,,,,,,,
WebServiceHandler namespace support should include 'message-factory' and 'fault-message-resolver',INT-291,23037,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jul/08 11:41 AM,07/Jul/08 12:03 PM,10/May/19 2:37 AM,07/Jul/08 12:03 PM,,,,,,,1.0 M5,,,Web Services,,,,,0,,These attributes should be added to the XSD (optional) and the parser should set the properties on the WS MessageHandler adapter.,,;07/Jul/08 12:03 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341971200,,,,,,26291,false,mark.fisher(mark.fisher),,,,0|i02v8v:,16772,15791,,,,,,,,,,,,,,,,,,,,,,,,,,,
The <aggregator/> element should be self-sufficient,INT-285,23012,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Jul/08 6:21 AM,06/Jul/08 7:35 AM,10/May/19 2:37 AM,06/Jul/08 7:35 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"Aggregator should not also require a <handler-endpoint/> element.
",,;06/Jul/08 7:23 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,,26296,false,mark.fisher(mark.fisher),,,,0|i02vb3:,16782,15799,,,,,"06/Jul/08 7:35 AM;mark.fisher;The <aggregator/> element now triggers the creation of a HandlerEndpoint. It requires ""input-channel"" and ""output-channel"". It no longer accepts ""default-reply-channel"" (since it uses ""output-channel"" instead).

It also no longer accepts a <completion-strategy/> sub-element. Instead, for a pojo-based adapter, add the ""completion-strategy-method"" attribute along with the ""completion-strategy"" reference.",,,,,,,,,,,,,,,,,,,,,,
The <router/> element should be self-sufficient,INT-284,23011,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Jul/08 4:31 AM,06/Jul/08 5:15 AM,10/May/19 2:37 AM,06/Jul/08 5:15 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The <router/> element should not require <handler-endpoint/> also.

Rather, it should trigger creation of an endpoint itself. This means that it needs to accept ""input-channel"" and ""output-channel"" attributes.",,;06/Jul/08 5:07 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,,26297,false,mark.fisher(mark.fisher),,,,0|i03j1r:,20628,17724,,,,,"06/Jul/08 5:15 AM;mark.fisher;The <router/> now creates an endpoint. It accepts the ""input-channel"" attribute (but not ""output-channel"").",,,,,,,,,,,,,,,,,,,,,,
The <splitter/> element should be self-sufficient,INT-283,23010,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Jul/08 4:30 AM,06/Jul/08 4:37 AM,10/May/19 2:37 AM,06/Jul/08 4:37 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The <splitter/> element should not require <handler-endpoint/> also.

Rather, it should trigger creation of an endpoint itself. This means that it needs to accept ""input-channel"" and ""output-channel"" attributes.",,;06/Jul/08 4:32 AM;mark.fisher;9000,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,,10964,false,mark.fisher(mark.fisher),,,,0|i03j1j:,20627,17723,,,,,"06/Jul/08 4:37 AM;mark.fisher;The <splitter/> element now accepts ""input-channel"" and ""output-channel"" and its parser will create an endpoint instance.",,,,,,,,,,,,,,,,,,,,,,
Upload XML Schema documents for M5 release,INT-282,23009,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Jul/08 3:39 AM,14/Jul/08 3:03 AM,10/May/19 2:37 AM,10/Jul/08 2:58 AM,,,,,,,1.0 M5,,,,,,,,1,,,,;10/Jul/08 2:58 AM;mark.fisher;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341366400,,,,,2008-07-14 02:43:05.858,26298,false,mark.fisher(mark.fisher),,,,0|i058jr:,30591,27610,,,,,"14/Jul/08 2:43 AM;hertzen;Does this mean that the schema at http://www.springframework.org/schema/integration/spring-integration-core-1.0.xsd should be the same as the one coming in the M5 jar? Cause it doesn't seem to be the case, the online schema doesn't have the channel-adapter element for instance.",14/Jul/08 3:03 AM;mark.fisher;The XSDs at http://www.springframework.org/schema/integration/ were copied directly from the M5 release. Perhaps you need to refresh your browser cache?,,,,,,,,,,,,,,,,,,,,,
Update documentation for M5 release,INT-281,23008,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Jul/08 3:38 AM,09/Jul/08 8:04 PM,10/May/19 2:37 AM,09/Jul/08 8:04 PM,,,,,,,1.0 M5,,,Documentation,,,,,1,,,,;09/Jul/08 8:04 PM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,,26299,false,mark.fisher(mark.fisher),,,,0|i01rfj:,10321,10310,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChannelFactory should accept the channel name,INT-280,23003,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jul/08 9:21 AM,05/Jul/08 10:02 AM,10/May/19 2:37 AM,05/Jul/08 10:02 AM,,,,,,,1.0 M5,,,Core,,,,,0,,,,;05/Jul/08 9:54 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,,26300,false,mark.fisher(mark.fisher),,,,0|i058lj:,30599,27622,,,,,"05/Jul/08 10:02 AM;mark.fisher;The ChannelFactory's createChannel method now has the following signature:
    MessageChannel getChannel(String name, DispatcherPolicy dispatcherPolicy, List<ChannelInterceptor> interceptors);

Note: it is very likely that the 'dispatcherPolicy' will no longer be associated with the channel in RC1.",,,,,,,,,,,,,,,,,,,,,,
"Source and Target ""adapter"" objects should have consistent configuration",INT-279,23002,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jul/08 7:41 AM,05/Jul/08 7:44 AM,10/May/19 2:37 AM,05/Jul/08 7:44 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The MethodInvokingTarget object can be created by simply providing a ""method"" attribute on <target-endpoint/>. However, to create a MethodInvokingSource requires a <source-adapter/> and then providing that as a reference to <source-endpoint/>. The configuration for the source is excessive. The target-endpoint's approach should be used there as well (just provide a ""method"" attribute on <source-endpoint/>).",,;05/Jul/08 7:42 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,,26301,false,mark.fisher(mark.fisher),,,,0|i058lr:,30600,27623,,,,,"05/Jul/08 7:44 AM;mark.fisher;The <source-endpoint/> and <target-endpoint/> have been replaced by <channel-adapter/>, and the approach for creating adapter objects is now consistent as well. For example, to create a MethodInvokingSource, simply add the ""method"" attribute:
   <channel-adapter source=""someObject"" method=""someMethod"" channel=""someChannel""/>

The <source-adapter/> and <target-adapter/> elements are no longer available (since they are no longer necessary).
",,,,,,,,,,,,,,,,,,,,,,
The channel attributes should be consistent for <source-endpoint/> and <target-endpoint/>,INT-278,23001,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jul/08 7:36 AM,05/Jul/08 7:38 AM,10/May/19 2:37 AM,05/Jul/08 7:38 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The <source-endpoint/> element expects just ""channel"", but the <target-endpoint/> element expects ""input-channel"". These should be consistent.",,;05/Jul/08 7:36 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,,12738,false,mark.fisher(mark.fisher),,,,0|i02s7z:,16281,15357,,,,,"05/Jul/08 7:38 AM;mark.fisher;Both of these elements have now been replaced with <channel-adapter/>, and they are now consistently using ""channel"".

For example, instead of <source-endpoint/> use:
   <channel-adapter source=""someSource"" channel=""someChannel""/>

And instead of <target-endpoint/> use:
   <channel-adapter channel=""someChannel"" target=""someTarget""/>",,,,,,,,,,,,,,,,,,,,,,
Rename 'target-endpoint' and 'source-endpoint' to <channel-adapter/>,INT-277,23000,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jul/08 6:53 AM,05/Jul/08 7:48 AM,10/May/19 2:37 AM,05/Jul/08 7:08 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The <channel-adapter/> should require either a ""source"" or a ""target"" attribute (but never both).

If a ""method"" is added, then the actual source/target reference can be any pojo, and the corresponding MethodInvokingSource or MethodInvokingTarget will be created.",,;05/Jul/08 6:59 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,,12725,false,mark.fisher(mark.fisher),,,,0|i02l9b:,15153,14430,,,,,"05/Jul/08 7:08 AM;mark.fisher;Both 'source-endpoint' and 'target-endpoint' are now <channel-adapter/>.

The <source-adapter/> and <target-adapter/> have also been removed. To create a MethodInvokingSource or MethodInvokingTarget instance, simply provide a ""method"" attribute on the <channel-adapter/>.
",,,,,,,,,,,,,,,,,,,,,,
Aggregator ignores output channel in MessageEndpoint,INT-274,22987,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,03/Jul/08 8:28 PM,05/Jul/08 8:57 AM,10/May/19 2:37 AM,05/Jul/08 8:57 AM,1.0 M4,,,,,,1.0 M5,,,Core,,,,,1,,"If you specify an output channel in an aggregator it is ignored (the AggregatingMessageHandlerAdapter only considers the messages as a valid source of reply channel).  E.g. 

@MessageEndpoint(input=""aggregates"", output=""output"")
public class MyAggregator {
	
	@Aggregator
	public Request aggregate(List<Request> requests) {
		return requests.get(0);
	}

}

The output channel is ignored, but the intent seems clear.",,;05/Jul/08 8:53 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,2008-07-05 08:57:59.435,12707,false,mark.fisher(mark.fisher),,,,0|i02s5b:,16269,15347,,,,,"05/Jul/08 8:57 AM;mark.fisher;Annotation-based aggregator methods now use the output channel specified in a class-level @MessageEndpoint annotation.

The 'defaultReplyChannel' property is no longer available on the @Aggregator annotation itself.
",,,,,,,,,,,,,,,,,,,,,,
MessageBus should try to register new channels before starting,INT-270,22838,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,29/Jun/08 6:13 PM,05/Jul/08 9:30 AM,10/May/19 2:37 AM,05/Jul/08 9:29 AM,1.0 M4,,,,,,1.0 M5,,,Core,,,,,0,,"The fact that MessageBus tries to locate all its channels very early in the process is problematic.  In particular if the ApplicationContext is waiting for references to resolve to channels defined as dynamic service references (Spring DM), then they are not available until the context is refreshed.  Could the MessageBus do another check before activating endpoints in its start() phase in case there are any new channels to pick up?",,;05/Jul/08 9:22 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,2008-07-05 09:06:40.352,12746,false,mark.fisher(mark.fisher),,,,0|i02v5j:,16757,15777,,,,,"29/Jun/08 6:18 PM;david_syer;P.S. I thought maybe I could write my own ChannelFactory, but the interface doesn't let me specify the channel name (one of the most important features of a MessageChannel).",29/Jun/08 9:58 PM;david_syer;I experimented a bit with a copy of MessageBus and registering the channels in start() works OK.  Not sure what other implications there are.,"05/Jul/08 9:06 AM;mbogoevici;Dave,

I agree - the interface should be extended to support the channel name.","05/Jul/08 9:29 AM;mark.fisher;The MessageBus now does a second pass to pick up any MessageChannel that has been provided between the setApplicationContext callback and the ContextRefreshedEvent. It does check whether a channel with that name already exists, and if so the instance must match or a ConfigurationException is thrown (because other objects may already be referencing the channel).

We need to address this again in the RC1 timeframe since the changes in handler/endpoint creation and registration (e.g. with aggregators) might allow us to *only* do the registration after the ContextRefreshedEvent. That would be a generally cleaner approach.
",05/Jul/08 9:30 AM;mark.fisher;I created a new issue for the ChannelFactory to accept the channel-name: INT-280,,,,,,,,,,,,,,,,,,
SimpleMessagingTaskScheduler should have configurable shutdown policy.,INT-268,22793,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,25/Jun/08 4:43 AM,01/Jul/08 2:39 PM,10/May/19 2:37 AM,01/Jul/08 2:39 PM,,,,,,,1.0 M5,,,Core,,,,,0,,"Currently, the scheduler's stop() method invokes 'shutdownNow()' on the underlying executorService. This should probably be 'shutdown()' by default (for graceful shutdown). However, we can include a boolean flag to enable abrupt shutdown when necessary.
",,;01/Jul/08 2:34 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,342489600,,,,,,26306,false,mark.fisher(mark.fisher),,,,0|i058p3:,30615,27641,,,,,"01/Jul/08 2:39 PM;mark.fisher;SimpleMessagingTaskScheduler now provides a 'setWaitForTasksToCompleteOnShutdown' method.

The default is ""true"", and therefore when the scheduler's destroy() method is called it will in turn invoke its executor's shutdown() method.

If set to ""false"", it will invoke shutdownNow() instead.

Note also that the MessageBus now provides a 'setMessagingTaskScheduler' method.
",,,,,,,,,,,,,,,,,,,,,,
"Add ""xml"" module",INT-265,22776,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Jun/08 4:53 AM,24/Jun/08 6:04 AM,10/May/19 2:37 AM,24/Jun/08 6:04 AM,,,,,,,1.0 M5,,,XML,,,,,0,,"This module will contain code related to XML-based processing. For example - message transformer implementations based on XSLT or Spring OXM marshalling, routers based on XPath, etc.
",,;24/Jun/08 5:17 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,343094400,,,,,,26309,false,mark.fisher(mark.fisher),,,,0|i01p1r:,9935,9951,,,,,24/Jun/08 6:04 AM;mark.fisher;The 'org.springframework.integration.xml' module has been committed.,,,,,,,,,,,,,,,,,,,,,,
Add MessageStoringInterceptor,INT-264,22770,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Jun/08 2:24 AM,24/Jun/08 2:26 AM,10/May/19 2:37 AM,24/Jun/08 2:26 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"This ChannelInterceptor implementation should delegate to a MessageStore such that Messages sent to a channel are stored and then removed upon reception. When used with a persistent MessageStore, this will enable the messages to be pre-loaded for a channel after restarting the system (e.g. after a system crash). When using a persistent MessageStore, caching would also be very highly recommended. In the future, we may also provide a simple JDBC-based MessageStore implementation (similar in nature to the JDBC implementation of UserDetailsService that is provided by Spring Security).",,;24/Jun/08 2:24 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,343180800,,,,,,26310,false,mark.fisher(mark.fisher),,,,0|i029zj:,13327,13076,,,,,24/Jun/08 2:26 AM;mark.fisher;MessageStoringInterceptor is now available.,,,,,,,,,,,,,,,,,,,,,,
PublisherAnnotationPostProcessor proxies interfaces even where the annotated method is not on an interface,INT-263,22757,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,jpartner,jpartner,23/Jun/08 6:05 PM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,19/Aug/08 2:43 AM,1.0 M4,,,,,,1.0 M6,,,,,,,,0,,"PublisherAnnotationPostProcessor uses ProxyFactory to proxy methods annotated with @Publisher.  This will by default create an interface based proxy unless the class does not implement any interfaces or setProxyTargetClass(true) is called prior to the creation of  the proxy.

In the case that the class implements interfaces but the annotated method is not defined on one of those interfaces that PublisherAnnotationPostProcessor should create a class based proxy by default. ",,;19/Aug/08 2:44 AM;mark.fisher;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,338256000,,,,,2008-08-19 02:43:55.919,26311,false,mark.fisher(mark.fisher),,,,0|i052ov:,29642,25469,,,,,"19/Aug/08 2:43 AM;mark.fisher;PublisherAnnotationPostProcessor now checks if any @Publisher annotations are defined on class methods only (rather than interfaces), and if so, the proxy will set the 'proxyTargetClass' property to 'true' prior to creating the proxy.
",,,,,,,,,,,,,,,,,,,,,,
Add MailSource adapter to support inbound e-mail messages,INT-261,22647,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,dphollis,dphollis,18/Jun/08 1:35 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,05/Aug/08 1:27 AM,,,,,,,1.0 M6,,,Adapters,,,,,1,,"This issue was originally posted in Spring Web Services JIRA as: ""Refactor e-mail transport to support non-xml messages""

We have a need to process non-xml messages received via e-mail.  I know this is probably outside the scope of what spring-ws offers but the current e-mail transport provides all the facilities we need for watching a mailbox and processing the e-mails as they arrive.  For the most part the transport is agnostic to the content of the message until the MessageHandler gets involved.  With a little bit of refactoring it would be possible to reuse the same transport but allow subclasses to provide their own MessageHandler.  

Would you be amenable to making this change?  Or is there another Spring project that is earmarked to provide this kind of feature (e.g. Spring Integration)?  Alternatively I could duplicate your code and make my own changes but that kind of seems like a waste.",,"Added PollableMailMessageSource based on the Spring WS code.
async monitoring with IMAP idle support to follow.;29/Jul/08 1:16 AM;jpartner;57600",,,,,,,,,,,,,,72000,14400,57600,80%,72000,14400,57600,,,,,,,,,,,,,,,,,,,,,,,,,,339552000,,,,,2008-06-18 22:13:43.787,12485,false,mark.fisher(mark.fisher),,,,0|i052nr:,29637,25464,,,,,"18/Jun/08 10:13 PM;arjen.poutsma;I've contacted Mark Fischer about this, and it seems to be more of a Spring Integration issue than a Spring-WS issue. So I moved the issue accordingly.","05/Aug/08 1:27 AM;jpartner;Added PollableMailSource which can poll an IMAP or POP3 mailbox and SubscribableMailSource which can asynchronously monitor an IMAP mailbox using IMAP idle where supported.

Nameapace support is as follows

<si:polling-mail-source id=""pollingPop3"" store-uri=""pop3://${mail.username}:${mail.password}@${mailserver.hostname}/${mail.folder}"" />
	
<si:imap-idle-mail-source id=""imapIdleSource"" store-uri=""imap://${mail.username}:${mail.password}@${mailserver.hostname}/${mail.folder}"" task-executor=""taskExecutor"" />
	
Both use an instance of MailMessageConverter to convert from mail messages to Spring Integration messages.  For those wishing to use this standalone DefaultFolderConnection along with implementations of MonitoringStrategy can be used.",,,,,,,,,,,,,,,,,,,,,
Xslt Transformer,INT-260,22648,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,david_geary,david_geary,18/Jun/08 1:37 AM,06/Jul/08 6:32 PM,10/May/19 2:37 AM,06/Jul/08 6:32 PM,1.0 M4,,,,,,1.0 M5,,,XML,,,,,0,,"Add an Xslt Transformer for messages with an xml payload.

Namespace support would be something like:

<xslt-transformer id=""exampleTransformer"" xslFile=""C:\example.xsl""/>",All,"Added simple Xslt transformer to new Xml module.
Name space support to follow.;24/Jun/08 9:40 PM;jpartner;7200",,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,2008-07-06 18:32:41.589,26312,false,jpartner(jpartner),,,,0|i01p1z:,9936,9952,,,,,"06/Jul/08 6:32 PM;jpartner;Added with namespace support as below allowing consturction of the transformer from either a resource or a provided javax.xml.transform.Templates instance

<si-xml:xslt-transformer
		id=""xsltTransfomerWithResource"" xsl-resource=""org/springframework/integration/xml/config/test.xsl"" />
				
<si-xml:xslt-transformer id=""xsltTransformerWithTemplates"" xsl-templates=""templates"" />",,,,,,,,,,,,,,,,,,,,,,
add namespace support to inject WSMessageCallback,INT-257,22596,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,14/Jun/08 11:28 PM,24/Jun/08 3:42 AM,10/May/19 2:37 AM,24/Jun/08 3:42 AM,,,,,,,1.0 M5,,,Web Services,,,,,0,,see http://forum.springframework.org/showthread.php?p=186345#post186345,,;24/Jun/08 3:16 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,343094400,,,,,2008-06-24 03:42:01.71,26315,false,mark.fisher(mark.fisher),,,,0|i02v93:,16773,15792,,,,,24/Jun/08 3:42 AM;mark.fisher;The 'request-callback' attribute is now available on the <ws-handler/> element.,,,,,,,,,,,,,,,,,,,,,,
Gateway reply-channel should be optional,INT-253,22521,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mbogoevici,mbogoevici,09/Jun/08 2:05 AM,09/Jun/08 7:28 AM,10/May/19 2:37 AM,09/Jun/08 7:28 AM,,,,,,,1.0 M5,,,,,,,,0,,"The current gateway namespace assumes bi-directional communication by requiring a reply-channel. This should be optional, as there are cases when the Gateway would be just an entry point ",,;09/Jun/08 7:28 AM;mbogoevici;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,344476800,,,,,,26317,false,mbogoevici(mbogoevici),,,,0|i02s53:,16268,15346,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for regular expression FilenameFilter in file-source ,INT-252,22519,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,jgaines,jgaines,08/Jun/08 11:46 PM,05/Jul/08 10:50 AM,10/May/19 2:37 AM,05/Jul/08 10:50 AM,1.0 M4,,,,,,1.0 M5,,,,,,,,0,,"We have many requirements for file sources which filter based on a regular expression against the file name. Typically we have many of these in a single integration context, so it would be great if we could write:

<file-source id=""fileSource"" type=""text"" directory=""/input"" filename-regex=""rental*""/>
<file-source id=""fileSource"" type=""text"" directory=""/input"" filename-regex=""sale*""/>
<file-source id=""fileSource"" type=""text"" directory=""/input"" filename-regex=""disposal*""/>

",,;05/Jul/08 10:49 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,09/Jun/08 12:01 AM;jgaines;spring-int-252-patch.txt;https://jira.spring.io/secure/attachment/14161/spring-int-252-patch.txt,,,,,,,,,,,342144000,,,,,2008-06-09 00:38:50.486,26318,false,mark.fisher(mark.fisher),,,,0|i02lmv:,15214,14462,,,,,"09/Jun/08 12:01 AM;jgaines;This patch:

- updates si-adapters-1.0.xsd to permit a regex attribute on the file-source element

- updates FileSource to take a regex property, and to create a org.apache.oro.io.Perl5FilenameFilter from this regex after setting properties

- updates FileSourceParser to set the FileSource regex property from the file-source regex attribute, and check that no more than one of file-filter, filename-filter or regex attributes are set

- adds corresponding tests to FileSourceParserTests.xml, and does a minor refactor on the ""too many filters"" tests

- updates o.s.i.a.template.mf to reflect the new dependency on ORO",09/Jun/08 12:04 AM;jgaines;I've submitted a patch for your consideration.  Please have a look and let me know if you think it would be useful.  I know it would certainly make our lives easier :-).,"09/Jun/08 12:38 AM;mark.fisher;Thanks Jerry. I think I will avoid the dependency on ORO in this case. Since java.util.regex.Pattern was introduced in 1.4, we can rely on that (the Spring Integration prerequisite is JDK5+). Also, Spring provides built-in support for handling Pattern objects in the XML text, so this same filter implementation can easily be configured as a plain ""bean"" definition with any pattern syntax error causing a startup failure. What I have implemented so far is a RegexPatternFilenameFilter implementation that will be set as the 'filenameFilter' property of a FileSource whenever a ""filename-regex"" attribute is provided for a <file-source/> element.","09/Jun/08 12:59 AM;jgaines;Makes sense to me.  I wasn't sure about ORO: it already shows up in the project's Ivy repo, but there's no point in introducing explicit dependencies if you don't have to.  You might be able to get some value out of the unit tests anyway.","09/Jun/08 1:07 AM;mark.fisher;Yes, that dependency on ORO is a transitive dependency from the FTP client (commons-net). We might be able to avoid that ORO dependency in the future.

Thanks again for the suggestion and I look forward to your feedback once its committed!

Thanks,
Mark
","09/Jun/08 5:15 AM;mark.fisher;The RegexPatternFilenameFilter is available now and can be configured as a ""bean"":

    <file-source id=""fileSource"" directory=""/some/path"" filename-filter=""filter""/>

    <bean id=""filter"" class=""org.springframework.integration.adapter.file.RegexPatternFilenameFilter"">
        <property name=""pattern"" value=""test[0-9]+\.txt""/>
    </bean>
","14/Jun/08 3:57 AM;iwein;is namespace support for the suggested shorthand - <file-source .... filename-regex=""test[0-9]+.txt""/> - going to be supported in M5?","14/Jun/08 9:59 PM;mark.fisher;I have mixed feelings about the inclusion of namespace support for filename-regex (or possibly ""filename-pattern""). To some degree this might be considered as excessively specific functionality to be included within the parser logic (we already have support for the ""filename-filter"" bean reference now, and perhaps that is sufficient?). To be clear, on one hand I can appreciate the regular expression matching of a filename as very commonly needed behavior. But, on the other hand, Spring namespace support generally avoids such fine-grained behavior (i.e. it's ok to support a bean reference for strategy interfaces but internally creating a particular strategy instance may be going too far). I guess if this is likely the only such case, it might be ok... but my concern is that including this might lead to many requests for other specific features based on namespace attributes.

I am definitely interested in feedback on both sides of this argument.

-Mark
","15/Jun/08 6:29 PM;jgaines;In our experience 80-90% of all scenarios involving polling a directory for incoming files need to distinguish among the files based on patterns in their names.  Certainly the current integration exercises for which we're hoping to use SI involve dozens of use cases like this, ALL of which will poll for files in a given directory based on filename patterns.

The underlying reason for this experience, I think, is that the application generating the files is inevitably some non-web/non-Internet/non-RDBMS/legacy app whose only way of communicating with the outside world is by writing files to a directory.  And these applications, at least in our experience, *inevitably* distinguish among types of events they need to publish via filename patterns.

I appreciate Mark's concerns about overly specific parser logic.  Let me ask the question this way: in practice, how often have you come across an incoming-file-polling requirement which was based on something OTHER than the filename?","15/Jun/08 6:37 PM;jgaines;Re-reading my comment:  When I said 80-90%, I was just trying to hedge my bets.  In fact, in our experience we have NEVER encountered a requirement in this space for anything other than a filename pattern filter.","23/Jun/08 5:25 AM;mark.fisher;Giving this a bit more thought... for the use-case in question, a router might be a better candidate. In other words, rather than having multiple pollers hitting the same directory and then filtering based on filename, have a single poller that picks up files and then a router that distributes to different channels based on the filename.

This does not necessarily mean that the regex-based filename filter should not be configurable via the namespace, but it potentially provides a more elegant solution for the situation as described.

-Mark
","26/Jun/08 2:25 PM;jgaines;Hi Mark, we'd considered such a configuration earlier but had decided it would not work for us.  The reason is that we need to be able to poll for different kinds of files on different schedules.","26/Jun/08 10:03 PM;mark.fisher;Thanks Jerry. That makes sense and is exactly what I was wondering about.

Perhaps, it would be worth adding a FilenamePatternRouter implementation as well for those use-cases where it does meet the requirements.","05/Jul/08 10:50 AM;mark.fisher;The ""filename-pattern"" attribute is now supported on <file-source/>.

It will trigger the creation of a RegexPatternFilenameFilter instance, and that will be set on the FileSource object.
",,,,,,,,,
Make FileSource use Resource to locate its directory,INT-251,22512,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,david_syer,david_syer,08/Jun/08 6:47 AM,24/Jun/08 4:30 AM,10/May/19 2:37 AM,08/Jun/08 2:32 PM,1.0 M4,,,,,,1.0 M5,,,Adapters,,,,,0,,"Make MakeFileSource use Resource to locate its directory, because otherwise you lose the benefit of ResourceEditor.  Alternatively, I suppose, we could install a FileEditor that duplicated the functionality.  The benefit of ResourceEditor I am mostly interested in is the ability to replace system properties in placeholders (but maybe there are others).",,"Some of the time spent figuring out what would be best to do in order to prevent ClassPathXmlApplicationContext to autoinject ClasspathResource's.
;08/Jun/08 2:33 PM;mbogoevici;7200",,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,344476800,,,,,2008-06-08 14:32:36.238,26319,false,mark.fisher(mark.fisher),,,,0|i02vfb:,16801,15818,,,,,"08/Jun/08 2:32 PM;mbogoevici;FileSource now uses a Resource, which must point to a directory. 

For namespace support, in order to simplify configuration, if the value provided in the 'directory' attribute of <file-source/> not a URL nor a 'classpath:' value, the parser will force the 'file:' prefix by default.",,,,,,,,,,,,,,,,,,,,,,
OSGi MANIFEST inconsistent in snapshots,INT-248,22507,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,07/Jun/08 7:22 PM,25/Jun/08 5:14 AM,10/May/19 2:37 AM,25/Jun/08 5:14 AM,,,,,,,1.0 M5,,,,,,,,0,,"The adapters MANIFEST has an import for some core packages with a vert strict version conxstraint ""[1.0.0,1.0.0]"".  The core MANIFEST has manifest version 1.0.0-CI-XXX so adapters cannot be started.",,;25/Jun/08 5:06 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,343008000,,,,,2008-06-25 05:14:51.286,26322,false,mark.fisher(mark.fisher),,,,0|i058t3:,30633,27660,,,,,"25/Jun/08 5:14 AM;mark.fisher;Inter-dependencies across spring-integration modules have been changed from the [1.0.0, 1.0.0] version range to [1.0.0, 1.0.1).
",,,,,,,,,,,,,,,,,,,,,,
Update the samples to reflect that the MessageBus is auto-starting by default,INT-243,22457,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mbogoevici,mbogoevici,mbogoevici,03/Jun/08 2:13 PM,03/Jun/08 3:23 PM,10/May/19 2:37 AM,03/Jun/08 3:23 PM,,,,,,,1.0 M5,,,,,,,,0,,,,;03/Jun/08 3:23 PM;mbogoevici;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,344908800,,,,,,26325,false,mbogoevici(mbogoevici),,,,0|i03m3j:,21122,17845,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for the 'fileFilter' and 'filenameFilter' properties of FileSource,INT-242,22448,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,02/Jun/08 9:57 PM,03/Jun/08 4:14 AM,10/May/19 2:37 AM,03/Jun/08 4:14 AM,,,,,,,1.0 M5,,,Adapters,,,,,0,,,,;03/Jun/08 4:13 AM;mark.fisher;2700,,,,,,,,,,,,,,2700,0,2700,100%,2700,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,344908800,,,,,,26326,false,mark.fisher(mark.fisher),,,,0|i05967:,30692,27729,,,,,03/Jun/08 4:14 AM;mark.fisher;The <file-source/> element now accepts either a 'file-filter' or a 'filename-filter' attribute (never both).,,,,,,,,,,,,,,,,,,,,,,
Predictable odering of files in FileSource,INT-241,22437,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,knutfork,knutfork,02/Jun/08 11:40 AM,03/Nov/08 5:15 PM,10/May/19 2:37 AM,31/Aug/08 10:49 PM,1.0 M4,,,,,,1.0 RC1,,,Adapters,,,,,1,,"Regarding FileSource:

It seems the order in which files are consumed is random, whichever
comes firs in the HashMap iterator.  Following the principle of least
surprise it would be nice if the messages were generated in file name
order.  Some users might want file timestamp order, so maybe some sort
of extension point around the directory listing would be even better.


PS: I also noticed there are cross dependencies between the packages
org.springframework.integration.adapter.file and
org.springframework.integration.adapter.ftp.  I suspect that is
unintentional.
",,Based Backlog on PriorityBlockingQueue. This will ensure natural ordering of items. Next improvement will be to allow to inject a Comparator;24/Aug/08 12:52 AM;iwein;7200,refactoring in backlog and FileSource to accept Comparable in constructor;31/Aug/08 10:53 PM;iwein;7200,,,,,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,331689600,,,,,2008-08-24 00:58:10.218,26327,false,iwein(iwein),,,,0|i01vvb:,11040,11019,,,,,"24/Aug/08 12:58 AM;iwein;btw, good spot on the cyclic dependency. I'll install a checker for that to prevent being a moron.","31/Aug/08 10:49 PM;iwein;If you configure the filesource as a normal bean you can now add a Comparator constructor arg. This comparator will then be used to order items in the backlog. Note that ordering guarantees are void in a multi threaded environment, so this is no replacement for proper Resequencing.",03/Nov/08 5:15 PM;iwein;Look at PollableFileSource. Subject class is no more.,,,,,,,,,,,,,,,,,,,,
MessageHeader values should be propagated across all SI components.,INT-240,22428,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,rmiles,rmiles,01/Jun/08 7:43 PM,13/Sep/10 5:54 PM,10/May/19 2:37 AM,19/Oct/08 11:32 PM,1.0 M4,,,,,,1.0 RC1,,,Adapters,Core,,,,7,,"The propagation of Spring Integration MessageHeader values is not yet implemented. 

This means that for cases where two SI instances are connected via JMS, RMI, etc the message header details are not propagated. This specifically incurs problems if you are using a SI gateway to send messages through an async system with one of the aforementioned components. In those cases the gateway is unable to establish whether or not the response message is related to the request message as the correlation id is lost in transit.

It is possible to roll your own MessageHeaderMapper implementation to accomplish what is needed with JMS, but ideally this should be supported by a default out of the box.",Any Spring Integration environment up to M4.,;19/Oct/08 11:26 PM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,INT-290,,,,,,,,,,,,,,332985600,,,,,2008-08-19 04:42:30.701,26328,false,mark.fisher(mark.fisher),,,,0|i01vvj:,11041,11020,,,,,"19/Aug/08 4:42 AM;mark.fisher;Propagation of JMS headers is working properly as described here:  http://jira.springframework.org/browse/INT-290

Applying this consistently for other transports that are capable of passing headers (e.g. RMI and HttpInvoker) remains as an issue to be resolved prior to RC1.
","15/Oct/08 5:20 AM;bohnman;I think it's very awkward to have to prefix a message header in order to tell it to propogate across jms.  One of the main goals of any integration api should be to remain transport agnostic.  Why not have the mapper by default pass in all the headers that it can to jms?  You could actually apply the prefix on the way in to jms and remove the prefix on the way out from jms if you wanted some sort of namespace applied.  Yes, I could do this myself, but I think this should be the default behavior.  Am I missing something?","15/Oct/08 5:31 AM;mark.fisher;The original idea behind the prefix is that several header values are only relevant within the local system, and it doesn't make sense to send them within JMS properties. Additionally, there are vendor-specific issues with certain illegal/reserved property names. The primary role of the JMS adapters in Spring Integration was intended to be sending the Spring Integration Message *payload* just as if you were using Spring's JmsTemplate.convertAndSend(..) method, but that only really works well for unidirectional situations.

However, I think what you are referring to is using JMS as a transport between 2 Spring Integration instances? If so, then I think the best solution we can provide is to send the Spring Integration Message as the JMS Message... in other words, avoiding the use of the header-mapping MessageConverter altogether. Is that indeed what you are trying to accomplish?
","15/Oct/08 6:16 AM;bohnman;We use several custom headers in our application to provide context around a message.  I can see cases where we would use JMS in both inter-JVM and intra-JVM message passing.  For example, we may want to send a message to a same-JVM channel  that sends messages to a JMS queue because we are using a commercial JMS product that may be more sophisticated than what a QueueChannel can provide.  In either case, I believe there should be a consistent way of sending SI messages across different ""transports"" without the message producer having to be knowledgeable of the transport.  The framework should do its best to resolve vendor-specific issues.  Any special ""things"" that are needed for the transport that can't be done automatically by the framework should be handled using configuration.  Of course, there is code behind the configuration, but the producer and consumer are none the wiser.","15/Oct/08 6:32 AM;mark.fisher;Thanks for the comments. I agree with your assessment and your expectations from the framework. I think what I am hoping to resolve is the distinction between ""transport"" and ""adapter"" (for lack of a better term). A transport should simply pass along the Message - or as much of it as possible (e.g. transient properties excluded in Java serialization), and should do so as transparently as possible. What I am referring to as ""adapter"" on the other hand is a connector to a different system that is not aware of or capable of handling the same Message format at all. For example:

   [System A: using Spring Integration] -> [JMS Queue] -> [System B]

If System B above is expecting a JMS TextMessage containing some XML, then System A should be simply passing the Message payload - after converting it into a text format if necessary. This is different than the case where System B is also using Spring Integration and may be simply passing a Spring Integration Message to another channel.

Now, with our support for RMI and HttpInvoker ""gateways"", we only handle the case where Spring Integration is used on both sides. In other words, we're treating it as a ""transport"" for sending Spring Integration Messages. On the other hand, for Mail (as an example), we don't send a Spring Integration Message - rather we adapt the payload and send that as the Mail content.

With JMS, we need to support both (""transport"" = Spring Integration on both sides; ""adapter"" = Spring Integration on one side only), and the simplest way to do this is probably treating it as *just a transport* unless something is added for handling the payload extraction/conversion.

Does this make sense?


","15/Oct/08 6:55 AM;bohnman;Understood.  I think we are on the same page.  We are planning to use both adapters and transports in our system.  Pardon, my stupidity, is there something existing that treats JMS as transport or do I need to do write some custom code where I set the SI message as the JMS payload on the way in and extract the SI message from the JMS payload on the way out?

Apologies, as this is probably more appropriate for a forum post.","15/Oct/08 6:59 AM;mark.fisher;No need to apologize. This is definitely relevant for the issue at hand. I will be making some updates for the current JMS adapters so that they can accommodate both ""transport"" and ""adapter"" mode as described in this thread. Right now, they are only passing the payload, and - as you know - mapping certain header values to JMS properties... so not the right approach for using as just a transport.","15/Oct/08 6:04 PM;neilwilk;Hi Guys

Sorry to put my oar in, but you might want to have a look INT-355, as I think it is related to this bug.

The architecture that resulted in INT-355 is:

[System A: using Spring Integration] -> request/reply -> [JMS Queue (Active MQ or Websphere MQ) -> [System B: using Spring Integration]

The problem in INT-355 is that when System B's reply gets back to System A, the JMS correlation ID is null, so there's no means of correlating the request and the reply.","15/Oct/08 6:06 PM;neilwilk;Ooops.  On re-reading INT-355, it looks like the JMS correlation ID is non-null, but it's the wrong ID, so SI can't correlate the request and the reply.","15/Oct/08 10:10 PM;h2o;I'd like to add some thoughts to this discussion. One of the things I learned from working on Mule is that mashing together unrelated metadata (such as custom headers and context/transport-specific things) is really, really evil and over time will infest the entire code base like cancer. Namespaces or even better full semantic separation of message metadata is very desirable and ultimately required for many routing scenarios that cross several unrelated transports (which may be lossy) where interpretation of metadata depends on the particular context.

I'd therefore like to suggest that properties are classified according to their context - maybe app-specific (generic spring-integration/routing headers?), transport-specific (if the transport supports transport metadata, like JMS or HTTP), message-exchange-specific (see below) and user-supplied properties. Without this separation every transport will sooner or later have to implement knowledge and special-case handling of *all other* transports' headers - much loop-writing and key/value munging ensues and you end up with really hard to debug problems like header case sensitivity, accidentally propagated typos etc.

Mule also started out with a single unified holder ala ""MessageHader"" and it became one of the biggest maintenance headache for cross-transport metadata consistency. IIRC Mule2 has introduced some scoping (app, session, request, response?) to separate the headers according to the message exchange pattern (oneway, sync request/response, async reply with correlation etc).
","19/Oct/08 11:32 PM;mark.fisher;The following JMS adapters are now available:
   JmsInboundChannelAdapter
   JmsOutboundChannelAdapter
   JmsInboundGateway
   JmsOutboundGateway

The gateways should be used for request/reply scenarios where Spring Integration is on both sides. These support passing of the Spring Integration Message itself as the body of the JMS Message (unless 'extractPayload' is set to true on the mapper). Therefore, all Serializable header values are preserved. Additionally, when a reply is returned (when using the outbound gateway), the non-Serialized header values from the original request will be added back to the Message before it is sent to the local Message Channel. The JMS header-enricher element also provides support for setting the correlation-id and/or reply-to properties before sending a JMS Message.
",,,,,,,,,,,,
App context BeanCreationException raised when mixing annotation-driven integration components with XML integration tags,INT-239,22427,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,rmiles,rmiles,01/Jun/08 7:37 PM,02/Jun/08 6:26 AM,10/May/19 2:37 AM,02/Jun/08 5:19 AM,1.0 M4,,,,,,1.0 M5,,,Core,,,,,0,,"I combined 3 annotation driven components (a splitter, router and aggregator) into an application and everything worked fine. Then, when I added a <gateway/> element to generate a gateway that matched one of my service interfaces I got the following error when the application context was initialized:

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.test.test-gateway: Injection of resource fields failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'searchGateway': Post-processing of the FactoryBean's object failed; nested exception is java.lang.IllegalArgumentException: Class must not be null
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessAfterInstantiation(CommonAnnotationBeanPostProcessor.java:291)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:927)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:325)
        at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:110)
        at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
        at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:255)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:93)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:130)
        at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
        at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
        at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
        at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
        at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
        at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
        at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flightSearchGateway': Post-processing of the FactoryBean's object failed; nested exception is java.lang.IllegalArgumentException: Class must not be null
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:140)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:114)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:90)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1272)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:216)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:184)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:422)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:497)
        at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:182)
        at org.springframework.beans.factory.annotation.InjectionMetadata.injectFields(InjectionMetadata.java:104)
        at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessAfterInstantiation(CommonAnnotationBeanPostProcessor.java:288)
        ... 18 more
Caused by: java.lang.IllegalArgumentException: Class must not be null
        at org.springframework.util.Assert.notNull(Assert.java:112)
        at org.springframework.core.annotation.AnnotationUtils.findAnnotation(AnnotationUtils.java:122)
        at org.springframework.integration.config.MessageEndpointAnnotationPostProcessor.postProcessAfterInitialization(MessageEndpointAnnotationPostProcessor.java:111)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:357)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1393)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:137)
        ... 30 more

The problem went away when I put all my Spring Integration configuration into the XML, but ideally a mix of the two would be the best option in my case and should really not cause an issue.
",Problem occurred when using STS on Mac OS X using Spring Integration M4 release.,;02/Jun/08 5:09 AM;mark.fisher;21600,,,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,,,,,,,,,,,,,,,344995200,,,,,2008-06-02 05:19:34.011,11010,false,rmiles(rmiles),,,,0|i02vf3:,16800,15817,,,,,"02/Jun/08 5:19 AM;mark.fisher;The XML and annotation-based components should work together now.

If you get a chance, please verify your use-case after an SVN update (r659 or later).

Thanks,
Mark
","02/Jun/08 6:26 AM;rmiles;Tested with a mixed configuration against 660 and all works great now!

Thanks,
Russ",,,,,,,,,,,,,,,,,,,,,
Problems with jmsGateway and JTA/Transactions,INT-237,22422,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,cmercer,cmercer,01/Jun/08 2:56 PM,02/Jun/08 6:25 AM,10/May/19 2:37 AM,02/Jun/08 6:25 AM,1.0 M4,,,,,,1.0 M5,,,Adapters,,,,,0,,"See the following forum thread

http://forum.springframework.org/showthread.php?t=55182

Short Summary

The jmsGateway xml schema configuration does not appear to be calling start or destory and therefore is not ever subscribing to the jms queue.  A workaround is to create the jmsGateway with as a regular bean.

JmsGateway class and jmsGateway xml schema configuration have no way to pass the jtaTransactionManager to the DefaultMessageListenerContainer to make the listening transactional",custom test setup atomikos transaction JTA jdk1.5 mac,;02/Jun/08 6:24 AM;mark.fisher;9000,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,344995200,,,,,2008-06-02 06:25:34.813,26329,false,mark.fisher(mark.fisher),,,,0|i046m7:,24446,21200,,,,,"02/Jun/08 6:25 AM;mark.fisher;The MessageBus now recognizes MessagingGateway implementations within the ApplicationContext, and if a gateway also implements Lifecycle (e.g. JmsGateway), that lifecycle can now be managed by the MessageBus.

Also, JmsGateway now enables configuration of the 'transactionManager' to be set on the MessageListener container, and the <jms-gateway/> element now accepts a ""transaction-manager"" attribute for the bean reference.
",,,,,,,,,,,,,,,,,,,,,,
channel used in source-endpoint not auto-created,INT-235,22303,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,26/May/08 3:05 AM,04/Jul/08 8:32 AM,10/May/19 2:37 AM,04/Jul/08 8:32 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"When using:
	<si:message-bus auto-create-channels=""true"" />
	<si:jms-source id=""jmsSource"" destination-name=""sampleQueue""
		connection-factory=""connectionFactory"" />
	<si:jms-target id=""jmsTarget"" destination-name=""sampleQueue""
		connection-factory=""connectionFactory"" />
	<si:target-endpoint target=""jmsTarget""
		input-channel=""input"" />
	<si:channel id=""output""/>
	<si:source-endpoint channel=""output"" source=""jmsSource"">
		<si:schedule period=""500"" />
	</si:source-endpoint>

The channel definition is required. If not supplied running the application will result in:

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.endpoint.SourceEndpoint#0': Cannot resolve reference to bean 'output' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'output' is defined
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:275)

",,;04/Jul/08 8:30 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,342230400,,,,,2008-07-04 08:32:30.56,12727,false,mark.fisher(mark.fisher),,,,0|i02s6v:,16276,15353,,,,,"04/Jul/08 8:32 AM;mark.fisher;The 'auto-create channels' option now works with SourceEndpoints that provide an outputChannelName (or through namespace-based configuration).
",,,,,,,,,,,,,,,,,,,,,,
Use full arguments constructor of MessagingException in AbstractMessageHandlerAdapter,INT-234,22288,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,java2enterprise,java2enterprise,24/May/08 8:26 AM,24/May/08 1:24 PM,10/May/19 2:37 AM,24/May/08 1:24 PM,1.0 M4,,,,,,1.0 M5,,,Core,,,,,0,,"Actually my main purpose has been descripted in

http://jira.springframework.org/browse/INT-179

The top level Exception MessagingException has contained the failedMessage now, and in most scenario it works fine, but sometimes an unexpected Exception(e . g NullPointerException)  will be thrown,  in this case the ErrorHandler can't get the failedMessage.

I noticed that AbstractMessageHandlerAdapter is the skeletal implemention of most MessageHandlerAdapter,  but It seems the exception handle block forget to pass faildMessage,  the orginal code as follow : 

		catch (InvocationTargetException e) {
			throw new MessagingException(
					""Handler method '"" + this.method + ""' threw an Exception."", e.getTargetException());	
		}
		catch (Throwable e) {	
			throw new MessagingException(""Failed to invoke handler method '"" + this.method +
					""' with arguments: "" + ObjectUtils.nullSafeToString(args), e);
		}
 
And other skeletal implementions (e.g AbstractRemotingTargetAdapter) has passed the failedMessage.

I wonder if the failedMessage field in MessagingException is mandatory,  then we can avoid this type of issues ?",,;24/May/08 1:21 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,345772800,,,,,2008-05-24 12:36:30.651,26331,false,mark.fisher(mark.fisher),,,,0|i059b3:,30714,27756,,,,,"24/May/08 12:36 PM;mark.fisher;These MessagingExceptions should be changed to MessageHandlingExceptions (which does require the 'failedMessage').

The reason that MessagingException itself does not require the 'failedMessage' is that there may be exceptional scenarios that occur before a Message has even been created. MessageHandlingException on the other hand does imply that a Message to-be-handled already exists, and since the AbstractMessageHandlerAdapter is the base class for handler implementations, that is the type that we should be throwing there.
","24/May/08 1:24 PM;mark.fisher;Those two MessagingExceptions are now MessageHandlingExceptions, and the 'failedMessage' is passed within the Exception.",,,,,,,,,,,,,,,,,,,,,
"When passing to a handling method, primitive arrays should not be cast to Object[]",INT-229,22260,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mbogoevici,mbogoevici,22/May/08 8:07 AM,22/May/08 8:09 AM,10/May/19 2:37 AM,22/May/08 8:07 AM,1.0 M3,,,,,,1.0 M4,,,,,,,,0,,"AbstractMessageHandlerAdapter will try to cast a primitive array to Object[], if present as a message payload.

Fix: cast down only Object[] arrays.",,;22/May/08 8:09 AM;mbogoevici;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,345945600,,,,,,26336,false,mbogoevici(mbogoevici),,,,0|i0236v:,12226,12092,,,,,22/May/08 8:07 AM;mbogoevici;Fixed,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for creating a MessageSelectorChain,INT-227,22240,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,21/May/08 3:12 AM,24/Jun/08 8:11 AM,10/May/19 2:37 AM,24/Jun/08 8:11 AM,,,,,,,1.0 M5,,,,,,,,0,,The <selector-chain/> element should be consistent with the <handler-chain/> element.,,;24/Jun/08 8:10 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,343094400,,,,,,26337,false,mark.fisher(mark.fisher),,,,0|i02vp3:,16845,15848,,,,,"24/Jun/08 8:11 AM;mark.fisher;A MessageSelectorChain can now be created by using the <selector-chain/> element with child <selector ref=""x""/> elements.
",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for GatewayProxyFactoryBean,INT-226,22238,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/May/08 12:28 AM,21/May/08 2:14 AM,10/May/19 2:37 AM,21/May/08 2:12 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"The xml should be similar to the following:

<gateway service-interface=""com.foo.MyService""
                   request-channel=""channel1""
                   reply-channel=""channel2""
                   request-timeout=""3000""
                   reply-timeout=""3000""/>

Other attributes include: message-creator and message-mapper
",,;21/May/08 1:50 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26338,false,mark.fisher(mark.fisher),,,,0|i059dj:,30725,27768,,,,,"21/May/08 2:12 AM;mark.fisher;The <gateway/> element is now available. Here are a few examples from the GatewayParserTests:

   <gateway id=""oneWay""
                     service-interface=""org.springframework.integration.gateway.TestService""
                     request-channel=""requestChannel""/>

   <gateway id=""solicitResponse""
                      service-interface=""org.springframework.integration.gateway.TestService""
                      reply-channel=""replyChannel""
                      reply-timeout=""3000""/>

   <gateway id=""requestReply""
                      service-interface=""org.springframework.integration.gateway.TestService""
                      request-channel=""requestChannel""
                      reply-channel=""replyChannel""/>
",,,,,,,,,,,,,,,,,,,,,,
Update reference documentation for M4,INT-225,22221,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 8:29 AM,22/May/08 5:09 PM,10/May/19 2:37 AM,22/May/08 5:09 PM,,,,,,,1.0 M4,,,Documentation,,,,,0,,,,;22/May/08 5:08 PM;mark.fisher;57600,,,,,,,,,,,,,,43200,0,57600,133%,43200,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26339,false,mark.fisher(mark.fisher),,,,0|i01rfz:,10323,10312,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Spring 2.5.4,INT-224,22217,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 6:42 AM,20/May/08 9:07 AM,10/May/19 2:37 AM,20/May/08 9:07 AM,,,,,,,1.0 M4,,,Core,,,,,0,,This includes all spring JARs referenced by spring-integration projects.,,;20/May/08 9:05 AM;mark.fisher;1800,,,,,,,,,,,,,,5400,3600,1800,33%,5400,3600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26340,false,mark.fisher(mark.fisher),,,,0|i059f3:,30732,27776,,,,,20/May/08 9:07 AM;mark.fisher;Upgraded to the SpringSource Enterprise Bundle Repository.,,,,,,,,,,,,,,,,,,,,,,
Move spring.schemas and spring.handlers files to src/main/resources,INT-223,22216,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 6:40 AM,20/May/08 9:18 AM,10/May/19 2:37 AM,20/May/08 9:18 AM,,,,,,,1.0 M4,,,Adapters,Core,,,,0,,This way there will be only one META-INF directory. The 'src/main/resources' folders will need to be included in the project classpath.,,;20/May/08 9:17 AM;mark.fisher;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26341,false,mark.fisher(mark.fisher),,,,0|i059ev:,30731,27775,,,,,20/May/08 9:18 AM;mark.fisher;All content under 'src/main/java/META-INF' has been moved to 'src/main/resources/META-INF'.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for ThreadLocalChannel,INT-222,22211,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 2:47 AM,20/May/08 3:51 AM,10/May/19 2:37 AM,20/May/08 3:51 AM,,,,,,,1.0 M4,,,Core,,,,,0,,,,;20/May/08 3:50 AM;mark.fisher;2700,,,,,,,,,,,,,,2700,0,2700,100%,2700,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26342,false,mark.fisher(mark.fisher),,,,0|i059fr:,30735,27780,,,,,20/May/08 3:51 AM;mark.fisher;The <thread-local-channel/> element is now available.,,,,,,,,,,,,,,,,,,,,,,
Implement a ThreadLocalChannelFactory,INT-221,22210,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 2:47 AM,20/May/08 3:41 AM,10/May/19 2:37 AM,20/May/08 3:41 AM,,,,,,,1.0 M4,,,Core,,,,,0,,,,;20/May/08 3:41 AM;mark.fisher;1200,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26343,false,mark.fisher(mark.fisher),,,,0|i059fz:,30736,27781,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add annotation support for schedule metadata on a message endpoint,INT-220,22204,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/May/08 12:48 AM,20/May/08 1:09 AM,10/May/19 2:37 AM,20/May/08 1:09 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"Currently the <schedule/> element is available for XML configuration, but no equivalent exists for an annotation-based endpoint. The @Polled annotation provides the same information but is currently only available as a method-level annotation.",,;20/May/08 1:03 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,346204800,,,,,,26344,false,mark.fisher(mark.fisher),,,,0|i0471b:,24514,21268,,,,,20/May/08 1:09 AM;mark.fisher;The @Polled annotation can now supply scheduling information for a class that is also annotated with @MessageEndpoint.,,,,,,,,,,,,,,,,,,,,,,
Add support for Spring Security on Target endpoints,INT-219,22203,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,mark.fisher,mark.fisher,19/May/08 11:20 PM,03/Jul/08 1:58 AM,10/May/19 2:37 AM,03/Jul/08 1:57 AM,,,,,,,1.0 M5,,,Core,,,,,1,,"The target endpoint should be secured with declarative configuration of authorization requirements. Additionally, any target capable of propagating the security context should be able to retrieve it from the MessageHeader.",,;03/Jul/08 1:58 AM;jpartner;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,342403200,,,,,2008-07-03 01:57:42.146,26345,false,jpartner(jpartner),,,,0|i058nb:,30607,27631,,,,,03/Jul/08 1:57 AM;jpartner;Added SecurityEndpointInterceptor which can secure both Source and Target endpoints,,,,,,,,,,,,,,,,,,,,,,
Add support for Spring Security on Source endpoints,INT-218,22202,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,mark.fisher,mark.fisher,19/May/08 11:18 PM,03/Jul/08 1:58 AM,10/May/19 2:37 AM,03/Jul/08 1:58 AM,,,,,,,1.0 M5,,,Core,,,,,0,,The Source endpoint should be able to detect a propagated SecurityContext if available and then pass that within the MessageHeader. Declarative configuration of authorization rules for the source endpoint itself should also be supported.,,;03/Jul/08 1:58 AM;jpartner;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,342403200,,,,,2008-07-03 01:58:41.524,26346,false,jpartner(jpartner),,,,0|i02v5r:,16758,15778,,,,,03/Jul/08 1:58 AM;jpartner;Added SecurityEndpointInterceptor which can secure both Source and Target endpoints,,,,,,,,,,,,,,,,,,,,,,
Update MANIFEST.MF files for M4 release,INT-217,22197,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/May/08 1:39 PM,22/May/08 6:04 PM,10/May/19 2:37 AM,22/May/08 6:04 PM,,,,,,,1.0 M4,,,Adapters,Core,,,,0,,,,;22/May/08 6:04 PM;mark.fisher;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,346204800,,,,,,26347,false,mark.fisher(mark.fisher),,,,0|i03m3r:,21123,17846,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handler method with Message payload does not work for namespace configuration,INT-216,22166,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,16/May/08 1:13 AM,16/May/08 1:55 AM,10/May/19 2:37 AM,16/May/08 1:55 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"The annotation-based endpoints work since the actual java.lang.reflect.Method is used and therefore the expected parameter type is known ahead of time, but with a <handler-endpoint/> element, only the method name is available, and the method parameter is expected to match a Message payload instead of the Message itself.

For example, by changing the Barista in CafeDemo to include: public void prepareHotDrink(Message<Drink> drinkMessage)
(instead of expecting a ""Drink"" parameter), a NoSuchMethodException is thrown by the method invoker.
",,;16/May/08 1:55 AM;mark.fisher;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,346550400,,,,,,12472,false,mark.fisher(mark.fisher),,,,0|i059iv:,30749,27795,,,,,"16/May/08 1:55 AM;mark.fisher;This now works. If an initial invocation attempt produces the NoSuchMethodException when passing the Message payload, the actual Message will be passed instead. If that is successful, then the 'methodExpectsMessage' property is changed to TRUE. Therefore, the impact of this fallback only occurs one time. From that point on, the Message will always be passed (the MessageMapper is bypassed altogether).
",,,,,,,,,,,,,,,,,,,,,,
Refactor the core's org.springframework.integration.adapter package contents into other packages,INT-215,22160,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/May/08 1:04 PM,19/May/08 1:41 PM,10/May/19 2:37 AM,19/May/08 1:41 PM,1.0 M4,,,,,,1.0 M4,,,Core,,,,,0,,"MethodInvokingSource/Target/Handler should be moved to other packages anyways, but this will also remove the overlap between the core and adapter modules.

This forum post about OSGi issues is relevant: http://forum.springframework.org/showthread.php?t=54273
",,;19/May/08 1:40 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,346204800,,,,,,26348,false,mark.fisher(mark.fisher),,,,0|i02vcf:,16788,15805,,,,,"15/May/08 1:31 PM;mark.fisher;Moved MethodInvokingSource to 'org.springframework.integration.message'.

Moved MethodInvokingTarget to 'org.springframework.integration.handler'.

The 'org.springframework.integration.adapter' package has been removed from the ""spring-integration-core"" module.

The MANIFEST.MF file still needs to be updated prior to M4.
",19/May/08 1:41 PM;mark.fisher;The MANIFEST.MF files will be updated for INT-217,,,,,,,,,,,,,,,,,,,,,
Messagebus monitor,INT-212,21964,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,mark.fisher,java2enterprise,java2enterprise,01/May/08 6:14 AM,13/Sep/10 5:59 PM,10/May/19 2:37 AM,11/Mar/10 3:59 PM,1.0 M3,,,,,,2.0 M3,,,Core,,,,,7,,"Provide monitor function of message bus, endpoint, channel,  this should be useful.",,;11/Mar/10 3:59 PM;mark.fisher;172800,,,,,,,,,,,,,,115200,0,172800,150%,115200,0,172800,,,,,,,,,,,,,,,,,,,,,,,,,,289094400,,,,,2008-07-05 08:05:49.775,26350,false,mark.fisher(mark.fisher),,,,0|i0237b:,12228,12094,,,,,"05/Jul/08 8:05 AM;mark.fisher;We will be adding basic JMX-based monitoring capabilities for 1.0.

One idea is to include an ""enable-mbeans"" option (or something similar) on the message-bus. MBeans can be registered for well-known attributes and operations. This may require the use of wrappers/proxies (e.g. for counting invocations of a given consumer endpoint).",25/Nov/08 3:22 AM;mark.fisher;Moving to 1.1,"03/Sep/09 1:10 AM;mark.fisher;We need to add more specific sub-tasks here. There is no longer an explicit ""message bus"" to monitor, but we can monitor channels (number of messages sent, received, rejected, enqueued, etc.), and we can monitor endpoints.
",08/Dec/09 9:18 AM;mark.fisher;Moving from M2 to M3 since this depends on Control Bus (work in progress).,"11/Mar/10 3:59 PM;mark.fisher;There is still more that can be done, but I am resolving this issue since we now have the basic monitoring capabilities, and it's a good opportunity to get some feedback.

Channels are now providing ""SendSuccessCount"" and ""SendErrorCount"" attributes.

These names might change... suggestions are VERY welcome!

QueueChannels expose QueueSize and RemainingCapacity attributes as well.

The endpoints have Spring Lifecycle methods exposed as MBean operations.
",,,,,,,,,,,,,,,,,,
configurability of the mapper and filename generator,INT-207,21891,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,puran,puran,24/Apr/08 5:05 AM,22/May/08 12:11 PM,10/May/19 2:37 AM,22/May/08 12:11 PM,1.0 M3,,,,,,1.0 M4,,,Adapters,,,,,0,,"I was trying that file copy sample, is there any way to override the default FileTargetAdapter class, basically i want to avoid deletion of files from the source and also have a different file name generator class. so there should be some way to configure filename generator and the mapper classes.","windows., java 5/6 ",;22/May/08 12:11 PM;mbogoevici;28800,,,,,,,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,345945600,,,,,2008-05-22 12:11:19.504,26354,false,mbogoevici(mbogoevici),,,,0|i02387:,12232,12098,,,,,"24/Apr/08 5:42 AM;puran;I am really sorry, this issue is for Spring Integration, can anyone move it","22/May/08 12:11 PM;mbogoevici;Fixed as follows:

- FileSource will not delete files anymore. Instead it will monitor the folder for changes. Instead, only newly added files and files that have changed will be processed. 

- The namespace supports specifying a custom filename generator.",,,,,,,,,,,,,,,,,,,,,
Mapping to JMS properties from the MessageHeader should avoid fatal errors,INT-206,21852,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Apr/08 9:56 AM,15/May/08 8:25 AM,10/May/19 2:37 AM,15/May/08 8:25 AM,,,,,,,1.0 M4,,,Adapters,,,,,0,,This scenario is described in the following forum post: http://forum.springframework.org/showthread.php?p=176695,,;15/May/08 8:25 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,346550400,,,,,,26355,false,mark.fisher(mark.fisher),,,,0|i02v4f:,16752,15772,,,,,15/May/08 8:25 AM;mark.fisher;Any Exceptions thrown during the header-mapping process will now result in a WARN-level log message but not a fatal condition.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for configuring the MessageHeaderMapper for JMS source and target,INT-205,21851,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Apr/08 9:53 AM,20/May/08 6:02 AM,10/May/19 2:37 AM,20/May/08 6:02 AM,,,,,,,1.0 M4,,,Adapters,,,,,0,,This may actually apply more generally for adapters.,,;20/May/08 5:54 AM;mark.fisher;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26356,false,mark.fisher(mark.fisher),,,,0|i059fb:,30733,27777,,,,,"20/May/08 6:02 AM;mark.fisher;Added support for a ""header-mapper"" attribute on the <jms-source/> and <jms-target/> elements. The value should be a bean name reference to an implementation of the HeaderMapper.
",,,,,,,,,,,,,,,,,,,,,,
Provide removeProperty() for MessageHeader,INT-204,21834,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,21/Apr/08 8:16 PM,22/Apr/08 12:41 AM,10/May/19 2:37 AM,22/Apr/08 12:41 AM,1.0 M3,,,,,,1.0 M4,,,Core,,,,,0,,Provide removeProperty() for MessageHeader (or adopt convention about putting null).  You can add them and list them but not remove them right now.,,;22/Apr/08 12:41 AM;mark.fisher;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,348624000,,,,,2008-04-22 00:41:57.637,26357,false,mark.fisher(mark.fisher),,,,0|i0238f:,12233,12099,,,,,22/Apr/08 12:41 AM;mark.fisher;Added removeProperty(String key) to the MessageHeader.,,,,,,,,,,,,,,,,,,,,,,
Provide removeAttribute() for MessageHeader,INT-203,21831,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,21/Apr/08 6:46 PM,22/Apr/08 12:42 AM,10/May/19 2:37 AM,22/Apr/08 12:42 AM,1.0 M3,,,,,,1.0 M4,,,Core,,,,,0,,Provide removeAttribute() for MessageHeader (or adopt convention about putting null).  You can add them and list them but not remove them right now.,,;22/Apr/08 12:42 AM;mark.fisher;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,348624000,,,,,2008-04-22 00:42:33.998,26358,false,mark.fisher(mark.fisher),,,,0|i0238n:,12234,12100,,,,,22/Apr/08 12:42 AM;mark.fisher;Added removeAttribute(String key) to the MessageHeader.,,,,,,,,,,,,,,,,,,,,,,
Provide sample to demonstrate Web Services support,INT-197,21660,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mark.fisher,mark.fisher,13/Apr/08 10:52 PM,22/May/08 6:07 PM,10/May/19 2:37 AM,22/May/08 6:05 PM,,,,,,,1.0 M4,,,,,,,,3,,The sample should demonstrate a call from a Web Service target to a Web Service source running in another process.,,;22/May/08 6:07 PM;mbogoevici;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,345945600,,,,,2008-05-22 18:05:46.201,26364,false,mbogoevici(mbogoevici),,,,0|i059cv:,30722,27764,,,,,22/May/08 6:05 PM;mbogoevici;Fixed in M5,,,,,,,,,,,,,,,,,,,,,,
"Allow @Handler without @MessageEndpoint, or make input= optional",INT-195,21635,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,12/Apr/08 3:50 AM,30/May/08 10:32 AM,10/May/19 2:37 AM,30/May/08 10:32 AM,1.0 M3,,,,,,1.0 M5,,,Core,,,,,0,,"Allow @Handler without @MessageEndpoint.  E.g. I should be able to configure a POJO like this

	 <endpoint input-channel=""requests"" handler-ref=""myHandler"" default-output-channel=""response"" />

And if myHandler has an @Handler method then that is the one that should be used.

Or maybe @MessageEndpoint is OK, but the input= attribute should be optional for cases like this - I want to package a library of handlers, but not specify the channel names in advance.",,;30/May/08 10:26 AM;mark.fisher;43200,,,,,,,,,,,,,,43200,0,43200,100%,43200,0,43200,,,INT-196,,,,,,,,,,,,,,,,,,,,,,,345254400,,,,,2008-05-21 06:45:59.946,26365,false,mark.fisher(mark.fisher),,,,0|i0239b:,12237,12102,,,,,"12/Apr/08 11:53 PM;david_syer;This would work (proxy approach).  In the MessageEndpointAnnotationProcessor, stop the post processing after the handlerChaiin is created if the input is not provided.  Then instead of returning the bean, return a proxy that wraps the bean and the handler, so that an <endpoint handler-ref=""""/> will resolve to a MessageHandler, but it is also injectable as it's original type into other beans.",21/May/08 6:45 AM;mark.fisher;We will be exploring this one very early in the M5 development.,"30/May/08 10:32 AM;mark.fisher;The MessageEndpointAnnotationPostProcessor has been refactored into a new class: MessagingAnnotationPostProcessor. It delegates to individual processors for each annotation type which includes: @Handler, @MessageSource, and @MessageTarget at method-level as well as @MessageEndpoint at class-level.

Among other things, one of the results of this refactoring is that a class with @Handler on a method but no class-level @MessageEndpoint annotation will generate a proxy that includes the handler-adapter functionality. The post-processed object will implement MessageHandler and therefore be referenceable as a ""handler"" attribute from within a <handler-endpoint/> element (the same applies for @MessageSource and @MessageTarget).
",,,,,,,,,,,,,,,,,,,,
Provide annotation support for source adapters,INT-194,21633,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Apr/08 2:38 AM,23/Jun/08 5:04 AM,10/May/19 2:37 AM,23/Jun/08 5:04 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The @Polled annotation probably does not belong in classes annotated with @MessageEndpoint as it is currently. Rather a @MessageSource (or similar) should be available.
",,;23/Jun/08 5:02 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,343180800,,,,,,26366,false,mark.fisher(mark.fisher),,,,0|i02v7r:,16767,15786,,,,,"23/Jun/08 5:04 AM;mark.fisher;The @Polled annotation is now only accepted at class-level (to be used in conjunction with @MessageEndpoint).

The @MessageSource may be used at method-level for creating a Source-adapter. This may also be used with @MessageEndpoint at class level to create a source-endpoint.
",,,,,,,,,,,,,,,,,,,,,,
Provide a Messaging Bridge,INT-193,21632,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Apr/08 2:14 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,22/Nov/08 8:09 AM,,,,,,,1.0 Final,,,Core,,,,,2,,"The Messaging Bridge should enable a connection from any source-adapter to any target-adapter via a single implicitly created MessageChannel (should typically be a SynchronousChannel). This would allow the use of ChannelInterceptors, etc. - but is simple enough to be configured as a single component. See: http://eaipatterns.com/MessagingBridge.html
",,;22/Nov/08 8:02 AM;mark.fisher;7200,,,,,,,,,,,,,,21600,0,7200,33%,21600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330048000,,,,,,12437,false,mark.fisher(mark.fisher),,,,0|i052j3:,29616,25443,,,,,"05/Jul/08 8:22 AM;mark.fisher;After some more thought, it's probably better to avoid channels here altogether. The MessagingBridge can be an endpoint that directly connects a source to a target. This would still support the use of endpoint interceptors (e.g. for transactions spanning the receive-and-send operation).

The configuration could be something like this:
   <bridge source=""someSource"" target=""someTarget"">
       <schedule period=""5000""/>
       <interceptors>
           <transaction-interceptor/>
       </interceptors>
   </bridge>","19/Aug/08 4:45 AM;mark.fisher;The base MessagingBridge implementation is available, but we need to add namespace support. This will include <poller/> as well as interceptors (e.g. Message Transformers).
","22/Nov/08 8:06 AM;mark.fisher;Committed this functionality:
https://fisheye.springframework.org/changelog/spring-integration?cs=1754

Things have changed quite a bit since the original description was provided for this issue. The 'bridge' element simply connects any input-channel to any output-channel. It does not support ""interceptors"" since those should be provided on the channels themselves (or alternatively, consider ""chain"" along with transformers).

The ""bridge"" does accept a poller sub-element when the input-channel is a PollableChannel. This enables the conversion between PollableChannels and SubscribableChannels and also provides throttling capabilities based on the polling interval (or cron-expression) and 'max-messages-per-poll' settings.

Documentation updates are still pending.",22/Nov/08 8:09 AM;mark.fisher;Documentation will be addressed as part of INT-486.,,,,,,,,,,,,,,,,,,,
Add parameter-binding annotations for handler methods,INT-192,21631,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Apr/08 12:42 AM,20/May/08 5:16 AM,10/May/19 2:37 AM,20/May/08 5:16 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"Currently when a handler method is invoked, it may accept a Message object or the payload of a received Message. With payloads, any of Spring's default type-converters will be invoked automatically, and this will be extensible: INT-174. Beyond this type conversion for payloads, @Handler methods should also accept values from the MessageHeader (e.g. @HeaderAttribute(""someKey"") as a parameter-level annotation). Eventually (not part of this issue), we may also provide EL support for matching individual properties of the payload object.",,;20/May/08 5:16 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,12/Apr/08 6:32 PM;david_syer;INT-192.0.patch;https://jira.spring.io/secure/attachment/13928/INT-192.0.patch,12/Apr/08 6:32 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/13929/mylyn-context.zip,,,,,,,,,,346118400,,,,,2008-04-12 03:58:52.438,26367,false,mark.fisher(mark.fisher),,,,0|i059fj:,30734,27779,,,,,"12/Apr/08 12:45 AM;mark.fisher;This also implies that handler methods may accept more than one parameter:

@Handler
public String doSomething(String payload, @HeaderAttribute(""someKey"") String attribute) {
   // do something with the attribute and the payload (default when no annotation is present and it's not a Message object).
}
","12/Apr/08 3:58 AM;david_syer;I would also like to be able to get at the message header properties (and other stuff).  If a handler methods has a parameter of type Properties, for instance, the default could be to provide it with the message header properties.  (There would have to be disambiguation in the case that the payload wias also Properties.)","12/Apr/08 4:38 AM;mark.fisher;I've also been thinking about adding a @Transformer annotation for methods. In that case, it could have additional default behavior. For example, a return value of type Properties would be merged into the Header properties. This seems consistent with the use of annotations to supply ""reference data"" in MVC (sure, it's a different use case altogether - but same general idea).
","12/Apr/08 6:32 PM;david_syer;Attached a patch for HandlerMethodInvoker that puts the responsibility of determining how to assign mathod arguments on the invoker instead of the caller (more like the @MVC case).  It doesn't do anything with annotations yet, but the hooks are in there.  I'll finish it if you like the direction.","20/May/08 5:16 AM;mark.fisher;Annotation-based Message handler methods now accept @HeaderAttribute(""key"") and @HeaderProperty(""key"").

If neither annotation is present, then the parameter will typically match the Message payload. However, if a Map or Properties object is expected, and the paylaod is not itself assignable to that type, then the MessageHeader attributes will be passed in the case of a Map-typed parameter, or the MessageHeader properties will be passed in the case of a Properties-typed parameter.
",,,,,,,,,,,,,,,,,,
@Splitter does not need a channel= attribute,INT-189,21615,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,11/Apr/08 3:13 AM,11/Apr/08 6:14 AM,10/May/19 2:37 AM,11/Apr/08 6:14 AM,1.0 M3,,,,,,1.0 M4,,,Adapters,,,,,0,,@Splitter does not need a channel= attribute - there is always an outpit channel available from the surrounding @MessageEndpoint.,,;11/Apr/08 6:12 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,349488000,,,,,2008-04-11 03:16:18.343,10963,false,mark.fisher(mark.fisher),,,,0|i0239r:,12239,12104,,,,,11/Apr/08 3:16 AM;mark.fisher;I agree. The channel should be available from the endpoint.,"11/Apr/08 6:14 AM;mark.fisher;The @Splitter no longer has a ""channel"" attribute. Instead it uses the @MessageEndpoint's ""defaultOutput"" attribute.",,,,,,,,,,,,,,,,,,,,,
PollableSourceAdapter should work with SynchronousChannel,INT-187,21607,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,10/Apr/08 9:04 PM,15/May/08 6:49 AM,10/May/19 2:37 AM,15/May/08 6:49 AM,1.0 M3,,,,,,1.0 M4,,,Core,,,,,0,,"PollableSourceAdapter doesn't  work with SynchronousChannel because of this (line 124):

			if (this.getChannel() instanceof SynchronousChannel) {
				if (logger.isInfoEnabled()) {
					logger.info(""source adapter configured on synchronous channel, not scheduling"");
				}
				this.running = true;
				return;
			}

I think I can see the rational (in initialize()):

		if (this.getChannel() instanceof SynchronousChannel) {
			((SynchronousChannel) this.getChannel()).setSource(this.source);
		}

But that seems to be mixing metaphors.  If I want a PollingSource, I want it to be scheduled (notwithstanding other outstanding problems: INT-183).  If I didn't want the schedule I could just add the Source directly to the channel myself?

Aren't there two use cases here

1) User calls channel.receive() and System polls Source directly to return the next message

2) System polls Source periodically and calls channel.send() if any messages are waiting

Only 2) belongs in the PollingSourceAdapter, as I would understand it?
",,;15/May/08 6:47 AM;mark.fisher;14400,,,,,,,,,,,,,,10800,0,14400,133%,10800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,346550400,,,,,2008-04-10 23:05:17.002,26369,false,mark.fisher(mark.fisher),,,,0|i023a7:,12241,12106,,,,,"10/Apr/08 11:05 PM;mark.fisher;Dave,

This is *exactly* the goal of the refactoring (work in progress) to separate the ""PollableSource"" from the ""PollingSourceAdapter"".

The goal of this refactoring: the former is something that CAN be invoked directly whereas the latter is scheduled (managed by the bus).

This will be consistent with the way a MessageChannel works - you may call channel.receive() programmatically but other processes are also able to be subscribed with a scheduling dispatcher.

-Mark
","10/Apr/08 11:42 PM;mark.fisher;The PollingSourceAdapter should be scheduling now, but the longer term solution will properly separate the ""source"" object from the ""source adapter"" object.","15/May/08 6:49 AM;mark.fisher;The Source and SourceEndpoint have been separated. The behavior that was previously in PollingSourceAdapter is now in the PollingSourceEndpoint implementation. It can be scheduled to poll its Source, or alternatively, one may choose to invoke the Source's receive() method programmatically.",,,,,,,,,,,,,,,,,,,,
PollingSourceAdapter cannot be used transactionally,INT-183,21536,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,07/Apr/08 8:59 PM,05/Jul/08 8:09 AM,10/May/19 2:37 AM,05/Jul/08 8:09 AM,1.0 M3,,,,,,1.0 M5,,,Core,,,,,0,,"PollingSourceAdapter cannot be used transactionally.  The SynchronousChannel opens up the possibility of executing a whole message flow in a single transaction, but PollingSourceAdapter prevents us from doing that right now.  The method processMessages() needs to be transactional, but it is only called internally from a PollingSourceAdapterTask, so there is no way to make it transactional (without AspectJ).  N.B. the processMessages() method is also not part of any interface so making it transactional with Spring AOP (even if the call was not internal) would involve an unnecessary CGLib dependency.",,;05/Jul/08 7:32 AM;mark.fisher;144000,,,,,,,,,,,,,,144000,0,144000,100%,144000,0,144000,,,,,,,,,,,,,,,,,,,,,,,,,,342489600,,,,,2008-04-17 23:20:56.521,26373,false,mark.fisher(mark.fisher),,,,0|i023an:,12243,12108,,,,,17/Apr/08 11:11 PM;david_syer;The refactoring to make PollingSourceAdapter a Runnable made a big difference - so it can be used as a proxy target now.  It remains to provide a mechanism for clients to declaratively add AOP interceptors (TX and others) to adapters when they are created in configuration.,"17/Apr/08 11:20 PM;mark.fisher;One of the nicer by-products of the refactoring is that source-adapters and channel-dispatchers are now almost identical: poll from a source, dispatch to target(s). In fact, the next stage of refactoring might be to provide a common interface (PollingDispatcher) and to be able to make this transactional. This would be relatively easy using a TransactionTemplate, but we should avoid the dependency on spring-tx if possible. Therefore, what we will most likely do is have the MessageBus wrap its dispatchers (and source-adapters) in transactional proxies. This also provides a central place to define default transaction attributes.","22/May/08 6:04 AM;mark.fisher;In M4, the SourceEndpoint now assumes the responsibilities of PollingSourceAdapter, and the Source is also accessible directly when necessary (just call the receive() method).

The SourceEndpoint currently provides methods for setting any Advice implementation (e.g. TransactionInterceptor).

These have not yet been exposed for declarative configuration, since the general approach for interceptors across all endpoint types (source, target, and handler) will be revisited as one of the major developments planned in M5.
","02/Jul/08 1:33 AM;mark.fisher;The interceptor support is now available for source-endpoint as well as handler/target-endpoints. This includes the option of specifying either a ""ref"" or inner-bean for an implementation of EndpointInterceptor. It actually supports *any* Advice instance.

There is also namespace-support for 2 interceptors: <concurrency-interceptor/> and <transaction-interceptor/>

Here is an example of the configuration:

    <handler-endpoint input-channel=""input""
                                      handler=""testBean""
                                      method=""testMethod""
                                      output-channel=""output"">
        <schedule period=""3000""/>
        <interceptors>
            <ref bean=""someInterceptorRef""/>
            <transaction-interceptor transaction-manager=""txManager"" propagation=""REQUIRES_NEW""/>
            <bean class=""foo.SomeAdviceImpl""/>
        </interceptors>
    </handler-endpoint>

For specific examples with transactions, see: TransactionInterceptorTests.java and the associated configuration files.",,,,,,,,,,,,,,,,,,,
If a handler cannot be found when processing @MessageEndpoint maybe it should be an error?,INT-177,21520,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,07/Apr/08 4:21 AM,12/Apr/08 3:03 AM,10/May/19 2:37 AM,12/Apr/08 3:03 AM,1.0 M3,,,,,,1.0 M4,,,Core,,,,,0,,"If a handler cannot be found when processing @MessageEndpoint maybe it should be an error?

The bean post processor does this:

		if (endpoint.getHandler() == null) {
			endpoint.setHandler(new MessageHandler() {
				public Message<?> handle(Message<?> message) {
					return message;
				}
			});
		}

which only causes confusion if I am expecting the message to be handled and (e.g.) forgot to annotate the handler method.",,;12/Apr/08 3:01 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,349401600,,,,,2008-04-11 06:54:01.16,26378,false,mark.fisher(mark.fisher),,,,0|i023br:,12248,12113,,,,,"11/Apr/08 6:54 AM;mark.fisher;The original idea (probably not a good one in hindsight) was to allow for handler-less endpoints. I tend to agree now though that it does cause confusion. This will be addressed as part of the endpoint refactoring.
","11/Apr/08 7:04 AM;mark.fisher;By the way, we will likely provide an implementation of Messaging Bridge: http://eaipatterns.com/MessagingBridge.html

This would just require a source-adapter connected to a channel and a target-adapter on the other side (typically a SynchronousChannel). This would allow the use of ChannelInterceptors, etc. - but it would also obviate any need for the handler-less endpoint.

-Mark
","12/Apr/08 3:03 AM;mark.fisher;DefaultMessageEndpoint now fails if no handler method is available, and the MessageEndpointAnnotationPostProcesor will throw a ConfigurationException if no handler-methods (@Handler, @Router, @Splitter, etc) are available.
",,,,,,,,,,,,,,,,,,,,
"Add support for before, after, and after-throwing advice types in MessagePublishingInterceptor",INT-175,21514,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Apr/08 1:29 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,18/Aug/08 2:55 AM,,,,,,,1.0 M6,,,Core,,,,,1,,"Currently, the return value is published as a Message only after returning successfully with a non-null value.

This should also include the corresponding annotation support with an attribute of the @Publisher annotation.
",,;18/Aug/08 2:52 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,338342400,,,,,,26380,false,mark.fisher(mark.fisher),,,,0|i052pj:,29645,25472,,,,,"05/Jul/08 8:04 AM;mark.fisher;I think we also need to reconsider the name of this annotation. In fact, we might want to consider how this relates to a gateway. To some degree, it is similar to the GatewayProxyFactoryBean except that it applies to an actual concrete method invocation.","18/Aug/08 2:55 AM;mark.fisher;Added support for publishing arguments, exception, or return value from the MessagePublishingInterceptor and the @Publisher-aware version.

Here are a couple examples from PublisherAnnotationAdvisorTests:

    @Publisher(channel=""testChannel"", payloadType=MessagePublishingInterceptor.PayloadType.ARGUMENTS)
    public void publishArguments(String s, Integer n) {
    }

    @Publisher(channel=""testChannel"", payloadType=MessagePublishingInterceptor.PayloadType.EXCEPTION)
    public void publishException() {
        throw new RuntimeException(""test failure"");
    }

    @Publisher(channel=""testChannel"", payloadType=MessagePublishingInterceptor.PayloadType.RETURN_VALUE)
    public Integer publishReturnValue() {
        return 123;
    }
",,,,,,,,,,,,,,,,,,,,,
Enable registration of custom type converters,INT-174,21513,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,mark.fisher,mark.fisher,mark.fisher,07/Apr/08 1:25 AM,13/Sep/10 5:59 PM,10/May/19 2:37 AM,11/Mar/10 11:52 AM,,,,,,,2.0 M3,,,Core,,,,,3,,"Currently, Spring's default type conversion applies to any POJO method registered as a MessageHandler (via annotations or XML). For example, conversion occurs automatically when passing a Message with a String payload of ""12345"" to a handler with:  someMethod(int num)

Additional ""default"" converters should be added to the Spring Integration core for common transformation requirements, and it should be possible to register additional custom type converters. These converters will enable a majority of type-level Message Transformation to occur automatically without the need for explicit implementations of MessageTransformer.
",,;11/Mar/10 11:52 AM;mark.fisher;57600,,,,,,,,,,,,,,21600,0,57600,266%,21600,0,57600,,,,,,,,,,,,INT-912,,,,,,,,,,,,,,295833600,,,,,,26381,false,mark.fisher(mark.fisher),,,,0|i051wv:,29516,25356,,,,,18/Aug/08 3:06 AM;mark.fisher;Deferring this since it is related to some ongoing discussion regarding access to application-wide context.,"29/Sep/09 1:39 AM;mark.fisher;Moving to 2.0-M1 for now with the goal of creating some basic support for using the new conversion functionality of Spring 3. If it turns out to be a bigger task, we'll move it back to M2.",01/Oct/09 2:07 PM;mark.fisher;We'll add the converter support in M2. The EL support for message mapping has required a lot of refactoring in the same general code. I want to make sure we focus on that for M1. Adding the converters should be relatively simple (since the EL context supports converters already) after that work is completed.,"11/Dec/09 12:17 AM;mark.fisher;A ""conversionService"" bean (of type ConversionService) will now be picked up and used for payload-type-conversion as necessary for any MessageChannels created with a ""datatype"" attribute in the <channel/> element (see INT-912).

There are 2 other places where custom type-converters should apply (#1 for sure, #2 is questionable):
 1. method-invoking adapters (POJO invocation for Transformer, Router, etc.)
 2. a general payload-type converting Transformer implementation

For #2, we might consider something like the following:
{code}
 <payload-type-transformer input-channel=""in""
                           output-channel=""out""
                           target-type=""java.lang.String""
                           conversion-service=""someConversionService""/>
{code}

The ""conversion-service"" attribute would be optional, but if not provided the transformer would require resolution of a ""conversionService"" bean within the context.

The reason that #2 may or may not be justified is that the <channel/> with ""datatype"" and the ConversionService-aware method-invoking adapters (where the ""target-type"" is determined by the targeted method parameter) handle most cases already. Nevertheless the transformer might still be useful since it allows for a more explicit, proactive declaration of intention.

Thoughts?
","23/Dec/09 9:43 AM;mark.fisher;We need to decide how to pass the ConversionService to MethodInvokingMessageProcessor (since it's created at a pretty low-level and not current instantiated as a bean itself).

Also we need to decide on the bean name and potential fallback rules, e.g.
1) ""integrationConversionService"" bean
2) ""conversionService"" bean
3) ConversionServiceFactory.defaultConversionService()

Perhaps it does not make sense to consider option #2 at all, since that would be the ConversionService instance used for ""bean-configuration"", and any user-defined Converters provided there might not be relevant for Spring Integration scenarios.",,,,,,,,,,,,,,,,,,
Support auto-create-channels with SynchronousChannel,INT-173,21512,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mbogoevici,david_syer,david_syer,07/Apr/08 1:04 AM,16/May/08 3:43 PM,10/May/19 2:37 AM,16/May/08 3:42 PM,1.0 M3,,,,,,1.0 M4,,,Core,,,,,0,,Support auto-create-channels with SynchronousChannel.  The MessageBus always creates a SimpleChannel if auto-create-channels=true.  It should be possible to specify somehow that I prefer it to create a SynchronousChannel.,,;16/May/08 3:43 PM;mbogoevici;57600,,,,,,,,,,,,,,10800,0,57600,533%,10800,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,346464000,,,,,2008-04-07 01:15:23.381,12701,false,mbogoevici(mbogoevici),,,,0|i023c7:,12250,12115,,,,,"07/Apr/08 1:15 AM;mark.fisher;I think the best way to handle this would be to provide a ChannelFactory strategy on the MessageBus. The default strategy could potentially rely upon naming conventions (with a constant defined as a prefix - like ""synchronous."").

As a strategy interface, it would be possible to provide any custom logic necessary for auto-creation including the ability to add other MessageChannel implementations.
","11/Apr/08 7:20 AM;mark.fisher;With a ChannelFactory strategy interface, it will be possible to provide a direct reference to any implementation. The DefaultChannelFactory may accept a single boolean value indicating whether the default channel should be ""SynchronousChannel"" or what is currently called ""SimpleChannel"".

Then the <message-bus/> element could accept a value indicating which type to use as a default (perhaps we need an enum - PriorityChannel would be another option).","15/May/08 7:19 AM;mark.fisher;Marius, can you please add a comment to briefly explain the channel factory implementations and then mark this issue as ""resolved"" for M4?

Thanks,
Mark","16/May/08 3:42 PM;mbogoevici;Resolved as follows:

- a ChannelFactory interface has been created, with several implementations: QueueChannelFactory, SynchronousChannelFactory, RendezvousChannelFactory and PriorityChannelFactory

- such a factory can be injected in the MessageBus via the appropriate setter or through the 'channel-factory' attribute of the <message-bus/> element

- auto-created channels and channels defined by the <channel/> element will be created by the message bus configured channel factory.",,,,,,,,,,,,,,,,,,,
Copy latest version of XSDs to http://www.springframework.org/schema/integration,INT-172,21511,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Apr/08 12:53 AM,07/Apr/08 9:08 AM,10/May/19 2:37 AM,07/Apr/08 9:08 AM,,,,,,,1.0 M3,,,Adapters,Core,,,,0,,,,;07/Apr/08 9:06 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,349833600,,,,,,26382,false,mark.fisher(mark.fisher),,,,0|i01xd3:,11282,11258,,,,,"07/Apr/08 9:08 AM;mark.fisher;Schemas are up-to-date for M3 here: http://www.springframework.org/schema/integration/
",,,,,,,,,,,,,,,,,,,,,,
Add SynchronousChannel,INT-170,21470,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Apr/08 2:52 AM,04/Apr/08 9:18 AM,10/May/19 2:37 AM,04/Apr/08 9:18 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"The SynchronousChannel should enable sending directly to subscribed handlers on the sender's thread.

It should also enable configuration of a PollableSource for synchronous message reception (the source is polled on the receiver's thread). If no source is provided, the receive() method will always return null.

Note that this channel implementation should be treated as a ""preview feature"" since it is practically guaranteed to change along with considerable refactoring at the Source/Target, MessageChannel, and MessageDispatcher level. This refactoring will begin immediately after M3.

In M4, when the synchronous channel implementation solidifies, we will provide full integration for this including namespace support.

The key benefit of this approach is that a sender and/or receiver thread may interact with this channel while participating in a transaction.
",,;04/Apr/08 9:17 AM;mark.fisher;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,350092800,,,,,,26384,false,mark.fisher(mark.fisher),,,,0|i01xdj:,11284,11260,,,,,04/Apr/08 9:18 AM;mark.fisher;The initial implementation (SynchronousChannel) is in place for M3. This will likely change with the upcoming M4 refactoring.,,,,,,,,,,,,,,,,,,,,,,
Provide a root-cause ErrorMessage router,INT-169,21454,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,03/Apr/08 2:58 AM,20/May/08 2:19 AM,10/May/19 2:37 AM,20/May/08 2:19 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"This router should be similar to PayloadTypeRouter except that it will be specifically focused on handling ErrorMessages, and it should determine the mapping based upon the root-cause of the exception.

This issue was initially discussed in the following forum post: http://forum.springframework.org/showthread.php?t=52032",,;20/May/08 2:11 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,346204800,,,,,,26385,false,mark.fisher(mark.fisher),,,,0|i059gf:,30738,27783,,,,,"20/May/08 2:19 AM;mark.fisher;The RootCauseErrorMessageRouter will traverse the hierarchy of causes and ultimately return the result of the most specific channel-mapping available. In other words, if the most specific cause does not exist in the channelMappings, it will fallback to the next most specific cause and so on. Eventually it would fallback to the class of the exception payload itself, and if that is not even mapped, then it will send the Message to its 'defaultChannel' if one has been configured.

If all fallbacks fail, then the router will log a WARN-level message unless its 'resolutionRequired' property is set to TRUE (it is false by default). When 'resolutionRequired' is true, it will throw an Exception itself.
",,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for routers,INT-168,21453,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,03/Apr/08 2:51 AM,20/May/08 4:58 AM,10/May/19 2:37 AM,20/May/08 4:58 AM,,,,,,,1.0 M4,,,Core,,,,,0,,The <router/> element should create an endpoint for delegating to a routing MessageHandler.,,;20/May/08 4:38 AM;mark.fisher;21600,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26386,false,mark.fisher(mark.fisher),,,,0|i02vcn:,16789,15806,,,,,"20/May/08 4:58 AM;mark.fisher;The <router/> element is now available. It requires both a ""ref"" and ""method"" attribute. An instance of RouterMessageHandlerAdapter will be created and delegates to the target object/method.",,,,,,,,,,,,,,,,,,,,,,
"No value ""Bundle-Name"" in MANIFEST.MF",INT-165,21424,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,radkiewicz,radkiewicz,02/Apr/08 2:17 AM,02/Apr/08 3:20 AM,10/May/19 2:37 AM,02/Apr/08 3:20 AM,1.0 M2,,,,,,1.0 M3,,,,,,,,0,,"The MANIFEST.MF doesn't include a value ""Bundle-Name"", so some few tools, which use this value don't work. (e.g. Maven-Eclipse-Plugin)
According to the OSGi-Specification the Bundle-Name is optional, but it would be nice to be set.",,;02/Apr/08 3:14 AM;mark.fisher;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,350265600,,,,,2008-04-02 03:20:02.261,26389,false,mark.fisher(mark.fisher),,,,0|i01xdr:,11285,11261,,,,,"02/Apr/08 3:20 AM;mark.fisher;The 'spring-integration-core' and 'spring-integration-adapters' projects now each include a ""Bundle-Name"" in MANIFEST.MF.

Note that the other projects (ws, test, and samples) will have a MANIFEST.MF for the M3 release: INT-166

-Mark
",,,,,,,,,,,,,,,,,,,,,,
NullPointerException in MessageBus registerWithDispatcher method,INT-164,21410,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,java2enterprise,java2enterprise,01/Apr/08 6:07 PM,06/Apr/08 5:05 PM,10/May/19 2:37 AM,02/Apr/08 11:40 PM,1.0 M2,,,,,,1.0 M3,,,Core,,,,,0,,"The registerWithDispatcher method in MessageBus like this :

	private void registerWithDispatcher(MessageChannel channel, MessageHandler handler, Schedule schedule) {
		SchedulingMessageDispatcher dispatcher = dispatchers.get(channel);
		if (dispatcher == null) {
			if (logger.isWarnEnabled()) {
				logger.warn(""no dispatcher available for channel '"" + channel.getName() + ""', be sure to register the channel"");
			}
		}
		dispatcher.addHandler(handler, schedule);
		if (this.isRunning() && !dispatcher.isRunning()) {
			dispatcher.start();
		}
	}

if dispatcher is null,  the sentence  'dispatcher.addHandler(handler, schedule)'  will throw NullPointerException",,;02/Apr/08 12:33 AM;mark.fisher;300,,,,,,,,,,,,,,300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,349920000,,,,,2008-04-02 00:38:52.143,26390,true,java2enterprise(java2enterprise),,,,0|i01xdz:,11286,11262,,,,,"02/Apr/08 12:38 AM;mark.fisher;This is fixed and committed.

Note that the only path where that private method is currently being called is from 'activateEndpoint' - so the channel and dispatcher registration are always occurring prior to the call. Therefore, the NPE should not have been possible (did you actually see a NPE?). However, the code is now less fragile for the future - thanks for noticing.

Thanks,
Mark
","02/Apr/08 4:42 PM;java2enterprise;Yes NPE will happen when I call setErrorChannel method and start message bus 

	public void setErrorChannel(MessageChannel errorChannel) {
		this.channelRegistry.registerChannel(ERROR_CHANNEL_NAME, errorChannel);
	}

the standard registerChannel method like this 

	public void registerChannel(String name, MessageChannel channel) {
		if (!this.initialized) {
			this.initialize();
		}
		channel.setName(name);
		DefaultMessageDispatcher dispatcher = new DefaultMessageDispatcher(channel, this.taskScheduler);
		this.dispatchers.put(channel, dispatcher);
		this.channelRegistry.registerChannel(name, channel);
		if (logger.isInfoEnabled()) {
			logger.info(""registered channel '"" + name + ""'"");
		}
	}

You can find  error channel  hasn't  been put into the  dispatchers registry map, and I'm not sure whether it is an another bug ?","02/Apr/08 11:19 PM;mark.fisher;Thank you for catching this! I did not notice that the errorChannel registration was bypassing the 'registerChannel' method on the bus. I have removed any notion of 'error channel' from the DefaultChannelRegistry class now to avoid this type of confusion (and will remove DefaultChannelRegistry immediately after M3 - it really is just a map now).

I have added a test case to reproduce this and am currently resolving the issue. These changes should be committed shortly.

Thanks again,
Mark
","02/Apr/08 11:40 PM;mark.fisher;The issue should now be fixed. The MessageBus 'setErrorChannel' method now properly registers the error channel - including the creation of a dispatcher.
","06/Apr/08 5:05 PM;java2enterprise;Yes I got it from svn, thank you Mark",,,,,,,,,,,,,,,,,,
Provide Spring-WS source adapters,INT-162,21385,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Mar/08 4:29 AM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,11/Mar/09 8:54 AM,,,,,,,1.0.2,,,Adapters,,,,,6,,"For handling requests, a Spring-WS endpoint will pass the resulting object to a MessageChannel. Two versions should be provided (mirroring the WS target adapters): MarshallingWebServiceSourceAdapter and SimpleWebServiceSourceAdapter.",,;20/Feb/09 9:02 AM;mark.fisher;86400,;11/Mar/09 8:52 AM;mark.fisher;86400,,,,,,,,,,,,,115200,0,172800,150%,115200,0,172800,,,,,,,,,,,,,,,10/Mar/09 11:42 PM;iwein;mylyn-context.zip;https://jira.spring.io/secure/attachment/15195/mylyn-context.zip,,,,,,,,,,,320630400,,,,,2009-03-10 23:42:04.626,26392,false,mark.fisher(mark.fisher),,,,0|i052cn:,29587,25414,,,,,"21/May/08 8:34 AM;mark.fisher;This work has been started. The initial version should be available soon after the M4 release.
","12/Jan/09 3:51 AM;mark.fisher;We will be prototyping this feature in the next two weeks, and if possible, we will include it in version 1.0.2 instead of waiting for 1.1 (version 1.0.2 will most likely be released some time between the end of January and the middle of February).
","20/Feb/09 9:02 AM;mark.fisher;Initial commit for MarshallingWebServiceInboundGateway:
https://fisheye.springframework.org/changelog/spring-integration?cs=1953

Initial commit for SimpleWebServiceInboundGateway:
https://fisheye.springframework.org/changelog/spring-integration?cs=1954

There is still work to be done on the implementation, but please provide feedback on the direction these are taking.

Also tests and namespace support are still in progress.
","26/Feb/09 9:54 AM;mark.fisher;I have added configuration excerpts in the forum post here:
http://forum.springframework.org/showthread.php?p=228826

The instructions there include a link to the nightly snapshot that contains the current implementation of these gateways.

If anyone watching this issue has a chance to try these out, please do provide feedback so that we can take suggestions into account as we are quickly approaching the 1.0.2 release.

Regards,
Mark
","10/Mar/09 11:42 PM;iwein;added tests for SimpleWSIGateway. I don't see the need for unit tests for the marshalling variant right now, since that is a trivial wrapper. That will be covered in integration tests of course.","11/Mar/09 8:54 AM;mark.fisher;This gateway is available in the 'org.springframework.integration.ws' module.

Created a separate issue for namespace support: INT-597
",,,,,,,,,,,,,,,,,
JMS source and target adapters should use 'connectionFactory' as a default name to reference,INT-161,21382,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Mar/08 2:33 AM,31/Mar/08 4:23 AM,10/May/19 2:37 AM,31/Mar/08 4:23 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"This is consistent with the <jms:listener-container/> element in the core.
",,;31/Mar/08 4:15 AM;mark.fisher;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,350438400,,,,,,26393,false,mark.fisher(mark.fisher),,,,0|i01xef:,11288,11264,,,,,"31/Mar/08 4:23 AM;mark.fisher;The default bean name is now ""connectionFactory"".",,,,,,,,,,,,,,,,,,,,,,
Annotation BeanPostProcessors do not handle Proxys correctly,INT-160,21379,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,30/Mar/08 11:28 PM,03/Apr/08 7:32 AM,10/May/19 2:37 AM,03/Apr/08 7:32 AM,1.0 M2,,,,,,1.0 M3,,,Core,,,,,0,,"Annotation BeanPostProcessors do not handle Proxys correctly.  They use bean.getClass() to search for annotations (on the class and its methods), so a proxied MessageEndpoint will pass through without being registered with the MessageBus.  Using ApplicationContext.getType(beanName) would work, but it should be protected with a check for the existence of the bean with the given name (and maybe fall back on bean.getClass() if that fails).

They should probably also use AnnotationUtils.findAnnotation(type, <annotation type>.class) rather than type.getAnnotation(), as do other Spring annotation-detecting helpers.",,;03/Apr/08 7:32 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,350179200,,,,,2008-04-03 07:32:24.847,26394,false,mark.fisher(mark.fisher),,,,0|i01xen:,11289,11265,,,,,03/Apr/08 7:32 AM;mark.fisher;MessageEndpointAnnotationPostProcessor now handles proxies and also detects inherited @MessageEndpoint annotations.,,,,,,,,,,,,,,,,,,,,,,
namespace doesn't support both selector and concurrency under endpoint,INT-159,21332,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,27/Mar/08 12:30 AM,21/May/08 3:31 AM,10/May/19 2:37 AM,21/May/08 3:31 AM,,,,,,,1.0 M4,,,Core,,,,,0,,"It appears that selectors and concurrency are mutually exclusive in certain cases.

For example using:
	<endpoint input-channel=""drinks"" handler-ref=""hotHandlerChain1"">
		<selector ref=""hotStuffSelector"" />
		<concurrency core=""1"" max=""1"" />
	</endpoint>
Assuming that hotHandlerChain1 is a valid handler and hotStuffSelector is a valid selector this gives the following exception (stacktrace reduced):
>>
Exception in thread ""main"" org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 33 in XML document from class path resource [cafeDemo.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'concurrency'. One of '{""http://www.springframework.org/schema/integration"":selector, ""http://www.springframework.org/schema/integration"":handler}' is expected.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	...
Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'concurrency'. One of '{""http://www.springframework.org/schema/integration"":selector, ""http://www.springframework.org/schema/integration"":handler}' is expected.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
<<

But when the rejection limit is reached the hint is to increase concurrency in the handler. This is contradictory, so it leads to believe it is unintentional behavior.

Suggested fix is to support both concurrency and selector together.",,;21/May/08 3:26 AM;mark.fisher;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,346032000,,,,,2008-03-27 05:48:35.249,26395,false,mark.fisher(mark.fisher),,,,0|i02vef:,16797,15814,,,,,"27/Mar/08 5:48 AM;mark.fisher;Iwein,

As a short term ""solution"", can you try switching the element order? From a quick look at the XSD, it appears that the 'concurrency' element must precede the 'selector' element. That should work for now, but of course the order requirement doesn't really make sense, so I am leaving the issue open until resolved properly.

-Mark
",27/Mar/08 7:40 PM;iwein;Switching the order works as expected.,"02/Apr/08 9:46 AM;mark.fisher;Moving to M4 for the following reasons:

1) Re-ordering the elements so they conform to the XSD works fine.
2) XSD does not support a mix of 0..1 cardinality (for 'schedule' and 'concurrency') and 0..n cardinality (for 'handler' and 'selector') within an ""xsd:all"" element.

For M4, we may remove the handler element altogether - requiring use of the 'handler-ref' attribute instead. Since endpoints will likely change to accommodate an ""interceptor-chain"" with a single MessageHandler, this seems to make sense. Selector may also be better as a ref attribute... with an option of adding a SelectorChain (similar to the current HandlerChain). If those changes are made, then the order of the ""schedule"" and ""concurrency"" policy elements would not matter.
","17/Apr/08 7:32 PM;iwein;Ah what fun is xsd http://www.w3.org/TR/xmlschema-1/#declare-contentModel. It is even worse, inside the <xsd:all/> you cannot specify cardinality other than 1:1 or 0:1 AND you cannot nest group, sequence nor choice in there.

I wrote:
	<xsd:group name=""concurrency-selector-handler-schedule"">
		<xsd:all>
			<xsd:element ref=""schedule"" minOccurs=""0"" maxOccurs=""1"" />
			<xsd:element name=""concurrency"" type=""concurrencyType""
				minOccurs=""0"" maxOccurs=""1"" />
			<xsd:element ref=""selector"" minOccurs=""0"" maxOccurs=""1"" />
			<xsd:element ref=""handler"" minOccurs=""0"" maxOccurs=""1"" />
		</xsd:all>
	</xsd:group>

And that passes all the testcases. So why do you need cardinality 0:n on handler and selector (and if you do, why is there not test for it ;)). If you really require that cardinality you need something horrible like:
		<xsd:choice>
			<xsd:sequence>
				<xsd:element ref=""schedule"" minOccurs=""0"" maxOccurs=""1"" />
				<xsd:element name=""concurrency"" type=""concurrencyType""
					minOccurs=""0"" maxOccurs=""1"" />
				<xsd:choice minOccurs=""0"" maxOccurs=""unbounded"">
					<xsd:element ref=""selector"" />
					<xsd:element ref=""handler"" />
				</xsd:choice>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element ref=""schedule"" minOccurs=""0"" maxOccurs=""1"" />
				<xsd:choice minOccurs=""0"" maxOccurs=""unbounded"">
					<xsd:element ref=""selector"" />
					<xsd:element ref=""handler"" />
				</xsd:choice>
				<xsd:element name=""concurrency"" type=""concurrencyType""
					minOccurs=""0"" maxOccurs=""1"" />
			</xsd:sequence>
...
</xsd:choice>

My way out would be to use either 0:1 cardinality for all elements, or if you really need 0:n to use
	<xsd:choice minOccurs=""0"" maxOccurs=""unbounded"">
			<xsd:element ref=""schedule"" />
			<xsd:element name=""concurrency"" type=""concurrenc />
			<xsd:element ref=""selector"" />
			<xsd:element ref=""handler"" />
		</xsd:choice>

And overwrite the concurrency and schedule if multiple elements are provided.","18/May/08 11:15 PM;iwein;since you already moved the handler to an attribute the number of options is reduced, so it would not be too hard to enumerate them. However I think it would be better to either move the selector to an attribute as well or use a composite selector (like handler chain) instead of putting multiple selectors directly in the endpoint.

So either:
<handler-endpoint>
<selector ref=""compositySelector""/>
</handler-endpoint>
Or:
<handler-endoint selector-ref=""compositeSelector""/>

If you do require multiple selectors directly within the endpoint I would go for encapsulating the collection in a separate element:
<handler-endpoint>
<selectors>
<selector/>
<selector/>
</selectors>
</handler-endpoint>
Otherwise the xsd becomes just too ugly.","21/May/08 3:31 AM;mark.fisher;The <concurrency/> and <schedule/> elements may now appear in any order. Each has a cardinality of 0..1.

The <selector/> element has been replaced with a ""selector"" attribute that accepts a bean reference to any implementation of MessageSelector.

A MessageSelectorChain is now available for cases where more than one selector is needed. This also means that the TargetEndpoint is simpler now with a 'setMessageSelector' method instead of maintaining a list of MessageSelectors and providing the 'addMessageSelector' method.

The following issue has been created (for M5) to add support for a <selector-chain/> similar to <handler-chain/>:
http://jira.springframework.org/browse/INT-227
",,,,,,,,,,,,,,,,,
SourceAdapter to take a custom PollableSource implementation by ref,INT-157,21312,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,markn,markn,25/Mar/08 9:20 PM,24/Apr/08 7:33 AM,10/May/19 2:37 AM,24/Apr/08 7:33 AM,1.0 M2,,,,,,1.0 M4,,,Core,,,,,0,,"Allow a custom implementation of the PollableSource strategy interface to be configured using the source-adapter ref attribute.

See thread for more details http://forum.springframework.org/showthread.php?t=51425",,;24/Apr/08 7:33 AM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,348364800,,,,,2008-04-24 07:33:06.465,26397,false,mark.fisher(mark.fisher),,,,0|i022z3:,12191,12060,,,,,"24/Apr/08 7:33 AM;mark.fisher;<source-adapter/> is now literally for creating adapters (i.e. MethodInvokingSource).

However, the new <source-endpoint/> element now supports any source. For example (this was also posted in the forum thread linked above):

<source-endpoint source=""mySource"" channel=""myChannel"">
    <schedule period=""60000""/>
</source-endpoint>

<beans:bean id=""mySource"" class=""example.MyPollableSource""/>",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for httpinvoker source and target,INT-156,21235,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Mar/08 2:02 AM,20/Mar/08 4:50 AM,10/May/19 2:37 AM,20/Mar/08 4:50 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"The elements should be something like:
  <httpinvoker-source id=""httpInvokerSource"" channel=""inputChannel""/>
  <httpinvoker-target id=""httpInvokerTarget"" channel=""outputChannel"" url=""http://localhost:8080/foo/anotherSource""/>

Note that the source should also support a ""name"" attribute as an alternative to ""id"" since the adapter may be used in conjunction with bean name handler mapping.
",,;20/Mar/08 4:46 AM;mark.fisher;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,351388800,,,,,,26398,false,mark.fisher(mark.fisher),,,,0|i01xev:,11290,11266,,,,,"20/Mar/08 4:50 AM;mark.fisher;Added HttpInvokerSourceAdapterParser and HttpInvokerTargetAdapterParser. The following XML is now supported:
    <httpinvoker-source id=""source"" channel=""inputChannel""/>
    <httpinvoker-target id=""target"" channel=""outputChannel"" url=""http://localhost:8080/test""/>
",,,,,,,,,,,,,,,,,,,,,,
Add an FTP Target adapter,INT-154,21188,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,mbogoevici,mbogoevici,18/Mar/08 11:59 AM,13/Sep/10 5:53 PM,10/May/19 2:37 AM,18/Aug/08 1:57 AM,,,,,,,1.0 M6,,,,,,,,3,,Add an Ftp Target adapter,,"added FtpTarget, extracted connection code to QueuedFTPClientPool, added interfaces and tests for the lot;15/Aug/08 7:08 AM;iwein;43200","added FtpTargetParser, xsd still needs an update. The FtpTarget is fully functional as a bean already.;16/Aug/08 4:39 PM;iwein;3600",,,,,,,,,,,,,57600,0,46800,81%,57600,0,46800,,,,,,,,,,,,,,,,,,,,,,,,,,338428800,,,,,2008-08-16 03:36:05.16,26400,false,mark.fisher(mark.fisher),,,,0|i052lb:,29626,25453,,,,,16/Aug/08 3:36 AM;iwein;Missing namespace support,"18/Aug/08 1:57 AM;mark.fisher;I created a separate issue for the namespace support:
http://jira.springframework.org/browse/INT-341
",,,,,,,,,,,,,,,,,,,,,
Add FTP Source Adapter,INT-153,21187,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mbogoevici,mbogoevici,18/Mar/08 11:59 AM,02/Apr/08 1:45 PM,10/May/19 2:37 AM,02/Apr/08 1:42 PM,,,,,,,1.0 M3,,,Adapters,,,,,0,,Add an FTP Source adapter.,,;02/Apr/08 1:45 PM;mbogoevici;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,350265600,,,,,,26401,false,mbogoevici(mbogoevici),,,,0|i01xf3:,11291,11267,,,,,"02/Apr/08 1:42 PM;mbogoevici;Implemented as a polling component, along with namespace support.

<si:ftp-source username=""user"" password=""password"" channel=""channel"" 
period=""10000"" host=""localhost"" port=""21""
  local-working-directory=""${java.io.tmpdir}/spring-integration-samples/ftp"" remote-working-directory=""${java.io.tmpdir}/spring-integration-samples/remote""
  text-based=""true""/>

","02/Apr/08 1:45 PM;mbogoevici;Reformatting sample:

<si:ftp-source username=""user"" password=""password"" 
channel=""channel"" period=""10000"" host=""localhost"" port=""21"" 
local-working-directory=""${java.io.tmpdir}/spring-integration-samples/ftp"" 
remote-working-directory=""${java.io.tmpdir}/spring-integration-samples/remote"" 
text-based=""true""/> 
",,,,,,,,,,,,,,,,,,,,,
Copy attributes from JMS Message header when receiving via JMS source adapter,INT-150,21177,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Mar/08 12:23 AM,19/Mar/08 11:58 AM,10/May/19 2:37 AM,19/Mar/08 11:58 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"The basic header values should be preserved from the JMS Message such that they are available with well known keys in the Spring Integration MessageHeader. This is basically the flip-side of INT-97. The issue was raised in this forum post: http://forum.springframework.org/showthread.php?t=51288
However, the JMSCorrelationId should probably not be mixed with the Spring Integration MessageHeader's correlationId property since the latter is used within  Spring Integration message interactions. Rather, the JMSCorrelationId should be preserved so that it is available for an ultimate JMS-based reply. An initial reaction is that the current keys defined in JmsTargetAdapter (see below) should be moved to a common class such as JmsConstants:

	public static final String JMS_CORRELATION_ID = ""JMSCorrelationID"";
	public static final String JMS_REPLY_TO = ""JMSReplyTo"";
	public static final String JMS_TYPE = ""JMSType"";
",,Mapping attributes from JMS Message to MessageHeader in JmsMessageDrivenSourceAdapter and JmsPollingSourceAdapter - supported by major refactoring of the message conversion/mapping/header-generation strategies.;19/Mar/08 11:50 AM;mark.fisher;14400,,,,,,,,,,,,,,3600,0,14400,400%,3600,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,351475200,,,,,,26403,false,mark.fisher(mark.fisher),,,,0|i01xfj:,11293,11269,,,,,"19/Mar/08 11:58 AM;mark.fisher;JMS attributes are now mapped to the MessageHeader by both JMS source adapters (JmsPollingSourceAdapter and JmsMessageDrivenSourceAdapter).

Provided a new strategy interface (MessageHeaderMapper) and a HeaderMappingMessageConverter that wraps an existing MessageConverter implementation and also delegates to a MessageHeaderMapper. If a mapper is not provided, then DefaultJmsHeaderMapper is used for the JMS source adapters.

Factored out common configuration code from JmsPollingSourceAdapter and JmsTargetAdapter into AbstractJmsTemplateBasedAdapter. The JMS attribute keys are now defined in JmsAttributeKeys.
",,,,,,,,,,,,,,,,,,,,,,
CharacterStreamTargetAdapter should use a Writer not an OutputStream?,INT-148,21143,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,david_syer,david_syer,15/Mar/08 9:56 PM,02/Apr/08 11:24 AM,10/May/19 2:37 AM,02/Apr/08 11:24 AM,1.0 M2,,,,,,1.0 M3,,,Adapters,,,,,0,,CharacterStreamTargetAdapter should use a Writer not an OutputStream?,,;02/Apr/08 11:21 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,350265600,,,,,2008-03-16 02:58:32.868,26405,false,mark.fisher(mark.fisher),,,,0|i01xfr:,11294,11270,,,,,"16/Mar/08 2:58 AM;mark.fisher;Dave,

The adapter does create and use a writer internally. Perhaps we should also provide a constructor that accepts a Writer?

Here are the existing constructors:

	public CharacterStreamTargetAdapter(OutputStream stream) {
		this(stream, -1);
	}

	public CharacterStreamTargetAdapter(OutputStream stream, int bufferSize) {
		if (bufferSize > 0) {
			this.writer = new BufferedWriter(new OutputStreamWriter(stream), bufferSize);
		}
		else {
			this.writer = new BufferedWriter(new OutputStreamWriter(stream));
		}
	}
","16/Mar/08 3:13 AM;david_syer;Well, I would argue that the existing constructor should be replaced.  In don't think you should really provide a constructor for anything that writes Strings (or chars) with an OutputStream - there's no way to choose the charset / encoding.","16/Mar/08 3:24 AM;mark.fisher;Good point. We'll replace the constructor to accept a Writer. When we provide namespace support we might add a ""charset"" attribute in the XML also.
",17/Mar/08 2:00 AM;david_syer;I guess you mean namespace support for the stderr and stdout factory methods?  Otherwise I don't get it - user would have to inject a Writer to create a target adapter?,02/Apr/08 10:40 AM;mark.fisher;CharacterStreamSourceAdapter should use a Reader as well.,"02/Apr/08 11:24 AM;mark.fisher;CharacterStreamTargetAdapter now takes a Writer, and CharaceterStreamSourceAdapter now takes a Reader.

Note that if the Reader/Writer passed to the constructor is not Buffered, it will be wrapped. The 'bufferSize' may be provided as an optional 2nd constructor argument to either adapter.
",,,,,,,,,,,,,,,,,
Provide namespace support for <rmi-source/> and <rmi-target/> elements.,INT-146,20996,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Mar/08 5:32 AM,07/Mar/08 6:41 AM,10/May/19 2:37 AM,07/Mar/08 6:41 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"These elements will be parsed to create RmiSourceAdapter and RmiTargetAdapter respectively.

Examples:
    <rmi-source channel=""testChannel""/>
    <rmi-target local-channel=""localChannel"" remote-channel=""testChannel"" host=""localhost""/>
",,;07/Mar/08 5:32 AM;mark.fisher;5400,;07/Mar/08 6:40 AM;mark.fisher;1800,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,352512000,,,,,,5493,false,mark.fisher(mark.fisher),,,,0|i01xfz:,11295,11271,,,,,07/Mar/08 6:41 AM;mark.fisher;The <rmi-source/> also supports 'send-timeout' and 'receive-timeout' attributes as well as 'expect-reply' (which defaults to 'true').,,,,,,,,,,,,,,,,,,,,,,
Add 'header-generator' attribute to <mail-target/>,INT-145,20989,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Mar/08 11:28 PM,06/Mar/08 11:34 PM,10/May/19 2:37 AM,06/Mar/08 11:34 PM,,,,,,,1.0 M3,,,Adapters,,,,,0,,The value of this optional attribute should be treated as a bean reference. This enables the configuration of a StaticMailHeaderGenerator or a custom implementation of the MailHeaderGenerator strategy interface rather than relying on DefaultMailHeaderGenerator.,,;06/Mar/08 11:32 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,352598400,,,,,,26406,false,mark.fisher(mark.fisher),,,,0|i01xg7:,11296,11272,,,,,06/Mar/08 11:34 PM;mark.fisher;Added the (optional) 'header-generator' attribute for the <mail-target/> element.,,,,,,,,,,,,,,,,,,,,,,
Begin implementation of a testing framework for integration component interactions,INT-144,20968,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,mark.fisher,mark.fisher,06/Mar/08 2:45 AM,13/Sep/10 5:58 PM,10/May/19 2:37 AM,24/Jul/09 5:20 AM,,,,,,,2.0 M1,,,Testing,,,,,6,,"The test framework should enable non-invasive integration testing of various messaging scenarios. The framework will handle asynchronous interactions, synchronization, and threading ""behind the scenes"". It should also enable registration of ""mock"" endpoints and adapters for testing interactions that would be using RMI, email, JMS, etc. in production.
",,"Created the ""spring-integration-test"" project, defined basic layout, and added build.xml, ivy.xml, and eclipse project/classpath files.;06/Mar/08 4:56 AM;mark.fisher;1800",,,,,,,,,,,,,,230400,228600,1800,0%,230400,228600,1800,,,,,,,,,,,,,,,16/Mar/09 9:47 AM;alpe;matcher-patch.txt.zip;https://jira.spring.io/secure/attachment/15220/matcher-patch.txt.zip,24/Jul/09 5:21 AM;iwein;mylyn-context.zip;https://jira.spring.io/secure/attachment/15563/mylyn-context.zip,,,,,,,,,,308966400,,,,,2009-03-16 09:47:02.035,26407,false,mark.fisher(mark.fisher),,,,0|i02lx3:,15260,14499,,,,,16/Mar/09 9:47 AM;alpe;Hamcrest/ Mockito matcher for Message Payload + Header. ,27/Apr/09 4:18 AM;iwein;more up to date version of the patch http://github.com/alpe/spring-integration-sandbox/tree/master,27/Apr/09 4:20 AM;iwein;matcher code will be added to the sandbox first.,24/Jul/09 5:20 AM;iwein;Cleaned up matcher code and checked in project under trunk. I expect more improvements as we start using this in other bundles to simplify tests.,,,,,,,,,,,,,,,,,,,
Add correlationId-based request/reply template,INT-143,20966,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Mar/08 1:34 AM,16/Apr/08 10:09 PM,10/May/19 2:37 AM,30/Mar/08 1:25 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"This should probably be implemented as described in the comments for INT-86:

""...a correlationId-matching client that listens to a shared channel... would probably need to be a handler and selector combination within an endpoint - where the selector knows for which correlationIds it is expecting replies. If more than one such client is listening to the same channel, the correlationId-aware selector would allow for preemptive routing in the dispatching phase.""

Perhaps this can be added to RequestReplyTemplate by means of an alternate constructor that accepts request and reply channels.
",,;30/Mar/08 1:17 AM;mark.fisher;57600,,,,,,,,,,,,,,10800,0,57600,533%,10800,0,57600,,,,,,,,,,,,INT-126,,,,,,,,,,,,,,349056000,,,,,2008-03-18 21:09:35.159,26408,false,david_syer(david_syer),,,,0|i01xgf:,11297,11273,,,,,"18/Mar/08 9:09 PM;david_syer;Is there a way to make this generically available as part of a class of SourceAdapters as well (INT-126 provides some context)?  I can see this pattern forming in AbstractMessageHandlingSourceAdapter, but it doesn't wait for a correlation-based reply on a control channel, just for the reply-to (using a standard RequestReplyTemplate).  Can INT-143 provide a common interface for a RequestReplyOperations for instance, that makes it injectable as a strategy into a SourceAdapter?","30/Mar/08 1:25 AM;mark.fisher;The ResponseCorrelator is itself a MessageHandler so it can be registered within an endpoint in order to listen to a 'reply channel'. It matches the correlationId of received messages to any callers that may be waiting for that correlationId (otherwise holds the message in the provided MessageStore - possibly for a limited time based on the store's capacity).

The getResponse(correlationId, timeout) [or version with no timeout that blocks indefinitely] is called by those waiting for the response messages.

Perhaps the RequestReplyTemplate can expose another constructor that accepts a ResponseCorrelator instead of relying on an anonymous/temporary queue or callback. We might also want to consider ""self-registering"" handlers for cases like this. Essentially, a MessageBusAware interface may be useful for these framework components. Thoughts?
","30/Mar/08 2:05 AM;david_syer;MessageBusAware would be useful (I think I asked for something like that in INT-125).

There are sort of 2 orthogonal concerns here - one the choice between anonymous/correlation, and the other the choice between synchronous and asynchronous reply.  RequestReplyTemplate could be broken up into two implementations of RequestReplyOperations - one for temporary anonymous, and one for a ResponseCorrelator, both of which could be either synch or asynch depending on whether they were invoked with a callback.  

In any case a *Operations interface will make testing easier.","16/Apr/08 7:38 PM;amsmota;Maybe I'm not seeing clear here, but what's the use of a *synchronous* correlation Id operation? If a request waits for a response there's no need of a correlation id. In my opinion only two operations are needed, anonymous sync and correlation assync.

Unless one would consider a kind of a ""anonymous sync"" that on timeout would turn into ""correlation assync"", meaning, 

- send a request
- wait for the reply
- if timed out then return correlationId for later (assync) retrieval

But that is not a 3rd operation, is only the way you put things together.","16/Apr/08 10:09 PM;david_syer;The requester might be waiting for a response, but he knows that it will come in on a shared channel, and doesn't want to get someone else's.  Hence the ""synchronous correlator"" scenario.",,,,,,,,,,,,,,,,,,
Implement DefaultMailHeaderGenerator,INT-142,20939,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Mar/08 7:54 AM,05/Mar/08 7:56 AM,10/May/19 2:37 AM,05/Mar/08 7:56 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"Provide attribute keys as constants in MailTargetAdapter (TO, CC, FROM, etc.). The default header generator should access those header attributes in order to populate MailMessage properties dynamically.",,;05/Mar/08 7:55 AM;mark.fisher;2700,,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,,,,,,,,,,,,,,,352684800,,,,,,26409,false,mark.fisher(mark.fisher),,,,0|i01xgn:,11298,11274,,,,,"05/Mar/08 7:56 AM;mark.fisher;The attribute keys are now defined in MailTargetAdapter, and the DefaultMailHeaderGenerator will retrieve the corresponding attributes from the MessageHeader.",,,,,,,,,,,,,,,,,,,,,,
Provide enum for Message priority,INT-141,20919,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Mar/08 10:51 AM,05/Mar/08 7:11 AM,10/May/19 2:37 AM,05/Mar/08 7:11 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"Currently, the values of a MessageHeader 'priority' property are ints with a low value corresponding to a high priority. This is consistent with array/list indexing or Spring's Ordered interface, but it is not consistent with JMS based values (0-9 low to high). An enum will be more explicit - something like LOWEST, LOW, MEDIUM, HIGH, HIGHEST (possibly with more than 5 values). For anything more complex, developers may simply provide their own Comparator for determining priority of Messages on a PriorityChannel.",,;05/Mar/08 7:10 AM;mark.fisher;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,352684800,,,,,,12468,false,mark.fisher(mark.fisher),,,,0|i01xgv:,11299,11275,,,,,05/Mar/08 7:11 AM;mark.fisher;Added the MessagePriority enum.,,,,,,,,,,,,,,,,,,,,,,
Add @CompletionStrategy  annotation and CompletionStrategyAdapter,INT-140,20891,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Fixed,mbogoevici,mbogoevici,mbogoevici,03/Mar/08 3:38 PM,10/Apr/08 1:02 PM,10/May/19 2:37 AM,10/Apr/08 1:02 PM,1.0 M2,,,,,,1.0 M4,,,,,,,,0,,"A @CompletionStrategy annotation should be available to annotate methods with the pattern:

boolean isComplete(Collection<?> collection), when defined on a class annotated with @MessageEndpoint.

There can be at most one @CompletionStrategy annotated method per class, and the annotation is valid only if another method from the same class is annotated with @Aggregator.",,;10/Apr/08 1:02 PM;mbogoevici;86400,,,,,,,,,,,,,,0,0,86400,"9,223,372,036,854,775,807%",0,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,349574400,,,,,2008-03-16 19:09:35.436,26410,false,mbogoevici(mbogoevici),,,,0|i022zj:,12193,12062,,,,,"16/Mar/08 7:09 PM;david_syer;N.B. we call something very similar ""CompletionPolicy"" in Spring Batch.  Just wondered why you chose *Strategy for this one when there are plenty of *Policy interfaces already?","17/Mar/08 3:22 AM;mbogoevici;In SI, *Policy objects such as DispatcherPolicy or ConcurrencyPolicy are rather meta-data oriented, value objects used for configuring various aspects of the application.
The use of the word *Strategy indicates that this is a more active component, which contains customized behaviour or knowledge about how to behave in a certain case - e.g. the CompletionStrategy contains the algorithm for reasoning whether a given Collection (will be List in a near future) of objects (messages or POJOs) is complete and aggregation-ready.","10/Apr/08 1:02 PM;mbogoevici;Part of it modifies Aggregator back to List<Message<?>> instead of Collection<Message<?>>.
Supports @CompletionStrategy, and adds support for pojo completion strategies via namespace as an inner element to <aggregator>. E.g.:

<aggregator id=""aggregatorWithPojoCompletionStrategy""
		ref=""adderBean"" method=""add"" default-reply-channel=""replyChannel"">
		<completion-strategy ref=""pojoCompletionStrategy""
			method=""checkCompleteness"" />
	</aggregator>
",,,,,,,,,,,,,,,,,,,,
Add 'timeout' attribute to <aggregator/>,INT-139,20890,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Fixed,mbogoevici,mbogoevici,mbogoevici,03/Mar/08 3:32 PM,06/Mar/08 4:20 PM,10/May/19 2:37 AM,06/Mar/08 4:20 PM,1.0 M2,,,,,,1.0 M3,,,,,,,,0,,The 'timeout' attribute is missing from the <aggregator/> element.,,;06/Mar/08 4:20 PM;mbogoevici;3600,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,352598400,,,,,,26411,false,mbogoevici(mbogoevici),,,,0|i01xh3:,11300,11276,,,,,06/Mar/08 4:20 PM;mbogoevici;Fixed,,,,,,,,,,,,,,,,,,,,,,
Add Wire Tap,INT-138,20882,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,03/Mar/08 1:27 AM,03/Mar/08 7:57 AM,10/May/19 2:37 AM,03/Mar/08 7:57 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"The Wire Tap can be implemented as a ChannelInterceptor that additionally publishes Messages to another channel. We should also allow for the (optional) inclusion of MessageSelectors.
",,;03/Mar/08 7:31 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,352857600,,,,,,26412,false,mark.fisher(mark.fisher),,,,0|i01xhb:,11301,11277,,,,,03/Mar/08 7:57 AM;mark.fisher;WireTap has been added.,,,,,,,,,,,,,,,,,,,,,,
"Implement aggregator handler adapter and add ""method"" support for <aggregator/>",INT-137,20815,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mark.fisher,mark.fisher,27/Feb/08 11:30 PM,03/Mar/08 11:06 AM,10/May/19 2:37 AM,03/Mar/08 11:06 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"This will enable arbtirary methods of the form [Object whatever(Collection c)] to be used as an aggregator.

It is also a prerequisite for @Aggregator support on methods that do not accept and/or return Messages (see INT-94).",,;03/Mar/08 11:05 AM;mbogoevici;43200,,,,,,,,,,,,,,21600,0,43200,200%,21600,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,352857600,,,,,2008-03-03 11:06:01.387,26413,false,mbogoevici(mbogoevici),,,,0|i01xhj:,11302,11278,,,,,"03/Mar/08 11:06 AM;mbogoevici;Target methods must conform with a signature pattern as follows: 
ReturnType methodName (Collection<CollectionType> args). 

If CollectionType is Message or any of its descendants (including parametrized types), the aggregator will pass the collection of messages to be aggregated 'as is', leaving to the target method to extract the payloads. If CollectionType is non-Message, the payloads will be extracted and passed to the target collection. 

If the result of the method call is not a Message, it will be wrapped in a GenericMessage.",,,,,,,,,,,,,,,,,,,,,,
ChannelPurger should accept more than one MessageChannel,INT-136,20799,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,27/Feb/08 10:11 AM,04/Mar/08 4:57 AM,10/May/19 2:37 AM,04/Mar/08 4:57 AM,,,,,,,1.0 M3,,,Core,,,,,0,,The purger could iterate each channel and perform the purge (with each selector). This would provide even greater use as a JMX operation.,,;04/Mar/08 4:54 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,352771200,,,,,,26414,false,mark.fisher(mark.fisher),,,,0|i01xhr:,11303,11279,,,,,04/Mar/08 4:57 AM;mark.fisher;ChannelPurger now accepts more than one channel (via varargs constructors).,,,,,,,,,,,,,,,,,,,,,,
Add namespace support for splitter,INT-135,20789,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,27/Feb/08 5:47 AM,20/May/08 3:28 AM,10/May/19 2:37 AM,20/May/08 3:28 AM,,,,,,,1.0 M4,,,Core,,,,,0,,The <splitter/> element should be added to the schema with a parser that creates a splitter adapter.,,;20/May/08 3:23 AM;mark.fisher;9000,,,,,,,,,,,,,,14400,5400,9000,62%,14400,5400,9000,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,10959,false,mark.fisher(mark.fisher),,,,0|i059g7:,30737,27782,,,,,"20/May/08 3:28 AM;mark.fisher;The <splitter/> element is now available. The 'ref', 'method', and 'output-channel' attributes are required. For example:

   <splitter id=""splitter"" ref=""somePojo"" method=""someMethodName"" output-channel=""someChannel""/>

Since this creates an instance of SplitterMessageHandlerAdapter, it can then be referenced from a handler-endpoint:

   <handler-endpoint input-channel=""anotherChannel"" handler=""splitter""/>

Note: since the splitter sends the output messages itself, it will likely be refactored prior to RC1 so that the adapter creates a Target implementation rather than a MessageHandler. That means that it would be configured on a <target-endpoint/> element instead of the <handler-endpoint/> as shown above.
",,,,,,,,,,,,,,,,,,,,,,
Subscription should be immutable,INT-134,20788,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,27/Feb/08 5:05 AM,27/Feb/08 5:21 AM,10/May/19 2:37 AM,27/Feb/08 5:21 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"Either a ""channelName"" or a MessageChannel instance is required (2 different constructors). The schedule is optional (may be null). Provide getters, but no setters.",,;27/Feb/08 5:21 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,353289600,,,,,,26415,false,mark.fisher(mark.fisher),,,,0|i05ajj:,30914,28018,,,,,27/Feb/08 5:21 AM;mark.fisher;Subscription is now immutable.,,,,,,,,,,,,,,,,,,,,,,
Update reference documentation for M2,INT-133,20784,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,27/Feb/08 2:56 AM,28/Feb/08 12:40 AM,10/May/19 2:37 AM,27/Feb/08 3:17 PM,,,,,,,1.0 M2,,,Documentation,,,,,0,,,,;27/Feb/08 12:05 PM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,353289600,,,,,,26416,false,mark.fisher(mark.fisher),,,,0|i01rgn:,10326,10315,,,,,27/Feb/08 3:17 PM;mark.fisher;Updated docs to cover M2 features and improvements.,,,,,,,,,,,,,,,,,,,,,,
Add namespace support for mail-target,INT-132,20775,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,26/Feb/08 2:39 PM,06/Mar/08 6:22 AM,10/May/19 2:37 AM,06/Mar/08 6:22 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,The 'spring-integration-adapters' schema should include <mail-target/>.,,;06/Mar/08 5:17 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,352598400,,,,,,26417,false,mark.fisher(mark.fisher),,,,0|i01xhz:,11304,11280,,,,,06/Mar/08 6:22 AM;mark.fisher;Added MailTargetAdapterParser for <mail-target/> elements.,,,,,,,,,,,,,,,,,,,,,,
Add namespace support for priority-channel,INT-131,20774,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,26/Feb/08 2:38 PM,04/Mar/08 8:24 AM,10/May/19 2:37 AM,04/Mar/08 8:24 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"PriorityChannel should probably be a new element: <priority-channel/>
It should accept a Comparator ""ref"" (or classname?).",,;04/Mar/08 8:23 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,352771200,,,,,,12703,false,mark.fisher(mark.fisher),,,,0|i01xi7:,11305,11281,,,,,"04/Mar/08 8:24 AM;mark.fisher;The <priority-channel/> element is now available. The ""comparator-ref"" attribute is optional. If it is not provided, then the priority is based on the order of the values in the message headers' priority property.",,,,,,,,,,,,,,,,,,,,,,
DefaultMessageEndpoint should set the correlationId on reply Messages,INT-130,20755,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,25/Feb/08 3:02 PM,25/Feb/08 3:09 PM,10/May/19 2:37 AM,25/Feb/08 3:09 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"If the endpoint's handler has not already set the correlationId, the reply Message's correlationId should be set to the original Message's id.",,;25/Feb/08 3:09 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,12446,false,mark.fisher(mark.fisher),,,,0|i05akn:,30919,28026,,,,,25/Feb/08 3:09 PM;mark.fisher;DefaultMessageEndpoint now sets the reply Message's correlationId to the original Message's id by default.,,,,,,,,,,,,,,,,,,,,,,
Provide a setter for the 'replyHandler' on DefaultMessageEndpoint,INT-129,20749,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,25/Feb/08 10:54 AM,25/Feb/08 12:35 PM,10/May/19 2:37 AM,25/Feb/08 12:35 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"While the default implementation will suffice for most cases (resolving the message header's return address and falling back on the defaultOutputChannelName), it should be possible to provide an implementation of the ReplyHandler strategy for the cases where customization is necessary. This should also be supported through an attribute of the <endpoint/> element.",,;25/Feb/08 12:34 PM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,26418,false,mark.fisher(mark.fisher),,,,0|i02pdr:,15821,14994,,,,,25/Feb/08 12:35 PM;mark.fisher;ReplyHandler is now configurable on the DefaultMessageEndpoint. The <endpoint/> element also accepts a 'reply-handler' attribute.,,,,,,,,,,,,,,,,,,,,,,
SplitterMessageHandlerAdapter should set sequenceNumber and sequenceSize header properties,INT-128,20712,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,22/Feb/08 12:52 AM,22/Feb/08 1:26 AM,10/May/19 2:37 AM,22/Feb/08 1:26 AM,,,,,,,1.0 M2,,,Core,,,,,0,,These properties should be set while the splitter adapter is iterating the results of a splitter method.,,Applied the sequence number/size properties as in Marius' modified SplitterMessageHandlerAdapter - and some general refactoring.;22/Feb/08 12:53 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,353808000,,,,,,10983,false,mark.fisher(mark.fisher),,,,0|i02ve7:,16796,15813,,,,,22/Feb/08 1:26 AM;mark.fisher;The 'sequenceNumber' and 'sequenceSize' properties are now being set by SplitterMessageHandlerAdapter.,,,,,,,,,,,,,,,,,,,,,,
Preserve MessageHeader in handler adapter,INT-127,20708,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,21/Feb/08 10:00 PM,28/Feb/08 12:01 AM,10/May/19 2:37 AM,22/Feb/08 9:01 AM,1.0 M1,,,,,,1.0 M2,,,Core,,,,,0,,"Preserve MessageHeader in handler adapter. I can't see another way to get a corelation identifier for a message I send into a handler chain composed of POJO adapters.  Does that make sense?  The AbstractMessageHandlerAdapter could do it in it's handle method, if the result is not a Message.  The mapper has no knowledge of the incoming message so whatever it does will not be able to preserve correlation information, so the adapter has to do the work itself.",,;22/Feb/08 8:59 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353721600,,,,,2008-02-22 01:26:15.909,26419,false,mark.fisher(mark.fisher),,,,0|i02v9b:,16774,15793,,,,,"21/Feb/08 10:12 PM;david_syer;What is the contract of a MessageHeader.correlationId?  It needs to be made clearer somewhere, I think.  Maybe the SplitterMessageHandlerAdapter should also be able to check for a correlation id in the incoming message and re-use that?  Or is that making too many assumptions about the clients of the correlation id?  I can presume that there will be 

* some internal clients, like the splitter
* some business clients, with logic in handlers/adpapters

If correlation id is for internal use only, maybe it should be in a separate or sub API to MessageHeader?  If it isn't then it needs to be copied from incoming messages to preserve the information, at least optionally.","22/Feb/08 1:26 AM;mark.fisher;I have just committed some changes to AbstractMessageHandlerAdapter such that:

1) If the subclass explicitly sets the correlationId in its 'doHandle' method (as SplitterMessageHandlerAdapter does), that will be preserved.
2) Otherwise, if the inbound Message already contained a correlationId, it will be passed to the new ""reply"" Message.
3) If no 'correlationId' was provided by either the subclass' implementation of 'doHandle' or the incoming Message itself, then the incoming Message's ID will be passed as the correlationId of the new Message.

Any thoughts?
","22/Feb/08 9:01 AM;mark.fisher;AbstractMessageHandlerAdapter now configures the 'correlationId' property as described above, and it also now uses the new header-copying constructor (see INT-123).
",,,,,,,,,,,,,,,,,,,,
Implement adapter pattern which looks synchronous to caller,INT-126,20707,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,21/Feb/08 9:41 PM,15/May/08 7:11 AM,10/May/19 2:37 AM,15/May/08 7:11 AM,1.0 M1,,,,,,1.0 M4,,,Adapters,,,,,1,,"Implement adapter pattern which looks synchronous to caller.  The use case is: 

* Accept incoming message, and send it to inbound channel
* Wait for response on outbound channel with same correlation id
* Return the reponse to the caller

Maybe this could be implemented as a Dispatcher strategy, and re-used by adapters that are designated as in- and out-bound?",,;15/May/08 7:11 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,346550400,,,,,2008-05-01 02:18:39.294,26420,false,mark.fisher(mark.fisher),,,,0|i02pe7:,15823,14996,,,,,09/Apr/08 8:01 AM;david_syer;Now that the ResponseCorrelator exists this pattern can be implemented using that.  It would be nice if it was an option in / generalisation of RequestReplyTemplate.  ReponseCorrelator should be an interface though?,"01/May/08 2:18 AM;mark.fisher;The RequestReplyTemplate now encapsulates usage of ResponseCorrelator. It simply needs the ""endpointRegistry"" (implemented by MessageBus), and that is provided automatically if the requestReplyTemplate is defined as a bean (it is ApplicationContextAware).

Here are the available operations on RequestReplyTemplate:

1. send(message);
2. Message receive();
3. request(message);
4. request(message, replyHandler);

#3 will use a temporary, anonymous RendezvousChannel for the result unless the template's ""replyChannel"" has been provided. In that case, it will create a responseCorrelator that is subscribed to the replyChannel.

The MessagingGateway now extends RequestReplyTemplate to provide simple Object-based equivalent methods:

gateway.send(object); // sends to requestChannel
Object o = gateway.invoke(); // receives from replyChannel
Object o = invoke(o); // sends to requestChannel and receives from replyChannel

The conversion of Object to Message is handled by the gateway's 'messageCreator' and the conversion of Message to Object is handled by its 'messageMapper'. In both cases, the default option simply maps the payload to/from a GenericMessage.

Then, there is GatewayProxyFactoryBean for creating proxies for the provided 'serviceInterface'. A method invoked on the proxy will in turn invoke the corresponding gateway method.
","13/May/08 11:34 PM;mark.fisher;The only change to the description above is that MessagingGateway's ""invoke"" method name has changed. These are the main methods of the gateway:

void send(Object)
Object receive()
Object sendAndReceive(Object)
Message sendAndReceiveMessage(Object)
","15/May/08 7:11 AM;mark.fisher;The RequestReplyTemplate now encapsulates a ReplyMessageCorrelator (f.k.a. ResponseCorrelator) when a 'replyChannel' has been provided. If no 'replyChannel' is provided, then it will use a temporary synchronous queue to handle the reply messages.

SimpleMessagingGateway uses a RequestReplyTemplate but adds an abstraction such that Objects may be passed as parameters and received as return values rather than Messages.

The GatewayProxyFactoryBean enables the use of any interface as a ""gateway"" to send-to and/or receive-from MessageChannels.
",,,,,,,,,,,,,,,,,,,
Make it easier to dynamically register endpoints with their own channel,INT-125,20705,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,david_syer,david_syer,21/Feb/08 8:05 PM,03/Apr/08 9:00 AM,10/May/19 2:37 AM,03/Apr/08 9:00 AM,1.0 M1,,,,,,1.0 M3,,,Core,,,,,0,,"Make it easier to dynamically register endpoints with their own channel.

I want to use a Content Based Router, but not have to register manually all the possible channels that might be needed on the output side.  The endpoints could register the channel themselves if it was easier - there is a ChannelRegistryAware, but it doesn't hook into the MessageBus, only a map-based registry that doesn't create dispatchers.

Actually <message-bus auto-create-channels/> gets pretty close, but doesn't give me any control over the channel properties.",,;03/Apr/08 8:45 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,350179200,,,,,2008-03-10 05:21:57.611,12715,false,mark.fisher(mark.fisher),,,,0|i01xif:,11306,11282,,,,,21/Feb/08 9:10 PM;david_syer;Actually I hust realised that ChannelRegistryAware isn't what I thought it was anyway - the callback is not received by @MessageEndpoint implementations anyway.   Is that a bug?,10/Mar/08 5:21 AM;markn;I also noticed that the ChannelRegistry property wasn't injected when implementing a regular pojo with ChannelRegistryAware (using the xml namespace configuration). I think this is a probably a bug.,"02/Apr/08 8:41 AM;mark.fisher;The MessageEndpointAnnotationPostProcessor now provides the ChannelRegistry to any Object annotated with @MessageEndpoint that implements ChannelRegistryAware.

Dave, the instance that is provided by the post-processor IS the MessageBus (which implements ChannelRegistry itself). So the 'registerChannel(..)' method invoked on the registry provided to the callback should actually create a dispatcher, etc.

By the way, for M4, I will be providing a MessageBus *interface* (as we have discussed).

Also, I don't think there is  a need for the bus implementation to delegate to this DefaultChannelRegistry object (seems like overkill in hindisight). So, that class will most likely be removed.

-Mark
","03/Apr/08 9:00 AM;mark.fisher;RouterMessageHandlerAdapter now sets the ChannelRegistry on its target Object if that target implements ChannelRegistryAware, and DefaultMessageEndpoint now sets the ChannelRegistry on any ChannelRegistryAware handler.

This covers simple ChannelRegistryAware-implementing objects configured as routers. This makes sense for routers in particular since we provide the simple *Channel(Name)Resolver interfaces and also the @Router annotation - AND most importantly because routers often need to know about the MessageChannels. I don't see much of a case for other simple method-invoking endpoints (that don't even implement MessageHandler) needing to be aware of the channel registry. Is there an example of that - or were these comments all related to routing? In any case, in M4 we may consider a simpler means of providing the channel registry - perhaps a dedicated BeanPostProcessor.
",,,,,,,,,,,,,,,,,,,
Add configurable acknowledge modes for JmsMessageDrivenSourceAdapter,INT-124,20699,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 10:12 AM,21/Feb/08 10:17 AM,10/May/19 2:37 AM,21/Feb/08 10:17 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,"The acknowledge mode will be passed to the DefaultMessageListenerContainer. The enumeration of allowed values should be the same: auto, client, dups-ok, transacted.

For now (to be consistent), the default will be AUTO. However, we may want to consider sessionTransacted as the default (as it was prior to making this a configurable option).
",,;21/Feb/08 10:16 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353808000,,,,,,26421,false,mark.fisher(mark.fisher),,,,0|i046mn:,24448,21202,,,,,"21/Feb/08 10:17 AM;mark.fisher;The acknowledge mode is now configurable either with setters or through the ""acknowledge"" attribute of the <jms-source/> element.",,,,,,,,,,,,,,,,,,,,,,
Add a copy constructor to GenericMessage,INT-123,20697,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 6:50 AM,22/Feb/08 5:38 AM,10/May/19 2:37 AM,22/Feb/08 5:38 AM,,,,,,,1.0 M2,,,Core,,,,,0,,The copy constructor will allow for reuse of a MessageHeader when creating a new Message as part of a multi-step process.,,;22/Feb/08 5:30 AM;mark.fisher;1800,"Also modified the AbstractMessageHandlerAdapter to use this constructor. This is a simplification, since it no longer uses a MessageMapper.;22/Feb/08 5:32 AM;mark.fisher;1800",,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353721600,,,,,,26422,false,mark.fisher(mark.fisher),,,,0|i05amn:,30928,28039,,,,,"22/Feb/08 5:38 AM;mark.fisher;The following new constructor is available:

new GenericMessage(payload, headerToCopy);
",,,,,,,,,,,,,,,,,,,,,,
Add more DEBUG logging for channel and endpoint,INT-122,20696,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 6:28 AM,21/Feb/08 2:35 PM,10/May/19 2:37 AM,21/Feb/08 2:35 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"With a log level of DEBUG, it should be possible to view overall Message traffic.",,;21/Feb/08 2:35 PM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,353808000,,,,,,26423,false,mark.fisher(mark.fisher),,,,0|i02s9j:,16288,15364,,,,,21/Feb/08 2:35 PM;mark.fisher;Added debug output for channel and endpoint. Also added toString to GenericMessage and MessageHeader.,,,,,,,,,,,,,,,,,,,,,,
Add default handler subscribed to errorChannel,INT-121,20695,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 6:27 AM,25/Feb/08 5:20 AM,10/May/19 2:37 AM,25/Feb/08 5:20 AM,,,,,,,1.0 M2,,,Core,,,,,0,,The default handler can probably just log at WARN level. GenericMessage should also provide a default toString so that handling and delivery exceptions can log the message itself.,,;25/Feb/08 5:17 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,26424,false,mark.fisher(mark.fisher),,,,0|i02vav:,16781,15798,,,,,"25/Feb/08 5:20 AM;mark.fisher;The MessageBus now creates a DefaultErrorChannel instance if no errorChannel is provided. The default channel includes an interceptor so that all errors will be logged at DEBUG level. It also logs a WARN-level message if the errorChannel itself is rejecting messages (reaching capacity may be a result of no subscribers). The default error channel name is ""errorChannel"" - also available from the MessageBus.ERROR_CHANNEL_NAME key, so that any subscriber may be registered to the known channel name.
",,,,,,,,,,,,,,,,,,,,,,
Prevent error loss,INT-120,20694,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 5:58 AM,25/Feb/08 12:29 AM,10/May/19 2:37 AM,25/Feb/08 12:29 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"If an error occurs in an error handler (and/or a MessageHandler subscribed to the errorChannel), it should propagate to the dispatcher itself - where it can either be treated as fatal or at least logged.",,"All errors are now logged at DEBUG level in the ConcurrentHandler.HandlerTask. If no 'errorHandler' has been provided, then errors will be logged at WARN level. The correct way to propagate all error messages will continue to be configuration of an ErrorHandler, and the MessageBus does provide a default handler that publishes to the error channel.;25/Feb/08 12:28 AM;mark.fisher;1800",,,,,,,,,,,,,,14400,12600,1800,12%,14400,12600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,353548800,,,,,,26425,false,mark.fisher(mark.fisher),,,,0|i02v3r:,16749,15771,,,,,"25/Feb/08 12:29 AM;mark.fisher;All errors are now logged at DEBUG level in the ConcurrentHandler.HandlerTask. If no 'errorHandler' has been provided, then errors will be logged at WARN level. The correct way to propagate all error messages will continue to be configuration of an ErrorHandler, and the MessageBus does provide a default handler that publishes to the error channel.",,,,,,,,,,,,,,,,,,,,,,
Provide known key for the default error channel.,INT-119,20693,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 4:53 AM,22/Feb/08 5:51 AM,10/May/19 2:37 AM,22/Feb/08 5:51 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"Rather than requiring programmatic access (either bus.getErrorChannel() or channelRegistry.getErrorChannel()), the channel name should be ""reserved"" (probably just ""errorChannel"").
",,;22/Feb/08 5:50 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,353721600,,,,,,12719,false,mark.fisher(mark.fisher),,,,0|i02s5z:,16272,15350,,,,,"22/Feb/08 5:51 AM;mark.fisher;The following key is now available: MessageBus.ERROR_CHANNEL_NAME.

Removed the getErrorChannel() and setErrorChannel() methods from the ChannelRegistry interface (since the key can be used to do a lookup). For now, the MessageBus still provides convenience methods.",,,,,,,,,,,,,,,,,,,,,,
Add @Concurrency annotation for @MessageEndpoints,INT-118,20692,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Feb/08 4:50 AM,05/Mar/08 6:44 AM,10/May/19 2:37 AM,05/Mar/08 6:44 AM,,,,,,,1.0 M3,,,Core,,,,,0,,"Currently, only endpoints defined in XML have configurable concurrency policies. An annotation-based option is needed.",,;05/Mar/08 6:40 AM;mark.fisher;9000,,,,,,,,,,,,,,1800,0,9000,500%,1800,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,352684800,,,,,,26426,false,mark.fisher(mark.fisher),,,,0|i01xin:,11307,11283,,,,,"05/Mar/08 6:44 AM;mark.fisher;Defined @Concurrency with all the properties of ConcurrencyPolicy - now MessageEndpointAnnotationPostProcessor will create the policy based upon the annotation if present.

Added EndpointRegistry and DefaultEndpointRegistry to which MessageBus now delegates.

Added unregisterEndpoint(..) to the bus, and removeHandler(..) to the MessageDispatcher.",,,,,,,,,,,,,,,,,,,,,,
Add support for Spring Security on MessageChannels,INT-117,20685,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,mark.fisher,mark.fisher,20/Feb/08 11:59 PM,26/May/08 6:35 PM,10/May/19 2:37 AM,26/May/08 6:34 PM,,,,,,,1.0 M5,,,Core,,,,,0,,"MessageChannels should be able to enforce authorization based on declarative configuration.

The SecurityContext should propagate in a Message's header through a MessageChannel from the sending thread to the receiving thread.
",,;26/May/08 6:35 PM;jpartner;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,345600000,,,,,2008-05-26 18:34:25.245,26427,false,jpartner(jpartner),,,,0|i02vbz:,16786,15803,,,,,26/May/08 6:34 PM;jpartner;ROLE based security via a channel interceptor is now possible,,,,,,,,,,,,,,,,,,,,,,
Add Spring MVC adapter,INT-116,20662,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Feb/08 7:26 AM,13/Sep/10 5:56 PM,10/May/19 2:37 AM,11/Mar/09 7:54 AM,,,,,,,1.0.2,,,Adapters,,,,,2,,"The initial version of this adapter should implement Controller and create a simple Message from the HTTP request parameters. The view name can be configured, and a strategy should be available for optionally passing data into the model map.
",,;11/Mar/09 7:51 AM;mark.fisher;57600,,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,320630400,,,,,2008-02-21 06:09:13.112,26428,false,mark.fisher(mark.fisher),,,,0|i02pcv:,15817,14992,,,,,21/Feb/08 6:08 AM;mark.fisher;Updated to M2,"21/Feb/08 6:09 AM;david_syer;Can I suggest Http request parameters -> java.util.Properties (the most generic JDK-level object that resembles an http request)?

But you probably also want a version that does request body -> String.

And request multi-part body -> [InputStream]?","18/Aug/08 3:04 AM;mark.fisher;We probably want to provide 2 adapters here. One simple HTTP request parameter-mapping version (with no dependency on Spring MVC) and then the MVC version can provide support for a 'viewName' etc. If so, we should create a separate issue for the simple HTTP adapter.
","26/Feb/09 6:06 AM;mark.fisher;Please look at INT-584 and the latest implementation of HttpInboundEndpoint and provide feedback, since that issue supersedes this.","11/Mar/09 7:54 AM;mark.fisher;This issue has been superseded by INT-584, but the HttpInboundEndpoint does allow configuration of a View instance reference.",,,,,,,,,,,,,,,,,,
Support priority-based MessageChannel,INT-115,20661,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Feb/08 6:59 AM,25/Feb/08 2:13 PM,10/May/19 2:37 AM,25/Feb/08 2:13 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"This channel should encapsulate a PriorityBlockingQueue. One constructor should accept a Comparator, but if not provided the default behavior could either be based upon a Comparable payload or a new 'priority' property in the header. To enforce a max-capacity and timeout on send/receive, this channel will also need to use a semaphore internally.
",,;25/Feb/08 2:10 PM;mark.fisher;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,12748,false,mark.fisher(mark.fisher),,,,0|i05akv:,30920,28027,,,,,"25/Feb/08 2:13 PM;mark.fisher;Added PriorityChannel. Capacity is enforced by a semaphore so that behavior is consistent with SimpleChannel. A Comparator<Message<?>> can be provided to the constructor - otherwise the default implementation will consult the MessageHeader's 'priority'.
",,,,,,,,,,,,,,,,,,,,,,
Add tooling support to XML schema,INT-114,20657,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,19/Feb/08 4:10 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,16/Dec/08 2:17 PM,,,,,,,1.0.1,,,Core,,,,,2,,"Adding 'tool:exports' and 'tool:expected-type' annotations to the XML schema elements will improve the user experience within IDEs with tool support (e.g. Spring IDE).
",,;16/Dec/08 1:45 PM;mark.fisher;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,327974400,,,,,,26429,false,mark.fisher(mark.fisher),,,,0|i052g7:,29603,25430,,,,,20/Mar/08 4:51 AM;mark.fisher;moving to RC2,"25/Nov/08 10:49 AM;mark.fisher;Added 'tool' annotations in spring-integration-1.0.xsd (core). There is likely more tool support to be added across the various adapter schemas. Therefore, I'm leaving this open as a 1.0.1 issue.","16/Dec/08 2:17 PM;mark.fisher;Added tool annotations to the core XSD, all adapters (file, httpinvoker, jms, mail, rmi, stream, ws), security, and xml.

More annotations will be added as the tool schema itself evolves. We can also probably provide more tool:exports annotations. For 1.0.1, most of the additions have been 'references' - using tool:expected-type.

change log entries related to this issue:
https://fisheye.springframework.org/qsearch/spring-integration/?q=INT-114",,,,,,,,,,,,,,,,,,,,
Simplify executor management,INT-113,20642,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Feb/08 12:49 AM,25/Feb/08 12:13 AM,10/May/19 2:37 AM,25/Feb/08 12:13 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"Rather than creating and configuring the default executor implementations, classes such as ConcurrentHandler and SimpleMessagingTaskScheduler should simply provide setter methods for ExecutorService and ScheduledExecutorService respectively. The defaults could be provided by the MessageBus on startup - possibly delegating to a pluggable ExecutorFactory.
",,;18/Feb/08 9:04 AM;mark.fisher;9000,;25/Feb/08 12:08 AM;mark.fisher;7200,,,,,,,,,,,,,28800,12600,16200,56%,28800,12600,16200,,,,,,,,,,,,,,,,,,,,,,,,,,353548800,,,,,,26430,false,mark.fisher(mark.fisher),,,,0|i05am7:,30926,28035,,,,,"25/Feb/08 12:13 AM;mark.fisher;MessageBus now accepts a ScheduledExecutorService via setter method.

SimpleMessagingTaskScheduler accepts a ScheduledExecutorService via constructor.

ConcurrentHandler and the new RequestReplyTemplate both accept an ExecutorService via constructor.
",,,,,,,,,,,,,,,,,,,,,,
Refactor package structure to avoid cycles,INT-112,20640,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Feb/08 12:12 AM,25/Feb/08 12:37 PM,10/May/19 2:37 AM,18/Feb/08 6:53 AM,,,,,,,1.0 M2,,,Core,,,,,0,,Move classes and interfaces as necessary so that package interdependencies are avoided.,,;18/Feb/08 6:53 AM;mark.fisher;21600,;25/Feb/08 12:37 PM;mark.fisher;36000,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,354067200,,,,,,26431,false,mark.fisher(mark.fisher),,,,0|i02ven:,16798,15815,,,,,18/Feb/08 6:53 AM;mark.fisher;Currently there are no cycles.,,,,,,,,,,,,,,,,,,,,,,
Use java.util.UUID for default ID generation strategy,INT-111,20638,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Feb/08 11:40 PM,18/Feb/08 12:25 AM,10/May/19 2:37 AM,18/Feb/08 12:25 AM,,,,,,,1.0 M2,,,Core,,,,,0,,The default implementation can generate ids by calling UUID.randomUUID(),,;18/Feb/08 12:24 AM;mark.fisher;1200,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,354153600,,,,,,26432,false,mark.fisher(mark.fisher),,,,0|i02pav:,15808,14984,,,,,18/Feb/08 12:25 AM;mark.fisher;The default ID generator now uses java.util.UUID.randomUUID(),,,,,,,,,,,,,,,,,,,,,,
Provide Spring-WS target adapter,INT-110,20637,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Feb/08 11:23 PM,31/Mar/08 4:30 AM,10/May/19 2:37 AM,31/Mar/08 4:30 AM,,,,,,,1.0 M3,,,Adapters,,,,,2,,"These will be relatively thin adapters delegating to Spring-WS. For calling out to a Web Service the Spring-WS client-side WebServiceTemplate may be used.

Spring OXM will also be integrated in a more general way since the marshallers/unmarshallers are valuable in many cases beyond WS (see INT-109).

A SourceMessage and/or WebServiceMessage type may be added as well.",,committed target adapters;31/Mar/08 4:25 AM;mark.fisher;57600,,,,,,,,,,,,,,86400,28800,57600,66%,86400,28800,57600,,,,,,,,,,,,,,,,,,,,,,,,,,350438400,,,,,,26433,false,mark.fisher(mark.fisher),,,,0|i01xiv:,11308,11284,,,,,"31/Mar/08 4:29 AM;mark.fisher;Added target adapters: SimpleWebServiceTargetAdapter and MarshallingWebServiceTargetAdapter

The source adapters are now covered by a separate issue (INT-162) for M4. The initial implementation will be committed as soon as M3 is released.",,,,,,,,,,,,,,,,,,,,,,
Add Spring OXM transformer,INT-109,20636,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,jpartner,mark.fisher,mark.fisher,17/Feb/08 11:21 PM,06/Jul/08 7:55 AM,10/May/19 2:37 AM,06/Jul/08 7:55 AM,,,,,,,1.0 M5,,,XML,,,,,0,,The marshallers/unmarshallers in the spring-oxm library can be used as transformers in conjunction with any adapters that send/receive XML.,,;24/Jun/08 6:22 AM;mark.fisher;7200,;06/Jul/08 7:38 AM;jpartner;57600,,,,,,,,,,,,,57600,0,64800,112%,57600,0,64800,,,,,,,,,,,,,,,,,,,,,,,,,,342057600,,,,,2008-06-25 03:14:27.838,26434,false,jpartner(jpartner),,,,0|i01p27:,9937,9953,,,,,"24/Mar/08 7:34 AM;mark.fisher;Marshalling support will be available for source and target adapters in M3, but the general Message Translator implementation will be resolved for M4.",20/May/08 7:54 AM;mark.fisher;Moving message transformer work to M5.,"24/Jun/08 6:38 AM;mark.fisher;Implemented the initial version of an OXM-Marshalling MessageTransformer within the new 'org.springframework.integration.xml' module.
","25/Jun/08 3:14 AM;david_geary;Just tried this out and I'm not sure the marshalling is working correctly.

Surely it should accept any object type instead of just String or Document? It should be up to the injected marshaller to decide if it can handle the object type or not.

Also its probably more useful for the result from the marshaller to be adjusted to a String, Source or Document object as these are the types accepted by the XsltPayloadTransformer  and  SimpleWebServiceTargetAdapter (Document isn't currently supported by SimpleWebServiceTargetAdapter - maybe that's a separate change).","26/Jun/08 6:14 AM;mark.fisher;David,

Thanks for the feedback! I am reopening this issue until we address a more flexible approach for handling any Object type. First, it seems like it would be much cleaner to separate this into two distinct transformers - one that converts to a Source and another that converts to a Result. The current implementation is confusing as it tries to accomplish both depending upon the received Message payload. Next, we need to provide some strategy interfaces so that the developer can control what type of Source or Result object is created.

Regards,
Mark
","06/Jul/08 7:55 AM;jpartner;I have split this into two transformers
 
XmlPayloadMarshallingTransformer accepts any object and passes that to the marshaller.  
The type of Result passed to the marshaller can be controlled by providing alternative implementations of a new ResultFactory interface.  Currently StringResult and DOMResult implementations are provided.  This is supported in the namespace as below.

<si-xml:marshalling-transformer id=""marshallingTransfomer"" marshaller=""marshaller"" result-factory=""StringResult"" />

<si-xml:marshalling-transformer id=""marshallingTransfomer"" marshaller=""marshaller"" result-factory=""DOMResult"" />

 
XmlUnmarshallingPayload expects a Source but calls to a provided implementation of a new interface SourceFactory to convert where the payload is not a Source.  Currently there is one implementation of this which will create a DOMSource from a Document or a String payload and rejects any other payload. ",,,,,,,,,,,,,,,,,
Undeliverable replies from endpoint should go to error channel,INT-108,20627,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,17/Feb/08 5:54 AM,25/Feb/08 6:55 AM,10/May/19 2:37 AM,25/Feb/08 6:55 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"When the DefaultMessageEndpoint calls replyChannel.send(), the return value should be checked. If false, then the message should be sent to the errorChannel. Perhaps a retry policy should be added (num retries with sleep interval) as well.",,;25/Feb/08 6:50 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,26435,false,mark.fisher(mark.fisher),,,,0|i05alj:,30923,28032,,,,,"25/Feb/08 6:55 AM;mark.fisher;Added a 'replyTimeout' property to DefaultMessageEndpoint with a default value of 1000 milliseconds. When sending to either the 'defaultOutputChannelName' or the reply channel specified by the input MessageHeader's 'returnAddress', a timeout will now cause the reply Message to be wrapped within a MessageDeliveryException and passed to the endpoint's ErrorHandler. The default error handler publishes the exception as an ErrorMessage to the global error channel.",,,,,,,,,,,,,,,,,,,,,,
Add target Mail Adapter ,INT-107,20565,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mbogoevici,mbogoevici,12/Feb/08 3:28 AM,27/Feb/08 3:00 AM,10/May/19 2:37 AM,27/Feb/08 3:00 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,Should be based off MailSender and SimpleMailMessage,,;26/Feb/08 2:49 AM;mark.fisher;9000,;27/Feb/08 2:57 AM;mbogoevici;72000,,,,,,,,,,,,,43200,0,81000,187%,43200,0,81000,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26436,false,mbogoevici(mbogoevici),,,,0|i04nqf:,27219,21868,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add defaultConcurrencyPolicy property to MessageBus,INT-106,20534,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,10/Feb/08 2:27 AM,25/Feb/08 2:19 AM,10/May/19 2:37 AM,25/Feb/08 2:19 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"The default policy would be used anytime that a handler is registered with the registerHandler() method that does not accept a ConcurrencyPolicy argument.

The namespace should also support this (with 'concurrency' as a sub-element of the 'message-bus' element).
",,;25/Feb/08 12:29 AM;mark.fisher;3600,Added setter.;25/Feb/08 1:00 AM;mark.fisher;1800,Added <default-concurrency/> to the namespace.;25/Feb/08 1:53 AM;mark.fisher;2700,,,,,,,,,,,,5400,0,8100,150%,5400,0,8100,,,,,,,,,,,,,,,,,,,,,,,,,,353548800,,,,,,26437,false,mark.fisher(mark.fisher),,,,0|i05alz:,30925,28034,,,,,"25/Feb/08 2:19 AM;mark.fisher;The MessageBus now provides a setDefaultConcurrencyPolicy() method, and the <message-bus/> element now accepts a <default-concurrency/> child element such as:
 
    <message-bus>
        <default-concurrency core=""5"" max=""20""/>
    </message-bus>

If an endpoint provides no explicit concurrency policy of its own, then this default will be applied by the MessageBus when the endpoint is registered with the bus. If no default is provided to the bus, then its 'defaultConcurrencyPolicy' will be set upon initialization to the result of the no-arg constructor of ConcurrencyPolicy.
",,,,,,,,,,,,,,,,,,,,,,
Implement ChannelPurger,INT-105,20524,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,08/Feb/08 10:05 AM,09/Feb/08 10:26 AM,10/May/19 2:37 AM,09/Feb/08 10:26 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"The ChannelPurger should be capable of scheduling a task to invoke the purge method of a channel. Also, the channel's purge method should be refactored to accept any MessageSelector instance - and any Messages that are not accepted by the selector will be removed when purge(selector) is invoked. For convenience, an UnexpiredMessageSelector implementation should be available.",,;09/Feb/08 10:24 AM;mark.fisher;9000,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,354844800,,,,,,26438,false,mark.fisher(mark.fisher),,,,0|i02lf3:,15179,14446,,,,,"09/Feb/08 10:26 AM;mark.fisher;Implemented ChannelPurger. A MessageChannel instance should be passed as a constructor argument, and a MessageSelector may be added as a second (optional) argument. With no selector, all messages will be cleared from the channel - otherwise all messages that are not accepted by the selector will be removed.
",,,,,,,,,,,,,,,,,,,,,,
Add 'initialDelay' and 'fixedRate' attributes to the @Polled annotation,INT-104,20523,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,08/Feb/08 9:53 AM,12/Feb/08 9:23 PM,10/May/19 2:37 AM,12/Feb/08 9:23 PM,,,,,,,1.0 M2,,,Adapters,,,,,0,,"These attributes will be used in addition to the current ""period"" attribute for creating the PollingSchedule.",,;12/Feb/08 9:22 PM;mark.fisher;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26439,false,mark.fisher(mark.fisher),,,,0|i04707:,24509,21263,,,,,12/Feb/08 9:23 PM;mark.fisher;The 'initialDelay' and 'fixedRate' attributes are now available on @Polled.,,,,,,,,,,,,,,,,,,,,,,
The 'jms-source' should accept a 'message-converter' ref,INT-102,20521,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,08/Feb/08 9:40 AM,13/Feb/08 1:57 AM,10/May/19 2:37 AM,13/Feb/08 1:57 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,"For a polling source adapter, configuring the JmsTemplate directly is probably the simplest way to add a MessageConverter, but for the JmsMessageDrivenSourceAdapter (when ""poll-period"" is not provided), there is currently no way to provide the MessageConverter reference when using the namespace support.",,;13/Feb/08 1:57 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26441,false,mark.fisher(mark.fisher),,,,0|i0470f:,24510,21264,,,,,13/Feb/08 1:57 AM;mark.fisher;The <jms-source> now provides a 'message-converter' attribute (for JmsMessageDrivenSourceAdapter).,,,,,,,,,,,,,,,,,,,,,,
Add autoStartup property to MessageBus,INT-101,20512,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Feb/08 1:08 PM,12/Feb/08 9:25 PM,10/May/19 2:37 AM,12/Feb/08 9:25 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"This can probably be 'false' by default. If set to 'true', then the MessageBus' start() method will be invoked after it is fully initialized.
",,;12/Feb/08 9:24 PM;mark.fisher;3600,,,,,,,,,,,,,,900,0,3600,400%,900,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26442,false,mark.fisher(mark.fisher),,,,0|i05arz:,30952,28070,,,,,"12/Feb/08 9:25 PM;mark.fisher;The 'autoStartup' property is now available, and the default value is TRUE.",,,,,,,,,,,,,,,,,,,,,,
Add 'interceptor' element to the namespace (for ChannelInterceptor),INT-100,20489,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Feb/08 9:58 PM,13/Feb/08 1:28 AM,10/May/19 2:37 AM,13/Feb/08 1:28 AM,,,,,,,1.0 M2,,,Core,,,,,0,,The <interceptor/> element should be accepted as a sub-element of <channel/>. It could either include 'class' or 'ref' attribute (exactly one is required).,,;13/Feb/08 1:27 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26443,false,mark.fisher(mark.fisher),,,,0|i02vg7:,16805,15822,,,,,13/Feb/08 1:28 AM;mark.fisher;The <interceptor> is now available for <channel>,,,,,,,,,,,,,,,,,,,,,,
Add Dataype Channel,INT-99,20488,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Feb/08 9:55 PM,09/Feb/08 10:23 AM,10/May/19 2:37 AM,09/Feb/08 10:23 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"The <channel/> element should accept a 'datatype' attribute containing the fully qualified name of the class accepted by that channel. The parser will create the channel so that it is the equivalent of the following:
   channel = new SimpleChannel();
   channel.addInterceptor(new MessageSelectingInterceptor(new PayloadTypeSelector(type)));
",,;09/Feb/08 10:22 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,354844800,,,,,,12690,false,mark.fisher(mark.fisher),,,,0|i02s3r:,16262,15341,,,,,"09/Feb/08 10:23 AM;mark.fisher;The 'datatype' attribute is now available on the 'channel' element. The value should be a fully-qualified class name. Multiple types may be provided as a comma-delimited list.
",,,,,,,,,,,,,,,,,,,,,,
Create MessageSelectingInterceptor,INT-98,20487,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,06/Feb/08 9:51 PM,09/Feb/08 10:21 AM,10/May/19 2:37 AM,09/Feb/08 10:21 AM,,,,,,,1.0 M2,,,Core,,,,,0,,This should be a simple ChannelInterceptor that implements preSend() where it delegates to one or more provided MessageSelectors to determine if the message should be accepted on the channel.,,;09/Feb/08 10:21 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,354844800,,,,,,26444,false,mark.fisher(mark.fisher),,,,0|i04lnr:,26883,21514,,,,,09/Feb/08 10:21 AM;mark.fisher;Implemented MessageSelectingInterceptor.,,,,,,,,,,,,,,,,,,,,,,
Set JMS attributes from the MessageHeader prior to sending via JmsTargetAdapter,INT-97,20443,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Feb/08 8:12 AM,04/Feb/08 10:15 AM,10/May/19 2:37 AM,04/Feb/08 10:15 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,"The JmsTargetAdapter should post-process the JMS Message before it is sent to the JMS destination. Any JMS attributes available in the MessageHeader (e.g. JMSReplyTo, JMSCorrelationID) should be applied to the JMS Message.",,;04/Feb/08 10:08 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,355276800,,,,,,26445,false,mark.fisher(mark.fisher),,,,0|i02v8f:,16770,15789,,,,,"04/Feb/08 10:15 AM;mark.fisher;The JmsTargetAdapter will now pass the JMSReplyTo, JMSCorrelationID, and JMSType attributes to the JMS Message from the Spring Integration MessageHeader if available. The attribute ""keys"" are provided by the following constants:
* JmsTargetAdapter.JMS_CORRELATION_ID
* JmsTargetAdapter.JMS_REPLY_TO
* JmsTargetAdatper.JMS_TYPE

For example to set the reply destination prior to sending a Spring Integration Message to a JmsTargetAdapter, do the following:
message.getHeader().setAttribute(JmsTargetAdapter.JMS_REPLY_TO, myReplyDestination);
",,,,,,,,,,,,,,,,,,,,,,
Add namespace support for 'destination-name' attribute for JmsTargetAdapter,INT-96,20442,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Feb/08 7:38 AM,04/Feb/08 10:16 AM,10/May/19 2:37 AM,04/Feb/08 10:16 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,The 'jms-target' element should accept a 'destination-name' attribute. Currently it only accepts the 'destination' (reference).,,;04/Feb/08 10:07 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,355276800,,,,,,26446,false,mark.fisher(mark.fisher),,,,0|i04lnj:,26882,21513,,,,,04/Feb/08 10:16 AM;mark.fisher;The 'destination-name' attribute is now supported.,,,,,,,,,,,,,,,,,,,,,,
Add 'aggregator' element to the namespace,INT-95,20435,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mark.fisher,mark.fisher,04/Feb/08 3:08 AM,27/Feb/08 11:51 PM,10/May/19 2:37 AM,27/Feb/08 11:51 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"Similar to 'handler', the 'aggregator' element should accept a 'ref' which can reference either an implementation of the Aggregator strategy interface or any arbitrary object that contains a suitable method for aggregation. In the latter case, the 'method' attribute should also be provided.",,;27/Feb/08 11:49 PM;mbogoevici;14400,,,,,,,,,,,,,,9000,0,14400,160%,9000,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,353289600,,,,,2008-02-27 23:51:35.886,26447,false,mbogoevici(mbogoevici),,,,0|i02pdz:,15822,14995,,,,,"27/Feb/08 11:51 PM;mbogoevici;The 'method' attribute is permitted on the element, but not used. Support for using aggregators that do not implement Aggregator will be added in M3.",,,,,,,,,,,,,,,,,,,,,,
Add support for @Aggregator annotation,INT-94,20433,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mark.fisher,mark.fisher,04/Feb/08 1:55 AM,03/Mar/08 3:30 PM,10/May/19 2:37 AM,03/Mar/08 3:30 PM,,,,,,,1.0 M3,,,Core,,,,,0,,The @Aggregator annotation should be applicable to methods that accept a collection of Messages or Objects and return a single Message or Object. A MethodInvokingAggregatorAdapter will be responsible for mapping either the Messages or Message payloads based upon the annotated method's signature.,,;03/Mar/08 3:22 PM;mbogoevici;28800,,,,,,,,,,,,,,21600,0,28800,133%,21600,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,352857600,,,,,2008-03-03 15:30:51.183,26448,false,mbogoevici(mbogoevici),,,,0|i01xj3:,11309,11285,,,,,03/Mar/08 3:30 PM;mbogoevici;@Aggregator annotation added. Has the same semantics as AggregatorAdapter (see INT-137).,,,,,,,,,,,,,,,,,,,,,,
Add HttpInvoker target adapter,INT-93,20432,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Feb/08 1:39 AM,18/Mar/08 10:32 AM,10/May/19 2:37 AM,18/Mar/08 10:32 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,The target adapter will extend from or delegate to HttpInvokerClientInterceptor. The only required configuration should be the channel to subscribe to and the url for a corresponding HttpInvokerSourceAdapter.,,;18/Mar/08 10:30 AM;mark.fisher;7200,,,,,,,,,,,,,,9000,1800,7200,80%,9000,1800,7200,,,,,,,,,,,,,,,,,,,,,,,,,,351561600,,,,,,26449,false,mark.fisher(mark.fisher),,,,0|i01xjb:,11310,11286,,,,,18/Mar/08 10:32 AM;mark.fisher;HttpInvokerTargetAdapter is now available. It extends AbstractRemotingTargetAdapter - a newly added common base class for remoting target adapters (currently that includes HttpInvoker and RMI).,,,,,,,,,,,,,,,,,,,,,,
Add HttpInvoker source adapter,INT-92,20431,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Feb/08 1:34 AM,18/Mar/08 9:03 AM,10/May/19 2:37 AM,18/Mar/08 9:03 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,The source adapter should be a convenience wrapper for an HttpInvokerServiceExporter. Only required configuration would be the channel.,,;18/Mar/08 8:52 AM;mark.fisher;10800,,,,,,,,,,,,,,9000,0,10800,120%,9000,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,351561600,,,,,,26450,false,mark.fisher(mark.fisher),,,,0|i01xjj:,11311,11287,,,,,"18/Mar/08 9:03 AM;mark.fisher;HttpInvokerSourceAdapter is now available. The constructor requires a MessageChannel, and like the RmiSourceAdapter, there is a boolean ""expectReply"" property (with a default of 'true'). The name of that property and the default value are both subject to change depending on feedback.",,,,,,,,,,,,,,,,,,,,,,
Add 'sendTimeout' to SplitterMessageHandlerAdapter,INT-91,20406,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Jan/08 7:59 AM,31/Jan/08 8:06 AM,10/May/19 2:37 AM,31/Jan/08 8:06 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"Currently, the SplitterMessageHandlerAdapter always blocks indefinitely on send. It should expose a configurable 'sendTimeout'.
",,;31/Jan/08 8:00 AM;mark.fisher;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,355622400,,,,,,26451,false,mark.fisher(mark.fisher),,,,0|i05avr:,30969,28151,,,,,"31/Jan/08 8:06 AM;mark.fisher;The 'sendTimeout' is now configurable. We will want to consider policies for handling the timeout. All-or-nothing (probably the default), else send as many as possible?",,,,,,,,,,,,,,,,,,,,,,
Add isExpired() method to Message,INT-90,20400,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,31/Jan/08 3:56 AM,31/Jan/08 4:32 AM,10/May/19 2:37 AM,31/Jan/08 4:32 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"Since multiple components may be interested in message expiration, this logic should be encapsulated within the Message itself. If a MessageHeader contains no 'expiration' Date, then it will always be considered unexpired. Otherwise the Date should be compared against the current time.",,;31/Jan/08 4:30 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,355622400,,,,,,12435,false,mark.fisher(mark.fisher),,,,0|i02qdb:,15981,15094,,,,,"31/Jan/08 4:32 AM;mark.fisher;The Message now provides an isExpired() method. If the header contains a null expiration (the default), then the Message will never be expired. Otherwise, the expiration is compared with the current time.",,,,,,,,,,,,,,,,,,,,,,
Allow for runtime channel removal.,INT-88,20375,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,wpaciorkowski,wpaciorkowski,30/Jan/08 3:46 AM,31/Jan/08 2:24 AM,10/May/19 2:37 AM,31/Jan/08 2:24 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"ChannelRegistry should allow to unregister selected channels. 
It is needed to clean up, after temporary channel usage (for example, temporary reply-channel).",,;31/Jan/08 2:23 AM;mark.fisher;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,355708800,,,,,2008-01-31 02:24:29.163,12743,false,mark.fisher(mark.fisher),,,,0|i02s3j:,16261,15340,,,,,31/Jan/08 2:24 AM;mark.fisher;The ChannelRegistry now defines an unregisterChannel() method.,,,,,,,,,,,,,,,,,,,,,,
"Add synchronous, blocking channel publisher/requestor",INT-86,20357,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 7:29 AM,26/Feb/08 9:16 AM,10/May/19 2:37 AM,26/Feb/08 9:16 AM,,,,,,,1.0 M2,,,Core,,,,,1,,"This requestor should enable sending a message to a channel and waiting for a reply message on either a temporary replyChannel (backed by a synchronous queue) - or waiting on a shared channel and using the message's correlationId to match. The timeout value for waiting on a reply should be configurable.

While implementing this, a number of other refactorings may be necessary, such as 1) SimpleChannel should support a 0-sized capacity for direct handoff, and 2) the message should support actual reply channel references in addition to replyChannelName.
",,"SimpleChannel can now be backed by a SynchronousQueue. This happens automatically whenever the capacity value is less than or equal to 0 (otherwise, the backing queue will be a LinkedBlockingQueue with the specified capacity).;31/Jan/08 8:59 AM;mark.fisher;3600",The MessageHeader now accepts both 'replyChannel' and 'replyChannelName'. The 'replyChannel' (actual channel reference) will always be given precedence in the DefaultMessageEndpoint's reply logic.;31/Jan/08 9:00 AM;mark.fisher;3600,;20/Feb/08 1:30 AM;mark.fisher;7200,,,,,,,,,,,,21600,7200,14400,66%,21600,7200,14400,,,,,,,,,,,,,,,,,,,,,,,,,,353376000,,,,,,12723,false,mark.fisher(mark.fisher),,,,0|i02s6n:,16275,15352,,,,,"26/Feb/08 9:16 AM;mark.fisher;Added org.springframework.integration.channel.RequestReplyTemplate. This acts as either a synchronous client for asynchronous requests (blocking on a private synchronous channel provided as the 'returnAddress') or as an asynchronous client that passes a replyHandler callback.

If there is a need for a correlationId-matching client that listens to a shared channel, then it should be a separate implementation. In fact it would probably need to be a handler and selector combination within an endpoint - where the selector knows for which correlationIds it is expecting replies. If more than one such client is listening to the same channel, the correlationId-aware selector would allow for preemptive routing in the dispatching phase. We should consider this for M3.
",,,,,,,,,,,,,,,,,,,,,,
Add transaction support for endpoints,INT-85,20356,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 7:10 AM,04/Jul/08 6:02 AM,10/May/19 2:37 AM,04/Jul/08 6:02 AM,,,,,,,1.0 M5,,,Core,,,,,4,,The endpoint should have the option of demarcating a transaction. Any handlers invoked while that endpoint is handling a received message may then participate within that transactional context. Both annotation and namespace-based configuration options should also provide support for this.,,;04/Jul/08 6:00 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,342230400,,,,,,26453,false,mark.fisher(mark.fisher),,,,0|i046lz:,24445,21199,,,,,"07/Apr/08 1:12 AM;mark.fisher;The M3 release provides a new SynchronousChannel so that a handler can execute within the sender's thread, and a pollable-source can be polled within a receiver's thread. These enable transactions to propagate from a sender or receiver to the handler or pollable-source respectively.

In M4, we will enable transactional metadata on the endpoint itself to support the transaction attributes (propagation, etc) for that endpoint's handler. This will be affected by the planned refactorings where an endpoint has an interceptor-chain surrounding the invocation of the handler. The entire process (pre-interceptors -> handler -> post-interceptors) should be handled within a transaction as defined by the endpoint metadata (including any propagation settings).
","04/Jul/08 6:02 AM;mark.fisher;The <transaction-interceptor/> element can be added within the <interceptors/> sub-element of <endpoint/>.

It supports the same transaction attributes as other configuration options in Spring: propagation, isolation, read-only, and rollback rules.
",,,,,,,,,,,,,,,,,,,,,
Add manifest properties for OSGi-compliance,INT-84,20355,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 7:02 AM,28/Feb/08 12:44 AM,10/May/19 2:37 AM,27/Feb/08 2:54 AM,,,,,,,1.0 M2,,,Build,,,,,0,,Add META-INF/MANIFEST.MF files in each module's 'src/main/resources' directory to include Import-Package and Export-Package,,Added initial versions of MANIFEST.MF files (using bnd);26/Feb/08 2:30 PM;mark.fisher;3600,;27/Feb/08 2:50 AM;mark.fisher;1800,,,,,,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,353289600,,,,,,26454,false,mark.fisher(mark.fisher),,,,0|i02vfr:,16803,15820,,,,,"27/Feb/08 2:54 AM;mark.fisher;The initial versions of MANIFEST.MF files are now available in ""spring-integration-core"" and ""spring-integration-adapters"" (under 'src/main/resources/META-INF' in both cases). These contain Import-Package/Export-Package basically as generated by 'bnd', but we will likely fine-tune the use of 'resolution:=optional' and possibly add version info within the M3 timeframe.
",,,,,,,,,,,,,,,,,,,,,,
Modularize the 'adapters' package,INT-83,20354,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 6:58 AM,21/Feb/08 10:22 AM,10/May/19 2:37 AM,21/Feb/08 10:22 AM,,,,,,,1.0 M2,,,Adapters,,,,,0,,"The org.springframework.integration.adapter sub-packages should be moved into a separate module: 'spring-integration-adapters' This will likely require some refactoring and migration to break dependencies.
",,;20/Feb/08 11:36 AM;mark.fisher;10800,Split schemas while maintaining a single namespace.;21/Feb/08 10:18 AM;mark.fisher;21600,,,,,,,,,,,,,21600,0,32400,150%,21600,0,32400,,,,,,,,,,,,,,,,,,,,,,,,,,353808000,,,,,,26455,false,mark.fisher(mark.fisher),,,,0|i05anz:,30934,28047,,,,,"20/Feb/08 11:40 AM;mark.fisher;This also requires a split of the current namespace into 2:
   * one for the ""core"" (channel, endpoint, message-bus, etc.)
   * another for the ""adapters"" (file-source, file-target, jms-source, jms-target, etc.)
","21/Feb/08 10:22 AM;mark.fisher;All adapters have now been migrated to the ""spring-integration-adapters"" project.

Note that there is still a single namespace for both projects (but two separate schemas).

To use support for the adapter in the namespace, provide the following schema location:

xsi:schemaLocation=""http://www.springframework.org/schema/integration
    http://www.springframework.org/schema/integration/spring-integration-adapters-1.0.xsd"">

If the adapter support is not needed, the you can use the following on the last line instead:
    http://www.springframework.org/schema/integration/spring-integration-1.0.xsd

This is subject to change before 1.0 final.
",,,,,,,,,,,,,,,,,,,,,
Define ChannelInterceptor,INT-82,20353,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 6:51 AM,31/Jan/08 2:20 AM,10/May/19 2:37 AM,31/Jan/08 2:20 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"ChannelInterceptors should provide onSend() and onReceive() methods - or possibly preSend/postSend/preReceive/postReceive. The latter would enable the interceptor to be aware of whether the send/receive is successful.

This strategy will provide a foundation for a number of possible extension points including patterns such as Message Store and Wire Tap. Other possibilities include: security, MessageSelector filters, channel-wide Message Transformers, etc.
",,;31/Jan/08 2:15 AM;mark.fisher;9000,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,355708800,,,,,,26456,false,mark.fisher(mark.fisher),,,,0|i02pen:,15825,14998,,,,,"31/Jan/08 2:20 AM;mark.fisher;The ChannelInterceptor interface is now available, and the AbstractMessageChannel base class invokes the methods (preSend/postSend/preReceive/postReceive). ChannelInterceptors can be added to a channel by calling setInterceptors() or individually with addInterceptor().",,,,,,,,,,,,,,,,,,,,,,
Add clear and purge methods to the channel,INT-81,20352,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,29/Jan/08 6:44 AM,31/Jan/08 4:36 AM,10/May/19 2:37 AM,31/Jan/08 4:36 AM,,,,,,,1.0 M2,,,Core,,,,,0,,The 'clear' method should remove all messages from the channel while 'purge' should remove only expired messages.,,;31/Jan/08 4:33 AM;mark.fisher;5400,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,355622400,,,,,,12702,false,mark.fisher(mark.fisher),,,,0|i02qdj:,15982,15095,,,,,"31/Jan/08 4:36 AM;mark.fisher;These methods have been added to channel. The clear() method removes all messages from the channel, and the purge() method removes any expired messages. The purge method takes a snapshot of the channel contents before checking for expired messages. Therefore it is possible that an expired message is received while the purge operation is active. Both methods return the list of Messages that have been removed.",,,,,,,,,,,,,,,,,,,,,,
Make the xsd file available online,INT-80,20261,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,nwloka,nwloka,24/Jan/08 5:05 PM,29/Jan/08 6:41 AM,10/May/19 2:37 AM,29/Jan/08 6:41 AM,1.0 M1,,,,,,,,,Core,,,,,0,,Please make the xsd schema file for Spring Integration available under http://www.springframework.org/schema/integration/spring-integration-1.0.xsd.,,;29/Jan/08 6:40 AM;mark.fisher;300,,,,,,,,,,,,,,300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,355795200,,,,,2008-01-29 06:41:39.626,26457,false,mark.fisher(mark.fisher),,,,0|i03f13:,19977,3396,,,,,"29/Jan/08 6:41 AM;mark.fisher;Thanks for pointing this out.

The XSD file is now available at: http://www.springframework.org/schema/integration/spring-integration-1.0.xsd

-Mark",,,,,,,,,,,,,,,,,,,,,,
Modify the .sh and .bat scripts so that JARs (and their versions) are not listed,INT-79,20238,20235,Sub-task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,23/Jan/08 1:20 AM,25/Feb/08 9:42 AM,10/May/19 2:37 AM,25/Feb/08 9:42 AM,,,,,,,1.0 M2,,,Samples,,,,,0,,The .sh and .bat scripts should use 'find' to generate the classpath rather than explicitly listing the JARs.,,;25/Feb/08 9:41 AM;mark.fisher;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,26458,false,mark.fisher(mark.fisher),,,,0|i01ns7:,9730,9761,,,,,"25/Feb/08 9:42 AM;mark.fisher;For both cafeDemo.sh and cafeDemo.bat, the classpath is now dynamically generated from all JARs in the ""lib"" and ""dist"" directories.
",,,,,,,,,,,,,,,,,,,,,,
Move the 'samples' out of 'resources',INT-78,20235,,Task,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Blocker,Fixed,mark.fisher,mark.fisher,mark.fisher,23/Jan/08 1:08 AM,28/Feb/08 12:41 AM,10/May/19 2:37 AM,27/Feb/08 2:50 AM,,,,,,,1.0 M2,,,Build,,,,,0,,"After the package build is updated, the 'samples' directory should no longer be included within 'build-spring-integration/resources'.",,;27/Feb/08 2:47 AM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,3600,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,353289600,,,,,,26459,false,mark.fisher(mark.fisher),,,,0|i02v3b:,16747,15769,,,,,"27/Feb/08 2:50 AM;mark.fisher;The 'samples' content is now located within 'spring-integration-samples/scripts'. When packaging, this is contributed as the top-level 'samples' directory by the 'package' target in 'spring-integration-samples/build.xml'.",,,,,,,,,,,,,,,,,,,,,,
Add 'handler-chain' element to the namespace,INT-77,20206,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Jan/08 10:59 AM,12/Feb/08 8:54 PM,10/May/19 2:37 AM,12/Feb/08 8:54 PM,,,,,,,1.0 M2,,,Core,,,,,0,,"The 'handler-chain' element should accept 1 or more 'handler' sub-elements and create a HandlerChain instance. The 'endpoint' element should then accept both 'handler' and 'handler-chain' sub-elements.
",,;12/Feb/08 8:53 PM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26460,false,mark.fisher(mark.fisher),,,,0|i02v67:,16760,15779,,,,,12/Feb/08 8:54 PM;mark.fisher;The <handler-chain> element is now available.,,,,,,,,,,,,,,,,,,,,,,
Add namespace support for 'selector' on the 'endpoint' element,INT-76,20040,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Jan/08 8:41 AM,13/Feb/08 1:26 AM,10/May/19 2:37 AM,13/Feb/08 1:26 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"MessageSelectors should be configurable on the 'endpoint' element. For now, this can be as simple as: <selector ref=""someSelectorBeanName""/>. In the future, we could potentially support expression language, pointers to dynamic language scripts, etc.",,;12/Feb/08 8:56 PM;mark.fisher;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,354585600,,,,,,26461,false,mark.fisher(mark.fisher),,,,0|i02lmn:,15213,14461,,,,,13/Feb/08 1:26 AM;mark.fisher;The <selector> element is now available within <endpoint>,,,,,,,,,,,,,,,,,,,,,,
ConcurrentHandler should handle replies,INT-75,20041,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Jan/08 6:47 AM,22/Jan/08 12:25 PM,10/May/19 2:37 AM,22/Jan/08 12:25 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"Currently, the DefaultMessageEndpoint handles reply messages when it invokes a MessageHandler's handle method directly. However, since ConcurrentHandler's handle is invoked asynchronously (internally it calls 'execute(handlerTask)' on its executor and returns immediately), anytime the endpoint's handler is an instance of ConcurrentHandler, it will always receive a null return value. The DefaultMessageEndpoint could instead provide a ReplyHandler callback interface to the ConcurrentHandler.
",,,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,356400000,,,,,,26462,false,mark.fisher(mark.fisher),,,,0|i02v6n:,16762,15781,,,,,"22/Jan/08 12:25 PM;mark.fisher;The ReplyHandler callback is now available, and the DefaultMessageEndpoint configures this on the ConcurrentHandlers.",,,,,,,,,,,,,,,,,,,,,,
Add queueCapacity and keepAliveSeconds to the ConcurrencyPolicy - including namepsace support,INT-74,20104,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Jan/08 10:11 AM,20/Jan/08 12:08 PM,10/May/19 2:37 AM,20/Jan/08 12:08 PM,,,,,,,1.0 M1,,,Core,,,,,0,,These properties should be configurable per endpoint (for the thread-pool executor of a ConcurrentHandler). Namespace support will require adding these attributes ('queue-capacity' and 'keep-alive') to the 'concurrency' element and the corresponding logic to the EndpointParser.,,,,,,,,,,,,,,,,9000,0,9000,100%,9000,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,356572800,,,,,,26463,false,mark.fisher(mark.fisher),,,,0|i02vbr:,16785,15802,,,,,20/Jan/08 12:08 PM;mark.fisher;Added the 'queueCapacity' and 'keepAliveSeconds' properties to ConcurrencyPolicy and added the 'queue-capacity' and 'keep-alive' attributes to the 'concurrency' element. Also refactored the DefaultMessageEndpoint and ConcurrentHandler to delegate to the ConcurrencyPolicy without duplicating properties.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for configuration of 'dispatcher-policy' as a sub-element of 'channel',INT-73,20105,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Jan/08 5:40 PM,20/Jan/08 12:13 PM,10/May/19 2:37 AM,20/Jan/08 12:13 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"DispatcherPolicy properties should be configurable when using the XML namespace. Perhaps add getDispatcherPolicy() to the MessageChannel interface (then add the 'publishSubscribe' - or broadcast - boolean property to the DispatcherPolicy instead of on the channel itself). The DispatcherPolicy should probably be refactored as an interface, and the MessageDispatcher implementations could then be configured based on the policy. For example: new DefaultMessageDispatcher(dispatcherPolicy). By encapsulating the policy, the DefaultMessageDispatcher would also have less duplication of those property values. The no-arg constructor would simply create a new instance of the DispatcherPolicy with all default values.",,,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,356572800,,,,,,12760,false,mark.fisher(mark.fisher),,,,0|i02vev:,16799,15816,,,,,"20/Jan/08 12:13 PM;mark.fisher;Added namespace support for 'dispatcher-policy' as a sub-element of the 'channel' element.

MessageChannel now defines getDispatcherPolicy() and no longer has the direct boolean property for 'isPublishSubscribe()'.

The DefaultMessageDispatcher is not concerned with the policy itself. Instead, the DispatcherTasks to which the dispatcher delegates are able to access the metadata by calling channel.getDispatcherPolicy().",,,,,,,,,,,,,,,,,,,,,,
Choose best match when multiple @Handler methods are available,INT-72,20039,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,18/Jan/08 5:41 AM,13/Sep/10 5:55 PM,10/May/19 2:37 AM,18/Nov/08 5:54 AM,,,,,,,1.0 Final,,,Core,,,,,1,,"If an annotated endpoint contains more than one method with the @Handler annotation, choose the best match. Do not add them to a HandlerChain as is done currently.",,;18/Nov/08 5:45 AM;mark.fisher;43200,,,,,,,,,,,,,,43200,0,43200,100%,43200,0,43200,,,,,,,,,,,,INT-191,,,,,,,,,,,,,,330393600,,,,,,26464,false,mark.fisher(mark.fisher),,,,0|i052hr:,29610,25437,,,,,22/Jan/08 12:26 PM;mark.fisher;Moving to 1.0-M2,25/Feb/08 5:30 AM;mark.fisher;Moving to M4 and reconsidering the rationale in general.,21/May/08 6:47 AM;mark.fisher;This will be part of some other handler refactoring early in M5 development.,"05/Jul/08 7:26 AM;mark.fisher;The approach here will be determined after making some changes to the role of class-level vs. method-level annotations.

We will most likely provide a HandlerMethodResolver strategy with the default implementation based on the Message payload type, but we also should accommodate HandlerChain and the optional use of @Ordered annotations.",18/Aug/08 6:54 AM;mark.fisher;Moving to RC1 to be considered along with INT-191,18/Oct/08 2:36 PM;mark.fisher;See comments for INT-191.,"18/Nov/08 5:54 AM;mark.fisher;MessageMappingMethodInvoker now delegates to a HandlerMethodResolver, and when multiple Methods are available for an adapter (either matching an annotation or 'methodName'), the PayloadTypeMatchingHandlerMethodResolver will be used. It determines the closest match based on the Message payload type at runtime.

See the commit log for details:
https://fisheye.springframework.org/changelog/spring-integration/?cs=1712
",,,,,,,,,,,,,,,,
Rename invalidMessageChannel to errorChannel for the MessageBus,INT-71,20099,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,16/Jan/08 8:24 AM,16/Jan/08 8:39 AM,10/May/19 2:37 AM,16/Jan/08 8:39 AM,,,,,,,1.0 M1,,,Core,,,,,0,,"The name should be more generic since any ErrorMessage could be sent to the channel. A PayloadTypeRouter could always be added for branching to more specific channels based on type (e.g. MessageHandlingException -> ""invalidMessageChannel"", MessageDeliveryException -> ""deadMessageChannel"").
",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,356918400,,,,,,26465,false,mark.fisher(mark.fisher),,,,0|i02s9r:,16289,15365,,,,,16/Jan/08 8:39 AM;mark.fisher;MessageBus and ChannelRegistry now have an 'errorChannel' property rather than 'invalidMessageChannel'. The XSD now defines the 'error-channel' attribute for MessageBusParser rather than 'invalid-message-channel'.,,,,,,,,,,,,,,,,,,,,,,
Implement MessagePublishingErrorHandler,INT-70,20102,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:43 PM,15/Jan/08 5:44 PM,10/May/19 2:37 AM,15/Jan/08 5:44 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"This implementation of ErrorHandler should expose a configurable message channel property to which it will send ErrorMessages from within its implementation of handle(Throwable t). If the channel is null however, the error should be logged at warn level. This error handler should be the default configured on the messagingTaskScheduler from within the MessageBus. The MessageBus can pass its 'invalidMessageChannel'. We might want to be more coarse grained in the future, and then add a payloadTypeRouter for different types of exception - MessageHandlingException, MessageDeliveryException, other non-recognized RuntimeExceptions, etc.",,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26466,false,mark.fisher(mark.fisher),,,,0|i05b3z:,31006,28219,,,,,15/Jan/08 5:44 PM;mark.fisher;Added MessagePublishingErrorHandler,,,,,,,,,,,,,,,,,,,,,,
Provide an ErrorHandler strategy,INT-69,20092,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:39 PM,15/Jan/08 5:44 PM,10/May/19 2:37 AM,15/Jan/08 5:44 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"The ErrorHandler strategy is a generic handler for exceptions, but it will be particularly useful for catching exceptions thrown by Runnables within thread pool executors.",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26467,false,mark.fisher(mark.fisher),,,,0|i02p93:,15800,14977,,,,,15/Jan/08 5:44 PM;mark.fisher;Added the ErrorHandler interface with a single method: handle(Throwable t).,,,,,,,,,,,,,,,,,,,,,,
Provide a PooledMessageHandler to replace the endpoint executor ,INT-68,20097,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:29 PM,15/Jan/08 5:30 PM,10/May/19 2:37 AM,15/Jan/08 5:30 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"The PooledMessageHandler will be ""just another handler"" as far as the dispatcher is concerned, yet it encapsulates a threadPoolExecutor with a configurable 'core' and 'max' size (these properties continue to be configurable on a per-handler basis, with the ConcurrencyPolicy metadata object).",,,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26468,false,mark.fisher(mark.fisher),,,,0|i05b4f:,31008,28221,,,,,15/Jan/08 5:30 PM;mark.fisher;The EndpointExecutor has now been replaced by PooledMessageHandler.,,,,,,,,,,,,,,,,,,,,,,
Provide a MessagingTaskSchedulerAware callback interface,INT-67,20098,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:24 PM,15/Jan/08 5:37 PM,10/May/19 2:37 AM,15/Jan/08 5:37 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The interface should define a single method: setMessagingTaskScheduler(). In addition to the DefaultMessageDispatcher, any source adapter that implements this callback should then have the scheduler provided by the MessageBus when that adapter is registered via the registerSourceAdapter() method.",,,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26469,false,mark.fisher(mark.fisher),,,,0|i05b47:,31007,28220,,,,,15/Jan/08 5:37 PM;mark.fisher;MessagingTaskSchedulerAware is now available. The DefaultMessageDispatcher and PollingSourceAdapter both implement this callback.,,,,,,,,,,,,,,,,,,,,,,
Refactor MessageBus to delegate to the MessagingTaskScheduler abstraction,INT-66,20101,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:20 PM,15/Jan/08 5:35 PM,10/May/19 2:37 AM,15/Jan/08 5:35 PM,,,,,,,1.0 M1,,,,,,,,0,,The MessageBus should use a provided MessagingTaskScheduler or create a default instance if one is not provided. The scheduler should be passed to the dispatchers when created by the MessageBus.,,,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26470,false,mark.fisher(mark.fisher),,,,0|i02v7b:,16765,15784,,,,,"15/Jan/08 5:35 PM;mark.fisher;The MessageBus now delegates to an instance of MessagingTaskScheduler. The scheduler may be provided, else the current default will be a SimpleMessagingTaskScheduler.",,,,,,,,,,,,,,,,,,,,,,
Provide a MessagingTaskScheduler abstraction,INT-65,20091,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:16 PM,15/Jan/08 5:18 PM,10/May/19 2:37 AM,15/Jan/08 5:18 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"The MessagingTaskScheduler abstraction should extend Spring's SchedulingTaskExecutor. The default implementation - SimpleMessagingTaskScheduler (for 1.0-M1) - can rely on a scheduledThreadPoolExecutor for polling-tasks based on initialDelay, period, and fixedRate (true|false). A simple MessagingTask interface should extend Runnable while providing a getSchedule method. The 'Schedule' is just a marker interface - with the current implementation being PollingSchedule. In the future, we can add a quartz-based scheduler that uses either PollingSchedule or CronSchedule (or something along those lines).",,,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26471,false,mark.fisher(mark.fisher),,,,0|i046vr:,24489,21243,,,,,"15/Jan/08 5:18 PM;mark.fisher;Added MessagingTaskScheduler, AbstractMessagingTaskScheduler, and SimpleMessagingTaskScheduler. Also added the MessagingTask and Schedule interfaces - with a PollingSchedule implementation of the latter.",,,,,,,,,,,,,,,,,,,,,,
Target adapters should just implement MessageHandler,INT-64,20100,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:03 PM,15/Jan/08 5:04 PM,10/May/19 2:37 AM,15/Jan/08 5:04 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The TargetAdapter class hierarchy should ultimately implement MessageHandler. This way the adapters are simply registered as handlers with the bus (no longer a separate registerTargetAdapter method). This unification should simplify the message bus (lifecycle management, etc), the dispatchers, and the parsers.",,,,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26472,false,mark.fisher(mark.fisher),,,,0|i05b4v:,31010,28223,,,,,15/Jan/08 5:04 PM;mark.fisher;AbstractTargetAdapter now implements MessageHandler. The MessageBus no longer needs a separate registerTargetAdapter method.,,,,,,,,,,,,,,,,,,,,,,
Modify channel namespace support for point-to-point and publish-subscribe channels,INT-63,20093,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Jan/08 5:00 PM,15/Jan/08 7:25 PM,10/May/19 2:37 AM,15/Jan/08 7:25 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"Rather than channel, the elements should be <point-to-point-channel/> and <publish-subscribe-channel/>.",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,12697,false,mark.fisher(mark.fisher),,,,0|i02s47:,16264,15343,,,,,"15/Jan/08 7:25 PM;mark.fisher;Added a 'publish-subscribe' boolean attribute for the 'channel' element - favoring the more concise name for now (rather than new element names). The attribute is optional - with a default value of ""false"" to indicate a point-to-point-channel.",,,,,,,,,,,,,,,,,,,,,,
Add byte stream target adapter,INT-62,20103,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Jan/08 10:10 AM,16/Jan/08 6:46 AM,10/May/19 2:37 AM,16/Jan/08 6:46 AM,,,,,,,1.0 M1,,,Adapters,,,,,0,,This adapter should use a BufferedOutputStream.,,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,356918400,,,,,,26473,false,mark.fisher(mark.fisher),,,,0|i02v6v:,16763,15782,,,,,16/Jan/08 6:46 AM;mark.fisher;Added ByteStreamTargetAdapter,,,,,,,,,,,,,,,,,,,,,,
Add character stream target adapter,INT-61,20088,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Jan/08 9:02 AM,12/Jan/08 10:09 AM,10/May/19 2:37 AM,12/Jan/08 10:09 AM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"This adapter should use a BufferedWriter to write String-based payload objects (or call toString on non-String based payloads).
The 'bufferSize' should be optionally configurable, and the adapter should also provide a 'shouldAppendNewLine' option (false by default).",,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357264000,,,,,,26474,false,mark.fisher(mark.fisher),,,,0|i02v53:,16755,15775,,,,,12/Jan/08 10:09 AM;mark.fisher;Implemented CharacterStreamTargetAdapter. See CharacterStreamTargetAdapterTests for example usage.,,,,,,,,,,,,,,,,,,,,,,
Add RMI target adapter,INT-60,20038,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Jan/08 8:27 AM,07/Mar/08 6:47 AM,10/May/19 2:37 AM,07/Mar/08 6:47 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,"This adapter will wrap an RmiProxyFactoryBean (at least initially - may consider lower level implementation at some point) that sends to a remote RMI source adapter based on a common interface. The only required configuration would be the 'serverName' so that it can construct the 'serviceUrl' as something like ""rmi://[serverName]:1099/spring-integration-rmi-source"" (optional properties would include: port, serviceName, or when necessary the full 'serviceUrl').
",,;07/Mar/08 5:39 AM;mark.fisher;14400,;07/Mar/08 6:43 AM;mark.fisher;7200,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,352512000,,,,,,26475,false,mark.fisher(mark.fisher),,,,0|i01xjr:,11312,11288,,,,,25/Feb/08 7:32 AM;mark.fisher;Moving to M3,"07/Mar/08 6:47 AM;mark.fisher;RmiTargetAdapter is now available. It requires the entire URL as a String in its constructor. Although when using the namespace support, only the following is required (the ""serviceName"" for the URL is generated with a prefix defined in RmiSourceAdapter):
   <rmi-target local-channel=""localChannel"" remote-channel=""remoteChannel"" host=""someHost""/>
",,,,,,,,,,,,,,,,,,,,,
Add RMI source adapter,INT-59,20032,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Jan/08 7:59 AM,19/Mar/08 4:18 AM,10/May/19 2:37 AM,19/Mar/08 4:18 AM,,,,,,,1.0 M3,,,Adapters,,,,,0,,The source adapter should be a convenience wrapper for an RmiServiceExporter. Only required configuration would be the channel.,,;07/Mar/08 6:39 AM;mark.fisher;10800,,,,,,,,,,,,,,21600,10800,10800,50%,21600,10800,10800,,,,,,,,,,,,,,,,,,,,,,,,,,351475200,,,,,,26476,false,mark.fisher(mark.fisher),,,,0|i01xjz:,11313,11289,,,,,25/Feb/08 7:32 AM;mark.fisher;Moving to M3,"19/Mar/08 4:18 AM;mark.fisher;RmiSourceAdapter is now available - including namespace support. For example:
    <rmi-source id=""rmiSourceAdapter"" channel=""someChannel""/>
",,,,,,,,,,,,,,,,,,,,,
Enable registration of an async taskExecutor with the applicationEventMulticaster,INT-58,20036,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Jan/08 1:42 PM,20/May/08 7:33 AM,10/May/19 2:37 AM,20/May/08 7:33 AM,,,,,,,1.0 M4,,,Core,,,,,1,,"The MessageBus should be capable of providing its taskExecutor to the applicationEventMulticaster so that ApplicationEvents are passed asynchronously.
",,;20/May/08 7:27 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,346118400,,,,,,26477,false,mark.fisher(mark.fisher),,,,0|i03ncn:,21325,17913,,,,,"20/May/08 7:33 AM;mark.fisher;Added a ""configure-async-event-multicaster"" attribute to the <message-bus/> element and a corresponding 'configureAsynEventMulticaster' property to the MessageBus class.

When set to 'true', the 'taskScheduler' of the MessageBus will also be configured as the TaskExecutor for the ApplicationContext's ApplicationEventMulticaster.

However, the default value for this property is 'false'.",,,,,,,,,,,,,,,,,,,,,,
Add adapter for InputStream of character data,INT-57,20096,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Jan/08 10:40 AM,11/Jan/08 12:38 PM,10/May/19 2:37 AM,11/Jan/08 12:38 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,This adapter should use a BufferedReader and be non-blocking so that it can be polled - i.e. check reader.ready() prior to calling readLine().,,,,,,,,,,,,,,,,7200,0,9000,125%,7200,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,357350400,,,,,,26478,false,mark.fisher(mark.fisher),,,,0|i04713:,24513,21267,,,,,11/Jan/08 12:38 PM;mark.fisher;CharacterStreamSourceAdapter is now available. Its constructor accepts an InputStream.,,,,,,,,,,,,,,,,,,,,,,
Add adapter for InputStream of bytes,INT-56,20095,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Jan/08 10:37 AM,11/Jan/08 2:39 PM,10/May/19 2:37 AM,11/Jan/08 2:39 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"This adapter should use a BufferedInputStream, and provide a 'bytesPerMessage' property. It should also expose 'setTruncate(boolean)' .",,,,,,,,,,,,,,,,7200,0,9000,125%,7200,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,357350400,,,,,,26479,false,mark.fisher(mark.fisher),,,,0|i02v4n:,16753,15773,,,,,11/Jan/08 2:39 PM;mark.fisher;ByteStreamSourceAdapter is now available.,,,,,,,,,,,,,,,,,,,,,,
Implement PayloadTypeSelector,INT-55,20084,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Jan/08 6:31 PM,09/Jan/08 6:46 PM,10/May/19 2:37 AM,09/Jan/08 6:46 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"This implementation of the MessageSelector strategy should allow for a configurable list of ""acceptedTypes"" (with a minimum of 1).",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,357523200,,,,,,26480,false,mark.fisher(mark.fisher),,,,0|i02pbb:,15810,14986,,,,,09/Jan/08 6:46 PM;mark.fisher;The PayloadTypeSelector is now available.,,,,,,,,,,,,,,,,,,,,,,
DefaultMessageHandlerAdapter should be able to invoke methods with Message as the parameter type,INT-54,20083,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Jan/08 7:41 AM,09/Jan/08 7:51 AM,10/May/19 2:37 AM,09/Jan/08 7:51 AM,,,,,,,1.0 M1,,,Core,,,,,0,,"When the method being adapted is expecting a Message as its parameter, then the handler should not use the MessageMapper upon invocation. The DefaultMessageHandlerCreator should also be able to configure its handler accordingly since it does know the expected parameter type.
",,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357523200,,,,,,12479,false,mark.fisher(mark.fisher),,,,0|i05b6f:,31017,28235,,,,,"09/Jan/08 7:51 AM;mark.fisher;DefaultMessageHandlerAdapter now supports methods expecting a Message-typed parameter. The adapter now provides a 'shouldUseMapperOnInvocation' parameter, and when a Method expects a Message-typed parameter, the value should be 'false'. The default is 'true'. Also, DefaultMessageHandlerCreator will configure the DefaultMessageHandlerAdapter properly depending upon the expected parameter type of the target method.",,,,,,,,,,,,,,,,,,,,,,
Move MessageSelector awareness to the dispatcher and message-receiving task executors,INT-53,20090,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Jan/08 5:15 AM,12/Jan/08 8:27 AM,10/May/19 2:37 AM,12/Jan/08 8:27 AM,,,,,,,1.0 M1,,,Core,,,,,0,,"The MessageChannel should not itself provide the functionality for MessageSelector (as it does currently with the receive(..) calls). Rather the message-receiving executors should provide this information (part of the subscription process), and then the dispatcher should only send a Message to receivers whose MessageSelector(s) accept it. If no selectors are provided, then all messages are accepted implicitly.",,,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,357523200,,,,,,12467,false,mark.fisher(mark.fisher),,,,0|i05b67:,31016,28231,,,,,"09/Jan/08 7:57 PM;mark.fisher;MessageSelectors may now be added to the MessageReceivingExecutor. The acceptMessage(Message) method will return false if any of the provided selectors do not accept the message. The DefaultMessageDispatcher now receives the boolean value and acts accordingly. For example, a non-broadcasting dispatcher will continue to try the other executors until either 1 accepts, all deny (by returning false), or the rejectionLimit is reached.",,,,,,,,,,,,,,,,,,,,,,
Refactor UnicastMessageDispatcher so that outer loop retries up to the rejection-limit.,INT-52,20066,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jan/08 11:18 AM,07/Jan/08 11:38 AM,10/May/19 2:37 AM,07/Jan/08 11:38 AM,,,,,,,1.0 M1,,,Core,,,,,0,,"The dispatcher's inner loop should iterate each of its executors. If all of them fail after the iteration, then the attempt counter should be incremented, and the dispatcher should wait for the specified 'retryInterval'. The outer loop should repeat until either an executor finally accepts the message or attempts exceeds the configured 'rejectionLimit'.",,,,,,,,,,,,,,,,5400,0,7200,133%,5400,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26481,false,mark.fisher(mark.fisher),,,,0|i05b6v:,31019,28238,,,,,"07/Jan/08 11:38 AM;mark.fisher;The UnicastMessageDispatcher now iterates over each of its executors, and then increments the attempts counter if unable to send to any of those executors. The outer loop will continue until either the message is successfully sent or the attempts counter exceeds the 'rejectionLimit' - whichever occurs first.",,,,,,,,,,,,,,,,,,,,,,
Handle Dispatcher errors by sending to the InvalidMessageChannel.,INT-51,20089,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jan/08 11:13 AM,07/Jan/08 11:33 AM,10/May/19 2:37 AM,07/Jan/08 11:33 AM,,,,,,,1.0 M1,,,Core,,,,,0,,The DispatcherTask's run method should include a try/catch block. Any Throwable that is caught should be sent to the InvalidMessageChannel (if available).,,,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26482,false,mark.fisher(mark.fisher),,,,0|i02v4v:,16754,15774,,,,,07/Jan/08 11:33 AM;mark.fisher;The bus now sends an ErrorMessage to the InvalidMessageChannel from its new handleDispatchError(..) method.,,,,,,,,,,,,,,,,,,,,,,
Add ErrorMessage,INT-50,20082,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jan/08 10:21 AM,07/Jan/08 10:21 AM,10/May/19 2:37 AM,07/Jan/08 10:21 AM,,,,,,,1.0 M1,,,Core,,,,,0,,The ErrorMessage should simply wrap a Throwable-typed payload.,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26483,false,mark.fisher(mark.fisher),,,,0|i02vdr:,16794,15811,,,,,07/Jan/08 10:21 AM;mark.fisher;ErrorMessage is now available. It accepts a payload of type 'Throwable'.,,,,,,,,,,,,,,,,,,,,,,
Add default id generator to GenericMessage,INT-49,20085,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,07/Jan/08 10:16 AM,07/Jan/08 10:20 AM,10/May/19 2:37 AM,07/Jan/08 10:20 AM,,,,,,,1.0 M1,,,Core,,,,,0,,"By providing a default ID generator strategy (RandomGuidUidGenerator) to the GenericMessage class, we can then expose a simple payload-only constructor.",,,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26484,false,mark.fisher(mark.fisher),,,,0|i02pbr:,15812,14987,,,,,"07/Jan/08 10:20 AM;mark.fisher;The default ID generator is now provided for GenericMessage, and the new payload-only constructor is now available.",,,,,,,,,,,,,,,,,,,,,,
Add support for destination name to JmsPollingSourceAdapter including namespace support,INT-48,20067,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jan/08 10:00 AM,07/Jan/08 6:07 PM,10/May/19 2:37 AM,07/Jan/08 6:07 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,The 'destinationName' property (or 'destination-name' attribute for namespace-based configuration) should be available for the JmsPollingSourceAdapter as it is already for the JmsMessageDrivenSourceAdapter.,,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26485,false,mark.fisher(mark.fisher),,,,0|i02vaf:,16779,15797,,,,,07/Jan/08 6:07 PM;mark.fisher;The 'destinationName' property is now available on the JmsPollingSourceAdapter. It is also supported by the JmsSourceAdapterParser.,,,,,,,,,,,,,,,,,,,,,,
Implement MulticastDispatcher (and prerequisite refactoring),INT-47,20094,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jan/08 9:02 AM,15/Jan/08 5:10 PM,10/May/19 2:37 AM,15/Jan/08 5:10 PM,,,,,,,1.0 M1,,,Core,,,,,0,,"Whereas the UnicastDispatcher sends messages to a single endpoint (potentially among multiple subscribers), this dispatcher should send to all subscribed endpoints that accept the message within the specified constraints (timeout, max-retries, etc). This will also involve some core refactoring to accommodate the subscription activation based on common consumer policies. In other words, if 3 endpoints are subscribed to the same channel with a multicast dispatcher, then the consumer policies must match (since they will be sharing the dispatcher and therefore a single message-retriever). Essentially this means that a consumer policy for multicast is 1-per-channel whereas with unicast the policies can be per-endpoint. Also, the current PointToPointChannel implementation might need to be renamed since point-to-point vs. publish/subscribe is actually determined by the dispatcher in use - not the channel itself. It is actually a channel + its (default) consumer policy that determines a point-to-point channel or publish/subscribe channel. An endpoint can override the policy - only in the case that the channel is configured with a unicast dispatcher (a point-to-point-channel). This enables the EIP notion of ""competing consumers"".",,,,,,,,,,,,,,,,28800,0,34200,118%,28800,0,34200,,,,,,,,,,,,,,,,,,,,,,,,,,357004800,,,,,,26486,false,mark.fisher(mark.fisher),,,,0|i05b4n:,31009,28222,,,,,"15/Jan/08 5:10 PM;mark.fisher;Dispatchers are now per-channel, and if the channel is a broadcaster (publish-subscribe), then all handlers registered with that dispatcher will follow the same Schedule. The ConsumerPolicy has also been split up into DispatcherPolicy (relevant information for the dispatcher: receive-timeout, max-messages-per-task, rejection-limit, and retry-interval) and a Subscription metadata object. The Subscription metadata includes Schedule and channel (or channelName as a fallback). The optional concurrencyPolicy may also be provided on a per-handler basis.",,,,,,,,,,,,,,,,,,,,,,
Implement PayloadTypeRouter,INT-46,20086,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Jan/08 8:14 AM,07/Jan/08 1:00 PM,10/May/19 2:37 AM,07/Jan/08 1:00 PM,,,,,,,1.0 M1,,,Core,,,,,0,,This router implementation should allow for a configurable map where keys are types and values are MessageChannel references (perhaps channel names should be accepted as values also).,,,,,,,,,,,,,,,,5400,1800,3600,66%,5400,1800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26487,false,mark.fisher(mark.fisher),,,,0|i02v9z:,16777,15795,,,,,"07/Jan/08 1:00 PM;mark.fisher;Implemented PayloadTypeRouter and added PayloadTypeRouterTests. The router accepts a 'channelMappings' property of type Map<Class<?>, MessageChannel> (the channel-name mapping is not supported - at least not yet).

The router also accepts a 'defaultChannel' property for cases where the Message's payload type is not in the map. If 'defaultChannel' is null (the default), then the Message will be dropped (with a WARN level log message).
",,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for JmsSourceAdapter,INT-45,20087,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Jan/08 1:10 PM,07/Jan/08 6:06 PM,10/May/19 2:37 AM,07/Jan/08 6:06 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The 'jms-source' element should accept the following attributes: jms-template, connection-factory, destination, destination-name, channel, and poll-period. Channel should be required according to the XSD.

If poll-period is not provided, then a JmsMessageDrivenSourceAdapter is used (instead of JmsPollingSourceAdapter). In that case, the parser should enforce that a 'connection-factory' is available and either a 'destination' or 'destination-name' is provided as well. For the polling adapter, the 'jms-template' reference is sufficient (but providing 'connection-factory' + 'destination' is also an option).",,,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,357696000,,,,,,26488,false,mark.fisher(mark.fisher),,,,0|i02vbb:,16783,15800,,,,,07/Jan/08 6:06 PM;mark.fisher;Implemented JmsSourceAdapterParser. Parses the 'jms-source' element to build either a JmsPollingSourceAdapter (if the 'poll-period' attribute is provided) or a JmsMessageDrivenSourceAdapter.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for JmsTargetAdapter,INT-44,20072,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Jan/08 1:01 PM,04/Jan/08 1:40 PM,10/May/19 2:37 AM,04/Jan/08 1:40 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The 'jms-target' element should accept the following attributes: jms-template, connection-factory, destination, channel.

The parser should enforce that either a 'jms-template' reference is provided - else both 'connection-factory' and 'destination'.",,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357955200,,,,,,26489,false,mark.fisher(mark.fisher),,,,0|i02vfz:,16804,15821,,,,,04/Jan/08 1:40 PM;mark.fisher;Implemented the JmsTargetAdapterParser and added the 'jms-target' element in the integration namespace.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for FileTargetAdapter,INT-43,20080,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Jan/08 12:59 PM,04/Jan/08 1:14 PM,10/May/19 2:37 AM,04/Jan/08 1:14 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,The 'file-target' element should require the attributes necessary to configure a FileTargetAdapter: channel and directory.,,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357955200,,,,,,26490,false,mark.fisher(mark.fisher),,,,0|i02v6f:,16761,15780,,,,,04/Jan/08 1:14 PM;mark.fisher;Implemented the FileTargetAdapterParser and added the 'file-target' element to the spring-integration XSD.,,,,,,,,,,,,,,,,,,,,,,
Provide namespace support for FileSourceAdapter,INT-42,20065,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,04/Jan/08 12:58 PM,04/Jan/08 1:12 PM,10/May/19 2:37 AM,04/Jan/08 1:12 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The 'file-source' element should require the attributes necessary for configuring a FileSourceAdapter: directory, channel, poll-period.",,,,,,,,,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,357955200,,,,,,26491,false,mark.fisher(mark.fisher),,,,0|i0470n:,24511,21265,,,,,04/Jan/08 1:12 PM;mark.fisher;Implemented the FileSourceAdapterParser and added the 'file-source' element to the spring-integration XSD.,,,,,,,,,,,,,,,,,,,,,,
Create an event-driven JMS source adapter,INT-41,20068,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,02/Jan/08 8:13 AM,04/Jan/08 1:48 PM,10/May/19 2:37 AM,04/Jan/08 1:48 PM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The JMS source adapter will encapsulate an instance of DefaultMessageListenerContainer (by default) and a MessageListener that passes the JMS Message payload within a generic Message to the specified output MessageChannel. It should also be possible to provide other versions of the message listener container via setter. Even though a polling dispatcher task will not be required for this source, the task execution should be coordinated by the MessageBus.",,,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,357955200,,,,,,26492,false,mark.fisher(mark.fisher),,,,0|i0471r:,24516,21270,,,,,"04/Jan/08 1:48 PM;mark.fisher;Implemented the JmsMessageDrivenSourceAdapter. By providing a 'connectionFactory' and 'destination' (or 'destinationName'), it will create an instance of DefaultMessageListenerContainer. The MessageBus now recognizes any source adapter that implements Lifecycle (such as this one), so that it can cascade calls to start() and stop(). The JmsMessageDrivenSourceAdapter in turn invokes start() and stop() on its message listener container. The adapter does expose a setter for the 'taskExecutor', so this should be revisited when the bus' dispatcher executor conforms to the TaskExecutor abstraction.
",,,,,,,,,,,,,,,,,,,,,,
Move all subscription management responsibilities into the MessageBus,INT-40,20061,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Dec/07 6:21 AM,09/Dec/07 6:22 AM,10/May/19 2:37 AM,09/Dec/07 6:22 AM,,,,,,,0.5,,,Core,,,,,0,,"Subscriptions should be activated by the MessageBus based on endpointName, channelName, and consumer policy. The bus should manage a dispatcher executor as well as an executor per endpoint whose configuration is determined by the passed in ConsumerPolicy.",,,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,360201600,,,,,,26493,false,mark.fisher(mark.fisher),,,,0|i02v73:,16764,15783,,,,,"09/Dec/07 6:22 AM;mark.fisher;The MessageBus, EndpointExecutor, and ConsumerPolicy are now within the 'bus' package.",,,,,,,,,,,,,,,,,,,,,,
Provide annotation support for message-publishing interceptor,INT-39,20054,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,03/Dec/07 7:15 AM,03/Dec/07 7:15 AM,10/May/19 2:37 AM,03/Dec/07 7:15 AM,,,,,,,0.5,,,Core,,,,,0,,"The Publisher annotation will provide a 'channel' attribute and annotated methods would be capable of publishing to the specified channel. The AnnotationAwareMessagePublishingInterceptor will recognize the annotation and resolve the provided channel name to a MessageChannel instance if possible (a ChannelResolver strategy must be provided to it). A PublisherAnnotationPostProcessor should create proxies in its after-init callback using a PublisherAnnotationAdvisor with an AnnotationMatchingPointcut for a configurable method annotation (default is @Publisher). The 'channelNameAttribute' should also be configurable (default is ""channel"").",,,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,360720000,,,,,,26494,false,mark.fisher(mark.fisher),,,,0|i02m5r:,15299,14537,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Define integration XSD, namespace handler, and parser",INT-38,20076,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,02/Dec/07 8:07 AM,02/Jan/08 9:03 AM,10/May/19 2:37 AM,02/Jan/08 9:03 AM,,,,,,,0.5,,,Core,,,,,0,,"The 'spring-integration' XSD should define elements for 'endpoint', 'source-adapter', 'target-adapter', 'channel', 'service' (for a 'handler adapter' that delegates to any spring-managed object), and 'consumer' (with type assignable to any of the ConsumerType enum values).",,,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26495,false,mark.fisher(mark.fisher),,,,0|i02vcv:,16790,15807,,,,,02/Dec/07 1:15 PM;mark.fisher;The endpoint parser should provide an 'autoCreateChannels' flag (true by default) so that a source or target name will automatically trigger the creation of a channel if no source or target with that name has been explicitly defined in the context.,"02/Jan/08 9:03 AM;mark.fisher;The namespace provides the following elements: message-bus, channel, source-adapter, target-adapter, endpoint, consumer, handler, and annotation-driven. All are supported by IntegrationNamespaceHandler and the various parser implementations in the org.springframework.integration.config package. The 'autoCreateChannels' option is actually configurable on the message bus (not the endpoint). The 'service' element was not defined - rather the 'handler-ref' and 'handler-method' attributes can be provided on an endpoint element for invoking any object as a ""handler"". This is similar in concept to Spring's JMS support with the MessageListenerAdapter and the corresponding 'jms:listener' elements.",,,,,,,,,,,,,,,,,,,,,
Implement AnnotationAwareMessageBus,INT-37,20074,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 12:03 PM,02/Jan/08 7:58 AM,10/May/19 2:37 AM,02/Jan/08 7:58 AM,,,,,,,0.5,,,Core,,,,,0,,"The AnnotationAwareMessageBus should extend the abstract base MessageBus to enable creation of handlers, source adapters, target adapters, and routers based on the method-level annotations of MessageEndpoints.",,,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26496,false,mark.fisher(mark.fisher),,,,0|i02v7j:,16766,15785,,,,,"02/Jan/08 7:58 AM;mark.fisher;Rather than subclassing MessageBus, this has been implemented with a post-processor. The MessageEndpointAnnotationPostProcessor configures annotated classes as endpoints. At this point, it recognizes the following annotations: @Polled (for a source), @DefaultOutput, @Handler, @Router, and @Splitter.",,,,,,,,,,,,,,,,,,,,,,
Define the ConsumerType enum,INT-36,20051,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 12:00 PM,02/Dec/07 8:53 AM,10/May/19 2:37 AM,02/Dec/07 8:53 AM,,,,,,,0.5,,,Core,,,,,0,,"The enum values should be:
EVENT_DRIVEN
FIXED_RATE
FIXED_DELAY
SCHEDULED",,,,,,,,,,,,,,,,1200,600,600,50%,1200,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,360892800,,,,,,26497,false,mark.fisher(mark.fisher),,,,0|i05bc7:,31043,28305,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Define MessageEndpoint component annotation and method annotations for handler, source, and target",INT-35,20075,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 11:59 AM,02/Jan/08 12:59 PM,10/May/19 2:37 AM,02/Jan/08 12:59 PM,,,,,,,0.5,,,Core,,,,,0,,"The @MessageEndpoint annotation should contain the @Component meta-annotation to allow for autodetection. The following endpoint attributes should be available: source, target, handler, consumerType. The first three accept Strings (e.g. for channel name or handler bean name) and the consumerType accepts the ConsumerType enum (see INT-36).

A @Handler method annotation would trigger creation of a MessageHandler adapter. Such methods can accept either a Message or any Object that will match by payload type by default. A @Router method will return either a String (endpoint then uses the channel resolver) or a MessageChannel instance. The @Source method annotation can return either a Message or an Object to be used as Message payload (by the message factory). A @Target method annotation will be wrapped in a MessageTarget adapter for sending the message payload.
",,,,,,,,,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26498,false,mark.fisher(mark.fisher),,,,0|i02rzr:,16244,15323,,,,,"02/Jan/08 12:58 PM;mark.fisher;MessageEndpointAnnotationPostProcessor recognizes the @MessageEndpoint annotation with the following allowed attributes: input, defaultOutput, and pollPeriod. Any class annotated with @MessageEndpoint may also provide method-level annotations for the following: @Handler, @Router, @Splitter, @Polled (for input), and @DefaultOutput.",,,,,,,,,,,,,,,,,,,,,,
Implement MessageBus with minimal requirements,INT-34,20059,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 11:42 AM,02/Dec/07 7:11 PM,10/May/19 2:37 AM,02/Dec/07 7:11 PM,,,,,,,0.5,,,Core,,,,,0,,"The MessageBus will be ApplicationContextAware. It should contain a ChannelRegistry and EndpointRegistry and automatically detect those components within its application context. The MessageBus should also implement lifecycle and enable cascading start/stop to its registered components. The bus should also contain a boolean option 'autoCreateChannels' so that any registered endpoint with a source or target name could trigger creation of a channel (simple point-to-point with default configuration) with that name. Otherwise, the bus will fail on startup. The bus should also provide an 'autoStartup' (default is true) so that initialization also triggers the startup.",,,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,360806400,,,,,,26499,false,mark.fisher(mark.fisher),,,,0|i02vdz:,16795,15812,,,,,"02/Dec/07 1:16 PM;mark.fisher;The autoCreateChannel option is not relevant here. However, that behavior does belong in the parser, see INT-38.",,,,,,,,,,,,,,,,,,,,,,
Implement EndpointRegistry,INT-33,20052,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 11:34 AM,02/Dec/07 7:09 PM,10/May/19 2:37 AM,02/Dec/07 7:09 PM,,,,,,,0.5,,,Core,,,,,0,,The EndpointRegistry enables registration and lookup of MessageEndpoint instances.,,,,,,,,,,,,,,,,1800,1200,600,33%,1800,1200,600,,,,,,,,,,,,,,,,,,,,,,,,,,360892800,,,,,,26500,false,mark.fisher(mark.fisher),,,,0|i05bb3:,31038,28300,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ChannelRegistry,INT-32,20050,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 11:33 AM,02/Dec/07 7:09 PM,10/May/19 2:37 AM,02/Dec/07 7:09 PM,,,,,,,0.5,,,Core,,,,,0,,The ChannelRegistry enables registration and lookup of MessageChannel instances.,,,,,,,,,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,360892800,,,,,,26501,false,mark.fisher(mark.fisher),,,,0|i02va7:,16778,15796,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define ChannelResolver interface,INT-31,20056,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,01/Dec/07 11:32 AM,02/Dec/07 7:11 PM,10/May/19 2:37 AM,02/Dec/07 7:11 PM,,,,,,,0.5,,,Core,,,,,0,,The ChannelResolver resolves channels by name: MessageChannel resolve(String name).  For example a simple implementation would resolve channels by bean name.,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,360892800,,,,,,26502,false,mark.fisher(mark.fisher),,,,0|i02m53:,15296,14534,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement ApplicationEvent target adapter,INT-30,20063,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 9:12 AM,03/Jan/08 10:46 AM,10/May/19 2:37 AM,03/Jan/08 10:46 AM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The ApplicationEvent target adapter will consume messages from a specified input channel and then publish ApplicationEvents via the designated 'applicationEventPublisher'. The adapter should delegate to an ApplicationEventCreator strategy for converting from the incoming Message to the ApplicationEvent to be published. Perhaps a default MessageEvent should also be defined (extending the abstract ApplicationEvent class) so that the message can simply be wrapped as an event in case no event creator strategy is provided.
",,,,,,,,,,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,358041600,,,,,,26503,false,mark.fisher(mark.fisher),,,,0|i02pdb:,15819,14993,,,,,02/Jan/08 12:29 PM;mark.fisher;Updating the target to 1.0 M1,03/Jan/08 10:46 AM;mark.fisher;Implemented the ApplicationEventTargetAdapter. Also provided MessagingEvent - a subclass of ApplicationEvent - and MessagingEventMapper - an implementation of MessageMapper. Factored out common target adapter behavior from DefaultTargetAdapter into the new AbstractTargetAdapter in the process.,,,,,,,,,,,,,,,,,,,,,
Implement ApplicationEvent source adapter,INT-29,20078,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 9:05 AM,03/Jan/08 8:15 AM,10/May/19 2:37 AM,03/Jan/08 8:15 AM,,,,,,,1.0 M1,,,Adapters,,,,,0,,"The ApplicationEvent source adapter will itself implement Spring's ApplicationListener interface. Any incoming ApplicationEvent will then be passed along as the payload of a message to the specified output channel. It should also allow for a Message-creating/payload-extracting strategy so that a developer may have more fine-grained control of the contents of the message payload (or alternatively, this may be accomplished with a Message Translator).",,,,,,,,,,,,,,,,3600,0,5400,150%,3600,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,358041600,,,,,,26504,false,mark.fisher(mark.fisher),,,,0|i02pef:,15824,14997,,,,,02/Jan/08 12:29 PM;mark.fisher;Updating the target to 1.0 M1,03/Jan/08 8:15 AM;mark.fisher;Factored out common source adapter behavior from PollingSourceAdapter into new AbstractSourceAdapter class and implemented ApplicationEventSourceAdapter. A custom MessageMapper implementation may be provided - otherwise the default SimplePayloadMessageMapper is used. The supported 'eventTypes' list may be provided (containing classes that extend ApplicationEvent) - otherwise any ApplicationEvent will be mapped to a Message and sent to the adapter's MessageChannel.,,,,,,,,,,,,,,,,,,,,,
Implement MessagePublishingInterceptor,INT-28,20077,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 9:00 AM,13/Sep/10 5:59 PM,10/May/19 2:37 AM,13/Dec/09 9:58 AM,,,,,,,2.0 M2,,,Core,,,,,0,,"This issue was deferred from the 1.0.x roadmap, because the use of EL will provide a much better experience for mapping arguments, return values, and exceptions to the Message to be published. I am re-opening and assigning to 2.0-M1 now that we depend on Spring 3.0 and have the EL support.

This was the original description back in the early milestones (things will be a bit different now because of EL - see the version in the sandbox for a rough idea):
""The MessagePublishingInterceptor will serve as an AOP-driven messaging gateway - providing a setter for the output channel. It should also allow for configuration of the type of interception (before or after) as well as an optional Message-preparing/payload-extracting strategy. For 'before' interception (e.g. auditing), the MethodInvocation itself would be passed as Message payload, unless a payload extractor is provided. For 'after' interception, the default behavior (when no payload extractor is provided) will depend on the message outcome: if the method returns successfully, the return value will be passed as the Message payload, but if the method throws an exception, the exception will be the payload (of an ErrorMessage). The sending of ErrorMessages should probably be configurable - minimally with a simple enable/disable boolean flag. The default interception type should most likely be 'after'.""",,,,,,,,,,,,,,,,57600,57600,10800,18%,68400,61200,18000,,,,,,,,,,,,,,,,,,,,,,,,,,303004800,,,,,,26505,false,mark.fisher(mark.fisher),,,,0|i01cq7:,7939,8360,,,,,"03/Dec/07 4:42 AM;mark.fisher;Implemented with only ""after-returning"" advice behavior for now.","31/Dec/07 11:12 AM;mark.fisher;For 0.5, this is used for after advice only. Will add a new issue for extending the functionality in the 1.0 timeframe.","01/Oct/09 3:32 AM;mark.fisher;Moving this parent issue to 2.0-M2 since the non-annotation approach will be supported in M2. The core functionality (interceptor, annotation, and advisor) are already available in M1 however.",,,,,,,,,,,,,,,,,,,,
Define FileNameGenerator strategy and default implementation,INT-27,20071,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 8:26 AM,02/Jan/08 5:40 AM,10/May/19 2:37 AM,02/Jan/08 5:40 AM,,,,,,,0.5,,,Adapters,,,,,0,,"When writing files, the file target adapter needs to determine the appropriate file name at runtime. A FileNameGenerator interface should define this functionality (e.g. String generateFileName(Message message)). The default implementation could possibly check for a 'filename' property in the message header, else fallback to use the message ID.",,,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26506,false,mark.fisher(mark.fisher),,,,0|i02paf:,15806,14982,,,,,"02/Jan/08 5:40 AM;mark.fisher;Defined the FileNameGenerator interface and implemented DefaultFileNameGenerator.

DefaultFileNameGenerator checks for a filename property (with a key of FileNameGenerator.FILENAME_PROPERTY_KEY) else uses the message id and timestamp.
",,,,,,,,,,,,,,,,,,,,,,
Create file target adapter,INT-26,20081,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 8:22 AM,02/Jan/08 7:36 PM,10/May/19 2:37 AM,02/Jan/08 7:36 PM,,,,,,,0.5,,,Adapters,,,,,0,,The file target adapter will write the contents of an incoming Message payload to a file within a specified directory. This will require a FileNameGenerator strategy (INT-27). It should handle either String or byte array payloads.,,,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26507,false,mark.fisher(mark.fisher),,,,0|i02pcf:,15815,14990,,,,,"02/Jan/08 7:36 PM;mark.fisher;Implemented FileTargetAdapter. The file writing is handled by the MessageMapper implementations - either TextFileMapper or ByteArrayFileMapper. The FileNameGenerator is configurable, but by default it will use the DefaultFileNameGenerator (creates a file name with message ID and timestamp).",,,,,,,,,,,,,,,,,,,,,,
Create file source adapter,INT-25,20062,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 8:04 AM,02/Jan/08 5:19 AM,10/May/19 2:37 AM,02/Jan/08 5:19 AM,,,,,,,0.5,,,Adapters,,,,,0,,"The file source adapter will require a polling policy and a source directory to poll for new files. When a file arrives, it will be converted to a Message and sent to the specified output channel. The built-in Messaging Mapper should support a Message payload of either String or byte array.",,,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26508,false,mark.fisher(mark.fisher),,,,0|i0470v:,24512,21266,,,,,"02/Jan/08 5:19 AM;mark.fisher;Added FileSource, a convenience adapter, 2 mapper implementations (for text and byte-array), as well as a FileNameGenerator strategy. All classes are in the org.springframework.integration.adapter.file package.",,,,,,,,,,,,,,,,,,,,,,
Implement resequencer,INT-24,20037,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mbogoevici,mark.fisher,mark.fisher,24/Nov/07 7:45 AM,03/Jun/08 1:39 PM,10/May/19 2:37 AM,03/Jun/08 1:39 PM,,,,,,,1.0 M5,,,Core,,,,,0,,"The resequencer is a stateful handler similar to an aggregator (INT-9) where the 'end condition' is achieved when the number of received messages for a given sequence matches the total expected in the sequence (the MessageHeader contains properties: 'sequenceNumber' and 'sequenceTotal'). The key difference is that a resequencer does not aggregate the sequence of messages into a single message. Rather, it simply reorders them before sending to its output channel. The sending should normally occur incrementally - i.e. as soon as the next expected 'lowest' remaining sequence number is encountered. However, the resequencer should also allow for deferred sending until either all messages in the sequence arrive or a configurable timeout period elapses. In the latter case, an error message may be sent - or in some cases, it may be desirable to send only the successfully received messages - in order (e.g. message-1, message-4, message-7) - as soon as the timeout has elapsed.
",,;03/Jun/08 1:39 PM;mbogoevici;72000,,,,,,,,,,,,,,21600,0,72000,333%,21600,0,72000,,,,,,,,,,,,,,,,,,,,,,,,,,344908800,,,,,2008-06-03 13:39:21.864,26509,false,mbogoevici(mbogoevici),,,,0|i02vbj:,16784,15801,,,,,02/Jan/08 8:17 AM;mark.fisher;Updating target version to 1.0 M4,03/Jun/08 1:39 PM;mbogoevici;Fixed with namespace support for a <resequencer/> element as of revision 665.,,,,,,,,,,,,,,,,,,,,,
Implement splitter,INT-23,20030,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 7:37 AM,05/Jul/08 3:26 AM,10/May/19 2:37 AM,05/Jul/08 3:26 AM,,,,,,,1.0 M5,,,Core,,,,,0,,"The splitter handler should implement MessageHandler and delegate to a MessageSplitter strategy - such as: List<Message> split(Message message)
The splitter may optionally set the sequenceNumber/sequenceTotal properties to the messages' headers.",,;05/Jul/08 3:23 AM;mark.fisher;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,342144000,,,,,,10958,false,mark.fisher(mark.fisher),,,,0|i02pcn:,15816,14991,,,,,"22/Jan/08 12:24 PM;mark.fisher;For 1.0-M1, the @Splitter annotation is recognized by the MessageEndpointAnnotationPostProcessor, and it supports methods that accept either the Message instance or its payload. The splitter method's return type may be a Message (or array, or collection) or an Object (or array, or collection) to be wrapped as a Message payload.

The MessageHandler implementation and MessageSplitter strategy will be considered for a future release.",05/Jul/08 3:26 AM;mark.fisher;Setting this issue as resolved. The SplitterMessageHandlerAdapter is used internally and both @Splitter and <splitter/> are supported.,,,,,,,,,,,,,,,,,,,,,
Define an abstract RecipientList router base class and simple static implementation,INT-22,20070,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 7:04 AM,02/Jan/08 3:25 PM,10/May/19 2:37 AM,02/Jan/08 3:25 PM,,,,,,,0.5,,,Core,,,,,0,,"An abstract base class for the recipient list router should allow for setting a list of channels on a ChannelResolver. A ""static"" router will use a ChannelResolver implementation whose resolve method simply returns that list.",,,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26510,false,mark.fisher(mark.fisher),,,,0|i02m5j:,15298,14536,,,,,"02/Jan/08 3:25 PM;mark.fisher;Implemented the MultiChannelRouter base class and defined two alternatives for channel resolution: MultiChannelResolver and MultiChannelNameResolver. These are parallel implementations of the ""single"" channel versions: ChannelResolver and ChannelNameResolver. Also implemented the RecipientListRouter subclass of MultiChannelRouter as a convenience for statically configuring the recipient list - either as a List of MessageChannel instances or a String array of channel names. For dynamic recipient lists, one of the ""multi"" channel resolver strategies should be implemented and then configured on an instance of MultiChannelRouter.
",,,,,,,,,,,,,,,,,,,,,,
Define ChannelResolver strategy interface,INT-21,20057,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 6:58 AM,02/Dec/07 1:07 PM,10/May/19 2:37 AM,02/Dec/07 1:07 PM,,,,,,,0.5,,,Core,,,,,0,,"The ChannelResolver should return 0 or more channels from a given Message - something like:  List<Channel> resolve(Message message);
",,,,,,,,,,,,,,,,1200,600,600,50%,1200,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,361497600,,,,,,26511,false,mark.fisher(mark.fisher),,,,0|i02m4v:,15295,14533,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement base Router,INT-20,20073,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 6:55 AM,02/Jan/08 12:24 PM,10/May/19 2:37 AM,02/Jan/08 12:24 PM,,,,,,,0.5,,,Core,,,,,0,,The base router should implement MessageHandler and delegate to a channel resolver strategy for determining on which channel(s) to send the Message.,,,,,,,,,,,,,,,,3600,0,10800,300%,3600,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26512,false,mark.fisher(mark.fisher),,,,0|i02pbz:,15813,14988,,,,,"02/Jan/08 12:24 PM;mark.fisher;Implemented two different approaches for router support.

The first is a simple implementation of MessageHandler that delegates to an instance of either the ChannelResolver or ChannelNameResolver strategy. When using the latter, a reference to the ChannelRegistry is required, and hence the RoutingMessageHandler does implement ChannelRegistryAware.

The second is the RouterMessageHandlerAdapter and delegates to an arbitrary method which may return either a String (for channel name) or a MessageChannel instance. This handler adapter is intended for use with the @Router annotation, and its configuration is driven by the MessageEndpointAnnotationPostProcessor.
",,,,,,,,,,,,,,,,,,,,,,
Allow configurable error handler for MessageEndpoints,INT-19,20031,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,24/Nov/07 6:39 AM,25/Feb/08 5:07 AM,10/May/19 2:37 AM,25/Feb/08 5:07 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"The default error handler implementation should be a simple payload-type router that maps exception types to channels. When running within a messaging-aware context, a global error handler can be provided to endpoints by default while still allowing the option of overriding with a local handler on a per-endpoint basis.",,;23/Jan/08 3:09 AM;mark.fisher;3600,Added namespace support for 'error-handler'.;25/Feb/08 4:49 AM;mark.fisher;3600,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,353462400,,,,,,26513,false,mark.fisher(mark.fisher),,,,0|i02v7z:,16768,15787,,,,,"23/Jan/08 1:04 AM;mark.fisher;A default 'errorHandler' that publishes to the 'errorChannel' is enabled by the MessageBus and passed to its endpoints for the 1.0-M1 release. In 1.0-M2, we will add namespace support for individual 'error-handler' references on each 'endpoint' element.","25/Feb/08 5:07 AM;mark.fisher;An endpoint-specific ErrorHandler reference may now be provided with the 'error-handler' attribute of the <endpoint/> element.
",,,,,,,,,,,,,,,,,,,,,
Create JMS target adapter,INT-17,20079,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,23/Nov/07 5:16 PM,02/Jan/08 8:04 AM,10/May/19 2:37 AM,02/Jan/08 8:04 AM,,,,,,,0.5,,,Adapters,,,,,0,,The adapter will delegate to Spring's JmsTemplate to send the generic Message's payload within a JMS Message to the specified JMS Destination. This will use SimpleMesageConverter by default but should expose a setter for the 'messageConverter' property.,,,,,,,,,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26515,false,mark.fisher(mark.fisher),,,,0|i02vdj:,16793,15810,,,,,02/Jan/08 8:04 AM;mark.fisher;Implemented the JmsTarget - it accepts either a JmsTemplate or a ConnectionFactory+Destination in which case it will create a JmsTemplate instance. Advanced configuration is possible since the JmsTemplate itself can be provided (e.g. setting a custom MessageConverter implementation). The JmsTargetAdapter is also provided as a convenience and simply wraps the JmsTarget while implementing the TargetAdapter interface.,,,,,,,,,,,,,,,,,,,,,,
Create pollable JMS source adapter,INT-16,20064,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,23/Nov/07 5:13 PM,02/Jan/08 8:15 AM,10/May/19 2:37 AM,02/Jan/08 8:15 AM,,,,,,,0.5,,,Adapters,,,,,0,,This JMS source will be a PollableSource implementation that simply uses the JmsTemplate's receiveAndConvert() method. Either a JmsTemplate may be provided explicitly - else a ConnectionFactory+Destination combination in which case the JmsTemplate will be created. This source is intended for low-volume messaging situations - otherwise a truly event-driven JMS source should be used (see INT-41).,,,,,,,,,,,,,,,,14400,9000,5400,37%,14400,9000,5400,,,,,,,,,,,,,,,,,,,,,,,,,,358128000,,,,,,26516,false,mark.fisher(mark.fisher),,,,0|i05b73:,31020,28244,,,,,"02/Jan/08 8:15 AM;mark.fisher;Implemented JmsPollableSource and a convenience ""wrapper"" adapter: JmsPollingSourceAdapter.",,,,,,,,,,,,,,,,,,,,,,
Define base MessageEndpoint,INT-15,20058,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,23/Nov/07 4:57 PM,02/Dec/07 7:08 PM,10/May/19 2:37 AM,02/Dec/07 7:08 PM,,,,,,,0.5,,,Core,,,,,0,,"The base MessageEndpoint implementation should expose setters for common dependencies: source, target, and handler. The base endpoint class should also implement Spring's Lifecycle interface.",,,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,360806400,,,,,,26517,false,mark.fisher(mark.fisher),,,,0|i05bbb:,31039,28301,,,,,02/Dec/07 7:08 PM;mark.fisher;Added the MessageEndpoint interface and a GenericMessageEndpoint implementation.,,,,,,,,,,,,,,,,,,,,,,
Define Messaging Mapper interface,INT-14,20060,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Nov/07 10:37 AM,02/Dec/07 7:03 PM,10/May/19 2:37 AM,02/Dec/07 7:03 PM,,,,,,,0.5,,,Core,,,,,0,,"The MessageMapper performs a similar role to Spring's MessageConverter for JMS. The main difference is that MessageMapper translates between any object and an instance of the generic Message. The mappers will typically be used by SourceAdapter and TargetAdapter. While each of those only needs conversion in a single direction (object-to-message or message-to-object respectively), MessageMapper implementations should typically provide bi-directional (and symmetric) translation. Therefore the interface could define both methods. The other option would be to provide individual interfaces and then implementation classes may implement both.
",,,,,,,,,,,,,,,,1200,600,600,50%,1200,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,361756800,,,,,,12464,false,mark.fisher(mark.fisher),,,,0|i05bbj:,31040,28302,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide message source and target interfaces,INT-13,20043,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,21/Nov/07 8:46 AM,21/Nov/07 9:00 AM,10/May/19 2:37 AM,21/Nov/07 9:00 AM,,,,,,,0.5,,,Core,,,,,0,,The MessageSource interface defines the receive methods to be used by any component that supports message reception. The MessageTarget defines the send methods to be implemented by any component that  supports message sending. The MessageChannel should be refactored to extend these 2 interfaces.,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,361756800,,,,,,12493,false,mark.fisher(mark.fisher),,,,0|i04nqn:,27220,21869,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement polling consumer,INT-12,20049,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 4:06 PM,02/Dec/07 7:14 PM,10/May/19 2:37 AM,02/Dec/07 7:14 PM,,,,,,,0.5,,,Core,,,,,0,,This consumer should poll the channel according to a specified (else default) polling policy. The default policy will be interval based. This consumer will extend the base consumer (INT-11). ,,,,,,,,,,,,,,,,10800,0,12600,116%,10800,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,360806400,,,,,,26518,false,mark.fisher(mark.fisher),,,,0|i02v8n:,16771,15790,,,,,02/Dec/07 7:14 PM;mark.fisher;Added the AbstractPollingConsumer as well as the FixedRateConsumer and FixedDelayConsumer concrete implementations.,,,,,,,,,,,,,,,,,,,,,,
Implement consumer base class,INT-11,20055,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 4:04 PM,02/Dec/07 7:07 PM,10/May/19 2:37 AM,02/Dec/07 7:07 PM,,,,,,,0.5,,,Core,,,,,0,,"This class will provide the common configuration (channel, handler, executor) for both polling and event-driven consumers. Other common behavior includes lifecycle management, handler invocation, and invalid message handling (including expired messages).",,,,,,,,,,,,,,,,21600,3600,9000,41%,21600,3600,9000,,,,,,,,,,,,,,,,,,,,,,,,,,360806400,,,,,,26519,false,mark.fisher(mark.fisher),,,,0|i02qdz:,15984,15096,,,,,"02/Dec/07 7:06 PM;mark.fisher;The consumer should not be responsible for handling expired messages; that should be handled by endpoint or messageHandler code. The consumer should be focused only on retrieving messages and passing them along. Furthermore, a consumer is needed to listen to the invalid and dead message channels as well.",,,,,,,,,,,,,,,,,,,,,,
Add timeout-accepting send and receive to MessageChannel,INT-10,20044,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 3:55 PM,20/Nov/07 6:11 PM,10/May/19 2:37 AM,20/Nov/07 6:11 PM,,,,,,,0.5,,,Core,,,,,0,,The MessageChannel interface (and any implementations) should define send/receive methods that accept a timeout value (in milliseconds). Any value less than 1 should be treated as a 'no wait' request.,,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,26520,false,mark.fisher(mark.fisher),,,,0|i02v87:,16769,15788,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement aggregator,INT-9,20033,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:47 AM,04/Feb/08 5:18 AM,10/May/19 2:37 AM,04/Feb/08 5:18 AM,,,,,,,1.0 M2,,,Core,,,,,0,,"An aggregating message handler will associate incoming messages with a group based on correlation ID. For each incoming message, it will check if a group already exists for that message. If so, the message will be added to that group's aggregator (managed in a map within the aggregating handler - keyed by the correlation id). If not, it will create an ""aggregator"" and then add the message. Each time a message is added to the aggregator, it will check its ""end condition"". When the end condition is satisfied, the message group will be aggregated into a single outgoing message.",,;04/Feb/08 1:32 AM;mark.fisher;14400,;04/Feb/08 4:59 AM;mark.fisher;21600,,,,,,,,,,,,,28800,0,36000,125%,28800,0,36000,,,,,,,,,,,,,,,,,,,,,,,,,,355276800,,,,,,26521,false,mark.fisher(mark.fisher),,,,0|i02vfj:,16802,15819,,,,,02/Jan/08 8:16 AM;mark.fisher;Updating target version to 1.0 M1,"04/Feb/08 5:18 AM;mark.fisher;Added the Aggregator strategy and the AggregatingMessageHandler. The handler delegates to a map of RoutingBarriers keyed by the 'correlationId' property of received Messages. The RoutingBarrierCompletionStrategy is configurable, and the default implementation is SequenceSizeCompletionStrategy.",,,,,,,,,,,,,,,,,,,,,
Add expiration to Message,INT-7,20048,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:44 AM,20/Nov/07 10:44 AM,10/May/19 2:37 AM,20/Nov/07 10:44 AM,,,,,,,0.5,,,Core,,,,,0,,Message expiration should be provided on the header. Default value should indicate 'never expire'.,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,12462,false,mark.fisher(mark.fisher),,,,0|i02qaf:,15968,15080,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define base classes for Message transformation,INT-6,20035,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:43 AM,25/Jun/08 12:47 AM,10/May/19 2:37 AM,25/Jun/08 12:47 AM,,,,,,,1.0 M5,,,Core,,,,,0,,Message transformation base classes should include a payload transformer and a property enricher.,,;25/Jun/08 12:45 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,343094400,,,,,,12439,false,mark.fisher(mark.fisher),,,,0|i058tb:,30634,27661,,,,,"04/Apr/08 1:08 AM;mark.fisher;Since transformer are often concerned with enrichment/filtering of particular values in the MessageHeader, we also should consider more fine-grained annotations (including parameter-level) for binding from the Message to method arguments. This will be consistent with the annotations used in Spring 2.5+ MVC.

For example, something along these lines (just the general idea)... setting a value from a header:

    @Transformer
    public void addEmail(@HeaderAttribute(""email"") String email, Customer customer) {
        customer.addEmail(email);
    }

The same basic idea can be applied for providing a value *to* a header - or possibly returning a Map of values to add to the header (similar to a ""referenceData"" returning method in Spring MVC). Obviously this example is so trivial that an expression-language based solution would be sufficient (either in XML or class-level @Transformer annotation).

These same annotations will be useful for routers.
",20/May/08 7:55 AM;mark.fisher;Moving message transformer work to M5.,"25/Jun/08 12:47 AM;mark.fisher;The MessageTransformer interface has been defined, and an annotation-based adapter is available.",,,,,,,,,,,,,,,,,,,,
Define MessageHandler interface,INT-5,20045,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:42 AM,21/Nov/07 11:32 AM,10/May/19 2:37 AM,21/Nov/07 11:31 AM,,,,,,,0.5,,,Core,,,,,0,,Define the MessageHandler interface,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,26523,false,mark.fisher(mark.fisher),,,,0|i05bef:,31053,28320,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement event driven consumer,INT-4,20053,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:41 AM,02/Dec/07 7:15 PM,10/May/19 2:37 AM,02/Dec/07 7:14 PM,,,,,,,0.5,,,Core,,,,,0,,"This consumer will receive messages from a channel with a configurable number of concurrent listeners. Each listener should be submitted to an executor (using the task execution abstraction). When a Message is received from the Channel, it should be passed to the provided MessageHandler. The consumer should also handle Message expiration. This class will extend a consumer base class (INT-11).",,,,,,,,,,,,,,,,14400,1800,36000,250%,14400,1800,36000,,,,,,,,,,,,,,,,,,,,,,,,,,360806400,,,,,,26524,false,mark.fisher(mark.fisher),,,,0|i02qev:,15988,15100,,,,,26/Nov/07 11:35 AM;mark.fisher;Updated time estimate to account for general testing and handling of rejected tasks when an invoker is being rescheduled prior to removal from scheduled invokers.,02/Dec/07 7:15 PM;mark.fisher;Initial implementation; will revisit.,,,,,,,,,,,,,,,,,,,,,
Define root exception for messaging and basic implementations,INT-3,20042,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:39 AM,20/Nov/07 10:39 AM,10/May/19 2:37 AM,20/Nov/07 10:39 AM,,,,,,,0.5,,,Core,,,,,0,,Define a base (runtime) MessagingException as well as implementations for use in case of message-handling and message-delivery failures. Each should provide (at least) 2 constructors: one for a message String + root cause Exception and another for a message String only (when there is no root cause Exception).,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,12507,false,mark.fisher(mark.fisher),,,,0|i05ben:,31054,28321,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define core Channel interface and default implementation,INT-2,20046,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:38 AM,20/Nov/07 10:38 AM,10/May/19 2:37 AM,20/Nov/07 10:38 AM,,,,,,,0.5,,,Core,,,,,0,,"Define the MessageChannel interface for sending and receiving Messages. Also, provide a simple in-memory point-to-point implementation for default usage.",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,26525,false,mark.fisher(mark.fisher),,,,0|i02vdb:,16792,15809,,,,,,,,,,,,,,,,,,,,,,,,,,,
Define core Message interfaces and classes,INT-1,20047,,New Feature,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,20/Nov/07 10:35 AM,20/Nov/07 10:36 AM,10/May/19 2:37 AM,20/Nov/07 10:36 AM,,,,,,,0.5,,,Core,,,,,0,,"Define the Message interface and Message header (with id, attributes, return address, etc). Also provide a simple ""document"" Message implementation for passing a single object payload.",,,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,361843200,,,,,,12490,false,mark.fisher(mark.fisher),,,,0|i02v5b:,16756,15776,,,,,,,,,,,,,,,,,,,,,,,,,,,
read only .springBeans leads to no warning,IDE-783,19319,,Bug,Resolved,IDE,Spring IDE,software,mlippert,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>",http://spring.io/tools/,Major,Fixed,cdupuis,eberhardwolff,import,08/Jan/08 10:55 AM,21/Jan/08 12:33 PM,10/May/19 2:37 AM,21/Jan/08 12:32 PM,2.0.1,,,,,,2.0.3,,,beans.core,webflow.core,,,,0,,"Write protect .springBeans, change something (i.e. add an XML file to the Config Files) - nothing happens, only an error in the Error Log is shown. The new XML file is not considered, parsed or anything - it just silently fails.

Would be nice to change that. Some version control systems write protect files. In that case it would be great if the file was checked out automatically.","eclipse.buildId=M20071107-1100
java.version=1.5.0_13
java.vendor=Apple Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=de_DE
Framework arguments:  -keyring /Users/wolff/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/wolff/.eclipse_keyring -consoleLog -showlocation
",;21/Jan/08 12:33 PM;cdupuis;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,21/Jan/08 12:32 PM;cdupuis;mylyn-context.zip;https://jira.spring.io/secure/attachment/13548/mylyn-context.zip,,,,,,,,,,,357609600,,,,,,2850,true,cdupuis(cdupuis),,,,0|i0493r:,24849,28197,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring Working Set are not correctly recovered,IDE-767,19315,,Bug,Resolved,IDE,Spring IDE,software,mlippert,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>",http://spring.io/tools/,Major,Fixed,cdupuis,cdupuis,cdupuis,16/Dec/07 10:51 AM,04/Feb/08 10:27 AM,10/May/19 2:37 AM,04/Feb/08 10:26 AM,2.0.2,,,,,,2.0.3,,,core,,,,,0,,Working Set supported seams to be broken while reopening the Working Set dialog. Even the filter is not working properly.,,;04/Feb/08 10:27 AM;cdupuis;3600,,,,,,,,,,,,,,86400,82800,3600,4%,86400,82800,3600,,,,,,,,,,,,,,,04/Feb/08 10:19 AM;cdupuis;mylyn-context.zip;https://jira.spring.io/secure/attachment/13601/mylyn-context.zip,,,,,,,,,,,359596800,,,,,,2865,false,cdupuis(cdupuis),,,,0|i0498n:,24871,28082,,,,,,,,,,,,,,,,,,,,,,,,,,,
FlexConfigurationManager should be configurable as a Spring bean,FLEX-19,25177,,Bug,Resolved,FLEX,Spring BlazeDS Integration,software,sdeleuze,This project is not active anymore,,Major,Fixed,jeremyg484,jeremyg484,jeremyg484,22/Dec/08 3:03 AM,01/Feb/09 5:20 AM,10/May/19 2:37 AM,22/Dec/08 4:01 AM,1.0.0.M1,,,,,,1.0.0.M2,,,,,,,,0,,"FlexConfigurationManager is intended to be configurable as a Spring bean in order to allow customization of the ConfigurationParser, but it is not easily possible at the moment due to the lack of a default constructor and the need for a reference to the ResourceLoader in the only provided constructor.  ",,;01/Feb/09 5:20 AM;jeremyg484;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,327456000,,,,,,27197,true,jeremyg484(jeremyg484),,,,0|i0305j:,17567,16981,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide a JMSTemplate-based MessagingAdapter,FLEX-13,25095,,New Feature,Resolved,FLEX,Spring BlazeDS Integration,software,sdeleuze,This project is not active anymore,,Major,Fixed,mark.fisher,jeremyg484,jeremyg484,12/Dec/08 7:25 AM,25/Apr/09 7:53 PM,10/May/19 2:37 AM,25/Apr/09 7:53 PM,,,,,,,1.0.0.RC1,,,,,,,,0,,An implementation of the BlazeDS MessagingAdapter should be created that uses a Spring JMSTemplate instance for routing messages.,,;06/Apr/09 11:39 AM;mark.fisher;86400,,,,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,27202,true,jeremyg484(jeremyg484),,,,0|i0300v:,17546,16961,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration with Spring Security,FLEX-11,25082,,New Feature,Resolved,FLEX,Spring BlazeDS Integration,software,sdeleuze,This project is not active anymore,,Major,Fixed,jeremyg484,jeremyg484,jeremyg484,12/Dec/08 2:44 AM,01/Mar/09 9:00 AM,10/May/19 2:37 AM,01/Mar/09 9:00 AM,,,,,,,1.0.0.M2,,,,,,,,1,,"Spring Security should be able to be used to:

- Authenticate a user based on credentials provided from the Flex client
- Authorize access to remote spring beans at a finer grained level than what is available with BlazeDS's container-managed security mechanisms  ",,;01/Feb/09 5:21 AM;jeremyg484;86400,;01/Mar/09 9:00 AM;jeremyg484;57600,,,,,,,,,,,,,144000,0,144000,100%,144000,0,144000,,,FLEX-23,FLEX-24,FLEX-25,,,,,,,,,,,,,,,,,,,,,328320000,,,,,,27204,true,jeremyg484(jeremyg484),,,,0|i03047:,17561,16975,,,,,,,,,,,,,,,,,,,,,,,,,,,
Execution context cannot be saved on Oracle (UTF8) when context length is between 2000 and 2500 characters,BATCH-1415,28032,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,ajeans,ajeans,23/Sep/09 4:10 AM,12/Sep/17 7:32 AM,10/May/19 2:37 AM,24/Sep/09 12:09 AM,2.0.3,,,,,,2.1.0.M1,,,Core,,,,,0,,"On Oracle databases, standard maximum size for varchar2 fields is 4000 chars. 
However, for UTF8/16 charsets, the maximum size of what can be inserted / updated in a varchar2 field may be as low as 2000 chars.

Example: 
On Oracle 10g, with BATCH_STEP_EXECUTION_CONTEXT:SHORT_CONTEXT, a VARCHAR2(2500) field (default in sql scripts).
Trying to put more than 2000 characters in the execution context produces this error (see attached log for more context)

Caused by: org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = ?, SERIALIZED_CONTEXT = ? WHERE STEP_EXECUTION_ID = ?]; SQL state [72000]; error code [1461]; ORA-01461: can bind a LONG value only for insert into a LONG column
; nested exception is java.sql.SQLException: ORA-01461: can bind a LONG value only for insert into a LONG column

My understanding is that:
- Oracle is limited to at most 2000 characters for the update of BATCH_STEP_EXECUTION_CONTEXT:SHORT_CONTEXT
- JdbcExecutionContextDao hardcodes a MAX_VARCHAR_LENGTH of 2500 characters. With more than 2500 characters in the context, it will truncate before insertion / update (and put the full context in the SERIALIZED_CONTEXT column instead)
=> Any execution context save (insert or update) of any length between 2000 and 2500 characters will fail with ORACLE for some charsets (e.g. UTF8).

In my case, I could work around this issue by
- First, creating a specific JobRepositoryFactoryBean, with an additional maxVarcharLength parameter, and using it as the system's job repository
- Then, creating a specific JdbcExecutionContextDao, with a configurable maxVarcharLength, and having it created as the ExecutionContextDao in the custom JobRepositoryFactoryBean (method createExecutionContextDao())

With a configurable max varchar length, I can reliably reproduce the ORA exception with any value > 2000 for maxVarcharLength, whereas everything works as intended for <= 2000

What would be the correct way to make this work out of the box? Would it be acceptable to define the max varchar length in the job repository (similar to the prefix configuration)?
",,;24/Sep/09 12:06 AM;david_syer;1200,;24/Sep/09 12:09 AM;david_syer;1200,,,,,,,,,,,,,1200,1200,2400,200%,1200,1200,2400,,,,,,,,,,,,,,,23/Sep/09 4:10 AM;ajeans;log_failure_ORA-01461.txt;https://jira.spring.io/secure/attachment/15736/log_failure_ORA-01461.txt,,,,,,,,,,,52185600,,,,,2009-09-23 04:22:17.292,11278,true,adelinor(adelinor),,,,0|i03vlr:,22662,19132,,,,,"23/Sep/09 4:12 AM;ajeans;Title of this bug should be:
Execution context cannot be saved on Oracle (UTF8) when context length is between 2000 and 2500 characters

Above 2500, the execution context will go into the CLOB column without any error.","23/Sep/09 4:22 AM;david_syer;This is a duplicate of BATCH-1296, but thanks for the detailed information.  You have a couple of choices: 1) reduce the column size to 2000 (in the DDL and in the Dao configuration), or 2) don't use multi-byte characters.

There is no way I know to tell from Java how many bytes Oracle is going to use to save a String (even if there is a way, I doubt if I want to know about it since it will be horrendously platform specific).  Please correct me if I am wrong.","23/Sep/09 7:16 PM;ajeans;Yes, BATCH-1296 is very close to what I am seeing here, although it is not strictly the same issue:
- BATCH-1296 is about truncation and 2000-2500 characters for the column EXIT_MESSAGE (in BATCH_JOB_EXECUTION and BATCH_STEP_EXECUTION)
- This issue is about truncation and 2000-2500 characters for the column SHORT_CONTEXT (in BATCH_JOB_EXECUTION_CONTEXT and BATCH_STEP_EXECUTION_CONTEXT)

In both cases, the DAO tries to be smart with truncation using an arbitrary value (default being 2500), with the EXIT_MESSAGE size being hardcoded in AbstractJdbcBatchMetadataDao, and the SHORT_CONTEXT size in JdbcExecutionContextDao

I agree with you that querying the database to guess how many characters we can put in the column looks brittle (I'll try to have a look today though). 

However, I think that the hardcoding in core Daos really hurts... The possibility to configure a global max varchar length for both EXIT_MESSAGE and SHORT_CONTEXT would be appreciated (As I said before, the work around requires to duplicate two central classes of spring batch, which is a maintenance problem for us).

Would adding the parameter to the job repository configuration be so evil? The default could still be 2500, which would not harm any other users.

<job-repository id=""jobRepository""
    dataSource=""dataSource""
    transactionManager=""transactionManager""
    isolation-level-for-create=""SERIALIZABLE""
    table-prefix=""BATCH_""
    max-varchar-length=""2000""
/>

","24/Sep/09 12:06 AM;david_syer;OK, it's not quite the same, I agree, so there is now a setter (setShortContextLength) in JdbcExecutionContextDao.  Namespace support will follow (BATCH-1416).","12/Sep/17 7:32 AM;adelinor;Hi,

Another option is change the ""create table"" script from a length specified as number of bytes:

{code:sql}
SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
{code}

to a length specified as a number of characters:

{code:sql}
SHORT_CONTEXT VARCHAR2(2500 CHAR) NOT NULL,
{code}

Please note that a VARCHAR2 can only contain up to 4000 bytes.",,,,,,,,,,,,,,,,,,
Allow a Job to specify its required JobParameters,BATCH-1411,27999,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,20/Sep/09 5:34 PM,11/Nov/09 6:50 AM,10/May/19 2:37 AM,11/Nov/09 6:50 AM,,,,,,,2.1.0.M3,,,Core,,,,,1,,"It's important to get a consensus on this one because it looks like a possible interface change in Job, e.g. adding Set<String> getMandatoryParameterNames() and a new exception.  The exception could be thrown in JobLauncher so that the JobExecution is never created if the user provides the wrong parameters.",,Added JobParametersValidator strategy to AbstractJob (and namespace support).;11/Nov/09 6:50 AM;david_syer;7200,,,,,,,,,,,,,,3600,3600,7200,200%,3600,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,303955200,,,,,,11281,false,david_syer(david_syer),,,,0|i03vm7:,22664,19134,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid deadlock with database pool and multithreaded step when throttle limit is too high.,BATCH-1406,27962,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,15/Sep/09 7:29 PM,16/Sep/09 4:04 AM,10/May/19 2:37 AM,16/Sep/09 3:54 AM,,,,,,,2.1.0.M1,,,Core,,,,,0,,The deadlock occurs in TaskletStep whenever the throttle limit for stepOperations is larger than the database pool size.,,;16/Sep/09 4:04 AM;david_syer;14400,,,,,,,,,,,,,,28800,0,14400,50%,28800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,304300800,,,,,,11284,false,david_syer(david_syer),,,,0|i03vmn:,22666,19136,,,,,"16/Sep/09 3:54 AM;david_syer;The fix was a little tricky, but not visible outside TaskletStep.  The key is to ensure that only one database Connection from the pool is used throughout the whole semaphore protected section of the tasklet processing.  Previously the step execution was being saved *outside* the main transaction, purely to protect against an optimistic locking exception when a commit fails (vanilla rollback is fine).  

Trickiness involves saving the step execution version before the attempted commit, and using it after a failed commit to restore the step execution to a state that can be saved cleanly.",,,,,,,,,,,,,,,,,,,,,,
Specify schema location for imports in xsd,BATCH-1400,27923,27615,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,10/Sep/09 8:53 PM,17/Oct/09 10:51 PM,10/May/19 2:37 AM,11/Sep/09 6:08 PM,2.0.0,,,,,,2.1.0.M2,,,Core,,,,,0,,,,;11/Sep/09 6:08 PM;david_syer;1200,,,,,,,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,304819200,,,,,,11289,false,david_syer(david_syer),,,,0|i03vnb:,22669,19139,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expose StepExecutionAggregator as a strategy interface in PartitionStep,BATCH-1399,27922,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,10/Sep/09 7:38 PM,17/Oct/09 10:51 PM,10/May/19 2:37 AM,10/Sep/09 8:34 PM,,,,,,,2.1.0.M2,,,Core,,,,,0,,,,;10/Sep/09 8:35 PM;david_syer;1200,,,,,,,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,304819200,,,,,,11290,false,david_syer(david_syer),,,,0|i03vnj:,22670,19140,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tidy up skip sample.,BATCH-1391,27857,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,03/Sep/09 9:57 PM,08/Sep/09 5:04 PM,10/May/19 2:37 AM,03/Sep/09 10:00 PM,,,,,,,2.1.0.M1,,,Samples,,,,,0,,,,;03/Sep/09 10:00 PM;david_syer;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,305424000,,,,,,11298,false,david_syer(david_syer),,,,0|i01ntr:,9737,9767,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite elements do not honour @Order annotations,BATCH-1385,27749,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,ajeans,ajeans,26/Aug/09 8:24 PM,20/Sep/09 6:31 PM,10/May/19 2:37 AM,20/Sep/09 6:30 PM,2.0.3,,,,,,2.1.0.M1,,,Core,,,,,0,,"It is currently not possible to force the execution order of elements (read listeners, write listeners, ...) using the @Order annotation.

After some time wondering why this was the case, I found that it was perfectly working using the Ordered interface.

The problem lies in org.springframework.batch.core.listener.OrderedComposite. 
This class separates the elements in two groups ""ordered"" and ""unordered"", but it only checks to see if the element implements Ordered to decide whether it belongs in the ordered list.

<snippet from OrderedComposite>

{code}
	/**
	 * Register additional item.
	 * 
	 * @param item
	 */
	public void add(S item) {
		if (item instanceof Ordered) {
			if (!ordered.contains(item)) {
				ordered.add(item);
			}
		}
		else {
			if (!unordered.contains(item)) {
				unordered.add(item);
			}
		}
		list.clear();
		list.addAll(ordered);
		list.addAll(unordered);
	}
{code}{

This add method should probably do something like

{code}
	/**
	 * Register additional item.
	 * 
	 * @param item
	 */
	public void add(S item) {
		if (item instanceof Ordered || 
			(item != null && item.getClass().getAnnotation(Order.class) != null)) {
			if (!ordered.contains(item)) {
				ordered.add(item);
			}
		}
		else {
			if (!unordered.contains(item)) {
				unordered.add(item);
			}
		}
		list.clear();
		list.addAll(ordered);
		list.addAll(unordered);
	}
{code}

With this change , the elements with the annotation will be put in the ordered set, and their order value will be properly taken into account (the ordered set relies on a correct AnnotationAwareOrderComparator)
 ",,;20/Sep/09 6:30 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,303955200,,,,,2009-09-20 18:29:59.983,11304,false,david_syer(david_syer),,,,0|i03vpz:,22681,19150,,,,,20/Sep/09 6:29 PM;david_syer;Done.,,,,,,,,,,,,,,,,,,,,,,
"Make <flow/> a top-level element, so it can be shared or strategised in a job",BATCH-1380,27686,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,22/Aug/09 6:29 PM,16/Nov/09 12:19 AM,10/May/19 2:37 AM,16/Nov/09 12:19 AM,,,,,,,2.1.0.M3,,,Core,,,,,0,,"Make <flow/> a top-level element, so it can be shared or strategised in a job.  A <split/> with one flow is kind of a hack, so another step-like element is also needed to insert a flow into a <job/>.",,;16/Nov/09 12:19 AM;david_syer;21600,,,,,,,,,,,,,,0,0,21600,"9,223,372,036,854,775,807%",25200,14400,43200,,,,,,,,,,,,,,,,,,,,,,,,,,306460800,,,,,,11309,false,david_syer(david_syer),,,,0|i03vqf:,22683,19152,,,,,,,,,,,,,,,,,,,,,,,,,,,
Late binding of parameters in map value only happens once per ApplicationContext,BATCH-1378,27668,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david@davidkarlsen.com,david@davidkarlsen.com,21/Aug/09 12:49 AM,21/Aug/09 8:50 PM,10/May/19 2:37 AM,21/Aug/09 8:49 PM,2.0.2,2.0.3,,,,,2.0.3,,,Core,,,,,0,,"See thorough description in the forum, which also have the related classes, configuration and log attached.
In essence the binding of the parameters only happens once, so that any subsequent executions will run with stale values.","was 6.1 (also happens outside of container / in unit-test)
spring batch 2.0.2 and also 2.0.3.CI",;21/Aug/09 8:50 PM;david_syer;3600,,,,,,,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,21/Aug/09 11:13 AM;david@davidkarlsen.com;Generic.log;https://jira.spring.io/secure/attachment/15632/Generic.log,,,,,,,,,,,306547200,,,,,2009-08-21 00:53:23.502,11310,false,david_syer(david_syer),,,,0|i03vqn:,22684,19153,http://forum.springsource.org/showthread.php?p=256141,,,,21/Aug/09 12:49 AM;david@davidkarlsen.com;Actually a blocker as I can't find any good workarounds.,21/Aug/09 12:53 AM;david_syer;It works for me.  What is your database platform?,"21/Aug/09 1:02 AM;david@davidkarlsen.com;Did the config look correct to you?
I'm using DB2 9.5 - but I can't see how that should influence it - as the JDBC stuff is fed the wrong values.
Could this be some bad proxying?","21/Aug/09 1:38 AM;david_syer;Don't know at  this stage.  Can you show the logs from org.springframework.batch.core (DEBUG level)?  I'd like to see the JobLauncher tell me that the parameters are indeed as we think they are, and the PlaceholderTargetSource binding the job parameters.

Is the first execution of your job successful (status=COMPLETED)?","21/Aug/09 2:29 AM;david@davidkarlsen.com;fgrep -i 'org.springframework.batch.core.launch' Generic.lol:

21/08/2009 17:23:16,920 [main] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - No TaskExecutor has been set, defaulting to synchronous executor.
21/08/2009 17:23:17,888 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata  - Found injected field on class [com.te.jpay.services.scheduling.SchedulingServiceImpl]: AutowiredFieldElement for private org.springframework.batch.core.launch.JobOperator com.te.jpay.services.scheduling.SchedulingServiceImpl.jobOperator
21/08/2009 17:23:17,904 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata  - Processing injected field of bean 'schedulingService': AutowiredFieldElement for private org.springframework.batch.core.launch.JobOperator com.te.jpay.services.scheduling.SchedulingServiceImpl.jobOperator
21/08/2009 17:23:17,935 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy  - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.batch.core.launch.support.SimpleJobOperator@7fe07fe]
21/08/2009 17:23:29,264 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] launched with the following parameters: [{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10}]
21/08/2009 17:23:35,889 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] completed with the following parameters: [{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10}] and the following status: [COMPLETED]
21/08/2009 17:23:39,061 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] launched with the following parameters: [{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10}]
21/08/2009 17:23:39,170 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] completed with the following parameters: [{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10}] and the following status: [COMPLETED]
","21/Aug/09 2:30 AM;david@davidkarlsen.com;And grep for PlaceHolderTargetSource:

21/08/2009 17:23:15,388 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy  - Creating JDK dynamic proxy: target source is PlaceholderTargetSource for target bean 'lazyBindingProxy.collectionItemReader'
21/08/2009 17:23:29,295 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.util.PlaceholderTargetSource  - Rehydrating scoped target: [lazyBindingProxy.collectionItemReader]
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.util.PlaceholderTargetSource  - Rehydrating scoped target: [lazyBindingProxy.collectionItemReader]
","21/Aug/09 2:53 AM;david@davidkarlsen.com;Grep for org.springframework.batch.core:

21/08/2009 17:23:13,576 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver  - Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/batch=org.springframework.batch.core.configuration.xml.CoreNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
21/08/2009 17:23:13,904 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate  - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0]
21/08/2009 17:23:13,920 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate  - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.batch.core.explore.support.JobExplorerFactoryBean#2a7a2a7a]
21/08/2009 17:23:14,013 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory  - Overriding bean definition for bean 'executeDueCollectionSpringBatchJob': replacing [Generic bean: class [org.springframework.batch.core.job.flow.support.SimpleFlow]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.batch.core.configuration.xml.JobParserJobFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
21/08/2009 17:23:15,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating shared instance of singleton bean 'org.springframework.batch.core.scope.internalStepScope'
21/08/2009 17:23:15,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating instance of bean 'org.springframework.batch.core.scope.internalStepScope'
21/08/2009 17:23:15,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Eagerly caching bean 'org.springframework.batch.core.scope.internalStepScope' to allow for resolving potential circular references
21/08/2009 17:23:15,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Finished creating instance of bean 'org.springframework.batch.core.scope.internalStepScope'
21/08/2009 17:23:15,185 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory  - Overriding bean definition for bean 'collectionItemReader': replacing [Generic bean: class [org.springframework.batch.item.database.JdbcPagingItemReader]; scope=step; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [spring/executeDueCollection-context.xml]] with [Root bean: class [org.springframework.batch.core.scope.util.PlaceholderProxyFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [spring/executeDueCollection-context.xml]]
21/08/2009 17:23:15,185 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating shared instance of singleton bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor'
21/08/2009 17:23:15,185 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating instance of bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor'
21/08/2009 17:23:15,185 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Eagerly caching bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor' to allow for resolving potential circular references
21/08/2009 17:23:15,185 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Finished creating instance of bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor'
21/08/2009 17:23:15,263 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating shared instance of singleton bean 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
21/08/2009 17:23:15,263 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating instance of bean 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
21/08/2009 17:23:15,263 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Eagerly caching bean 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0' to allow for resolving potential circular references
21/08/2009 17:23:15,310 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Invoking afterPropertiesSet() on bean with name 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
21/08/2009 17:23:15,310 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Finished creating instance of bean 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
21/08/2009 17:23:15,310 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Returning cached instance of singleton bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor'
21/08/2009 17:23:15,310 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory  - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@66c466c4: defining beans [schedulerReportable,schedulingService,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,schedulerFactoryBean,springBatchJobLauncherDetails,triggerConfigurationService,schedulerOperationService,jobRepository,org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0,jobRegistry,jobLauncher,jobOperator,collectionItemProcessor,collectionItemWriter,genericItemFailureListener,collectionItemReader,org.springframework.batch.core.scope.internalStepScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,processDueCollectionStep,executeDueCollectionSpringBatchJob,PwhDatasource,JPayDatasource,transactionManager,JPay:TransactionDefinition.READ_ONLY,JPay:TransactionDefinition.UPDATE,schedulerTaskExecutor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,paymentDao,mandateDao,JPay:BankAppsIntegrationClient,JSwitchClient,org.springframework.jms.core.JmsTemplate#0,connectionFactory,jpayOutgoingQueue,JPay:ProcessFlowManager,JPay:InwardDDCollectionCanceller,JPay:InwardDDCollectionExecutor,JPay:InwardDDCollectionReceiver,JPay:InwardDDCollectionRefunder,JPay:InwardDDCollectionRejecter,JPay:InwardDDCollectionReturner,JPay:InwardDDCollectionReverser,paymentParser,jaxbMarshaller,TRUE,paymentDispatcher,messageGenerator,messageToBulkerGenerator,JPay:GetPaymentProcessStepsService,JPay:UpdatePaymentProcessStepsService,JPay:GetAvailableProcessingLineService,JPay:BankPaymentProcessStepDao,defaultPaymentProcessStepDaoImpl,paymentProcessStepDao,JPay:BankPaymentProcessStepFlowOptionDao,JPay:SessionFactory,JPay:JDirectoryClient,JPay:BlockingAgreementHelper,JPay:CounterValueHelper,JPay:CreditMechanismHelper,JPay:ExchangeHelper,JPay:ExecutionDateHelper,JPay:ValueDateHelper,JPay:ProductHelper,JPay:BankDetailsHelper,JPay:SettlementDateHelper,JPay:CompensationAmountHelper,lazyBindingProxy.collectionItemReader]; root of factory hierarchy
21/08/2009 17:23:16,701 [main] INFO  org.springframework.batch.core.repository.support.JobRepositoryFactoryBean  - No database type set, using meta data indicating: DB2
21/08/2009 17:23:16,904 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy  - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.batch.core.repository.support.SimpleJobRepository@6b306b30]
21/08/2009 17:23:16,920 [main] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - No TaskExecutor has been set, defaulting to synchronous executor.
21/08/2009 17:23:17,888 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata  - Found injected field on class [com.te.jpay.services.scheduling.SchedulingServiceImpl]: AutowiredFieldElement for private org.springframework.batch.core.launch.JobOperator com.te.jpay.services.scheduling.SchedulingServiceImpl.jobOperator
21/08/2009 17:23:17,904 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata  - Processing injected field of bean 'schedulingService': AutowiredFieldElement for private org.springframework.batch.core.launch.JobOperator com.te.jpay.services.scheduling.SchedulingServiceImpl.jobOperator
21/08/2009 17:23:17,920 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Creating instance of bean 'org.springframework.batch.core.explore.support.JobExplorerFactoryBean#2a7a2a7a'
21/08/2009 17:23:17,920 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Invoking afterPropertiesSet() on bean with name 'org.springframework.batch.core.explore.support.JobExplorerFactoryBean#2a7a2a7a'
21/08/2009 17:23:17,920 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Finished creating instance of bean 'org.springframework.batch.core.explore.support.JobExplorerFactoryBean#2a7a2a7a'
21/08/2009 17:23:17,935 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy  - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.batch.core.launch.support.SimpleJobOperator@7fe07fe]
21/08/2009 17:23:18,248 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Returning cached instance of singleton bean 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
21/08/2009 17:23:24,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Returning cached instance of singleton bean 'org.springframework.batch.core.scope.internalStepScope'
21/08/2009 17:23:24,170 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Returning cached instance of singleton bean 'org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor'
21/08/2009 17:23:29,201 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getLastJobExecution]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT
21/08/2009 17:23:29,217 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.createJobExecution]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT
21/08/2009 17:23:29,264 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] launched with the following parameters: [{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10, banks=RBOS}]
21/08/2009 17:23:29,264 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.AbstractJob  - Job execution starting: JobExecution: id=2041, startTime=null, endTime=null, lastUpdated=Fri Aug 21 17:23:29 CEST 2009, status=STARTING, exitStatus=exitCode=UNKNOWN;exitDescription=, job=[JobInstance: id=2001, JobParameters=[{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10, banks=RBOS}], Job=[executeDueCollectionSpringBatchJob]]
21/08/2009 17:23:29,264 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:29,279 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Resuming state=processDueCollectionStep with status=UNKNOWN
21/08/2009 17:23:29,279 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Handling state=processDueCollectionStep
21/08/2009 17:23:29,279 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getLastStepExecution]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:29,279 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getStepExecutionCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:29,279 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.add]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:29,295 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.job.AbstractJob  - Executing step: [TaskletStep: [name=processDueCollectionStep]]
21/08/2009 17:23:29,295 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Executing: id=2041
21/08/2009 17:23:29,295 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:29,295 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.util.PlaceholderTargetSource  - Rehydrating scoped target: [lazyBindingProxy.collectionItemReader]
21/08/2009 17:23:29,311 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Creating object in scope=step, name=lazyBindingProxy.collectionItemReader#sysinit
21/08/2009 17:23:29,342 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=com.te.jpay.processing.batch.CollectionRowMapper#510c510c
21/08/2009 17:23:29,358 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean#58d858d8
21/08/2009 17:23:35,576 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=lazyBindingProxy.collectionItemReader#sysinit
21/08/2009 17:23:35,576 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,592 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.context.StepContextRepeatCallback  - Preparing chunk execution for StepContext: org.springframework.batch.core.scope.context.StepContext@25002500
21/08/2009 17:23:35,592 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.context.StepContextRepeatCallback  - Chunk execution starting: queue size=0
21/08/2009 17:23:35,780 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.item.ChunkOrientedTasklet  - Inputs not busy, ended: true
21/08/2009 17:23:35,780 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.tasklet.TaskletStep  - Applying contribution: [StepContribution: read=0, written=0, filtered=0, readSkips=0, writeSkips=0, processSkips=0, exitStatus=EXECUTING]
21/08/2009 17:23:35,795 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.tasklet.TaskletStep  - Saving step execution after commit: StepExecution: id=2041, name=processDueCollectionStep, status=STARTED, exitStatus=EXECUTING, readCount=0, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=1, rollbackCount=0, exitDescription=
21/08/2009 17:23:35,795 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,795 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Step execution success: id=2041
21/08/2009 17:23:35,795 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,795 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,858 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Step execution complete: StepExecution: id=2041, name=processDueCollectionStep, status=COMPLETED, exitStatus=COMPLETED, readCount=0, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=1, rollbackCount=0
21/08/2009 17:23:35,858 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,873 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Completed state=processDueCollectionStep with status=COMPLETED
21/08/2009 17:23:35,873 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Handling state=end1
21/08/2009 17:23:35,873 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Completed state=end1 with status=COMPLETED
21/08/2009 17:23:35,873 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.AbstractJob  - Job execution complete: JobExecution: id=2041, startTime=Fri Aug 21 17:23:29 CEST 2009, endTime=null, lastUpdated=Fri Aug 21 17:23:29 CEST 2009, status=COMPLETED, exitStatus=exitCode=COMPLETED;exitDescription=, job=[JobInstance: id=2001, JobParameters=[{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10, banks=RBOS}], Job=[executeDueCollectionSpringBatchJob]]
21/08/2009 17:23:35,873 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:35,889 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] completed with the following parameters: [{randomParameter=6c2a9193-c48a-44f3-9b41-e09cf895f02e, executionDate=2009-01-10, banks=RBOS}] and the following status: [COMPLETED]
21/08/2009 17:23:39,061 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getLastJobExecution]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT
21/08/2009 17:23:39,061 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.createJobExecution]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT
21/08/2009 17:23:39,061 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] launched with the following parameters: [{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10, banks=RBOS}]
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.AbstractJob  - Job execution starting: JobExecution: id=2042, startTime=null, endTime=null, lastUpdated=Fri Aug 21 17:23:39 CEST 2009, status=STARTING, exitStatus=exitCode=UNKNOWN;exitDescription=, job=[JobInstance: id=2002, JobParameters=[{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10, banks=RBOS}], Job=[executeDueCollectionSpringBatchJob]]
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Resuming state=processDueCollectionStep with status=UNKNOWN
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Handling state=processDueCollectionStep
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getLastStepExecution]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.getStepExecutionCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.add]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.job.AbstractJob  - Executing step: [TaskletStep: [name=processDueCollectionStep]]
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Executing: id=2042
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.util.PlaceholderTargetSource  - Rehydrating scoped target: [lazyBindingProxy.collectionItemReader]
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Creating object in scope=step, name=lazyBindingProxy.collectionItemReader#sysinit
21/08/2009 17:23:39,077 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=com.te.jpay.processing.batch.CollectionRowMapper#510c510c
21/08/2009 17:23:39,092 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean#58d858d8
21/08/2009 17:23:39,092 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.StepScope  - Registered destruction callback in scope=step, name=lazyBindingProxy.collectionItemReader#sysinit
21/08/2009 17:23:39,092 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,092 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.context.StepContextRepeatCallback  - Preparing chunk execution for StepContext: org.springframework.batch.core.scope.context.StepContext@32d632d6
21/08/2009 17:23:39,092 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.scope.context.StepContextRepeatCallback  - Chunk execution starting: queue size=0
21/08/2009 17:23:39,123 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.item.ChunkOrientedTasklet  - Inputs not busy, ended: true
21/08/2009 17:23:39,123 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.tasklet.TaskletStep  - Applying contribution: [StepContribution: read=0, written=0, filtered=0, readSkips=0, writeSkips=0, processSkips=0, exitStatus=EXECUTING]
21/08/2009 17:23:39,123 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.tasklet.TaskletStep  - Saving step execution after commit: StepExecution: id=2042, name=processDueCollectionStep, status=STARTED, exitStatus=EXECUTING, readCount=0, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=1, rollbackCount=0, exitDescription=
21/08/2009 17:23:39,123 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,139 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Step execution success: id=2042
21/08/2009 17:23:39,139 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,139 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.step.AbstractStep  - Step execution complete: StepExecution: id=2042, name=processDueCollectionStep, status=COMPLETED, exitStatus=COMPLETED, readCount=0, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=1, rollbackCount=0
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.updateExecutionContext]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Completed state=processDueCollectionStep with status=COMPLETED
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Handling state=end1
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.flow.support.SimpleFlow  - Completed state=end1 with status=COMPLETED
21/08/2009 17:23:39,155 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.batch.core.job.AbstractJob  - Job execution complete: JobExecution: id=2042, startTime=Fri Aug 21 17:23:39 CEST 2009, endTime=null, lastUpdated=Fri Aug 21 17:23:39 CEST 2009, status=COMPLETED, exitStatus=exitCode=COMPLETED;exitDescription=, job=[JobInstance: id=2002, JobParameters=[{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10, banks=RBOS}], Job=[executeDueCollectionSpringBatchJob]]
21/08/2009 17:23:39,170 [schedulerFactoryBean_QuartzSchedulerThread] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager  - Creating new transaction with name [org.springframework.batch.core.repository.JobRepository.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
21/08/2009 17:23:39,170 [schedulerFactoryBean_QuartzSchedulerThread] INFO  org.springframework.batch.core.launch.support.SimpleJobLauncher  - Job: [FlowJob: [name=executeDueCollectionSpringBatchJob]] completed with the following parameters: [{randomParameter=2ec23f03-fd09-48ac-aa56-bfa25c15e04b, executionDate=2009-12-10, banks=RBOS}] and the following status: [COMPLETED]
21/08/2009 17:23:44,233 [Thread-5] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory  - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@66c466c4: defining beans [schedulerReportable,schedulingService,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,schedulerFactoryBean,springBatchJobLauncherDetails,triggerConfigurationService,schedulerOperationService,jobRepository,org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0,jobRegistry,jobLauncher,jobOperator,collectionItemProcessor,collectionItemWriter,genericItemFailureListener,collectionItemReader,org.springframework.batch.core.scope.internalStepScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,processDueCollectionStep,executeDueCollectionSpringBatchJob,PwhDatasource,JPayDatasource,transactionManager,JPay:TransactionDefinition.READ_ONLY,JPay:TransactionDefinition.UPDATE,schedulerTaskExecutor,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,paymentDao,mandateDao,JPay:BankAppsIntegrationClient,JSwitchClient,org.springframework.jms.core.JmsTemplate#0,connectionFactory,jpayOutgoingQueue,JPay:ProcessFlowManager,JPay:InwardDDCollectionCanceller,JPay:InwardDDCollectionExecutor,JPay:InwardDDCollectionReceiver,JPay:InwardDDCollectionRefunder,JPay:InwardDDCollectionRejecter,JPay:InwardDDCollectionReturner,JPay:InwardDDCollectionReverser,paymentParser,jaxbMarshaller,TRUE,paymentDispatcher,messageGenerator,messageToBulkerGenerator,JPay:GetPaymentProcessStepsService,JPay:UpdatePaymentProcessStepsService,JPay:GetAvailableProcessingLineService,JPay:BankPaymentProcessStepDao,defaultPaymentProcessStepDaoImpl,paymentProcessStepDao,JPay:BankPaymentProcessStepFlowOptionDao,JPay:SessionFactory,JPay:JDirectoryClient,JPay:BlockingAgreementHelper,JPay:CounterValueHelper,JPay:CreditMechanismHelper,JPay:ExchangeHelper,JPay:ExecutionDateHelper,JPay:ValueDateHelper,JPay:ProductHelper,JPay:BankDetailsHelper,JPay:SettlementDateHelper,JPay:CompensationAmountHelper,lazyBindingProxy.collectionItemReader]; root of factory hierarchy
21/08/2009 17:23:44,249 [Thread-5] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory  - Retrieved dependent beans for bean 'org.springframework.batch.core.explore.support.JobExplorerFactoryBean#2a7a2a7a': [jobOperator]
21/08/2009 17:23:44,249 [Thread-5] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter  - Invoking destroy() on bean with name 'org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor#0'
","21/Aug/09 4:28 AM;david_syer;I think there's some logging missing from the PlaceholderTargetSource.  I added another debug line just today, so can you try that bit again with a snapshot from like 5 minutes ago?  Also it would be good to see the trace logs from org.springframework.jdbc (attach a file if it's more than a few lines).","21/Aug/09 6:27 AM;david@davidkarlsen.com;Did you check that in?
Latest change for PlaceholderTargetSource is 14.08, rev3553.",21/Aug/09 7:00 AM;david@davidkarlsen.com;Doh - diffed it - a change in logging - sure thing - coming right up,"21/Aug/09 11:13 AM;david@davidkarlsen.com;Complete log file during test.
I change the date value for the two executions.","21/Aug/09 11:17 AM;david@davidkarlsen.com;And the maven metadata in the spring-batch-core file was:
#Generated by Maven
#Thu Aug 20 20:09:24 BST 2009
version=2.0.3.CI-SNAPSHOT
groupId=org.springframework.batch
artifactId=spring-batch-core
","21/Aug/09 8:00 PM;david_syer;OK, I see the problem now.  I think it was introduced in a 2.0.3 snapshot though, so I doubt if this precise issue occurred before that.  Anyway I'll see about fixing it.",21/Aug/09 8:49 PM;david_syer;Fixed it.  There was actually a test for this (MultipleContextPlaceholderTargetSourceTests) but it didn't test values injected into a Map.,,,,,,,,,
CommandLineJobRunner -restart should accept executionId as parameter.,BATCH-1376,27630,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,asegarra,asegarra,17/Aug/09 2:41 AM,30/Dec/09 11:30 PM,10/May/19 2:37 AM,30/Dec/09 11:30 PM,2.1.0,,,,,,2.1.0.RC1,,,Core,,,,,0,,"CommandLineJobRunner -restart should accept an optional execution id,  this would allow restarting a specific execution from the command line.",,;30/Dec/09 11:30 PM;david_syer;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,295228800,,,,,2009-08-18 18:03:11.86,11311,false,david_syer(david_syer),,,,0|i03vqv:,22685,19154,,,,,18/Aug/09 6:03 PM;david_syer;We need to retain the existing behaviour so the execution id has to be optional.  I guess {{-restart[=id]}} would work for everyone (optional id part of the restart option VM argument)?,19/Aug/09 6:23 AM;asegarra;That's exactly what I had in mind. That would be perfect.,"30/Dec/09 11:30 PM;david_syer;As it turns out -restart=id was not the right idiom, so I implemented this feature by changing the interpretation of the parameters instead: what used to be the jobName is now a jobIdentifier - it is interpreted as before as a jobName if it is not parseable to a Long id.  If it is an id it is interpreted as a JobExecution id, so this will restart the failed executio nwith id=123:

{noformat}
$ java ...CommandLineJobRunner -restart classpath:/config/context.xml 123
{noformat}",,,,,,,,,,,,,,,,,,,,
Mention the JobRegistryBeanPostProcessor  in the reference guide,BATCH-1374,27620,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david@davidkarlsen.com,david@davidkarlsen.com,16/Aug/09 5:09 AM,30/Dec/09 11:46 PM,10/May/19 2:37 AM,30/Dec/09 11:46 PM,2.1.0,,,,,,2.1.0.RC1,,,Documentation,,,,,0,,Explain how the JobRegistryBeanPostProcessor works and what's it useful for.,,;30/Dec/09 11:46 PM;david_syer;1200,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,306979200,,,,,2009-08-16 05:21:55.972,11313,true,david_syer(david_syer),,,,0|i01rsf:,10379,10365,,,,,"16/Aug/09 5:21 AM;dhgarrette;The BeanPostProcessor is part of core Spring and is, therefore, described in their reference documentation: http://static.springsource.org/spring/docs/2.5.x/reference/beans.html#beans-factory-extension-bpp","16/Aug/09 5:27 AM;david@davidkarlsen.com;Oh, the JobRegistryBeanPostProcessor  to be specific.",,,,,,,,,,,,,,,,,,,,,
Namespace support for partitioning,BATCH-1372,27618,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,15/Aug/09 2:18 AM,08/Dec/09 5:38 PM,10/May/19 2:37 AM,08/Dec/09 5:37 PM,,,,,,,2.1.0.M4,,,Core,,,,,0,,,,;08/Dec/09 5:38 PM;david_syer;14400,,,,,,,,,,,,,,14400,14400,14400,100%,14400,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,297129600,,,,,,11315,false,david_syer(david_syer),,,,0|i03vrb:,22687,19156,,,,,08/Dec/09 5:37 PM;david_syer;Fixed.  It also seemed like a good idea to change the constructor / configuration of a SimpleStepExecutionSplitter.  It's a breaking change but the old implementation didn't make much sense.,,,,,,,,,,,,,,,,,,,,,,
Bind to non-scalar map entry values in step scope,BATCH-1370,27606,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,13/Aug/09 3:22 AM,13/Aug/09 8:38 PM,10/May/19 2:37 AM,13/Aug/09 8:36 PM,2.0.0,,,,,,2.0.3,,,Core,,,,,0,,"Map entry values that are lists are not correctly bound in step scope.  E.g.

{code}
<property name=""map"">
	<map>
		<entry key=""foo"" value=""#{foo}""/>
		<entry key=""spam"" value=""#{list}""/>
	</map>
</property>
{code}

might result in foo=bar and spam=#{list} (not the value of the list itself) if #{foo} is scalar and #{list} is a List.",,;13/Aug/09 8:38 PM;david_syer;9000,,,,,,,,,,,,,,7200,0,9000,125%,7200,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,307238400,,,,,,11317,false,david_syer(david_syer),,,,0|i03vrr:,22689,19158,,,,,13/Aug/09 8:36 PM;david_syer;Fixed (and also allows binding of dates without registering custom editor).,,,,,,,,,,,,,,,,,,,,,,
Change semantics of @AfterChunk to execute outside transaction,BATCH-1369,27605,,Refactoring,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,13/Aug/09 2:59 AM,17/Oct/09 10:51 PM,10/May/19 2:37 AM,16/Sep/09 4:03 AM,,,,,,,2.1.0.M2,,,Core,,,,,0,,"It is possible in 2.0 to register a listener callback for execution after a chunk transaction has committed (you have to use stepOperations in the step to set a RepeatListener), but a more convenient way to do it would be for @AfterChunk to switch to being called after the commit.  Before the commit we have @AfterWrite so there is some duplication in the current semantics, which is a legacy of the 1.0 system where the write listener was called multiple times in a chunk.",,;16/Sep/09 4:04 AM;david_syer;600,,,,,,,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,304300800,,,,,,11318,false,david_syer(david_syer),,,,0|i03vrz:,22690,19159,,,,,16/Sep/09 4:03 AM;david_syer;Done.,,,,,,,,,,,,,,,,,,,,,,
Job stopped in split state does not finish with status = STOPPED,BATCH-1363,27560,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,devadasan,devadasan,08/Aug/09 7:54 PM,13/Aug/09 3:59 PM,10/May/19 2:37 AM,09/Aug/09 10:39 PM,2.0.0,,,,,,2.0.3,,,Core,,,,,0,,The analysis on the forum post isn't quite correct because SimpleFlow is used even for sequential executions.  The problem lies in the SplitState: it needs to unwrap ExecutionExceptions and re-throw their cause.,,;09/Aug/09 10:41 PM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,307238400,,,,,2009-08-09 22:39:38.156,11324,true,devadasan(devadasan),,,,0|i03vsn:,22693,19162,http://forum.springsource.org/showthread.php?t=75949,,,,09/Aug/09 10:39 PM;david_syer;Fixed.,"11/Aug/09 3:22 AM;devadasan;Dave,

Thanks for looking into this in quick time.

But, I am not exactly sure if this has fixed the problem.
I am facing the same issue.

I use tasklet step to accomplish the business task. 
Once the request for job stop is made, as expected, within TaskletStep's doExecute method, interruptionPolicy.checkInterrupted(stepExecution) line throws JobInterruptedException. 
This JobInterruptedException reaches SimpleFlow's catch block (which you had modified for this jira).  But here since we are not catching JobInterruptedException, it goes to the catch block of Exception. Here we rethrow this as FlowExecutionException. This reaches the SplitState, and subsequently to AbstractJob's execute() method's catch(Throwable e) portion, and job execution is marked as FAILED.

Could you please look into this once.",12/Aug/09 5:06 AM;david_syer;I don't understand what you mean because the FlowExecutionException should be unwrapped and rethrown by FlowJob.  It works for me.  Can you paste your job and your tasklet implementation and repository configuration (there was only a fragment in the forum post)?,13/Aug/09 3:59 PM;devadasan;Aplogies. I had some wrong thing done. Now its working perfectly. Thank you.,,,,,,,,,,,,,,,,,,,
Threads spinning doing nothing at end of multi-threaded Step,BATCH-1362,27557,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,07/Aug/09 7:02 PM,20/Aug/09 3:53 AM,10/May/19 2:37 AM,09/Aug/09 9:46 PM,2.0.0,,,,,,2.0.3,,,Core,Infrastructure,,,,0,,"Threads spinning doing nothing at end of multi-threaded Step.  When a multi-threaded step is waiting for its last chunk to process it needs to wait on threads that are FINISHED, rather than spinning round asking them over and over if they want to do more work.  The visible effect is often a large disparity between commit count and read count at the end of a step.  One user even reported an apparently infinite loop (probably it was just the JVM scheduler not giving priority to the real worker thread).",,;09/Aug/09 10:41 PM;david_syer;21600,,,,,,,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,09/Aug/09 9:46 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15602/mylyn-context.zip,08/Aug/09 7:14 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15601/mylyn-context.zip,,,,,,,,,,307584000,,,,,,11325,false,david_syer(david_syer),,,,0|i03vsv:,22694,19163,,,,,"07/Aug/09 11:09 PM;david_syer;Fixed by monitoring state of concurrent workers in TaskExecutorRepeatTemplate.  Using RepeatContext for now, but maybe we can fold this into the RepeatInternalState, so I'll leave it open for now.  If anyone is monitoring this issue, please try a snapshot build from tonight (Saturday).",09/Aug/09 9:46 PM;david_syer;Converted RepeatContext state into a convenience class in the RepeatInternalState of the TaskExecutorRepeatTemplate.,,,,,,,,,,,,,,,,,,,,,
Support for maps in PassThroughFieldExtractor,BATCH-1361,27545,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,ajeans,ajeans,06/Aug/09 1:18 AM,10/Aug/09 1:35 AM,10/May/19 2:37 AM,10/Aug/09 1:33 AM,2.0.2,,,,,,2.0.3,,,Infrastructure,,,,,0,,"PassThroughFieldExtractor  currently handles arrays, collections and fieldsets. Any other kind of data is simply wrapped in a Object array. 
I think it would be a good idea to make it also handle Map objects. 

(Explanation of my use case)
I created a step to do a JDBC to CSV conversion (simple output, no transformation needed)
- Reader: JdbcCursorItemReader with a ColumnMapRowMapper
- Writer : FlatFileItemWriter with a DelimitedLineAggregator

However this simple construction fails to give a valid output, what I get in the CSV file is the toString() of a map per line.  In fact, DelimitedLineAggregator is initialized by default with the PassThroughFieldExtractor, which does not handle Maps at all (therefore, the map is considered as a normal object, wrapped in an Array, and we only get the toString() of the map, and no flat file delimiter)

	public Object[] extract(T item) {

		if (item.getClass().isArray()) {
			return (Object[]) item;
		}

		if (item instanceof Collection<?>) {
			return ((Collection<?>) item).toArray();
		}

		if (item instanceof FieldSet) {
			return ((FieldSet) item).getValues();
		}

		return new Object[] { item };

	}

I think adding map handling would help make the default behaviour more robust.

	public Object[] extract(T item) {

		if (item.getClass().isArray()) {
			return (Object[]) item;
		}

		if (item instanceof Collection<?>) {
			return ((Collection<?>) item).toArray();
		}

		if (item instanceof Map<?, ?>) {
			return ((Map<?, ?>) item).values().toArray();
		}

		if (item instanceof FieldSet) {
			return ((FieldSet) item).getValues();
		}

		return new Object[] { item };

	}

In my case, it makes input from ColumnMapRowMapper output perfectly in the CSV file.

I worked around the problem with a custom FieldExtractor, but I really think that making the default extractor more resilient would be a plus.

",,;10/Aug/09 1:35 AM;david_syer;1200,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,10/Aug/09 1:34 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15604/mylyn-context.zip,,,,,,,,,,,307584000,,,,,2009-08-10 00:17:13.47,11326,false,david_syer(david_syer),,,,0|i03vt3:,22695,19164,,,,,"10/Aug/09 12:17 AM;david_syer;Unfortunately I don't think it's as simple as that since the order of the values() is indeterminate, so the aggregator will never know what to expect.  (The same flaw applies to the existing implementation if it is passed a Set, so that is really a bug, but easy to work around.)
","10/Aug/09 12:43 AM;ajeans;It works in my particular case because as commons collections is available in my classpath, the ColumnRowMapper creates an OrderedMap. As a result the order of ""values()"" is maintained.

I didn't want to put a cast to OrderedMap in the field extractor as I thought that the dependency on commons collections was optional (is this correct?).

Do you know of any way to cast to OrderedMap without making commons collections a build time dependency? 

Thanks




",10/Aug/09 12:53 AM;david_syer;Why would you need to cast to OrderedMap (especially if it isn't one)?  Maybe all we need to do is document the extract() method more so that people are not surprised by the order of the values (i.e. it's only predictable if the input is ordered or sorted)?,"10/Aug/09 1:08 AM;ajeans;> Why would you need to cast to OrderedMap (especially if it isn't one)?
You said that the order of ""values()"" is indeterminate, I am saying that the ColumnMapRowMapper creates an OrderedMap, so casting the result to Map and using values() returns values in a determinate order.

What I meant was (maybe) to do 
  if (item instanceof OrderedMap<?, ?>) {
   return ((OrderedMap<?, ?>) item).values().toArray();
  }
instead of what I proposed earlier
  if (item instanceof Map<?, ?>) {
   return ((Map<?, ?>) item).values().toArray();
  }

However this would make spring batch build-depend on commons collections, so it is probably a no-go. That is why I am advocating using the Map interface.


> Maybe all we need to do is document the extract() method more so that people are not surprised by the order of the values (i.e. it's only predictable if the input is ordered or sorted)?
Warning people in the javadoc / doc would be good. I don't see how passing an unordered collection element to a field extractor could be desireable. 
",10/Aug/09 1:33 AM;david_syer;Done.,,,,,,,,,,,,,,,,,,
Restartable look-ahead (peekable) ItemReader,BATCH-1347,27466,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,28/Jul/09 4:27 AM,16/Nov/09 10:26 PM,10/May/19 2:37 AM,16/Nov/09 10:25 PM,,,,,,,2.1.0.M3,,,,,,,,2,,"Restartable look-ahead ItemReader.  Often (especially with flat files for some reason) you need to peek ahead to the next source record to decide on whether an item is terminating.  It can easily be done if restartability is not required by simply wrapping an existing reader and buffering up to one row.,  Framework support for this feature would be nice but woul need to do a bit more work to respect the ItemStream interface of the delegate.",,;16/Nov/09 10:26 PM;david_syer;7200,,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,299030400,,,,,,11338,false,david_syer(david_syer),,,,0|i03vvj:,22706,19175,,,,,16/Nov/09 10:25 PM;david_syer;Added SIngleItemPeekableItemReader.,,,,,,,,,,,,,,,,,,,,,,
Check for valid parameter arguments in CommandLineJobRunner,BATCH-1342,27426,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,22/Jul/09 5:24 PM,09/Aug/09 10:57 PM,10/May/19 2:37 AM,09/Aug/09 10:56 PM,,,,,,,2.0.3,,,Core,,,,,0,,"If the user doesn't read or understand the Javadocs, then they might not realise that JobParameters are passed as name=value arguments.  If there are parameter arguments but the JobParametersConverter doesn't return anything, then we can assume that there is a problem and barf.",,;09/Aug/09 10:57 PM;david_syer;900,,,,,,,,,,,,,,1200,0,900,75%,1200,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,307584000,,,,,,11343,false,david_syer(david_syer),,,,0|i03un3:,22506,18960,,,,,09/Aug/09 10:56 PM;david_syer;Added assertion (so error is logged and exit status is 1) about valid job parameters.,,,,,,,,,,,,,,,,,,,,,,
Add Support for Native Queries to Jpa/Hibernate readers,BATCH-1340,27408,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,lucas.l.ward,lucas.l.ward,21/Jul/09 2:40 PM,13/Jan/10 12:21 AM,10/May/19 2:37 AM,13/Jan/10 12:21 AM,2.0.2,,,,,,2.1.0.RC1,,,Infrastructure,,,,,4,,"The HibernateCursorItemReader and JpaPagingItemReader currently only support HQL and JPQL query strings respectively.  There are a number of scenarios where a SQL string may be required.  One example I have run into recently is Oracle's support for hierarchical queries (CONNECT BY PRIOR).  This feature isn't supported by Hibernate in HQL and requires a SQL query. (native query in jpa)  This can be worked around by using a Jdbc reader, but if a lot of queries require this it could be problematic, especially since it would be advantageous to keep your mapping solutions consistent.",,;13/Jan/10 12:21 AM;david_syer;10800,,,,,,,,,,,,,,28800,18000,10800,37%,28800,18000,10800,,,,,,,,,,,,,,,30/Nov/09 9:32 AM;litius;hibernate-and-jpa-native-query-support-more-tests.patch;https://jira.spring.io/secure/attachment/15976/hibernate-and-jpa-native-query-support-more-tests.patch,27/Nov/09 9:59 PM;litius;hibernate-and-jpa-native-query-support.patch;https://jira.spring.io/secure/attachment/15970/hibernate-and-jpa-native-query-support.patch,27/Nov/09 9:59 PM;litius;query-provider-visual.png;https://jira.spring.io/secure/attachment/15971/query-provider-visual.png,,,,,,,,,294105600,,,,,2009-07-22 04:23:50.611,11345,false,david_syer(david_syer),,,,0|i03vwf:,22710,19179,,,,,"22/Jul/09 4:23 AM;david_syer;As far as I know native SQL is only supported by Hibernate, and is used where JdbcTemplate and RowMapper would have been just as good if not better (there is no ORM value add for native SQL).  Is there any reason you can't use straight JDBC for SQL queries?  Or named queries if you really want to use Hibernate?","22/Jul/09 11:38 AM;lucas.l.ward;JPA supports Native queries as well, I've used it multiple times.  (there's a createNativeQuery method on EntityManager)  Named queries are supported by both as well.  However, we would have change the way we call them in our reader, since we just all createQuery in both JPA and Hibernate, so even if we wanted to support named queries, we would have to modify the readers.  

Named query support is a good example of why we should enhance these two readers.  If a project has decided as a standard that they're going to use named queries across their whole application, the only place they wouldn't be able to is with batch readers.  Using the SQL readers for one or two one offs is okay, but if you have to do it everywhere, it fractures things a bit.  Furthermore, you would have to write your own RowMapper for those scenarios, so if you refactor an object, you would need to know if that object was also being used in batch.  It would be much easier to just allow for those in our readers.  It's a simple change, although I think we would need to think through how users specified between standard/named/native queries.","30/Sep/09 2:08 PM;litius;""HibernateCursorItemReader"" supports named (not parameterized / native) SQL queries already since ""session.getNamedQuery( queryName )"" method works well with both HQL and SQL named queries.

An example (from ""spring-batch-infrastructure""): Instead of an HQL query in ""Foo.hbm.xml"", put SQL query:

	<sql-query name=""allFoos"">
	
		<return alias=""foo"" class=""org.springframework.batch.item.sample.Foo""/>
		
		SELECT	id AS {foo.id}, 
				name AS {foo.name}, 
				value AS {foo.value} 
		FROM T_FOOS
		
	</sql-query>

""HibernateCursorItemReaderNamedQueryIntegrationTests"" would like it no less than HQL query :)

That is for Hibernate. Of course it would be good to get JPA's (entityManager.createNamedQuery) integrated as well.","30/Sep/09 2:40 PM;lucas.l.ward;Wow, I must have missed when the 'queryName' property was added to that reader, because it definitely wasn't in the original version.  I can't say I particularly care for the method of choosing one over the other though.  Deciding to use the named query if it has text, but the queryString if it doesn't smells funny to me.  I was thinking of potentially using some kind of inheritance structure or other technique, strictly because I didn't want to use some kind of flag or if text existed.  And as you say, the JPA version still needs the same feature, although definitely implemented in a better way.",01/Oct/09 9:01 AM;david_syer;StringUtils.hasText works for me (it's a pretty common idiom in components that have mutually exclusive configuration options).  I guess some validation during initialization would be useful if it isn't already there.,"01/Oct/09 10:10 AM;litius;In this case it actually seems that using ""inheritance structure""/delegation(?) would provide a greater benefit. Let's say later we need to support not only Hibernate named/native SQL, but also Hibernate named/native/_parameterized_ SQL, then the logic in HibernateCursorItemReader may become quite messy - since now it needs to take care of HQL, named HQL, named SQL, named-parameterized SQL.

Currently (judging by Java Docs) support for SQL named queries in ""HibernateCursorItemReader"" is quite accidental ( in a good way :), since the code did not even expect SQL to be thrown at it (again, this is judging from JavaDocs).

Hence, I think, it make sence to extend ""HibernateCursorItemReader"" or make it delegate query operations (fetching the query) to an extra component. Then (just an idea) we can take a map with parameters from XML Config / Annotations, and set it on the Query using Hibernate ""Query.setProperties"":

https://www.hibernate.org/hib_docs/v3/api/org/hibernate/Query.html#setProperties%28java.util.Map%29

(or set a List with parameters, Map just seems more readable from configuration perspective).

""JpaPagingItemReader"" can be extended/have component to delegate to in a same way. Although we might need to encapsulate setting parameteres to ""javax.persistence.Query"" as a Map, so parameters can be set in a same way as in the Hibernate case.
","27/Nov/09 9:59 PM;litius;maintaining backwards compatibility [since it is not a major release] had me thinking for some time...

wrote a couple of integration tests for both ItemReaders, still need to finish up component tests for individual query providers.

refer to ""query-provider-visual.png"" to get the visual (simple class diagram) + Java Docs.

Nice thing about JPA is that introducing native SQL support [JpaNativeQueryProvider] inherited parameterization, which means that ""select * from T_FOOS where value >= :limit"" with ""reader.setParameterValues(Collections.<String, Object>singletonMap(""limit"", 3));"" will work exactly the same as it does with JPQL.

For the Hibernate native SQL can be used though the named SQL within the mapping file which is already supported as per comment above [which I would think is a prefered usage in case native SQL is needed], as well as though the new HibernateNativeQueryProvider [in a patch] which will map the result to the entity for a single item.","28/Nov/09 7:59 AM;litius;was mocking around with having abstract providers implementing ItemStream interface so the QueryProvider interface does not suggest statefullness => the close method would be implemented on the abstract level (rather than dictated by provider interface) and would be called by the framework...

still thinking though, since wanted to make Query Providers independent (from ItemReader / ItemStream / etc..) so they can be used outside of Spring container if needed. However opening and closing stream automatically does look compeling.","29/Nov/09 8:05 PM;david_syer;If you are worried about using query providers outside Batch, is there really much value in implementing ItemStream?  Presumably the state management is mandatory, so the ItemReader that wraps the query provider can call the relevant methods where necessary.","30/Nov/09 9:32 AM;litius;[ Yeap, that is how it is implemented currently where ItemReader (JPA / Hibernate) calls queryProvider.close() on doClose(). ]

Adding more tests (second patch attached), so now we have these new tests in place:

HibernateCursorItemReaderNativeQueryIntegrationTests
JpaPagingItemReaderNativeQueryIntegrationTests
AbstractHibernateQueryProviderIntegrationTests
AbstractHibernateQueryProviderTests
AbstractJpaQueryProviderIntegrationTests
AbstractJpaQueryProviderTests
HibernateNativeQueryProviderIntegrationTests
HibernateNativeQueryProviderTests
JpaNativeQueryProviderIntegrationTests
JpaNativeQueryProviderTests","13/Jan/10 12:21 AM;david_syer;Thanks for the patches.  I didn't like the stateful query providers, so I refactored those to accept a session factory / entity manager through the interface (then the caller is responsible for managing the state) - the generic QueryProvider interface also seemed gratuitous, so I split that into un-parameterized Jpa* and Hibernate* versions.  I also added named parameter support to the HibernateCursorItemReader.  Refactored tests a lot (unnecessary abstracts removed).",,,,,,,,,,,,
"Allow segregation of jobs by group, type or origin",BATCH-1338,27378,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,19/Jul/09 6:46 PM,08/Sep/09 10:48 PM,10/May/19 2:37 AM,08/Sep/09 10:48 PM,,,,,,,,,,Core,,,,,0,,"One idea was to allow <beans:qualifier/> inside a <job/> and use that feature somehow.  Ultimately though (unless we change the repository interface and / or meta data) the job name has to be modified, since that is the key that is used for locating and tracking the job executions and job instances in the repository.  It could be the responsibility of the JobRegistry to prepend something context-related to the job name before registering it.",,;07/Sep/09 7:04 PM;david_syer;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,304992000,,,,,,11347,false,david_syer(david_syer),,,,0|i034of:,18300,173,http://forum.springsource.org/showthread.php?t=75962,,,,"07/Sep/09 7:02 PM;david_syer;Resolved by adding apecial JobFactory parent class that is ""GroupAware"".  To see teh effect use a JobRegistryBeanPostProcessor with an explicit groupName, or extend the postprocessor or the ClassPathXmlJobRegistry to dynamically determine a group name.","08/Sep/09 10:48 PM;david_syer;Revised, replacing the GroupAware responsibility on a Job wrapper, not the factory.  This is preferable in the case that clients need to AOP advise a Job instance.  Recommend use of the JobRegistryBeanPostProcessor for that reason.",,,,,,,,,,,,,,,,,,,,,
"Add null check for FlatFileItemReader in case resource exists on close, but not on open(!)",BATCH-1297,26967,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,17/Jun/09 6:13 PM,19/Jul/09 5:50 PM,10/May/19 2:37 AM,17/Jun/09 6:16 PM,2.0.0,,,,,,2.0.2,,,Infrastructure,,,,,0,,"Add null check for FlatFileItemReader in case resource exists on close, but not on open(!)  Related to BATCH-1082.",,;17/Jun/09 6:17 PM;david_syer;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,312163200,,,,,,11384,false,david_syer(david_syer),,,,0|i03w2n:,22738,19206,,,,,,,,,,,,,,,,,,,,,,,,,,,
JobParserJobFactoryBean should be a singleton,BATCH-1280,26815,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,04/Jun/09 9:11 PM,04/Jun/09 9:18 PM,10/May/19 2:37 AM,04/Jun/09 9:18 PM,2.0.0,,,,,,2.0.2,,,Core,,,,,0,,JobParserJobFactoryBean should be a singleton.  This will cause issues with the JobRegistry - e.g. multiple registrations of the same job in integration tests.,,;04/Jun/09 9:18 PM;david_syer;1200,,,,,,,,,,,,,,1800,0,1200,66%,1800,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,313286400,,,,,,11400,false,david_syer(david_syer),,,,0|i03w4n:,22747,19214,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.springframework.batch.item.file.transform.DefaultFieldSet#readBigDecimal doesn't use supplied numberFormat,BATCH-1262,26778,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,yann,yann,01/Jun/09 8:53 PM,04/Jun/09 7:54 PM,10/May/19 2:37 AM,01/Jun/09 9:59 PM,2.0.1,,,,,,2.0.2,,,Infrastructure,,,,,0,,"whereas all other read()-methods for numbers do
",,;01/Jun/09 10:00 PM;david_syer;3600,,,,,,,,,,,,,,1200,0,3600,300%,1200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,313545600,,,,,2009-06-01 21:59:54.65,11417,false,david_syer(david_syer),,,,0|i03w6v:,22757,19224,,,,,"01/Jun/09 9:59 PM;david_syer;It's actually harder than it looks do this completely generally because BigDecimal formats can only be specified properly with MathContext (not NumberFormat).  However, clearly it is useful to be able to localise BigDecimals, so I implemented a compromise which works for all the scenarios I could think of.  It may break if the number format is not a DecimalFormat.",,,,,,,,,,,,,,,,,,,,,,
Use standard JPQL in JPA sample,BATCH-1251,26708,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,26/May/09 5:32 PM,26/May/09 8:39 PM,10/May/19 2:37 AM,26/May/09 8:38 PM,2.0.0,,,,,,2.0.1,,,Samples,,,,,0,,Use standard JPQL in JPA sample.  http://forum.springsource.org/showthread.php?t=72532,,;26/May/09 8:39 PM;david_syer;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,314064000,,,,,,11427,false,david_syer(david_syer),,,,0|i01nun:,9741,9771,,,,,26/May/09 8:38 PM;david_syer;Fixed thanks.,,,,,,,,,,,,,,,,,,,,,,
Add support for a JSON Reader from text files which are JSON formatted,BATCH-1246,26645,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,liav.ezer,liav.ezer,20/May/09 5:07 AM,16/Nov/09 7:19 AM,10/May/19 2:37 AM,16/Nov/09 1:59 AM,2.0.0,,,,,,2.1.0.M3,,,Core,,,,,0,,"When the batch retrieves data from a text file we currently use a reader which tokenize the fields via a line tokenizer bean.
We supply it with a delimiter & an array of names representing each line's field in the text file.

In case the file is written in a JSON format such as {""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""} we'll need to workaround the reader by implementing our own lineTokenizer bean which parses the JSON text with one of the JSON parsers in hand.

My improvment suggestion is to add a JSON reader which supply its tokenizer bean with an array of names (like the original reader does) & other relevant paramets such as delimeter, quates, dimension.

The dimension is important when the JSON string represents also structures in the following format:
 {""field1"":""val1"",""field2"":""{""f1"":""v1"", ""f2"":""v2"",...,""fn"":""v2""}"",...,""fieldn"":""valn""}  which we'll be mapped to objects/collection types.

Thanks.",,Added line mapper and record separator using Jackson to parse the line up to a map.;11/Nov/09 4:18 AM;david_syer;3600,,,,,,,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,299030400,,,,,2009-05-20 19:57:52.034,11432,false,david_syer(david_syer),,,,0|i03gqf:,20253,17652,,,,,20/May/09 7:57 PM;david_syer;I don't quite understand this yet.  The example input data above is a single item right?  What does the wholke file look like?,"21/May/09 4:10 AM;liav.ezer;Hi Dave,

Yes, this is one line of the whole file:
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""} 

While the whole file can contain m lines:

{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""} 
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""} 
.
.
.
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""} ","21/May/09 4:14 PM;david_syer;Maybe the input should be valid JSON?  You would need to add a wrapper, e.g:

{code}
{""records"":
  [
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""}, 
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""},
.
.
.
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""}  
  ]
}
{code}

I'm not sure if that makes the reader easier or harder to write, but at least if the input was valid we could use an off the shelf parser (like Jettison).","27/Jun/09 10:41 PM;david_syer;The ""records"" header is not necessary, but should probably be optional.  A pure array should also work:

{code}
[
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""}, 
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""},
.
.
.
{""field1"":""val1"",""field2"":""val2"",...,""fieldn"":""valn""}  
]
{code}

The important thing is the commas between elements and the [] header and footer, to make it a valid JSON object.","11/Nov/09 4:18 AM;david_syer;I think it is also valuable to have a way to parse files that are not valid JSON objects (one object per record), as per the original request.  To facilitate this I have added JsonRecordSeparatorPolicy and JsonLineMapper.","16/Nov/09 1:59 AM;david_syer;In fact, I'm not sure a file that is a whole JSON object is all that useful, so maybe it's not worth the extra effort to implement it.  Open a new issue if you want the ""whole document"" version to work.","16/Nov/09 6:44 AM;liav.ezer;Hi Dave,

Be advice that many web aplications send client's request formatted in a js notation.

Hence, it's extremely valuable to supply the community with a tool which can tokenize & parse it into a an POJO.

gson.jar (by Google) is one example of such usage.

I can post a self wrriten bean which acts as a generic line tokenizer for JSON.

Anyway, thanks for your advice.

Liav Ezer.","16/Nov/09 7:19 AM;david_syer;Not quite sure what you mean. I'm quite aware of the role and popularity of JSON, but not clear on your use case: how does a web application use a line mapper? The mapper that I put in Spring Batch is pretty generic, I suppose, but it uses Jackson instead of gson (Jackson is used elsewhere in Spring).  Is it not what you wre expecting? I thought it matched your original request pretty much exactly.",,,,,,,,,,,,,,,
Sybase 12.5 compatiblity when writing to the spring batch context tables,BATCH-1232,26474,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,msimaan,msimaan,04/May/09 2:12 AM,16/Jun/09 7:35 AM,10/May/19 2:37 AM,16/Jun/09 7:34 AM,2.0.0,,,,,,2.0.2,,,Core,,,,,0,,"In version 2.0.0, I am facing an error when persisting to the context tables (BATCH_JOB_EXECUTION_CONTEXT in specific) on the sybase version 12.5. The class JdbcExecutionContextDao shows that when the field SERIALIZED_CONTEXT is set to null, it is set with type 2005 (Types.CLOB). This type is not supported on sybase 12.5",,;16/Jun/09 7:35 AM;thomas.risberg;28800,,,,,,,,,,,,,,7200,0,28800,400%,7200,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,312422400,,,,,,11445,true,thomas.risberg(thomas.risberg),,,,0|i03w9j:,22769,19236,http://forum.springsource.org/showthread.php?t=70701,,,,"14/Jun/09 7:17 PM;msimaan;I tried a fix for this issue, I just replaced the Types.CLOB with Types.LONGVARCHAR. I tested on sybase 12.5 and oracle 9. It worked just fine.",,,,,,,,,,,,,,,,,,,,,,
Possibility to modify proxyTargetClass property of StepScope,BATCH-1228,26462,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,mthielen,mthielen,02/May/09 11:36 AM,03/May/09 10:22 PM,10/May/19 2:37 AM,02/May/09 5:48 PM,2.0.0,,,,,,2.0.1,,,Core,,,,,0,,When using the step scope Spring-Batch only returns the possible interfaces. As I am using a Spring context xml as a prototype definition for my DTOs (which dont have interfaces) it would be great to be able to set the proxyTargetClass property to true so the scope will hopefully return the real classes.,,;02/May/09 5:49 PM;david_syer;600,;03/May/09 10:22 PM;david_syer;600,,,,,,,,,,,,,600,0,1200,200%,600,0,1200,,,,,,,,,,,,,,,03/May/09 12:02 AM;mthielen;PlaceholderProxyFactoryBean.java;https://jira.spring.io/secure/attachment/15361/PlaceholderProxyFactoryBean.java,,,,,,,,,,,316051200,,,,,2009-05-02 17:48:27.208,11449,true,david_syer(david_syer),,,,0|i03w9z:,22771,19238,,,,,02/May/09 5:48 PM;david_syer;Added setter for proxyTargetClass in StepScope (the private field was already there).,"02/May/09 5:50 PM;david_syer;I'm interested in the use case though.  If you objects are prototypes for DTOs, don't they need to be scope=""prototype""?","02/May/09 10:54 PM;mthielen;Yes, scope=prototype was my first solution that worked great. But I wanted the DTOs to direclty get wired with each other:

	<bean id=""Address"" class=""de.my.Address"" scope=""step"" lazy-init=""true"" />
	
	<bean id=""Product"" class=""de.my.Product"" scope=""step"" lazy-init=""true"">
		<property name=""address"" ref=""Address"" />
	</bean>

When I need a Product DTO it already has a reference to an Address DTO.

Thanks for your extreme fast response! Im overwhelmed by your speed guys!","03/May/09 12:02 AM;mthielen;Unfortunately the implemented setter does not affect anything. I changed PlaceholderProxyFactoryBean to get it working.
In line 165 the comment says:

			// ProxyFactoryBean's ""proxyTargetClass"" default is TRUE, so we
			// don't need to set it explicitly here.

But the default is not TRUE but FALSE. I added

proxyDefinition.getPropertyValues().addPropertyValue(""proxyTargetClass"", Boolean.TRUE);

but then there is an error with other lateBinding objects. It was something like ""FileResource cannot be created, due to missing no-arg constructor"".
I made a ugly hack for get it working:

if (originalBeanName.indexOf('#') == -1)
				proxyDefinition.getPropertyValues().addPropertyValue(""proxyTargetClass"", Boolean.TRUE);

Attached the changed class.","03/May/09 7:17 PM;david_syer;Setting the value to true in the proxyDefinition didn't seem to cause any problems to me.  That's what I have now changed.  Please try it, and open another issue (preferably with some test code) if it breaks something else.",03/May/09 10:17 PM;mthielen;Created BATCH-1231 for the FileResource-Problem.,,,,,,,,,,,,,,,,,
Apply consistent debug logging in framework-provided ItemWriter implementations,BATCH-1220,26417,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,jkuipers,jkuipers,26/Apr/09 7:31 PM,29/Apr/09 1:58 AM,10/May/19 2:37 AM,29/Apr/09 1:57 AM,2.0.0,,,,,,2.0.1,,,Infrastructure,,,,,0,,"In a class like the JdbcBatchItemWriter, the write() method logs the number of items in the current chunk at debug level. I think this is extremely useful, and I typically do the same thing in my custom implementations.
However, other classes like JmsItemWriter do not have this behavior built-in. I would really like all implementations to apply consistent debug logging, so that users will know what to expect when they enable it and don't have to provide their own implementations of these simple classes just to get some logging in place.",,;29/Apr/09 1:58 AM;david_syer;600,,,,,,,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,316483200,,,,,2009-04-29 01:57:34.971,11456,false,david_syer(david_syer),,,,0|i03wbb:,22777,19243,,,,,29/Apr/09 1:57 AM;david_syer;Added debug level logging to all writers (except tests),,,,,,,,,,,,,,,,,,,,,,
JmsItemReader and -Writer should check for proper settings on JmsTemplate,BATCH-1219,26416,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,jkuipers,jkuipers,26/Apr/09 7:23 PM,29/Apr/09 1:48 AM,10/May/19 2:37 AM,29/Apr/09 1:48 AM,2.0.0,,,,,,2.0.1,,,Infrastructure,,,,,0,,"I created my own JmsItemReader and -Writer-like classes, before realizing that the framework would probably provide default implementations for these. However, I currently prefer my own implementations, as the framework classes don't perform any checking of required properties on the injected JmsTemplate.
In my implementation I don't inject JmsOperations but JmsTemplate, which allows me to check the inject template for required settings. For example, I currently have something like this in my reader:

Assert.isTrue(jmsTemplate.getReceiveTimeout() != JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT,
	 ""JmsTemplate must have a receive timeout!"");
Assert.isTrue(jmsTemplate.getDefaultDestination() != null || jmsTemplate.getDefaultDestinationName() != null,
	""jmsTemplate must have a defaultDestination or defaultDestinationName!"");
this.jmsTemplate = jmsTemplate;

Especially something like a receive timeout is very important to set for the reader (or the thread will simply block after processing all messages) but easy to forget. Users might even assume the framework takes care of this for them, esp. since the JavaDoc for the JmsItemReader makes no mention of this! Failing fast greatly improves the usability of these trivial helper classes.

This requires the use of JmsTemplate instead of JmsOperations. I don't believe this interface adds any real value (any mocking library will allow you to still test the ~Reader and ~Writer), but if you don't want to change this you could simply do an instanceof check before casting and performing the checks.
",,;29/Apr/09 1:48 AM;david_syer;600,,,,,,,,,,,,,,1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,316483200,,,,,2009-04-29 01:48:00.771,11457,false,david_syer(david_syer),,,,0|i03wbj:,22778,19244,,,,,29/Apr/09 1:48 AM;david_syer;Thanks.  I went with the instanceof option (in the setter).,,,,,,,,,,,,,,,,,,,,,,
Suggest use .doubleValue() value in DefaultFieldSet.readDouble(..),BATCH-1217,26413,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,jacob_metcalf@hotmail.com,jacob_metcalf@hotmail.com,25/Apr/09 10:50 PM,26/Apr/09 2:43 AM,10/May/19 2:37 AM,26/Apr/09 2:42 AM,2.0.0,,,,,,2.0.1,,,Core,,,,,0,,"On switching to 2.0.0.RELEASE from 2.0.0.M4 I got:

java.lang.ClassCastException: java.lang.Long
	at org.springframework.batch.item.file.transform.DefaultFieldSet.readDouble(DefaultFieldSet.java:388)
	at org.springframework.batch.item.file.transform.DefaultFieldSet.readDouble(DefaultFieldSet.java:399)

On calling DefaultFieldSet.readDouble(..) with a field containing the text ""80000""

From tracing through I can see the issue, NumberFormat decides to construct a Long but readDouble tries to cast it to a Double:

	public double readDouble(int index) {
		return (Double) parseNumber(readAndTrim(index));
	}

My suggestion is that this function should use .doubleValue() as it cannot guarantee what NumberFormat will return can be cast to Double. Since the caller is trying to coerce the field into a double I would argue they should expect the loss of accuracy that comes with converting integers to floating point numbers. However if it is intentionally throwing a ClassCastException in this situation then this could be added to the JavaDoc.

If you need code samples let me know but hopefully it is pretty self explanatory. Hope this helps. 
 
","2.0.0.RELEASE, Java 5",;26/Apr/09 2:43 AM;david_syer;600,,,,,,,,,,,,,,1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,316656000,,,,,2009-04-26 02:42:42.461,11459,false,david_syer(david_syer),,,,0|i03wbz:,22780,19246,,,,,"26/Apr/09 2:42 AM;david_syer;Fixed, thanks,  Workarounds for 2.0.0: use readFloat() (where there is no cast - already using the same trick), or use readLong().doubleValue() if there is a problem.",,,,,,,,,,,,,,,,,,,,,,
Docs refer to non-existent class SimpleDelegatingPagingQueryProvider,BATCH-1215,26389,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,jkuipers,jkuipers,22/Apr/09 7:43 AM,29/Apr/09 1:37 AM,10/May/19 2:37 AM,29/Apr/09 1:36 AM,2.0.0,,,,,,2.0.1,,,Documentation,,,,,0,,"Section ""6.9.2.1. JdbcPagingItemReader"" of the reference manual refers to a class called ""org.springframework.batch.item.database.support.SimpleDelegatingPagingQueryProvider"". This class doesn't exist: it looks like SqlPagingQueryProviderFactoryBean is meant instead (probably renamed before 2.0.0.RELEASE). ",,;29/Apr/09 1:37 AM;david_syer;120,,,,,,,,,,,,,,600,0,120,20%,600,0,120,,,,,,,,,,,,,,,,,,,,,,,,,,316483200,,,,,2009-04-29 01:36:40.814,11461,false,david_syer(david_syer),,,,0|i01rvr:,10394,10379,,,,,"29/Apr/09 1:36 AM;david_syer;Fixed, thanks.",,,,,,,,,,,,,,,,,,,,,,
CoreNamespaceUtils.addRangePropertyEditor fails with Spring 3.0,BATCH-1214,26385,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,jkuipers,jkuipers,22/Apr/09 2:58 AM,03/May/09 10:57 PM,10/May/19 2:37 AM,29/Apr/09 1:31 AM,2.0.0,,,,,,2.0.1,,,Core,,,,,0,,"I'm trying to use Spring Batch 2.0 with a recent Spring 3.0 build and I see the following exception when using the namespace support (only root cause shown):
Caused by: java.lang.IllegalArgumentException: Cannot convert value of type [java.lang.Class] to required type [java.lang.String] for property 'customEditors[org.springframework.batch.item.file.transform.Range[]]': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:226)
	at org.springframework.beans.TypeConverterDelegate.convertToTypedMap(TypeConverterDelegate.java:497)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:188)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:132)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:378)
	... 35 more

This is caused by CoreNamespaceUtils.addRangePropertyEditor: it registers RangeArrayPropertyEditor.class as the value for an entry in the map passed to the customEditors property of CustomEditorConfigurer. This functionality was deprecated in Spring 2.5 and is currently not supported anymore: this should be a class *name*, not a Class. In this case, that's enough; we don't need a custom PropertyEditorRegistrar. Please fix this.

The current workaround is to register the editor yourself, like this:

<bean class=""org.springframework.beans.factory.config.CustomEditorConfigurer"">
	<property name=""customEditors"">
		<map>
			<entry key=""org.springframework.batch.item.file.transform.Range[]"" 
				    value=""org.springframework.batch.item.file.transform.RangeArrayPropertyEditor""/>
		</map>
	</property>
</bean>
",,;29/Apr/09 1:33 AM;david_syer;360,,,,,,,,,,,,,,0,0,360,"9,223,372,036,854,775,807%",0,0,360,,,,,,BATCH-1172,,,,,,,,,,,,,,,,,,,,316051200,,,,,2009-04-22 03:11:13.16,11462,true,jkuipers(jkuipers),,,,0|i0286f:,13034,12798,,,,,22/Apr/09 3:11 AM;dhgarrette;This has already been fixed.,"22/Apr/09 3:20 AM;jkuipers;This is NOT fixed. You just changed the code to register an instance of the class instead. That's still not a String, so it still fails, but now with a slightly different exception:
Caused by: java.lang.IllegalArgumentException: Cannot convert value of type [org.springframework.batch.item.file.transform.RangeArrayPropertyEditor] to required type [java.lang.String] for property 'customEditors[org.springframework.batch.item.file.transform.Range[]]': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:226)
	at org.springframework.beans.TypeConverterDelegate.convertToTypedMap(TypeConverterDelegate.java:497)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:188)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:132)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:378)
	... 35 more

Check the Spring 3.0 code: you need to register a String, nothing else will work. Please reopen and fix.","29/Apr/09 1:31 AM;david_syer;I committed the change (use classname in stead of bean definition).  Joris: can you confirm it works for your use case?

By the way, there is a workaround: just register a property editor for {{org.springframework.batch.item.file.transform.Range[]}} in the application context.","03/May/09 10:57 PM;jkuipers;The fix looks good. BTW, I was aware of the workaround already: I documented it in my original issue description ;)",,,,,,,,,,,,,,,,,,,
Rerunning a job sometimes creates new job instance,BATCH-1197,26258,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,pavel.zupa,pavel.zupa,06/Apr/09 7:36 PM,06/Apr/09 8:06 PM,10/May/19 2:37 AM,06/Apr/09 8:04 PM,2.0.0.RC3,,,,,,2.0.0,,,Core,,,,,0,,"An attempt to rerun stopped job using following code sometimes leads to creation of new JobInstance with same JOB_KEY but with entries in different order.

List<JobInstance> jobInstances = jobExplorer.getJobInstances(jobName, 0, 1);
if (!jobInstances.isEmpty()) {
    jobLauncher.run(job, jobInstances.get(0).getJobParameters());
}

I tried to debug it and I think the problem may be in JdbcJobInstanceDao.FIND_PARAMS_FROM_ID used in getJobParameters(). This query relies on the fact that job parameters are retrieved from database in same order as they have been inserted - which does not have to be true. Maybe ordering by job parameter name would help. Maybe it would be best to add this behavior to the JobParameters instead of relying on LinkedHashMap and insert order.",oracle 10g,;06/Apr/09 8:05 PM;david_syer;600,,,,,,,,,,,,,,3600,0,600,16%,3600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,318384000,,,,,2009-04-06 20:04:55.297,11478,false,david_syer(david_syer),,,,0|i03we7:,22790,19256,,,,,06/Apr/09 8:00 PM;pavel.zupa;Now I see it - it is even worse. Not only that there is no ORDER BY but the JdbcJobInstanceDao.getJobParameters() loads parameters to plain old HashMap and then creates JobParameters from it. All the ordering is lost! I don't understand how this could work ... our testers have successfully tested restarting in our system some time ago. Now it fails almost every time.,06/Apr/09 8:04 PM;david_syer;Thanks.  Fixed it by ordering the keys.,,,,,,,,,,,,,,,,,,,,,
ExecutionContext not re-hydrated by JdbcJobExecutionDao,BATCH-1196,26254,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,06/Apr/09 8:01 AM,07/Apr/09 2:12 AM,10/May/19 2:37 AM,07/Apr/09 2:12 AM,2.0.0.RC2,,,,,,2.0.0,,,Core,,,,,0,,ExecutionContext not re-hydrated by JdbcJobExecutionDao,,;07/Apr/09 2:12 AM;david_syer;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,318384000,,,,,,11479,false,david_syer(david_syer),,,,0|i03wef:,22791,19257,,,,,"07/Apr/09 2:12 AM;david_syer;Fixed, thanks.",,,,,,,,,,,,,,,,,,,,,,
Step shouldn't exit with status=EXECUTING,BATCH-1187,26194,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Won't Fix,david_syer,jaenswart,jaenswart,30/Mar/09 6:21 PM,08/Apr/09 10:53 PM,10/May/19 2:37 AM,08/Apr/09 10:44 PM,2.0.0.RC2,,,,,,2.0.0,,,Core,,,,,0,,"After a tasklet has executed, it can return with ExitStatus=EXECUTING, this should not be possible.  See http://forum.springsource.org/showthread.php?t=69578.",,;08/Apr/09 10:53 PM;david_syer;4800,,,,,,,,,,,,,,7200,0,4800,66%,7200,0,4800,,,,,,,,,,,,,,,08/Apr/09 9:21 PM;jaenswart;CertCandidateItemWriter.java;https://jira.spring.io/secure/attachment/15303/CertCandidateItemWriter.java,08/Apr/09 9:21 PM;jaenswart;CertExtractFlatFileItemWriter.java;https://jira.spring.io/secure/attachment/15304/CertExtractFlatFileItemWriter.java,08/Apr/09 9:20 PM;jaenswart;FTPTask.java;https://jira.spring.io/secure/attachment/15301/FTPTask.java,08/Apr/09 9:21 PM;jaenswart;SeqRunNumberTask.java;https://jira.spring.io/secure/attachment/15302/SeqRunNumberTask.java,08/Apr/09 9:20 PM;jaenswart;applicationContext.xml;https://jira.spring.io/secure/attachment/15300/applicationContext.xml,08/Apr/09 9:20 PM;jaenswart;certificationExtractJob.xml;https://jira.spring.io/secure/attachment/15299/certificationExtractJob.xml,,,,,,318211200,,,,,2009-04-07 03:14:28.363,11488,true,david_syer(david_syer),,,,0|i03wfr:,22797,19263,http://forum.springframework.org/showthread.php?t=69578&highlight=Jira,,,,07/Apr/09 3:14 AM;david_syer;Can you supply a test case?  Or at least the implementation of the tasklet and the job config that leads to this condition. ( We have loads of tests that assert that it can't happen.),"08/Apr/09 3:31 AM;david_syer;Jaen, if you want this to be fixed in 2.0 we need more information...","08/Apr/09 9:21 PM;jaenswart;Sorry for attaching all these files, I'm just in the office for 10 min. If the issue is not fixed it is not a train smash. Will be back on Tuesday.",08/Apr/09 9:51 PM;david_syer;Which step is it that exits with status EXECUTING?  Is it the tasklet step in the middle (updateSeqRunStep)?,"08/Apr/09 10:34 PM;jaenswart;Yes  Dave, that is correct","08/Apr/09 10:44 PM;david_syer;I get it.  This was an old, old loose end waiting to be tied up.  YourTasklet did not set the ExitStatus, but all the existing implementations did.  A Tasklet shouldn't *have* to set the exit status on the StepContribution (it can if it chooses).  I had to modify AbstractStep so that it can choose a sensible default, so now if a Tasklet modifies the ExitStatus that value is ANDed with the default (COMPLETED if successful, FAILED or STOPPED if not).","08/Apr/09 10:47 PM;jaenswart;that sounds correct, thanks for the effort",,,,,,,,,,,,,,,,
<step/> element always assumes the step is a TaskletStep,BATCH-1181,26147,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,dhgarrette,dhgarrette,25/Mar/09 4:39 PM,29/Mar/09 4:15 PM,10/May/19 2:37 AM,29/Mar/09 4:15 PM,2.0.0.RC2,,,,,,2.0.0.RC3,,,Core,,,,,0,,"The namespace's <step/> element always assumes it is creating a TaskletStep so it tries to set properties such as transactionManager and jobRepository.  However, the <step/> should be flexible enough to handle any implementation of Step so that if a user defines their own Step they can use it with the namespace to construct a FlowJob.

In order to resolve this issue, properties need to be removed from the <step/> element and moved to an inner element.  The new <step/> structure will be as follows:
<step>
    <tasklet>
        <chunk-tasklet/>
    </tasklet>
</step>

Where:
The <chunk-tasklet/> is the new name of what used to be <tasklet/>.  It is used to create a Chunk-Oriented TaskletStep.
The new <tasklet/> contains the properties that used to be on <step/>.  It is used to create a TaskletStep and it has a ref= that can reference a Tasklet implementation.
The <step/> contains only id=, parent=, abstract=, and flow transitions.  It can be used with any Step implementation.",,;26/Mar/09 1:30 AM;dhgarrette;12600,,,,,,,,,,,,,,14400,1800,12600,87%,14400,1800,12600,,,,,,,,,,,,BATCH-1179,,,,,,,,,,,,,,319420800,,,,,2009-03-25 19:47:22.15,11494,true,dhgarrette(dhgarrette),,,,0|i03wgn:,22801,19267,,,,,"25/Mar/09 7:47 PM;david_syer;* I'm not sure I like <chunk-tasklet/>.  Maybe <chunk/>  or <item/> is better since that's what it basically defines - the stuff to do with items.

* What is the point of parent= on the <step/> if all its attributes have gone and left a single element?  Shouldn't we revert to ref=?","26/Mar/09 12:46 AM;dhgarrette;* I like <chunk/>.  I think it fits well, as in ""this is the chunk reader, chunk writer, chunk commit-interval, etc""

* I think ""parent"" still makes sense because it's still inheriting all the properties from the parent and adding new properties.  Both the parent and child can have a <tasklet/> and their properties will be combined during instantiation.",,,,,,,,,,,,,,,,,,,,,
Remove ref= attribute from <step/> in favor of parent=,BATCH-1179,26143,,Refactoring,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,dhgarrette,dhgarrette,25/Mar/09 4:55 AM,30/Mar/09 4:15 AM,10/May/19 2:37 AM,29/Mar/09 4:15 PM,2.0.0.RC2,,,,,,2.0.0.RC3,,,Core,,,,,0,,"The parent= attribute does everything the ref= does, and more.  So there is no need for a ref= attribute.",,;26/Mar/09 1:31 AM;dhgarrette;2700,,,,,,,,,,,,,,7200,900,2700,37%,7200,900,2700,,,,,,,,,,,,BATCH-1013,BATCH-1132,BATCH-1178,,,,,,,,,,,,319420800,,,,,,11496,true,dhgarrette(dhgarrette),,,,0|i01cfz:,7893,8323,,,,,,,,,,,,,,,,,,,,,,,,,,,
Late binding of jobParameters does not work if late binding expression is not preceded or trailed by string,BATCH-1174,26123,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,magott,magott,24/Mar/09 2:56 AM,01/Apr/09 12:48 AM,10/May/19 2:37 AM,24/Mar/09 9:15 PM,2.0.0.RC2,,,,,,2.0.0.RC3,,,Core,,,,,0,,"I stumbled upon some strange behavior when using late binding. I'm trying to inject a string that is passed to the batch as a jobParameter. This string is however not inject, if I don't add a character in front-  of or after the late binding expression.
To replicate this bug try to do the following:
in the restartSample.xml change the flatFileItemReader's resource from:
<beans:property name=""resource"" value=""classpath:/data/skipJob/input/input#{jobParameters[run.id]}.txt"" />
to
<beans:property name=""resource"" value=""#{jobParameters[run.id]}"" />
This results in the following exception:
 java.lang.IllegalStateException: Input resource must exist (reader is in 'strict' mode): class path resource [#{jobParameters[run.id]}]

If you add a character at the end (or the front), like this:
<beans:property name=""resource"" value=""a#{jobParameters[run.id]}"" />
The following exception is thrown:
java.lang.IllegalStateException: Input resource must exist (reader is in 'strict' mode): class path resource [a1]
(This makes sense, as there is no such classpath resource, and the jobParameter run.id which is '1' has been set.)

So, it seems that the late binding of jobParameters does not work if the jobParameter key is concatenated with some other string value...strange. Even stranger, it does not seem to be the case for late binding of stepExecutionContext parameters.

Wasn't able to locate the code that did the actual late binding, so I'm afraid I don't have patch ready that you can apply.

",,;24/Mar/09 9:18 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,319507200,,,,,2009-03-24 03:03:44.334,11500,true,thomas.risberg(thomas.risberg),,,,0|i03whr:,22806,19272,,,,,"24/Mar/09 3:03 AM;david_syer;Can't you just set the strict flag in the reader to ""false""?","24/Mar/09 3:28 AM;magott;It doesn't really have anything to do with the reader, I just used this as an example. If you look at the two different exceptions, the jobParameter run.id is only inserted if the late binding expression is part of a string with at least one additional character. 

It seems to be a problem if the jobParameter passed is a long.",24/Mar/09 6:59 AM;david_syer;I think it might just be to do with the way that the reader is logging that message.  It works for me if I put a value in the JobParameters that is a valid resource.  Does that make sense.,"24/Mar/09 7:36 AM;magott;But then you used a string jobparameter? Or at least you set the resource as a combination of string and a long? I only experience the problem when trying to bind a long which is not concatenated with a string (ie: ""#{jobparemeter[longParameter}"" and not ""someStaticString #{jobparameter[longParameter]}"").

Did that make sense? ",24/Mar/09 8:50 AM;david_syer;Why would you want to convert a Long to a Resource?,"24/Mar/09 8:40 PM;magott;You wouldn't, it was just an example that I thought would be easy to understand, guess I was wrong :-)

Ok, let me see if I can find a better example. 
Let's say you'd like to have the 'linesToSkip' property of fileItemReader in skipSampleJob.xml to be set to the jobParameter run.id. (This still probably does not make sense, but at least now you are setting a numeric value where a numeric value on a numeric property)

Try setting the following in the skipSampleJob.xml fileItemReader:
<beans:property name=""linesToSkip"" value=""#{jobParameters[run.id]}""/>

You'd hopefully see what I mean. The jobparameter is not used. Instead it tries to insert the string {jobParameters[run.id]} which resulst in a number format exception. 

However if you do the following (placing a zero in front of the jobparam):
<beans:property name=""linesToSkip"" value=""0#{jobParameters[run.id]}""/>
The jobparameter is resolved, and it is converted from a string to a number. (The test now fails on an assertion, which makes sense).


","24/Mar/09 9:15 PM;david_syer;OK, I get it now.  It's sort of tied up with BATCH-1095.  I tried to fix both at the same time - can you try the latest trunk (or would you like me to deploy a snapshot)?  We needed to make more of an effort to convert objects from context that do not match the rewquired type exactly.  I have done that by converting to String if possible and allowing the PropertyEditors to convert back.  So any bi-directional PropertyEditor that is registered with the application context will help to ensure that type conversion is done if at all possible.","24/Mar/09 9:39 PM;magott;Yeah. That seemed to fix it. The long is now injected and I don't have to prefix it with a zero. 
Thanks!",,,,,,,,,,,,,,,
"Putting scope=""step"" on a listener causes failure",BATCH-1164,26065,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,dhgarrette,dhgarrette,20/Mar/09 3:01 AM,20/Mar/09 4:49 AM,10/May/19 2:37 AM,20/Mar/09 4:49 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,"The configuration below fails because the framework is unable to set properties onto the StepListenerFactoryBean:

  <step-listener id=""l2"" ref=""myListener""/>

  <beans:bean id=""myListener"" class=""MyListener"" scope=""step"">
      <beans:property name=""runId"" value=""#{jobParameters[my.param]}""/>
  </beans:bean>

",,;20/Mar/09 4:49 AM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,319852800,,,,,2009-03-20 04:49:22.172,11508,false,david_syer(david_syer),,,,0|i03win:,22810,19276,,,,,20/Mar/09 4:49 AM;david_syer;This is a problem in the listener factory - it doesn't do a great job of detecting proxies.  Hopefully fixed in 2.0.0.RC2.,,,,,,,,,,,,,,,,,,,,,,
PROCESS_SKIP_COUNT seems not to ever get written to database,BATCH-1159,26019,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,pavel.zupa,pavel.zupa,18/Mar/09 2:37 AM,18/Mar/09 6:17 PM,10/May/19 2:37 AM,18/Mar/09 4:28 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,"Exceptions in readers and writers seems to be handled nicely, but there seems to be a problem throwing skippable exception from processor. StepExecution's processSkipCount is incremented, skip listeners are called and step listener's afterStep() gets correct counts in StepExecution has correct counts. But PROCESS_SKIP_COUNT is never incremented in database - allways 0. Sometimes even filterCount is incremented in StepExecution instead of processSkipCount. I tried to debug through sources but got pretty lost:-( I've checked that HibernateTemplate.flush() is called everytime in the writer. 

This is part of our parent step configuration (FaultTolerantStepFactoryBean) used for all batches (i believe there should be no problem)
		<property name=""retryableExceptionClasses"">
			<list>
				<value>org.springframework.dao.RecoverableDataAccessException</value>
				<value>org.springframework.dao.TransientDataAccessException</value>
			</list>
		</property>
		<property name=""skippableExceptionClasses"" value=""java.lang.Exception"" />
		<property name=""fatalExceptionClasses"">
			<list>
				<value>cz.mycompany.FatalProcessingException</value>
				<value>org.springframework.batch.core.JobInterruptedException</value>
			</list>
		</property>

Problem appeared to be there quite some time. Previously we used 2.0.0.M2 and it was already there.","jdk 1.6.0_10, oracle 10g",;18/Mar/09 4:36 AM;david_syer;600,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,320025600,,,,,2009-03-18 04:28:30.72,11513,true,pavel.zupa(pavel.zupa),,,,0|i03wjr:,22815,19281,,,,,18/Mar/09 4:28 AM;david_syer;Fixed thanks.,"18/Mar/09 6:17 PM;pavel.zupa;This is what I call damn quick! Thank you, guys, you are gorgeous!",,,,,,,,,,,,,,,,,,,,,
"Possible ""null"" context return with MapRetryContextCache in RetryTemplate",BATCH-1156,25981,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,sandrine.raffalli,sandrine.raffalli,15/Mar/09 4:25 AM,15/Mar/09 7:53 AM,10/May/19 2:37 AM,15/Mar/09 7:52 AM,2.0.0.RC1,,,,,,,,,Infrastructure,,,,,0,,"I get a lot of unexpected RetryException that kill my batch. I suppect the use of SoftReference in MapRetryContextCache could be the cause.
The following lines show that the RetryTemplate throws a RetryException if the retryContextCache returns ""null"" for a given key. 
But MapRetryContextCache uses a map of SofReference (as consequence of BATCH-682), that means the retry context could be deleted by the garbage collector, and the retryContextCache could return ""null"" even though containsKey() allowed entry in the if block.

381                     else if (retryContextCache.containsKey(key)) {
382 	
383 	                        RetryContext context = retryContextCache.get(key);
384 	                        if (context == null) {
385 	                                throw new RetryException(""Inconsistent state for failed item: no history found. ""
386 	                                                + ""Consider whether equals() or hashCode() for the item might be inconsistent, ""
387 	                                                + ""or if you need to supply a better ItemKeyGenerator"");
388 	                        }
389 	                        return context;
390 	
391 	                }",,;15/Mar/09 7:53 AM;david_syer;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,320284800,,,,,2009-03-15 06:04:58.523,11515,false,david_syer(david_syer),,,,0|i034mv:,18293,117,,,,,"15/Mar/09 6:04 AM;david_syer;I fixed the immediate problem just by checking the reference in the containsKey() method, so you shouldn't see unexpected exceptions any more.  But if you are seeing the contexts being garbage collected the retry behaviour will not be accurate.  If you need to be strict about it (e.g. if you are using a FaulTolerantStepFactoryBean and rely on the Step statistics for anything), then it might be better to provide a retry context cache which doesn't have the soft references at all (they were added so that long running processes have a way to expire cache entries - it' snot very precise).  Do you need the stricter behaviour?","15/Mar/09 7:43 AM;sandrine.raffalli;I don't need it, but maybe it could be a good thing to use by default a retry context cache without soft reference.",15/Mar/09 7:52 AM;david_syer;Agreed.  Changed default to non-soft referenced version and added alternative SoftReferenceMapRetryContextCache.,,,,,,,,,,,,,,,,,,,,
Move classifier to separate package?,BATCH-1137,25924,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,11/Mar/09 8:41 PM,14/Mar/09 4:10 AM,10/May/19 2:37 AM,14/Mar/09 4:03 AM,2.0.0.RC1,,,,,,,,,Infrastructure,,,,,0,,,,;14/Mar/09 4:10 AM;david_syer;600,,,,,,,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,320371200,,,,,,11533,false,david_syer(david_syer),,,,0|i034dz:,18253,114,,,,,14/Mar/09 4:03 AM;david_syer;Done.  No obvious side effects.,,,,,,,,,,,,,,,,,,,,,,
Ensure Ordered is respected by generated listeners,BATCH-1130,25900,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,10/Mar/09 2:27 AM,10/Mar/09 2:42 AM,10/May/19 2:37 AM,10/Mar/09 2:41 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,,,;10/Mar/09 2:42 AM;david_syer;3600,,,,,,,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,10/Mar/09 2:41 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15192/mylyn-context.zip,,,,,,,,,,,320716800,,,,,,11540,false,david_syer(david_syer),,,,0|i03wnb:,22831,19297,,,,,10/Mar/09 2:41 AM;david_syer;Added detection of Ordered interface to *ListenerFactoryBeans,,,,,,,,,,,,,,,,,,,,,,
Problems with exception classifications,BATCH-1129,25897,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,dhgarrette,dhgarrette,09/Mar/09 4:08 PM,19/Mar/09 11:05 PM,10/May/19 2:37 AM,19/Mar/09 11:04 PM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,"Transaction attributes of the following form don't seem to be preventing rollback:
    transaction-attribute=""+org.springframework.dao.DataIntegrityViolationException""

It does, however, seem to be causing the job to fail.   ie, it's treated as a fatal exception and prevents skipping.

Furthermore, all exceptions seem to be skippable by default, whereas they should be fatal unless specifically configured to be skippable.

There are some complications listed in BATCH-859, so if those complications make these scenarios impossible, that needs to be documented.  
See http://static.springframework.org/spring-batch/reference/html/configureStep.html#d0e2594.",,;19/Mar/09 11:05 PM;david_syer;21600,,,,,,,,,,,,,,0,0,21600,"9,223,372,036,854,775,807%",0,0,21600,,,,,,,,,,,,,,,10/Mar/09 12:00 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15190/mylyn-context.zip,,,,,,,,,,,319939200,,,,,2009-03-10 00:00:24.136,11541,false,david_syer(david_syer),,,,0|i03wnj:,22832,19298,,,,,"10/Mar/09 12:00 AM;david_syer;This is complicated, and at the minimum requires some careful documentation.

1. We are not being as lenient as we could have been in the FaultTolerantChunkProcessor, where the ItemProcessor is called.  We could check the rollback classifier there and if it allows then attempt to continue without rethrowing, *but* only if the skip policy allows.

2. On read the rollback is completely controlled by the skip policy in the FailtTolerantChunkProvider, so the tx attributes are ignored anyway

3. On write there is no way to respect the rollback classifier without losing data - if there is an exception half way through a chunk then if we ignored it the rest of the chunk would never be written.  I think this is worse than not rolling back, so the rollback has to happen on write.

4. The TaskletStep accepts a TransactionAttribute as a property, but we ignore the rollback instructions.  I think Robert was the last to look at this and he concluded that it didn't make sense to use the rollback hints here (if so then it should be properly documented).  I'll have another look.

I fixed 1, and left the rest to give us some time to discuss the rest.

For 1. and 2. we might want to think about incorporating the transaction attributes into the skip policies?","19/Mar/09 11:04 PM;david_syer;Suggested behaviour:

* Vanilla TaskletStep: respect TransactionAttributes if provided.  The TaskletStep needs TransactionAttributes so that users can change the settings for a vanilla Tasklet.

* SimpleStepFactoryBean: rollback on all exceptions, including checked exceptions.  Ignore TransactionAttributes rollback hints (but use propagation and isolation).

* FaultTolerantStepFactoryBean: default to same as SimpleStepFactoryBean, but

  1. Check TransactionAttributes on process errors, and avoid rollback if instructed as long as the exception is also skippable (if not rethrow).
  
  2. Ignore TransactionAttributes on full write of multi-item chunk.  Check and avoid rollback if instructed on write of singleton chunk, e.g. when scanning for failure in full write, as long as the exception is also skippable (if not rethrow).
  
  3. Check TransactionAttributes on read errors and avoid rollback if instructed as long as the exception is also skippable (if not rethrow).
  
  4. On read if the exception is marked explicitly for rollback respect that as well.
  
1. and 2. are implemented in 2.0.0.RC2.  3. and 4. seem like more work, and probably not much value (so all exceptions in readers are ignored for now if they are skippable).  We can re-visit in a point release and a new JIRA.

To make the ""as long as skippable"" restrictions less surprising, the TransactionAttributes exception classification needs to be included in the skippable classification - i.e. if an exception is marked for no rollback, it is automatically skippable.

And finally there is the question of how a user specifies the TransactionAttributes.  With a tasklet step in beans namespace it seems natural to use the old-style Spring way through the property editor.  For the batch namespace options, I would prefer to see separate attributes for propagation, isolation, timeout and noRollbackForExceptionClasses (defaults to none).  Note that the proposed default for no rollback is different than mainstream Spring transactions (where only RuntimeException and Error cause a rollback by default - probably an EJB legacy).

     ",,,,,,,,,,,,,,,,,,,,,
StaxEventWriter.startDocument() needs to be protected,BATCH-1122,25871,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,jblanchard,jblanchard,05/Mar/09 7:19 PM,29/Jan/19 8:32 AM,10/May/19 2:37 AM,05/Mar/09 8:13 PM,1.1.4,2.0.0.RC1,,,,,2.0.0.RC2,,,Infrastructure,,,,,0,,"The method startDocument() in org.springframework.batch.item.xml.StaxEventWriter is private, whereas its javadoc mentions ""[...]If this is not sufficient for you, simply override this method.""
This prevents one to cleanly override the creation of the root tag.

The simple fix is to make the method protected, as is endDocument().",,;05/Mar/09 8:15 PM;david_syer;300,,,,,,,,,,,,,,300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,321148800,,,,,,11548,true,mbenhassine(mbenhassine),,,,0|i03npb:,21382,3,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChunkListener called before WriteListener,BATCH-1111,25822,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,02/Mar/09 3:18 AM,02/Mar/09 3:45 AM,10/May/19 2:37 AM,02/Mar/09 3:44 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,ChunkListener called before WriteListener:  http://forum.springframework.org/showthread.php?t=68280,,;02/Mar/09 3:45 AM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,321408000,,,,,,11559,false,david_syer(david_syer),,,,0|i03wqn:,22846,19312,,,,,02/Mar/09 3:44 AM;david_syer;Moved ChunkListeners into TaskletStep.,,,,,,,,,,,,,,,,,,,,,,
Generalise PrefixMatching* to PatternMatching*,BATCH-1109,25803,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,27/Feb/09 10:12 PM,03/Mar/09 3:27 AM,10/May/19 2:37 AM,03/Mar/09 3:26 AM,2.0.0.M1,,,,,,2.0.0.RC2,,,Infrastructure,,,,,0,,"Generalise PrefixMatching* to PatternMatching*.  PatternMatcher is able to match patterns that are prefixes ('a*' etc.) so it is more flexible to use a pattern than a simple prefix.  At the same time I wonder if the static method in PatternMatcher that matches and maps to a Map value shouldn't be an instance method, so that the pattern order can be cached.",,;03/Mar/09 3:27 AM;david_syer;1800,,,,,,,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,321321600,,,,,,11561,false,david_syer(david_syer),,,,0|i03wr3:,22848,19314,,,,,03/Mar/09 3:26 AM;david_syer;Renamed and refactored to use patterns not prefixes,,,,,,,,,,,,,,,,,,,,,,
Add composite ItemWriter/Processor based on Classifier,BATCH-1108,25802,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,david_syer,david_syer,27/Feb/09 10:09 PM,03/Mar/09 5:11 PM,10/May/19 2:37 AM,03/Mar/09 5:11 PM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Infrastructure,,,,,0,,"Add composite ItemWriter/Processor based on Classifier.  It's a very common feature request to have an output strategy based on some sort of matching policy (a bit like the PrefixMatching* stuff in the flat file readers).  Simplest way of doing it is to use a Classifer<T,ItemWriter<? super T>>.
",,;03/Mar/09 3:28 AM;david_syer;18000,,,,,,,,,,,,,,7200,0,18000,250%,7200,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,321667200,,,,,,11562,false,david_syer(david_syer),,,,0|i03wrb:,22849,19315,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Date conversion in PlaceholderTargetSource,BATCH-1107,25800,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,27/Feb/09 9:50 PM,27/Feb/09 10:00 PM,10/May/19 2:37 AM,27/Feb/09 9:59 PM,2.0.0.M3,,,,,,2.0.0.RC2,,,Core,,,,,0,,"Spring doesn't do type conversion to String very well, and for Date not at all.  This leads to problems for placeholders of type Date.  There are two issues in the current implementation:

  <property name=""foo"" value=""#{jobParameters[runDate]}""/>
  
fails even if the ""foo"" property is of type Date because the String conversion is attempted too early; and 

  <property name=""query"" value=""select ... where start_date > '#{jobParameters}'""/>
  
fails because the placeholder is embedded in a literal and needs to be converted to String (which Spring doesn't do natively).",,;27/Feb/09 10:00 PM;david_syer;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,27/Feb/09 9:59 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15167/mylyn-context.zip,,,,,,,,,,,321667200,,,,,,11563,false,david_syer(david_syer),,,,0|i03wrj:,22850,19316,,,,,"27/Feb/09 9:59 PM;david_syer;Fixed by hacking into the SimpleTypeConverter from the BeanFactory.  To convert Dates with a specific format remember to register a property editor, e.g.

	<bean class=""org.springframework.beans.factory.config.CustomEditorConfigurer"">
		<property name=""customEditors"">
			<map>
				<entry key=""java.util.Date"">
					<bean class=""org.springframework.beans.propertyeditors.CustomDateEditor"">
						<constructor-arg>
							<bean class=""java.text.SimpleDateFormat"">
								<constructor-arg value=""yyyy/MM/dd"" />
							</bean>
						</constructor-arg>
						<constructor-arg value=""false""/>
					</bean>
				</entry>
			</map>
		</property>
	</bean>

Objects in StepContext not of a type supported by the PropertyEditor registry will have toString() called on them if they are used embedded in a literal (like in the second example above).",,,,,,,,,,,,,,,,,,,,,,
Namespace error in documentation,BATCH-1105,25786,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,nilsmagnus,nilsmagnus,26/Feb/09 2:45 AM,26/Feb/09 3:55 AM,10/May/19 2:37 AM,26/Feb/09 3:54 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Documentation,,,,,0,,"The sample in the documentation, chapter 3.9 says that I can use

<beans:beans xmlns=""http://www.springframework.org/schema/batch"" 
    xmlns:beans=""http://www.springframework.org/schema/beans"" 
    xsi:schemaLocation=""
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd>

But I get an error when I try this. first of all, there is a missing trailing "". Secondly, I have to include xmlns:xsi so that the complete header of my xml file is:
 <beans:beans xmlns=""http://www.springframework.org/schema/batch"" 
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:beans=""http://www.springframework.org/schema/beans"" 
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd"" >
","Java 1.5, eclipse ganymede",;26/Feb/09 3:55 AM;dhgarrette;900,,,,,,,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,321753600,,,,,2009-02-26 03:54:39.58,11565,true,dhgarrette(dhgarrette),,,,0|i01rxz:,10404,10389,http://forum.springframework.org/showthread.php?t=68137,,,,26/Feb/09 3:54 AM;dhgarrette;Thanks for pointing this out.  It's fixed now and will be included in the next website update.,,,,,,,,,,,,,,,,,,,,,,
Check @AfterWrite is only called once per item,BATCH-1098,25755,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,24/Feb/09 12:33 AM,24/Feb/09 11:26 PM,10/May/19 2:37 AM,24/Feb/09 11:25 PM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Core,,,,,0,,,,;24/Feb/09 11:26 PM;david_syer;3600,,,,,,,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,322012800,,,,,,11572,false,david_syer(david_syer),,,,0|i03wsf:,22854,19320,,,,,24/Feb/09 1:17 AM;david_syer;Short story: it is not called once per item.  I will look into this.,,,,,,,,,,,,,,,,,,,,,,
Add late binding to some io samples,BATCH-1096,25753,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,23/Feb/09 11:28 PM,25/Feb/09 12:02 AM,10/May/19 2:37 AM,25/Feb/09 12:02 AM,2.0.0.RC1,,,,,,2.0.0.RC2,,,Samples,,,,,0,,,,;25/Feb/09 12:02 AM;david_syer;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,321926400,,,,,,11574,false,david_syer(david_syer),,,,0|i01nwn:,9750,9780,,,,,25/Feb/09 12:02 AM;david_syer;Added to multi resource and flat file io samples,,,,,,,,,,,,,,,,,,,,,,
Throw exception if late binding fails,BATCH-1095,25749,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,23/Feb/09 9:22 PM,07/Apr/09 2:55 AM,10/May/19 2:37 AM,07/Apr/09 2:53 AM,2.0.0.RC1,,,,,,2.0.0,,,Core,,,,,1,,Optionally throw exception if late binding fails,,;24/Mar/09 9:14 PM;david_syer;1800,;07/Apr/09 2:54 AM;david_syer;2100,,,,,,,,,,,,,1800,0,3900,216%,1800,0,3900,,,,,,,,,,,,,,,,,,,,,,,,,,318297600,,,,,2009-03-24 23:36:00.17,11575,false,david_syer(david_syer),,,,0|i03wsn:,22855,19321,,,,,"23/Feb/09 11:54 PM;david_syer;There is quite a lot of useful information in the logs at log4j.category.org.springframework.batch.core.scope.util.PlaceholderTargetSource=DEBUG, so that should be adequate for most purposes for diagnosing problems.  Could still think about the exception as well, I suppose.",24/Mar/09 9:13 PM;david_syer;Part of the work on BATCH-1174 threw up a few issues with leaving parameters unconverted.  The most obvious case now (of a context object that cannot be converted either to String or the target type) throws an exception.,24/Mar/09 11:36 PM;magott;Is this task also supposed to implement support for raising an exception if late bindings are unresolved (as reported in BATCH-1173)? It didn't in a quick test I did.,24/Mar/09 11:49 PM;david_syer;Maybe I resolved it too soon.  In some circs you will get an exception (when trying to convert between incompatible types).  If we want stricter behaviour we can leave this open.  I won't make it a high priority unless anyone else cares though.,"07/Apr/09 2:53 AM;david_syer;I left out the ""optionally"" in the end - there should always be an exception if binding fails.  We are using IllegalArgumentException because it's not 100% clear how to harmonise with Spring 3.0 default behaviour.",,,,,,,,,,,,,,,,,,
ClassPathXmlJobRegistry does not accept patterns for resources,BATCH-1087,25687,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,17/Feb/09 6:17 PM,17/Feb/09 9:43 PM,10/May/19 2:37 AM,17/Feb/09 9:42 PM,2.0.0.M4,,,,,,2.0.0.RC1,,,Core,,,,,0,,ClassPathXmlJobRegistry does not accept patterns for resources,,;17/Feb/09 9:43 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,322531200,,,,,,11582,false,david_syer(david_syer),,,,0|i03wtr:,22860,19326,,,,,17/Feb/09 9:42 PM;david_syer;Fixed: changed List<Resource> in constructor to a setter with Resource[].  That way the default property editors will resolve patterns correctly.,,,,,,,,,,,,,,,,,,,,,,
make <tasklet> a top-level element,BATCH-1080,25647,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Won't Fix,dhgarrette,dhgarrette,dhgarrette,13/Feb/09 7:23 AM,12/Mar/09 8:26 PM,10/May/19 2:37 AM,15/Feb/09 12:06 PM,,,,,,,2.0.0.RC1,,,Core,,,,,0,,"<tasklet> should be a top-level element like <job> and <step>.  This will allow users to define a Tasklet using the namepace and reuse it on multiple steps:

    <step id=""s2"" tasklet=""s2Tasklet"" />

    <tasklet id=""s2Tasklet"" reader=""reader"" writer=""writer"">
        ...
    </tasklet>

",,;15/Feb/09 11:50 AM;thomas.risberg;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,BATCH-1139,,,,,,,,,,,,,,,,,,,,,,,320544000,,,,,2009-02-15 12:00:15.368,11589,true,dhgarrette(dhgarrette),,,,0|i03wv3:,22866,19332,,,,,15/Feb/09 12:00 PM;thomas.risberg;The <tasklet> element represents a TaskletStep generated by a FaultTolerantStepFactoryBean or a SimpleStepFactoryBean.  It can't easily be defined standalone - it needs to be defined as part of the step itself.,"12/Mar/09 8:25 PM;dhgarrette;<tasklet/> was added at the top-level, but with different semantics than were proposed in BATCH-1080",,,,,,,,,,,,,,,,,,,,,
Central pom,BATCH-1079,25642,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,edouard,edouard,12/Feb/09 11:06 PM,01/Apr/09 12:50 AM,10/May/19 2:37 AM,21/Mar/09 5:23 AM,2.0.0.M4,,,,,,2.0.0.RC3,,,Core,,,,,0,,"central-pom.xml files are failed.

1) spring-batch-core : you should change xstream reference
  <profiles>
    <profile>
      <id>tiger</id>
      <activation>
        <jdk>1.5</jdk>
      </activation>
      <dependencies>
        <dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

2) spring-batch-core : groupid missing

3) spring-core : bad version for stax
you should change from 1.2 to 1.2.0 in dependencyManagement

I attach the corrected files",,;21/Mar/09 5:24 AM;david_syer;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,12/Feb/09 11:06 PM;edouard;spring-batch-2.0.0.M4.pom;https://jira.spring.io/secure/attachment/15130/spring-batch-2.0.0.M4.pom,12/Feb/09 11:06 PM;edouard;spring-batch-core-2.0.0.M4.pom;https://jira.spring.io/secure/attachment/15129/spring-batch-core-2.0.0.M4.pom,,,,,,,,,,319766400,,,,,2009-02-12 23:19:32.69,11590,false,thomas.risberg(thomas.risberg),,,,0|i03wvb:,22867,19333,,,,,"12/Feb/09 11:19 PM;david_syer;Thanks for the report,

1) it is not xstream it is the XML API (included in Java 6).  If it works for you as above then it is probably unnecessary.  Can you double check and report back?

2) The groupId is optional, and is provided by the parent.  Should be fine.

3) Thanks.  Fixed it.","13/Feb/09 12:39 AM;edouard;for the point 2 : It is ok, I didn't know that. I just add the fact that it is also true with version too, you can remove it if you want.

for point 1: in fact, the xml api is the stax-api which is a dependency of stax. so this profile is unnecessary, it is running on java 5.
I am not sure but stax is the XML API integrated in JAVA 6, I believe.","24/Feb/09 6:39 PM;edouard;Hello,

the central-pom.xml fails in 2.0.0.RC1 for spring-batch-core

I have the following message :
[WARNING] POM for 'org.springframework.batch:spring-batch-core:pom:2.0.0.RC1:compile' is invalid. It will be ignored for artifact resolution. Reason: Failed to validate POM for project org.springframework.batch:spring-batch-core at Artifact [org.springframework.batch:spring-batch-core:pom:2.0.0.RC1:compile]
[WARNING] POM for 'org.springframework.batch:spring-batch-core:pom:2.0.0.RC1:compile' is invalid. It will be ignored for artifact resolution. Reason: Failed to validate POM for project org.springframework.batch:spring-batch-core at Artifact [org.springframework.batch:spring-batch-core:pom:2.0.0.RC1:compile]

When I remove this :
  <profiles>
    <profile>
      <id>tiger</id>
      <activation>
        <jdk>1.5</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>javax.xml.stream</groupId>
          <artifactId>com.springsource.javax.xml.stream</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

The message disappears.

I think this dependency is not in the parent pom.

I would like just to add this dependency does not exist in the maven central repository. ","24/Feb/09 6:59 PM;edouard;After verification, this dependency is the stax api.
The dependency is already driven by xstream which depends on stax which depends on stax api.
You can remove it.","24/Feb/09 10:51 PM;david_syer;It looks to me like stax is a dependency with Java 5 for the infrastructure (the tests fail without it), which does not depend on xstream, so I'll just leave it in there.

I think the original error number 3) above is still in the version for stax dependency in spring-batch-parent 2.0.0.RC1.  I'll fix it again for the final release.",21/Mar/09 5:23 AM;david_syer;Done,,,,,,,,,,,,,,,,,
"allow-start-if-complete and start-limit should be on <step/>, not <tasklet/>",BATCH-1075,25633,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,dhgarrette,dhgarrette,dhgarrette,12/Feb/09 5:35 PM,13/Feb/09 7:03 AM,10/May/19 2:37 AM,13/Feb/09 2:14 AM,2.0.0.M4,,,,,,2.0.0.RC1,,,Core,,,,,0,,"It is currently not possible to set allow-start-if-complete or start-limit on a TaskletStep using the namespace because the attributes are on <tasklet/> instead of step.  We should be able to do the following:

    <step id=""step1"" tasklet=""myTasklet"" allow-start-if-complete=""true"" start-limit=""100"" />

",,;13/Feb/09 2:14 AM;thomas.risberg;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,322963200,,,,,,11594,true,dhgarrette(dhgarrette),,,,0|i03wvz:,22870,19336,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move docs to main trunk project to avoid difficulty with image paths,BATCH-1074,25632,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,12/Feb/09 5:06 PM,22/Feb/09 10:17 PM,10/May/19 2:37 AM,22/Feb/09 10:16 PM,,,,,,,2.0.0.RC1,,,Documentation,,,,,0,,Move docs to main trunk project to avoid difficulty with image paths.  This would be the layout used by Spring WS and others.,,;22/Feb/09 10:17 PM;david_syer;7200,,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,322963200,,,,,,11595,false,david_syer(david_syer),,,,0|i01ryn:,10407,10392,,,,,,,,,,,,,,,,,,,,,,,,,,,
JobInterruptedException needs to be on the fatal list,BATCH-1071,25608,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,10/Feb/09 9:21 PM,10/Feb/09 9:22 PM,10/May/19 2:37 AM,10/Feb/09 9:22 PM,2.0.0.M4,,,,,,2.0.0.RC1,,,Core,,,,,0,,"Otherwise the exception won't break the repeat loop. The interrupt tests worked because the step factory bean was using simple (not fault-tolerant) implementations internally unless skipLimit or retryLimit was set.

Not sure why, but this doesn't seem to affect 1.1.x",,;10/Feb/09 9:22 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,BATCH-1010,,,,,,,,,,,,,,,,,,,,,,,323136000,,,,,,11598,true,robert.kasanicky(robert.kasanicky),,,,0|i03tuv:,22379,18848,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add section on filtering to docs,BATCH-1055,25526,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,dhgarrette,dhgarrette,02/Feb/09 7:34 AM,02/Feb/09 8:12 AM,10/May/19 2:37 AM,02/Feb/09 8:12 AM,,,,,,,2.0.0.RC1,,,Documentation,,,,,0,,A section about filtering records in the ItemProcessor should be added to the documentation,,;02/Feb/09 8:02 AM;dhgarrette;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,323827200,,,,,,10699,true,dhgarrette(dhgarrette),,,,0|i01s0f:,10415,10400,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add getStep(String) to Job interface,BATCH-1053,25512,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,31/Jan/09 6:19 PM,11/Feb/09 2:17 AM,10/May/19 2:37 AM,11/Feb/09 2:17 AM,2.0.0.M4,,,,,,2.0.0.RC1,,,Core,,,,,0,,"I find AbstractJobTests very useful, but the implementation is awkward, and there are other situations where I can imagine asking the Job for a specific Step.  However getSteps() should remain an implementation detail for the SimpleJob.  I think it is debatable whether getStep(String) belongs on the interface in fact, so let's have a thin and a chat about it first, but at least it could go on AbstractJob.",,;02/Feb/09 2:03 AM;dhgarrette;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,323136000,,,,,2009-02-01 12:12:11.748,11615,false,david_syer(david_syer),,,,0|i03wxr:,22878,19344,,,,,"01/Feb/09 12:12 PM;dhgarrette;To get the step from the FlowJob, we need to get the State from the Flow.  Should we add a getState(String stateName) method to the Flow interface to making the assumption that all Flow objects of FlowJob will be SimpleFlows?  

Similarly, we need to get the Step out of the State.  Should we cast the State to StepState in FlowJob?  Or should there be some sort of StepState interface with a getStep() method?  ","01/Feb/09 5:21 PM;david_syer;I think adding getState(String) to the Flow interface is a reasonable idea.  I don't think there's much mileage in changing anything at the level of the State though.  This might be one of those times that we just have to use instanceof.  

What do you think about the Job interface?  I actually quite like the fact that there is the option to implement a Job that doesn't have steps.  Not sure how important that is though.","02/Feb/09 12:19 AM;dhgarrette;I'm not sure why someone would need a job without steps as it seems equivalent to a job with a single Tasklet step.  Therefore, I think we would be safe putting getStep on the Job interface.",02/Feb/09 5:25 PM;david_syer;I think you need to be more careful to define the contract of the getStep() method.  What happens if there is no step with the given name?  At least javadoc it.,04/Feb/09 5:54 PM;david_syer;The changes for this issue introduced a cycle in job.flow package (JobFlow cannot depend on classes in a sub package).  Re-opened so we can re-visit.,"11/Feb/09 2:00 AM;lucas.l.ward;Dave, I see some commits on this issue on the 9th to address the cycle,  Is there still an issue, or can we close?","11/Feb/09 2:17 AM;david_syer;I fixed the cycle.  If you are happy with the changes, we are good to go.",,,,,,,,,,,,,,,,
"Add 'Whats New in 2.0"" chapter to docs",BATCH-1042,25479,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,28/Jan/09 9:47 AM,07/Apr/09 3:32 PM,10/May/19 2:37 AM,07/Apr/09 3:32 PM,2.0.0.M3,,,,,,2.0.0,,,Documentation,,,,,0,,"There needs to be a chapter after the introduction with an overview of all the changes made since 1.x.  It will be mostly quick blurbs with cross references to other sections.  However, in some cases, such as the interface change to ItemReader and ItemWriter, there will need to be significantly more.",,;30/Jan/09 10:23 AM;lucas.l.ward;14400,,,,,,,,,,,,,,14400,14400,14400,100%,14400,14400,14400,,,BATCH-1040,,,,,,,,,,,,,,,,,,,,,,,318297600,,,,,,11626,true,lucas.l.ward(lucas.l.ward),,,,0|i01s1j:,10420,10404,,,,,"28/Jan/09 9:49 AM;lucas.l.ward;Because the what new section will need so much cross referencing, it really should be finished after the rest of the doc is cross referenced.","30/Jan/09 10:23 AM;lucas.l.ward;I have added the what's new chapter to the docs.  I'm waiting for the partitioning chatper to be done before I create a section about it, and there may be some things missed that I'll catch later in review, but it's fairly solid for now.","07/Apr/09 2:59 PM;lucas.l.ward;I committed an updated section on scalability pulled from Dave's blog post (with some slight tweaks to language)  I was able to get mvn site to work on my machine finally by downgrading to java 5, but the reference folder only contains the index and nothing else.  I'll see if I can get it to work tomorrow so I can check the links I added before marking the issue as resolved.",07/Apr/09 3:32 PM;lucas.l.ward;It looks like the reference documentation are only generated when the release profile is turned on.  I validated that the links work and marking resolved.,,,,,,,,,,,,,,,,,,,
Change namespace to set job-repository only on job,BATCH-1037,25473,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,dhgarrette,dhgarrette,dhgarrette,28/Jan/09 6:30 AM,12/Mar/09 8:28 PM,10/May/19 2:37 AM,10/Feb/09 3:41 AM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,"Should the namespace be changed to only have job-repository on the <job> element?  The parser could then set the repository onto all of its steps.  

There doesn't seem to be a need to allow different job repositories for certain steps.  In fact, doing so could cause complications and so it might be better to prevent users from setting these individually.",,;09/Feb/09 12:43 AM;thomas.risberg;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,BATCH-1013,,,,,,,,,,,,,,,,,,,,,,,323308800,,,,,2009-02-09 00:42:49.905,11631,false,dhgarrette(dhgarrette),,,,0|i03wzj:,22886,19352,,,,,"05/Feb/09 2:15 AM;dhgarrette;According to our discussion, <step> elements defined within <job> elements should not have job-repository attributes.  These steps should receive their job-repository from the attribute on the surrounding <job> element.

However, <step> elements that are not defined within a <job> will still require a job-repository attribute.  Users will simply have to make sure that this attribute matches all others.",09/Feb/09 12:42 AM;thomas.risberg;This is taken care of in refactoring for  BATCH-1013,,,,,,,,,,,,,,,,,,,,,
Add Late Binding to Docs,BATCH-1035,25465,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,27/Jan/09 3:30 PM,27/Jan/09 3:32 PM,10/May/19 2:37 AM,27/Jan/09 3:31 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Documentation,,,,,0,,Late Binding should be covered in the documentation.,,;27/Jan/09 3:32 PM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,324345600,,,,,,11633,true,lucas.l.ward(lucas.l.ward),,,,0|i01s2f:,10424,10408,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add StepScope to application context automatically in the parser,BATCH-1034,25464,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,lucas.l.ward,lucas.l.ward,27/Jan/09 3:23 PM,16/Feb/09 2:03 AM,10/May/19 2:37 AM,16/Feb/09 2:03 AM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,"It seems like requiring StepScope to be declared should only be required if the namespace isn't used.  We could easily add it in the JobParser, and it wouldn't really hurt anything if it wasn't used.",,;11/Feb/09 8:28 AM;thomas.risberg;7200,;11/Feb/09 2:43 PM;thomas.risberg;3600,,,,,,,,,,,,,3600,0,10800,300%,3600,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,322704000,,,,,2009-02-11 08:30:05.403,11634,false,thomas.risberg(thomas.risberg),,,,0|i03wzr:,22887,19353,,,,,"11/Feb/09 8:30 AM;thomas.risberg;I added this, but now there is a chance that there could be multiple bean definitions for the StepScope - need to look into any issues that might cause.",11/Feb/09 2:44 PM;thomas.risberg;Added check to prevent extra post processing in the event of multiple StepScope instances defined in context,16/Feb/09 2:03 AM;thomas.risberg;We should look into the effects of potential duplicate registration of the StepScope bean,,,,,,,,,,,,,,,,,,,,
Create a PrefixMatchingCompositeLineMapper,BATCH-1033,25463,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,dhgarrette,dhgarrette,27/Jan/09 2:57 PM,27/Jan/09 3:05 PM,10/May/19 2:37 AM,27/Jan/09 3:05 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,Samples,,,,0,,The PrefixMatchingCompositeLineMapper combines the PrefixMatchingCompositeLineTokenizer with similar functionality for field set mapping.  Two delegate maps must be wired into the mapper: one containing LineTokenizers and the other containing FieldSetMappers.  The two maps do NOT need to have the same prefixes.,,;27/Jan/09 3:05 PM;dhgarrette;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,324345600,,,,,,11635,true,dhgarrette(dhgarrette),,,,0|i01nx3:,9752,9782,,,,,,,,,,,,,,,,,,,,,,,,,,,
FlatFileItemReader should identify missing resource in warning,BATCH-1031,25457,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,dezzio@ysoft.com,dezzio@ysoft.com,27/Jan/09 12:41 AM,27/Jan/09 12:56 AM,10/May/19 2:37 AM,27/Jan/09 12:56 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"Current warning says: ""Input resource does not exist,"" but does not identify the resource, forcing debugging to correct.  Patch adds the resource.toString() to the message.",,;27/Jan/09 12:56 AM;robert.kasanicky;900,,,,,,,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,27/Jan/09 12:41 AM;dezzio@ysoft.com;FlatFileItemReader.diff;https://jira.spring.io/secure/attachment/15089/FlatFileItemReader.diff,,,,,,,,,,,324432000,,,,,2009-01-27 00:56:33.638,5798,true,robert.kasanicky(robert.kasanicky),,,,0|i02jav:,14836,14140,,,,,27/Jan/09 12:56 AM;robert.kasanicky;Added resource.getDescription() to the logged warning (better chance to get meaningful value compared to toString). Fixed both FlatFileItemReader and StaxEventItemReader.,,,,,,,,,,,,,,,,,,,,,,
"FlowJob replays failed steps on restart, even if the failure did not fail the job",BATCH-1030,25455,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,26/Jan/09 10:18 PM,31/Jan/09 7:55 PM,10/May/19 2:37 AM,31/Jan/09 7:54 PM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,"	@Test
	public void testFailedStepRestarted() throws Exception {
		SimpleFlow flow = new SimpleFlow(""job"");
		Collection<StateTransition> transitions = new ArrayList<StateTransition>();
		transitions.add(StateTransition.createStateTransition(new StepState(new StepSupport(""step1"") {
			@Override
			public void execute(StepExecution stepExecution) throws JobInterruptedException,
					UnexpectedJobExecutionException {
				stepExecution.setStatus(BatchStatus.FAILED);
				stepExecution.setExitStatus(ExitStatus.FAILED);
				jobRepository.update(stepExecution);
			}
		}), ""step2""));
		transitions.add(StateTransition.createEndStateTransition(new StepState(new StubStep(""step2"") {
			@Override
			public void execute(StepExecution stepExecution) throws JobInterruptedException,
					UnexpectedJobExecutionException {
				if (fail) {
					stepExecution.setStatus(BatchStatus.FAILED);
					stepExecution.setExitStatus(ExitStatus.FAILED);
					jobRepository.update(stepExecution);
				} else {
					super.execute(stepExecution);
				}
			}
		})));
		flow.setStateTransitions(transitions);
		job.setFlow(flow);
		job.afterPropertiesSet();
		fail = true;
		job.execute(jobExecution);
		assertEquals(ExitStatus.FAILED, jobExecution.getExitStatus());
		assertEquals(2, jobExecution.getStepExecutions().size());
		jobRepository.update(jobExecution);
		jobExecution = jobRepository.createJobExecution(""job"", new JobParameters());
		fail = false;
		job.execute(jobExecution);
		assertEquals(ExitStatus.COMPLETED, jobExecution.getExitStatus());
		assertEquals(1, jobExecution.getStepExecutions().size());
	}
",,;31/Jan/09 7:55 PM;david_syer;3600,,,,,,,,,,,,,,14400,0,3600,25%,14400,0,3600,,,,,,,,,,,,,,,31/Jan/09 7:54 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15101/mylyn-context.zip,,,,,,,,,,,324000000,,,,,,11637,false,david_syer(david_syer),,,,0|i03x07:,22889,19355,,,,,"31/Jan/09 7:54 PM;david_syer;Added a new BatchStatus.INCOMPLETE and a check in FlowJob.FlowExecutor for a failed previous step, which is then updated wit hthe new status (the exitCode will still be FAILED).",,,,,,,,,,,,,,,,,,,,,,
"Using the batch namespace, steps can't be defined outside of the ""job"" tag.",BATCH-1013,25428,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,dhgarrette,dhgarrette,dhgarrette,23/Jan/09 3:09 AM,25/Mar/09 5:00 AM,10/May/19 2:37 AM,10/Feb/09 3:42 AM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,"Currently, the namespace allows a user to define a step using the ""beans"" namespace and to reference it via the ""name"" attribute of the ""step"" tag:

  <job id=""skipJob"">
      <step name=""step1"">
  </job>

  <beans:bean id=""step1"">
      ...
  </beans:bean>

However, it should also be possible to define step1 externally, but using the batch namespace:

  <job id=""skipJob"">
      <step name=""step1"">
  </job>

  <step name=""step1"" ... >
      ...
  </step>

Defining a step externally is particularly useful for allowing a step to be reused by multiple jobs.  Users should not be forced to use the ""beans"" namespace in order to achieve this.

",,;09/Feb/09 12:43 AM;thomas.risberg;21600,;10/Feb/09 3:42 AM;thomas.risberg;14400,,,,,,,,,,,,,14400,0,36000,250%,21600,7200,36000,,,,,,,,,,,,,,,,,,,,,,,,,,323222400,,,,,2009-02-09 05:23:37.759,11649,false,dhgarrette(dhgarrette),,,,0|i03x13:,22893,19359,,,,,"27/Jan/09 2:08 AM;dhgarrette;Following the discussing from the call, these should be the two ways to define steps in a job with the namespace:

Option 1: In-line definition

  <job id=""skipJob""> 
      <step id=""step1"" ... > //step has ""id""
         <tasklet ... />
         <next ... />    //transitions defined in-line
      </step>
  </job> 

Option 2: External definition

  <job id=""skipJob""> 
      <step ref=""step1""> 
         <next ... />    //transitions defined in-line
      </step>
  </job> 

  <step id=""step1"" ... > //step has ""id""
      <tasklet ... />
  </step> 

So the definition of a step will have: (id AND (tasklet element OR tasklet attribute[ref] )) OR ref
","09/Feb/09 5:23 AM;thomas.risberg;I think we have to require the id on all step definitions whether they use ref or tasklet.

We need to be able to accommodate this

<job id=""job"">
  <step id=""step1"" tasklet=""tasklet1"" next=""step2""/>
  <step id=""step2"" ref=""step"" next=""step3""/>
  <step id=""step3"" tasklet=""tasklet3"" next=""step4""/>
  <step id=""step4"" ref=""step""/>
</job>

<beans:bean id=""step"" class=""...""/>",,,,,,,,,,,,,,,,,,,,,
StepFactoryBeans cleanup,BATCH-1010,25424,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,23/Jan/09 1:09 AM,10/Feb/09 9:57 PM,10/May/19 2:37 AM,10/Feb/09 9:57 PM,,,,,,,2.0.0.RC1,,,Core,,,,,0,,There should be a more sensible way to organize the configuration than a monolithic method with override in the subclass.,,;10/Feb/09 9:57 PM;robert.kasanicky;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,BATCH-1009,,,,,,,,,,,,,,323136000,,,,,,11651,true,robert.kasanicky(robert.kasanicky),,,,0|i03x1j:,22895,19361,,,,,"10/Feb/09 9:57 PM;robert.kasanicky;Refactored the internal implementation for comprehensibility. 

Notable functionality changes are:
1. retryable exception are no longer automatically treated as skippable (no idea why we were doing that).
2. fault-tolerant step no longer uses 'simple' (not fault-tolerant) implementations internally if neither skipLimit nor retryLimit is set. This was unintuitive and was hiding issues in the fault-tolerant classes (tests that didn't directly care about skipping or retrying items were in fact testing the 'simple' implementation).  ",,,,,,,,,,,,,,,,,,,,,,
Elements in namespace are order-dependent,BATCH-1008,25419,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,dhgarrette,dhgarrette,dhgarrette,22/Jan/09 12:37 AM,13/Feb/09 7:27 AM,10/May/19 2:37 AM,12/Feb/09 6:05 AM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,"When using the namespace, the elements are order-dependent, but they should not be.

For example, the following results in an error because ""retryable-exception-classes"" is not allowed to appear after ""fatal-exception-classes"".

	<step name=""step1"">
		<tasklet reader=""itemReader"" writer=""itemWriter"" commit-interval=""2"">
			<fatal-exception-classes>
				java.io.FileNotFoundException
			</fatal-exception-classes>
			<retryable-exception-classes>
				org.springframework.dao.DeadlockLoserDataAccessException
			</retryable-exception-classes>
		</tasklet>
	</step>",,;23/Jan/09 1:54 AM;thomas.risberg;3600,;11/Feb/09 12:39 AM;thomas.risberg;3600,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,322963200,,,,,2009-01-22 00:42:43.622,11653,false,dhgarrette(dhgarrette),,,,0|i03x1z:,22897,19363,,,,,22/Jan/09 12:42 AM;robert.kasanicky;Just found similar issue with job listeners that are required to be declared after steps.,23/Jan/09 3:27 AM;thomas.risberg;Fixed the elements oredring for <tasklet>.  The listeners for the <job> and <step> are going to require more substantial changes.,12/Feb/09 6:05 AM;thomas.risberg;I'm closing this issue since I fixed the original problem. If there are other elements that need re-ordering or must be allowed to be defined n any order we should create separate issues for them.,,,,,,,,,,,,,,,,,,,,
"Namespace does not allow for variables (ie, ${varname})",BATCH-1006,25411,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,dhgarrette,dhgarrette,dhgarrette,21/Jan/09 7:32 AM,13/Feb/09 7:33 AM,10/May/19 2:37 AM,22/Jan/09 7:18 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"The namespace currently does not allow variables to be used as in the following:

<batch:tasklet reader=""playerFileItemReader"" writer=""playerWriter"" commit-interval=""${job.commit.interval}"" />

This results in the error:

SAXParseException: cvc-datatype-valid.1.2.1: '${job.commit.interval}' is not a valid value for 'integer'.

The ""xsd:integer"" and ""xsd:boolean"" types in spring-batch-2.0.xsd should be replaced with ""xsd:string"".  Any incorrect types will be caught at runtime.",,;22/Jan/09 7:20 AM;thomas.risberg;3600,;22/Jan/09 7:21 AM;thomas.risberg;60,,,,,,,,,,,,,14400,0,3660,25%,14400,0,3660,,,,,,,,,,,,,,,21/Jan/09 7:32 AM;dhgarrette;xsd-types-core.patch;https://jira.spring.io/secure/attachment/15066/xsd-types-core.patch,,,,,,,,,,,324864000,,,,,,11655,true,dhgarrette(dhgarrette),,,,0|i03x2f:,22899,19365,,,,,,,,,,,,,,,,,,,,,,,,,,,
startLimit and allowStartIfComplete cannot be set in the namespace,BATCH-1005,25410,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,dhgarrette,dhgarrette,dhgarrette,21/Jan/09 7:06 AM,13/Feb/09 7:32 AM,10/May/19 2:37 AM,22/Jan/09 8:39 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"startLimit and allowStartIfComplete are properties on AbstractStep and SimpleStepFactoryBean.  However, there is currently no way to set them using the batch namespace.",,;22/Jan/09 8:39 AM;thomas.risberg;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,324864000,,,,,,11656,true,dhgarrette(dhgarrette),,,,0|i03x2n:,22900,19366,,,,,"22/Jan/09 12:54 AM;dhgarrette;Added mention of allowStartIfComplete, which is in the same situation.",,,,,,,,,,,,,,,,,,,,,,
Using namespace to define a step does not store step name,BATCH-1004,25409,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,dhgarrette,dhgarrette,dhgarrette,21/Jan/09 6:22 AM,27/Jan/09 5:38 AM,10/May/19 2:37 AM,26/Jan/09 12:38 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"When the namespace is used to define a step within a job definition, the parser does not store the step's ""name"" attribute on the step.  Instead, the name stored in the step execution is a generated name, for example ""(inner bean)#3"".

<job id=""skipJob"">
    <step name=""step1"">
        <tasklet ... />

StepExecution: id=0, name=(inner bean)#3, ...
",,;26/Jan/09 12:37 PM;thomas.risberg;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,324864000,,,,,,11657,true,dhgarrette(dhgarrette),,,,0|i03x2v:,22901,19367,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make jobs restartable by default,BATCH-1001,25395,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,dhgarrette,dhgarrette,dhgarrette,20/Jan/09 7:05 AM,13/Feb/09 7:06 AM,10/May/19 2:37 AM,23/Jan/09 1:50 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"A Job should be restartable by default.  However, the Spring Batch schema, spring-batch-2.0.xsd, and the AbstractJob class list the ""restartable"" attribute has being false by default.

A patch has been created and attached to make these changes.",,;23/Jan/09 1:50 AM;thomas.risberg;3600,,,,,,,,,,,,,,900,0,3600,400%,900,0,3600,,,,,,,,,,,,,,,20/Jan/09 7:05 AM;dhgarrette;restartability-core.patch;https://jira.spring.io/secure/attachment/15060/restartability-core.patch,,,,,,,,,,,324777600,,,,,2009-01-23 01:50:10.504,11660,false,dhgarrette(dhgarrette),,,,0|i03x3b:,22903,19369,,,,,23/Jan/09 1:50 AM;thomas.risberg;applied changes in the patch,,,,,,,,,,,,,,,,,,,,,,
JobExecution ExecutionContext should not be persisted by Step?,BATCH-999,25387,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,19/Jan/09 10:19 PM,22/Jan/09 3:19 AM,10/May/19 2:37 AM,22/Jan/09 3:19 AM,,,,,,,2.0.0.M4,,,,,,,,0,,"JobExecution ExecutionContext should not be persisted by Step?  I can see a hopeful looking comment added in 1.1 inside SimpleJobRepository:

	public void updateExecutionContext(StepExecution stepExecution) {
		// Until there is an interface change (
		ecDao.persistExecutionContext(stepExecution.getJobExecution());
		ecDao.persistExecutionContext(stepExecution);
	}

We should re-visit that before 2.0 gets to a release candidate.  Caused problems for someone on the forum as well (http://forum.springframework.org/showthread.php?t=66030).",,;20/Jan/09 12:39 AM;robert.kasanicky;9000,;22/Jan/09 3:19 AM;robert.kasanicky;3600,,,,,,,,,,,,,14400,1800,12600,87%,14400,1800,12600,,,,,,,,,,,,,,,,,,,,,,,,,,324864000,,,,,2009-01-19 22:58:18.664,11662,true,robert.kasanicky(robert.kasanicky),,,,0|i03x3r:,22905,19371,,,,,"19/Jan/09 10:58 PM;robert.kasanicky;I'm not sure what the code comment meant really. It has to be this way to give the same level of guarantees for both job and step execution contexts (part of business transaction). 

What we could do is distinguish save and update of EC on the interface level. We can then save the execution context at the same time execution is saved and the DAO won't need to figure out each time whether it should be updating or inserting rows (which caused the trouble for the concurrent forum usecase).",20/Jan/09 12:39 AM;robert.kasanicky;ExecutionContextDao now has separate save and update methods. ExecutionContext is saved at the same time the execution it belongs to is saved. Job and step execution contexts are then still updated together.,22/Jan/09 2:16 AM;robert.kasanicky;The consensus is job execution context should be stored once per step (not chunk).,,,,,,,,,,,,,,,,,,,,
EXIT_CODE and EXIT_MESSAGE out of synch for step,BATCH-997,25368,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,thomas.risberg,thomas.risberg,16/Jan/09 7:20 AM,19/Jan/09 10:52 PM,10/May/19 2:37 AM,19/Jan/09 4:25 AM,,,,,,,2.0.0.M4,,,Core,,,,,0,,"Using SVN Rev 2823 I'm running a job with a single step where one of the items read throws a non-skippable exception. This results in a step execution entry where STATUS=FAILED
EXIT_CODE=COMPLETED
EXIT_MESSAGE=[blank]

Running seme step using M3 I get
EXIT_CODE=FAILED
EXIT_MESSAGE=java.lang.RuntimeException: ...

Restarting the job ends up with a step_execution with
STATUS=COMPLETED
EXIT_CODE=EXECUTING
EXIT_MESSAGE=[blank]

For M3 this gives:
EXIT_CODE=COMPLETED
EXIT_MESSAGE=[blank]

Looks like something has changed between M3 and now where the handling of the exit state gets out of synch.
",,;18/Jan/09 9:16 PM;robert.kasanicky;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,325036800,,,,,2009-01-18 21:17:23.354,11664,false,david_syer(david_syer),,,,0|i03x3z:,22906,19372,,,,,18/Jan/09 9:17 PM;robert.kasanicky;AbstractStep was setting the final exitStatus only after stepExecution's last repository update. The basic problem was we didn't have any tests that checked the in-memory StepExecution  object and persisted StepExecution were the same thing after step had finished.,19/Jan/09 12:44 AM;thomas.risberg;The EXIT_CODE still says EXECUTING after a restart even though the step completed.,"19/Jan/09 4:24 AM;thomas.risberg;Dave, there was a test in the execute method of ChunkOrientedTasklet that read:

		if (!inputs.isEnd()) {
			contribution.setExitStatus(ExitStatus.FINISHED);
		}

Not sure what the intention here was, but it caused steps with a single chunk to have the wrong exit status (EXECUTING). Can you review the change I made.

-Thomas",19/Jan/09 10:52 PM;david_syer;You just inverted the test?  Makes sense (looks like a simple typo).,,,,,,,,,,,,,,,,,,,
use default retryLimit  == 1 (not 0) in *StepFactoryBean,BATCH-996,25341,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,13/Jan/09 11:36 PM,29/Jan/19 8:32 AM,10/May/19 2:37 AM,29/Jan/09 12:01 AM,1.1.3,2.0.0.M3,,,,,2.0.0.M4,,,,,,,,0,,"Per SimpleRetryPolicy's javadoc the retryLimit includes the initial try as well, therefore it only makes sense to use value >=1.",,;14/Jan/09 12:00 AM;robert.kasanicky;2700,,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,BATCH-995,,,,,,,,,,,,,,324259200,,,,,,11665,true,mbenhassine(mbenhassine),,,,0|i03np3:,21381,2,,,,,14/Jan/09 12:00 AM;robert.kasanicky;enforce retryLimit >=1 in the StepFactoryBean,"28/Jan/09 11:14 PM;robert.kasanicky;This was actually wrong. The retry policy implementations account for the initial try by checking whether there is a trhowable registered already. There's something rotten in retry world, but default retryLimit  value was not the problem.","29/Jan/09 12:01 AM;robert.kasanicky;Reverted the default back to 0. I'll create a separate issue once I understand what's causing the weird effects I misinterpreted in this issue.

The fix version should be changed to 1.1.5 but it doesn't exist yet in jira. Good news the 1.1.x changes are harmless, but I've reverted them not to cause confusion.",,,,,,,,,,,,,,,,,,,,
unclear retry configuration in FaultTolerantStepFactoryBean,BATCH-995,25329,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,13/Jan/09 12:24 AM,15/Jan/09 8:29 PM,10/May/19 2:37 AM,15/Jan/09 8:29 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"if (retryPolicy == null) {

	SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy(retryLimit);
	if (!retryableExceptionClasses.isEmpty()) { // otherwise we
		// retry all exceptions
		simpleRetryPolicy.setRetryableExceptionClasses(retryableExceptionClasses);
	}
	simpleRetryPolicy.setFatalExceptionClasses(fatalExceptionClasses);

	ExceptionClassifierRetryPolicy classifierRetryPolicy = new ExceptionClassifierRetryPolicy();
	HashMap<Class<? extends Throwable>, RetryPolicy> exceptionTypeMap = new HashMap<Class<? extends Throwable>, RetryPolicy>();
	for (Class<? extends Throwable> cls : retryableExceptionClasses) {
		exceptionTypeMap.put(cls, simpleRetryPolicy);
	}
	classifierRetryPolicy.setPolicyMap(exceptionTypeMap);
	retryPolicy = classifierRetryPolicy;

}

SimpleRetryPolicy is for some reason wrapped in ExceptionClassifierRetryPolicy. This not only seems unnecessary, but also ignores the fatalExceptionClasses (unless they subclass the retryableExceptionClasses).

The most interesting thing however is that using simpleRetryPolicy directly severely breaks the FaultTolerantStepFactoryBeanTests.",,;14/Jan/09 1:00 AM;robert.kasanicky;10800,;15/Jan/09 8:27 PM;robert.kasanicky;1800,,,,,,,,,,,,,14400,1800,12600,87%,14400,1800,12600,,,,,,,,,,,,,,,13/Jan/09 3:10 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15036/mylyn-context.zip,,,,,,,,,,,325382400,,,,,2009-01-13 03:10:10.396,11666,true,robert.kasanicky(robert.kasanicky),,,,0|i03x47:,22907,19373,,,,,"13/Jan/09 3:10 AM;david_syer;I think ExceptionClassifierRetryPolicy used to be necessary so that the retry limit is applied but I agree that it doesn't seem to be doing anything useful now.  It does seem like maybe it should be there though so that a retry policy injected by the user can be explicitly overridden for our known fatal exceptions.  It isn't performing that function now because it is set up inside the if() block.  I think that might be the problem (it should go outside), like this:

if (retryPolicy == null) {

	SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy(retryLimit);
	if (!retryableExceptionClasses.isEmpty()) { // otherwise we
		// retry all exceptions
		simpleRetryPolicy.setRetryableExceptionClasses(retryableExceptionClasses);
	}
	retryPolicy = simpleRetryPolicy;

}

ExceptionClassifierRetryPolicy classifierRetryPolicy = new ExceptionClassifierRetryPolicy();
HashMap<Class<? extends Throwable>, RetryPolicy> exceptionTypeMap = new HashMap<Class<? extends Throwable>, RetryPolicy>();
for (Class<? extends Throwable> cls : retryableExceptionClasses) {
	exceptionTypeMap.put(cls, retryPolicy);
}
classifierRetryPolicy.setFatalExceptionClasses(fatalExceptionClasses);
classifierRetryPolicy.setPolicyMap(exceptionTypeMap);

Does that make sense?  (I know the ExceptionClassifierRetryPolicy doesn't have a fatalExceptions property, but something like that.)","13/Jan/09 3:23 AM;robert.kasanicky;Yes, keeping the wrapper for handling fatal exceptions makes good sense. 

I'm currently puzzled why the seemingly useless wrapper makes such a big difference. I'll try to figure that out first and then refactor the implementation along the suggested lines.","14/Jan/09 1:00 AM;robert.kasanicky;I ended up simply removing the wrapper after fixing direct use of SimpleRetryPolicy. The wrapper is useless in case retryLimit + retryExceptionClasses are used to configure the behavior and using retryExceptionClasses property to configure the delegation is incorrect if there is custom policy injected (the custom retryPolicy doesn't have to care about retryExceptionClasses).

Maybe we should just remove the setter for the retryPolicy? It seems more confusing than useful.","15/Jan/09 3:29 AM;david_syer;Isn't it the fatal exceptionClasses that we need to worry about?  Clearly it is an error for the user to set both a retryLimit and a retryPolicy (probably we should log a warning not throw an exception).  But the fatal list is important.

And I think we need to keep the retryPolicy setter - it is only a bit confusing and it provides a nice strategy for advanced users.","15/Jan/09 4:26 AM;robert.kasanicky;I think I got mislead by staring too long at the original implementation, fatal exceptions are certainly a different topic - reopening.",15/Jan/09 8:29 PM;robert.kasanicky;Added ExceptionClassifierRetryPolicy wrapper for the injected RetryPolicy that handles fatal exceptions.,,,,,,,,,,,,,,,,,
BackOffPolicy is not applied for exceptions that cause rollback,BATCH-994,25328,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,12/Jan/09 11:38 PM,13/Jan/09 2:58 AM,10/May/19 2:37 AM,13/Jan/09 2:34 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"Retryable exceptions that should cause rollback get re-thrown before BackOffPolicy applies.

http://forum.springframework.org/showthread.php?t=65811",,;13/Jan/09 2:35 AM;robert.kasanicky;3600,,,,,,,,,,,,,,10800,7200,3600,33%,10800,7200,3600,,,,,,,,,,,,,,,13/Jan/09 2:34 AM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/15035/mylyn-context.zip,,,,,,,,,,,325555200,,,,,2009-01-13 02:58:07.958,11667,false,david_syer(david_syer),,,,0|i03x4f:,22908,19374,,,,,13/Jan/09 2:34 AM;robert.kasanicky;RetryTemplate now calls backOff before deciding whether to rethrow,"13/Jan/09 2:58 AM;david_syer;I think the ordering was intentional (so that if a rollback is going to happen it comes as quickly as possible), but arguably it makes sense either way, and possibly it even makes more sense this way.  Closing on the assumption that someone will complain if it doesn't work.",,,,,,,,,,,,,,,,,,,,,
"Slightly confusing use of *Dao in sample configuration in documentation, where *ItemWriter would be clearer",BATCH-993,25321,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david@davidkarlsen.com,david@davidkarlsen.com,12/Jan/09 3:48 AM,12/Jan/09 9:26 PM,10/May/19 2:37 AM,12/Jan/09 9:25 PM,1.1.3,2.0.0.M3,,,,,1.1.4,2.0.0.M4,,Documentation,,,,,0,,"The documentation at http://static.springframework.org/spring-batch/1.1.x/spring-batch-docs/reference/html-single/index.html

reads:

<bean id=""hibernateItemWriter""
        class=""org.springframework.batch.item.database.HibernateAwareItemWriter"">
    <property name=""sessionFactory"" ref=""sessionFactory"" />
    <property name=""delegate"" ref=""customerCreditWriter"" />
  </bean>

  <bean id=""customerCreditWriter""
        class=""org.springframework.batch.sample.dao.HibernateCreditDao"">
    <property name=""sessionFactory"" ref=""sessionFactory"" />
  </bean>


which is not correct - the delegate must be an ItemWriter - not a plain dao: http://static.springframework.org/spring-batch/1.1.x/apidocs/org/springframework/batch/item/database/HibernateAwareItemWriter.html#setDelegate(org.springframework.batch.item.ItemWriter)",N/A,;12/Jan/09 9:25 PM;david_syer;3600,,,,,,,,,,,,,,600,0,3600,600%,600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,325641600,,,,,2009-01-12 18:12:58.035,11668,false,david_syer(david_syer),,,,0|i01s33:,10427,10411,,,,,"12/Jan/09 6:12 PM;david_syer;I'll change it in the docs, but note that the HibernateCreditDao in the samples *is* actually an ItemWriter (I won't be changing that for a point release).",,,,,,,,,,,,,,,,,,,,,,
Add support for named queries on HibernateCursorItemReader,BATCH-989,25277,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,rshan,rshan,06/Jan/09 5:59 AM,06/Jan/09 11:57 PM,10/May/19 2:37 AM,06/Jan/09 11:57 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"Many legacy Hibernate queries are maintained in mapping files. It would be convenient to be able to set the query of a HibernateCursorItemReader via named query. Clearly it's simple to create my own subclass of HibernateCursorItemReader that supports this... however, it seems reasonable to include it out-of-the-box.

E.g.

Hibernate mapping excerpt

<query name=""getCustomers"">
from Customer
</query>


AppContext excerpt

<bean id=""hibernateItemReader""
   class=""org.springframework.batch.item.database.HibernateCursorItemReader"">
   <property name=""namedQuery"" value=""getCustomers"" />
   <property name=""sessionFactory"" ref=""sessionFactory"" />
</bean>","OSX 10.5, Java 1.5, Eclipse 3.4, Spring 2.5.5",;06/Jan/09 11:57 PM;robert.kasanicky;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,326160000,,,,,2009-01-06 23:57:18.155,11670,true,robert.kasanicky(robert.kasanicky),,,,0|i03x4v:,22910,19376,,,,,06/Jan/09 11:57 PM;robert.kasanicky;Added setQueryName(..) as alternative to setQueryString(..),,,,,,,,,,,,,,,,,,,,,,
MethodInvokingTaskletAdapter (via AbstractMethodInvokingDelegator) only allows specification of targetObject's declared methods,BATCH-988,25269,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,rshan,rshan,05/Jan/09 7:48 AM,07/Jan/09 3:02 AM,10/May/19 2:37 AM,07/Jan/09 1:04 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"I have a set of legacy services that I'd like to wrap with MethodInvokingTaskletAdpater. Each of my legacy services is a subclass of an abstract service, which has a method 'execute' that performs environment setup, then calls an abstract method 'doCommand' that each subclass implements. The desired targetMethod is the superclass 'execute' method, however the abstract method 'doCommand' is generally the only method that is declared on each subclass. The tasklet adapter's afterPropertiesSet fails an assertion because the targetMethod cannot be retrieved via Class.getDeclaredMethods(). It could be retrieved via Class.getMethods().

	public void afterPropertiesSet() throws Exception {
		Assert.notNull(targetObject);
		Assert.hasLength(targetMethod);
		Assert.state(targetClassDeclaresTargetMethod(), 
				""target class must declare a method with name matching the target method"");
	}
	
	/**
	 * @return true if target class declares a method matching target method name
	 * with given number of arguments of appropriate type.
	 */
	private boolean targetClassDeclaresTargetMethod() {
		MethodInvoker invoker = createMethodInvoker(targetObject, targetMethod);
		Method[] methods = invoker.getTargetClass().getDeclaredMethods();
		String targetMethodName = invoker.getTargetMethod();


Is there any reason why 'Method[] methods = invoker.getTargetClass().getDeclaredMethods();' shouldn't be changed to 'Method[] methods = invoker.getTargetClass().getMethods();'?


","OSX 10.5, Java 1.5, Eclipse 3.4, Spring 2.5.5",;06/Jan/09 8:47 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,06/Jan/09 8:47 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/15014/mylyn-context.zip,,,,,,,,,,,326160000,,,,,2009-01-06 17:40:59.208,11671,true,david_syer(david_syer),,,,0|i03x53:,22911,19377,,,,,06/Jan/09 5:40 PM;david_syer;Is there any reason why we shouldn't use use ReflectionUtils.findMethod() from Spring Core - then someone else can worry about the details?,06/Jan/09 8:47 PM;robert.kasanicky;ReflectionUtils would have issues if some of the parameter values was null (no class available for the value) so I made the suggested change getDeclaredMethods() -> getMethods(),"06/Jan/09 10:33 PM;david_syer;Actually, I think we need to check both getMethods and getDeclaredMethods, in case the target is a proxy, and only the interface is available.",07/Jan/09 1:04 AM;robert.kasanicky;The target method check now iterates over both getMethods() and getDeclaredMethods().,,,,,,,,,,,,,,,,,,,
Create JobRepositoryTestUtils,BATCH-987,25249,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,david_syer,david_syer,04/Jan/09 9:27 PM,04/Jan/09 9:49 PM,10/May/19 2:37 AM,04/Jan/09 9:49 PM,,,,,,,2.0.0.M4,,,,,,,,0,,Create JobRepositoryTestUtils in the test project.  Useful for creating and removing (in a compensating transaction) JobExecutions.,,;04/Jan/09 9:49 PM;david_syer;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,326332800,,,,,,11672,false,david_syer(david_syer),,,,0|i03x5b:,22912,19378,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use Woodstox instead of ref impl of StaX,BATCH-981,25211,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,david_syer,david_syer,29/Dec/08 10:38 PM,17/May/10 10:19 PM,10/May/19 2:37 AM,21/Nov/09 7:34 AM,2.0.0.M3,,,,,,2.1.0.M3,,,Infrastructure,,,,,0,,"Use Woodstox instead of ref impl of StaX.  Woodstox is apparently a ""better"" (more faithful) implementation of the spec, so we should probably use that by default.  Plus it is in the SpringSource Enterprise Repository.",,;05/Jan/09 2:12 AM;robert.kasanicky;1800,;17/Feb/09 1:10 AM;robert.kasanicky;1800,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,21/Nov/09 7:34 AM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/15949/mylyn-context.zip,17/Feb/09 1:10 AM;robert.kasanicky;woodstox.patch;https://jira.spring.io/secure/attachment/15138/woodstox.patch,,,,,,,,,,298598400,,,,,2009-01-05 02:07:34.368,5808,true,robert.kasanicky(robert.kasanicky),,,,0|i02jc7:,14842,14146,,,,,05/Jan/09 2:07 AM;robert.kasanicky;Woodstox 3.2.7 available in SpringSource repository still has the BATCH-761 problem. I suppose this dependency change can wait until Woodstox 3.2.8 (which has been released already and should work) is available in the SpringSource or maven central repos. ,12/Jan/09 2:44 AM;robert.kasanicky;Postponing to RC1 (hopefully Woodstox 3.2.8 makes it to the SpringSource repo meanwhile).,"09/Feb/09 1:52 AM;robert.kasanicky;postponing further, Woodstox 3.2.8 is still not available in SpringSource repo.",16/Feb/09 11:40 PM;david_syer;It is there now.,"17/Feb/09 1:10 AM;robert.kasanicky;Sadly 3.2.8 still doesn't work for us. The basic unit test of StaxEventItemWriter doesn't have the ""double end tag"" problem anymore, but integration tests (infrastructure-tests and samples) still end up creating invalid xml documents. Now using the workaround with overriding StaxEventItemWriter.endDocument() with no-op implementation fixes the integration tests but breaks the unit test. Strange.","22/Feb/09 10:08 PM;david_syer;Since we have no support for Java 5 without this, I think we have to make it a higher priority.  I'll ask for the BEA impl to go into SpringSource repository as well as a back up position (https://issuetracker.springsource.com/browse/BRITS-299).","08/Apr/09 4:54 PM;cowtowncoder;Robert: given that the feature to suppress automatic closing was added to resolve your issue, it would be nice if you or someone from your team could give some feedback to Woodstox dev team (Ian did comment on [http://jira.codehaus.org/browse/WSTX-165] which was helpful).
There is a good chance that I would be able to fix the problem(s) in question, if only somebody bothered to let me know about them.
It is bit frustrating to just accidentally find about usage problems that would often be very easily resolvable (and best of all, I don't charge for support! :) )

Btw: if you do want to use another Stax implementation, perhaps consider Sun's sjsxp; as that is the only other decent Stax impl. BEA's reference implementation is in pretty sorry state (I know, I contributed a dozen fixes; but anything remaining is lots of work and no one has worked on it for 3 years).

","09/Apr/09 3:40 AM;robert.kasanicky;@Tatu: thanks for you interest and help offer. With 3.2.7 the issue we had was diagnosed clearly, but this time the misbehavior is confusing (see my previous comment). Once I know what to ask for at Woodstox side, I'll definitely report an issue there.","09/Apr/09 5:46 AM;cowtowncoder;Thank you for quick response Robert!
I only realized after adding the comment that issue could well be undiagnosed and/or outside of Woodstox like you said (i.e. I misread parts of commentary).

If you do find more info and there is a chance it could have something to do with Woodstox event api impl feel free to add more info, perhaps I could help. I was actually thinking of evaluating spring batch the other day (a co-worker pointed me to it) so it'd be great to help with component I may be using in future. :)
",21/Nov/09 7:34 AM;robert.kasanicky;updated maven dependencies to woodstox-core-asl 4.0.6,,,,,,,,,,,,,
Add SystemPropertyInitializer,BATCH-980,25209,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,29/Dec/08 7:12 PM,29/Dec/08 7:24 PM,10/May/19 2:37 AM,29/Dec/08 7:23 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,Add SystemPropertyInitializer - convenience class for setting a System property in a bean definition.,,;29/Dec/08 7:24 PM;david_syer;660,,,,,,,,,,,,,,0,0,660,"9,223,372,036,854,775,807%",0,0,660,,,,,,,,,,,,,,,,,,,,,,,,,,326851200,,,,,,11677,false,david_syer(david_syer),,,,0|i03x5r:,22914,19380,,,,,,,,,,,,,,,,,,,,,,,,,,,
Insert Apache license header in Java sources (where missing),BATCH-979,25207,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,29/Dec/08 6:40 PM,12/Jan/09 9:07 PM,10/May/19 2:37 AM,12/Jan/09 9:07 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,Infrastructure,Samples,,,0,,Insert Apache license header in Java sources (where missing).  I think 1.0 started off with all headers correct.  Looks like we have slipped...,,;12/Jan/09 9:07 PM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,325641600,,,,,,11678,false,david_syer(david_syer),,,,0|i01nz3:,9761,9791,,,,,12/Jan/09 9:06 PM;david_syer;Fixed for 2.0M4,,,,,,,,,,,,,,,,,,,,,,
Switch RetryPolicy back to Throwable instead of Exception as in 1.x,BATCH-973,25168,,Refactoring,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,19/Dec/08 7:50 PM,23/Sep/09 7:24 PM,10/May/19 2:37 AM,23/Sep/09 7:24 PM,2.0.0.M3,,,,,,2.1.0.M1,,,Infrastructure,,,,,0,,"Was: Switch RetryCallback back to Throwable instead of Exception as in 1.x.  

A couple of people asked for this (and it makes the RetryOperationsInterceptor easier to implement).",,;23/Sep/09 7:24 PM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,303696000,,,,,,11684,false,david_syer(david_syer),,,,0|i03x6f:,22917,19383,,,,,06/Jan/09 1:54 AM;david_syer;See discussion in SPR-4855.  Not sure if this issue is going to be fixed.,12/Jan/09 9:29 PM;david_syer;Exception is better than Throwable for application developers.,23/Sep/09 5:57 PM;david_syer;I'll take a look at this again for 2.1.,"23/Sep/09 7:24 PM;david_syer;It seems that some external libraries (e.g. commons-http) throw Error when they should throw Exception (i.e. it is not fatal and is recoverable).  To accommodate that we can change the RetryPolicy signature to enable it to decide to retry a Throwable.  The RetryCallback keeps Exception in its signature (hence RetryOperatonsInterceptor is not changed and isn't any easier to implement, but that's not really the priority here).",,,,,,,,,,,,,,,,,,,
Job has the same ExitStatus as the last StepExecution,BATCH-972,25125,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,eickmeyer,eickmeyer,16/Dec/08 3:31 AM,04/Jan/09 10:25 PM,10/May/19 2:37 AM,04/Jan/09 10:25 PM,1.1.3,,,,,,1.1.4,,,Core,,,,,0,,"We want to modify the ExitStatus of a JobExecution depending on the ExitStati of its StepExecutions. We have introduced several additional ExitStati which symbolize different outcomes of a StepExecution, e.g. the Step completed successfully but some tolerateable errors occured. So, when there are two steps in the Job, one completes without any issues and one that has such a tolerateable error, the job should have the ExitStatus which indicates that there was a tolerateable error.
We therefore implemented a JobExecutionListener that iterates over all StepExecutions of the Job in the afterJob() method and determines the right ExitStatus for the whole Job. This works fine if the last StepExecution has the right ExitStatus. Otherwise the last StepExecution defines the outcome of the whole Job.
We think that the reason for this behaviour can be found in line 137 of SimpleJob. There we can see that the ExitStatus of the last StepExecution is used to set the ExitStatus of the JobExecution.",,;18/Dec/08 1:20 AM;robert.kasanicky;5400,,,,,,,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,18/Dec/08 1:19 AM;robert.kasanicky;BATCH-972.patch;https://jira.spring.io/secure/attachment/14973/BATCH-972.patch,,,,,,,,,,,326332800,,,,,2008-12-18 01:19:44.115,11685,true,robert.kasanicky(robert.kasanicky),,,,0|i03x6n:,22918,19384,,,,,"18/Dec/08 1:19 AM;robert.kasanicky;This issue somewhere on the line between bug and feature so I'm attaching a patch first to give a glimpse at what it takes to fix it. Basically I've moved job listener calls after the default exit status value has been set. I think it's fine for inclusion in 1.1.4, any objections?",18/Dec/08 6:23 PM;eickmeyer;We just tested the patch and it works as expected. It would be great if this could be included in the next release. Thanks!,04/Jan/09 10:25 PM;robert.kasanicky;On second thoughts blindly overwriting a user-set ExitStatus is clearly a bug that should be fixed - patch applied.,,,,,,,,,,,,,,,,,,,,
add database writers to iosample,BATCH-971,25109,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,robert.kasanicky,robert.kasanicky,15/Dec/08 2:37 AM,17/Dec/08 8:57 PM,10/May/19 2:37 AM,17/Dec/08 8:56 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Samples,,,,,0,,"Include the new Hibernate, JPA, JdbcBatch and IbatisBatch item writers. Processing phase should be added to the base iosample job to have meaningful database tests.",,;17/Dec/08 12:20 AM;robert.kasanicky;14400,;17/Dec/08 2:36 AM;robert.kasanicky;7200,JPA sample;17/Dec/08 8:57 PM;robert.kasanicky;7200,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,327888000,,,,,,11686,true,robert.kasanicky(robert.kasanicky),,,,0|i01nzb:,9762,9792,,,,,"15/Dec/08 8:57 PM;robert.kasanicky;Copying input to output (as iosample currently does) is fine for files, but it's not a good fit for database io. We can either make the iosample more sophisticated by adding processing phase (and hence break and fix the existing iosamples) or have a separate iosample for the database scenarios.",17/Dec/08 12:43 AM;robert.kasanicky;added processing phase to the iosample and included hibernate and jdbc jobs,17/Dec/08 2:36 AM;robert.kasanicky;added ibatis sample with paging input and batch output. Fixed AbstractPagingItemReader to reset its state on close() along the way.,17/Dec/08 8:56 PM;robert.kasanicky;Summary: iosample now reads CustomerCredit items and updates the credit value by constant and writes the udpated values to output in the same format. The original ItemReader is then used to check the results.,,,,,,,,,,,,,,,,,,,
JdbcCursorItemReader executes outside of main transaction,BATCH-970,25106,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,14/Dec/08 11:01 PM,13/Jan/09 6:57 AM,10/May/19 2:37 AM,13/Jan/09 6:57 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"JdbcCursorItemReader executes outside of main transaction since it uses dataSource.getConnection() instead of DataSourceUtils.getConnection(dataSource) to obtain the connection.  The connection from dataSource.getConnection() will not be the one for the current transaction, if one is in progress.

Provide an option to participate in the same transaction as the rest of the step processing.",,also added new unit tests;15/Dec/08 1:03 AM;thomas.risberg;7200,Added ExtendedConnectionDataSourceProxy to suppress any close calls after TX commits.;17/Dec/08 2:41 AM;thomas.risberg;43200,,,,,,,,,,,,,3600,0,50400,"1,400%",3600,0,50400,,,,,,,,,,,,,,,04/Jan/09 8:17 PM;robert.kasanicky;ExtendedConnectionDataSourceProxy-Java6.patch;https://jira.spring.io/secure/attachment/15009/ExtendedConnectionDataSourceProxy-Java6.patch,,,,,,,,,,,326332800,,,,,2008-12-15 02:05:41.352,11687,true,thomas.risberg(thomas.risberg),,,,0|i03x6v:,22919,19385,,,,,15/Dec/08 2:05 AM;robert.kasanicky;reviewed and closed,15/Dec/08 3:07 AM;david_syer;It was implemented like that on purpose. Is it OK to use DataSourceUtils here? Do we get a new cursor for every transaction now with the paging support?  If not I guess it should stay outside the transaction.,"15/Dec/08 3:08 AM;thomas.risberg;Need to consider that DataSourceUtils will call close on the Connection on transaction
boundaries, unless you're using a SmartDataSource.  The cursor reader is
a bit different since it needs to keep it all open.",15/Dec/08 3:36 AM;thomas.risberg;I'm making this a configurable option - run cursor in its own transaction (default) or use a SingleConnectionDataSource to wrap the DataSource and let the cursor participate in the main transaction,15/Dec/08 7:37 AM;thomas.risberg;Leaving the 1.1 branch as it was - only changing the 2.0 version to have the option of running in same transaction.,"04/Jan/09 8:17 PM;robert.kasanicky;The ExtendedConnectionDataSourceProxy doesn't compile with Java 6, where DataSource was modified to extend Wrapper (hence compiler complains isWrapperFor(Class) and unwrap(Class) are missing). I've implemented the missing methods in the attached patch, but the problem is their recursive nature, which means the implementation now won't compile under Java5 - seems to be a vicious circle. I guess the best we can do is to use a non-recursive implementation that will violate the contract somewhat.",,,,,,,,,,,,,,,,,
FlatFileItemWriters interference in CompositeItemWriter,BATCH-969,25105,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,14/Dec/08 7:02 PM,19/Dec/08 7:52 PM,10/May/19 2:37 AM,14/Dec/08 8:40 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"http://forum.springframework.org/showthread.php?t=64607

Two FFIW end up writing to the same resource when injected into CompositeItemWriter. No clue how that's possible yet, but I was able to recreate the problem.",,;14/Dec/08 8:42 PM;robert.kasanicky;7200,,,,,,,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,14/Dec/08 8:41 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14955/mylyn-context.zip,,,,,,,,,,,328147200,,,,,,11688,true,david_syer(david_syer),,,,0|i03x73:,22920,19386,,,,,"14/Dec/08 8:40 PM;robert.kasanicky;TransactionAwareBufferedWriter was using a hard-coded transactional buffer, this is now configurable (determined by ItemStream's name).
CompositeItemWriterSampleJob was updated to show how to use two instances of the same writer class simultaneously.",,,,,,,,,,,,,,,,,,,,,,
DRY cleanup of StepParser,BATCH-967,25086,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,12/Dec/08 4:34 AM,15/Jan/09 3:24 AM,10/May/19 2:37 AM,15/Jan/09 3:24 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,The StepParser needs some DRY cleanup for the step-listeners/listeners handling.,,;15/Jan/09 3:23 AM;thomas.risberg;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,BATCH-673,,,,,,,,,,,,,,328320000,,,,,,11690,false,thomas.risberg(thomas.risberg),,,,0|i03x7j:,22922,19388,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create non-delegating ItemWriters for JPA and Hibernate,BATCH-965,25046,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,10/Dec/08 4:04 AM,15/Dec/08 2:16 AM,10/May/19 2:37 AM,12/Dec/08 4:43 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"Now that we removed the delegating ItemWriters for JPA and Hibernate, I think we should create some non-delegating ones.  They should check the persistence context for the existence of the item, and if it's not there do a merge or saveOrUpdate.",,;11/Dec/08 3:21 AM;thomas.risberg;240,;11/Dec/08 3:22 AM;thomas.risberg;14340,;11/Dec/08 3:22 AM;thomas.risberg;7200,;12/Dec/08 4:43 AM;thomas.risberg;3600,;15/Dec/08 2:15 AM;robert.kasanicky;1200,,,,,,,,,,28800,2220,26580,92%,28800,2220,26580,,,,,,,,,,,,BATCH-958,,,,,,,,,,,,,,328147200,,,,,2008-12-15 02:16:12.191,11692,true,robert.kasanicky(robert.kasanicky),,,,0|i03x7r:,22923,19389,,,,,11/Dec/08 3:20 AM;thomas.risberg;Also renaming the BatchSqlUpdateItemWriter to JdbcBatchItemWriter and adding support for named parameters. This means we can use a BeanPropertySqlParameterSource and avoid a custom PreparedStatemenSetter.,15/Dec/08 2:16 AM;robert.kasanicky;reviewed and closed,,,,,,,,,,,,,,,,,,,,,
Add fetchSize property to JdbcPagingItemReader,BATCH-964,25032,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,09/Dec/08 7:08 AM,12/Dec/08 4:40 AM,10/May/19 2:37 AM,12/Dec/08 4:40 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,The JdbcPagingItemReader could benefit from setting fetchSize to improve throughput.,,;09/Dec/08 8:21 AM;thomas.risberg;7200,;12/Dec/08 4:39 AM;thomas.risberg;3600,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,328579200,,,,,,11693,false,thomas.risberg(thomas.risberg),,,,0|i03x7z:,22924,19390,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExecutionContext modifications in ItemStream.close(ExecutionContext) are not persisted,BATCH-963,25021,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,08/Dec/08 8:31 PM,09/Dec/08 10:12 PM,10/May/19 2:37 AM,09/Dec/08 10:11 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"There is an issue with semantics - the close(..) method is typically used to release resources after step completion but can also be used to store values in execution context. In the first case  failure in close(..) shouldn't cause step failure, in the latter it should.

The easy way to go would be to document the behavior, or maybe we can simply remove the ExecutionContext method argument?",,;09/Dec/08 10:12 PM;robert.kasanicky;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328579200,,,,,2008-12-08 21:16:20.031,11694,true,robert.kasanicky(robert.kasanicky),,,,0|i03ovr:,21573,18064,,,,,08/Dec/08 9:16 PM;david_syer;I never liked the ExecutionContext in the close() method.  What are some examples of it being used?,"08/Dec/08 10:46 PM;robert.kasanicky;I don't think the EC argument has ever been used, at least not in our codebase.",09/Dec/08 9:40 PM;david_syer;Let's take the opportunity to nuke it then.,09/Dec/08 10:11 PM;robert.kasanicky;removed ExecutionContext argument from ItemStream.close() signature,,,,,,,,,,,,,,,,,,,
refactor TaskletStep's exception handling for better clarity,BATCH-962,25006,,Refactoring,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,08/Dec/08 1:32 AM,08/Dec/08 11:13 PM,10/May/19 2:37 AM,08/Dec/08 11:12 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,The way exceptions are handled and rethrown is quite confusing. E.g. the fatal exception holder seems to be redundant on closer inspection.,,;08/Dec/08 11:13 PM;robert.kasanicky;12600,,,,,,,,,,,,,,14400,1800,12600,87%,14400,1800,12600,,,BATCH-919,,,,,,,,,BATCH-950,,,,,,,,,,,,,,328665600,,,,,,11695,true,robert.kasanicky(robert.kasanicky),,,,0|i03x87:,22925,19391,,,,,08/Dec/08 11:12 PM;robert.kasanicky;cleaned up redundancies and streamlined the implementation,,,,,,,,,,,,,,,,,,,,,,
integration tests for JobOperator,BATCH-961,25005,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,07/Dec/08 10:50 PM,10/Dec/08 10:47 PM,10/May/19 2:37 AM,10/Dec/08 9:53 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,JobOperator is currenlty tested only using mocks which gives little confidence it really works,,;10/Dec/08 10:47 PM;robert.kasanicky;21600,,,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,BATCH-954,,,10/Dec/08 9:53 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14950/mylyn-context.zip,,,,,,,,,,,328492800,,,,,,11696,true,robert.kasanicky(robert.kasanicky),,,,0|i03x8f:,22926,19392,,,,,10/Dec/08 9:53 PM;robert.kasanicky;JobOperatorFunctionalTests added to samples,,,,,,,,,,,,,,,,,,,,,,
Redundant test cases in samples?,BATCH-960,25000,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,07/Dec/08 5:49 AM,27/Jan/09 6:58 AM,10/May/19 2:37 AM,27/Jan/09 6:58 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Samples,,,,,0,,Redundant test cases in samples?  There are some test cases in the (mis-named?) iosample package that only test classes in src/test/java.  Is this just a mistake?,,;27/Jan/09 6:57 AM;dhgarrette;900,,,,,,,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,324345600,,,,,2009-01-27 06:58:22.984,11697,true,dhgarrette(dhgarrette),,,,0|i01nzj:,9763,9793,,,,,27/Jan/09 6:58 AM;dhgarrette;Removed unnecessary test classes.,,,,,,,,,,,,,,,,,,,,,,
Batch Ibatis Update Item Writer,BATCH-958,24998,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,benshory,benshory,06/Dec/08 11:19 PM,12/Dec/08 4:42 AM,10/May/19 2:37 AM,12/Dec/08 4:42 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Infrastructure,,,,,0,,"it would be nice to have the same functionality of BatchSqlUpdateItemWriter 
for iBatis.

see - http://forum.springframework.org/showthread.php?t=53286&page=2",,;12/Dec/08 4:42 AM;thomas.risberg;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,06/Dec/08 11:19 PM;benshory;BatchIbatisUpdateItemWriter.java;https://jira.spring.io/secure/attachment/14939/BatchIbatisUpdateItemWriter.java,06/Dec/08 11:19 PM;benshory;ibatisJobWithWriter.xml;https://jira.spring.io/secure/attachment/14940/ibatisJobWithWriter.xml,,,,,,,,,,328838400,,,,,,11699,true,thomas.risberg(thomas.risberg),,,,0|i03x8n:,22927,19393,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optional dependencies included by default with new m3 pom,BATCH-957,24994,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,06/Dec/08 3:57 AM,13/Jan/09 12:03 AM,10/May/19 2:37 AM,12/Jan/09 9:27 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"Looks like most or all optional dependencies are now included by default

The dependency tree when including spring-batch-core for latest milestones:

M2:
[INFO] +- org.springframework.batch:spring-batch-core:jar:2.0.0.M2:compile
[INFO] |  +- org.springframework.batch:spring-batch-infrastructure:jar:2.0.0.M2:compile
[INFO] |  |  \- org.springframework.ws:spring-oxm:jar:1.0.4:compile
[INFO] |  |     \- org.springframework.ws:spring-xml:jar:1.0.4:compile
[INFO] |  +- com.thoughtworks.xstream:xstream:jar:1.3:compile
[INFO] |  |  \- xpp3:xpp3_min:jar:1.1.4c:compile
[INFO] |  +- org.codehaus.jettison:jettison:jar:1.0.1:compile
[INFO] |  |  \- stax:stax-api:jar:1.0.1:compile
[INFO] |  +- org.springframework:spring-aop:jar:2.5.5:compile
[INFO] |  |  \- aopalliance:aopalliance:jar:1.0:compile
[INFO] |  +- org.springframework:spring-beans:jar:2.5.5:compile
[INFO] |  +- org.springframework:spring-context:jar:2.5.5:compile
[INFO] |  \- org.springframework:spring-core:jar:2.5.5:compile


M3:
[INFO] +- org.springframework.batch:org.springframework.batch.core:jar:2.0.0.M3:compile
[INFO] |  +- org.springframework.batch:org.springframework.batch.infrastructure:jar:2.0.0.M3:compile
[INFO] |  |  +- net.sourceforge.cglib:com.springsource.net.sf.cglib:jar:2.1.3:compile
[INFO] |  |  +- javax.jms:com.springsource.javax.jms:jar:1.1.0:compile
[INFO] |  |  +- org.apache.commons:com.springsource.org.apache.commons.lang:jar:2.1.0:compile
[INFO] |  |  +- org.hibernate:com.springsource.org.hibernate:jar:3.2.6.ga:compile
[INFO] |  |  |  +- org.apache.commons:com.springsource.org.apache.commons.collections:jar:3.2.0:compile
[INFO] |  |  |  +- org.antlr:com.springsource.antlr:jar:2.7.6:compile
[INFO] |  |  |  +- org.jboss.javassist:com.springsource.javassist:jar:3.3.0.ga:compile
[INFO] |  |  |  \- org.dom4j:com.springsource.org.dom4j:jar:1.6.1:compile
[INFO] |  |  +- org.hibernate:com.springsource.org.hibernate.ejb:jar:3.3.2.GA:compile
[INFO] |  |  |  +- org.hibernate:com.springsource.org.hibernate.annotations.common:jar:3.3.0.ga:compile
[INFO] |  |  |  \- org.jboss.util:com.springsource.org.jboss.util:jar:2.0.4.GA:compile
[INFO] |  |  |     \- edu.oswego.cs.concurrent:com.springsource.edu.oswego.cs.dl.util.concurrent:jar:1.3.4:compile
[INFO] |  |  +- org.hibernate:com.springsource.org.hibernate.annotations:jar:3.3.1.ga:compile
[INFO] |  |  +- javax.transaction:com.springsource.javax.transaction:jar:1.1.0:compile
[INFO] |  |  +- org.apache.ibatis:com.springsource.com.ibatis:jar:2.3.0.677:compile
[INFO] |  |  |  \- org.apache.log4j:com.springsource.org.apache.log4j:jar:1.2.15:compile
[INFO] |  |  +- stax:stax:jar:1.2.0:compile
[INFO] |  |  |  \- stax:stax-api:jar:1.0.1:compile
[INFO] |  |  \- org.springframework.ws:org.springframework.oxm:jar:1.5.4.A:compile
[INFO] |  |     \- org.springframework.ws:org.springframework.xml:jar:1.5.4.A:compile
[INFO] |  |        \- org.apache.ws:com.springsource.org.apache.ws.commons.schema:jar:1.3.2:compile
[INFO] |  +- org.objectweb.asm:com.springsource.org.objectweb.asm.commons:jar:2.2.3:runtime
[INFO] |  |  \- org.objectweb.asm:com.springsource.org.objectweb.asm:jar:2.2.3:runtime
[INFO] |  +- org.aspectj:com.springsource.org.aspectj.runtime:jar:1.5.4:compile
[INFO] |  +- org.aspectj:com.springsource.org.aspectj.weaver:jar:1.5.4:compile
[INFO] |  +- com.thoughtworks.xstream:com.springsource.com.thoughtworks.xstream:jar:1.3.0:compile
[INFO] |  |  \- org.xmlpull:com.springsource.org.xmlpull:jar:1.1.3.4-O:compile
[INFO] |  +- org.codehaus.jettison:com.springsource.org.codehaus.jettison:jar:1.0.0:compile
[INFO] |  +- org.eclipse.osgi:org.eclipse.osgi:jar:3.4.2.R34x_v20080826-1230:compile
[INFO] |  +- org.springframework:org.springframework.aop:jar:2.5.6.A:compile
[INFO] |  |  \- org.aopalliance:com.springsource.org.aopalliance:jar:1.0.0:compile
[INFO] |  +- org.springframework:org.springframework.beans:jar:2.5.6.A:compile
[INFO] |  +- org.springframework:org.springframework.context:jar:2.5.6.A:compile
[INFO] |  +- org.springframework.osgi:org.springframework.osgi.core:jar:1.1.2.A:compile
[INFO] |  |  \- org.springframework.osgi:org.springframework.osgi.io:jar:1.1.2.A:compile
[INFO] |  \- org.springframework:org.springframework.transaction:jar:2.5.6.A:compile

",,;12/Jan/09 9:27 PM;david_syer;1800,,,,,,,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,328838400,,,,,2008-12-06 05:27:09.558,11700,false,thomas.risberg(thomas.risberg),,,,0|i03x8v:,22928,19394,,,,,06/Dec/08 5:27 AM;david_syer;Is this still the case in trunk?  I fixed a bunch of these the other day (so after M3).,,,,,,,,,,,,,,,,,,,,,,
Remove pause and wait functionality,BATCH-956,24993,,Refactoring,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,06/Dec/08 12:04 AM,06/Dec/08 12:05 AM,10/May/19 2:37 AM,06/Dec/08 12:05 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,Remove pause and wait functionality.  It isn't really used.  Might be useful in a future release so the use case can live.,,;06/Dec/08 12:05 AM;david_syer;7200,,,,,,,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,328924800,,,,,,11701,false,david_syer(david_syer),,,,0|i03oxj:,21581,18074,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update XML schema to be tooling friendly,BATCH-955,24982,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,05/Dec/08 12:01 AM,11/Feb/09 12:42 AM,10/May/19 2:37 AM,11/Feb/09 12:42 AM,2.0.0.M3,,,,,,2.0.0.RC1,,,Core,,,,,0,,,,;12/Dec/08 4:38 AM;thomas.risberg;14400,,,,,,,,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,323136000,,,,,2009-02-10 09:25:18.826,11702,false,thomas.risberg(thomas.risberg),,,,0|i03ov3:,21570,18061,,,,,"10/Feb/09 9:25 AM;lucas.l.ward;Thomas, I thought this had all be completed as part of the refactoring of the parsers?  Is there still something left on this?",11/Feb/09 12:42 AM;thomas.risberg;Dave took care if this so I'm closing this issue.,,,,,,,,,,,,,,,,,,,,,
Failure on job stop,BATCH-954,24981,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,edouard,edouard,04/Dec/08 11:55 PM,07/Dec/08 11:41 PM,10/May/19 2:37 AM,07/Dec/08 10:52 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"Try to stop a job with SimpleJobOperator through JMX.

A OptimisticLockingFailureException is thrown because the jobExecution version doesn't match with persisted one.

Bug origin :
When the JobExecution status is synchronized, the version is not updated.",,;07/Dec/08 10:52 PM;robert.kasanicky;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,328752000,,,,,2008-12-07 22:52:01.947,11703,true,robert.kasanicky(robert.kasanicky),,,,0|i03x93:,22929,19395,,,,,07/Dec/08 10:52 PM;robert.kasanicky;Added version check before synchronizing JobExecution.status. If versions do not match both status and version are synchronized.,07/Dec/08 11:01 PM;david_syer;What's the reason for the mismatch?  Isn't it dangerous to just ignore it and synchronize?,"07/Dec/08 11:40 PM;robert.kasanicky;JobOperator works with its own copy of JobExecution therefore the version mismatch between job's and jobOperators' version is inevitable. This issue fixed the obvious problem (when jobOperator updates the status, job's version becomes obsolete), but I think there can still be trouble with race conditions. I want to take a closer look at this in BATCH-961",,,,,,,,,,,,,,,,,,,,
StagingItemReader is not restartable,BATCH-952,24957,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,02/Dec/08 9:00 PM,15/Jan/09 3:25 AM,10/May/19 2:37 AM,14/Jan/09 10:26 PM,2.0.0.M3,,,,,,2.0.0.M4,,,Samples,,,,,0,,"StagingItemReader is not restartable because it updates the process indicator in the read() method, which is only ever called once per item (used to be once per item per transaction in 1.x).  I'm not sure the best way to fix this.  The reader knows the id of the record to be updated, but that information is lost further downstream in the processing pipeline.  Maybe it's time to get serious about ChunkContext or @ChunkAttribute (see BATCH-920)?

It would be a good time to replace the innards of StagingItemReader anyway - it can delegate most of its stateful behaviour to an off the shelf JDBC ItemReader.",,;14/Jan/09 10:27 PM;robert.kasanicky;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,14/Jan/09 10:26 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/15046/mylyn-context.zip,,,,,,,,,,,325468800,,,,,2009-01-14 22:26:41.214,11705,true,david_syer(david_syer),,,,0|i01o07:,9766,9796,,,,,"14/Jan/09 10:26 PM;robert.kasanicky;Introduced ProcessIndicatorItemWrapper (includes the id) and StagingItemProcessor (marks processed inputs) to achieve restartability for parallelJob.

I'm not sure the StagingItemReader can easily delegate to an off-the shelf JDBC reader, maybe if we decided to keep the DrivingQueryItemReader after all? Anyway a potential revamp will be addressed better in a separate issue.",,,,,,,,,,,,,,,,,,,,,,
MapJobInstanceDao.getLastJobInstances doesn't return the last job instance ,BATCH-951,24950,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,artfh,artfh,02/Dec/08 3:36 AM,04/Dec/08 7:48 AM,10/May/19 2:37 AM,04/Dec/08 7:48 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,Wrong order of job instances in MapJobInstanceDao.getLastJobInstances. MapJobInstanceDao.getLastJobInstances returns always  'old' job instances.,,;04/Dec/08 7:48 AM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,02/Dec/08 3:36 AM;artfh;MapJobInstanceDao.diff;https://jira.spring.io/secure/attachment/14928/MapJobInstanceDao.diff,,,,,,,,,,,329011200,,,,,2008-12-04 07:48:17.518,11706,true,robert.kasanicky(robert.kasanicky),,,,0|i03x9b:,22930,19396,,,,,04/Dec/08 7:48 AM;robert.kasanicky;reverted returned list ordering and added test,,,,,,,,,,,,,,,,,,,,,,
Exception during rollback hides root cause,BATCH-950,24948,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,edalquist,edalquist,02/Dec/08 2:06 AM,08/Dec/08 2:22 AM,10/May/19 2:37 AM,08/Dec/08 1:34 AM,1.1.3,2.0.0.M3,,,,,1.1.4,2.0.0.M4,,Core,,,,,0,,"If an exception is thrown while processing a rollback the root exception fails to be logged.

In ItemOrientedStep it catches Exception then calls processRollback but if processRollback throws an exception the original cause is never even logged, making it very difficult to track down the root cause of the exception. Perhaps changing the code from:

catch (Exception e) {
	processRollback(stepExecution, contribution, fatalException, transaction);
	throw e;
}

to:

catch (Exception e) {
    try {
    	processRollback(stepExecution, contribution, fatalException, transaction);
    	throw e;
    }
    catch (Exception rollbackException) {
        logger.error(""Exception thrown during processRollback will be propegated, exception that caused the rollback follows"", e);
        throw rollbackException;
    }
}

An example stack trace for this problem is:
org.springframework.batch.core.step.AbstractStep$FatalException: Failed while processing rollback
        at org.springframework.batch.core.step.item.ItemOrientedStep.processRollback(ItemOrientedStep.java:428)
        at org.springframework.batch.core.step.item.ItemOrientedStep.access$1000(ItemOrientedStep.java:68)
        at org.springframework.batch.core.step.item.ItemOrientedStep$1.doInIteration(ItemOrientedStep.java:347)
        at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:346)
        at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:212)
        at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:143)
        at org.springframework.batch.core.step.item.ItemOrientedStep.doExecute(ItemOrientedStep.java:231)
        at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:172)
        at org.springframework.batch.core.job.SimpleJob.execute(SimpleJob.java:100)
        at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:86)
        at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)
        at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:81)
        at org.jasig.portal.stats.quartz.JobLauncherDetails.executeInternal(JobLauncherDetails.java:71)
        at org.springframework.scheduling.quartz.QuartzJobBean.execute(QuartzJobBean.java:86)
        at org.quartz.core.JobRunShell.run(JobRunShell.java:203)
        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:520)
Caused by: org.springframework.transaction.TransactionSystemException: Could not roll back JDBC transaction; nested exception is java.sql.SQLException: Protocol violation
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:279)
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:800)
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:777)
        at org.springframework.batch.core.step.item.ItemOrientedStep.processRollback(ItemOrientedStep.java:419)
        ... 15 more
Caused by: java.sql.SQLException: Protocol violation
        at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:70)
        at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:110)
        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:171)
        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:227)
        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:439)
        at oracle.jdbc.driver.T4C7Ocommoncall.receive(T4C7Ocommoncall.java:130)
        at oracle.jdbc.driver.T4CConnection.doRollback(T4CConnection.java:613)
        at oracle.jdbc.driver.PhysicalConnection.rollback(PhysicalConnection.java:3389)
        at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:328)
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.rollback(PoolingDataSource.java:312)
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:276)
        ... 18 more",,;08/Dec/08 1:35 AM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,328752000,,,,,2008-12-08 01:34:53.63,11707,true,edalquist(edalquist),,,,0|i03x9j:,22931,19397,,,,,08/Dec/08 1:34 AM;robert.kasanicky;Logged original exception if rollback fails as suggested. Thanks for the report.,08/Dec/08 2:22 AM;edalquist;Great! Thanks for the quick fix. Is there a nightly snapshot build of 1.1.4 that I could try out locally?,,,,,,,,,,,,,,,,,,,,,
"JdbcCursorItemReader: property name for ""mapper""?",BATCH-949,24941,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,david_syer,david_syer,01/Dec/08 11:06 PM,16/Feb/09 12:24 AM,10/May/19 2:37 AM,16/Feb/09 12:24 AM,,,,,,,2.0.0.RC1,,,Infrastructure,,,,,0,,"JdbcCursorItemReader: property name for ""mapper"":  shouldn't it be ""rowMapper""?",,;16/Feb/09 12:23 AM;thomas.risberg;1200,,,,,,,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,329270400,,,,,,11708,false,thomas.risberg(thomas.risberg),,,,0|i03x9r:,22932,19398,,,,,,,,,,,,,,,,,,,,,,,,,,,
MapJobInstanceDao.getLastJobInstances ignores jobName parameter,BATCH-948,24924,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,artfh,artfh,01/Dec/08 12:37 AM,01/Dec/08 3:19 AM,10/May/19 2:37 AM,01/Dec/08 3:19 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"MapJobInstanceDao.getLastJobInstances ignores jobName parameter and returns  JobInstances for all jobs. 

",,;01/Dec/08 3:19 AM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,01/Dec/08 12:37 AM;artfh;fix.diff;https://jira.spring.io/secure/attachment/14923/fix.diff,,,,,,,,,,,329270400,,,,,2008-12-01 03:19:36.149,11709,true,robert.kasanicky(robert.kasanicky),,,,0|i03x9z:,22933,19399,,,,,"01/Dec/08 3:19 AM;robert.kasanicky;Fixed, thanks for the report.",,,,,,,,,,,,,,,,,,,,,,
NullPointerException in MapStepExecutionDao.getStepExecutions,BATCH-946,24910,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,artfh,artfh,27/Nov/08 3:57 AM,28/Nov/08 12:06 AM,10/May/19 2:37 AM,28/Nov/08 12:06 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,," MapStepExecutionDao throws a NullPointerException for jobs whitout steps. For example
Job job1 = new Job() {
	public void execute(JobExecution arg0) {
		System.err.println(""execute!"");
	}
..
}
I get the following exception while running a job:
java.lang.NullPointerException
	at org.springframework.batch.core.repository.dao.MapStepExecutionDao.getStepExecutions(MapStepExecutionDao.java:101)
	at org.springframework.batch.core.explore.support.SimpleJobExplorer.getJobExecutionDependencies(SimpleJobExplorer.java:127)
	at org.springframework.batch.core.explore.support.SimpleJobExplorer.findJobExecutions(SimpleJobExplorer.java:73)
	at StartupTest.testMe(StartupTest.java:72)

The solution is:
	public List<StepExecution> getStepExecutions(JobExecution jobExecution) {
 		Map<String, StepExecution> executions = executionsByJobExecutionId.get(jobExecution.getId());
+		if (executions == null) {
+			return null;
+		}
 		List<StepExecution> result = new ArrayList<StepExecution>(executions.values());
",,;28/Nov/08 12:06 AM;robert.kasanicky;1200,,,,,,,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,329616000,,,,,2008-11-28 00:06:21.526,11711,true,robert.kasanicky(robert.kasanicky),,,,0|i03xa7:,22934,19400,,,,,28/Nov/08 12:06 AM;robert.kasanicky;empty list returned if no stepExecutions are found,,,,,,,,,,,,,,,,,,,,,,
Make step scope work with aop-auto-proxy,BATCH-939,24856,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,david_syer,david_syer,23/Nov/08 6:04 PM,23/Nov/08 6:05 PM,10/May/19 2:37 AM,23/Nov/08 6:04 PM,2.0.0.M3,,,,,,2.0.0.M3,,,Core,,,,,0,,,,;23/Nov/08 6:04 PM;david_syer;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,329961600,,,,,,11718,false,david_syer(david_syer),,,,0|i03o2v:,21443,17967,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean up DelimitedLineAggregator implementation,BATCH-938,24832,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,dhgarrette,dhgarrette,21/Nov/08 1:52 AM,23/Nov/08 7:24 PM,10/May/19 2:37 AM,23/Nov/08 7:23 PM,2.0.0.M3,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"The implementation of the DelimitedLineAggregator should be modified to follow the pattern used by FormatterLineAggregator.  The FormatterLineAggregator has a FieldExtractor as a property.  When aggregate() is called, the given item is passed to the extractor, and the array resulting from the extractor is then formatted.  Similarly, the DelimitedLineAggregator should have a FieldExtractor property so that it can extract fields before making the delimited string.",,Created patch.;21/Nov/08 2:58 AM;dhgarrette;1800,;23/Nov/08 7:24 PM;robert.kasanicky;900,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,,,,21/Nov/08 2:55 AM;dhgarrette;ExtractorLineAggregator.patch;https://jira.spring.io/secure/attachment/14889/ExtractorLineAggregator.patch,,,,,,,,,,,329961600,,,,,2008-11-23 19:23:55.544,11719,true,robert.kasanicky(robert.kasanicky),,,,0|i03xb3:,22938,19404,,,,,"21/Nov/08 2:55 AM;dhgarrette;Patch created.  FormatterLineAggregator and DelimitedLineAggregator now inherit from the abstract ExtractorLineAggregator, which has a FieldExtractor as a property.",21/Nov/08 3:16 AM;dhgarrette;Assigning to Robert to commit the patch.,23/Nov/08 7:23 PM;robert.kasanicky;applied patch,,,,,,,,,,,,,,,,,,,,
Use NumberFormat when parsing real numbers ,BATCH-935,24823,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,nedge,nedge,20/Nov/08 6:43 PM,28/Feb/09 12:09 AM,10/May/19 2:37 AM,28/Feb/09 12:00 AM,2.0.0.M2,,,,,,2.0.0.RC2,,,Core,,,,,0,,"http://forum.springframework.org/showthread.php?p=213541
Here the original post again
Hi,
I have a few problems parsing real world input files (from the finance world)
I'm using the classes org.springframework.batch.item.file.FlatFileItemRe ader and org.springframework.batch.item.file.transform.Fixe dLengthTokenizer
One problem is parsing German double values e.g. 5,00000 (is in en_US 5.00000) There is no way of parsing such a double using the standard FieldSet api. I ended up using a NumberFromat to parse the double. I'm not sure if you shouldn't use this approach as Double.parseDouble always expects the input in standard format disregarding the locale
The DefaultFieldSet uses readAndTrim everywhere and doesn't cope with with white space e.g. empty values. A char of ' ' results in an error. I think the api should let a user configure white space or there needs to be some other solution
Is there any clean solution to this or has anyone else encountered these problems? I could of course implement my own FieldSet with this specific functionality but I think my requirements are pretty general
",,;28/Feb/09 12:01 AM;david_syer;3600,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,28/Feb/09 12:00 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/15168/mylyn-context.zip,,,,,,,,,,,321667200,,,,,2009-02-28 00:00:28.791,11721,false,david_syer(david_syer),,,,0|i03xbb:,22939,19405,,,,,28/Feb/09 12:00 AM;david_syer;Added FieldSetFactory abstraction and injection point in AbstractLineTokenizer.  The default implementation allows the number and date formats to be injected.,28/Feb/09 12:09 AM;david_syer;P.S. if trimming is a problem with number formatting you can supply a default value to the FielSet to use if parsing fails (this was always the case).,,,,,,,,,,,,,,,,,,,,,
FlatFileItemWriter.clear does not reset OutputState,BATCH-934,24816,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Won't Fix,robert.kasanicky,robert.kasanicky,robert.kasanicky,19/Nov/08 11:35 PM,20/Nov/08 4:04 AM,10/May/19 2:37 AM,20/Nov/08 4:04 AM,1.1.3,,,,,,1.1.4,,,Infrastructure,,,,,0,,"Pasted from http://forum.springframework.org/showthread.php?t=63720

Looking through FlatFileItemWriter (FFIW) code, I found out that the clear() method does not invoke reset() on OutputState, and I'm wondering if this is a bug or not.

The FFIW buffers the lines until it comes to flush(), where all lines are actually written to the file. If an IOException occurs during flush() -after some lines were already written to the file- , the clear() method is invoked, that only clears the buffer of lines.

Shouldn't the FFIW.clear() method also invoke reset() on OutputState, so that the lines that were already written by the flush() are removed, and the file is in the exact state it was before flush() ? This would allow some kind of transactional behaviour.",,;20/Nov/08 3:55 AM;robert.kasanicky;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,330220800,,,,,,5810,true,robert.kasanicky(robert.kasanicky),,,,0|i02jcn:,14844,14148,,,,,"20/Nov/08 4:03 AM;robert.kasanicky;Flush() can only fail due to IOException, so trying to truncate the already problematic file would just cause even more trouble I think. Truncating the output file on restart is already supported so I think things are ok the way they are.",20/Nov/08 4:04 AM;robert.kasanicky;closed with wrong status,,,,,,,,,,,,,,,,,,,,,
AssertFile class for checking equality of files in unit tests,BATCH-933,24814,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,dhgarrette,dhgarrette,19/Nov/08 2:19 PM,01/Feb/09 3:07 AM,10/May/19 2:37 AM,21/Nov/08 1:30 AM,2.0.0.M2,,,,,,2.0.0.M3,,,Test,,,,,0,,The AssertFile class contains a static method assertFileEquals() that checks whether two files contain the same data.  The method checks the files line by line so that exceptions raised can indicate which line contained the discrepancy.,,;21/Nov/08 1:30 AM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,19/Nov/08 2:19 PM;dhgarrette;AssertFile.patch;https://jira.spring.io/secure/attachment/14883/AssertFile.patch,,,,,,,,,,,330220800,,,,,2008-11-21 00:25:37.117,11722,true,dhgarrette(dhgarrette),,,,0|i03xbj:,22940,19406,,,,,"21/Nov/08 12:25 AM;robert.kasanicky;I'm not sure where to put this in SB codebase... logically it would belong in junit or spring-test. If we put it into src/test somewhere, then we'd need to keep a copy for every maven module. It's also strange to have a test class that itself has tests.","21/Nov/08 1:13 AM;lucas.l.ward;Robert,

I'm a little confused, it's not a test class.  It's a class to help your write tests.  It seems pretty straightforward to me, it should be in spring-batch-test, in src/main, so that someone could easily add the jar to their project and use it to help them compare files.  It's the same concept as XMLUnit (albeit less complex)","21/Nov/08 1:30 AM;robert.kasanicky;Yes, spring-batch-test is the right place, I got somewhat confused at first. Patch applied.",,,,,,,,,,,,,,,,,,,,
Add reflection-based Field Extractor,BATCH-932,24811,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,dhgarrette,dhgarrette,19/Nov/08 6:19 AM,21/Nov/08 1:58 AM,10/May/19 2:37 AM,21/Nov/08 1:58 AM,2.0.0.M3,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"The FormatterLineAggregator has a FieldExtractor as a property.  The FieldExtractor's job is to convert an object into an array of Objects.  Similar to the situation of a FieldSetMapper, configuring FieldExtractors for domain objects can be simpler than writing custom FieldExtractor classes by hand.

I have created a class BeanFieldExtractor that uses reflection to extract property values from a bean object and place those values in an array to return.  The extractor has a property ""names"" that is a list of Strings for the (ordered) names of properties that should be retrieved.

The BeanFieldExtractor is used as follows.  In this example a Trade object will be passed to the aggregator.

	<bean class=""org.springframework.batch.item.file.transform.FormatterLineAggregator"">
		<property name=""fieldExtractor"">
			<bean class=""org.springframework.batch.sample.ioSample.internal.BeanFieldExtractor"">
				<property name=""names"" value=""isin,quantity,price,customer""/>
			</bean>
		</property>
		<property name=""format"" value=""%-12s%-3d%6s%-9s""/>
	</bean>
",,;21/Nov/08 12:17 AM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,19/Nov/08 6:43 AM;dhgarrette;BeanDelimitingLineAggregator.java;https://jira.spring.io/secure/attachment/14880/BeanDelimitingLineAggregator.java,19/Nov/08 6:43 AM;dhgarrette;BeanDelimitingLineAggregatorTests.java;https://jira.spring.io/secure/attachment/14881/BeanDelimitingLineAggregatorTests.java,19/Nov/08 6:19 AM;dhgarrette;BeanFieldExtractor.java;https://jira.spring.io/secure/attachment/14878/BeanFieldExtractor.java,19/Nov/08 6:19 AM;dhgarrette;BeanFieldExtractorTests.java;https://jira.spring.io/secure/attachment/14879/BeanFieldExtractorTests.java,20/Nov/08 2:39 AM;dhgarrette;BeanWrapperFieldExtractor.patch;https://jira.spring.io/secure/attachment/14885/BeanWrapperFieldExtractor.patch,,,,,,,330220800,,,,,2008-11-20 01:25:19.071,11723,true,robert.kasanicky(robert.kasanicky),,,,0|i03xbr:,22941,19407,,,,,"19/Nov/08 6:43 AM;dhgarrette;BeanDelimitingLineAggregator is a LineAggregator for delimited files that uses the BeanFieldExtractor.  It must be configured with an (ordered) array of ""names"" for the properties of the bean that should be aggregated.  The aggregator will use the extractor to retrieve an array of Objects from the a given bean, and then return a delimited string based on those Objects.

The following shows the configuration:

	<bean class=""org.springframework.batch.sample.ioSample.internal.BeanDelimitingLineAggregator"">
	    <property name=""delimiter"" value="",""/>
	    <property name=""names"" value=""isin,quantity,price,customer""/>
	</bean>
",20/Nov/08 1:25 AM;david_syer;Thanks Dan.  Please don't use UpperCase in package names.,20/Nov/08 2:39 AM;dhgarrette;A patch has been created for the infrastructure project containing the changes.,"21/Nov/08 12:16 AM;robert.kasanicky;I've applied the patch with some minor tweaks.

What made me wonder while browsing related classes is the ""public class DelimitedLineAggregator<T> implements LineAggregator<T[]>"". Do we really need this? It doesn't do much and we already have an aggregator for collections. I suppose it is a rare case that the item is actually an array of items?",21/Nov/08 1:58 AM;robert.kasanicky;Follow up regarding the DelimitedLineAggregator is BATCH-938,,,,,,,,,,,,,,,,,,
Write failures don't fail immediately.,BATCH-931,24808,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,19/Nov/08 2:48 AM,20/Nov/08 8:29 PM,10/May/19 2:37 AM,20/Nov/08 8:29 PM,2.0.0.M2,,,,,,2.0.0.M3,,,Core,,,,,0,,"When using the FaultTolerantStepFactoryBean, without configuring any exception lists, an exception thrown in the writer will cause failure.  However, it appears to be trying to determine which item failed before actually failing, which is somewhat confusing.",,;20/Nov/08 8:22 PM;robert.kasanicky;3600,,,,,,,,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,330220800,,,,,2008-11-20 01:23:40.471,11724,true,robert.kasanicky(robert.kasanicky),,,,0|i03xbz:,22942,19408,,,,,"20/Nov/08 1:23 AM;david_syer;It has to do that to honour the SkipListener contract, which is why there is a zoom in on the failed item.  But I think you are right that if we aren't going to skip we can fail immediately.  The logic needs to go in the RecoveryCallback.","20/Nov/08 1:34 AM;robert.kasanicky;RecoveryCallback implementation can be made smarter, but it typically gets called only when chunk is re-processed. So the failure still won't be immediate as intuitively expected.",20/Nov/08 5:39 PM;david_syer;I think that's the way it's going to have to be for now.,20/Nov/08 8:21 PM;robert.kasanicky;Tweaked the write's RecoveryCallback to rethrow a non-skippable exception immediately.,20/Nov/08 8:29 PM;robert.kasanicky;The unnecessary failed item identification has been fixed and follow up BATCH-936 created.,,,,,,,,,,,,,,,,,,
rename ItemSkipPolicy,BATCH-930,24804,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,19/Nov/08 12:40 AM,19/Nov/08 11:28 PM,10/May/19 2:37 AM,19/Nov/08 11:28 PM,,,,,,,2.0.0.M3,,,Core,,,,,0,,"The signature ""boolean shouldSkip(Throwable t, int skipCount) throws SkipLimitExceededException"" has nothing to do with item. Simply ""SkipPolicy"" is fine I think.
",,;19/Nov/08 11:27 PM;robert.kasanicky;900,,,,,,,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,330307200,,,,,,5811,true,robert.kasanicky(robert.kasanicky),,,,0|i02jcv:,14845,14149,,,,,19/Nov/08 11:28 PM;robert.kasanicky;renamed to ItemSkipPolicy to SkipPolicy,,,,,,,,,,,,,,,,,,,,,,
Deferrable Constraints cause unrecoverable errors,BATCH-929,24795,25319,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,lucas.l.ward,lucas.l.ward,18/Nov/08 8:43 AM,03/Jan/10 7:32 PM,10/May/19 2:37 AM,03/Jan/10 7:32 PM,2.0.0.M2,,,,,,2.1.0.RC1,,,Core,,,,,0,,"As described in the following forum post:

http://forum.springframework.org/showthread.php?t=63628

Setting deferrable constraints on tables will cause failures when the transaction is committed, rather than when the sql statements are executed if the constraint is violated.  As far as I can tell, this is an Oracle only feature that was introduce in 8i.  I'm not sure how far we want to take this, but it likely means that we can't necessarily view all commit failures as cataclysmic.  In fact, we may even want to provide the possibility of setting them as skippable, although this also highlights the issues with how skip policies are applied at multiple levels, along with the lists that configure them.  At a minimum, we probably can't assume the status should be unknown in a commit failure unless it's a particular type of exception that might indicate a massive failure.

Furthermore, if we do allow for errors on commit to now be fatal, we'll also need a way to rollback ExecutionContext changes.  The best way to do this is probably to pull back the last known good values from the database.",,;19/Nov/08 11:13 PM;robert.kasanicky;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,294883200,,,,,2008-11-18 18:09:34.506,11725,false,david_syer(david_syer),,,,0|i03xc7:,22943,19409,,,,,"18/Nov/08 6:09 PM;david_syer;We need to check for HeuristicCompletionException as well - a failed commit can easily turn out to be a plain rollback if you look at the exception carefully.  Maybe the deferred constraint can be detected this way as well, but I doubt it.","19/Nov/08 11:13 PM;robert.kasanicky;It's feasible to add a skip policy to handle commit errors and avoid failing the step with UNKNOWN status, but the question is how to actually skip the cause of the trouble (avoid failing commit loop). The idea what to do is simple I think - switch to commit interval == 1for the items of the failed chunk, but that requires rewrite of TaskletStep (unless I'm missing something).",20/Nov/08 1:16 AM;david_syer;I think you have to either fail the job or skip the whole chunk in this case.  Is that more feasible?  At least on failure there will not be an UNKNOWN status and a restart will be possible.,"07/Dec/09 7:39 AM;david_syer;I think this probably works just fine in 2.1 since commit failures are treated a lot more gracefully by a transaction template, but I guess someone should confirm.",03/Jan/10 7:32 PM;david_syer;Added test to core-tests and checked with Postgres.  Looks OK in 2.1.,,,,,,,,,,,,,,,,,,
vague skip limit for concurrent chunks,BATCH-926,24733,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,13/Nov/08 12:54 AM,20/Nov/08 6:20 PM,10/May/19 2:37 AM,17/Nov/08 8:09 PM,1.1.3,,,,,,1.1.4,2.0.0.M3,,Core,,,,,0,,When chunks execute concurrently each chunk works with its own local copy of skipCount (from StepContribution). Given skipLimit=1 and 10 chunks execute concurrenlty we can end up with successful job execution and 10 skips. As the number of concurrent chunks increases the skipLimit becomes more a limit per chunk rather than job.,,;17/Nov/08 8:10 PM;robert.kasanicky;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,330480000,,,,,2008-11-14 03:01:37.709,11727,true,david_syer(david_syer),,,,0|i03unb:,22507,18962,,,,,"13/Nov/08 11:21 PM;robert.kasanicky;There seem to be 2 ways to go:
1. Document the current behavior properly and consider it a feature rather than bug
2. Try to fix it - one approach could be to check skip counts when StepContribution is applied to StepExecution (and rollback if the limit has been exceeded). This would probably require significant redesign of the implementation.",14/Nov/08 3:01 AM;david_syer;I vote for documenting the current behaviour.,17/Nov/08 8:09 PM;robert.kasanicky;documented current behavior in the factory bean,,,,,,,,,,,,,,,,,,,,
StaxEventItemWriter doesn't reset restart flag on close,BATCH-925,24729,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,robert.kasanicky,robert.kasanicky,12/Nov/08 8:23 PM,12/Nov/08 10:36 PM,10/May/19 2:37 AM,12/Nov/08 10:35 PM,1.1.3,2.0.0.M2,,,,,1.1.4,2.0.0.M3,,Infrastructure,,,,,0,,"When SEIW is restarted, closed and opened with blank execution context it still assumes restart. The issue is a boolean instance variable that is not reset on close. The fix is to remove the instance variable altogether as it is only relevant in the scope of open(..) method.",,;12/Nov/08 10:36 PM;robert.kasanicky;1200,,,,,,,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,330912000,,,,,,11728,true,robert.kasanicky(robert.kasanicky),,,,0|i03xcn:,22945,19411,,,,,12/Nov/08 8:24 PM;robert.kasanicky;This got already fixed in trunk as a part of BATCH-34,12/Nov/08 10:35 PM;robert.kasanicky;used local variable instead of attribute,,,,,,,,,,,,,,,,,,,,,
ExecutionContext keys are not unique enough in partition components,BATCH-921,24703,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,11/Nov/08 9:38 PM,12/Nov/08 5:23 PM,10/May/19 2:37 AM,12/Nov/08 12:40 AM,2.0.0.M3,,,,,,2.0.0.M3,,,Core,,,,,0,,ExecutionContext keys are not unique enough.  I thought we used to prepend the class name or something?,,;12/Nov/08 12:41 AM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,330998400,,,,,2008-11-11 21:49:45.018,11731,true,david_syer(david_syer),,,,0|i03xdb:,22948,19414,,,,,11/Nov/08 9:49 PM;robert.kasanicky;We do prepend the class name (unless there's a bug) and allow to given names to ItemStreams so that two instances of the same class can be distinguished. Which reader/writer is having issues (I suppose most work ok)?,11/Nov/08 9:56 PM;david_syer;It's not in infrastructure (so not readers and writers).  It's somewhere in org.springframework.batch.core.partition.,"12/Nov/08 12:01 AM;robert.kasanicky;All I found in the partition package is the SimpleStepExecutionSplitter putting in value for ""GRID_SIZE"", so I can make it ""SimpleStepExecutionSplitter.GRID_SIZE"". Is this the problem or is there more to it?",12/Nov/08 12:40 AM;robert.kasanicky;prefixed GRID_SIZE key with SimpleStepExecutionSplitter,,,,,,,,,,,,,,,,,,,
Clean up FaultTolerant*,BATCH-919,24684,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,10/Nov/08 11:23 PM,30/Dec/08 2:40 AM,10/May/19 2:37 AM,30/Dec/08 2:40 AM,2.0.0.M3,,,,,,2.0.0.M4,,,Core,,,,,0,,"Clean up FaultTolerant*.  It's ugly and not very well encapsulated, e.g. Chunk isn't being used at all, and retry and skip rely on Object.equals() being stable across a write.",,;09/Dec/08 11:30 PM;david_syer;57600,,,,,,,,,,,,,,57600,7200,57600,100%,72000,21600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,331084800,,,,,,11733,false,david_syer(david_syer),,,,0|i03xdr:,22950,19416,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent modification of execution context in tasklet step,BATCH-917,24676,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,10/Nov/08 6:22 PM,14/Nov/08 3:03 AM,10/May/19 2:37 AM,13/Nov/08 6:40 PM,,,,,,,2.0.0.M3,,,Core,,,,,0,,"Concurrent modification of execution context in tasklet step.  http://forum.springframework.org/showthread.php?t=63162.

The tasklet step is making a false assumption about execution context updates (it just clears the dirty flag once per chunk, but there is no reason chunks need to be serial).",,;11/Nov/08 12:09 AM;robert.kasanicky;3600,;13/Nov/08 6:41 PM;robert.kasanicky;3600,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330825600,,,,,2008-11-10 23:48:24.146,11735,true,david_syer(david_syer),,,,0|i03xdz:,22951,19417,,,,,10/Nov/08 6:52 PM;david_syer;Added a unit test (with commented out assertion): AsyncTaskletStepTests.,"10/Nov/08 11:48 PM;robert.kasanicky;Do we need to enforce EC updates don't happen outside ItemStream.update(..) at all? Maybe just saying ""don't do it unless you know what you're doing"" is fine? If so we can just remove the dirty checking in TaskletStep (I don't see what else we can do anyway).",12/Nov/08 12:42 AM;robert.kasanicky;Removed the dirty checking from TaskletStep and enabled the asynchronous testcase as first step.,12/Nov/08 1:21 AM;robert.kasanicky;I'm wondering about the idea of providing a separate copy of EC for each chunk we discussed. The problem is I'm struggling to find a usecase for using EC in concurrent chunks scenario at all. It seems if you want to store anything meaningful for restart in the EC the chunks will need to synchronize to produce a well-defined result anyway. And if they do so there's no need for separate EC copies I think?,"13/Nov/08 6:40 PM;robert.kasanicky;As discussed, EC backed by synchronized map should be all we need at the moment.",,,,,,,,,,,,,,,,,,
Introduce JobContribution by analogy with StepContribution,BATCH-914,24660,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Won't Fix,robert.kasanicky,david_syer,david_syer,09/Nov/08 8:19 PM,28/Nov/08 12:07 AM,10/May/19 2:37 AM,17/Nov/08 9:56 PM,,,,,,,2.0.0.M4,,,Core,,,,,0,,"Introduce JobContribution by analogy with StepContribution.  Now that multiple threads can update a JobExecution, the same treatment is needed as in the StepExecution case.",,;13/Nov/08 11:16 PM;robert.kasanicky;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330480000,,,,,2008-11-13 00:26:19.17,5814,true,robert.kasanicky(robert.kasanicky),,,,0|i02jdj:,14848,14152,,,,,13/Nov/08 12:26 AM;robert.kasanicky;Do we really need JobContribution? JobExecution doesn't have fields that are expected to be modified from multiple threads (no skip or item counts). All I can think of are concurrent updates of execution context and that's handled by the backing ConcurrentHashMap. Or maybe I'm missing something about the whole multi-threaded usecase (see also BATCH-917)?,"13/Nov/08 11:15 PM;robert.kasanicky;As discussed JobContribution is not necessary, we just need to make sure updates to JobExecution status are synchronized. Analysing the updates I've added synchronized blocks to PauseState and EndState to avoid low-level race conditions.

However the very possibility of concurrent updates of job status seems fishy to me. We don't really want non-deterministic job flows, do we? The BatchStatus ordering helps to some extent, but it seems very easy for things to go wrong. Having a single thread of control that handles the job state would be much easier to reason about and eventually implement correctly I guess.","14/Nov/08 3:05 AM;david_syer;Agreed.  So the PauseState and EndState should (eventually) be re-implemented to send a message back to the job to update its own execution, instead of updating themselves.  Re-opened and postponed beyond 2.0.",17/Nov/08 9:56 PM;robert.kasanicky;Created follow-up issue BATCH-928 and closing this one as won't fix (according to original issue description).,,,,,,,,,,,,,,,,,,,
Remove the JdkConcurrent* special classes,BATCH-913,24659,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,09/Nov/08 8:16 PM,11/Nov/08 1:30 AM,10/May/19 2:37 AM,11/Nov/08 12:16 AM,,,,,,,2.0.0.M3,,,Core,Infrastructure,,,,0,,"Remove the JdkConcurrent* special classes.  They were introduced to allow java.util.concurrent features to be used in preference to backport if they were available.  Since the assumption now is that they are always available it's an extra layer of indirection that isn't necessary.  Maybe having a StepExecutionSynchronizer still makes sense to provide a bit of encapsulation, but there is no need for the factory.",,;11/Nov/08 12:16 AM;robert.kasanicky;600,,,,,,,,,,,,,,1200,600,600,50%,1200,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,331084800,,,,,2008-11-11 00:16:06.272,11737,true,david_syer(david_syer),,,,0|i03xef:,22953,19419,,,,,"11/Nov/08 12:16 AM;robert.kasanicky;removed the synchronizer factory, but kept the synchronizer interface as suggested",,,,,,,,,,,,,,,,,,,,,,
Thread safety issue in JobRegistryBackgroundJobRunner,BATCH-912,24644,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,magott,magott,08/Nov/08 2:25 AM,09/Nov/08 7:53 PM,10/May/19 2:37 AM,08/Nov/08 4:09 AM,2.0.0.M2,2.0.0.M3,,,,,2.0.0.M3,,,Core,,,,,0,,"I noticed that the errors variable in JobRegistryBackgroundJobRunner is modified by one thread and accessed by another without synchronization. As the ArrayList isn't thread safe, I think this might cause visibility issues in the code that checks if errors has occurred during initialization of the application context. As with all visibility issues it is hard to prove this, but I believe that at least in theory this may be a problem.

A way to fix this would be by replacing
private static List<Exception> errors = new ArrayList<Exception>();
with
private static List<Exception> errors = Collections.synchronizedCollection(new ArrayList<Exception>());

Not sure if making the list volatile will work...as I'm not all that confident on what the implications are of making a collection variable volatile. Don't think there will much of a performance hit this particular case anyway.
",,;08/Nov/08 4:09 AM;david_syer;600,;09/Nov/08 7:52 PM;robert.kasanicky;900,,,,,,,,,,,,,3600,0,1500,41%,3600,0,1500,,,,,,,,,,,,,,,,,,,,,,,,,,331257600,,,,,2008-11-08 04:09:09.896,5815,false,robert.kasanicky(robert.kasanicky),,,,0|i02jdr:,14849,14153,,,,,08/Nov/08 4:09 AM;david_syer;Fixed thanks.,,,,,,,,,,,,,,,,,,,,,,
Turn off getWarnings() call in JdbcCursorItemReader when ignoreWarnings is true,BATCH-909,24641,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,07/Nov/08 3:11 AM,10/Nov/08 7:31 AM,10/May/19 2:37 AM,10/Nov/08 1:08 AM,1.1.3,2.0.0.M2,,,,,1.1.4,2.0.0.RC1,,Infrastructure,,,,,0,,JdbcCursorItemReader calls getWarnings()  even if ignoreWarnings is true.  This behavior was changed in Spring Framework and we should make similar adjustments in the JdbcCursorItemReader.,,;10/Nov/08 1:08 AM;robert.kasanicky;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,SPR-5148,,,,,,,,,,,,,,331171200,,,,,2008-11-10 01:08:42.306,11740,true,lucas.l.ward(lucas.l.ward),,,,0|i03xev:,22955,19421,,,,,"10/Nov/08 1:08 AM;robert.kasanicky;Given ignoreWarnings == true, getWarnings() is called only if debug log level is enabled. This should be consistent with the referenced Spring Core issue as far as I understand.",,,,,,,,,,,,,,,,,,,,,,
Integer support in ExecutionContext,BATCH-907,24636,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,robert.kasanicky,robert.kasanicky,07/Nov/08 12:21 AM,10/Nov/08 6:44 AM,10/May/19 2:37 AM,09/Nov/08 11:43 PM,2.0.0.M2,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,ExecutionContext currently supports only Long values and conversion to and from Integers is painful. Given we're storing EC in JSON format now it should be easy to add Integer value support. ItemStream implementations should then be reviewed and long-vs-integer boilerplate cleaned up.,,;09/Nov/08 11:43 PM;robert.kasanicky;7200,,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,331171200,,,,,,11742,true,lucas.l.ward(lucas.l.ward),,,,0|i03xfb:,22957,19423,,,,,09/Nov/08 11:43 PM;robert.kasanicky;added putInt(..) + getInt(..) methods and modified existing itemstreams to take advantage of it.,,,,,,,,,,,,,,,,,,,,,,
Revise FAQ on web site,BATCH-902,24593,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,04/Nov/08 6:09 PM,20/Mar/09 4:39 AM,10/May/19 2:37 AM,11/Jan/09 9:27 PM,,,,,,,2.0.0.RC2,,,Documentation,,,,,0,,,,;09/Nov/08 10:08 PM;david_syer;1800,,,,,,,,,,,,,,1800,3600,1800,100%,1800,3600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,331171200,,,,,,11746,false,thomas.risberg(thomas.risberg),,,,0|i01s3z:,10431,10414,,,,,09/Nov/08 10:07 PM;david_syer;Updated the content of the old one.  We could add some new questions though.,,,,,,,,,,,,,,,,,,,,,,
Uncreachable code in SkipLimitFactoryBean (setting BackOffPolicy),BATCH-901,24558,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,magott,magott,02/Nov/08 11:11 PM,07/Nov/08 1:15 AM,10/May/19 2:37 AM,05/Nov/08 7:02 PM,1.1.2,,,,,,1.1.4,,,Core,,,,,0,,"In SkipLimitStepFactoryBean the code that sets the BackOffPolicy seems to be unreachable.
It is only set if the retryPolicy!=null. The retryPolicy will however never be null, as an if test prior to this test sets the retryPolicy if it is null.
In effect this is how the code works:

if(retryPolicy==null){
//set retryPolicy
}
if(retryPolicy==null && backOffPolicy!=null){
//set backofpolicy
}

In 2.0 the FaultTolerantStepFactoryBean the retryPolicy==null is taken out of the last if-statement.

(You may also want to se the forum post: http://forum.springframework.org/showthread.php?t=62383)
I have attached a patch that makes the if statement equal to that in FaultTolerantStepFactoryBean. Not sure why the retryPolicy==null was there in the first place, so this is something the original author might want to look into before the patch is applied. Just to make sure that it doesn't interfere with some logic that was not obvious to me.",,;03/Nov/08 4:26 AM;robert.kasanicky;900,,,,,,,,,,,,,,3600,2700,900,25%,3600,2700,900,,,,,,,,,,,,,,,02/Nov/08 11:11 PM;magott;SkipLimitStepFactoryBean_1.1.2_backoffpolicy_patch.patch;https://jira.spring.io/secure/attachment/14828/SkipLimitStepFactoryBean_1.1.2_backoffpolicy_patch.patch,,,,,,,,,,,331516800,,,,,2008-11-03 04:26:07.341,5817,true,robert.kasanicky(robert.kasanicky),,,,0|i02je7:,14851,14155,,,,,"03/Nov/08 4:26 AM;robert.kasanicky;Couldn't find any reason for the null check to be there, so I removed it.","05/Nov/08 12:57 AM;magott;It says that this is fixed in 1.1.3, but the old code is still present in the 1.1.3A maven build. At least in the *sources.jar",05/Nov/08 5:42 PM;david_syer;The change wasn't made on the 1.1.x branch.  Must have been a mistake in the JIRA tagging.  Is it urgent for 1.1.x?,"05/Nov/08 5:59 PM;magott;I just found it by accident while reading the forums, so it is not a show stopper for me, just felt it should be fixed. ","05/Nov/08 7:02 PM;robert.kasanicky;This is fixed in 1.1.x, it just didn't make it to 1.1.3 release (and doesn't affect 2.0) - fix version is correct now.",,,,,,,,,,,,,,,,,,
Retreive null values from the ExecutionContext,BATCH-900,24553,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,tuxetuxe,tuxetuxe,02/Nov/08 8:32 PM,10/Nov/08 6:44 AM,10/May/19 2:37 AM,04/Nov/08 2:30 AM,2.0.0.M2,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"
It's impossible to retreive null values from the ExecutionContext because a null value fails in the ""type.isInstance(...)"" test, throwing a non-itutive exception...

The put method already was changed to support the adition of null values to the context.


Proposed fix:

	/**
	 * Utility method that attempts to take a value represented by a given key
	 * and validate it as a member of the specified type.
	 * 
	 * @param key The key to validate a value for
	 * @param type Class against which value should be validated
	 * @return Value typed to the specified <code>Class</code>
	 */
	private Object readAndValidate(String key, Class<?> type) {

		Object value = map.get(key);

		if (value!=null && !type.isInstance(value)) {
			throw new ClassCastException(""Value for key=["" + key + ""] is not of type: ["" + type + ""], it is [""
					+ (value == null ? null : ""("" + value.getClass() + "")"" + value) + ""]"");
		}

		return value;
	}
",,;03/Nov/08 5:32 AM;robert.kasanicky;2700,;04/Nov/08 2:30 AM;robert.kasanicky;600,,,,,,,,,,,,,3600,300,3300,91%,3600,300,3300,,,,,,,,,,,,,,,,,,,,,,,,,,331689600,,,,,2008-11-03 05:31:59.163,11747,true,lucas.l.ward(lucas.l.ward),,,,0|i03xfr:,22959,19425,,,,,"03/Nov/08 5:31 AM;robert.kasanicky;I didn't encounter any problems with retrieving non-existing (null) values, but EC refused to store null as a value because the underlying map has been changed to ConcurrentHashMap. I changed the implementation to store a private constant into the ConcurrentHashMap as null substitute.","03/Nov/08 8:57 AM;lucas.l.ward;I'm not sure if we should store a null substitute. Perhaps if null is passed in we should just do nothing?  If they try and retrieve a value with that key, they'll still get null.",04/Nov/08 1:42 AM;robert.kasanicky;It seems we can live without the null substitute.,"04/Nov/08 2:30 AM;robert.kasanicky;put(key, null) now delegates to remove(key)",,,,,,,,,,,,,,,,,,,
Version is not rehydrated from database in JobInstance or JobExecution,BATCH-897,24519,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,30/Oct/08 3:53 AM,05/Nov/08 6:13 PM,10/May/19 2:37 AM,03/Nov/08 10:23 PM,2.0.0.M3,,,,,,2.0.0.M3,,,Core,,,,,0,,Version is not rehydrated from database in JobInstance or JobExecution,,;03/Nov/08 10:24 PM;robert.kasanicky;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,331516800,,,,,2008-11-03 22:23:59.099,11750,false,david_syer(david_syer),,,,0|i03xg7:,22961,19427,,,,,"03/Nov/08 10:23 PM;robert.kasanicky;Added concurrent-update checks for JobExecution and included version in the SQL selects so that the value gets loaded from database.

I don't see the point in using version for JobInstance, it is never updated by definition. I guess JobInstance shouldn't be an Entity at all?",05/Nov/08 6:13 PM;david_syer;I don't have a problem with JobInstance only ever having one version (0).  But it shouldn't be null.  Looks fine now.,,,,,,,,,,,,,,,,,,,,,
"""DRY"" FaultTolerantTasklet implementations",BATCH-896,24517,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,30/Oct/08 1:56 AM,10/Nov/08 10:02 PM,10/May/19 2:37 AM,06/Nov/08 2:19 AM,,,,,,,2.0.0.M3,,,Core,,,,,0,,Review and refactor the two *FaultTolerantTasklet* implementations to remove duplications where possible - processing and writing should be essentially the same.,,;03/Nov/08 4:57 AM;robert.kasanicky;21600,;06/Nov/08 2:19 AM;robert.kasanicky;14400,,,,,,,,,,,,,14400,0,36000,250%,14400,0,36000,,,,,,,,,,,,,,,,,,,,,,,,,,331084800,,,,,2008-11-05 18:11:24.448,11751,true,robert.kasanicky(robert.kasanicky),,,,0|i03xgf:,22962,19428,,,,,"03/Nov/08 4:56 AM;robert.kasanicky;Pulled up processing and writing to an abstract superclass together with common properties and helper methods. The execute() method is very similar in both classes too, but there are subtle differences, so I think it's better to tolerate the duplication than bind the two implementations together too tightly.","05/Nov/08 6:11 PM;david_syer;I'm not sure the Javadocs comment about Object.equals() in the NonBuffering version is correct.  The comparison is based on the DefaultRetryState (which is an internal class really so not relevant for the Javadocs).  I do, however, think that we need to provide an option to override this by providing a strategy for identifying incoming messages using an approach similar to the StatefulRetryOperationsInterceptor.","05/Nov/08 7:33 PM;robert.kasanicky;I think the javadoc is correct because items are recognized based on equals checks, but I'll look into making this configurable.","05/Nov/08 10:05 PM;robert.kasanicky;On second thoughts I don't think a strategy for identifying items yields any real benefits. Does it matter whether you implement equals() or something like ItemKeyGenerator? If I can't change the input item for some reason I can always wrap it and implement equals() in the wrapper. So saying ""make sure equals() is implemented properly for your items"" seems like the natural way to go, while providing strategy for item identification only adds accidental complexity (unless I'm missing something).","05/Nov/08 10:11 PM;robert.kasanicky;The relevant difference I can think of is that we can cache only the identity of the item rather than the item itself, but I'm not sure how often it is useful. For the sake of calling skip listeners before successful completion of chunk we need to cache the skipped item itself anyway.","06/Nov/08 2:19 AM;robert.kasanicky;I've found out skip listeners were not being called correctly in the non-buffered case, so I fixed it along the way together with some minor improvements. 

I don't see how strategizing item identification would help (see previous comments) so I'm resolving again. I think it would just introduce further complexity into already cumbersome tasklets that are strongly coupled to the TaskletStep (the fault-tolerant tasklet implementations make no sense standalone) and struggle to remain stateless.","10/Nov/08 8:02 AM;lucas.l.ward;Robert,

I was looking through some of these changes, and I'm curious about soem of the ItemProcessor changes.  It was my understanding that, given a commit interval of 3, the flow would look like:

read -> process
read -> process
read -> process
write

However, it looks like it's now:

read
read
read
process
prcoess
process
write

I'm just wanting to make sure I understand it correctly.  I suppose it doesn't matter too much if we call process after completely reading.","10/Nov/08 10:02 PM;robert.kasanicky;Yes, we have separate read, process and write phases that apply to all items before moving to the next phase. It's been this way since the chunk-oriented tasklet with first-class item processor has been introduced.",,,,,,,,,,,,,,,
Fix XML schema so that only top-level elements are allowed at top level (i.e. job).,BATCH-895,24478,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,29/Oct/08 1:12 AM,05/Nov/08 6:14 PM,10/May/19 2:37 AM,03/Nov/08 11:28 PM,,,,,,,2.0.0.M3,,,Core,,,,,0,,Fix XML schema so that only top-level elements are allowed at top level (i.e. job).,,;03/Nov/08 11:28 PM;robert.kasanicky;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,331689600,,,,,2008-11-03 01:47:39.237,11752,true,david_syer(david_syer),,,,0|i03xgn:,22963,19429,,,,,"03/Nov/08 1:47 AM;lucas.l.ward;What exactly are we considering top level elements?  It seems to me that we should still allow for 'refs' which would mean creating other elements such as a reader or writer at the top level as well.  A lot of implementations are extremely complex, having multiple readers and writers, and in some cases, 8 to 10 steps, be able to reference something like a step, rather than forcing it to be inline, can be helpful in organizing a job's xml files (specifically, allowing them to be split up)","03/Nov/08 6:27 PM;david_syer;The elements <step>, <split>, <next>, <stop>, <end>, <decision> do not make sense outside <job>.  They are therefore not top-level elements and cannot be referred to as a ref=.  I think we were talking at cross purposes.",03/Nov/08 11:28 PM;robert.kasanicky;Inlined definitions of child-only elements.,,,,,,,,,,,,,,,,,,,,
RFC: move ExitStatus up into Core?,BATCH-894,24476,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,28/Oct/08 11:40 PM,17/Nov/08 2:02 AM,10/May/19 2:37 AM,17/Nov/08 2:02 AM,,,,,,,2.0.0.M3,,,Core,Infrastructure,,,,0,,"RFC: move ExitStatus up into Core?  The RepeatOperations can make do with a simple boolean return value (indicating continuable status), or (better) an enum.  All the other features of ExitStatus are probably only used in Core?",,;17/Nov/08 2:02 AM;david_syer;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,332208000,,,,,,11753,false,david_syer(david_syer),,,,0|i03xgv:,22964,19430,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the HibernateAwareItemWriter?,BATCH-893,24475,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,28/Oct/08 11:38 PM,09/Nov/08 6:49 PM,10/May/19 2:37 AM,09/Nov/08 6:49 PM,,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"Remove the HibernateAwareItemWriter?  It really doesn't do very much now, and anyone implementing an ItemWriter with a Hibernate session or Dao should know enough to flush the session after write.  If we don't ditch it completely we could at least get rid of the delegate, and make a HibernateAwareChunkListener instead?",,;29/Oct/08 11:25 PM;robert.kasanicky;7200,,,,,,,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,331171200,,,,,2008-10-29 23:25:21.236,5818,true,robert.kasanicky(robert.kasanicky),,,,0|i02jef:,14852,14156,,,,,"29/Oct/08 11:25 PM;robert.kasanicky;I've removed the HibernateAwareItemWriter and updated the hibernate sample. If the user is implementing an ItemWriter directly then it's OK to expect he will remember to call flush at the end I think - per ItemWriter contract. 

Maybe we can try to make it easier to reuse custom DAOs without writing an ItemWriter from scratch (abstract looping and flush + provide hibernate implementation)? That would be worth a separate issue then.",07/Nov/08 9:28 AM;david_syer;I guess this should extend to JpaAware* as well. Surely it's equally useless?,09/Nov/08 6:49 PM;robert.kasanicky;removed the JpaAwareItemWriter as well,,,,,,,,,,,,,,,,,,,,
Thread visibility issues in repeat template,BATCH-892,24474,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,28/Oct/08 10:15 PM,30/Oct/08 12:34 AM,10/May/19 2:37 AM,29/Oct/08 9:39 PM,1.1.2,,,,,,1.1.3,2.0.0.M3,,Infrastructure,,,,,0,,ResultHolder implementation in TaskExecutorRepeatTemplate probably needs some volatile keywords (http://forum.springframework.org/showthread.php?t=61715).,,;29/Oct/08 9:39 PM;robert.kasanicky;3600,;30/Oct/08 12:34 AM;robert.kasanicky;900,,,,,,,,,,,,,7200,2700,4500,62%,7200,2700,4500,,,,,,,,,,,,,,,,,,,,,,,,,,332121600,,,,,2008-10-29 21:39:21.814,5819,true,robert.kasanicky(robert.kasanicky),,,,0|i02jen:,14853,14157,,,,,29/Oct/08 9:39 PM;robert.kasanicky;added volatile keyword to ResultHolder attributes (in both trunk and 1.1.x),"29/Oct/08 11:54 PM;david_syer;The callback, context, queue should be final (not volatile).  Otherwise I guess this makes sense.  Shame it's practically impossible to test.",30/Oct/08 12:34 AM;robert.kasanicky;attributes set in constructor declared final,,,,,,,,,,,,,,,,,,,,
Create Annotations,BATCH-891,24471,22654,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,28/Oct/08 10:46 AM,17/Nov/08 7:21 AM,10/May/19 2:37 AM,17/Nov/08 7:21 AM,2.0.0.M2,,,,,,2.0.0.M3,,,Core,,,,,0,,"This issue is to create the annotations themselves, such as @BeforeStep, etc with appropriate javadocs explaining their usage.",,;28/Oct/08 12:19 PM;lucas.l.ward;7200,,,,,,,,,,,,,,28800,21600,7200,25%,28800,21600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,330480000,,,,,,11754,true,lucas.l.ward(lucas.l.ward),,,,0|i03xh3:,22965,19431,,,,,"28/Oct/08 11:43 AM;lucas.l.ward;I've started creating some of the annotations, although, there's no huge rush.  I still have a couple of open questions though.  I'm assuming that we could have something like the following:

@BeforeStep
void writeHeaderFile(StepExecution stepExecution)

There's not really any facility in java annotations to require that the annotated method have one StepExecution as a parameter.  However, it seems to me that once we get the annotated method with reflection, it would be easy to see if a parameter type is of type StepExecution, and then wire in our value.  I know testng does the same thing with data providers, but I'm not sure if there's a best practice there that I'm missing.  Either way, it seems like the annotations don't need anymore than what I've provided.  I'll confirm tomorrow and then finish them out.

I'm also still curious as to how we'll pull in annotated classes for just the currently running step, but I'm assuming that's part of the scoping code that will go in later.  We may also need to annotation the BeforeStep annotation listed above with @BatchComponent, so that anyone who uses these types of annotations, will automatically be set as BatchComponents.  However, I think it might be a little trickier than that.","28/Oct/08 12:18 PM;lucas.l.ward;Disregard my last paragraph, I didn't have access to the wiki, once I did I was able to refresh my memory on how we decided to do that.","29/Oct/08 4:46 PM;lucas.l.ward;I pulled together an initial attempt at using annotations to configure JobExecutionListeners.  The approach used a BeanPostProcessor, with a job wired in (which could easily be setup with a namespace)  I used simple proxying that probably needs refactoring, but the approach for wiring in the listeners is what I was really trying to prototype.","12/Nov/08 10:38 AM;lucas.l.ward;I've committed a new JobExecutionListenerAdapter that will adapt annotations if they're found.  Normally component scanning can be used to auto-wire in, using qualifiers.  There still needs to be some more polish though.  I reused MethodInvoker and MethodResolver from Spring integration, and I still need to move over their unit tests.  The parser should probably handle class= as well.",17/Nov/08 7:21 AM;lucas.l.ward;I'm resolving this issue to track all annotation updates through BATCH-673,,,,,,,,,,,,,,,,,,
Stop transition in XML namespace,BATCH-890,24465,22668,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,28/Oct/08 3:39 AM,10/Nov/08 5:34 PM,10/May/19 2:37 AM,28/Oct/08 11:18 PM,2.0.0.M3,,,,,,2.0.0.M3,,,,,,,,0,,"Stop transition in XML namespace.  And new interface to check for unstopped business condition.

e.g.

<job>
  <step name=""step1"">
    <next on=""*"" to=""step2""/>
    <stop on=""STOP"" to=""decision"" />
  </step>
  <decision id=""decision"" decider=""decider"">
    <next on=""CONTINUE"" to=""step2""/>
    <next on=""ABORT"" to=""rollback""/>
    <complete on=""COMPLETED""/>
    <stop on=""*""/>
  </decision>
  <step name=""step2""/>
  <step name=""rollback""/>
</job>

the <pause/> element in the namespace is probably redundant and the JobExecutionDecider probably needs more information - like the last step execution..
",,;28/Oct/08 11:20 PM;david_syer;12600,,,,,,,,,,,,,,10800,0,12600,116%,10800,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,331084800,,,,,2008-11-10 06:23:13.634,11755,false,david_syer(david_syer),,,,0|i03xhb:,22966,19432,,,,,28/Oct/08 11:18 PM;david_syer;Done.  Maybe needs some more integration tests.,"10/Nov/08 6:23 AM;lucas.l.ward;Dave,

I was looking through this issue, and I'm a little confused on the difference between stop and end?","10/Nov/08 5:34 PM;david_syer;<end> is an end state to finish the job with a specified status.  <stop on=""...""/> is a synonym for <end on=""..."" status=""STOPPED""/>.  It shoes that you intend to start the job again manually later (whereas after an end the job will usually be finished).",,,,,,,,,,,,,,,,,,,,
skip listeners should be called when chunk is about to commit,BATCH-888,24442,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,robert.kasanicky,robert.kasanicky,24/Oct/08 3:08 AM,10/Nov/08 8:08 AM,10/May/19 2:37 AM,30/Oct/08 2:02 AM,2.0.0.M2,,,,,,2.0.0.M3,,,Core,,,,,0,,"During chunk processing skips should be aggregated and skip listeners should be called only when chunk is about to commit successfully. 

Rationale comes from typical usecase of logging skipped items into database:
1. Users will no longer need to configure REQUIRES_NEW so that skip log is not rolled back
2. Duplicate skip items on restart from the failed chunk will be eliminated",,;27/Oct/08 6:07 AM;robert.kasanicky;14400,;30/Oct/08 2:02 AM;robert.kasanicky;7200,,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,,,,,,,,,,,,,,,332121600,,,,,,11757,true,lucas.l.ward(lucas.l.ward),,,,0|i03xhj:,22967,19433,,,,,"27/Oct/08 6:07 AM;robert.kasanicky;FaultTolerantChunkOrientedTasklet now calls skip listener after the chunk has been written successfully, but before commit. The non-buffering implementation is yet to be modified.",30/Oct/08 2:02 AM;robert.kasanicky;Moved the listener calls after write also for the non-buffering case. BATCH-896 created as follow up to further improve the tasklet implementations.,,,,,,,,,,,,,,,,,,,,,
onSkipInProcess called multiple times for same item using FaultTolerantChunkOrientedTasklet,BATCH-887,24434,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,23/Oct/08 1:49 PM,24/Oct/08 1:15 AM,10/May/19 2:37 AM,23/Oct/08 7:25 PM,2.0.0.M2,,,,,,2.0.0.M3,,,Core,,,,,0,,"If there are skips during the writing of the chunk then the items in the chunk are processed twice again and the onSkipInProcess gets called for each time the chunk is processed.

The basic sequence of events:

* read chunk

* process chunk - some items cause process skip and the items are removed from chunk and placed in skip list
* onSkipInProcess called for skipped items
* write chunk - exception thrown for one item

* process chunk without the process skips
* onSkipInProcess called again for skipped items
* write individual chunks - exception thrown for same item  and the item is removed from the chunk
* onSkipInWrite called

* process chunk without the process or write skips
* write chunk without the process or write skips
* onSkipInProcess called again for skipped items

Seems that we should remove the skips from the skip list after the first onSkipInProcess is completed or supress the call once it has been made for the skip list.
",,;23/Oct/08 7:26 PM;robert.kasanicky;5400,,,,,,,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,332640000,,,,,2008-10-23 19:25:30.451,11758,true,robert.kasanicky(robert.kasanicky),,,,0|i03xhr:,22968,19434,,,,,"23/Oct/08 7:25 PM;robert.kasanicky;Not sure why, but onSkipInProcess callback was called in a separate loop after all items have been processed. I've moved the listener call into the same loop so skipListener is called at the same time and place the item is actually being skipped. Hence listener calls are in synch with the skipping logic now.","23/Oct/08 7:31 PM;david_syer;I think the delayed callbacks were so that they could all happen in a transaction that was going to commit.  It still might make sense actually to do that - buffer the items skipped and call the listener only once at the end, when we know that we are going to commit.  It fits better with what the user expects, and means they don't have to faff around with speical TX attributes for the listener.","23/Oct/08 11:53 PM;thomas.risberg;Yes, the last onSkipInProcess call was made in a transaction that was actually committed, while the first two and the skipInWrite call was made in a transaction that rolled back.  If we could make all skipInXxx calls once and in the final transaction only, that would be ideal. The way it is currently working you would have to use REQUIRES_NEW as Dave points out.","24/Oct/08 1:15 AM;robert.kasanicky;So the idea is to call both onSkipInProcess and onSkipInWrite only after both processing and writing succeeded? The way it was before I made the change was to call onSkipInProcess after processing, but before writing so it wasn't really helpful separation unless I'm missing something.",,,,,,,,,,,,,,,,,,,
Reference Doc Appendix B. Meta-Data Schema outdated,BATCH-885,24371,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,20/Oct/08 2:02 AM,30/Oct/08 12:00 PM,10/May/19 2:37 AM,30/Oct/08 12:00 PM,1.1.2,,,,,,1.1.3,,,Documentation,,,,,0,,"The reference doc ""Appendix B. Meta-Data Schema"" is outdated - needs to match the current schema used
",,can not consistently get images to show up in the PDFs - once in a while it works but most of the time it doesn't.;30/Oct/08 10:25 AM;thomas.risberg;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,332899200,,,,,2008-10-20 09:02:15.955,11759,true,thomas.risberg(thomas.risberg),,,,0|i01s4f:,10433,10416,,,,,20/Oct/08 9:02 AM;lucas.l.ward;Is this potentially because of some confusion with the M2 release?  Or is the 1.1 version of the docs really off?,,,,,,,,,,,,,,,,,,,,,,
SkipLimitStep does not fail if exception occurs,BATCH-884,24370,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,eickmeyer,eickmeyer,20/Oct/08 1:27 AM,20/Oct/08 11:07 PM,10/May/19 2:37 AM,20/Oct/08 11:07 PM,1.1.2,,,,,,1.1.3,,,Core,,,,,0,,"If you define a skipLimitStep with both skippableExceptionClasses and fatalExceptionClasses defined and the ItemWriter throws an exception of a type which is not covered by one of the lists the step does not fail.

Note: Robert could already reproduce the problem.",,;20/Oct/08 11:07 PM;robert.kasanicky;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,332899200,,,,,2008-10-20 23:07:07.53,11760,true,robert.kasanicky(robert.kasanicky),,,,0|i03xhz:,22969,19435,,,,,20/Oct/08 11:07 PM;robert.kasanicky;wrapped non-classified exception into fatal NonSkippableException when rethrowing,,,,,,,,,,,,,,,,,,,,,,
Create section in documentation highlighting key changes between 1.x and 2.0,BATCH-882,24351,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,17/Oct/08 9:00 AM,11/Jan/09 8:29 PM,10/May/19 2:37 AM,11/Jan/09 8:29 PM,,,,,,,2.0.0.RC1,,,Documentation,,,,,0,,,,;27/Oct/08 3:40 AM;david_syer;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,325728000,,,,,2008-11-20 07:07:55.762,11762,false,david_syer(david_syer),,,,0|i01s4v:,10435,10418,,,,,"20/Nov/08 7:07 AM;dezzio@ysoft.com;Since the project is well along the way to release, it might be good to move this item up, or at least publish a preview of its contents so that folks who are looking over Spring Batch can get some idea soon of what to expect for changes, improvements with 2.0.","20/Nov/08 7:14 AM;lucas.l.ward;Dave has already put a preview on his blog:

http://blog.springsource.com/2008/10/21/spring-batch-20-new-feature-rundown/

We should have this section in the docs taken care of in a month or so as well.",11/Jan/09 8:29 PM;david_syer;Updated features.apt and added 2.0-highlights.apt in migration section.,,,,,,,,,,,,,,,,,,,,
Update meta data schema to limit primary key values to Java Long sizes,BATCH-881,24343,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,17/Oct/08 2:57 AM,24/Oct/08 8:42 AM,10/May/19 2:37 AM,24/Oct/08 1:13 AM,1.1.2,2.0.0.M2,,,,,1.1.3,2.0.0.M3,,Core,,,,,0,,Add maxvalue to sequence generation and change Oracle to NUMBER(19) for BIGINT,,;24/Oct/08 1:13 AM;thomas.risberg;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333158400,,,,,,11763,false,lucas.l.ward(lucas.l.ward),,,,0|i03xi7:,22970,19436,,,,,,,,,,,,,,,,,,,,,,,,,,,
Suspend after step and wait for user input,BATCH-880,24341,22668,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Won't Fix,robert.kasanicky,david_syer,david_syer,16/Oct/08 10:45 PM,04/Nov/08 2:33 AM,10/May/19 2:37 AM,28/Oct/08 11:21 PM,1.1.0,,,,,,2.0.0.M3,,,Core,,,,,0,,"<job>

	<step name=""stagePrices"" next=""waitForApproval"" />
	<suspend id=""waitForApproval"" next=""transferPrices"" />
	<step name=""transferPrices""/>

</job>

",,;23/Oct/08 7:28 PM;robert.kasanicky;3600,;30/Oct/08 12:01 AM;david_syer;60,,,,,,,,,,,,,14400,0,3660,25%,14400,0,3660,,,BATCH-858,,,,,,,,,,,,,,,,,,,,,,,332208000,,,,,2008-10-22 22:23:48.57,5821,false,robert.kasanicky(robert.kasanicky),,,,0|i02jf3:,14855,14159,,,,,22/Oct/08 10:23 PM;robert.kasanicky;Is <suspend .. /> intended to be just syntax sugar for a step implementation that pauses the job or should it be supported by ConditionalJob somehow?,23/Oct/08 2:02 AM;david_syer;It will be supported by ConditionalJob when I get round to it.  Suggest you leave this one on the shelf for a few days.,"23/Oct/08 2:16 AM;robert.kasanicky;OK, I'll wait. I've added the suspend element to the schema for now as it is a non-invasive change.",28/Oct/08 11:21 PM;david_syer;See BATCH-890 for the outcome of this (an alternative implementation).,,,,,,,,,,,,,,,,,,,
"Decision states: not a regular step, just a volatile decision based on information in the JobExecution.",BATCH-879,24340,22668,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,16/Oct/08 10:43 PM,28/Oct/08 11:35 PM,10/May/19 2:37 AM,28/Oct/08 11:34 PM,1.1.0,,,,,,2.0.0.M3,,,Core,,,,,0,,"<job>

	<step name=""stagePrices"" next=""decide"" />
	<decision id=""decide"" decider=""lookForApproval"">
		<next on=""APPROVED"" to=""transferPrices"" />
		<next on=""*"" to=""unapprovedReporting"" />
	</decision>
	<step name=""unapprovedReporting"" next=""transferPrices"" />
	<step name=""transferPrices"" />

</job>

",,;27/Oct/08 6:54 AM;david_syer;10800,;28/Oct/08 11:35 PM;david_syer;3600,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,332208000,,,,,2008-10-28 11:46:36.327,11764,false,david_syer(david_syer),,,,0|i03xif:,22971,19437,,,,,"28/Oct/08 11:46 AM;lucas.l.ward;Dave,

I just did a quick look at the JobExecutionDecider interface, which I'm assuming you're planning on reusing, and I'm wondering if it shouldn't take the last StepExecution that was executed, rather than the JobExecution.  I suppose it could be argued that implementations should know the step they plan to be applied after, but it seems easier to wire in the last execution.  We'll definitely know it, and the JobExecution can be obtained from it.","28/Oct/08 6:50 PM;david_syer;I put a comment saying the same thing in BATCH-890.  I guess one of us will get to it, but it isn't quite as straightforward as you might like since there isn't a unique *last* step execution any more now that we support splits.  That's a weakness in the AbstractJob as well, which I had to work around in FlowJob by guessing the last step execution.",,,,,,,,,,,,,,,,,,,,,
AbstractMethodInvokingDelegator is not abstract,BATCH-878,24329,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,robert.kasanicky,magott,magott,15/Oct/08 8:04 PM,15/Oct/08 11:07 PM,10/May/19 2:37 AM,15/Oct/08 11:07 PM,2.0.0.M2,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"The naming of the class AbstractMethodInvokingDelegator suggests that the class is abstract, but it is not implemented as abstract. It might not be a bug per se, but the naming seems inconsistent with the naming of  Spring classes in general.",,;15/Oct/08 11:07 PM;robert.kasanicky;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,333331200,,,,,,5822,true,robert.kasanicky(robert.kasanicky),,,,0|i02jfb:,14856,14160,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pull jobRepository.save() out of Step implementations and put it in the driving Job,BATCH-875,24304,22658,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,14/Oct/08 1:15 AM,24/Oct/08 8:43 AM,10/May/19 2:37 AM,22/Oct/08 1:11 AM,2.0.0.RC2,,,,,,2.0.0.M3,,,Core,,,,,0,,"It makes sense that the convention for all steps would be to operate on a StepExecution that was already added to the repository.  That way if the execution is remote there is always a record of the StepExecution for a restart, in the case that the message does not arrive.",runtime ,;22/Oct/08 12:11 AM;robert.kasanicky;7200,;22/Oct/08 1:11 AM;robert.kasanicky;1800,,,,,,,,,,,,,14400,5400,9000,62%,14400,5400,9000,,,,,,,,,,,,,,,22/Oct/08 12:10 AM;robert.kasanicky;875.patch;https://jira.spring.io/secure/attachment/14782/875.patch,,,,,,,,,,,332812800,,,,,2008-10-22 00:10:07.602,11767,true,lucas.l.ward(lucas.l.ward),,,,0|i03xin:,22972,19438,,,,,"22/Oct/08 12:10 AM;robert.kasanicky;I've made most of the changes, but eventually found partitioning testcases I wasn't sure how to fix. Partitioning is implemented on step level and the partitions previously saved themselves, while the original stepExecution wasn't saved. When stepExecution save is pulled to job level this obviously breaks. Is there an intended way how to deal with this?

Attached is the patch with remaining failing partitioning testcases.",22/Oct/08 12:45 AM;david_syer;I think the StepExecutionSplitter has to save the step executions before handing them back to the PartitionHandler.,22/Oct/08 1:11 AM;robert.kasanicky;StepExecution partitions are now saved in StepExecutionSplitter as suggested.,,,,,,,,,,,,,,,,,,,,
Ensure SkipPolicies are generic and extendable,BATCH-873,24260,25319,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,lucas.l.ward,lucas.l.ward,10/Oct/08 8:08 AM,30/Dec/09 9:08 PM,10/May/19 2:37 AM,30/Dec/09 9:08 PM,2.0.0.M1,,,,,,2.1.0.RC1,,,Core,,,,,0,,"The topic came up during a SME review of skip policies.  The common question of doing percentages in file processing being a driving factor.  I'm not sure this is terribly high priority for us.  However, I think we need to make sure that if someone wanted to create their own policy, that it's easy to extend.  It would be easy to create a policy that took a Resource, line length, and percentage, and calculated it.  We should try and create one and see what it takes to wire it in.",,;04/Nov/08 9:59 PM;robert.kasanicky;10800,,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,295228800,,,,,2008-11-04 21:54:16.014,11769,false,david_syer(david_syer),,,,0|i03xj3:,22974,19440,,,,,"04/Nov/08 9:54 PM;robert.kasanicky;The problem I see with ItemSkipPolicy is that it has really become an internal interface. If you use custom skip policy you need to make sure the ExceptionHandler is alligned with it and configure RetryTemplate to rethrow exceptions according to rollback expectations. Therefore it isn't really useful to think about the skip policies alone.

Currently you either use the factory bean with fixed skip limit or you need to fully understand the framework implemenation to be able to tweak the skip logic in ways that are not predefined. Strictly speaking this might qualify as both 'generic' and 'extendable', but probably very painful as well.","30/Dec/09 4:05 AM;david_syer;The factory bean could be extended (and XML support I guess) so that it accepts either skipLimit or skipPolicy but not both.  If it gets a skipPolicy then it will have to wrap it in an internal implementation that takes into account the well-known set of non-skippable exceptions, just like we do with the retry policy already.  I think that will do it.",30/Dec/09 9:08 PM;david_syer;Added skip-policy to factory bean and XML namespace with proxy wrapper at runtime to ensure that known fatal exceptions are not skippable.,,,,,,,,,,,,,,,,,,,,
"RFC: Should FileWriterCallback have two methods, one for headers and one for footers?",BATCH-872,24259,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,10/Oct/08 8:03 AM,24/Nov/08 7:40 PM,10/May/19 2:37 AM,24/Nov/08 7:40 PM,2.0.0.M1,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"The question came up during a SME review of the 2.0 M2 code about the FileWriterCallback.  It currently has the following signature:

public interface FileWriterCallback {
  void write(Writer writer) throws IOException;
}

This essentially forces whatever class wants to write a header or footer to do so in separate classes.  One possible solution would be to change the interface to the following:

public interface FileWriterCallback {
  void writeHeader(Writer writer) throws IOException;
  void writeFooter(Writer writer) throws IOException;
}

The only class using the callback is FlatFileItemWriter, so knowing about the difference in the interface wouldn't be a huge issue.  I'm not sure I feel strongly one way or another, but it's up for discussion.
",,Created patches;24/Nov/08 7:29 AM;dhgarrette;1800,;24/Nov/08 7:40 PM;robert.kasanicky;900,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,,,,24/Nov/08 6:55 AM;dhgarrette;headerFooter-infrastructure.patch;https://jira.spring.io/secure/attachment/14900/headerFooter-infrastructure.patch,24/Nov/08 6:55 AM;dhgarrette;headerFooter-samples.patch;https://jira.spring.io/secure/attachment/14901/headerFooter-samples.patch,,,,,,,,,,329875200,,,,,2008-10-13 20:06:51.004,11770,true,robert.kasanicky(robert.kasanicky),,,,0|i03xjb:,22975,19441,,,,,"13/Oct/08 8:06 PM;david_syer;Or two interfaces (FlatFileHeaderCallback, FlatFileFooterCallback)?",24/Nov/08 6:55 AM;dhgarrette;Created two interfaces FlatFileHeaderCallback (with a method writeHeader) and FlatFileFooterCallback (with a method writeFooter).,24/Nov/08 7:30 AM;dhgarrette;Assigning to Robert to check in patches.,24/Nov/08 7:40 PM;robert.kasanicky;patch applied,,,,,,,,,,,,,,,,,,,
Change SystemCommandTasklet to use TaskExecutor,BATCH-867,24206,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,magott,magott,06/Oct/08 6:05 AM,08/Oct/08 7:01 AM,10/May/19 2:37 AM,08/Oct/08 12:48 AM,1.1.2,2.0.0.M1,,,,,2.0.0.M2,,,,,,,,0,,"For managed environments creating thread is often unsupported. To make the SystemCommandTasklet reusable for managed environments it's execution model must be configurable.

I have attached a patch that uses the TaskExecutor. I wanted to use a AsyncTaskExecutor, however that would mean that the commonj WorkManagerTaskExecutor would be unusable.

The patched code passed the SystemCommandTaskletIntegrationTests, except for the testExecuteFailure method, which throws an exception. However, this method also threw an exception with the original code (might be something you need to look into regardless of this improvement being included or not).",,;08/Oct/08 12:54 AM;robert.kasanicky;7200,;08/Oct/08 12:55 AM;robert.kasanicky;3600,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,06/Oct/08 6:05 AM;magott;SystemCommandTasklet_taskeexecutor_patch.txt;https://jira.spring.io/secure/attachment/14742/SystemCommandTasklet_taskeexecutor_patch.txt,,,,,,,,,,,333936000,,,,,2008-10-06 17:53:49.33,11773,true,lucas.l.ward(lucas.l.ward),,,,0|i03xjz:,22978,19444,,,,,"06/Oct/08 5:53 PM;david_syer;In 1.1 this was a sample, so there isn't much impetus to change it in the branch - people should feel perfectly free to copy and modify it.  I think we should fix it in 2.0 though.  It should use Runnable anyway (not extend Thread).",06/Oct/08 11:22 PM;robert.kasanicky;There's a tradeoff in using TaskExecutor vs. creating a separate thread programatically. In the latter case we can interrupt the thread that executes the system command if it takes too long or user interrupts the job. Are we willing to sacrifice this functionality in favor of running in managed environments?,08/Oct/08 12:48 AM;robert.kasanicky;SCT now uses TaskExecutor to execute a FutureTask that wraps the system call. In case of timeout or job interrupt the FutureTask is cancelled with optional attempt to interrupt the executing thread.,08/Oct/08 7:01 AM;lucas.l.ward;Looks good.,,,,,,,,,,,,,,,,,,,
Reference manual has invalid references to org.springframework.batch.io.file package,BATCH-866,24191,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,05/Oct/08 5:33 AM,24/Oct/08 8:40 AM,10/May/19 2:37 AM,08/Oct/08 11:38 PM,1.1.2,,,,,,1.1.3,2.0.0.M2,,Documentation,,,,,0,,The org.springframework.batch.io.file package doesn't exists - should reference org.springframework.batch.item.file instead,,;08/Oct/08 11:39 PM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-10-08 23:38:56.679,11774,true,lucas.l.ward(lucas.l.ward),,,,0|i01s5b:,10437,10420,,,,,08/Oct/08 11:38 PM;robert.kasanicky;fixed references in docs and also code comments,,,,,,,,,,,,,,,,,,,,,,
CompositeItemProcessor should handle null properly,BATCH-865,24183,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,03/Oct/08 12:55 PM,06/Oct/08 1:57 AM,10/May/19 2:37 AM,03/Oct/08 1:20 PM,2.0.0.M1,,,,,,2.0.0.M2,,,,,,,,0,,"Now that returning null from an ItemProcessor indicates filtering on an item, CompositeItemProcessor should return null if any processor in the chain returns null.",,;03/Oct/08 1:20 PM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,334195200,,,,,,5825,true,robert.kasanicky(robert.kasanicky),,,,0|i02jfz:,14859,14163,,,,,"03/Oct/08 1:20 PM;lucas.l.ward;Considering the new contract of ItemProcessor is that returning null means the item should be filtered, I changed the CompositeItemProcessor to return null if any processor in the chain does.  Otherwise, it forces the processors to handle null and passthrough.",06/Oct/08 1:35 AM;lucas.l.ward;reassigned for review.,,,,,,,,,,,,,,,,,,,,,
rename SkipLimitStepFactoryBean,BATCH-864,24173,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,02/Oct/08 9:54 PM,08/Oct/08 7:02 AM,10/May/19 2:37 AM,06/Oct/08 8:20 PM,,,,,,,2.0.0.M2,,,,,,,,0,,FaultTolerantStepFactory bean makes more sense?,,;06/Oct/08 8:20 PM;robert.kasanicky;900,,,,,,,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,334108800,,,,,,11775,true,lucas.l.ward(lucas.l.ward),,,,0|i03xk7:,22979,19445,,,,,"06/Oct/08 8:20 PM;robert.kasanicky;changed ""SkipLimit"" to ""FaultTolerant""",,,,,,,,,,,,,,,,,,,,,,
introduce LineMapper interface to encapsulate string-to-item mapping,BATCH-863,24171,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,02/Oct/08 7:39 PM,24/Oct/08 8:37 AM,10/May/19 2:37 AM,07/Oct/08 8:10 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"FlatFileItemReader should not mandate two-phase string-to-item mapping (tokenization + fieldset mapping). Instead it should pass the string and line number to LineMapper which will be responsible for creating a domain object (i.e. LineMapper<T> { T mapLine(String line, int lineNumber)}. Combination LineTokenizer + FieldSetMapper can be used in the default implementation. 

Once the change is implemented ResourceLineReader is expected to become redundant.",,;06/Oct/08 8:30 PM;robert.kasanicky;43200,;07/Oct/08 8:10 PM;robert.kasanicky;3600,,,,,,,,,,,,,86400,39600,46800,54%,86400,39600,46800,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,2008-10-09 09:12:34.037,11776,true,lucas.l.ward(lucas.l.ward),,,,0|i03ow7:,21575,18066,,,,,06/Oct/08 8:31 PM;robert.kasanicky;The change is now done. Remaining annoyance is that subversion is unwilling to rename RLR to FFIR although the original FFIR has been removed.,07/Oct/08 8:10 PM;robert.kasanicky;updated customerFilterJob to use DefaultLineMapper,07/Oct/08 8:10 PM;robert.kasanicky;reassigned for review,"09/Oct/08 9:12 AM;lucas.l.ward;I found a small bug when reviewing.  The old FFIR threw a FlatFileParseException if an error encountered while trying to tokenize or map a line.  This allowed someone to be able to easily skip all parse exceptions, and provided additional information in the case of an error.  While it's easier to log out now in the LineMapper, staying consistent with how it worked in 1.1 would be better, and I think provides more options if someone wants to catch the exception directly.",,,,,,,,,,,,,,,,,,,
Create changelog,BATCH-862,24157,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,02/Oct/08 3:53 AM,08/Oct/08 6:57 AM,10/May/19 2:37 AM,07/Oct/08 2:20 PM,2.0.0.M1,,,,,,2.0.0.M2,,,,,,,,0,,,,;07/Oct/08 2:20 PM;thomas.risberg;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,,11777,true,lucas.l.ward(lucas.l.ward),,,,0|i03xkf:,22980,19446,,,,,"08/Oct/08 6:57 AM;lucas.l.ward;I did a quick review and the changelog looks good.  It's more detailed than we've provided in the past, but it looks a bit more like the spring core change log.  We'll just need to make sure we provide a high level summary when we make the announcement.",,,,,,,,,,,,,,,,,,,,,,
Pause / resume of Job,BATCH-858,24150,22668,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,01/Oct/08 9:52 AM,30/Oct/08 12:02 AM,10/May/19 2:37 AM,21/Oct/08 9:54 PM,1.1.0,,,,,,2.0.0.M3,,,Core,,,,,0,,"Pause / resume of Job.  A job needs to be able to pause and resume, e.g. to wait for operator validation before completion, or to support asynchronous remote execution.",,;21/Oct/08 3:49 AM;robert.kasanicky;43200,;30/Oct/08 12:02 AM;david_syer;60,,,,,,,,,,,,,57600,0,43260,75%,57600,0,43260,,,,,,,,,,,,,,,21/Oct/08 3:38 AM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14780/mylyn-context.zip,,,,,,,,,,,332553600,,,,,2008-10-21 03:49:34.797,11781,false,david_syer(david_syer),,,,0|i03xkn:,22981,19447,,,,,"21/Oct/08 3:49 AM;robert.kasanicky;There is now working implementation of the pause functionality. I tried to do this in a straightforward manner first and now it's time to look how much design mess it brought and clean it up if necessary.

There are at least two issues that make me wonder:
- the logic concerned with JobExecution creation/continuation is now in two places (JobLauncher and JobRepository)
- pausing and interruption work the same way and AbstractJob distinguishes between the two by looking at JobExection's status, which seems a little fishy.","21/Oct/08 5:02 AM;david_syer;Looking at JobExecution.status is probably the best way we have to do this - it is a framework enum, and really it was designed for exactly this kind of use case.  So I am OK with that part - using BatchStatus as a message to reduce coupling is what it amounts to.  ConditionalJob (or similar) will need to consume the same kind of message.

I'll probably form an opinion about the create/continuation logic when I start using it.","21/Oct/08 9:54 PM;robert.kasanicky;If we decide to address the concerns discussed in the comments somehow I suppose those will be worth creating separate issues, so I'm resolving this one.","21/Oct/08 10:07 PM;robert.kasanicky;BATCH-886 is a follow up to address the ""the logic concerned with JobExecution creation/continuation is now in two places (JobLauncher and JobRepository)"" point from previous comments.","24/Oct/08 9:10 AM;lucas.l.ward;Robert,

I was doing a review of this today and I have a couple questions for you.  In the SimpleJobLauncher, you implemented pause such that, if the status of the last execution is Paused, you just reuse it.  This contrasts with how we handle restart, where we create a new JobExecution.  I understand what you were trying to do, since it seems like pausing should allow for resuming.  However, you lose information.  If you wanted to know what time the execution was paused, or started, you don't really know.  I suppose you could look at the last step to finish, and the first one to start, but even then if you resumed fairly quickly, there's no guarantee.  If you look at how we restart a step, it's the same thing (Unless I'm mistaken), we create a new StepExecution, the only difference is the new one has the ExecutionContext of the old.  I think we should remain consistent and create a new JobExecution in the Resume scenario as well.

The second thing is noticed is that you check for Pausing as being analogous to interruption.  Meaning, in the checkForInterruption method of SimpleJobRepository, you also check to see if the Execution was set to Pause, and if so, set the StepExecution to terminateOnly, which will cause the job to effectively interrupt.  It was my understanding that Pausing meant that a step finished successfully, but the job should end anyway.  I thought this was a major distinction between interruption and pause, meaning, pause will wait for the current step to finish and then pause the job, and interruption will stop the step at it's next chunk boundary.  Furthermore, because the Job is inspecting a returned Step for a status of PAUSED, and the Step is simply checking for isTerminateOnly and returning as STOPPED, I don't see how it could ever work.  In fact, I did a search, and no Step implementation even references BatchStatus.PAUSED.  I think the code should be modified to check for pause after a step completes and abending the Job as PAUSED.  (also, nulling out the end time in the SimpleLauncher is also a bad idea, IMHO)","24/Oct/08 9:12 PM;david_syer;Lucas: look at https://springframework.svn.sourceforge.net/svnroot/springframework/spring-batch/trunk/src/site/apt/cases/pause.apt.  I see the point about the audit trail, but in that case we need another feature because ew need a PartitionHandler to be able to pause / resume if it wants to without creating hundreds of JobExecutions.  Also a step should be able to pause if it wants to (although, as you point out, the main use case that we discussed previously has been a pause after a step).",,,,,,,,,,,,,,,,,
map daos need to be truly transactional for correct restart,BATCH-857,24143,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,robert.kasanicky,robert.kasanicky,01/Oct/08 12:07 AM,24/Oct/08 8:36 AM,10/May/19 2:37 AM,14/Oct/08 7:37 PM,1.1.2,2.0.0.M2,,,,,1.1.3,2.0.0.M3,,Core,,,,,0,,"Map daos keep references to mutable entities therefore they aren't truly transactional, regardless of using transactional maps. This leads to incorrect restart since the values stored in ExecutionContext don't reflect the rollback that preceded step failure.

The solution should be to clone the values before storing them, together with using the transactional collection wrappers.",,;14/Oct/08 2:37 AM;robert.kasanicky;14400,;14/Oct/08 7:38 PM;robert.kasanicky;7200,,,,,,,,,,,,,21600,0,21600,100%,21600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,333417600,,,,,2008-10-14 03:10:39.101,11782,true,lucas.l.ward(lucas.l.ward),,,,0|i03xkv:,22982,19448,,,,,"14/Oct/08 2:37 AM;robert.kasanicky;I've added the cloning functionality based on serialization in 2.0 trunk. The implementation is rather fragile (don't forget to make a copy each time), but I don't see an easy way to improve it. Maybe AOP cloning proxy could help that the factory bean would setup.

I'll be backporting the solution to 1.1.x, but wanted to have the code reviewed first.","14/Oct/08 3:10 AM;david_syer;I think it looks fine.  It might not port to 1.1.x if serialization isn't properly tested there for the underlying objects (I wouldn't bet on it).  This code is pretty stable, so I don't see an enormous benefit from adding AOP complexity just to prevent mistakes.  I'll close and assume you will pick up the 1.1.3 ticket.",14/Oct/08 3:16 AM;robert.kasanicky;reopened for 1.1.x backport,14/Oct/08 7:37 PM;robert.kasanicky;backported cloning in map daos to 1.1.x branch,,,,,,,,,,,,,,,,,,,
broken transactional item processing,BATCH-853,24089,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,25/Sep/08 2:31 AM,16/Oct/08 10:41 PM,10/May/19 2:37 AM,16/Oct/08 8:23 PM,2.0.0.M1,,,,,,2.0.0.M3,,,Core,,,,,0,,"Results of processing are buffered between transactions, which means in case of write failure causing rollback items don't get re-processed. In case processing is transactional this is obviously wrong behavior. We either need to fix this or document clearly as limitation.",,;15/Oct/08 11:04 PM;robert.kasanicky;43200,,,,,,,,,,,,,,28800,0,43200,150%,28800,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,333244800,,,,,,11786,true,david_syer(david_syer),,,,0|i03xlb:,22984,19450,,,,,25/Sep/08 11:40 PM;robert.kasanicky;added javadoc describing current limitations,07/Oct/08 8:12 PM;robert.kasanicky;The consensus is to assume processing is transactional i.e. do not buffer results of processing and document processing will be reapeated after rollback,08/Oct/08 1:58 AM;robert.kasanicky;added estimate of 1 day - although the change looks almost trivial the FaultTolerantTasklet implementation will need to change significantly.,"15/Oct/08 11:04 PM;robert.kasanicky;outputs of processing are no longer buffered, they are replaced with a list of skipped items that are removed from outputs before they are passed to the writer",16/Oct/08 6:10 PM;robert.kasanicky;testcase should be added for the described scenario,16/Oct/08 8:23 PM;robert.kasanicky;Added re-processing tasklet unit test and integration test within TaskletStep.,,,,,,,,,,,,,,,,,
Create documentation for JdbcPagingItemReader and related classes,BATCH-850,24076,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,23/Sep/08 3:38 PM,10/Nov/08 6:42 AM,10/May/19 2:37 AM,09/Oct/08 11:29 AM,2.0.0.M1,,,,,,2.0.0.M2,,,Documentation,,,,,0,,,,;09/Oct/08 11:28 AM;thomas.risberg;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,11789,true,lucas.l.ward(lucas.l.ward),,,,0|i01s5r:,10439,10421,,,,,"09/Oct/08 10:58 AM;lucas.l.ward;Thomas, I saw a commit go through on this issue, is it complete?  It's the last remaining open issue in M2.",,,,,,,,,,,,,,,,,,,,,,
Determine best way tto support a paging iBATIS reader,BATCH-848,24067,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,23/Sep/08 5:27 AM,24/Nov/08 6:04 AM,10/May/19 2:37 AM,24/Nov/08 6:04 AM,,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,The current impementation of the IbatisPagingItemReader will cause the entire query to be executed once for each page. There doesn't appear to be a simple solution for this and the PaginatedList is deprecated.  We need to review the best way to provide a paging reader that can support iBATIS mapping files.,,;27/Oct/08 3:51 AM;thomas.risberg;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,BATCH-760,,,,,,,,,,,,,,329875200,,,,,,11791,false,thomas.risberg(thomas.risberg),,,,0|i03xlz:,22987,19453,,,,,"24/Nov/08 6:03 AM;thomas.risberg;Support added via database specific queries and _skiprows#, _pagesize plus _page variable to be used in a LIMIT clause.",,,,,,,,,,,,,,,,,,,,,,
FaultTolerantChunkOrientedTasklet loses chunks when non-skippable exceptions thrown in read phase,BATCH-847,24061,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,thomas.risberg,thomas.risberg,22/Sep/08 6:18 AM,01/Oct/08 1:24 AM,10/May/19 2:37 AM,29/Sep/08 11:05 PM,1.1.2,2.0.0.M1,,,,,1.1.3,2.0.0.M2,,Core,,,,,0,,"FaultTolerantChunkOrientedTasklet loses chunks when non-skippable exceptions are thrown during the read phase.  This is true for exceptions thrown in Readers or in ItemListeners.  The RepeatTemplate doesn't see this as a fatal exception so it keeps going.  The chunk that was processed is lost and the reader picks up at the next record or page from where the failure occurred.

If there is an error in the SQL statement used for a JdbcPagingItemReader then the end result looks like there was nothing to process.

Having the read throw a fatal exception for any non-skippable exception would solve this specific issue.  Not sure of that would cause some other side effects.

",,;29/Sep/08 11:06 PM;robert.kasanicky;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,334713600,,,,,2008-09-22 18:20:12.877,5826,true,thomas.risberg(thomas.risberg),,,,0|i02jg7:,14860,14164,,,,,22/Sep/08 6:20 PM;david_syer;I think the way we handle this in the other implementations is to align the ExceptionHandler with the skip policy in the step factory bean.  Could that work here as well?,23/Sep/08 9:26 PM;robert.kasanicky;I've commited the most straightforward fix - wrapping a non-skippable exception on read as fatal. However using an exception handler in step operations that swallows exceptions unless they're fatal is an extremely fragile approach.,"23/Sep/08 10:32 PM;thomas.risberg;The ""org.springframework.batch.core.step.skip.SkipLimitExceededException: Skip limit of '0' exceeded"" looks a bit odd.  Maybe we could introduce a new fatal exception like a NonSkippableReadFailureException to make it easier to interpret the failure.","23/Sep/08 10:40 PM;robert.kasanicky;I was hesitating to introduce a new exception type for single usage, but agree the message is odd. I've left the issue open purposefully for now as I think we need to rethink the failure handling a bit and clean up the details then.","25/Sep/08 9:19 PM;robert.kasanicky;Rethinking how error-handling works is probably a topic for another issue. Do you think we should introduce a new exception just for the sake of this fix or can live with the ""Skip limit of '0' exceeded""? It probably doesn't matter much in trunk (I assume future changes will overwrite it anyway), but is more important for 1.1.3 release.",29/Sep/08 11:05 PM;robert.kasanicky;added a fatal NonSkippableReadException as suggested earlier to fix the awkward error message (in both 1.1.3 and 2.0),29/Sep/08 11:06 PM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,,
integration tests for database autodetection,BATCH-845,24057,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,22/Sep/08 2:36 AM,26/Sep/08 12:47 AM,10/May/19 2:37 AM,26/Sep/08 12:31 AM,,,,,,,2.0.0.M2,,,Core,,,,,0,,The database auto-detection feature should be tested with all supported databases.,,;26/Sep/08 12:31 AM;thomas.risberg;21600,,,,,,,,,,,,,,28800,7200,21600,75%,28800,7200,21600,,,,,,,,,,,,,,,,,,,,,,,,,,335059200,,,,,2008-09-25 16:37:09.174,5827,false,robert.kasanicky(robert.kasanicky),,,,0|i02jgf:,14861,14165,,,,,"22/Sep/08 2:40 AM;robert.kasanicky;The autodetection is now used in samples, so it's tested at least with HSQL for now","25/Sep/08 4:37 PM;thomas.risberg;Sample tests with auto-detect now pass on - HSQL, MySQL, Oracle, SQL Server, DB2, Derby",,,,,,,,,,,,,,,,,,,,,
Lacking of DAO's property setting in JobRepositoryFactoryBean,BATCH-844,24042,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,adrianshum,adrianshum,20/Sep/08 10:07 PM,30/Sep/08 10:32 AM,10/May/19 2:37 AM,21/Sep/08 10:02 PM,1.1.0,1.1.1,1.1.2,,,,1.1.3,2.0.0.M2,,,,,,,0,,"We have no way to set exitMessageLength property in the Step and Job Execution DAO created by JobRepositoryFactoryBean.

I am not sure if other property need to be exposed too.",,;21/Sep/08 10:02 PM;robert.kasanicky;2700,,,,,,,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,335404800,,,,,2008-09-21 22:02:28.919,5828,true,lucas.l.ward(lucas.l.ward),,,,0|i02jgn:,14862,14166,,,,,21/Sep/08 10:02 PM;robert.kasanicky;Added setter for exitMessageLength and used the same value for both job and step execution daos.,,,,,,,,,,,,,,,,,,,,,,
FlatFileItemWriter handling of failure in LineAggregator,BATCH-843,24038,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,19/Sep/08 2:16 AM,29/Sep/08 2:41 AM,10/May/19 2:37 AM,21/Sep/08 8:08 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,FFIW should first map all items to strings and only then write them. Currently failure in line aggregator can cause rollback when some lines from the current chunk are already written.,,;21/Sep/08 8:08 PM;robert.kasanicky;2700,;29/Sep/08 2:41 AM;thomas.risberg;600,,,,,,,,,,,,,3600,300,3300,91%,3600,300,3300,,,,,,,,,,,,,,,,,,,,,,,,,,334800000,,,,,,5829,true,thomas.risberg(thomas.risberg),,,,0|i02jgv:,14863,14167,,,,,21/Sep/08 8:08 PM;robert.kasanicky;all items are now aggregated first and only then comes the actual writing to file,29/Sep/08 12:57 AM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,,,,,,,
insufficient logging in AbstractStep,BATCH-841,23994,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,adrianshum,adrianshum,16/Sep/08 3:38 PM,17/Sep/08 6:51 AM,10/May/19 2:37 AM,16/Sep/08 7:16 PM,1.1.2,,,,,,1.1.3,2.0.0.M2,,Core,,,,,0,,"Currently, exception thrown in our logic (in reader/writer/tasklet) will propagate to AbstractStep and being logged.

However the logging is not sufficient for diagnosis, as call stack is missing.  It is now logged as:
logger.error(""Encountered an error executing the step: "" + e.getClass() + "": "" + e.getMessage());
I shall suggest:
logger.error(""Encountered an error executing the step: "" + e.getClass() + "": "" + e.getMessage(), e);
",,;16/Sep/08 7:17 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,335836800,,,,,2008-09-16 19:16:55.695,5831,true,lucas.l.ward(lucas.l.ward),,,,0|i02jhb:,14865,14168,,,,,"16/Sep/08 7:16 PM;robert.kasanicky;added the exception argument as suggested, thanks for reporting",,,,,,,,,,,,,,,,,,,,,,
Reference doc reference deprecated code: 'StatefulRetryStepFactoryBean' ,BATCH-839,23978,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,robert.kasanicky,magott,magott,15/Sep/08 9:40 PM,23/Sep/08 12:28 PM,10/May/19 2:37 AM,21/Sep/08 9:19 PM,1.1.0,,,,,,1.1.3,2.0.0.M2,,Documentation,,,,,0,,"In the reference doc under ""4.4.1.6. Configuring Retry Logic"" a reference is made to the deprecated StatefulRetryStepFactoryBean under the configuration showing, which is using the correct SkipLimitStepFactoryBean. It is not a big issue, but it makes the documentation confusing.

The actual reference is in the following sentence:
""The StatefulRetryStepFactoryBean requires a limit for the number of times an individual item can be retried, and a list of Exceptions that are 'retryable'.""",,;21/Sep/08 9:19 PM;robert.kasanicky;900,,,,,,,,,,,,,,1200,300,900,75%,1200,300,900,,,,,,,,,,,,,,,,,,,,,,,,,,335404800,,,,,2008-09-21 21:19:48.226,5832,true,lucas.l.ward(lucas.l.ward),,,,0|i01s5z:,10440,10422,,,,,"21/Sep/08 9:19 PM;robert.kasanicky;classname fixed, thanks for the report",,,,,,,,,,,,,,,,,,,,,,
TimeoutTerminationPolicy does not terminate when eof is encountered,BATCH-838,23972,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,ldelin,ldelin,15/Sep/08 1:48 AM,23/Sep/08 11:16 PM,10/May/19 2:37 AM,23/Sep/08 11:15 PM,1.1.2,,,,,,1.1.3,2.0.0.M2,,Core,,,,,0,,"The isCompleted methods of TimeoutTerminationPolicy (both the one implemented in the class and the one inherited from CompletionPolicySupport) does not seem to take end-of-file into account., They returns false until the timeout-time is up, even if the exitCode of the ExitStatus parameter changes to ""COMPLETED""  when an eof is reached (looking at the constants in ExitStatus I should have guessed that the status should be ""FINISHED""....). The result is lots of extra reads that all gets end-of-file.",,;23/Sep/08 11:16 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,335232000,,,,,2008-09-23 23:15:49.91,11794,true,robert.kasanicky(robert.kasanicky),,,,0|i03xm7:,22988,19454,,,,,"23/Sep/08 11:15 PM;robert.kasanicky;CompletionPolicySupport (i.e. default behavior) now first checks the exit status. If it is not continuable we're done, otherwise the decision is based on RepeatContext",23/Sep/08 11:16 PM;robert.kasanicky;Reassigned for review,,,,,,,,,,,,,,,,,,,,,
TransactionAttributes swallows Exceptions,BATCH-833,23951,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,lucas.l.ward,lucas.l.ward,11/Sep/08 11:06 AM,24/Oct/08 8:31 AM,10/May/19 2:37 AM,05/Oct/08 7:24 PM,1.1.2,2.0.0.M1,,,,,1.1.3,2.0.0.M2,,,,,,,0,,"If the TransactionAttributes determines that a Transaction shouldn't be rolled back, the exception is effectively swallowed:

try {
						exitStatus = tasklet.execute(contribution, attributes);
					}
					catch (Error e) {
						if (transactionAttribute.rollbackOn(e)) {
							throw e;
						}
						else {
							logger.error(""Ecountered error that should not cause rollback: "", e);
						}
					}
					catch (Exception e) {
						if (transactionAttribute.rollbackOn(e)) {
							throw e;
						}
						else {
							logger.error(""Ecountered error that should not cause rollback: "", e);
						}
					}

So, for example, if the TransactionAttributes are set to not rollback a SkipLimitExceededException, it won't be rolledback, effectively preventing it from going up to the StepOperations and causing the step to fail.  Of course, someone shouldn't think to do that, but it's just one example.  If someone sets any exception to be on the fatal list, but messes up and puts an exception in the attribute list to cause rollback, the step won't fail.

I propose that the rollback decision on transaction attribute be used solely to determine whether the transaction is committing, but that the exception should still be propagated up to the StepOperations to determine whether or not it should cause failure.",,;02/Oct/08 11:12 PM;robert.kasanicky;3600,;05/Oct/08 7:25 PM;robert.kasanicky;3600,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,17/Sep/08 8:38 AM;lucas.l.ward;mylyn-context.zip;https://jira.spring.io/secure/attachment/14683/mylyn-context.zip,,,,,,,,,,,334195200,,,,,2008-10-02 22:59:53.586,11799,true,lucas.l.ward(lucas.l.ward),,,,0|i03xnb:,22993,19458,,,,,"17/Sep/08 8:38 AM;lucas.l.ward;I've added a fix in 1.1, but not in trunk yet.  It's a bit odd, and it still seems somewhat weird that the TransactionAttribute is surrounding now just doExecute, but also flush() and update() as well.  Either way, in 1.1 if the TransactionAttribute determines that the exception shouldn't cause rollback, the transaction will still commit, and the repository will be updated, after which the exception will be thrown, allowing the step operations to make a decision as to whether or not the exception should cause failure or not, which makes much more sense, since transaction attribute shouldn't be making this determination and swallowing the exception.  There could still be some masking issues if doExecute and flush both have exceptions, but this is a problem anyway and one I can't see a way around.","18/Sep/08 3:41 PM;lucas.l.ward;Per our discussion on the phone today, I removed the TransactionAttributes around flush and update, and the call to chunkOperations, and moved it to surround the call to ItemHandler.","01/Oct/08 11:16 AM;lucas.l.ward;I have created another issue for some of the configuration issues: BATCH-859

For this issue, the consensus is to move the rollback check into the chunk, to prevent partial chunks, and resolve.",02/Oct/08 10:59 PM;robert.kasanicky;It turns out there already is rollback check in the chunk (retry template) so the rollback check in step is redundant assuming step was configured by the factory bean. Then all we need to do is remove the highlighted try/catch block. Or am I missing something?,05/Oct/08 7:24 PM;robert.kasanicky;removed redundant exception-swallowing catch blocks (twice in 1.1.x),05/Oct/08 7:24 PM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,,,
DefaultTransactionAttribute is inappropriate for TaskletStep,BATCH-832,23950,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,11/Sep/08 7:24 AM,08/Oct/08 2:41 PM,10/May/19 2:37 AM,06/Oct/08 6:57 PM,2.0.0.M1,,,,,,1.1.3,2.0.0.M2,,,,,,,0,,"The DefaultTransactionAttributes use in TaskletStep should not be used.  The problem is how it determines what should be rolledback:

	public boolean rollbackOn(Throwable ex) {
		return (ex instanceof RuntimeException || ex instanceof Error);
	}

This means that any checked exceptions will not cause a rollback.  This was fine in 1.1 given how way it was structured, it wouldn't be possible to get a checked exception, since it would have been wrapped first.  However, the Tasklet interface declares that it throws exception, so anyone using the TaskletStep for the same reasons they would have done so in 1.1 will get into an infinite loop if they throw a checked exception from their Tasklet.",,;05/Oct/08 7:45 PM;robert.kasanicky;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,334108800,,,,,2008-10-05 19:45:32.867,11800,true,lucas.l.ward(lucas.l.ward),,,,0|i03xnj:,22994,19459,,,,,05/Oct/08 7:45 PM;robert.kasanicky;overriden the rollbackOn(..) to return true by default.,05/Oct/08 7:46 PM;robert.kasanicky;reassigned for review,"06/Oct/08 2:45 AM;lucas.l.ward;I was just working with a client who had this cause an issue in 1.1.2, so I'm reopening to have it fixed in the branch as well. ",06/Oct/08 6:57 PM;robert.kasanicky;fix applied to 1.1.x branch as well,,,,,,,,,,,,,,,,,,,
id counter in MapJobInstanceDao should be declared static,BATCH-831,23944,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,11/Sep/08 12:57 AM,17/Sep/08 6:50 AM,10/May/19 2:37 AM,11/Sep/08 2:29 AM,1.1.2,,,,,,1.1.3,2.0.0.M2,,Core,,,,,0,,http://forum.springframework.org/showthread.php?t=60053,,;11/Sep/08 2:29 AM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,336355200,,,,,,5833,true,lucas.l.ward(lucas.l.ward),,,,0|i02jhj:,14866,14169,,,,,,,,,,,,,,,,,,,,,,,,,,,
DelegatingItemReader should be removed,BATCH-830,23939,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,pavel.zupa,pavel.zupa,10/Sep/08 5:08 PM,30/Sep/08 10:40 AM,10/May/19 2:37 AM,25/Sep/08 1:11 AM,2.0.0.M2,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"There have been a small logic mistake if I understand it right in adding generics to DelegatingItemReader. It's read method returns type T and the delegate must be of type T too. So there is no clean way to read eg. FieldSet from delegate and return some domain object, which is the purpose of this reader, isn't it?",,;25/Sep/08 1:12 AM;robert.kasanicky;5400,,,,,,,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,334627200,,,,,2008-09-10 18:17:18.88,11801,true,lucas.l.ward(lucas.l.ward),,,,0|i03xnr:,22995,19460,,,,,"10/Sep/08 6:17 PM;david_syer;Actually, DelegatingItemReader makes almost no sense in Spring Batch 2.0.  If you wanted to implement your use case, an ItemProcessor woul dbe more appropriate.  Does that make sense.",10/Sep/08 6:28 PM;robert.kasanicky;Agree - let's just remove the DelegatingItemReader then?,"10/Sep/08 7:00 PM;pavel.zupa;Of course, my mistake, I've been adding generics to some old classes and didn't realize their obsolete design.",25/Sep/08 12:30 AM;robert.kasanicky;changed the issue summary - remove the delegating reader instead of trying to fix it.,25/Sep/08 1:11 AM;robert.kasanicky;replaced ValidatingItemReader with ValidatingItemProcessor and removed DelegatingItemReader,29/Sep/08 12:58 AM;robert.kasanicky;reassigned for review,30/Sep/08 10:40 AM;lucas.l.ward;Looks good.  Having the validation in the processor definitely looks more natural.,,,,,,,,,,,,,,,,
add persistent processSkipCount to StepExecution,BATCH-829,23930,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,09/Sep/08 8:23 PM,01/Oct/08 2:43 AM,10/May/19 2:37 AM,09/Sep/08 9:30 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,"There already is processSkipCount in StepContribution, but the value is unused.",,;09/Sep/08 9:30 PM;robert.kasanicky;5400,,,,,,,,,,,,,,10800,0,5400,50%,10800,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,335232000,,,,,2008-09-23 12:24:38.695,5834,true,thomas.risberg(thomas.risberg),,,,0|i02jhr:,14867,14170,,,,,23/Sep/08 12:24 PM;lucas.l.ward;reassigned for review,,,,,,,,,,,,,,,,,,,,,,
org.springframework.batch.item.file.MultiResourceItemReader should allow for no resources,BATCH-828,23925,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,dmarzi,dmarzi,09/Sep/08 3:22 AM,06/Dec/10 1:44 PM,10/May/19 2:37 AM,12/Sep/08 1:35 AM,1.1.2,,,,,,1.1.3,2.0.0.M2,,Infrastructure,,,,,0,,"It's probably a common use case to have a job that is scheduled to poll a directory and import resources from it as soon as some are being put in there. When the directory is empty the job doesn't need to do anything and the job instance can just terminate itself without the involvement of any errors.

However, the MultiResourceItemReader will throw an exception if there are no resources to process. IMO use cases where this is the desired behavior should be less common than the above mentioned use case. Returning null on the first call of the read() method might be more useful as a default behavior. Or the behavior could be configurable if scenarios that require either behavior are both common enough.

",,;09/Sep/08 10:24 PM;robert.kasanicky;5400,;12/Sep/08 12:24 AM;robert.kasanicky;2700,,,,,,,,,,,,,7200,0,8100,112%,7200,0,8100,,,,,,,,,,,,,,,,,,,,,,,,,,265766400,,,,,2008-09-09 03:39:54.185,5835,true,evgenyg(evgenyg),,,,0|i02jhz:,14868,14171,,,,,"09/Sep/08 3:39 AM;lucas.l.ward;I think you're probably right.  We have a general requirement that readers finding no work to do should not fail, although it's slightly more complex in the case of file reading.  I believe we had said before that FileReaders not finding a file will fail, but if the file is empty it will still work.  We may want to rethink that, there are likely quite a few people that expect a lack of a file to mean there was no data to process.  However, it may be confusing if someone expected the file to be processed, and can't figure out why it wasn't.  (it's easier if the job fails with an exception indicating no file was found)  In theory though, it's not much different than the same scenario that's hitting a database and finding nothing.",09/Sep/08 10:24 PM;robert.kasanicky;Empty resource list is now handled gracefully - the fact that there are no resources to read is just logged.,"10/Sep/08 1:44 AM;lucas.l.ward;Robert, 

I think we should also make sure we're consistent with our other file readers.  The FlatFileItemReader will also fail if no file is found, which is inconsistent with the change just made.  I'm assuming it's the same  situation for the xml reader.  We also want to make sure that we are throwing an exception if the file isn't found in a restart scenario.","10/Sep/08 10:15 PM;robert.kasanicky;I think consistency is not an issue here - all readers require input resource to be set (notNull) but allow it to be empty. In MRIR it means that list of resources has to be set, but can be empty. For single-resource readers it means resource has to be set, but might have no content.

UPDATE: the single-resource readers also check whether the resource exists, so we can relax that.

I guess we can add the restart check in MRIR although it doesn't add much value - it is still up to the user to make sure the list of resources hasn't changed between job runs.","11/Sep/08 10:59 AM;lucas.l.ward;Robert,

I agree...the FFIR should check that the resource is not null, but not whether the resource exists, as you said.  

I also agree that users need to be careful that resources don't change between restart, with any item reader, but any help we can give them in determining what the error was is a good thing.","12/Sep/08 12:23 AM;robert.kasanicky;File readers now handle non-existing resources gracefully. 

I got a bit reluctant to adding the restart check - although it makes sense it is a rather arbitrary feature that doesn't solve the general problem (make sure the same resource is used on restart), so I'd prefer taking a lean approach and do nothing extra (we already log a warning for non-existing resource).",12/Sep/08 1:32 AM;lucas.l.ward;I think I understand what you're saying now given the separation between the reader and it's abstract class.,"01/Dec/10 9:21 AM;evgenyg;Hi all,

If I'd like MultiResourceItemReader to fail with an exception instead of logging ""No resources to read"" - can it be done today?
Thank you!","04/Dec/10 12:46 PM;robert.kasanicky;@Evgeny: overriding the open(..) method with something like this should do the trick:

{code}
public void open(ExecutionContext executionContext) throws ItemStreamException {
      super.open(executionContext);
      if (getCurrentResource() == null) {
          throw new ItemStreamException(""No resources to read"");
      }
}
{code}",04/Dec/10 1:45 PM;robert.kasanicky;Perhaps we can consider adding a 'strict' switch to MultiResourceItemReader to make the behavior configurable (something similar is already implemented in both FlatFileItemReader and StaxEventItemReader). Feel free to create a jira if you care about this.,"06/Dec/10 1:42 PM;evgenyg;Thanks! Overriding open() didn't work as ""resources"" is private in the base class. But the following worked:

{code}
public class MyMultiResourceItemReader<T> extends MultiResourceItemReader<T>
{
    private static final Log logger = LogFactory.getLog( MyMultiResourceItemReader.class );

    private boolean failOnNoResources = true;
    public boolean  failOnNoResources () { return this.failOnNoResources; }
    public void     setFailOnNoResources ( boolean failOnNoResources ) { this.failOnNoResources = failOnNoResources; }


    @Override
    public void setResources ( Resource[] resources )
    {
        boolean noResources = (( resources == null ) || ( resources.length < 1 ));

        if ( noResources && failOnNoResources())
        {
            throw new RuntimeException( ""No resources to read"" );
        }

        super.setResources( resources );

        if ( logger.isDebugEnabled())
        {
            logger.debug( String.format( ""Resources set: %s"", Arrays.toString( resources )));
        }
    }
}
{code}

Created a JIRA:
https://jira.springframework.org/browse/BATCH-1665
","06/Dec/10 1:44 PM;evgenyg;Ah, I see it is possible to use getCurrentResource() when overriding open(). So I have another question - when I override setResources () - can I get an original expression, like ""**/*.xml"" that was set as ""resources""? I would use this expression in an error message.",,,,,,,,,,,
Create Sample job for reading and writing headers and footers,BATCH-827,23923,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,09/Sep/08 1:49 AM,23/Sep/08 3:29 PM,10/May/19 2:37 AM,11/Sep/08 2:31 AM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,"We need a sample job that reads and writes headers and footers in order to both illustrate how it should be done to users, and to validate to ourselves that the approach is good.",,;11/Sep/08 2:32 AM;robert.kasanicky;10800,,,,,,,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,335232000,,,,,2008-09-11 02:31:51.641,5836,true,lucas.l.ward(lucas.l.ward),,,,0|i02ji7:,14869,14172,,,,,11/Sep/08 2:31 AM;robert.kasanicky;added headerFooterSample job to samples - it's a file-to-file job where header from input file is copied to output and footer with item count is added.,"23/Sep/08 3:29 PM;lucas.l.ward;I think the sample job is good.  We still have questions about the reader header and footer, but I'll close for now and any changes can be handleda s part of that issue.",,,,,,,,,,,,,,,,,,,,,
Modify JobLauncher contract to not throw exception on job failure.,BATCH-825,23917,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,08/Sep/08 8:20 AM,14/Oct/08 8:28 PM,10/May/19 2:37 AM,08/Oct/08 8:41 AM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,"JobLauncher currently has a contract that a failed job will throw an exception, while a successful one will return a JobExecution.  This can cause issues when values from the JobExecution are needed, such as the below forum post:

http://forum.springframework.org/showthread.php?t=59628",,;15/Sep/08 11:44 AM;lucas.l.ward;28800,;03/Oct/08 12:49 AM;robert.kasanicky;7200,;05/Oct/08 6:47 PM;robert.kasanicky;1800,review;14/Oct/08 8:28 PM;robert.kasanicky;3600,,,,,,,,,,,28800,16200,41400,143%,28800,16200,41400,,,,,,,,,,,,,,,16/Sep/08 9:41 AM;lucas.l.ward;mylyn-context.zip;https://jira.spring.io/secure/attachment/14680/mylyn-context.zip,,,,,,,,,,,333417600,,,,,2008-09-08 21:15:53.263,5838,true,robert.kasanicky(robert.kasanicky),,,,0|i02jin:,14871,14174,,,,,"08/Sep/08 9:15 PM;david_syer;The problem in the forum post is with CommandLineJobRunner, not JobLauncher.  I don't think we should change the latter without a lot more discussion.  The former can probably be changed in 1.1.","09/Sep/08 3:16 AM;lucas.l.ward;Dave,

I disagree.  The only way to change the CommandLineJobRunner, would be to launch asynchronously, hold on to a JobExecution, and sleep/wait until the execution is done, so that in the case of a failure if could pull the exit code from it, which is kind of ugly (unless I'm missing another way to do it).  This change would require that the SimpleJobLauncher has an AsyncTaskExecutor as it's default, which I think is far too big a change for a point release.  We would also want to think long and hard about the contract.  If the command line runner can't use it synchronously, it could be argued that the whole contract should be asynchronous only.

There's also the fact that non-sequential step execution will need this same change. (as we discussed in Philly)  If a step ends in failure, and there's a process to determine what should happen, (since the change fundamentally means that step failure doesn't necessarily mean job failure) that process will need the whole StepExecution, not just the exception that caused the failure.

Besides even these reasons, I think it makes more sense generally.   As long as we're able to create a JobExecution, we'll always return one, and it will be up to you to inspect it for status.  It also gives us more flexibility to report on the failure.  Right now, we have to do some funky logic to make sure we're throwing the actual exception that caused failure.  If we always return, even in failure, we can return a JobExecution, which contains all exceptions encountered during processing, and let them sort out what it means to them.","10/Sep/08 2:48 AM;lucas.l.ward;Another interesting thing I have found while working on this issue is that SimpleJob is ultimately determining what the status is of a StepExecution in a failure scenario, rather than the Step implementation setting it.  i think it's another reason why the Step should always return, even in a failure scenario.  The job should be inspecting what happened in the step from a status, rather than trying to figure it out from an exception.

There's also the matter of exceptions, which is think will be ever more important with non-sequential step execution.  Once the step is no longer throwing an exception for step failure, it should contain a list of encounteredExceptions, which the Job can then aggregate for itself.  This will be important when the failure of a step no longer necessarily means the failure of the job.  This will give clients of the launcher the ability to inspect the JobExecution (along with listeners, etc) to see any encountered exceptions even though the status is COMPLETED.","15/Sep/08 11:44 AM;lucas.l.ward;I have the step portion of this done, which wasn't as complex of a fix as I thought.  The job is remaining, which should be quick, then I'll do a quick commit, and do some more cleanup of exception handling from there.","16/Sep/08 9:41 AM;lucas.l.ward;I have committed the bulk of this fix.  For the most part, it's not as bad as I thought.  There will need to be some continued work to polish, but the overall approach is fairly solid.  The only part I would like some reviews on is the 'failureExceptions' list.  I think its implemented fine, but I'm curious about opinions on the name. 

There's also another issue.  I'm not sure if it makes sense anymore for the Listener interfaces to stay the same.  It seems to me that we could go down to having just an afterJob and afterStep method, and not have extra methods for failure and interruption.  This would fit with the new approach of requiring developers to inspect status on return, and alleviate some issues I've heard over and over again from clients about not understanding the difference between onErrorInJob (or step) and afterJob.  They feel confused by it, because more people seem to expect that afterJob will always be called.  I know we can address this with documentation, but I feel like it's much more straightforward to have just the afterJob method and let them do what they want by inspecting the status and exceptions.",01/Oct/08 7:42 PM;robert.kasanicky;Looks like this has already been implemented and the issue should be closed?,"03/Oct/08 12:48 AM;robert.kasanicky;I've removed onError callbacks in both job and step, afterStep/afterJob is called instead. After callbacks are now not expected to throw exceptions (they will be ignored-logged), one should instead manipulate the status.

What about onInterrupt - anybody cares about keeping it?",05/Oct/08 6:46 PM;robert.kasanicky;removed the remaining onInterrupt listener method,05/Oct/08 6:47 PM;robert.kasanicky;reassigned for review,"08/Oct/08 7:39 AM;lucas.l.ward;There still some cleanup that needs to be done here. I think we've violated a couple of bloch rules on exceptions (at least Item 57)  We're just throwing them to break from a loop or to have unnecessary flow control.

For example:

			// Need to check again for stopped job
			if (execution.getStatus() == BatchStatus.STOPPING) {
				throw new JobInterruptedException(""JobExecution interrupted."");
			}
			
This is right before the job finishes, with whatever status it was going to have.  Do we really need this?  I suppose they tried to stop it, but it happened in between the last step finishing and us saving.  Can't we just finish?  Second of all, throwing exceptions just to have them caught seems odd to me when it's at the end of a try block.
					
	","08/Oct/08 8:41 AM;lucas.l.ward;I did a little more cleanup on this, and am resolving it again.  SimpleJob had some odd flow.  It's still not perfect, but it's better.  There's a clear line developing for an AbstractJob in M3.

Reassigned to Robert for Review.",14/Oct/08 8:28 PM;robert.kasanicky;added logging of exception when they are being added to failure list,,,,,,,,,,,
New WRITE_COUNT should count items instead of chunks,BATCH-822,23888,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,thomas.risberg,thomas.risberg,05/Sep/08 1:16 AM,23/Sep/08 12:22 PM,10/May/19 2:37 AM,05/Sep/08 1:44 AM,,,,,,,2.0.0.M2,,,Core,,,,,0,,"I have a test processing 3 chunks of 10 - read_count = 29, filter_count = 1, commit_count = 3, write_count = 3 and I have 29 items processed in the db

the write_count should be 29 and not 3 if we are counting items",,;05/Sep/08 1:44 AM;robert.kasanicky;1200,,,,,,,,,,,,,,7200,0,1200,16%,7200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,336873600,,,,,2008-09-05 01:44:32.844,5839,true,lucas.l.ward(lucas.l.ward),,,,0|i02jiv:,14872,14175,,,,,05/Sep/08 1:44 AM;robert.kasanicky;changed the counter increment from 1 to items.size (count is updated after writing a list of items),,,,,,,,,,,,,,,,,,,,,,
remove EventSerializer/Deserializer abstractions and use Marshaller/Unmarshaller directly,BATCH-821,23881,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,04/Sep/08 7:15 PM,29/Sep/08 12:59 AM,10/May/19 2:37 AM,04/Sep/08 8:21 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,Serializer and Deserializer seem to only duplicate what Marshaller/Unmarshaller already provide.,,;04/Sep/08 8:22 PM;robert.kasanicky;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,BATCH-776,,,,,,,,,,,,,,336873600,,,,,,5840,true,robert.kasanicky(robert.kasanicky),,,,0|i02jj3:,14873,14176,,,,,04/Sep/08 8:21 PM;robert.kasanicky;removed the serializer/deserializer abstraction layer,,,,,,,,,,,,,,,,,,,,,,
Storing a Blob with JdbcExecutionContextDao in DB2,BATCH-820,23876,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,drvanland,drvanland,04/Sep/08 2:56 AM,17/Sep/08 6:48 AM,10/May/19 2:37 AM,04/Sep/08 6:42 AM,1.1.2,,,,,,1.1.3,,,Core,,,,,0,,"When storing an Integer into the 'OBJECT_VAL BLOB' field on the 'EXECUTION_CONTEXT' table I receive the exception below, seemingly caused by a 'Data Type Mismatch' (Also See Below) for the field.  Line 178 of the JdbcExecutionContextDao (lobCreator.setBlobAsBytes(ps, 5, SerializationUtils.serialize((Serializable) value));) can be changed to: 

byte[] b = SerializationUtils.serialize((Serializable) value );
lobCreator.setBlobAsBinaryStream( ps, 8, new ByteArrayInputStream( b ), b.length );

... and the problem seems to be resolved, however I am not sure how this would work on other databases.  It may be worthwhile to allow a flexibility of what LobHandler is used so that the user is not always forced into using the 'DefaultLobHandler'.  It seems that Spring recommends using the 'OracleLobHandler' for Oracle specific environments and allowing this flexibility could essentially lead a way around the problem for us, i.e. creating a 'DB2LobHandler' where we could change the behavior of the 'setBlobAsBytes'.

This seems to be a specific DB2 issue caused by trying to a 'ByteArray' into a Blob field where a Byte InputStream appears to store without issue.  The 'SQLWarning' trace below seems to be a side effect of this warning, however it in turn throws an exception that causes our job to rollback.

Log message:
2008-09-03 15:18:23,126 DEBUG [org.springframework.jdbc.core.JdbcTemplate] SQLWarning ignored: SQL state 'null', error code '0', message [Input data type mismatch, see chained exceptions; will retry execution using describe input information. Please change application to use an input data type that matches the database column type as required by JDBC semantics.]

Which then creates this Exception:
java.lang.Error: SQLWarning chain holds value that is not a SQLWarning
	at java.sql.SQLWarning.getNextWarning(SQLWarning.java:111)
	at org.springframework.jdbc.core.JdbcTemplate.handleWarnings(JdbcTemplate.java:1172)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:567)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:594)
	at TestBlobExceptionyUtil.testBlobHandler(TestExceptionDisplayUtil.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at org.springframework.test.ConditionalTestCase.runBare(ConditionalTestCase.java:76)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

Which has a root cause of:
com.ibm.db2.jcc.c.SqlException: DB2 SQL error: SQLCODE: -301, SQLSTATE: 42895, SQLERRMC: 8





",DB2 Version 8 (8.1.5 for OS/390),switched to use byte stream instead of byte array for the BLOB;04/Sep/08 6:40 AM;thomas.risberg;7200,,,,,,,,,,,,,,28800,0,7200,25%,28800,0,7200,,,,,,,,,,,,,,,04/Sep/08 3:08 AM;drvanland;TestBlobHandler.java;https://jira.spring.io/secure/attachment/14643/TestBlobHandler.java,,,,,,,,,,,336873600,,,,,,11804,true,lucas.l.ward(lucas.l.ward),,,,0|i04npz:,27217,21866,,,,,04/Sep/08 3:08 AM;drvanland;Unit Test demonstrating the issue and the possible fix.  Not included is the application context file used to set up the jdbcTemplate and the datasource.,,,,,,,,,,,,,,,,,,,,,,
Create and test ivy and maven files needed for build,BATCH-818,23874,23773,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,thomas.risberg,thomas.risberg,04/Sep/08 2:03 AM,29/Jan/09 7:23 PM,10/May/19 2:37 AM,29/Jan/09 7:23 PM,,,,,,,2.0.0.RC1,,,,,,,,0,,,,;01/Oct/08 9:57 AM;david_syer;7200,;29/Jan/09 7:20 PM;david_syer;86400,;29/Jan/09 7:23 PM;david_syer;21600,,,,,,,,,,,,28800,0,115200,400%,28800,0,115200,,,,,,,,,,,,,,,,,,,,,,,,,,324172800,,,,,2009-01-29 19:23:39.556,11806,false,david_syer(david_syer),,,,0|i03xpr:,23004,19469,,,,,29/Jan/09 7:23 PM;david_syer;ADded ivy.xml and build.xml (with Spring Build subdir in externals).,,,,,,,,,,,,,,,,,,,,,,
JobRepository should not require Step or Job (only their names),BATCH-814,23868,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,03/Sep/08 8:40 PM,23/Sep/08 12:29 PM,10/May/19 2:37 AM,05/Sep/08 4:28 AM,2.0.0.M2,,,,,,2.0.0.M2,,,Core,,,,,0,,It's a matter of encapsulation.  The repository responsibility should not intersect with the configuration concerns of Step and Job (or their execution concerns).  THis change is necessary for efficient partitioning of a step (where the name might be overridden for partitions).,,;05/Sep/08 4:29 AM;david_syer;9600,,,,,,,,,,,,,,3600,0,9600,266%,3600,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,336787200,,,,,,11810,false,lucas.l.ward(lucas.l.ward),,,,0|i0565r:,30204,27190,,,,,"05/Sep/08 4:28 AM;david_syer;Moved a method from JobExplorer to JobRepository (nice that the daos are used by both, so it was pretty easy).  Now the SimpleJobLauncher checks for restartability so the JobRepository doesn't need a reference to the Job.  There is a corner case that is not yet covered: if another thread or process manages to start, finish and fail the same job instance in between the restartable check and the job execution being created then a non-restartable job might be restarted.  It's probably safe to ignore that, but if we had to we could check again after the JobExecution is created to see if the instance already failed and make sure we aren't restarting.",,,,,,,,,,,,,,,,,,,,,,
Need to add DB2MainframeSequenceMaxValueIncrementer to DefaultDataFieldMaxValueIncrementerFactory,BATCH-810,23853,,Refactoring,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,lucas.l.ward,kdandu,kdandu,03/Sep/08 7:31 AM,08/Oct/08 7:05 AM,10/May/19 2:37 AM,25/Sep/08 3:51 AM,1.0.0,1.0.1,1.1.0,1.1.1,1.1.2,2.0.0.M1,1.1.3,2.0.0.M2,,Core,,,,,0,,"Due to the DB2 Mainframe flavor has different sql needs compared to regular DB2, the DB2MainframeSequenceMaxValueIncrementer needs to be added to the DefaultDataFieldMaxValueIncrementerFactory.",All,added db2zos to 1.1 branch;25/Sep/08 3:50 AM;thomas.risberg;7200,added db2zos to trunk;25/Sep/08 3:51 AM;thomas.risberg;7200,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,335059200,,,,,2008-09-03 08:42:51.001,11813,false,lucas.l.ward(lucas.l.ward),,,,0|i02093:,11750,11676,,,,,03/Sep/08 8:42 AM;thomas.risberg;If you have access to a DB2 mainframe installation could you tell me what the getDatabaseProductName method on the DatabaseMetaData returns.,08/Sep/08 1:12 PM;kdandu;It is DB2 z/os v8,"23/Sep/08 6:32 AM;lucas.l.ward;At a minimum, we can make sure the factory supports it, I have also scheduled it to be fixed in 1.1.3 and M2.

I don't think DB2 z/os v8 is the product name from the meta data....although it could be, did you pull this value from actually trying it in code?","25/Sep/08 12:58 AM;thomas.risberg;I added a ""db2zos"" option to the 1.1 branch",25/Sep/08 3:51 AM;thomas.risberg;both trunk and 1.1 branch have beem updated with new db2zos option,,,,,,,,,,,,,,,,,,
fixedLenghtTokenizer problem with 1.1.2,BATCH-809,23852,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,hailspring,hailspring,03/Sep/08 6:36 AM,23/Sep/08 12:21 PM,10/May/19 2:37 AM,03/Sep/08 7:16 PM,1.1.2,,,,,,1.1.3,2.0.0.M3,,Infrastructure,,,,,0,,"More on this at the following thread:
http://forum.springframework.org/showthread.php?t=59580

Lucas,

My concern is if the user is specifying in the range definition (whatever the max is), that from 1-200 is the range, then I believe even if the line value is of length 5 it should allow to read 1-200 with 195 spaces at the end. 

The definition of fixed length file is determined by the range defined by the user?

It should get the maxRange either from the range definition in xml (tokenizer) or there should be a property (say maxRange) which we can configure from xml. It should not allow anything beyond that, if the user has defined the range which means s/he is expecting atleast one line to be of that range.

Following code should be generic and should satisfy all the users:

- First if condition avoids lines which are greater than maxRange (can include isLineLengthFixed here too)
- Second condition if the user is expecting fixed length but line is less than expected then throw exception
- Else process the record

if(maxRange < lineLength) {
throw exception
} else if (maxRange > lineLength && isLineLengthFixed) {
throw exception
} else {
process the record
}",,;04/Sep/08 3:36 AM;david_syer;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,335404800,,,,,2008-09-03 19:16:08.969,11814,false,lucas.l.ward(lucas.l.ward),,,,0|i0565z:,30205,27191,,,,,"03/Sep/08 7:16 PM;david_syer;Javadocs:

""If the last range is open then the rest of the line is read into that column (irrespective of the strict flag setting).""

""Public setter for the strict flag. If true (the default) then lines must be precisely the length specified by the columns. If false then shorter lines will be tolerated and padded with empty columns, and longer strings will simply be truncated.""

","04/Sep/08 3:27 AM;hailspring;Dave, thanks for looking into this! There is one more option. I would propose to introduce a new Tokenizer in the framework, say ""VariedLengthTokenizer"" which wouldnt worry about the max or min length in the line. Just a thought! 

This way we can keep the FixedLenghtTokenizer as it is without modifying it. You must be having better understanding about the other users need, so any option is ok with me.","17/Sep/08 7:05 AM;lucas.l.ward;Dave,

I was just doing a quick review of this issue before closing when I noticed you did an extra commit in trunk that refines the property editor a bit.  it doesn't look like anything that breaks backwards compatibility, but it wasn't replicated into the branch as well.  Was there a reason for this, or was it just an oversight?",21/Sep/08 3:40 AM;david_syer;I didn't want to make the same change in the branch because it wasn't necessary.  So intentional.,,,,,,,,,,,,,,,,,,,
Resurrect ResourceLineReader,BATCH-806,23836,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,01/Sep/08 7:50 PM,24/Oct/08 8:37 AM,10/May/19 2:37 AM,25/Sep/08 9:11 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"Resurrect ResourceLineReader.  It's occasionally quite useful to have a raw line reader - and now that ItemProcessor can be used to transform it, it makes a lot of sense.",,;25/Sep/08 9:11 PM;robert.kasanicky;28800,,,,,,,,,,,,,,7200,0,28800,400%,7200,0,28800,,,,,,,,,,,,,,,24/Sep/08 10:59 PM;robert.kasanicky;806.patch;https://jira.spring.io/secure/attachment/14714/806.patch,,,,,,,,,,,334800000,,,,,2008-09-22 16:38:03.025,11817,true,lucas.l.ward(lucas.l.ward),,,,0|i055nj:,30122,27092,,,,,"22/Sep/08 4:38 PM;lucas.l.ward;I'm moving this to M2, since Robert has already committed a new ResourceLineReader.  I did a quick review, and have a couple of comments.  

1. I think we have the same code about returning null on the first call to read if the resource doesn't exist in multiple readers now.  Maybe there's a way we can remove this duplication?

2. What's the deal with the comments?  I'm assuming you just pulled this from a previous revision of the framework and it was there, but looking at it, I can't imagine the use case.  Although, I suppose just because I've never ran into it doesn't mean it isn't needed.

I understand where you're coming from with wondering how to poperly integrate this with the FFIR.  I suppose it seems like it should fit in naturally as the mechanism for reading lines, but I would imagine it ends up a bit more complicated than that.  We could try it to work through any of the issues though.  Off the top of my head, line numbering could be an issue.  We could just count calls to read, but there could be some issues.  Another solution might be inheritance, although I hesitate to do that unless we have to.","22/Sep/08 7:05 PM;robert.kasanicky;1. I think we should deal with ""does the resource exist?"" question outside of the reader. It just doesn't make sense to even instantiate a reader if there's nothing to read from. The ugliness cumulates as the resource non-existance affects inevitably both open() and read() methods. Maybe we should just go back to making resource existence compulsory and advocate using a resource locator that returns a dummy empty resource if there's no input?

2. yes, we've had the comments around for long. I suppose it was added for a usecase, it looks like reasonable functionality to me.

I'm looking into how to handle the duplications with FFIR best.","23/Sep/08 5:30 AM;lucas.l.ward;Robert, after our discussion earlier today, I did some more investigation.  I'm not sure what I was thinking about with the covariant return, which certainly won't work when the superclass is returning a String.  I think the only sensible option here is composition, but I agree with you about passing setters through, which seems like an anti-pattern.  However, I don't like forcing people to do the transformation outside either.  Therefore, I think the best approach is a simple FactoryBean for the reader.  If they don't want to use it, they don't have to, and they could easily wire in their own mapper and tokenizer in the processor if they so choose.

I still don't understand the reason for the comments, I'll take a note to ask Dave about it.  I'm really interested to hear the use case.","24/Sep/08 10:59 PM;robert.kasanicky;Attached so far the best effort to reuse RLR inside FFIR. I'm not very happy about the outcome. Trying to use RLR as an injectable property of FFIR doesn't work very well because RLR needs then to be registered as ItemStream separately and make sure the ordering is right - RLR needs to be open before FFIR can be open. And finally FFIR tries to setup column names from header line, which is broken in restart scenario (it's impossible to initialize RLR first, read the header and only then make it jump to restart position).

So the attached version instantiates RLR inside FFIR and passes setter to configure it. There were still tweaks necessary in the RLR - FFIR needs to know the line number and resource description for reporting in case of failure. The ugliest part is the restart header handling - in restart scenario RLR is first open with fake empty context so that the header can be read and column names setup, then it is closed and reopened with the real context. Still I'm not sure there is a good way to detect restart scenario anyway - FFIR just check whether the context is empty, but obviously it doesn't know the restart key used by RLR and there's no guarantee some other item stream doesn't add something to context on open.

Overall I'm not sure getting rid of the duplications is worth the mess introduced along the way.",25/Sep/08 2:21 AM;david_syer;I wouldn't push it too hard if it feels wrong.  There's no harm in a bit of duplication sometimes.  If RLR is not injectable does that make it harder to support non line-oriented flat files (e.g. that crazy one line file that came up on the forum a while ago)?,"25/Sep/08 9:11 PM;robert.kasanicky;Crazy files can always be handled by using custom ItemReader<String> with tokenization and fieldset mapping in ItemProcessors. I don't think it's any harder than using FFIR, just different.

I'm resolving the issue as I don't see any good way to really improve the implementation and the needed functionality is covered.",29/Sep/08 1:01 AM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,,
Check noRollbackFor semantics in item/chunk oriented tasklets,BATCH-805,23834,23807,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,david_syer,david_syer,01/Sep/08 6:34 PM,29/Sep/08 1:00 AM,10/May/19 2:37 AM,09/Sep/08 8:35 PM,2.0.0.M2,,,,,,2.0.0.M2,,,Core,,,,,0,,Check noRollbackFor semantics in item/chunk oriented tasklets.  We aren't always checking for the user's rollback preferences.  It's probably most important for an ItemProcessor (which also means I guess that ValidatingItemReader should be removed / replaced by an ItemProcessor).,,;09/Sep/08 9:29 PM;robert.kasanicky;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,336441600,,,,,2008-09-08 20:58:56.369,5842,true,robert.kasanicky(robert.kasanicky),,,,0|i02jjj:,14875,14178,,,,,"08/Sep/08 8:58 PM;robert.kasanicky;All I can currently find related to noRollbackFor preferences are a few lines in TaskletStep. Does the issue imply there should be more handling added?

Still what I found seems strange: 
1. TaskletStep silently swallows exceptions that shouldn't cause rollback - should at least log them?
2. exception from ItemStream.update is handled the same way as business exception  - I guess it should be always fatal?","08/Sep/08 9:12 PM;david_syer;I think more handling is what is probably needed.  The semantics are one thing - if a user has specified noRollbackFor, they will expect such exceptions not to cause a rollback.  Maybe this is already covered - I just want to check it and test it more thoroughly.  The other thing is to make sure that a chunk is only ever completely successful (including skips) or completely fails, causing a rollback.   I'm not sure that is implemented and/or properly tested.

The two numbered observations are probably also worth consideration as issues and fixing.","09/Sep/08 8:35 PM;robert.kasanicky;The noRollbackFor behavior seems to work correctly - here's a summary of improvements made along the way:

1. exceptions that do not cause rollback are logged
2. ItemStream.update exceptions are not considered for no-rollback treatment
3. added rollback tests for exceptions in ItemProcessor",,,,,,,,,,,,,,,,,,,,
Stateless retry should not have to check for rollback classification,BATCH-804,23833,23807,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,01/Sep/08 6:32 PM,01/Sep/08 7:54 PM,10/May/19 2:37 AM,01/Sep/08 7:54 PM,2.0.0.M2,,,,,,2.0.0.M2,,,Core,,,,,0,,Maybe push rollback classifier onto stack?,,;01/Sep/08 7:54 PM;david_syer;2400,,,,,,,,,,,,,,14400,0,2400,16%,14400,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,337132800,,,,,,11818,false,david_syer(david_syer),,,,0|i056en:,30244,27245,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add non-buffering ChunkOrientedTasklet (or option in existing one) plus flag for factory bean,BATCH-803,23832,23807,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,01/Sep/08 6:31 PM,30/Sep/08 12:14 AM,10/May/19 2:37 AM,30/Sep/08 12:13 AM,2.0.0.M2,,,,,,2.0.0.M2,,,Core,,,,,0,,"Add non-buffering ChunkOrientedTasklet (or option in existing one) plus flag for factory bean.  This is for transactional ItemReaders (JMS principally) which re-present their items after a rollback.  Test with transactional list.  It should be easy to do the simple step, but might prove difficult to extend to retry and skip.  To support rtey and skip, individual items have to be recognised (maybe something like ItemKeyGenerator has to come back or lift itself back out of the retry.interceptor package), and the processing order / strategy changes depending on whether a failed item is present in a chunk or not.",,Split tasklet implementation into separate simple and fault-tolerant. Added non-buffered fault-tolerant implemenation.;21/Sep/08 10:53 PM;robert.kasanicky;115200,;30/Sep/08 12:14 AM;robert.kasanicky;7200,,,,,,,,,,,,,28800,0,122400,425%,28800,0,122400,,,,,,,,,,,,,,,19/Sep/08 12:11 AM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14695/mylyn-context.zip,,,,,,,,,,,334713600,,,,,2008-09-25 20:55:38.815,11819,true,robert.kasanicky(robert.kasanicky),,,,0|i05647:,30197,27176,,,,,"25/Sep/08 8:55 PM;robert.kasanicky;There is now separate NonbufferingFaultTolerantTasklet implementation. It assumes transactional reader and unknown ordering of items after rollback. Therefore it doesn't track skipped items in Chunk, but uses instance variables. There is currently an obvious problem with reuse of a single instance of this class, as there is no good way to clean the failed items buffers at the end (no close hook). I suppose tasklets were meant to be stateless and store state in the Attributes, but I find this mechanism very unconvenient to use. Given that tasklet implementations have injectable properties that can be stateful I think externalizing state into Attributes doesn't really help?","29/Sep/08 2:11 PM;david_syer;I'm confused.  There should be no need for a failed item buffer if this is a non-buffering implementation?  And skips should be handled by the retry framework.  Doesn't StepExecutionListener provide a close hook?

P.S. I wish the classname was camel cased as NonBuffering*.  Is it possible to change now without doing violence to SVN?","29/Sep/08 6:25 PM;robert.kasanicky;The non-buffering in this case relates to items read, not items failed. To make skip work failed items need to be recognized - the simple approach used here is to buffer them and require proper equals implementation. In the FaultTolerantTasklet skips are encapsulated in the Chunk which is buffered across rollbacks. Unless I've missed something, for JMS input this approach doesn't make sense because the chunk is literally re-read and item ordering is not guaranteed to be the same after rollback (i.e. we can't make assumptions about what items we get after rollback).","29/Sep/08 10:53 PM;david_syer;I would prefer it if the skip were handled the same way as the buffered case, which is at the level of the factory bean for the step - the Tasklet should be secondary, if not irrelevant.  Stateful retry was *designed* for this use case so it has to work.  And we really must strive to make our framework classes stateless wherever we can.  I know there are some which are not, but there is no reason in principle why they should not become thread-safe in some restricted way (there is a technical challenge I admit).  But we are just making big trouble for multi-threaded use cases if we don't take steps to make things stateless where possible.",30/Sep/08 12:13 AM;robert.kasanicky;Skipped items are now remembered in the attributes passed-in by the step (instead of instance variables).,30/Sep/08 12:13 AM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,,,
Add parameter support to paging item readers,BATCH-800,23816,23423,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,thomas.risberg,thomas.risberg,31/Aug/08 3:26 AM,23/Sep/08 5:58 AM,10/May/19 2:37 AM,18/Sep/08 1:28 AM,,,,,,,2.0.0.M2,,,,,,,,0,,,,added parameterValues map support;31/Aug/08 3:37 AM;thomas.risberg;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,337046400,,,,,2008-08-31 17:50:20.298,11821,false,lucas.l.ward(lucas.l.ward),,,,0|i0568f:,30216,27204,,,,,31/Aug/08 3:39 AM;thomas.risberg;Work done on this issue was marked with BATCH-760 in the SVN commits,31/Aug/08 5:50 PM;david_syer;Isn't this a duplicate of BATCH-282?  I.e. won't all components get this support when that is done?,03/Sep/08 1:27 AM;thomas.risberg;This one addresses just the ability for the paging readers to accept parameters.  BATCH-282 addresses feeding in parameters and BATCH-801 was better covered by BATCH-282.,,,,,,,,,,,,,,,,,,,,
Deprecate DrivingQueryItemReader support in favor of PagingItemReaders,BATCH-799,23815,23423,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,31/Aug/08 3:25 AM,24/Oct/08 8:45 AM,10/May/19 2:37 AM,31/Aug/08 3:37 AM,,,,,,,2.0.0.M2,,,,,,,,0,,,,;31/Aug/08 3:36 AM;thomas.risberg;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,335145600,,,,,2008-09-23 05:57:15.427,11822,false,lucas.l.ward(lucas.l.ward),,,,0|i055nb:,30121,27091,,,,,"23/Sep/08 5:57 AM;lucas.l.ward;Sorry about that, I didn't look close enough.  I see that you've labeled them as deprecated, but I think since it's a major release, there isn't much wrong with removing them all together.  ",24/Sep/08 6:34 AM;thomas.risberg;I've linked to the issue in RC1 for removing these classes.  Can you review and close this issue?,,,,,,,,,,,,,,,,,,,,,
Tidy up chunk processing and retry,BATCH-798,23807,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,29/Aug/08 2:26 AM,06/Oct/08 11:23 PM,10/May/19 2:37 AM,06/Oct/08 11:23 PM,2.0.0.M3,,,,,,2.0.0.M3,,,Core,,,,,0,,,,;02/Sep/08 3:24 AM;david_syer;28800,,,,,,,,,,,,,,28800,0,28800,100%,100800,0,182400,,,,,,,,,,,,,,,,,,,,,,,,,,337478400,,,,,,11823,false,nhill(nhill),,,,0|i04npb:,27214,21863,,,,,,,,,,,,,,,,,,,,,,,,,,,
typos in javadoc @links and comments,BATCH-796,23788,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,robert.kasanicky,bradfritz,bradfritz,28/Aug/08 2:55 AM,23/Sep/08 12:30 PM,10/May/19 2:37 AM,01/Sep/08 11:21 PM,1.1.2,2.0.0.M1,,,,,2.0.0.M2,,,Documentation,,,,,0,,"While reading the Spring Batch javadocs, I noticed a few @links like so:
{code}
(@link Job)
{code}

that should probably be:
{code}
{@link Job}
{code}

(Curly braces instead of parenthesis.)

The attached patch fixes the @link javadocs and a ""Barr"" instead of ""Bar"" comment typo.",,;01/Sep/08 11:22 PM;robert.kasanicky;900,,,,,,,,,,,,,,600,0,900,150%,600,0,900,,,,,,,,,,,,,,,28/Aug/08 2:56 AM;bradfritz;spring_batch_javadoc_and_comment_typo_fixes.patch;https://jira.spring.io/secure/attachment/14610/spring_batch_javadoc_and_comment_typo_fixes.patch,,,,,,,,,,,337132800,,,,,2008-09-01 23:21:51.498,5845,true,lucas.l.ward(lucas.l.ward),,,,0|i01s6n:,10443,10425,,,,,28/Aug/08 2:56 AM;bradfritz;patch to fix javadoc @links and comment typos,"01/Sep/08 11:21 PM;robert.kasanicky;typos corrected, thanks for the patch.",,,,,,,,,,,,,,,,,,,,,
JdbcJobExecutionDao output sorting,BATCH-795,23784,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,pavel.zupa,pavel.zupa,27/Aug/08 7:22 PM,29/Sep/08 7:34 AM,10/May/19 2:37 AM,03/Sep/08 8:04 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,"There is minor bug in JdbcJobExecutionDao.findJobExecutions(JobInstance jobInstance). JobExecutionDao's javadoc says that executions returned from this method are sorted bacwards by start time, but there is no ORDER BY clause in sql query so executions are sorted the wrong way. I didn't see ORDER BY anywhere in the file so maybe other methods should be checked too.",,;03/Sep/08 8:04 PM;robert.kasanicky;1800,,,,,,,,,,,,,,600,0,1800,300%,600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,334800000,,,,,2008-08-27 23:48:21.206,5846,true,thomas.risberg(thomas.risberg),,,,0|i02jjz:,14877,14180,,,,,"27/Aug/08 11:48 PM;david_syer;It's more a bug in the Javadocs really, but they should be sorted by create date or by primary key (same thing really).",28/Aug/08 6:04 AM;lucas.l.ward;We don't have any order by statements in any of the find* or get* methods in the Daos.  We probably need to pick something to sort by and make sure it's documented in the javadocs.,28/Aug/08 10:39 PM;david_syer;Lucas: look again at the Daos.  There are quite a few order by clauses - added recently to support the behaviour described in the JobExplorer Javadocs I think.  In general we sort by id (asc or desc depending on the query).,02/Sep/08 12:27 AM;robert.kasanicky;For now I've just removed the javadoc - I think the DAOs are for internal use and the ordering wasn't used anywhere. How about making the return type Set instead of a List? If the ordering doesn't matter it makes more sense and makes explicit there can't be duplicates.,"02/Sep/08 4:46 PM;pavel.zupa;Robert: I don't think it's a good idea to label those DAOs as internal ... they are the only way to obtain info on batches that are not running. We are developing user interface to control batch tasks and to be able to present historical info we would have to write our own daos to access BATCH_ tables. And about the Set thing... Why to give up information already obtained and convert from List to Set? And again we are using this to present user with list of finished instances (chronologically ordered), their executions and steps. I believe we are not alone doing it this way. I don't like the idea of writing our own DAO objects.",03/Sep/08 8:04 PM;robert.kasanicky;OK then - ordering now works as originally stated in the javadoc.,"04/Sep/08 8:03 AM;lucas.l.ward;Robert,

I just did a quick review of this fix, and I agree with using create time to sort.  I'm wondering if we shouldn't take this a little bit further and took a hard look at the JobExplorer interface and the DAO's it interacts with.  (along some of the same lines of what we discussed with Dave today)  It seems very weird to me that we have multiple ways in which lists of executions are returned:

List<JobExecution> findJobExecutions(JobInstance jobInstance);

Set<JobExecution> findRunningJobExecutions(String jobName);

which corresponds to the same thing in JobExecutionDao, and the following in JobOperator:

Set<Long> getRunningExecutions(String jobName) throws NoSuchJobException;

I'm not sure I understand why the running executions would be a Set but all the executions for an instance would be a List?  I suppose it's technically possible for multiple instances of a job to be launched at the same time, but a List still makes more sense to me, and having exact times would almost be impossible since it's a timestamp stored at the milisecond level (not that it's important for our uses to differentiate though)

I'm still not sure about this interface as well.  I know we talked about it in Philly, but it still seems like a list of all Executions that are running would be more useful. (although I know you could do the same with a combination of a few calls)  Also, considering what we've done with interruption it seems like we also should be able to see all interrupted executions, etc.  Perhaps this should be a new issue, but it's just some of my thoughts as I looked through the interface.",29/Sep/08 1:04 AM;robert.kasanicky;reassigned for review,,,,,,,,,,,,,,,
Automatically detect database type in JobRepositoryFactoryBean,BATCH-792,23720,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,21/Aug/08 9:13 AM,22/Sep/08 2:53 AM,10/May/19 2:37 AM,08/Sep/08 3:43 AM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,"The JobRepositoryFactoryBean doesn't have to require a database type to be set, it can figure this out on it's own:

this.databaseProductName = JdbcUtils.commonDatabaseName(
				JdbcUtils.extractDatabaseMetaData(dataSource, ""getDatabaseProductName"").toString());
				
However, we should still provide a mechanism for overriding this choice by setting the value.",,;08/Sep/08 3:43 AM;lucas.l.ward;14400,,,,,,,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,335404800,,,,,2008-09-21 19:09:38.899,5847,true,robert.kasanicky(robert.kasanicky),,,,0|i02jk7:,14878,14181,,,,,"08/Sep/08 3:43 AM;lucas.l.ward;This issue has been resolved.  There were a few tangential changes as well.  I ultimately created an enum for DatabaseTypes, that I used in a few other places in the code that needed this functionality. (PagingQueryProvider, etc)",18/Sep/08 3:44 PM;lucas.l.ward;Reassigned for review.,21/Sep/08 7:09 PM;robert.kasanicky;We probably need integration tests for this functionality. Mock-based tests don't give confidence things are going to work in real-life usage.,,,,,,,,,,,,,,,,,,,,
Fix Parallel Sample to use a batch update for process indicator,BATCH-785,23642,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,17/Aug/08 9:14 PM,29/Sep/08 1:11 AM,10/May/19 2:37 AM,25/Sep/08 11:32 PM,1.0.0,,,,,,2.0.0.M2,,,Samples,,,,,0,,,,;25/Sep/08 11:33 PM;robert.kasanicky;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,335059200,,,,,2008-09-25 23:32:50.587,5851,true,robert.kasanicky(robert.kasanicky),,,,0|i01o1b:,9771,9801,,,,,25/Sep/08 11:32 PM;robert.kasanicky;updated the StagingItemWriter to use JdbcTemplate.batchUpdate(..),,,,,,,,,,,,,,,,,,,,,,
Refactor testing chapter to reflect Spring Testing framework changes.,BATCH-784,23634,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,15/Aug/08 7:20 AM,23/Sep/08 3:47 PM,10/May/19 2:37 AM,03/Sep/08 10:57 PM,,,,,,,2.0.0.M2,,,Documentation,,,,,0,,,,;04/Sep/08 2:09 AM;robert.kasanicky;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,336960000,,,,,2008-09-03 22:57:12.114,5852,true,lucas.l.ward(lucas.l.ward),,,,0|i01s6v:,10444,10426,,,,,03/Sep/08 10:57 PM;robert.kasanicky;updated the code listings and commentary,,,,,,,,,,,,,,,,,,,,,,
changelog for 1.1.2 release,BATCH-781,23596,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,12/Aug/08 11:24 PM,23/Sep/08 12:27 PM,10/May/19 2:37 AM,12/Aug/08 11:32 PM,,,,,,,,,,Core,Documentation,Infrastructure,Samples,,0,,,,;12/Aug/08 11:32 PM;robert.kasanicky;2700,,,,,,,,,,,,,,3600,900,2700,75%,3600,900,2700,,,,,,,,,,,,,,,12/Aug/08 11:32 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14536/mylyn-context.zip,,,,,,,,,,,338860800,,,,,,5854,true,lucas.l.ward(lucas.l.ward),,,,0|i01o1j:,9772,142,,,,,,,,,,,,,,,,,,,,,,,,,,,
RFC: make FieldSetMapper and LineAggregator extend ItemProcessor,BATCH-779,23576,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,11/Aug/08 8:14 PM,09/Oct/08 8:28 AM,10/May/19 2:37 AM,08/Oct/08 10:17 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,Infrastructure,,,,0,,"FieldSetMapper and LineAggregator are really just specializations of the ItemProcessor interface (with much more descriptive method names of course). 

Maybe we can move these transformations into the processing part of the step? FlatFileItemReader would then be just FieldSetReader or even ResourceLineReader (LineTokenizer could be ItemProcessor too afterall). FlatFileItemWriter would implement ItemWriter<String>.

Given item processing/transforming is going to become first class citizen in step logic I think readers and writers can stay out of the transformation business and just return/write the item in the most primitive form (e.g. logical line).",,;28/Sep/08 10:46 PM;robert.kasanicky;3600,;08/Oct/08 10:17 PM;robert.kasanicky;1800,,,,,,,,,,,,,3600,0,5400,150%,3600,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,2008-08-11 22:02:13.968,11831,true,lucas.l.ward(lucas.l.ward),,,,0|i055x3:,30165,27136,,,,,"11/Aug/08 10:02 PM;david_syer;Kind of makes sense.  Things are cozy right now for simple use cases, so we don't want to spoil that, but for anything non-trivial you end up doing loads of work inside an ItemProcessor anyway, so it feels weird to have Passthrough* plugged into the readers and writers in those cases.","12/Aug/08 12:44 AM;lucas.l.ward;The problem would be one of consistency I think.  The Jdbc item readers couldn't really do this, because ResultSet is a connected object, same thing with hibernate/JPA, etc.  We *could* do it with the XML reader by returning a bunch of events, but I don't think it makes sense there really.  I'm not sure we should confuse parsing with transforming or processing.  Having every other reader return an 'item', but the flat file version return a String, doesn't make much sense and is fairly inconsistent.  What we might be able to do is to 'de-simplify' the reader and bring bank the LineReader, which could be used by the FFIR.  This would allow most people to use the FFIR, but allow for direct usage of the LineReader to allow for cases like yours above (which *should* be the vast minority).","15/Aug/08 11:15 PM;david_syer;I would be OK with FlatFileItemReader implements ItemReader<String>.  IMO it doesn't make the contract fuzzy - on the contrary, that's what parameterised types are for.  But if we are going to leave it as it is, then ResourceLineReader should come back as a standalone (not necessarily used by FFIR).","28/Sep/08 10:45 PM;robert.kasanicky;I've made FieldSetMapper, LineTokenizer and LineAggregator extend ItemProcessor. This way they are not limited to their original scope as collaborators of FFIR/FFIW (I didn't touch the design of FFIR/FFIW as I was proposing above). The obvious tradeoff is a more vague method name 'process', but I think this is perfectly acceptable e.g.

""FieldSet fs = lineTokenizer.process(line);"" is not less clear than ""FieldSet fs = lineTokenizer.tokenize(line);""",28/Sep/08 10:45 PM;robert.kasanicky;Reassigned for review,"02/Oct/08 5:52 AM;lucas.l.ward;Given the latest changes in BATCH-719, does it really make sense for these interfaces to extend ItemProcessor?","08/Oct/08 7:08 AM;lucas.l.ward;Considering the new changes in BATCH-863, I'm not sure this change makes sense anymore.  I disliked it before, and I think the LineMapper changes resolve any of the other concerns about access to a String.",08/Oct/08 6:06 PM;david_syer;I agree.  And the FieldSetMapper ought to have an method called mapX.,08/Oct/08 10:17 PM;robert.kasanicky;reverted to original method names,"09/Oct/08 8:28 AM;lucas.l.ward;I made a slight change to FieldSetMapper, since RowMapper is mapRow, and LineMapper is mapLine, I thought mapFieldSet would be more consistent than just map() (unless we changed mapLine to also be just map)  Other than that, it looks good, so I'm closing.",,,,,,,,,,,,,
MapJobRepositoryFactoryBean shouldn't require transactionManager,BATCH-778,23571,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,michelz,michelz,11/Aug/08 4:43 AM,30/Nov/08 8:40 AM,10/May/19 2:37 AM,30/Sep/08 11:17 PM,1.1.0,1.1.1,,,,,2.0.0.M1,,,Core,,,,,0,,"If you're using:

<bean id=""jobRepository""
		class=""org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"" />

This exception occurs:

java.lang.IllegalArgumentException: TransactionManager must not be null

This is because MapJobRepositoryFactoryBean extends AbstractJobRepositoryFactoryBean (same as JobRepositoryFactoryBean) and this
abstract class require a TransactionManager set. (in afterPropertiesSet method)

I believe the TransactionManager  should be requiered only for JobRepositoryFactoryBean, because only in this we have database operations involved.",,;12/Aug/08 10:17 PM;robert.kasanicky;2700,;30/Sep/08 11:16 PM;robert.kasanicky;900,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,329356800,,,,,2008-08-11 08:09:16.656,5855,true,michelz(michelz),,,,0|i02jl3:,14882,14185,,,,,"11/Aug/08 8:09 AM;david_syer;Sounds reasonable, but your assumption turns out to be false - a transaction manager is required so that changes to the repository roll back if there is an exception.","11/Aug/08 9:39 PM;david_syer;Actually, on second thoughts, technically the MapJobRepoitoryFactoryBean doesn't need the transaction manager.  But the step will, so there isn't a big deal specifying it unnecessarily.  I'll re-open and we can tidy this up later. ","23/Sep/08 3:42 PM;lucas.l.ward;I'm a bit confused as to the status of this issue.  In Dave's last comment, he seemed to think it was okay to have the transaction manager the map repository, but looking at the code change, it looks like it's been moved to just the database version of the repository.",23/Sep/08 8:08 PM;robert.kasanicky;Tx manager wasn't really necesary so I removed it. Looking at the code again I suppose there's no point in using transactional collection wrappers in the implementation either.,"30/Sep/08 10:55 PM;robert.kasanicky;reopened to tidy up the transactional collection wrappers used in map daos - there's no point in using them, it's just confusing","30/Sep/08 11:16 PM;david_syer;I think that would be a mistake.  Unless I'm missing something, the call to updateExecutionContext() must be transactional for restart to work.  The Step is going to handle the transaction for us, so we still don't need a transaction manager in the Map repository factory, but the backing store (Map in this case) has to be transaction aware",30/Sep/08 11:17 PM;robert.kasanicky;removed the redundant transactional collection wrappers,"30/Sep/08 11:37 PM;robert.kasanicky;Dave,

since we're just modyfing a single ExecutionContext object during step execution, there is no way to achieve transactional behavior in the map repository. Using the transactional wrappers allows us to rollback adds/removes from the collections, but not changes in the stored objects. So I believe the transactional wrappers are just misleading, unless I've missed something.",01/Oct/08 12:13 AM;robert.kasanicky;It turns out map daos need to be transactional to restart correctly: BATCH-857 is a follow up,28/Nov/08 5:33 AM;jdigger;This has re-appeared in M3.  The only work-around in an all-memory environment is to use ResourcelessTransactionManager.,"30/Nov/08 3:02 AM;david_syer;That's not a workaround - it's the only way to preserve restartability. Maybe this could be the default setting, or the exception message could suggest it as a possible course of action.  But there is no bug that has ""re-appeared"" as far as I can see.","30/Nov/08 8:40 AM;michelz;I like the ideia of default setting. 
Maybe if we have a namespace configuration for 2.0.0 release we can do something like (configuring the ResourcelessTransactionManager automaticly):

<batch:mapJobRepository/>

or

<batch:jobRepository type=""map"" />

",,,,,,,,,,,
Parametrise RetryCallback and related interfaces,BATCH-777,23569,22651,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,11/Aug/08 4:15 AM,25/Aug/08 6:48 PM,10/May/19 2:37 AM,25/Aug/08 6:47 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,,,;25/Aug/08 6:48 PM;david_syer;50400,,,,,,,,,,,,,,57600,0,50400,87%,57600,0,50400,,,,,,,,,,,,,,,,,,,,,,,,,,337737600,,,,,,11832,false,david_syer(david_syer),,,,0|i056gn:,30253,27255,,,,,25/Aug/08 6:47 PM;david_syer;Done.  Substantial re-org of RetryOperations and RetryPolicy also undertaken.,,,,,,,,,,,,,,,,,,,,,,
StaxEventItemWriter headers should not have to be the same type as the T that the writer is parameterised with,BATCH-776,23555,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,09/Aug/08 1:03 AM,29/Sep/08 1:12 AM,10/May/19 2:37 AM,04/Sep/08 10:20 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,StaxEventItemWriter headers should not have to be the same type as the T that the writer is parameterised with.  They could be anything that the Marshaller understands. ,,;04/Sep/08 10:21 PM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,BATCH-821,,,,,,,,,,,,09/Aug/08 1:04 AM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/14528/mylyn-context.zip,,,,,,,,,,,336873600,,,,,2008-08-11 19:42:39.684,5856,true,robert.kasanicky(robert.kasanicky),,,,0|i02jlb:,14883,14186,,,,,"11/Aug/08 7:42 PM;robert.kasanicky;The problem with arbitrary headers is that we are not using Marshaller directly but a generified Serializer abstraction. Maybe we can add another Serializer for headers, but it looks a bit like overkill.",11/Aug/08 9:53 PM;david_syer;I don't get why we need the extra layer of abstraction.  Can't the ItemWriter deal directly with a Marshaller?,"11/Aug/08 10:04 PM;robert.kasanicky;As far as I can remember the design goes back to Arjen reviewing the original code that used directly Marshaller and saying it was 'obsessed with OXM'. Maybe not tying the reader to Spring-WS has some value, but I've never heard anybody ever took advantage of that.",04/Sep/08 10:19 PM;robert.kasanicky;This can be fixed after removing the Serializer abstraction and using Marshaller directly,04/Sep/08 10:20 PM;robert.kasanicky;header items are now declared as List<?> (with a javadoc comment that Marshaller needs to support the type),,,,,,,,,,,,,,,,,,
Throw exception if ExecutionContext is modified during processing.,BATCH-775,23472,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Aug/08 7:23 AM,29/Sep/08 7:33 AM,10/May/19 2:37 AM,18/Sep/08 4:29 PM,1.1.1,,,,,,2.0.0.M2,,,Core,,,,,0,,"The ExecutionContext should not be modified during processing.  Essentially, it shouldn't be touched except within chunk boundaries.  This is because a rollback could happen and the framework would have no way to revert changes to the context reliable (or aggregate changes for that matter)",,;18/Sep/08 4:29 PM;lucas.l.ward;3600,,,,,,,,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,335664000,,,,,,11833,true,thomas.risberg(thomas.risberg),,,,0|i0564f:,30198,27177,,,,,"18/Sep/08 4:29 PM;lucas.l.ward;I added a check in TaskletStep before ItemStream#update is called to make sure the context hasn't been modified, and the flag is cleared when each new chunk starts.",18/Sep/08 4:29 PM;lucas.l.ward;Reassigning for review.,,,,,,,,,,,,,,,,,,,,,
Split item count into read/write/filter,BATCH-774,23471,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,07/Aug/08 4:40 AM,08/Oct/08 7:14 AM,10/May/19 2:37 AM,03/Sep/08 7:09 PM,,,,,,,2.0.0.M2,,,,,,,,0,,Split item count into read/write/filter.,,;03/Sep/08 7:09 PM;robert.kasanicky;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-09-03 19:09:18.284,10689,true,lucas.l.ward(lucas.l.ward),,,,0|i04ctj:,25451,21464,,,,,03/Sep/08 7:09 PM;robert.kasanicky;read/filter/write counts are now persisted instead of item count,23/Sep/08 12:17 PM;lucas.l.ward;assigning for review.,"08/Oct/08 7:14 AM;lucas.l.ward;I played with this quite a bit while creating the customerFilterJob, and it works really well.  It's definitely nice to have the flexibility to look at all those counts.",,,,,,,,,,,,,,,,,,,,
Refactor and extend ExportedJobLauncher to JobOperator,BATCH-773,23470,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,07/Aug/08 2:19 AM,06/Oct/08 11:39 PM,10/May/19 2:37 AM,06/Oct/08 11:28 PM,2.0.0.M1,,,,,,2.0.0.M2,,,Core,,,,,0,,,,;12/Aug/08 11:02 PM;david_syer;43200,;17/Aug/08 7:40 PM;david_syer;10800,Checked JMX demo and tidied a few things;06/Oct/08 11:27 PM;david_syer;7200,,,,,,,,,,,,28800,0,61200,212%,32400,3600,61200,,,BATCH-453,,,,,,,,,,,,17/Aug/08 7:42 PM;david_syer;mylyn-context.zip;https://jira.spring.io/secure/attachment/14549/mylyn-context.zip,,,,,,,,,,,334108800,,,,,2008-08-18 12:44:09.747,11834,false,nhill(nhill),,,,0|i034cn:,18247,17591,,,,,17/Aug/08 6:43 PM;david_syer;N.B. had to use long (not Long) in interface params (http://bugs.sun.com/view_bug.do?bug_id=6704904) so that JConsole can invoke those methods.,17/Aug/08 7:41 PM;david_syer;All finished except the stop() method which needs BATCH-453 to be fixed first.,"18/Aug/08 12:44 PM;lucas.l.ward;Dave,

I looked through the code for this today in detail.  For the most part, the methods look fine, and I think any major methods we miss can be added, or existing ones tweaked over the next few months.  The one thing that seems missing is pulling back the step execution information with it.  Isn't having a running JobExecution useless without it's StepExecution (that's actually running?)  I would expect when using the interface that a JobExecution that is listed as running would have all the StepExecutions with it, or at least some way to get the information separately.  

I keep going back and forth on the interfaces and implementations, in some ways I like it, in others I don't, but in thinking on it again, I might be okay with it, etc.  I think I just need to build an actual client against these interfaces to see how it stacks up.  (I suppose you're already doing some of the same via JConsole)

I can take a crack at BATCH-453 tomorrow as well.","18/Aug/08 6:19 PM;david_syer;Step execution info is provided by Map<Long, String> getStepExecutionSummaries(long executionId).  You see from that all the step executions associated with a job execution (more than one might be running).  Isn't that what you need?  I can't test the whole thing in JConsole yet because of BATCH-453 (but it's assigned to Thomas and I am happy to wait for him, so don't start on that unless you really want to).",06/Oct/08 11:28 PM;david_syer;Assigned for review.  N.B. there is an issue outstanding issue (BATCH-834) to add a new related feature.,,,,,,,,,,,,,,,,,,
Upgrade CommandLineJobRunner to use args4j,BATCH-772,23469,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Won't Fix,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Aug/08 2:18 AM,10/Nov/08 8:07 AM,10/May/19 2:37 AM,30/Sep/08 12:32 AM,,,,,,,2.0.0.M2,,,Core,,,,,0,,,,;28/Sep/08 11:57 PM;robert.kasanicky;3600,,,,,,,,,,,,,,28800,25200,3600,12%,28800,25200,3600,,,BATCH-773,,,,,,,,,,,,,,,,,,,,,,,334713600,,,,,2008-09-28 23:56:51.299,11835,true,lucas.l.ward(lucas.l.ward),,,,0|i03slz:,22177,18643,,,,,28/Sep/08 11:56 PM;robert.kasanicky;Looking at CLJR I don't really see a benefit in using a CLI library - there are just few straightforward lines of code. After skimming through the sample at https://args4j.dev.java.net/sample.html my impression is args4j would just add an unnecessary layer of magic in our case.,30/Sep/08 12:32 AM;robert.kasanicky;reassigning for review so that the issue can be reopened if desired,,,,,,,,,,,,,,,,,,,,,
Create documentation for JPA Reader,BATCH-769,23465,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,lucas.l.ward,lucas.l.ward,07/Aug/08 1:09 AM,23/Sep/08 3:38 PM,10/May/19 2:37 AM,08/Aug/08 4:38 AM,1.1.1,,,,,,2.0.0.M1,,,Documentation,,,,,0,,,,added some documentation for JpaPagingItemReader and JpaAwareItemWriter;08/Aug/08 4:16 AM;thomas.risberg;7200,,,,,,,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,335232000,,,,,,11838,true,lucas.l.ward(lucas.l.ward),,,,0|i01s73:,10445,10427,,,,,"23/Sep/08 3:38 PM;lucas.l.ward;I did a quick review and everything looks good, although I think we need to add the jdbc paging stuff as well, but I'll create a separate issue for that.",,,,,,,,,,,,,,,,,,,,,,
Update documentation for M1,BATCH-768,23464,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Blocker,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Aug/08 1:07 AM,23/Sep/08 6:35 AM,10/May/19 2:37 AM,15/Aug/08 7:27 AM,1.1.1,,,,,,2.0.0.M1,,,Documentation,,,,,0,,,,;13/Aug/08 4:38 PM;lucas.l.ward;7200,;15/Aug/08 7:26 AM;lucas.l.ward;21600,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,338601600,,,,,,11839,true,lucas.l.ward(lucas.l.ward),,,,0|i01s7b:,10446,10428,,,,,"13/Aug/08 4:39 PM;lucas.l.ward;I spent a couple of hours working on this and there was more to update than I thought.  However, I should be able to finish it up tomorrow.","15/Aug/08 7:27 AM;lucas.l.ward;The docs have been updated as best I could for M1.  I left the ItemTransformer section somewhat as is, since there may be changes here in m2.  I also added some of the code samples for the reference documentation to the samples, so they can stay in sync with the codebase.",,,,,,,,,,,,,,,,,,,,,
Update documentation for M2,BATCH-767,23463,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Blocker,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Aug/08 1:06 AM,24/Oct/08 8:32 AM,10/May/19 2:37 AM,09/Oct/08 10:58 AM,2.0.0.M1,,,,,,2.0.0.M2,,,,,,,,0,,,,;09/Oct/08 10:56 AM;lucas.l.ward;57600,,,,,,,,,,,,,,108000,0,57600,53%,108000,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,333849600,,,,,,11840,true,lucas.l.ward(lucas.l.ward),,,,0|i055nr:,30123,27093,,,,,"09/Oct/08 10:58 AM;lucas.l.ward;I've updated about as much of the documentation as I'm willing to for M2, mostly in chapter 2 and 3.  I'm not willing to touch chapter 4 right now, with all the changes coming up in M3.  (same goes for the meta data appendix)",,,,,,,,,,,,,,,,,,,,,,
Insufficient error handling in case of a missing resource for a org.springframework.batch.item.xml.StaxEventItemWriter,BATCH-766,23462,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,thomas.risberg,dmarzi,dmarzi,07/Aug/08 12:02 AM,08/Oct/08 7:12 AM,10/May/19 2:37 AM,10/Aug/08 8:43 PM,1.1.1,,,,,,1.1.2,2.0.0.M1,,Infrastructure,,,,,0,,"Using an ItemOrientedStep with the following combination of ItemReader and ItemWriter

                   ... <!-- other tags -->

	<bean id=""testFileItemReader""
		class=""org.springframework.batch.item.xml.StaxEventItemReader"">
		<property name=""fragmentRootElementName"" value=""record"" />
		<property name=""resource"" value=""classpath:doesntexist.xml"" />
		<property name=""fragmentDeserializer"">
			<bean
				class=""org.springframework.batch.item.xml.oxm.UnmarshallingEventReaderDeserializer"">
				<constructor-arg ref=""jaxb2Marshaller"" />
			</bean>
		</property>
	</bean>

	<bean id=""jaxb2Marshaller""
		class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
		<property name=""contextPath""
			value=""${context.path}"" />
		<property name=""schema"" value=""classpath:${input.schema}"" />
	</bean>

	<bean class=""org.springframework.batch.item.xml.StaxEventItemWriter""
		id=""testFileItemWriter"">
		<property name=""resource""
			value=""file:${output.resource}"" />
		<property name=""serializer"" ref=""marshallingSerializer"" />
		<property name=""rootTagName"" value=""records"" />
		<property name=""overwriteOutput"" value=""true"" />
	</bean>

	<bean
		class=""org.springframework.batch.item.xml.oxm.MarshallingEventWriterSerializer""
		id=""marshallingSerializer"">
		<constructor-arg ref=""jaxb2Marshaller"" />
	</bean>

will lead to a NullPointerException in the execution of the ItemWriter if the resource configured for the ItemReader doesn't exist (for example due to an unintentional typo). 

This behavior makes it rather difficult to analyze the error and find the true cause. There should be a more sophisticated error handling if the StaxEventItemReader can't find its resource.

Log entry:

ERROR AbstractStep                   - Encountered an error executing the step: class org.springframework.batch.core.UnexpectedJobExecutionException: Failed to initialize the step
ERROR AbstractStep                   - Exception while closing step execution resources
java.lang.NullPointerException
	at org.springframework.batch.item.xml.StaxEventItemWriter.flush(StaxEventItemWriter.java:463)
	at org.springframework.batch.item.xml.StaxEventItemWriter.close(StaxEventItemWriter.java:373)
	at org.springframework.batch.item.support.CompositeItemStream.close(CompositeItemStream.java:90)
	at org.springframework.batch.core.step.item.ItemOrientedStep.close(ItemOrientedStep.java:435)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:226)
	at org.springframework.batch.core.job.SimpleJob.execute(SimpleJob.java:100)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:86)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:81)
	at com.tsystems.favbg.batch.job.TestJobTest.testLaunchJob(TestJobTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at org.springframework.test.ConditionalTestCase.runBare(ConditionalTestCase.java:76)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
",,;10/Aug/08 10:50 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,334627200,,,,,2008-08-10 20:43:17.622,11841,true,lucas.l.ward(lucas.l.ward),,,,0|i055yv:,30173,27146,,,,,10/Aug/08 8:43 PM;robert.kasanicky;Added assertion that resource.exists in open(..),30/Sep/08 10:29 AM;lucas.l.ward;reassigned for review.,,,,,,,,,,,,,,,,,,,,,
StepExecution should be saved on every commit,BATCH-765,23454,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,06/Aug/08 8:43 AM,13/Aug/08 1:36 AM,10/May/19 2:37 AM,12/Aug/08 8:26 PM,1.1.1,,,,,,1.1.2,2.0.0.M1,,Core,,,,,0,,"StepExecution is saved when step starts and updated when step ends, but it is not being updated after chunk is commited. This means the statistics such as item_count are reflected in the database only once the step has finished executing.",,;11/Aug/08 12:32 AM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,12/Aug/08 8:27 PM;robert.kasanicky;mylyn-context.zip;https://jira.spring.io/secure/attachment/14535/mylyn-context.zip,,,,,,,,,,,338947200,,,,,2008-08-12 00:53:42.915,5857,true,lucas.l.ward(lucas.l.ward),,,,0|i02jlj:,14884,14187,,,,,11/Aug/08 12:32 AM;robert.kasanicky;StepExecution is now updated after every chunk commit.,"12/Aug/08 12:53 AM;lucas.l.ward;Robert,

I was just reviewing this fix when I noticed that the update that's saving the StepExecution isn't wrapped in a try/catch block like the update to the execution context.  Furthermore, the update is done after the commit, which seems odd since it has the item count, etc.  It seems to me that the update that stores the StepExecution should be immeadiately after the update that stores the ExecutionContext (and within the same try/catch block)",12/Aug/08 1:07 AM;robert.kasanicky;This is intentional - StepExecution update comes after the transaction commit due to the OptimisticLockingFailureException we were getting if commit failed (StepExecution's update was rolled back in the database so we had incorrect version number in the domain object).,"12/Aug/08 1:37 AM;lucas.l.ward;As discussed over the phone, we still need to be wrapping the call to update.  One alternative may also be to do some of this exception handling in the JobRepository implementation, which makes more sense to me, although it wouldn't be required.",,,,,,,,,,,,,,,,,,,
Truncate flatfile in restart scenarios.,BATCH-764,23452,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Won't Fix,robert.kasanicky,lucas.l.ward,lucas.l.ward,06/Aug/08 6:54 AM,14/Oct/08 8:31 PM,10/May/19 2:37 AM,05/Oct/08 7:27 PM,1.1.1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"There may be scenarios in which the FlatFileItemWriter has flushed, but the current transaction isn't committed, there may be extra data in the file.  For this reason, in a restart scenario, the file pointer should be moved to the correct location, and then the rest of the file truncated, in case there's data remaining.",,;02/Oct/08 8:10 PM;robert.kasanicky;1800,,,,,,,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,334195200,,,,,2008-09-08 10:42:34.61,5858,true,robert.kasanicky(robert.kasanicky),,,,0|i02jlr:,14885,14188,,,,,"08/Sep/08 4:03 AM;lucas.l.ward;I was going to start working on this issue, when I looked into the writer implementation and saw that it had already been fixed.  However, I'm curious about the implementation.  If it finds a descrepancy between the number of bytes that should be in the file, and the actual size, it throws an ItemStreamException, which will effectively stop the job.  Is this what we what to happen?  It seems like we can actually recover from this error by truncating the file to where it's supposed to be.  However, I can understand the point of view that something unexpected happened and we should bomb.","08/Sep/08 10:42 AM;wxlund;I don't see an issue with taking the path of recovery rather than bomb out.  I'm trying to picture what the developer or ops person would do and it would seem like they either know to truncate the file or start the job over.  Why don't we recover for them.
","30/Sep/08 10:52 AM;david_syer;I think the implementation takes the view that the file output stream should never have been flushed unless the last transaction was clean.  If there was a rollback and a flush then there was a system or internal error, so it seems like all we can do is barf and ask for user intervention.","01/Oct/08 10:56 PM;robert.kasanicky;Currently FFIW only throws exception if the filesize is *smaller* than expected, otherwise the file is truncated. However now that we're using a transactional buffered writer any kind of mismatch is unexpected. So I'm in favor of throwing an exception instead of truncating.","01/Oct/08 11:05 PM;david_syer;Me too.  It should never happen.  If there is a mismatch we can't trust the file position or the file size (either could be wrong), so truncating silently would be bad.  Lucas pointed out however that since the step/job protects us from restarting a job that failed owning to a commit failure, this exception will never be thrown in practice, and therefore we could just leave it as it is, since anyone using the FFIW outside a job might actually want the truncation behaviour.  That would argue in favour of a flag to determine whether or not to truncate, defaulting to false.","02/Oct/08 8:09 PM;robert.kasanicky;It turns out there's a problem with footer. It is always written on close() and truncated on restart, so file size is actually expected to be bigger than the restart point. I don't see an easy way around this and unless we can find one I guess we can leave FFIW as it is.",05/Oct/08 7:27 PM;robert.kasanicky;Agreed to take no action and live with the footer truncation.,,,,,,,,,,,,,,,,
Create callback for header and footer writing in xml and flat files,BATCH-763,23451,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,06/Aug/08 6:36 AM,08/Oct/08 7:17 AM,10/May/19 2:37 AM,08/Sep/08 8:21 PM,1.1.1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"Create a callback for writing header and footer information to a flat file or xml file.  In the case of a flat file, we just need the string that should be written out.",,;08/Sep/08 8:21 PM;robert.kasanicky;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-09-08 20:21:03.968,11842,true,lucas.l.ward(lucas.l.ward),,,,0|i055yn:,30172,27145,,,,,"11/Aug/08 7:49 AM;lucas.l.ward;The same should be done for reading as well:

http://forum.springframework.org/showthread.php?t=58520","08/Sep/08 8:21 PM;robert.kasanicky;There is now header and footer support in flat file and xml writers.

Support in readers is tricky: how should we detect headers and footers? In flat file case should the recordSeparatorPolicy apply to header&footer (it does not currently). If we really want to provide header&footer support in readers let's create a new issue for that.","09/Sep/08 1:52 AM;lucas.l.ward;Robert,

I just did a quick review of the change to FlatFileItemWriter, and I'm wondering if we should be providing a callback rather than a setter.  In the change you made there's two 'set' methods:

	public void setHeaderLines(String[] headerLines) {
		this.headerLines = Arrays.asList(headerLines);
	}

	public void setFooterLines(String[] footerLines) {
		this.footerLines = Arrays.asList(footerLines);
	}

This means that a user will need to some how have the writer wired into something like a listener.  But footer lines may not be able to be written until just before closing, which makes the semantics weird.  We may want to think about using a callback that will be called just before closing.  I created a new issue, BATCH-827 to create a sample job for this functionality.  Perhaps we should tackle that first, and see what the approach looks like, before trying the callback.",09/Sep/08 6:34 PM;david_syer;I like the callback idea.  What do we pass in?  A java.io.Writer?,30/Sep/08 10:45 PM;robert.kasanicky;reassigned for review - callback approach has been implemented although fisheye only show the older commits that used setters.,"08/Oct/08 7:17 AM;lucas.l.ward;When first reviewing this issue, I was thinking that having LineCallbackHandler as an interface didn't make sense.  But considering we won't be returning an item from it, I think it does, closing.

",,,,,,,,,,,,,,,,,
Change ExecutionContext storage strategy,BATCH-762,23449,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,thomas.risberg,thomas.risberg,06/Aug/08 5:21 AM,20/Oct/08 7:36 AM,10/May/19 2:37 AM,20/Oct/08 7:36 AM,,,,,,,2.0.0.M2,,,,,,,,0,,Implement a storage solution based on serializing to JSON and storing this in a CLOB plus any arbitrary object stored in a Map serialized to a BLOB,,investigated JSON serialization options;08/Sep/08 12:16 AM;thomas.risberg;28800,rewrote context persistence to use JSON in single String/CLOB;08/Sep/08 12:16 AM;thomas.risberg;28800,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,332899200,,,,,2008-10-02 05:56:08.707,11843,false,thomas.risberg(thomas.risberg),,,,0|i055qn:,30136,27107,,,,,23/Sep/08 5:39 AM;thomas.risberg;The current implementation uses XStream/Jettison.  We will look at using an improved version of the SpringSource JSON Library/Parser later on once it has support for all features that we would need.,"02/Oct/08 5:56 AM;lucas.l.ward;Thomas,  I did a quick review of this, and I'm a little bit confused.  I thought the end solution was to have on execution context table, that has an id, and the step execution and job execution's would have that id in order to tie them together.  The idea being that we would have one execution context table, and no need for a descriminator.","02/Oct/08 6:22 AM;thomas.risberg;Our initial discussions involved also accommodating custom objects serialized to byte streams.  Since everything is now serialized to JSON, there is no need for additional columns.  We now only have a CLOB and a VARCHAR column with he short version.

Having two tables and reusing the keys from the owning table is a simpler solution - no need to generate additional keys so no ned for additional sequence/sequence table.  

We could even store the context columns in STEP_EXECUTION and JOB_EXECUTION tables but I thought it would be better to separate them since they contain a CLOB",20/Oct/08 7:34 AM;thomas.risberg;Never added a unit test,20/Oct/08 7:36 AM;thomas.risberg;Added a unit test,,,,,,,,,,,,,,,,,,
StaxEventItemWriter writes extra end document tag with Woodstox 3.2.6,BATCH-761,23436,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,ibrandt,ibrandt,05/Aug/08 5:10 AM,11/Mar/11 4:08 AM,10/May/19 2:37 AM,24/Sep/08 9:02 PM,1.1.0,,,,,,1.1.2,2.0.0.M1,,Infrastructure,,,,,0,,"Woodstox 3.2.6 (current stable)'s StaxEventWriter implementation automatically writes end tags and end document tags that it detects as still open on close.  When StaxEventItemWriter wraps Woodstox with a NoStartEndDocumentStreamWriter for the chunk writer (eventWriter), and another Woodstox instance for the document writer (delegateEventWriter), the result is two end document tags being written.  This is because even though the NoStartEndDocumentStreamWriter prevents the end document event from being written to the chunk writer, it writes the end document tag on close() anyway, on top of the one being written by StaxEventItemWriter.endDocument(delegateEventWriter) itself.

Here's the relevant stack trace:

Thread [main] (Suspended)	
	com.ctc.wstx.sw.SimpleNsStreamWriter(com.ctc.wstx.sw.BaseStreamWriter).finishDocument() line: 1672	
	com.ctc.wstx.sw.SimpleNsStreamWriter(com.ctc.wstx.sw.BaseStreamWriter).close() line: 288	
	com.ctc.wstx.evt.WstxEventWriter.close() line: 237	
	org.springframework.batch.item.xml.stax.NoStartEndDocumentStreamWriter(org.springframework.batch.item.xml.stax.AbstractEventWriterWrapper).close() line: 32	
	org.springframework.batch.item.xml.StaxEventItemWriter.close(org.springframework.batch.item.ExecutionContext) line: 376	

This was captured with Spring 1.1.0, but I diff'ed StaxEventItemWriter and NoStartEndDocumentStreamWriter for 1.1.0 vs. 1.1.1 in FishEye, and am not seeing anything that would change the behavior.
",,;10/Aug/08 11:13 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,05/Aug/08 9:09 AM;ibrandt;StaxEventItemWriter.Woodstox.patch;https://jira.spring.io/secure/attachment/14502/StaxEventItemWriter.Woodstox.patch,,,,,,,,,,,257558400,,,,,2008-08-07 01:06:03.583,5859,true,svollmer(svollmer),,,,0|i02jlz:,14886,14189,,,,,"05/Aug/08 5:52 AM;ibrandt;Corrections to my initial description:

1) ""Woodstox 3.2.6 (current stable)'s *XMLEventWriter* implementation...""

2) There is only one Woodstox WstxEventWriter instance.  The NoStartEndDocumentStreamWriter eventWriter is a second handle wrapping the XMLEventWriter delegateEventWriter's WstxEventWriter instance.","05/Aug/08 9:09 AM;ibrandt;Quick and dirty workaround patch against 1.1.1.  Works for me, YMMV, etc.  Sorry for no test case goodness, up against a deadline.","06/Aug/08 6:38 AM;ibrandt;Forgot to mention that the 3.9.x (a.k.a. pre-4.0) releases of Woodstox contain internal refactoring such that ""com.ctc.wstx.evt.WstxEventWriter"" no longer exists, hence my attached patch won't trap this bug for the post 3.2 series.  I didn't look into whether it was just repackaged, or replaced with something else entirely.  I'm also not sure whether they've changed their automatic tag closing behavior in the 3.9 series, such that the workaround would even still be necessary.",07/Aug/08 1:06 AM;robert.kasanicky;Making the private endDocument(XMLWriter) protected should allow users to fix the issue cleanly themselves by subclassing.,"07/Aug/08 7:44 AM;ibrandt;Interesting, though wouldn't making endDocument protected create a bit of a coupling/versioning problem, and ultimately just ""pass the buck"" for this issue to Spring Batch users?  I'll explain...

As far as I know there are only three Java StAX implementations in common usage: the BEA RI, Sun's SJSXP, and Woodstox.  I have no idea what the adoption ratio of each is, but Woodstox has been a formidable implementation for some time.  Sub-classing would mean that anyone and everyone using StaxEventItemWriter with Woodstox would have to extend it with a WstxStaxEventItemWriter of sorts that overrides endDocument.  The downsides are: 1) they'll need to know to do this in the first place, 2) more code for them to maintain, 3) perhaps worst of all is that all that code in the wild will be coupled to an implementation detail of StaxEventItemWriter in a manner that is outside of Spring Batch's control.  My solution may not be pretty, but the ugliness is contained rather than propagated.

Really I think the best solution is that Woodstox should make this auto-closing behavior an optional feature of the parser configurable by runtime properties.  (See: http://woodstox.codehaus.org/ConfiguringStreamWriters).  Then my patch would look more like:

	XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
	if (outputFactory.isPropertySupported(""com.ctc.wstx.autoCloseElements"")) {
		outputFactory.setProperty(""com.ctc.wstx.autoCloseElements"", false);
	}

A bit cleaner than getClass().getName().equals, and it can be done outside Spring Batch or in (though I still think inside is more user friendly).  If you want to hold off for a bit on opening up endDocument I can go lobby for such a parser option in Woodstox 3.2.7?","10/Aug/08 8:15 PM;robert.kasanicky;I've made the endDocument protected - how end tag is written is kind of a hack anyway, so it makes sense to allow users to tweak the behavior.

@Ian: I don't like the idea of putting Stax implementation specific code into SB codebase, but if this is standard Woodstox behavior (consistent among versions) I guess we could do that. The ""isPropertySupported"" approach seems sensible if it would fix Woodstox trouble in general.",10/Aug/08 11:15 PM;robert.kasanicky;For now resolving the issue with the advice to override the protected endDocument method when used with Woodstox. If you can suggest a generic Woodstox fix please drop a comment and we can consider doing more.,"04/Sep/08 12:03 PM;cowtowncoder;Just noticed this entry, and thought I can as well add the Woodstox jira entry:

http://jira.codehaus.org/browse/WSTX-165

(too bad I didn't notice it few days ago, before 3.2.7 release, but it'll get into 3.2.8 :) )

",24/Sep/08 9:02 PM;david_syer;re-opened to remove spam,"04/Mar/11 5:00 AM;svollmer;This problem still exists in Spring Batch 2.1.6 when it is used with an old Woodstox version. I recently encountered this problem with a Spring Batch application that runs with GlassFish 3.0.1 and 3.1. GlassFish uses Woodstox 3.2.1 and this version always seems to be available in an application's classpath. Packaging my application with a newer Woodstox version did not help.

The {{StaxEventItemWriter}} sets this property {{com.ctc.wstx.automaticEndElements}} when Woodstox supports it. But with older Woodstox versions the {{StaxEventItemWriter}} does not change its behaviour and still writes an extra end document tag.

I solved the problem with a change to the {{StaxEventItemWriter#endDocument}} method. This version only writes the end tag if the property {{com.ctc.wstx.automaticEndElements}} is supported and thus was disabled in the {{open}} method:
{code}
    protected void endDocument(XMLEventWriter writer) throws XMLStreamException {
        String nsPrefix = !StringUtils.hasText(getRootTagNamespacePrefix()) ? """" : getRootTagNamespacePrefix() + "":"";
        try {
            // It would be better to save this property in a class variable to avoid instanciating XMLOutputFactory again
            XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
            if (outputFactory.isPropertySupported(""com.ctc.wstx.automaticEndElements"")) {
                bufferedWriter.write(""</"" + nsPrefix + getRootTagName() + "">"");
            }
        }
        catch (IOException ioe) {
            throw new DataAccessResourceFailureException(""Unable to close file resource: ["" + resource + ""]"", ioe);
        }
    }
{code}
","11/Mar/11 2:18 AM;david_syer;Wouldn't all factories except newer versions of WSTX answer ""false"" to that query?  So there would be no end element potentially even if WSTX was not present.  That sounds wrong.  Could you open a new JIRA and maybe provide some test cases?","11/Mar/11 4:08 AM;svollmer;You are right, I missed that point with my first change. It did not work when it was used without Woodstox. The new code is now:

    protected void endDocument(XMLEventWriter writer) throws XMLStreamException {

        String nsPrefix = !StringUtils.hasText(getRootTagNamespacePrefix()) ? """" : getRootTagNamespacePrefix() + "":"";
        try {
            XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
            boolean isWoodstox = ClassUtils.getPackageName(outputFactory.getClass()).startsWith(""com.ctc.wstx"");
            boolean isNewWoodstoxVersion = outputFactory.isPropertySupported(""com.ctc.wstx.automaticEndElements"");

            if (!isWoodstox || isNewWoodstoxVersion) {
                bufferedWriter.write(""</"" + nsPrefix + getRootTagName() + "">"");
            }
        } catch (IOException ioe) {
            throw new DataAccessResourceFailureException(""Unable to close file resource: ["" + resource + ""]"", ioe);
        }
    }


Unfortunately, I can't provide a testcase at the moment because I'm rather busy and can't find time for it.",,,,,,,,,,,
Paginating Jdbc ItemReaders,BATCH-760,23424,23423,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,04/Aug/08 7:39 AM,23/Sep/08 5:54 AM,10/May/19 2:37 AM,23/Sep/08 5:35 AM,2.0.0.M1,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,Pagination may end up as an alternative to scrolling and storing all keys in memory.  It solves a bunch of other issues as well.,,implemented pagination logic and various database implementations;31/Aug/08 3:34 AM;thomas.risberg;57600,created abstractions tha can be reused for non JDBC paging implementations;31/Aug/08 3:35 AM;thomas.risberg;28800,;23/Sep/08 5:35 AM;thomas.risberg;14400,,,,,,,,,,,,57600,0,100800,175%,57600,0,100800,,,,,,,,,,,,,,,,,,,,,,,,,,335232000,,,,,2008-08-21 08:39:17.704,11844,false,lucas.l.ward(lucas.l.ward),,,,0|i0568n:,30217,27205,,,,,"21/Aug/08 8:39 AM;lucas.l.ward;Thomas, I just did a quick glance through the JdbcPagingItemReader implementation.  So far it looks really great, but I do have a couple of questsion.  (Feel free to ignore if you're already aware/planing to address them)

It looks like there may be a need for some kind of abstraction for the different database implementations for paginating?  It always seems like someone has a new database they want to use, etc.  It wouldn't be fun always tacking on to the if/else blocks.

Along those same lines, is there any potential for reuse among the various paginating readers.  I can think of three off the top of my head, JPA, iBatis, and Jdbc, it looks like we have all but iBatis covered.  When looking between the two implementations that are already there, it looks like they're at least doing some things similar.  The extra abstraction may not be worth it, but it's at least something to think about.

Another topic I would like to put on the table is how pagination could be used in conjunction with partitioning.  In many ways, the JdbcPagingItemReader looks a lot like implementations I have seen at other clients pre-spring batch that used similar techniques to partition the data.  (along without pages)  For example, thread 1 works on the first 100 pages, thread 2, the next 100, etc.  Thus avoiding the issue of synchronizing on read that ends up happening in the parrallel job sample.","21/Aug/08 8:45 AM;lucas.l.ward;I also just noticed something else:

this.databaseProductName = JdbcUtils.commonDatabaseName(
				JdbcUtils.extractDatabaseMetaData(dataSource, ""getDatabaseProductName"").toString());
				
It looks like you're determining the database being used from the metadata.  I think this is a good idea, and that we should update the JobRepositoryFactoryBean to do the same.  (Can't believe we didn't think of it sooner)","05/Sep/08 9:43 AM;lucas.l.ward;Thomas,

Wayne and I did and in depth review, and had a few points (mostly minor)

1.  There's a bit of redundant logic in the setters of AbstractSqlPagingQueryProvider.  It seems like the code that strips out the keywords could be one method rather than duplciated in 3?
2.  Is there a way for developers to not have to separate out the clauses?  Maybe this is a namespace/factorybean type issue,  or we could just say they have to live with it, but it's something to think about.
3.  I'm assuming the setParameterVaues on the IbatisPagingItemReader is expecting that the expression language will allow you to set that dynamically based on the JobParameters? (ditto for the other implementations)
4.  I noticed that the paging implementation is working by 'skipping' the results by the page size.  Do we know how iBatis translates this?  Does it read in everything and throw out the results minus the max? 
5.  I'm curious why PaginatedList wasn't used for the iBatis implementation?  It looks like it handles all of these things directly.  (unless I'm missing something)
6.  It looks like we need to create a sample job for the paging readers as well.
7. It looks like a lot of the PagingQueryProviders have exactly the same code in them. (especially the windowing ones)  Did you provide separate classes solely so that the delegation worked correctly?  If so, maybe there's another
way to accomplish this without duplicating code?
","16/Sep/08 2:01 AM;thomas.risberg;1.  There's a bit of redundant logic in the setters of AbstractSqlPagingQueryProvider.  It seems like the code that strips out the keywords could be one method rather than duplciated in 3?

Yes, this makes sense. Done!

2.  Is there a way for developers to not have to separate out the clauses?  Maybe this is a namespace/factorybean type issue,  or we could just say they have to live with it, but it's something to think about.

Without parsing a single SQL statement and splitting out the clauses we are interested in I think we will have to live with three separate clauses. Parsing SQL can get a bit difficult if we take comments and literals into account.  Not impossible but some extra work.

3.  I'm assuming the setParameterVaues on the IbatisPagingItemReader is expecting that the expression language will allow you to set that dynamically based on the JobParameters? (ditto for the other implementations)

This is yet to be defined so I left it as a Map for now.

4.  I noticed that the paging implementation is working by 'skipping' the results by the page size.  Do we know how iBatis translates this?  Does it read in everything and throw out the results minus the max?

Don't know - just used the API they provide. We'll have to test this to see how it behaves.
 
5.  I'm curious why PaginatedList wasn't used for the iBatis implementation?  It looks like it handles all of these things directly.  (unless I'm missing something)

We need to look at the IBATIS code to see which option provides the performance we require.

6.  It looks like we need to create a sample job for the paging readers as well.

Yes

7. It looks like a lot of the PagingQueryProviders have exactly the same code in them. (especially the windowing ones)  Did you provide separate classes solely so that the delegation worked correctly?  If so, maybe there's another way to accomplish this without duplicating code?

Most of them do have subtle differences.  I have created a SqlPagingQueryUtils class that contains most of the SQL building code.  There is still a bit of duplication but it is trivial string concatenation and I don't think it is worth it taking this any further.


","17/Sep/08 6:25 AM;lucas.l.ward;Thomas, I did a quick review of the updates you just persisted, and it looks pretty good.  The only comment I have is about unit testing.  It looks like you're just using integration tests  to test these features.  Are you going to add any unit tests for things like the SqlPagingQueryUtils, etc?","23/Sep/08 5:21 AM;thomas.risberg;Yes, I added a SqlPagingQueryUtilsTests.",23/Sep/08 5:35 AM;thomas.risberg;Assigning to Lucas for final review,,,,,,,,,,,,,,,,
remove DelegatingItemWriter,BATCH-757,23414,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,04/Aug/08 1:45 AM,23/Sep/08 11:43 AM,10/May/19 2:37 AM,11/Aug/08 6:44 PM,1.1.1,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,,,;11/Aug/08 6:44 PM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339638400,,,,,,5860,true,lucas.l.ward(lucas.l.ward),,,,0|i02jm7:,14887,14190,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade JdbcExecutionContextDao to use enums,BATCH-756,23413,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,04/Aug/08 1:04 AM,23/Sep/08 11:42 AM,10/May/19 2:37 AM,11/Aug/08 7:22 PM,1.1.1,,,,,,2.0.0.M1,,,Core,,,,,0,,Descriminators and Attribute type should be java 5 enums,,;11/Aug/08 7:23 PM;robert.kasanicky;3600,,,,,,,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339638400,,,,,,5861,true,lucas.l.ward(lucas.l.ward),,,,0|i02jmf:,14888,14191,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor JdbcKeyCollectors to use SimpleJdbcTemplate,BATCH-754,23359,23423,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Won't Fix,lucas.l.ward,thomas.risberg,thomas.risberg,30/Jul/08 3:58 AM,10/Nov/08 6:41 AM,10/May/19 2:37 AM,31/Aug/08 3:32 AM,,,,,,,2.0.0.M2,,,,,,,,0,,Refactor MultipleColumnJdbcKeyCollector and SingleColumnJdbcKeyCollector to take a DataSource rather than a JdbcTemplate and to internally use SimpleJdbcTemplate,,;31/Aug/08 3:33 AM;thomas.risberg;3600,,,,,,,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,BATCH-851,,,,,,,,,,,,,,,,,,,,,,,335145600,,,,,,11848,false,lucas.l.ward(lucas.l.ward),,,,0|i03xrz:,23014,19479,,,,,31/Aug/08 3:32 AM;thomas.risberg;Resolution is to deprecate DrivingQueryItemReader support in favor of PagingItemReaders,24/Sep/08 6:36 AM;thomas.risberg;I've linked to the issue in RC1 for removing these classes.  Can you review and close this issue?,,,,,,,,,,,,,,,,,,,,,
Listener exception handling,BATCH-753,23357,,Refactoring,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,30/Jul/08 3:18 AM,12/Aug/08 1:00 AM,10/May/19 2:37 AM,12/Aug/08 1:00 AM,1.1.0,,,,,,2.0.0.M1,,,Core,,,,,0,,"How exceptions are handled in listeners is not consistent, as mentioned in this issue: BATCH-750

In general, exceptions thrown from listeners will be ignored, but in some cases they won't which can cause issues.  In general, the handling should be consistent.  The fix that was put into the 1.1.1 release hasn't been migrated to 2.0, since it's likely that how exceptions are handled should be changed for all listeners.",,;12/Aug/08 1:00 AM;lucas.l.ward;14400,,,,,,,,,,,,,,28800,0,14400,50%,28800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,338947200,,,,,2008-08-05 08:55:09.201,11849,true,lucas.l.ward(lucas.l.ward),,,,0|i056kv:,30272,27276,,,,,"05/Aug/08 8:55 AM;david_syer;Added a couple of new wrapper exception types (*ListenerFailedException). TODO: unit tests.

    *  As a rule, listeners that throw exceptions will have them wrapped in StepListenerFailedException.
    * An exception to this is if the listener was already handling an exception (e.g. onErrorInRead(Throwable t)), in which case the listener exception is passed in to the StepListenerFailedException, but not as the cause. The cause is the original business exception.
    * An exception thrown in a SkipListener will by default always be fatal (as specified by the factory bean using a special exception class SkipListenerFailedException).
",06/Aug/08 9:28 AM;david_syer;Finished the step listener changes.  Job execution listeners are not in transactions so it isn't such a problem - an exception will always behave as expected.,07/Aug/08 12:52 AM;david_syer;Assigned for review,"12/Aug/08 1:00 AM;lucas.l.ward;Reviewed.  I'm also going to put in 4 hours as the time worked, which I think is about right.  Dave, let me know if you think it's off.",12/Aug/08 1:00 AM;lucas.l.ward;closed before logging the work.,,,,,,,,,,,,,,,,,,
FlatFileItemReader restart broken for non-default RecordSeparatorPolicy (record > 1 line),BATCH-752,23352,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,30/Jul/08 12:19 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jul/08 12:58 AM,1.1.0,,,,,,1.1.1,,,,,,,,0,,Simple fix is to remove the overriden jumpToItem(int) method and use the default provided by superclass,,;30/Jul/08 1:11 AM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:18.447,5862,false,david_syer(david_syer),,,,0|i02jmn:,14889,14192,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
ensure StepExecution is saved before trying to save ExecutionContext,BATCH-751,23344,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,29/Jul/08 1:10 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,29/Jul/08 7:07 PM,1.1.0,,,,,,1.1.1,,,Core,,,,,1,,http://forum.springframework.org/showthread.php?t=57647,,;29/Jul/08 7:12 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:18.02,5863,false,david_syer(david_syer),,,,0|i02jmv:,14890,14193,,,,,29/Jul/08 7:07 PM;robert.kasanicky;StepExecution is now saved immediately after AbstractStep updates the status to 'STARTED',07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Throwing an Exception from a SkipListener causing unpredictable behavior,BATCH-750,23337,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,28/Jul/08 5:19 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jul/08 3:15 AM,1.1.0,,,,,,1.1.1,,,Core,,,,,0,,Throwing an Exception from a SkipListener causes erroneous behavior.  This is because it causes a rollback rather than failing the job.,,;28/Jul/08 6:41 AM;lucas.l.ward;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,28/Jul/08 5:20 AM;lucas.l.ward;SkipIntegrationTests.java;https://jira.spring.io/secure/attachment/14468/SkipIntegrationTests.java,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:17.964,11850,false,david_syer(david_syer),,,,0|i056pr:,30294,27300,,,,,28/Jul/08 5:20 AM;lucas.l.ward;Attached the test case that is failing.,"28/Jul/08 5:29 AM;lucas.l.ward;I just tested throwing an Exception from onReadError() in ItemReadListener, which behaves correctly, but doesn't cause the job to fail.  Perhaps any exception thrown from a listener should cause the job to fail?  Either that or they should cause nothing to happen.  My inclination is towards the former, because if someone is writing to the database in a listener, not rollingback could cause some issues.","28/Jul/08 6:08 AM;lucas.l.ward;I found the following code in the BatchListenerFactoryHelper:

		itemReader = new DelegatingItemReader(itemReader) {
			public Object read() throws Exception {
				try {
					multicaster.beforeRead();
					Object item = super.read();
					multicaster.afterRead(item);
					return item;
				}
				catch (Exception e) {
					multicaster.onReadError(e);
					throw e;
				}
			}
		};

This is why the ItemReadListener is treating errors in the listener like normal read errors (which may not be what we want)","28/Jul/08 6:46 AM;lucas.l.ward;The ultimate issue is that any exception thrown from onSkipInRead would cause the transaction to be rolledback, and because it would continue to be represented with the same item, it would keep throwing the same exception, over and over again, until ultimately hitting a SkipLimitExceededException.  I still think the best overall solution is for any exceptions encountered in listeners to cause the job to fail, leaving it up to individual developers to decide if they want to swallow exceptions.  However, that would require a much bigger change.  I'll create a new issue for this against 2.0.  For now, I've created a bandaid for the problem by swallowing any exceptions thrown from the SkipListener and logging them out.  If developers need this to cause failure they can use a workaround by also implementing a StepExecutionListener and setting terminateOnly to true in case of an exception.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
Fix EasyMock warnings in infrastructure tests,BATCH-749,23335,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,28/Jul/08 3:01 AM,23/Sep/08 11:42 AM,10/May/19 2:37 AM,28/Jul/08 3:11 AM,2.0.0.RC2,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,,,;28/Jul/08 3:11 AM;david_syer;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,340156800,,,,,,11851,false,lucas.l.ward(lucas.l.ward),,,,0|i0566n:,30208,27194,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix EasyMock warnings in Infrastructure,BATCH-748,23334,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,david_syer,david_syer,28/Jul/08 3:00 AM,23/Sep/08 11:42 AM,10/May/19 2:37 AM,28/Jul/08 8:50 PM,2.0.0.RC2,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,,,;28/Jul/08 8:50 PM;robert.kasanicky;5400,,,,,,,,,,,,,,3600,0,5400,150%,3600,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,340156800,,,,,,5864,false,lucas.l.ward(lucas.l.ward),,,,0|i02jn3:,14891,14194,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix EasyMock warnings in Samples,BATCH-747,23333,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,david_syer,david_syer,28/Jul/08 2:59 AM,23/Sep/08 11:41 AM,10/May/19 2:37 AM,29/Jul/08 1:43 AM,2.0.0.RC2,,,,,,2.0.0.M1,,,Core,Infrastructure,,,,0,,,,;29/Jul/08 1:43 AM;thomas.risberg;7200,,,,,,,,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,340156800,,,,,,11852,false,lucas.l.ward(lucas.l.ward),,,,0|i0566v:,30209,27195,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix EasyMock warnings in core,BATCH-746,23332,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,28/Jul/08 2:58 AM,23/Sep/08 11:41 AM,10/May/19 2:37 AM,28/Jul/08 10:54 AM,2.0.0.RC2,,,,,,2.0.0.M1,,,Core,,,,,0,,,,;28/Jul/08 10:54 AM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,340156800,,,,,,11853,false,lucas.l.ward(lucas.l.ward),,,,0|i05673:,30210,27196,,,,,,,,,,,,,,,,,,,,,,,,,,,
strong typing in AggregateItemReader,BATCH-745,23328,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,robert.kasanicky,robert.kasanicky,27/Jul/08 9:47 PM,08/Oct/08 8:35 PM,10/May/19 2:37 AM,08/Oct/08 8:35 PM,,,,,,,2.0.0.M1,,,,,,,,0,,Currently the AggregateItemReader falls back on using wild cards in generic declaration. This could be improved by making the marker items configurable (adding setters of type T). MultilineJob should then showcase proper configuration.,,;28/Jul/08 2:40 AM;david_syer;7200,;08/Oct/08 8:35 PM;robert.kasanicky;1800,,,,,,,,,,,,,14400,0,9000,62%,14400,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-07-28 00:14:41.584,11854,true,robert.kasanicky(robert.kasanicky),,,,0|i055xz:,30169,27142,,,,,"28/Jul/08 12:14 AM;david_syer;The only way I can see to parameterise the marker items sensibly it to make them the same type as the List<?>.  While that would be nice, I can't see how it makes any sense.  Consider the sample data

BEGIN
UK21341EAH4597898.34customer1
UK21341EAH4611218.12customer2
END
BEGIN
UK21341EAH4724512.78customer2
UK21341EAH4810809.25customer3
UK21341EAH4985423.39customer4
END

There is no way that BEGIN or END can be forced into a sensible representation of a Trade.  So to make AggregateItemReader properly typesafe would require a different kind of contract with the delegate, which is tricky since it is only an ItemReader.  The only way it would work is if the delegate is of type  ItemReader<AggregateItem<T>>.  The item type can then be parametrised at the expense of introducing a wrapper object with a new interface

public interface AggregateItem<T> {
    T getItem() throws ItemReaderException;
    boolean isHeader();
    boolean isFooter();
}","12/Aug/08 1:15 AM;lucas.l.ward;I've been reviewing this change today, and I think it still smells funny to me.  I can't completely put my finger on it, but I do know one concrete issue.  As has been posted on the forums, there may be valid cases where information in a header should be pulled into a composed item.  I suppose it could be done in the Mapper, which would have to be custom.  I wonder if we really should be providing these 'aggregate' implementations?  The difference between a header and a footer seems to be entirely dependent upon business logic.","12/Aug/08 2:45 AM;david_syer;I'm not sure I am 100% happy either, but I do agree with your last sentence - it is business logic, and that's why there is a callback for it (isHeader() isFooter()) in the aggregate.  I am, however about 100% more happy with the current implementation than with that in 1.1.  We are actually not providing any concrete implementations of anything much.  But if you take away the AggregateItem and make it an interface, you will have boiler plate code everywhere for the header and footer detection.  Really it's just a convenience for anyone implementing a FieldSetMapper - the AggregateFieldSetMapper is the main developer touch point.","12/Aug/08 4:05 AM;david_syer;Supplementary comment: I think that we could remove the Aggregate* classes completely if we adopted with Robert's suggestion in  BATCH-779.  Lucas: you are the main opponent there, so what do you think in relation to this one?  Can we do a deal? ","15/Aug/08 5:28 AM;lucas.l.ward;Dave,

I understand what you're saying about the Aggregate classes, but my issue is, with every client I've worked with that needed this functionality, they do something custom.  The current implementation is much better than what it was, but 90% of people will just code something on their own.  Honestly, if I was put in the same situation, I would ditch the aggregate class and do something custom as well.  A sure sign (to me anyway) that it should be removed or changed.

Regarding BATCH-779, my issue is still the same with that, the contract starts getting fuzzy.  flat file reading would be different from everything else.  All of our other ItemReaders return an Item....a domain object representing the input.  If we implemented 779 it would be the only one off, where the ItemReader is returning more of a raw resource that must be further parsed in the ItemProcessor.  A raw string from a file does not an item make (imho)  To me flat file item reading still belongs completely in an ItemReader.  The reader itself may need to be decomposed into something easier to understand, but an ItemReader should always return an Item, completely composed.  Furtermore, how would restart semantics work if we passed on line from a file?  It would get very weird, as the processor would have to eat lines until it got the whole item, not passing to the writer until it got a completely created Item, which it still seems to me should be what an ItemReader is doing.","15/Aug/08 11:13 PM;david_syer;I do agree about the fact that the aggregate use case is probably going to be a custom job, and we aren't adding much value.  I'll comment separaelt on BATCH-779.","23/Sep/08 3:33 PM;lucas.l.ward;Are we still thinking about deprecating the AggregateItemReader?  It seems we all agree that most aggregation will need to be done by the users, since aggregation is defined by the domain.  If so, I'd like to deprecate and then close this issue.","02/Oct/08 5:48 AM;lucas.l.ward;After discussing with Dave, the AggregateItemReader should be removed, and the sample that uses it updated.  Although, ideally, we'll want to change the sample first to make sure we haven't missed something.","08/Oct/08 2:43 PM;lucas.l.ward;Robert, can your remove the AggregateItemReader?","08/Oct/08 8:35 PM;robert.kasanicky;I guess it is worth keeping the AggregateReader as a sample, so I just moved it.",,,,,,,,,,,,,
ExportedJobLauncher should be able to stop running batches on an individual basis,BATCH-743,23283,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,magott,magott,23/Jul/08 11:35 PM,03/Aug/08 10:40 PM,10/May/19 2:37 AM,03/Aug/08 10:39 PM,1.1.0,,,,,,2.0.0.M1,,,Core,,,,,0,,"At the moment the ExportedJobLauncher is able to launch jobs by specifying the job name and job parameters. When stopping jobs it will stop all running jobs. This is very crude and I think it would make sense to be able to stop jobs on an individual basis.
",,;03/Aug/08 10:40 PM;david_syer;2100,,,,,,,,,,,,,,1200,0,2100,175%,1200,0,2100,,,,,,,,,,,,,,,23/Jul/08 11:36 PM;magott;ExportedJobLauncher.java.patch;https://jira.spring.io/secure/attachment/14433/ExportedJobLauncher.java.patch,23/Jul/08 11:46 PM;magott;SimpleExportedJobLauncher.java.patch;https://jira.spring.io/secure/attachment/14436/SimpleExportedJobLauncher.java.patch,23/Jul/08 11:36 PM;magott;SimpleExportedJobLauncher.java.patch;https://jira.spring.io/secure/attachment/14434/SimpleExportedJobLauncher.java.patch,,,,,,,,,339638400,,,,,2008-08-03 22:39:33.926,11855,false,david_syer(david_syer),,,,0|i058cf:,30558,27568,,,,,"23/Jul/08 11:36 PM;magott;Added patch that will implement this feature, based on the trunk code (java 5)",23/Jul/08 11:46 PM;magott;Added updated patch for SimpleExportedJobLauncher. JobExecution is removed from registry after stop is called,"03/Aug/08 10:39 PM;david_syer;I couldn't apply the patches (no path information I think).  But I added a couple of new methods, slightly different from what you suggest, e.g. stop(String jobName) to stop all instances of the job with that name.  It seemed like that would be more usable and most often that's what you want.  I guess to stop a given job execution we could also provide a method that takes the execution (or instance) id instead of the job name.  If anyone wants that open another JIRA, please.",,,,,,,,,,,,,,,,,,,,
DefaultFieldSet should clone the tokens before exposing them in getValues(),BATCH-741,23227,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,robert.kasanicky,david_syer,david_syer,21/Jul/08 7:03 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,21/Jul/08 10:23 PM,1.1.0,,,,,,1.1.1,2.0.0.M1,,Infrastructure,,,,,0,,DefaultFieldSet should clone the tokens before exposing them in getValues(),,;21/Jul/08 10:22 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1200,0,1800,150%,1200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,5866,false,david_syer(david_syer),,,,0|i02jnj:,14893,14196,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
MultiResourceItemReader.readNextItem() does not close the last delegate,BATCH-738,23210,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Invalid,robert.kasanicky,sam_bercovici,sam_bercovici,18/Jul/08 9:27 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,21/Jul/08 12:26 AM,1.1.0,,,,,,1.1.1,2.0.0.M1,,,,,,,0,,"current code is:
			if (index.currentResource >= resources.length) {
				return null;
			}


which need to be changed to:
			if (index.currentResource >= resources.length) {
				delegate.close(new ExecutionContext());
				return null;
			}
",,;21/Jul/08 12:27 AM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-07-20 18:34:18.731,5867,false,david_syer(david_syer),,,,0|i02jnr:,14894,14197,,,,,"20/Jul/08 6:34 PM;david_syer;Clearly new ExecutionContext() is not the right argument here.  Robert, can you check that close() is called properly somewhere?","21/Jul/08 12:26 AM;robert.kasanicky;The last delegate is closed when MRIR#close(..) is called, so I don't think there's a bug (drop a comment if there's something I've missed and I'll reopen the issue).","21/Jul/08 3:34 AM;sam_bercovici;I was using a derivative of te class which was also passed to a StepExecutionListener that deletes all the files handled by the step in it's afterStep function.

I was not able to delete the last file since it was still open.

So probably the issue here is that the afterStep is called before the ItemReader is closed.
I am not sure if this is a bug or WAD.",21/Jul/08 3:44 AM;david_syer;I think we intentionally leave the close() as late as possible.  You can always close it yourself in the listener?,"21/Jul/08 4:36 AM;sam_bercovici;Thanks.
Is there any reason for keeping the stream open as long as possible?
","21/Jul/08 5:06 AM;david_syer;Well, you quite often see people writing to output streams in afterStep(), so they need to be open.  Reads would also not be out of the question (but less likely I agree).  If you are deleting files, you could also do it in a JobExecutionListener?",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,
JdbcCursorItemReader will spin through entire resultset if numberOfProcessRows=0,BATCH-737,23207,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,magott,magott,18/Jul/08 3:56 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,20/Jul/08 7:25 PM,1.0.1,,,,,,1.1.1,2.0.0.M1,,Infrastructure,,,,,0,,"If a step using jdbccursoritemreader to read fails in the processing-step (itemwriter), number of processed rows (0) will be persisted in ExecutionContext. When re-running the step, 0 will be read as the number of processed rows, and the code will call moveCursorToRow with 0 as param.

The way the private method moveCursorToRow is implemented now, it will always call next() and increment count once, before checking if count==rows. At this point count=1 and row=0, this resultset will be traveresed until next()=false.

Checked the history of the file, and it seems this behavior has been there since before the private method was introduced.

The code below should solve this problem:

	/**
	 * Moves the cursor in the resultset to the position specified by the in param by
	 * traversing the resultset
	 * @param row
	 */
	private void moveCursorToRow(int row){
		try {
			for (int skipped = 0; skipped < row && rs.next(); skipped++) {
				//Do nothing
			}
		}
		catch (SQLException se) {
			throw getExceptionTranslator().translate(""Attempted to move ResultSet to last committed row"", sql, se);
		}		
	}",hsql db,;20/Jul/08 7:52 PM;david_syer;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-07-20 19:25:44.997,11859,false,david_syer(david_syer),,,,0|i0209z:,11754,11679,,,,,"20/Jul/08 7:25 PM;david_syer;The source code in the comment above looks old, but the bug was still there (rollback on first chunk would fail to restart).  Fixed in 1.1.1 and 2.0.0.M1.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Getting Started page should be updated,BATCH-735,23202,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,lucas.l.ward,lucas.l.ward,18/Jul/08 1:43 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,20/Jul/08 7:51 PM,1.1.0,,,,,,1.1.1,2.0.0.M1,,,,,,,0,,"The getting-started page on the spring batch home page needs to be updated:

http://static.springframework.org/spring-batch/getting-started.html

The first option it gives people is without maven, using the 'with-dependencies' release (which is almost always buggy), followed by the 'use maven' option, which tells them to still use the same 'with-dependencies' release before (which they shouldn't)

I propose we update to have the maven option be first, with the 'no dependency' zip, followed by the 'with dependency' without maven.",,;20/Jul/08 7:51 PM;david_syer;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:17.475,11861,false,david_syer(david_syer),,,,0|i056pz:,30295,27301,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
ItemReaders and ItemWriters using Resource(s) should check for file during ItemStream#open,BATCH-734,23196,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,gregabell,gregabell,17/Jul/08 6:17 AM,14/Aug/08 2:42 AM,10/May/19 2:37 AM,14/Aug/08 2:42 AM,1.1.0,,,,,,1.1.2,2.0.0.M1,,Core,,,,,0,,"During bean initialization MultiResourceItemReader checks [in afterPropertiesSet()] that it actually has resources to read. If not, it throws an exception. There are use cases where the resources might not be created at bean initialization time (see http://forum.springframework.org/showthread.php?t=57502 for details).

Lucas Ward suggests that this check might better be made during ItemStream#open().",,;21/Jul/08 12:17 AM;robert.kasanicky;7200,;14/Aug/08 2:41 AM;lucas.l.ward;3600,,,,,,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,338688000,,,,,2008-07-17 19:45:19.97,11862,true,lucas.l.ward(lucas.l.ward),,,,0|i056jr:,30267,27270,,,,,17/Jul/08 7:45 PM;robert.kasanicky;Resources are checked for existance in afterPropertiesSet() in all ItemReaders reading from a Resource - I think we should be consistent and either change them all to do the check in open(..) or advocate using a resource proxy for MultiResourceItemReader.,17/Jul/08 9:48 PM;david_syer;Checking in open() makes sense in a lot of circumstances.  I reckon we should do that by default (and maybe add a failFastIfResourceAbsent flag for the old behaviour).,20/Jul/08 10:50 PM;robert.kasanicky;generalized issue description,21/Jul/08 12:06 AM;robert.kasanicky;further generalized summary to include ItemWriters,21/Jul/08 12:17 AM;robert.kasanicky;moved the resource checks from afterPropertiesSet() to open(..) in both ItemReaders and ItemWriters,"13/Aug/08 5:25 AM;gregabell;Per forum post http://forum.springframework.org/showthread.php?t=58604, I'd really like to see this get into V1.1.2. I've done a work around -- extended MultiResourceItemReader overriding afterPropertiesSet() to do nothing -- but I won't be able to use V2.0 when available because I'm stuck on Java 1.4 until 2009 and my application deploys this year. Your fix to the trunk is much more comprehensive wrt ItemReader's and ItemWriter's.",13/Aug/08 6:13 PM;david_syer;Re-opened to merge fix into 1.1,"14/Aug/08 2:42 AM;lucas.l.ward;Merged with 1.1 (reviewed by Dave), closing.",,,,,,,,,,,,,,,
Upgrade StepExecutionResourceProxy to be able to use values from job execution context.,BATCH-733,23195,19134,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,17/Jul/08 5:51 AM,24/Nov/08 1:48 AM,10/May/19 2:37 AM,24/Nov/08 1:48 AM,1.1.0,,,,,,2.0.0.M3,,,,,,,,0,,"A common use case for the job level ExecutionContext was to allow a file that was generated from one step as output, to be used as input in another step.  However, the StepExecutionResourceProxy can't pull values from the job level execution context, which would require the value to be moved over.",,;21/Jul/08 3:40 AM;david_syer;7200,,,,,,,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,340761600,,,,,2008-07-21 17:51:23.039,5868,false,david_syer(david_syer),,,,0|i02jnz:,14895,14198,,,,,"21/Jul/08 7:24 AM;lucas.l.ward;Dave,

It seems like this issue should be resolved in the 1.1 branch as well?  The primary use case for the Job level ExecutionContext was to use a file created in one step as the input for another step.","21/Jul/08 5:51 PM;david_syer;I'm trying to pull something more comprehensive together for 2.0.  1.1 could have a bandaid just for the specific use case you mention, but there is an easy workaround using a delegating reader that is also a StepExecutionListener.  If you want a bandaid in 1.1.1 can we open another issue?",,,,,,,,,,,,,,,,,,,,,
"FlatFileItemReader doesn't take ""firstLineIsHeader"" flag into account when restarting",BATCH-732,23193,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,thomas.risberg,thomas.risberg,17/Jul/08 2:18 AM,23/Sep/08 11:26 AM,10/May/19 2:37 AM,17/Jul/08 4:05 AM,1.1.0,2.0.0.M1,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,"FlatFileItemReader doesn't take ""firstLineIsHeader"" flag into account when restarting so the restart begins with the last successfully processed item rather than the one following it.  This is only an issue if the flat file contains a header line.",,;17/Jul/08 4:05 AM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341107200,,,,,2008-07-17 04:03:13.269,11863,false,lucas.l.ward(lucas.l.ward),,,,0|i0567b:,30211,27197,,,,,17/Jul/08 4:03 AM;david_syer;Fixed (the same problem was present also for ignored lines).,"17/Jul/08 7:15 AM;thomas.risberg;There is also a ""record != null"" test that never will be useful since record is not assigned in the loop. Shouldn't the readLine call do that?

--Thomas
",17/Jul/08 8:02 AM;david_syer;Good catch.  Fixed in 2.0 (didn't bother in 1.1).,,,,,,,,,,,,,,,,,,,,
Add remove(key) method to ExecutionContext class,BATCH-728,23166,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,prebennilsson,prebennilsson,15/Jul/08 7:26 PM,12/Aug/08 12:50 AM,10/May/19 2:37 AM,16/Jul/08 8:38 PM,1.0.1,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,"When restarting a tasklet step, I would like to be able to remove entries from the ExecutionContext, as they might not apply to the new execution of the tasklet step.

http://forum.springframework.org/showthread.php?p=191597#post191597

Needs work done in ExecutionContext class and JdbcExecutionContextDao class",,;16/Jul/08 8:38 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341193600,,,,,2008-07-15 20:39:02.289,5870,true,lucas.l.ward(lucas.l.ward),,,,0|i020a7:,11755,11680,,,,,"15/Jul/08 7:36 PM;prebennilsson;If possible, it would be very handy to have both an ExecutionContext.remove(String key) method and an ExecutionContext.removeByPattern(String pattern). That would enabled me to ""remove all entries starting with ""XYZ"" from the ExecutionPattern"".","15/Jul/08 8:39 PM;david_syer;I'm OK with the low-level remove(key), but I don't think the pattern-based version belongs here.",16/Jul/08 8:38 PM;robert.kasanicky;added the remove(key) method,"16/Jul/08 8:46 PM;robert.kasanicky;@Preben: I suggest implementing something like static ExecutionContextUtils.removeByPattern(String pattern, ExecutionContext ctx) to handle your use case - I guess it's rare people would need such functionality so it makes sense to keep it out of the execution context.","16/Jul/08 9:18 PM;prebennilsson;@Robert: I only suggested this to be in the framework, because I don't think that ""outsiders"" should access the database, but stick to the API. Having an ExecutionContextUtils would be OK. I have seen other requests in the forum, that could be solved by having XxxxUtils classes.",,,,,,,,,,,,,,,,,,
Move all POMs in trunk to 2.0.0.CI-SNAPSHOT,BATCH-727,23134,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,14/Jul/08 6:14 PM,23/Sep/08 12:27 PM,10/May/19 2:37 AM,14/Jul/08 6:54 PM,1.1.0,,,,,,2.0.0.M1,,,,,,,,0,,,,;14/Jul/08 6:53 PM;robert.kasanicky;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341366400,,,,,2008-07-14 18:54:41.16,5871,true,lucas.l.ward(lucas.l.ward),,,,0|i02jof:,14897,14200,,,,,14/Jul/08 6:54 PM;robert.kasanicky;changed the suffix from DEV to CI,,,,,,,,,,,,,,,,,,,,,,
The description of DelegatingItemReader in Appendix A( List of ItemReaders),BATCH-725,23117,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,sanghyuk.jung,sanghyuk.jung,13/Jul/08 7:46 PM,24/Oct/08 8:37 AM,10/May/19 2:37 AM,08/Oct/08 11:20 PM,1.0.1,,,,,,1.1.3,,,Documentation,,,,,0,,"Hello. 

I can see the description of DelegatingItemReader in Appendix A( List of ItemReaders) as following

http://static.springframework.org/spring-batch/spring-batch-docs/reference/html/apa.html#d0e4963

""Extends AbstractMethodInvokingDelegator, which enables dynamically calling of a custom method of the injected object. Provides a convenient API for dynamic method invocation shielding subclasses from the low-level details and exception handling.""


I guess this description is about ItemReaderAdapter, not DelegatingItemReader. (AggregateItemReader doesn't extend AbstractMethodInvokingDelegator)",Documentation,;08/Oct/08 11:21 PM;robert.kasanicky;1800,,,,,,,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,333936000,,,,,2008-10-08 23:20:51.309,11866,true,lucas.l.ward(lucas.l.ward),,,,0|i01s7z:,10449,10431,,,,,"13/Jul/08 7:53 PM;sanghyuk.jung;On last line, I made a mistake.
(AggregateItemReader doesn't extend AbstractMethodInvokingDelegator) ->
(DelegatingItemReader doesn't extend AbstractMethodInvokingDelegator)",08/Oct/08 11:20 PM;robert.kasanicky;fixed descriptions of ItemReaderAdapter and DelegatingItemReader,,,,,,,,,,,,,,,,,,,,,
tablePrefix property is not injected into JbdcExecutionContextDao,BATCH-723,23111,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,dvarnes,dvarnes,13/Jul/08 1:54 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,13/Jul/08 6:35 PM,1.1.0,,,,,,1.1.0,,,Core,,,,,0,,"When using an alternate table prefix in the batch repository schema and
setting this property on the JobRepositoryFactoryBean, the setting is properly injected into the three primary daos
(  JdbcJobInstanceDao, JdbcJobExecutionDao, JdbcStepExecutionDao ).

However the setting is not injected into the JdbcExecutionContextDao, resulting in an inconsistent table naming prefix strategy in the batch schema.

It appears to me that the JdbcJobExecutionDao and JdbcStepExecutionDao each create an instance of the JdbcExecutionContextDao, referred to as ""ecDao"", and should inject the tablePrefix.  

They already set some properties of the ""ecDao"" in their afterPropertiesSet() .. but seems they neglect to inject the tablePrefix as well.

Should be a simple one line fix in each dao?

",1.1.-DEV-SNAPSHOT as at Mon 14.July.08,;13/Jul/08 6:45 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,13/Jul/08 2:22 PM;dvarnes;inject-table-prefix-ecDao.patch;https://jira.spring.io/secure/attachment/14361/inject-table-prefix-ecDao.patch,,,,,,,,,,,339379200,,,,,2008-07-13 18:35:16.08,5873,false,david_syer(david_syer),,,,0|i01t9b:,10617,10596,,,,,"13/Jul/08 2:22 PM;dvarnes;The attached simple patch works.  

It is actually three lines :-) ,but the third one may be the one you don't like:
Making tablePrefix protected in the abstract dao?  Otherwise create a public getter ...  your call.

thanks for a great product
davidv

ps: You might want to correct the typos in the issue title.",13/Jul/08 6:35 PM;david_syer;I think the snapshots haven't been publishing properly (problem in the CI server).  If you look in SVN you should find that this is already fixed.,13/Jul/08 6:40 PM;robert.kasanicky;Actually I just commited the fix (the table prefix really wasn't being set) + created follow up issue for 2.0 BATCH-724. For now I just tried running the sample jobs manually with custom prefix and it worked fine.,"13/Jul/08 7:44 PM;dvarnes;Thanks for applying so fast Robert   ..   updated code working for me.

@Dave .. I made the patch against svn ..  I think Robert just committed before you looked   :-)

thanks again guys
davidv",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
SkipListener isn't covered in docs,BATCH-717,23034,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Jul/08 6:22 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,07/Jul/08 11:38 AM,1.0.1,,,,,,1.1.0,,,Documentation,,,,,0,,,,;07/Jul/08 11:38 AM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:16.88,11872,false,david_syer(david_syer),,,,0|i01s8f:,10451,10433,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
Update migration guide,BATCH-716,23033,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,07/Jul/08 3:53 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,07/Jul/08 3:54 AM,1.0.1,,,,,,1.1.0,,,,,,,,0,,There have been a few last minute changes made to 1.1 since the migration guide was created.  It should be updated to reflect the latest changes.,,;07/Jul/08 3:54 AM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:16.812,11873,false,david_syer(david_syer),,,,0|i01ta7:,10621,10600,,,,,07/Jul/08 3:54 AM;lucas.l.ward;The migration guide has been updated to include the changes to tokenizers and FlatFileItemWriter,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
FlatFileItemWriter initialization causes file deletion,BATCH-713,22981,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,03/Jul/08 5:09 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,03/Jul/08 5:51 AM,1.0.1,,,,,,1.1.0,,,Infrastructure,,,,,0,,"FlatFileItemWriter will inadvertently delete it's output file multiple times if open is not called first.  The following unit test fails on my machine:

	public void testWriteBeforeOpen() throws Exception{
		
		writer.write(""test1"");
		writer.flush();
		writer.open(executionContext);
		writer.write(""test2"");
		writer.flush();
		assertEquals(""test1"", readLine());
		assertEquals(""test2"", readLine());
	}

The issue is that the write method initializes the buffer:

public void write(String line) throws IOException {
			if (!initialized) {
				initializeBufferedWriter();
			}

			outputBufferedWriter.write(line);
			outputBufferedWriter.flush();
			linesWritten++;
		}

Note: the above is from OutputState#write

However, the open method never checks to see if it's already been initialized:

	public void open(ExecutionContext executionContext) throws ItemStreamException {
		OutputState outputState = getOutputState();
		if (executionContext.containsKey(getKey(RESTART_DATA_NAME))) {
			outputState.restoreFrom(executionContext);
		}
		try {
			outputState.initializeBufferedWriter();
		}
		catch (IOException ioe) {
			throw new ItemStreamException(""Failed to initialize writer"", ioe);
		}
		if (outputState.lastMarkedByteOffsetPosition == 0) {
			for (Iterator iterator = headerLines.iterator(); iterator.hasNext();) {
				String line = (String) iterator.next();
				lineBuffer.add(line + lineSeparator);
			}
		}
	}

Thus, the FileUtils will call delete on the file.


",,;03/Jul/08 5:50 AM;lucas.l.ward;12600,,,,,,,,,,,,,,14400,0,12600,87%,14400,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:16.574,11875,false,david_syer(david_syer),,,,0|i01tav:,10624,10603,,,,,"03/Jul/08 5:51 AM;lucas.l.ward;FlatFileItemWriter.write will now throw a WriterNotOpenException if it has not been opened before being written.  However, open can now be called multiple times without causing any issues.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Upgrade ItemReaders to use Parameterized types,BATCH-712,22978,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,03/Jul/08 2:32 AM,23/Sep/08 11:25 AM,10/May/19 2:37 AM,23/Jul/08 11:07 PM,,,,,,,2.0.0.M1,,,Core,Infrastructure,Samples,,,0,,,,parameterized most of the ItemReaders and their collaborators;18/Jul/08 1:20 AM;robert.kasanicky;23400,;21/Jul/08 12:41 AM;robert.kasanicky;14400,;23/Jul/08 2:36 AM;robert.kasanicky;3600,;23/Jul/08 11:07 PM;robert.kasanicky;14400,,,,,,,,,,,86400,0,55800,64%,86400,0,55800,,,,,,,,,,,,,,,,,,,,,,,,,,340588800,,,,,2008-07-20 19:19:06.623,5876,true,lucas.l.ward(lucas.l.ward),,,,0|i01o1r:,9773,9802,,,,,20/Jul/08 7:19 PM;robert.kasanicky;reverted to original summary as there is a separate issue for parameterizing ItemWriters,"23/Jul/08 11:07 PM;robert.kasanicky;ItemReaders are now parameterized, including testcases.",,,,,,,,,,,,,,,,,,,,,
Upgrade ItemWriter and implementations to use parameterized types,BATCH-711,22977,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,03/Jul/08 2:31 AM,23/Sep/08 11:24 AM,10/May/19 2:37 AM,23/Jul/08 11:10 PM,,,,,,,2.0.0.M1,,,Core,Infrastructure,Samples,,,0,,,,"Committed the initial update, there will still need to be a lot of updates to fix all the various ItemWriter implementations, but it's a decent start.;20/Jul/08 3:28 PM;lucas.l.ward;28800",;23/Jul/08 2:36 AM;robert.kasanicky;28800,"ItemWriters are now parameterized, including testcases;23/Jul/08 11:10 PM;robert.kasanicky;28800",,,,,,,,,,,,86400,0,86400,100%,86400,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,340588800,,,,,2008-07-23 23:10:55.873,11876,true,lucas.l.ward(lucas.l.ward),,,,0|i01o1z:,9774,9803,,,,,"23/Jul/08 11:10 PM;robert.kasanicky;ItemWriters are now parameterized, including testcases ",,,,,,,,,,,,,,,,,,,,,,
Upgrade unit tests to use Spring Test Java 5 features,BATCH-710,22976,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,lucas.l.ward,lucas.l.ward,03/Jul/08 2:29 AM,23/Sep/08 11:24 AM,10/May/19 2:37 AM,07/Aug/08 12:41 AM,,,,,,,2.0.0.M1,,,Core,Infrastructure,Samples,,,0,,,,Updated JdbcJobDaoTests to use SpringJUnit4ClassRunner and SimpleJdbcTemplate;29/Jul/08 2:16 PM;thomas.risberg;3600,"Updated remaining ""core"" tests to use SpringJUnit4ClassRunner and SimpleJdbcTemplate;30/Jul/08 1:49 AM;thomas.risberg;7200","Updated ""infrastructure"" tests to use SpringJUnit4ClassRunner and SimpleJdbcTemplate;30/Jul/08 7:00 AM;thomas.risberg;3600"," Updated ""infrastructure-tests"" classes to use SpringJUnit4ClassRunner and SimpleJdbcTemplate
;30/Jul/08 12:03 PM;thomas.risberg;7200",cleanup;31/Jul/08 10:59 AM;thomas.risberg;3600,added some @Test and removed @Transactional for the ItemReader tests;06/Aug/08 12:42 PM;thomas.risberg;3600,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-07-29 14:04:59.368,11877,false,lucas.l.ward(lucas.l.ward),,,,0|i01o27:,9775,9804,,,,,29/Jul/08 2:04 PM;thomas.risberg;I'm changing any tests extending org.springframework.test.AbstractSpringContextTests or its subclasses - regular JUnit tests can be converted to JUnit 4 as they are touched later on.  Also changing any JdbcTemplate use to SimpleJdbcTemplate.,06/Aug/08 12:23 PM;thomas.risberg;Missed aom @Test annotations on the Hibernate tests,,,,,,,,,,,,,,,,,,,,,
Change all collections to use generics,BATCH-709,22973,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,03/Jul/08 2:21 AM,23/Sep/08 11:05 AM,10/May/19 2:37 AM,17/Jul/08 7:22 PM,,,,,,,2.0.0.M1,,,Core,Infrastructure,,,,0,,,,upgraded the infrastructure module (with a few exceptions);15/Jul/08 1:19 AM;robert.kasanicky;25200,updated remaining modules (exluding tests);16/Jul/08 7:56 PM;robert.kasanicky;32400,updated the tests;17/Jul/08 7:22 PM;robert.kasanicky;25200,,,,,,,,,,,,57600,0,82800,143%,57600,0,82800,,,,,,,,,,,,,,,,,,,,,,,,,,341107200,,,,,2008-07-16 19:59:34.138,5877,true,lucas.l.ward(lucas.l.ward),,,,0|i02jon:,14898,14201,,,,,"16/Jul/08 7:59 PM;robert.kasanicky;src/main updated, src/test will be handled within BATCH-710",16/Jul/08 10:49 PM;robert.kasanicky;I guess it makes more sense to track the tests' generics update here afterall - reopening,17/Jul/08 11:32 PM;david_syer;I still get a lot of warnings from Eclipse about generic types (mainly in infrastructure).  Can't we get rid of those?,"17/Jul/08 11:40 PM;robert.kasanicky;Dave, the warnings you see are probably related to my work in progress on BATCH-712, not collections lacking types (although there are a few left that are difficult to fix, but I better not suppress the warnings just yet).",,,,,,,,,,,,,,,,,,,
merge MultiResourceItemReader and SortedMultiResourceItemReader,BATCH-708,22971,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,03/Jul/08 1:49 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,03/Jul/08 7:31 PM,1.1.0,,,,,,1.1.0,,,Infrastructure,,,,,0,,"Everybody will likely just use the SortedMRIR, so providing two classes seems more confusing than useful",,merged the two classes;03/Jul/08 7:31 PM;robert.kasanicky;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:16.497,5878,false,david_syer(david_syer),,,,0|i01tb3:,10625,10604,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
interrupt support in SystemCommandTasklet,BATCH-707,22969,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,02/Jul/08 11:51 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,03/Jul/08 7:33 PM,1.1.0,,,,,,1.1.0,,,,,,,,0,,SystemCommandTasklet should be detecting StepExecution.isTerminateOnly == true while executing the system command in separate thread.,,SCT now implements StepExecutionListener and monitors the StepExecution periodically for isTeminateOnly == true;03/Jul/08 7:33 PM;robert.kasanicky;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:16.406,5879,false,david_syer(david_syer),,,,0|i01tbb:,10626,10605,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
Should DefaultFieldSet throw IllegalArgumentException?,BATCH-704,22954,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,02/Jul/08 1:03 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,07/Jul/08 3:45 AM,1.0.1,,,,,,1.1.0,,,Infrastructure,,,,,0,,"The DefaultFieldSet throws IllegalArgumentException as it's basic exception.  For example:

	public BigDecimal readBigDecimal(int index, BigDecimal defaultValue) {
		String candidate = readAndTrim(index);

		try {
			return (StringUtils.hasText(candidate)) ? new BigDecimal(candidate) : defaultValue;
		}
		catch (NumberFormatException e) {
			throw new IllegalArgumentException(""Unparseable number: "" + candidate);
		}
	}

Although, other operations will throw the NumberFormatException:

public double readDouble(int index) {
		return Double.parseDouble(readAndTrim(index));
	}

(parseDouble throws NumberFormatException)  It seems odd that the readBigDecimal method takes NumberFormatException, which extends IllegalArgumentException, and casts it to an IAE, especially when all the other similar operaitons just throw NumberFormatException.

Something similar could be done with dates:

		try {
			date = sdf.parse(value);
		}
		catch (ParseException e) {
			throw new IllegalArgumentException(e.getMessage() + "", pattern: ["" + pattern + ""]"");
		}
		return date;

I know ParseException is checked, but perhaps we could use something like IllegalFormatException, which extends IAE?

It's not a big deal, but when logging out reasons for parsing failure, it's odd to see the cause of a FlatFileParseException to be an IllegalArgumentException, rather than a NumberFormatException when attempting to read a BigDecimal.",,;07/Jul/08 3:45 AM;lucas.l.ward;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:15.981,11879,false,david_syer(david_syer),,,,0|i01tbr:,10628,10607,,,,,"07/Jul/08 3:45 AM;lucas.l.ward;An error while parsing a BigDecimal now throws a customized NumberFormatException (in order to contain the field that was an issue), rather than an IllegalArgumentException.

There isn't really a decent common runtime exception for a date parse failure, so I left it alone for now.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Consistent handling of LineTokenizer formatting errors,BATCH-700,22915,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,01/Jul/08 9:50 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,03/Jul/08 2:44 PM,1.0.1,,,,,,1.1.0,,,Infrastructure,,,,,0,,"The various LineTokenizer implementations don't consistently handle errors in formatting, nor is there anyway to determine that an error was related to formatting rather than parsing.    Below is an example from DelimitedLineTokenizer: 

	public void testTooFewNames() {
		tokenizer.setNames(new String[] {""A"", ""B""});
		try {
			tokenizer.tokenize(""a,b,c"");
			fail(""Expected IllegalArgumentException"");
		}
		catch (IllegalArgumentException e) {
			// expected
		}
	}

	public void testTooManyNames() {
		tokenizer.setNames(new String[] {""A"", ""B"", ""C"", ""D""});
		FieldSet line = tokenizer.tokenize(""a,b,c"");
		assertEquals(4, line.getFieldCount());
		assertEquals(""c"", line.readString(""C""));
		assertEquals(null, line.readString(""D""));
	}

If there are less names than columns in the data, then an IllegalArgumentException will be thrown.  However, if there are more names than columns, the extra data will be passed in as null, likely causing a parsing error in the FieldSetMapper.  FixedLengthLineTokenizer is somewhat similar:

	public void testLongerLinesRestIgnored() throws Exception {
		tokenizer.setColumns(new Range[] {new Range(1,10),new Range(11,25),new Range(26,30)});
		// test shorter line as defined by record descriptor
		line = ""H1"";
		FieldSet tokens = tokenizer.tokenize(line);
		// test longer lines => rest will be ignored
		line = ""H1        12345678       1234567890"";
		tokens = tokenizer.tokenize(line);
		assertEquals(3, tokens.getFieldCount());
		assertEquals(line.substring(0, 10).trim(), tokens.readString(0));
		assertEquals(line.substring(10, 25).trim(), tokens.readString(1));
		assertEquals(line.substring(25, 30).trim(), tokens.readString(2));		
	}

If there is more data in the line than the ranges allow for, the extra data is just ignored.  However, if the input string is smaller than the ranges allow, empty strings are passed for the three fields:

	public void testTokenizeSmallerStringThanRanges() {
		tokenizer.setColumns(new Range[] {new Range(1,5),new Range(6,10),new Range(11,15)});
		FieldSet tokens = tokenizer.tokenize(""12345"");
		assertEquals(3, tokens.getFieldCount());
		assertEquals(""12345"", tokens.readString(0));
		assertEquals("""", tokens.readString(1));
		assertEquals("""", tokens.readString(2));
	}

An empty string however, will yield a fieldset with 0 fields rather than 3 empty fields:

       public void testTokenizeEmptyString() {
		tokenizer.setColumns(new Range[] {new Range(1,5),new Range(6,10),new Range(11,15)});
		FieldSet tokens = tokenizer.tokenize("""");
		assertEquals(0, tokens.getFieldCount());
	}

The reason I began investigating how bad formatting is handled came up due to a use case at a client.  There's workflow for a batch job that separates whether or not a record is bad because it was formatted incorrectly, versus a parsing error.  However, because of the above behavior, I have no reliable way to determine why a line failed.  For example, if I expect there to be 3 columns in a delimited file (by setting the names) and there's only two, there will be an IllegalArgumentException that gets wrapped in a FlatFileParseException, and the FieldSetMapper will never be called.  However, if there's more columns than I expected (indicating an extra comma) then I will get back a FieldSet, but need to manually check for any extra columns to ensure that it was formatted correctly, from which I can throw an Exception, that will get wrapped in a FlatFileParseException (which I have to do in order to get the original line) that I can then log out.  The only way I can get this to work is by not setting the names, and manually checking the size.  Then, in my listener, I can check the cause of the FlatFileParseException to see if it is a FormatException or a NumberFormatException (caused by trying to parse an alpha into a BigDecimal)  None of it really behaved the way I expected it to.  I expected that if I configured a tokenizer to have a certain number of columns (whether by setting ranges or names) that the tokenizer would throw an exception when it encountered a record with too few or too many columns.  Of course, if it did I suppose I would be in bigger trouble, since there would be no way to determine exactly why a FlatFileParseException was thrown.  In my mind there are three separate types of errors:

1. Format - the line wasn't in the correct format, either it was missing a comma, or had more data than expected, etc)
2. Parse - The data within a column couldn't be parsed to the expected type
3. Validation - the data was correctly formatted and parsed by doesn't fall within accepted ranges for business reasons.

For this reason, i would like LineTokenizers to throw FlatFileFormatException ( a new exception class ) if there are any errors encountered formatting, with FieldSetMapper throwing FlatFileParseException.  This would allow for correctly determining the cause of an error when reading a file.

Another approach would be to never throw an exception and leave it to the developer to validate the FieldSet themselves.  However, to me this violates the principle of least astonishment.  I expect that if I configured a LineTokenizer to tokenize lines with certain properties, that it will throw an exception if the line doesn't match them.  Although, I suppose there could be a property such as 'enforceFormatErrors' that would determine the approach.


",,;03/Jul/08 3:19 PM;lucas.l.ward;18000,,,,,,,,,,,,,,28800,0,18000,62%,28800,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:15.633,11880,false,david_syer(david_syer),,,,0|i01tc7:,10630,10609,,,,,"03/Jul/08 2:44 PM;lucas.l.ward;Both Delimited and FixedLength tokenizers should be more consistent:

Delimited: 

* If no names are set, there will be no checks.  If the line is null or empty, an empty FieldSet will be returned.
* If names are set and the number of tokens doesn't match the number of names, then an IncorrectTokenCountException will be thrown, containing the expected count and the actual count.

FixedLength:

* The length of the line will always be checked against the highest number in the ranges (regardless of their order).  The only way in which an empty or null line can pass is if an empty Range[] is set.
* Lines that don't match the correct range will throw an IncorrectLineLengthException, containing the expected length and the actual length.
* If the number of names doesn't match the number of ranges, an IncorrectTokenCountException will be thrown, unless the line length doesn't match the ranges, in which case an IncorrectLineLengthException will be thrown. (incorrect line length will always take precedence)

I ultimately decided that if someone didn't want the strictness in delimited, they could not set names, and if they had extra input in the FixedLength that they didn't care about, they could still provide a range indicating that they expected it to be there (otherwise we have no way of knowing)",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Document thread safety,BATCH-699,22905,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,01/Jul/08 5:27 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,01/Jul/08 10:12 PM,1.0.1,,,,,,1.1.0,,,Documentation,,,,,0,,"The javadocs for many classes don't document their thread safety.  JobParameters for example, should be marked as threadsafe.  However, almost all of our ItemReader implementations should be marked as not thread safe.",,Added javadoc mostly to ItemReaders and ItemWriters and fixed the misleading javadoc of ItemReader interface.;01/Jul/08 10:12 PM;robert.kasanicky;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:15.565,5884,false,david_syer(david_syer),,,,0|i01s8n:,10452,10434,,,,,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
StaxEventItemWriter test failures,BATCH-698,22886,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,30/Jun/08 10:49 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,01/Jul/08 12:52 AM,1.1.0,,,,,,1.1.0,,,Infrastructure,,,,,0,,"cca one half of the StaxItemWriterTests keep failing (reproduced on two machines, Windows & Linux).",,fixed unjustified assertions;01/Jul/08 12:51 AM;robert.kasanicky;14400,,,,,,,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:15.427,5885,false,david_syer(david_syer),,,,0|i01tcf:,10631,10610,,,,,30/Jun/08 10:50 PM;robert.kasanicky;anybody else facing the same issue?,"01/Jul/08 12:21 AM;robert.kasanicky;Looks like the tests were passing only by accident - it was assumed file is empty until ItemWriter#flush(), but the root tag is written directly using XMLEventWriter which flushes the events at undefined time.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
JdbcGameDaoIntegrationTests fail in Oracle due to padding of CHAR(8) for PLAYER_ID column,BATCH-697,22865,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,thomas.risberg,thomas.risberg,30/Jun/08 2:19 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jun/08 10:34 PM,,,,,,,1.1.0,,,Samples,,,,,0,,JdbcGameDaoIntegrationTests fail in Oracle due to padding of CHAR(8) for PLAYER_ID column.  A padded and un-padded value will not evaluate to equal so verification query fails when no data found.,,applied patch;30/Jun/08 10:33 PM;robert.kasanicky;1800,,,,,,,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,30/Jun/08 2:23 PM;thomas.risberg;BATCH-697.patch;https://jira.spring.io/secure/attachment/14279/BATCH-697.patch,,,,,,,,,,,339379200,,,,,2008-06-30 22:34:05.975,5886,false,david_syer(david_syer),,,,0|i01o33:,9779,9808,,,,,"30/Jun/08 2:23 PM;thomas.risberg;Attached patch modifiying select criteria to reflect padded CHAR(8) column value.

--Thomas",30/Jun/08 10:34 PM;robert.kasanicky;patch applied,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
JdbcPlayerDaoIntegrationTests fail due to rows added to customer table by other test,BATCH-696,22864,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,thomas.risberg,thomas.risberg,30/Jun/08 1:14 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jun/08 8:55 PM,,,,,,,1.1.0,,,,,,,,0,,"The JdbcPlayerDaoIntegrationTests fail due to rows added to customer table by other tests.  The tests expect an empty table but it contains other rows:
ID: AbduKa00
ID: AbduRa00
ID: AberWa00
ID: AbraDa00
ID: AdamBo00

",,applied Thomas' patch;30/Jun/08 8:54 PM;robert.kasanicky;1800,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,30/Jun/08 1:24 PM;thomas.risberg;BATCH-696.patch;https://jira.spring.io/secure/attachment/14278/BATCH-696.patch,,,,,,,,,,,339379200,,,,,2008-06-30 20:55:06.421,5887,false,david_syer(david_syer),,,,0|i01tcn:,10632,10611,,,,,30/Jun/08 1:21 PM;thomas.risberg;It's actually the PLAYERS table.  Similar issue is affecting the PLAYER_SUMMARY table used in the JdbcPlayerSummaryDaoIntegrationTests as well.  The tables need to be cleared before tests are run.,"30/Jun/08 1:24 PM;thomas.risberg;Attaching a patch for this issue - clearing the tables used for test in onSetUpInTransaction method.

--Thomas","30/Jun/08 8:55 PM;robert.kasanicky;patch applied, thanks",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
SystemCommandTaskletIntegrationTests fails on Java 6 for Mac OS X,BATCH-695,22862,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,thomas.risberg,thomas.risberg,30/Jun/08 12:55 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,01/Jul/08 7:06 PM,,,,,,,1.1.0,,,Samples,,,,,0,,"SystemCommandTaskletIntegrationTests fails on Apple's Java version 1.6.0_05 for Mac OS X:

-------------------------------------------------------------------------------
Test set: org.springframework.batch.sample.tasklet.SystemCommandTaskletIntegrationTests
-------------------------------------------------------------------------------
Tests run: 6, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.522 sec <<< FAILURE!
testExecuteFailure(org.springframework.batch.sample.tasklet.SystemCommandTaskletIntegrationTests)  Time elapsed: 5.009 sec  <<< ERROR!
org.springframework.batch.sample.tasklet.SystemCommandException: Execution of system command failed (did not finish successfully within the timeout)

The command ""java -invalid-argument"" never returns (hangs until ctrl-c using command line) so in the tests the command times out rather than fails which causes the error.",,analysis of the problem on different platforms + patch applied;01/Jul/08 7:05 PM;robert.kasanicky;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,30/Jun/08 1:02 PM;thomas.risberg;BATCH-695.patch;https://jira.spring.io/secure/attachment/14277/BATCH-695.patch,,,,,,,,,,,339379200,,,,,2008-06-30 20:20:01.862,5888,false,david_syer(david_syer),,,,0|i01o3b:,9780,9809,,,,,"30/Jun/08 1:02 PM;thomas.risberg;Patch for this issue - switching to use an unknown class rather than an invalid argument seems to work better.

Note that the problem described in this issue only happens on the current version of Java 6 for Mac OS X.  It doesn't happen on Java 5 or the SoyLatte distribution of Java 6.  Still worth fixing since most mac users will be using the Apple provided Java 6 release.

--Thomas","30/Jun/08 8:20 PM;robert.kasanicky;Strangely the ""java UnknownClass"" times out in the tests on my Windows machine, although it certainly works as expected when invoked from command line.","30/Jun/08 8:25 PM;robert.kasanicky;How about ""java -invalid-argument UnknownClass"" (works for me)?","01/Jul/08 3:34 AM;thomas.risberg;That's strange - that change works fine under Windows and Java 6 as well as Ubuntu and OS X here.

--Thomas
",01/Jul/08 7:06 PM;robert.kasanicky;OK then - patch applied (still doesn't work on my Windows but I suppose there's some weirdness on my side),07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,
make line separator a configurable property of FlatFileItemWriter,BATCH-694,22852,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,raysuliteanu,raysuliteanu,30/Jun/08 2:40 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jun/08 5:39 PM,1.0.1,,,,,,1.1.0,,,,,,,,0,,"Right now, FlatFileItemWriter can only use whatever line separator is defined by the system property line.separator, which obviously changes based on the execution platform. However, I need the same line terminator regardless of execution platform since I need to conform to a 3rd party specification that dictates the file format including line terminators. Currently there is no way to do this. I saw this post on the topic: http://forum.springframework.org/showthread.php?t=56261
",,;30/Jun/08 5:40 PM;david_syer;600,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-06-30 05:27:39.004,11881,false,david_syer(david_syer),,,,0|i01tcv:,10633,10612,,,,,"30/Jun/08 5:27 AM;lucas.l.ward;In thinking about this issue more, it seems like this is more of a deficiency in the RecordSeparatorPolicy interface.  I don't have a solid answer as how best to improve it now, but it makes sense to me that it could potentially also define how to determine what separated lines.  The fact that it requires something else to define what a line is doesn't make much sense to me.

Since this would require an interface change, I'm tentatively assigning it to 2.0.",30/Jun/08 5:39 PM;david_syer;The RecordSeparatorPolicy is part of the input side.  FlatFileItemWriter can easily be modified to accept a configuration property for the line separator.  Fixed in 1.1.,"01/Jul/08 12:36 AM;lucas.l.ward;Sorry about that, I misread the issue.  There was someone else on the forum that was looking for different line separators on input as well.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
Refactor samples along domain contours,BATCH-693,22828,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,david_syer,david_syer,27/Jun/08 3:19 AM,23/Sep/08 11:24 AM,10/May/19 2:37 AM,27/Jul/08 7:06 PM,1.1.0,,,,,,2.0.0.M1,,,Samples,,,,,0,,It has always bugged me that the samples have technical packaging.  It is really hard to isolate the individual domains (e.g. football).,,changed the package structure from ground up;25/Jul/08 12:34 AM;robert.kasanicky;25200,separated implementations into internal subpackages;25/Jul/08 2:22 AM;robert.kasanicky;1800,,,,,,,,,,,,,28800,1800,27000,93%,28800,1800,27000,,,,,,,,,,,,,,,,,,,,,,,,,,340502400,,,,,2008-06-28 03:38:28.611,5889,false,lucas.l.ward(lucas.l.ward),,,,0|i01o3j:,9781,9810,,,,,28/Jun/08 3:38 AM;wxlund;I have had the same concern.  I liked the way you isolated football for the S2AP demo of spring batch.  I did something similar for the project that I've recently sent to a partner were working with.  I agree that samples should be separate projects so that their dependencies can be isolated to the concerns of a particular demo like the Quartz launcher.,"25/Jul/08 12:35 AM;robert.kasanicky;samples now have new package structure - Dave, please take a look whether you are happy with it and the issue can be closed.","25/Jul/08 12:49 AM;david_syer;Looks much better.  How about pushing the implementations into internal packages?  E.g. trade.internal contains everything except the domain objects and their Dao/service interfaces.  Technical subpackages under that level would be acceptable (e.g. file, jdbc, hibernate).",25/Jul/08 2:23 AM;robert.kasanicky;I've separated the internal subpackages as suggested (didn't create further subpackages as there aren't too many classes).,25/Jul/08 2:34 AM;david_syer;I think that looks much better.,,,,,,,,,,,,,,,,,,
Reference documentation review,BATCH-691,22821,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,26/Jun/08 2:34 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,16/Jul/08 3:38 AM,,,,,,,1.1.0,,,Documentation,,,,,0,,The reference documentation should be reviewed in detail to ensure it's accuracy with the latest 1.1 changes.,,Updated the docs through core.;26/Jun/08 3:32 PM;lucas.l.ward;7200,;30/Jun/08 3:17 PM;lucas.l.ward;21600,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-07-16 03:38:17.721,11883,false,david_syer(david_syer),,,,0|i01s8v:,10453,10435,,,,,"30/Jun/08 3:18 PM;lucas.l.ward;Most of the review has been complete, but I still want to do generate the site and check out a few things with some of the changes.",16/Jul/08 3:38 AM;david_syer;Done for 1.1,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
Document how to access StepExecution and JobExecution in Tasklets,BATCH-689,22818,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,kdelong,kdelong,26/Jun/08 10:09 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,21/Jul/08 10:12 PM,1.0.1,,,,,,1.1.1,2.0.0.M1,,Core,,,,,0,,"Tasklets often need to pass information to each other.  It would be nice if Tasklet.execute() was passed an argument of JobExectutionContext or StepExecutionContext so that information could be passed downstream to following steps.  Currently it's a bit messy to implement this.

Example: we have a job where a step splits a huge file into many large files.  A later step needs to move/archive/delete these files.  We need to be able to pass the file names downstream.",n/a,;21/Jul/08 10:11 PM;robert.kasanicky;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-06-26 18:41:11.052,5890,false,david_syer(david_syer),,,,0|i020av:,11758,11683,,,,,"26/Jun/08 6:41 PM;david_syer;Adding to 2.0 (there is a good workaround with no API change in 1.1, which is to make the tasklets JobExecutionListeners).  We might leave it at that, but at least we can have a think about it in the meantime.","27/Jun/08 1:13 AM;lucas.l.ward;I'm confused...can't you just use a StepExecutionListener and then call the following on a StepExecution:

stepExecution.getJobExecution().getExecutionContext()

I suppose we could add an accessor method to the StepExecution, something like getJobExecutionContext(), but it would still be the above behind the scenes.","01/Jul/08 3:36 AM;kdelong;Oh dear.  I didn't realize you could simply have the Tasklet implement StepExecutionListener and it would be automatically registered.  I never saw that in the docs.  We were creating separate listener beans, registering them with the step as listeners, and wiring them up to the tasklets, which was a really hokey design.

In this case, I'd actually change the requested feature to making that functionality more visible in the docs.",21/Jul/08 10:12 PM;robert.kasanicky;added note to docs that TaskletStep auto-registers the tasklet as StepExecutionListener,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
Create Migration guide for 1.1,BATCH-688,22816,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,26/Jun/08 2:14 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,30/Jun/08 7:57 PM,1.0.1,,,,,,1.1.0,,,,,,,,0,,A migration guide for 1.0.1 should be created (along with release notes) detailing the changes and any steps that will need to be taken to upgrade.  Backwards compatibilitiy should also be checked.,,checked backward compatibility and created release notes;30/Jun/08 1:07 AM;robert.kasanicky;21600,added the points Lucas pointed out and put file to the site's migrations directory;30/Jun/08 7:55 PM;robert.kasanicky;3600,,,,,,,,,,,,,28800,3600,25200,87%,28800,3600,25200,,,,,,,,,,,,,,,30/Jun/08 1:04 AM;robert.kasanicky;sb-1.1-release-notes.txt;https://jira.spring.io/secure/attachment/14272/sb-1.1-release-notes.txt,,,,,,,,,,,339379200,,,,,2008-06-30 01:04:27.499,5891,false,david_syer(david_syer),,,,0|i01tdb:,10635,10614,,,,,30/Jun/08 1:04 AM;robert.kasanicky;attached draft of release notes with upgrade comments,30/Jun/08 7:57 PM;robert.kasanicky;1.0.1-1.1.apt is now in the site's migration directory - not yet linked from the site.xml,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
BatchUpdateItemWriter should fail if any of the statements does not update any rows (at least by default).,BATCH-687,22787,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,24/Jun/08 10:41 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,24/Jun/08 10:57 PM,1.0.1,,,,,,1.1.0,,,Infrastructure,,,,,0,,BatchUpdateItemWriter should fail if any of the statements does not update any rows (at least by default).,,;24/Jun/08 10:59 PM;david_syer;1200,,,,,,,,,,,,,,3600,0,1200,33%,3600,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,11885,false,david_syer(david_syer),,,,0|i01tdj:,10636,10615,,,,,24/Jun/08 10:57 PM;david_syer;Added check (and flag to switch off check called assertUpdates).  If the check fails then EmptyResultSetDataAccessException is thrown,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Create documentation for MultiResourceItemReader,BATCH-685,22750,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,23/Jun/08 4:02 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,23/Jun/08 11:36 PM,1.0.1,,,,,,1.1.0,,,Documentation,,,,,0,,,,added 'Multi-file Input' section to ItemReaders and ItemWriters chapter;23/Jun/08 11:35 PM;robert.kasanicky;21600,,,,,,,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-06-23 23:36:40.553,5892,false,david_syer(david_syer),,,,0|i01s93:,10454,10436,,,,,23/Jun/08 11:36 PM;robert.kasanicky;Multi-file Input section added to ItemReaders and ItemWriters chapter,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Lack of parallel support in SimpleStepFactoryBean,BATCH-683,22740,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,adrianshum,adrianshum,22/Jun/08 9:28 PM,15/Jan/09 3:25 AM,10/May/19 2:37 AM,22/Jun/08 9:56 PM,1.1.0,,,,,,,,,,,,,,0,,"Though we can set an async taskExecutor (e.g. SimpleAsyncExecutor, ThreadPoolTaskExecutor) to make item-reader-writer iteration run in parallel, we have no way to set the throttle limit in the TaskExecutorRepeatTemplate instantiated in SimpleStepFactoryBean.  

In order to ease parallel step setup, I would suggest adding ""parallelThrottleLimit"" in SimpleStepFactoryBean, and have these in its applyConfiguration(), something like:


        if (parallelThrottleLimit > 0 && taskExecutor == null) {
            ThreadPoolTaskExecutor x = new ThreadPoolTaskExecutor();
            x.setCorePoolSize(parallelThrottleLimit);
            taskExecutor = x;

        }

        if (taskExecutor != null) {
            TaskExecutorRepeatTemplate repeatTemplate = new TaskExecutorRepeatTemplate();

            if (parallelThrottleLimit > 0) {
                repeatTemplate.setThrottleLimit(parallelThrottleLimit);
            }

            repeatTemplate.setTaskExecutor(taskExecutor);
            stepOperations = repeatTemplate;
        }

",,;22/Jun/08 9:58 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,325382400,,,,,2008-06-22 21:56:34.782,11888,false,david_syer(david_syer),,,,0|i0353z:,18370,180,,,,,22/Jun/08 9:29 PM;adrianshum;Sorry I forgot to change the priority of this issue to a lower one. It should be a minor one,22/Jun/08 9:56 PM;david_syer;Added extra property to SimpleStepFactoryBean,14/Jan/09 2:30 AM;msimaan;Why wasn't this fix merged in any version?,"15/Jan/09 3:25 AM;david_syer;SimpleStepFactoryBean has the throttleLimit property in  1.1.x and 2.0.  What did you mean by ""merged""?",,,,,,,,,,,,,,,,,,,
Non-sequential execution,BATCH-679,22668,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,18/Jun/08 6:43 PM,17/Nov/08 2:00 AM,10/May/19 2:37 AM,17/Nov/08 1:59 AM,1.1.0,,,,,,2.0.0.M3,,,Core,,,,,1,,,,;27/Oct/08 6:53 AM;david_syer;28800,;30/Oct/08 12:02 AM;david_syer;14400,;17/Nov/08 2:00 AM;david_syer;7200,,,,,,,,,,,,28800,0,50400,175%,198000,14400,167520,,,,,,,,,,,,,,,,,,,,,,,,,,343612800,,,,,,11892,false,david_syer(david_syer),,,,0|i03xrj:,23012,19477,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partitioning enablement (SPI).,BATCH-677,22658,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,wxlund,wxlund,18/Jun/08 3:17 AM,19/Jan/09 10:47 PM,10/May/19 2:37 AM,19/Jan/09 5:00 AM,2.0.0.RC2,,,,,,2.0.0.M4,,,,,,,,0,,Want to ensure that it runs on dm Server but should run on any platform. ,runtime ,Evaluated and tried out a buch of proviers.  Drafted a StepSplit SPI.;05/Sep/08 12:14 AM;david_syer;86400,;13/Oct/08 9:59 PM;david_syer;57600,;16/Oct/08 2:45 AM;david_syer;14400,,,,,,,,,,,,230400,14400,158400,68%,302400,23400,196200,,,,,,,,,,,,,,,,,,,,,,,,,,332208000,,,,,2008-10-16 02:46:24.797,11894,false,david_syer(david_syer),,,,0|i03xqf:,23007,19472,,,,,16/Oct/08 2:46 AM;david_syer;Added initial draft of partitioning SPI.  Main strategy is PartitionHandler.  Jobs use it through the PartitionStep.,"28/Oct/08 11:53 AM;lucas.l.ward;This is a minor point, but in the TaskExecutorPartitionHandler, there is the following code:

taskExecutor.execute(new Runnable() {
					public void run() {
						task.run();
					}
				});
				
where task is a FutureTask.  I'm a little confused, since FutureTask also implements the Runnable interface, which is the run being called on the task.  Is this just a harmless leftover of refactoring, or was there some reason for doing it?  It's effectively harmless, but for my own knowledge I wanted to see if there was a reasoning behind it.","28/Oct/08 12:01 PM;lucas.l.ward;I just saw another potential issue in PatritionStep:

aggregator.aggregate(stepExecution, executions);
if (stepExecution.getStatus()!=BatchStatus.COMPLETED) {
	throw new JobExecutionException(""Partition handler returned an incomplete step"");
}

I understand how the aggregator works, (using max in the BathStatus was very clever, btw) effectively returning the 'highest' status out of the entire list.  So if one is Failed, the whole StepExecution is FAILED.  However, given the new contract of Step, it seems like it should return regardless, and not throw an exception.  Perhaps this is another case where the new flow work would be nice.  In sequential Job, a status of failed would indicate the step stopped (and thus the job too), but in a FlowJob, the ExitStatus could indicate an incomplete remote execution, which would potentially allow for a particular compensation step, rather than restarting the step, depending upon business use.","28/Oct/08 12:08 PM;lucas.l.ward;Another quick question based on review:

// If this is a restart we must retain the same grid size, ignoring the
// one passed in...
int splitSize = getSplitSize(stepExecution, gridSize);

I think we've discussed this before, but if someone changes the configuration between runs, should we just use the one from the ExecutionContext, or should we fail the job?  In general, I'm in favor of figuring out the right thing to do, and doing it, but I wonder if someone would up the gridSize, and be confused in a restart scenario, with the results they see.","28/Oct/08 12:15 PM;lucas.l.ward;Another comment regarding the Patritioner interface:

public interface Partitioner {

	Map<String, ExecutionContext> partition(int gridSize);

}

It seems like it could just as easily be:

List<String> partition(int gridSize);

I can't imagine an implementation doing anything but returning new ExecutionContext() for each string, which is what SimplePartitioner does.  If not, it would make much more sense for the Partitioner to do the restart check, rather than the splitter.  Although, I don't have any strong feelings about who does that check.","28/Oct/08 6:57 PM;david_syer;Wow, lots of comments.

#2 you are perfectly right and it was an oversight
#3 not sure need to check.  I might prefer just to throw an exception and let the AbstractStep deal with how it wants to interpret it.
#4 the grid size in general might not be configured - it could well be dynamically determined from the grid itself.  There is no point trying to play catch up - the execution contexts are too important on a restart to ignore some of them, or to try and guess what the missing values are if the grid size has increased.
#5 I think it must be getting late there.  Partitioner has to create the input values for the step executions, so most implementations will actually return very important information in the ExecutionContext (like primary key ranges, file locations etc.)",,,,,,,,,,,,,,,,,
Add new Java 5.0 features,BATCH-673,22654,,Task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,18/Jun/08 2:32 AM,12/Dec/08 4:34 AM,10/May/19 2:37 AM,24/Nov/08 3:46 PM,1.1.0,,,,,,2.0.0.M3,,,Core,Infrastructure,,,,1,,"Add new features that are allowable once the framework has been migrated to java 5.0  Examples may include special annotations and java.util.concurrency, etc.",,;17/Nov/08 7:21 AM;lucas.l.ward;144000,,,,,,,,,,,,,,230400,86400,144000,62%,259200,108000,151200,,,,,,,,,,,,,,,,,,,,,,,,,,329961600,,,,,2008-11-20 17:38:23.639,11897,true,thomas.risberg(thomas.risberg),,,,0|i03xqn:,23008,19473,,,,,"20/Nov/08 5:08 PM;lucas.l.ward;I committed the first draft of annotation support for StepListeners.  It works reliably for annotations and string method names, but the parameter passing is a bit trickier.  I should be able to work it out tomorrow or over the weekend though, it's really more about finding the right method with a generic type.  I should be able to make a reasonable guess, as long as the argument lengths are correct.  There may be errors if the type declared doesn't match, but that's how it would work now anyway.",20/Nov/08 5:38 PM;david_syer;Did you have a look at the MessageMappingMethodInvoker in Spring Integration?,"21/Nov/08 1:25 AM;lucas.l.ward;I've looked at it, and the MethodInvoker I have written is somewhat based on it, with some minor tweaks.  (the one above is looking for Message to be an argument).  It fixed it this morning relatively quickly.  It was one of those problems that looked hard at 1:30 in the morning, but really wasn't.","23/Nov/08 4:50 PM;lucas.l.ward;I committed what should be the last major feature for annotaitons tonight, at least as far as the listeners go.  I suppose there's room to do the same for readers, writer, and processors, but they would really just be extensions to the adapters we already have for them.  I'll create a new issue to support annotations on them.  There is still a little bit of cleanup to do as well.  StepParser could use some DRY refactoring, and the job listeners need to be upgraded to use some of the techniques in StepListeners, but it's all functional, so I suppose it isn't necessary for M3.  (I'll likely get to the job listeners tomorrow though)",,,,,,,,,,,,,,,,,,,
Upgrade samples to Java 5.0,BATCH-672,22653,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,lucas.l.ward,lucas.l.ward,18/Jun/08 2:29 AM,23/Sep/08 11:23 AM,10/May/19 2:37 AM,31/Jul/08 11:56 AM,1.1.0,,,,,,2.0.0.M1,,,Samples,,,,,0,,,,Started work on this - worked on advice and dao tests. Added new AbstractBatchLauncherJunit4Tests base class.;21/Jul/08 5:50 AM;thomas.risberg;57600,"modified item.reader and item.writer tests. Upgraded project to EasyMock 2.4
;22/Jul/08 2:22 PM;thomas.risberg;28800",upgraded to EasyMock 2.4 API and converted JdbcTemplate to SimpleJdbcTemplate for all samples;28/Jul/08 6:56 AM;thomas.risberg;28800,"removed redundant casts and boxing/unboxing, converted to for each loops, general cleanup;31/Jul/08 11:47 AM;thomas.risberg;3600",cleanup;31/Jul/08 11:55 AM;thomas.risberg;3600,,,,,,,,,,144000,21600,122400,85%,144000,21600,122400,,,BATCH-671,,,,,,,,,,,,,,,,,,,,,,,343699200,,,,,,11898,true,lucas.l.ward(lucas.l.ward),,,,0|i01o3z:,9783,9812,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade JobParameters and ExecutionContext for Java 5,BATCH-671,22652,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Blocker,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,18/Jun/08 2:26 AM,12/Aug/08 12:48 AM,10/May/19 2:37 AM,25/Jul/08 1:10 PM,1.1.0,,,,,,2.0.0.M1,,,Core,Infrastructure,,,,1,,"Migrate current features to Java 5.0, this includes adding generics to interfaces, modifying any collections used to be appropriately typed, plus using covariant return where necessary.",,;25/Jul/08 1:10 PM;lucas.l.ward;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,25/Jul/08 8:51 AM;lucas.l.ward;JobParametersPrototype.java;https://jira.spring.io/secure/attachment/14457/JobParametersPrototype.java,25/Jul/08 8:51 AM;lucas.l.ward;TestParameters.java;https://jira.spring.io/secure/attachment/14456/TestParameters.java,,,,,,,,,,338947200,,,,,,11899,true,lucas.l.ward(lucas.l.ward),,,,0|i056l3:,30273,27277,,,,,"25/Jul/08 8:48 AM;lucas.l.ward;I've been taking a look at this issue, and Robert's already upgraded them both to Java 5 in terms of just using generics, but I wanted to see if there were any other improvements that could be made.  ExecutionContext is pretty straight forward, there's a little less casting necessary because of generics (which I cleaned up), but only because of the key.  JobParameters is a little more interesting.  The one issue I've had with this class since I created it was that it's not really a shared keyspace.  I can have two keys with the same name that exist as parameters as long as they're of different types, which is somewhat counterintuitive.  However, there are some fairly nasty problems in fixing this.  ExecutionContext is easy because it can handle any type, but will allow strong typing to certain types.  JobParameters only supports String, Long, Double, and Date.

My first crack at fixing this was the following:

public class JobParametersPrototype {

	private final Map<String, ? extends Object> parameters;
	
	
	public JobParametersPrototype(Map<String, Object> parameters) {
		
		for(Entry<String, Object> entry : parameters.entrySet()){
			Object parameter = entry.getValue();
			String key = entry.getKey();
			Class<?> type = parameter.getClass();
			if (!type.isInstance(String.class) || !type.isInstance(Long.class) || 
					!type.isInstance(Double.class) || !type.isInstance(Date.class)) {
				throw new ClassCastException(""Value for key=["" + key + ""] is not of type: [ String, Long, Double, or Date], it is [""
						+ (parameter == null ? null : ""("" + type + "")"" + parameter) + ""]"");
			}
		}
		
		this.parameters = new LinkedHashMap<String, Object>(parameters);
	}
	
	public long getLong(String key){
		return ((Long)parameters.get(key)).longValue();
	}
	
	public String getString(String key){
		return parameters.get(key).toString();
	}
	
	public Double getDouble(String key){
		return ((Double)parameters.get(key)).doubleValue();
	}
	
	public Date getDate(String key){
		return (Date)parameters.get(key);
	}
	
	public Map<String, ? extends Object> getParameters(){
		return new LinkedHashMap<String, Object>(parameters);
	}
	
}

The above is missing some code, because Dates need to be copied, etc, but it works.  Then I got to thinking about it, and there's sort of a domain concept here of an individual JobParameter that can only be one of four types, and is immutable:

public class TestParameters {

	private final Map<String,JobParameter> parameters;
	
	public TestParameters(Map<String,JobParameter> parameters) {
		this.parameters = parameters;
	}
	
	public long getLong(String key){
		return ((Long)parameters.get(key).getValue()).longValue();
	}
	
	public String getString(String key){
		return parameters.get(key).toString();
	}
	
	public Double getDouble(String key){
		return ((Double)parameters.get(key).getValue()).doubleValue();
	}
	
	public Date getDate(String key){
		return (Date)parameters.get(key).getValue();
	}
	
	public Map<String, JobParameter> getParameters(){
		return new LinkedHashMap<String, JobParameter>(parameters);
	}
	
	private class JobParameter{
		
		private final Object parameter;
		
		public JobParameter(Object parameter) {
			
			Class<?> type = parameter.getClass();
			if (!type.isInstance(String.class) || !type.isInstance(Long.class) || 
					!type.isInstance(Double.class) || !type.isInstance(Date.class)) {
				throw new ClassCastException(""Parameter is not of type: [ String, Long, Double, or Date], it is [""
						+ (parameter == null ? null : ""("" + type + "")"" + parameter) + ""]"");
			}
			
			if(type.isInstance(Date.class)){
				this.parameter = new Date(((Date)parameter).getTime());
			}
			else{
				this.parameter = parameter;
			}
		}
		
		public Object getValue(){
			
			if(parameter.getClass().isInstance(Date.class)){
				return new Date(((Date)parameter).getTime());
			}
			else{
				return parameter;
			}
		}
	}
}

Obviously, JobParameter wouldn't be an inner class, I put it there out of laziness.  However, it handles the type checking at creation, so the JobParameters can garuntee that  a JobParameter is one of the four types...it also handles copying of Dates.  

There's one final problem, how the values are persisted:

	private void insertJobParameters(Long jobId, JobParameters jobParameters) {

		for (Entry<String, String> entry : jobParameters.getStringParameters().entrySet()) {
			insertParameter(jobId, ParameterType.STRING, entry.getKey().toString(), entry.getValue());
		}

		for (Entry<String, Long> entry : jobParameters.getLongParameters().entrySet()) {
			insertParameter(jobId, ParameterType.LONG, entry.getKey().toString(), entry.getValue());
		}

		for (Entry<String, Double> entry : jobParameters.getDoubleParameters().entrySet()) {
			insertParameter(jobId, ParameterType.DOUBLE, entry.getKey().toString(), entry.getValue());
		}

		for (Entry<String, Date> entry : jobParameters.getDateParameters().entrySet()) {
			insertParameter(jobId, ParameterType.DATE, entry.getKey().toString(), entry.getValue());
		}

	}

There's no way to get  a separate map of each type, however, the dao could easily be changed to go through a larger list and check for typing on each object, there could perhaps even be a use for the ParamterType within the JobParameter itself that could make things easier.","25/Jul/08 8:51 AM;lucas.l.ward;Forgot how unreadable the code would be in a comment, so I have attached the two prototype classes.  The other code is part of the JdbcJobInstanceDao implementation.","25/Jul/08 1:10 PM;lucas.l.ward;I have significantly refined the solution that was attached, I'm not sure how I missed it initially, but JobParameter now has 4 different constructors, one for each type supported, which is much cleaner.  I also moved the ParamaterType enumeration from the JdbcInstanceDao to the new JobParameter class (upgrading it to Java 5 as well)  JobParameters now has a single map : Map<String,JobParameter>, which seems more natural to me.  I went ahead and committed the change and am marking this issue as complete.

(Note: I also updated BatchStatus to java 5 as well)",12/Aug/08 12:48 AM;lucas.l.ward;I'm closing this issue since it was already reviewed by everyone during the meeting last week.,,,,,,,,,,,,,,,,,,,
Documentation on savestate for ItemReaders and ItemWriters,BATCH-667,22637,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,wxlund,wxlund,17/Jun/08 9:18 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,07/Jul/08 5:54 AM,1.0.1,,,,,,1.1.0,,,,,,,,0,,"A question came up in the forum today that the docs did not answer. See http://forum.springframework.org/showthread.php?t=56038. DrivingQueryItemReader and KeyCollector are documented in section 8.2 but omits the information in both the javadocs and documentation on the use of setSaveState=true to make a job ""CONTINUABLE"". ",Spring-batch 1.0.1.  ,;07/Jul/08 5:55 AM;lucas.l.ward;3600,,,,,,,,,,,,,,28800,0,3600,12%,28800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-06-18 09:42:42.271,11902,false,david_syer(david_syer),,,,0|i01te7:,10639,10618,,,,,18/Jun/08 9:42 AM;lucas.l.ward;I edited the title of this issue to reflect that this will need to be done for all readers and writers (unless we made some kind of change to how it defaults),"07/Jul/08 5:54 AM;lucas.l.ward;I added a section to Chapter 3 about saveSate, including the fact that it defaults to true now in 1.1.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
simplify FlatFileItemReader,BATCH-662,22545,,Refactoring,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,10/Jun/08 10:42 PM,23/Sep/08 11:15 AM,10/May/19 2:37 AM,10/Aug/08 7:11 PM,1.1.0,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,After implementing item buffering in FlatFileItemReader the FlatFileItemReader -> ResourceLineReader -> ResourceLineReader.State -> BufferedReader chain looks like an overkill. Proper cleanup will require removal of methods so scheduling for uncompatible 2.0.,,;30/Jul/08 1:54 AM;robert.kasanicky;10800,;30/Jul/08 10:24 PM;robert.kasanicky;3600,,,,,,,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,339033600,,,,,2008-07-30 23:59:06.348,5899,true,lucas.l.ward(lucas.l.ward),,,,0|i02jp3:,14900,14203,,,,,30/Jul/08 1:53 AM;robert.kasanicky;commited first attempt - simply moved everything into the FlatFileItemReader class (looks OK this way I think).,30/Jul/08 10:23 PM;robert.kasanicky;the open question now is how to deal with the duplications in FFIR and ResourceLineReader - I'd vote for making RLR forward-only and have FFIR delegate to it again. This means RLR wouldn't implement ItemReader interface anymore (mark + reset).,"30/Jul/08 11:59 PM;david_syer;That's how it always was in the early days, and I would prefer it to go back that way.  RLR is really an internal interface (hence doesn't matter - although I'm sure someone will complain if we change it).","31/Jul/08 10:41 PM;robert.kasanicky;I've noticed a design issue in FFIR - it reads 'lines' until end of 'record' which is then transformed into FieldSet and mapped to item using map(fieldSet, lineNumber). The issue is that fieldSet is a tokenized 'record' (not line) so it doesn't make sense to associate a lineNumber with it in FieldSetMapper.

I see two ways to go:
1.) remove RecordSeparatorPolicy and simply process flat files line by line (use composite reader for multi-line records).
2.) remove lineNumber from FieldSetMapper.mapLine(..) and rename Line* classes to Record* or simply String*","01/Aug/08 2:20 AM;david_syer;I think we might as well keep the int parameter in FieldSetMapper, since it was specifically requested by a couple of users.  In most cases it corresponds to a line, but as you noticed, it would be more accurate to call it a recordNumber or itemNumber.  But I don't really have a problem with Line* in class names, since most of the time it is a line, and the rest of the time the usual behaviour of LineReader is to provide a string without the line separators.  So it's still alogical line.  RecordSeparator is important though IMO.","10/Aug/08 7:11 PM;robert.kasanicky;No changes to the logic how FFIR works, removed now redundant ResourceLineReader",,,,,,,,,,,,,,,,,
Ensure best efforts are made to commit StepExecution when commit fails,BATCH-654,22482,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,telematica,telematica,05/Jun/08 2:31 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,17/Jun/08 8:47 PM,1.0.1,,,,,,1.1.0,,,Core,,,,,0,,"When the commit operation fails in an ItemOrientedStep, the writing of the Spring Batch metadata fails (trying to write the rollback information). 

When trying to commit the transaction, SB has already set the information it's about to persist in the StepExecutionContext. Then, in another transaction, SB wants to store that a rollback ocurred. Nevertheless, SB hasn't read the current persisted state from the database, so it still has the Version it read when trying to commit. That's why we think it fails.

Furthermore, even if it succeeded, the persisted information wouldn't be accurate, because, as I've pointed out, the StepExecutionContext hasn't been reset.","Noticed the failure when using JTA, with JOTM.",;17/Jun/08 8:49 PM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-06-05 02:50:18.084,11907,false,david_syer(david_syer),,,,0|i01tfz:,10647,10626,,,,,"05/Jun/08 2:50 AM;david_syer;I'm not entirely sure what the problem is here.  If a commit fails then the system is almost by definition in an inconsistent state.  You can't really expect anything sensible to happen after a failed commit - even a rollback would not be trusted.  I must be misunderstanding something, so can you show an example of what might happen, and what you think should happen in the scenario you describe?",05/Jun/08 3:30 AM;robert.kasanicky;When the metadata database is separate from business database we should be storing 'FAILED' (or maybe 'UNKNOWN') status for the StepExecution if the business database failed to commit.,"05/Jun/08 6:49 PM;robert.kasanicky;I'm wondering about the priority of the issue - I suppose the JobExecution metadata gets written and only the StepExecution is left in inconsistent state. The job therefore can't be restarted which is fine because the actual state is undefined as Dave pointed out.

So I think the high level behavior is correct (job's status is 'FAILED' and can't be restarted), but the error message is misleading and StepExecution's status should be set to 'UNKNOWN'. It is also very unlikely to occur (successful flush but failed commit immediately after). Not really a blocker issue I think - or am I missing something?","05/Jun/08 10:18 PM;david_syer;I agree - changed the priority.  We should be able to set the StepExecution status and maybe the exit message (I thought the message was something clear like ""commit failed"", but maybe it could be clearer if we say that the result is an undefined state and restart is impossible as well).","06/Jun/08 1:40 AM;robert.kasanicky;I think I was wrong about the 'job can't be restarted'. Job only checks for 'UNKNOWN' status to refuse restart, but in this case we'll end up with 'STARTED' (we'll fail to write UNKNOWN due to OptimisticLockingFailure). The same scenario applies for failed update of the execution context which we definitely need to handle well.
","06/Jun/08 1:44 AM;lucas.l.ward;Regarding flush.  I think it's assumed if you're a restartable writer that after a failure you have to check to ensure that the state you had stored in the execution context is consistent with where you're going to start writing.  In the example of a file, if there's extra lines on top of what the execution context says you should have, the file should be truncated to the EC indicated level",06/Jun/08 2:13 AM;wxlund;I'd like to see the original reporter provide the example of where it was failing with JTA and JOTM.  We used to do a lot of extensive use of JTA/JOTM on our legacy batch system and found there were scenarios where JOTM behaved very differently from our production system (WebSphere's JTA).  Could we get a sample failure attached?,"09/Jun/08 7:21 PM;telematica;I'll explain the failure:

Here's the context configuration:
<!-- DATASOURCES -->
<bean id=""modelDataSource""
	class=""org.enhydra.jdbc.pool.StandardXAPoolDataSource"">
	<property name=""dataSource"">
		<bean class=""org.enhydra.jdbc.standard.StandardXADataSource"">
			<property name=""transactionManager"" ref=""jotm"" />
			<property name=""driverName"" value=""...ModelDriver"" />
		</bean>
	</property>
</bean>

<bean id=""dataSource""
	class=""org.enhydra.jdbc.pool.StandardXAPoolDataSource"">
	<property name=""dataSource"">
		<bean class=""org.enhydra.jdbc.standard.StandardXADataSource"">
			<property name=""transactionManager"" ref=""jotm"" />
			<property name=""driverName"" value=""...MetaDataDriver"" />
		</bean>
	</property>
</bean>

<!-- TRANSACTION MANAGER (small timeOut to force rollback)-->
<bean id=""jotm"" class=""org.springframework.transaction.jta.JotmFactoryBean"" />
<bean id=""transactionManager"" class=""org.springframework.transaction.jta.JtaTransactionManager"">
	<property name=""userTransaction"">
		<ref local=""jotm"" />
	</property>
	<property name=""allowCustomIsolationLevels"" value=""true""/>
	<property name=""defaultTimeout"" value=""10""/>
</bean>

And now the log output. Up to this point, we've written 10 items to the database. We are bout to commit the transaction but we won't let that happen, wating for more time than the max timeout.

09:52:31,764 DEBUG main DataSourceUtils:112 - Fetching JDBC Connection from DataSource
09:52:31,764 DEBUG main DataSourceUtils:116 - Registering transaction synchronization for JDBC Connection
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 1, parameter value [Tue Jun 10 09:52:22 CEST 2008], value class [java.util.Date], SQL type 93
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 2, parameter value [null], value class [null], SQL type 93
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 3, parameter value [STARTED], value class [java.lang.String], SQL type 12
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 4, parameter value [2], value class [java.lang.Integer], SQL type 4
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 5, parameter value [20], value class [java.lang.Integer], SQL type 4
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 6, parameter value [Y], value class [java.lang.String], SQL type 1
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 7, parameter value [UNKNOWN], value class [java.lang.String], SQL type 12
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 8, parameter value [], value class [java.lang.String], SQL type 12
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 9, parameter value [2], value class [java.lang.Integer], SQL type 4
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 10, parameter value [71], value class [java.lang.Long], SQL type 4
09:52:31,764 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 11, parameter value [1], value class [java.lang.Integer], SQL type 4
09:52:31,764 DEBUG main JdbcTemplate:797 - SQL update affected 1 rows
09:52:31,764  INFO main ChunkLogAdvice:45 - [JOB monitorizacionJobJTA; STEP step1] CHUNK: 20 elemento(s) procesado(s).

//Ten seconds and the maximum timeout expires. A rollback is imperative

09:52:41,515  INFO JonasBatch jotm:691 - set rollback only (tx=bb14111130343639633564386631613030615f305f 
09:52:42,688 DEBUG main DataSourceUtils:312 - Returning JDBC Connection to DataSource
09:52:42,688 DEBUG main DataSourceUtils:312 - Returning JDBC Connection to DataSource
09:52:42,703 ERROR main ItemOrientedStep:277 - Fatal error detected during commit.
09:52:42,719 ERROR main AbstractStep:183 - Encountered an error executing the step
09:52:42,719 DEBUG main JdbcTemplate:787 - Executing prepared SQL update
09:52:42,719 DEBUG main JdbcTemplate:571 - Executing prepared SQL statement [UPDATE BATCH_STEP_EXECUTION set START_TIME = ?, END_TIME = ?, STATUS = ?, COMMIT_COUNT = ?, ITEM_COUNT = ?, CONTINUABLE = ? , EXIT_CODE = ?, EXIT_MESSAGE = ?, VERSION = ? where STEP_EXECUTION_ID = ? and VERSION = ?]
09:52:42,719 DEBUG main DataSourceUtils:112 - Fetching JDBC Connection from DataSource
09:52:42,719 DEBUG main DataSourceUtils:116 - Registering transaction synchronization for JDBC Connection
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 1, parameter value [Tue Jun 10 09:52:22 CEST 2008], value class [java.util.Date], SQL type 93
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 2, parameter value [Tue Jun 10 09:52:42 CEST 2008], value class [java.util.Date], SQL type 93
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 3, parameter value [UNKNOWN], value class [java.lang.String], SQL type 12
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 4, parameter value [2], value class [java.lang.Integer], SQL type 4
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 5, parameter value [20], value class [java.lang.Integer], SQL type 4
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 6, parameter value [N], value class [java.lang.String], SQL type 1
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 7, parameter value [FAILED], value class [java.lang.String], SQL type 12
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 8, parameter value [org.springframework.batch.core.step.AbstractStep$FatalException: Fatal error detected during commit
	at org.springframework.batch.core.step.item.ItemOrientedStep$1.doInIteration(ItemOrientedStep.java:278)
	at org.springframework.batch.repeat.suppor], value class [java.lang.String], SQL type 12
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 9, parameter value [3], value class [java.lang.Integer], SQL type 4
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 10, parameter value [71], value class [java.lang.Long], SQL type 4
09:52:42,719 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 11, parameter value [2], value class [java.lang.Integer], SQL type 4
09:52:42,750 DEBUG main JdbcTemplate:797 - SQL update affected 0 rows
09:52:42,750 DEBUG main JdbcTemplate:636 - Executing prepared SQL query
09:52:42,750 DEBUG main JdbcTemplate:571 - Executing prepared SQL statement [SELECT VERSION FROM BATCH_STEP_EXECUTION WHERE STEP_EXECUTION_ID=?]
09:52:42,750 DEBUG main StatementCreatorUtils:203 - Setting SQL statement parameter value: column index 1, parameter value [71], value class [java.lang.Long], SQL type unknown
09:52:42,828 DEBUG main DataSourceUtils:312 - Returning JDBC Connection to DataSource
09:52:42,828 ERROR main AbstractStep:216 - Encountered an error saving batch meta data.This job is now in an unknown state and should not be restarted.
org.springframework.dao.OptimisticLockingFailureException: Attempt to update step execution id=71 with wrong version (2), where current version is 1
	at org.springframework.batch.core.repository.dao.JdbcStepExecutionDao.updateStepExecution(JdbcStepExecutionDao.java:333)
	at org.springframework.batch.core.repository.support.SimpleJobRepository.saveOrUpdate(SimpleJobRepository.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:310)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:106)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy0.saveOrUpdate(Unknown Source)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:201)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:310)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:42)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:160)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:160)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy1.execute(Unknown Source)
	at org.springframework.batch.core.job.SimpleJob.execute(SimpleJob.java:125)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:86)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:81)
","09/Jun/08 7:32 PM;robert.kasanicky;Raised the priority to major due to the restart implications described in my previous comment.

I don't yet see a fully satisfactory way to fix the problem - decrementing version number in step looks awful. Maybe the repository could do it in case execution context's update fails, but it doesn't help with failed commit.","12/Jun/08 10:49 PM;david_syer;I didn't catch where the timeout came from in that example?  Isn't it artificial in some way?  I suppose in principle if all the resources in the job are fully XA capable (i.e. no file I/O) then we might expect to be able to recover from a commit failure, but only if we can distinguish a true commit failure from a failure in some other component (e.g. a listener).  Is that going to be the target here?

Also, surely we can create a test case that doesn't need JTA?","16/Jun/08 1:15 AM;telematica;Yep, this is artificial in this example because we force a rollback explicitly waiting for a timeout to expire. We could have, as well, unplugged our network connection before the commit took place. But this is not the point here. The problem is that the ExecutionContext is not synchronized with the current database status after the commit failure is detected, because it hasn't been re-queried. 

Surely, every test sample that comes with the distribution has no need for JTA. The problem is, as stated, when you need 2 datasources. Then you need XA resources and two-phase commits. ","17/Jun/08 8:47 PM;david_syer;One of the problems here is that the execution context needs to be saved independently of the step execution (so if there is a rollback, the step execution is not affected and in particular so that the version is not incremented).  Thus SimpleJobRepository.saveOrUpdateExecutionContext *should not* call saveOrUpdate(StepExecution) - it is up to the caller to decide when it is necessary.  I have made this change and the tests pass, but really I think there is a weakness here that needs to be addressed through the interface JobRepository (see BATCH-668).  It could also be addressed by providing an explicit load() method in the JobRepository, so that the latest value from the database can be loaded after a rollback.

So the changes are:

* make sure saveOrUpdate(StepExecution) is called explicitly *before* any calls to save the execution context - this is fragile but necessary unless we change the JobRepository
* if a fatal execption was detected before the rollback was attempted, try to save the step execution so that the UNKNOWN status is persisteed properly
* a test for the above (ItemOrientedStepIntegrationTests)

The original description in of this issue seems to be slightly wrong: the execution context should always rollback in such situations, as long as the database is still available.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,
DefaultJobParametersConverter does not parse parameters of type double,BATCH-618,22103,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,gpitteloud,gpitteloud,13/May/08 1:40 AM,29/Jan/19 8:32 AM,10/May/19 2:37 AM,15/Feb/09 8:25 AM,1.0.1,,,,,,2.0.0.RC1,,,Core,,,,,0,,"Although JobParameters and JobParametersBuilder support parameters of type double, the DefaultJobParametersConverter does not handle double parameters. Other types (string, date, long) are correctly managed.",,;15/Feb/09 8:26 AM;robert.kasanicky;1200,,,,,,,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,322704000,,,,,2008-05-14 00:15:44.216,11929,true,mbenhassine(mbenhassine),,,,0|i020dj:,11770,1,,,,,14/May/08 12:15 AM;robert.kasanicky;added support for double parameters,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,"15/Feb/09 2:15 AM;skelf;In 2.0.0-SNAPSHOT at least, this is only partially resolved.  If you provide a float value with a non-zero decimal portion (e.g. ""score(double)=1.1"") then it works.  However if you do ""score(double)=1.0"", then the call to numberFormat.parse(""1.0"") in DefaultJobParametersConverter.parseNumber() returns a Long object, which cannot be cast to a Double:

ERROR Job Terminated in error:
java.lang.IllegalArgumentException: Number format is invalid for double value: [1.0]
	at org.springframework.batch.core.converter.DefaultJobParametersConverter.getJobParameters(DefaultJobParametersConverter.java:116)
",15/Feb/09 8:25 AM;robert.kasanicky;fixed the handling of round doubles,,,,,,,,,,,,,,,,,,,
Refactor ExecutionContext section in Chapter 2,BATCH-599,21849,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,22/Apr/08 6:28 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,27/Jun/08 6:21 AM,1.0.0,,,,,,1.1.0,,,Documentation,,,,,0,,"The ExecutionContext section of Chapter 2 is a bit difficult to understand.  It requires some understanding of the ItemStream interface, which hasn't been discussed yet in the guide.  It should be cleaned up.",,;27/Jun/08 7:39 AM;lucas.l.ward;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:09.428,11940,false,david_syer(david_syer),,,,0|i01sbr:,10466,10446,,,,,"27/Jun/08 6:21 AM;lucas.l.ward;The ExecutionContext section has been updated so that it is easier to understand.  The previous code examples were a bit confusing, so I added some of the tables to illustrate the value being stored by the framework.

I also changed the keyname used by AbstractBufferedItemReaderItemStream from item.count to piece.count.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
RFC: buffer read items in ItemHandler instead of ItemReader,BATCH-592,21773,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,17/Apr/08 8:35 PM,01/Oct/08 12:15 AM,10/May/19 2:37 AM,29/Aug/08 2:17 AM,1.0.0,,,,,,2.0.0.M2,,,Core,Infrastructure,,,,0,,"I think there is no need to physically re-read items after rollback for none of the readers we provide (except for JmsItemReader I suppose). Therefore the items could be buffered in ItemHandler which would simplify the readers by making them forward-only.

The JMS input use case could be addressed by separate ItemHandler (there are certainly other options as well).
",,;29/Aug/08 2:18 AM;david_syer;14400,,,,,,,,,,,,,,57600,0,14400,25%,57600,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,337478400,,,,,2008-04-20 07:16:03.403,5927,false,robert.kasanicky(robert.kasanicky),,,,0|i02jpz:,14904,14206,,,,,"20/Apr/08 7:16 AM;david_syer;I am in favour of simplifying item reader implementations wherever possible.  Putting the buffering responsibilities in an ItemHandler would be one way to do it, or even a third party (like a delegate item reader).","28/Apr/08 11:57 PM;robert.kasanicky;Generic buffered item reader that wraps a delegate forward-only item reader seems straightforward to implement. ItemHandler could then do the wrapping so that users needn't declare the wrapper in xml (boilerplate).

I think we can give it a try for 1.1? ","01/May/08 7:06 PM;david_syer;The ItemHandler should be able to tell the difference between a reader that needs (or wants) to be buffered and one that doesn't.  The JMS reader is the obvious case in point, but there may be generalisations.  

Does this also mean that mark() and reset() are no longer part of the ItemReader interface (would be nice)?  Maybe an ItemReader just needs a boolean query method say whether it is transaction aware (the JMS case), or whether it needs the handler to buffer items.","04/May/08 7:57 PM;robert.kasanicky;Yes, mark() and reset() should be unnecessary on ItemReader. Overall the changes seem quite significant, so scheduling for 2.0.",29/Aug/08 2:17 AM;david_syer;Already done as part of BATCH-789,,,,,,,,,,,,,,,,,,
Documentation for the walkthrough of samples,BATCH-586,21644,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,wordy,wordy,13/Apr/08 12:23 AM,28/Jul/08 12:15 AM,10/May/19 2:37 AM,28/Jul/08 12:15 AM,1.0.0,,,,,,2.0.0.M1,,,Documentation,,,,,1,,"I remembered the walkthrough explanation of samples application m4 (or5) documentation. But it is removed in 1.0.0-Final documentation or I cannot locate elsewhere for this. If this is a miss, I can raise a JIRA for as I think a brief walkthrough on some complex sample (e.g. the parallel job ) are very useful.",,;28/Jul/08 12:15 AM;david_syer;14400,,,,,,,,,,,,,,57600,0,14400,25%,57600,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,341366400,,,,,2008-04-13 03:30:02.101,11945,true,david_syer(david_syer),,,,0|i01scf:,10469,10449,,,,,"13/Apr/08 3:30 AM;david_syer;It's still there in the source code, but doesn't get published.  We decided to move it to the samples sub-site instead of being in the user guide, but haven't got round to doing it yet.  Thanks for the reminder.","12/May/08 2:28 AM;lucas.l.ward;I raised the priority of this issue, since it's been requested multiple additional times, since it's been created.","27/May/08 9:54 PM;david_syer;I moved the samples docs over from docbook to apt in the samples project (easier to edit).  It's pretty out of date, so still some work to do.","15/Jul/08 1:38 AM;lucas.l.ward;I'm moving this over to 2.0, since I'm not sure we want to document them for 1.1 then have to upgrade for 2.0 as well.

Dave,

I thought we had agreed to keep the samples in docbook as well?",,,,,,,,,,,,,,,,,,,
FlatFileItemReader default charset should mimic java's default charset behavior,BATCH-575,21598,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,gk5885,gk5885,10/Apr/08 8:31 AM,08/Oct/08 7:06 AM,10/May/19 2:37 AM,02/Oct/08 5:59 AM,1.0.0,,,,,,2.0.0.M2,,,Infrastructure,,,,,0,,"currently the default charset is ISO-8859-1, but this is not consistent with the rest of the java platform.  Charset uses:

 public static Charset defaultCharset() {
	synchronized (Charset.class) {
	    if (defaultCharset == null) {
		java.security.PrivilegedAction pa =
		    new GetPropertyAction(""file.encoding"");
		String csn = (String)AccessController.doPrivileged(pa);
		Charset cs = lookup(csn);
		if (cs != null)
		    return cs;
		return forName(""UTF-8"");
	    }
	    return defaultCharset;
	}
    }

this method is only available in java 1.5, but is consistent with the behavior of methods like String.getBytes() and OutputStreamWriter, which are in earlier versions.",,;02/Oct/08 5:57 AM;thomas.risberg;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,334454400,,,,,2008-04-10 17:52:01.887,11953,false,lucas.l.ward(lucas.l.ward),,,,0|i02kg7:,15022,14316,,,,,10/Apr/08 5:52 PM;david_syer;We can probably address that by using native Java features in Spring Batch 2.0 (which is Java 5).,02/Oct/08 5:59 AM;thomas.risberg;Changed to use default returned from java.nio.charset.Charset.  Reassigned for review.,,,,,,,,,,,,,,,,,,,,,
Retryable exceptions cannot be skippable,BATCH-572,21593,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,lucas.l.ward,lucas.l.ward,10/Apr/08 2:28 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,04/Jun/08 10:55 PM,1.0.0,,,,,,1.1.0,,,,,,,,0,,"In the current StatefulRetryStepFactoryBean, if an exception is in the skippalbeExceptionClasses list, then it will be skipped before it ever gets to the retry portion.  Assuming the exception isn't also retryable, this is the correct behaviour.  However, what about exceptions that should be retried, and when retry fails, skipped?  I think most users expect the failure of retry to have the same behaviour as any other bad record, if the exception is skippable, it should be skipped the same way any other exception is skipped.  Currently, if you're careful about how your configure retry and skip you can get this to work, since the retry portion will invoke 'recovery'.  However, the skip count isn't incremented, and it's a bit confusing to people because they try and configure something like java.lang.Exception as their skippable exception class, and something more specific for retry and expect it to work.",,"
StatefulRetryStepFactoryBean functionality all moved into SkipLimitStepFactoryBean (the former should be removed). TODO: take some more care with exception types that overlap between retry / skip.;22/May/08 11:37 PM;david_syer;23400",,,,,,,,,,,,,,144000,120600,23400,16%,144000,120600,23400,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-04-10 02:44:57.178,11956,false,david_syer(david_syer),,,,0|i01tmn:,10677,10656,,,,,"10/Apr/08 2:44 AM;david_syer;Recovery is a little different than skip (it is guaranteed to happen in a new transaction).  Agree that the effect is as if there had been a skip, so skip count should be incremented.  Better actually would be to have a separate recovery count. (We need to break out read/write skip counts as well probably in 1.1.)","12/May/08 1:48 AM;lucas.l.ward;I'm still not a big fan of the term recovery, as it's a bit more ambiguous than skip, and 'skip' can happen in both read and write as well, which makes the difference between it and recovery even more difficult to understand.  I would prefer to be consistent and just call everything skip, since it seems like the same thing (unless recovery can be called while an item can still be retried, which it's my understanding that it can't)  I suppose it's nice that it's guaranteed to be in a new transaction, but it seems like wrapping it in REQUIRES_NEW propagation is just as easy.","13/May/08 11:39 AM;david_syer;So we should merge skip-on-write with recovery (I agree the terminology isn't great, but it *does* do more than just skip the bad item)?  Using REQUIRES_NEW might not be the same since to do that we really have to be 100% sure that the item is not coming back.  It's better to stick to the main business transaction for processing.","13/May/08 12:57 PM;lucas.l.ward;I definitely agree that skip-on-write should be merged with Recovery.  It's a bit confusing to have both.  I'm not sure I fully understand the rest of what you're saying though.  Doesn't skip garuntee that we won't see the item again?  And what does that have to do with REQUIRES_NEW?  This is probably just my own ignorance about the current recovery process though.  I've never quite understood how that worked exactly (probably my own fault, I'll look into it more when I get a chance)  However, isn't recovery tied completely to retry?  I know we could add it as a concept to skip as well, but it doesn't quite seem straightforward, and it would still seem weird to call it skip on read, but recovery if it happens on write.  Also, It kind of makes me nervous for us to say that users should assume recovery is in a new transaction.  Although, I've ran into many issues with clients having issues understanding that they need to wrap their listeners in REQUIRES_NEW, so perhaps it might not be too bad to do it for them by default.","14/May/08 12:54 AM;david_syer;> weird to call it skip on read, but recovery if it happens on write

I guess that's what I am proposing.  Maybe we could still call it ""skip"".  Then there would be no distinction between retry and skip on write - easier to understand, easier to configure, harder to mess up the configuration.","21/May/08 12:49 AM;david_syer;Just had a thought - we probably still want to keep the separate factory bean properties for skippable and retryable exceptions (and limits) - a vanilla write skip is going to be implemented as a retry with a limit of 0, but it is easier to understand functionally from a configuration point of view if we keep the same old terminology.  The main difference is that the ItemRecoverer would disappear, to be replaced with the onSkipInWrite() callback from the skip listener.  Net effect: an item is skipped after its retry limit is exhausted.  Make sense?",21/May/08 1:45 AM;lucas.l.ward;That's exactly the way I was thinking about it as well.  I completely agree about keeping a separate list of exceptions that should be retryable too.,"04/Jun/08 10:55 PM;david_syer;* Deprecated StatefulRetryStepFactoryBean
* Added generic cache limit property to SkipLimitStepFactoryBean (replacing skipCacheLimit)
* Testing",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,
Job.getSteps() does not need to be exposed in the interface,BATCH-570,21579,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,david_syer,david_syer,09/Apr/08 8:01 AM,22/May/09 1:36 AM,10/May/19 2:37 AM,02/Mar/09 5:47 PM,1.0.0,,,,,,2.0.0.M1,,,Core,,,,,0,,Job.getSteps() does not need to be exposed in the interface and it limits choices for non-linear execution plans.  Suggest deprecate in 1.1 and remove in 2.0?,,added deprecations;23/Jun/08 7:18 PM;robert.kasanicky;1800,removed the getSteps() method from interface and implementations;17/Jul/08 8:19 PM;robert.kasanicky;1800,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,321321600,,,,,2008-06-23 03:54:59.037,5935,false,robert.kasanicky(robert.kasanicky),,,,0|i02jr3:,14909,14211,,,,,"23/Jun/08 3:54 AM;lucas.l.ward;This should probably be two issues, one to deprecate in 1.1, and another to remove in 2.0.",23/Jun/08 7:19 PM;robert.kasanicky;moving to 2.0 after deprecations have been added,"02/Mar/09 8:58 AM;rshan;It's convenient to be able to present the configured steps for a job in a UI using the getSteps method. Why not leave SimpleJob alone and manage non-linear execution plans with another job type?

Prior to 2.0.0.RC1 I was using getSteps to present real time and last run status to users by iterating over the steps retrieved via getSteps. To preserve this functionality, I'll need to maintain a SimpleJob subclass. Is there a better way?","02/Mar/09 5:47 PM;david_syer;It would probably be better to parse the XML if you are presenting the job to users, since SimpleJob is not used in the namespace parser at all. However it was easy enough to add getSteps() to SimpleJob.","03/Mar/09 4:05 AM;rshan;Jobs are injected into our job service. The service only knows about jobs and has no idea what xml they came from, much less that they were even configured via xml. Moreover, Spring already parsed the xml -- after all, that's its job ;)

Any chance the method will be restored?","03/Mar/09 5:03 AM;david_syer;I added getStepNames() to the StepLocator interface.  That should do the same thing for you, without requiring any parsing.  Not sure what you'd do with the results from a FlowJob though, so let us know if there is anything that would help.",,,,,,,,,,,,,,,,,
JdbcCursorItemReader will not handle more than one restart,BATCH-549,21426,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,02/Apr/08 2:29 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,02/Apr/08 2:52 AM,1.0.0,,,,,,1.0.1,,,Infrastructure,,,,,0,,"The JdbcCursorItemReader won't handle restarting more than once, since the BufferedResultSetReader returns only the records it's processed.  An extra unit test for this scenario should be added to the abstract integration tests as well.",,;02/Apr/08 2:56 AM;lucas.l.ward;3600,,,,,,,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:05.814,11971,false,david_syer(david_syer),,,,0|i056sn:,30307,27313,,,,,"02/Apr/08 2:52 AM;lucas.l.ward;I added an additional argument to the constructor of the BufferredResultSetReader, so it would count correctly.  I also added an additional test case to the abstract integration tests to ensure this use case is covered.",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Configurable RetryPolicy in SkipLimitStepFactoryBean,BATCH-544,21413,,New Feature,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,douglas.c.kaminsky,douglas.c.kaminsky,01/Apr/08 6:49 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,21/Jul/08 1:10 AM,1.0.0,,,,,,1.1.1,2.0.0.M1,,Core,Infrastructure,,,,1,,"We spent some time talking awhile back about whether the whole RetryPolicy/BackOffPolicy paradigm was really necessary, and the use case that was the straw that broke the camel's back, so to speak, was the ExponentialBackOffPolicy. However, as of now, it seems to me that the means to even use this policy is cryptic, at best -- I don't think it's reasonable to expect people to utilize it as is. It would require, at the very least, the end-user to understand several internal Spring Batch APIs, which should not be the case.

There should be a step factory that allows injection of a retry and backoff policy and takes care of all of the rest (e.g. ItemHandler set-up, etc).",,;21/Jul/08 1:10 AM;david_syer;1800,,,,,,,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-04-02 04:53:48.53,11972,false,david_syer(david_syer),,,,0|i056sv:,30308,27314,,,,,"02/Apr/08 4:53 AM;david_syer;I'm not really sure what you mean.  StatefulRetryStepFactoryBean allows you to inject a backoffPolicy (actually only because a user asked for it - I wouldn't have bothered otherwise).  It doesn't allow you to inject a RetryPolicy because nearly all common use cases are covered by the SimpleRetryPolicy.  These factory beans have to have a limit to how much they can handle, so I think we have a reasonable compromise.","02/Apr/08 5:09 PM;douglas.c.kaminsky;I'll grant you the injectable back-off policy - seem to have missed that. I still maintain that a factory that handles retry policies in a uniform way to allow interchangable policies is a reasonable feature to expect. 

It's just way too convoluted to need to have to add a RetryOperationInterceptor to handle this. I don't think SimpleRetryPolicy being the only supported retry policy in the factory beans is a reasonable compromise. I think it's very one-sided - it's saying ""here's a best practice to use one policy we provide that doesn't apply to any other of the INCLUDED policies, let alone custom-defined policies."" I don't see the compromise in there at all, and I don't see the purpose in providing the RetryPolicy API at all if we're not going to support it meaningfully at the configuration level.

Considering that there are currently only four concrete step factory implementations and three of them are in the same inheritance chain, I don't think adding one or two more is an unfair request in terms of expanding what can be handled at the factory level.

I also don't think the assertion that ""nearly all common use cases"" are covered is accurate. I can see the timeout retry policy being used just as often as the simple retry policy, depending on the client, and there's no way to do that right now with the factory paradigm. 

Take for example a developer with an existing job and he just wants to test the effectiveness of various retry policies, or to demonstrate them for a client so the client can decide which suits their business need. This is something that should be pluggable easily via Spring in a consistent way - if he has to define a factory bean to use the simple policy and use a different AOP interceptor for any other policy, it just doesn't pass the ""smell"" test. 

I think you should stick by the factory paradigm as a best practice (i.e. make all retry policy decisions configurable via a facotry) or get rid of it entirely. It's like a half-finished thought sitting in the middle of the API. There should be one best practice for defining retry policy, and every retry policy should be configurable using that practice -- using the factory beans for simple retry and skip behavior is clearly the preferred means of configuration, so it should logically be available for any retry policy, or at the very least for any extension of the abstract stateless or stateful policy.","11/Jun/08 2:28 AM;michelz;I agree with Douglas. I want to change my ItemSkipPolicy in a StepFactoryBean and I can't. There are many ItemSkipPolicy interface implementations but I can't use them, doesn't make sence. I think the StepFactoryBean should support ItemSkipPolicy injection.","12/Jun/08 10:39 PM;david_syer;Actually there are only two useful implementations of ItemSkipPolicy and they can both be accessed using the existing FactoryBean implementations.  (I notice that the original issue was about retry, not skip, so maybe you are just confusing / mistyping the two?)","23/Jun/08 10:46 AM;lucas.l.ward;I think that we leave as is unless the feature is clamored for by users.  It's useful to keep this issue around so others can either vote for it or add comments to request it, but I'm moving it out of 1.1 to keep it separate from our 1.1 release plan.",21/Jul/08 1:10 AM;david_syer;Added RetryPolicy to SkipLimitStepFactoryBean.  If this is provided the other retry properties are ignored.,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,
HibernateCursorItemReader close() doesn't close statefull sessions correctly,BATCH-538,21401,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,01/Apr/08 5:42 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,01/Apr/08 6:16 AM,1.0.0,,,,,,1.0.1,,,Infrastructure,,,,,0,,"	public void close(ExecutionContext executionContext) {
		initialized = false;
		if (cursor != null) {
			cursor.close();
		}
		currentProcessedRow = 0;
		if (useStatelessSession) {
			if (statelessSession != null) {
				statelessSession.close();
			}
		}
		else {
			if (statelessSession != null) {
				statelessSession.close();
			}
		}
	}

The close method above won't close correctly because if useStatelessSession is false, the statelessSession will always been false as well.",,;01/Apr/08 6:16 AM;lucas.l.ward;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:04.737,11976,false,david_syer(david_syer),,,,0|i056tr:,30312,27318,,,,,01/Apr/08 6:16 AM;lucas.l.ward;StatefulSessions are now closed correctly.  Added a unit test to make sure.,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
clean up the *Or* repository methods,BATCH-518,21333,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,27/Mar/08 1:27 AM,23/Sep/08 11:12 AM,10/May/19 2:37 AM,29/Jul/08 8:39 PM,1.0.0,,,,,,2.0.0.M1,,,Core,,,,,0,,"Repository defaults to using saveOrUpdate methods, which unnecessarily blurs distinction between save and update.

1) saveOrUpdate(JobExecution) can be simply update(JobExecution), creation (and save) is handled by createJobExecution(..)
2) saveOrUpdate(StepExecution) - saved before processing records, updated in the processing loop => easy to split + shouldn't repository have createStepExecution(JobInstance, Step) similar to createJobExecution(Job, JobParameters) to be consistent?
3) saveOrUpdateExecutionContext(StepExecution) - same as 2)",,;28/Jul/08 7:15 PM;robert.kasanicky;21600,;29/Jul/08 8:40 PM;robert.kasanicky;25200,,,,,,,,,,,,,28800,0,46800,162%,43200,14400,46800,,,,,,,,,,,,,,,,,,,,,,,,,,340070400,,,,,,5962,true,lucas.l.ward(lucas.l.ward),,,,0|i02jvj:,14929,14231,,,,,27/Apr/08 9:33 PM;robert.kasanicky;Moving to 2.0 as the change would cause API incompatibility (although most users are unlikely to use this interface directly).,"27/Jul/08 7:30 PM;robert.kasanicky;rescheduled to M1, as the dependent BATCH-654 is already M1",29/Jul/08 8:39 PM;robert.kasanicky;cleaned up the JobRepository interface and DAO interfaces (there is now standalone ExecutionContextDao),,,,,,,,,,,,,,,,,,,,
Database refactoring,BATCH-514,21310,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,lucas.l.ward,lucas.l.ward,25/Mar/08 5:21 PM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,26/Mar/08 4:42 PM,1.0.0.rc1,,,,,,1.0.0,,,Core,Infrastructure,,,,0,,This is a blanket issue for the work with jdbc item readers before the release to ensure the API is solid.,,"I have committed updates to the JdbcCursorItemReader so that it buffers input.  The cursor itself is now forward only.  It had been discussed that this change should be held back, but in order to work through the API changes, i really needed to work through this change as well.  It lead to quite a bit of insight.  i think the overall approach of a PreparedStatementSetter is still solid.....in the case of restart it can just pull from both the ExecutionContext.  A StepExecutionPreparedStatementSetter could take the list of keys and treat the ExecutionContext as first priority.  That is, if the key is in the EC, use that, if not, check the JobParameters, if not there, fail.  The problem there is that I'll have to find some way to go from key/id to execution context.  It's a bit tricky in the cursor scenario, since there's no way to tell what that might be.  I suppose I could use the ItemKeyGenerator interface, but I need to look at it a little more closely.;25/Mar/08 5:29 PM;lucas.l.ward;28800",;26/Mar/08 4:43 PM;lucas.l.ward;28800,,,,,,,,,,,,,57600,0,57600,100%,57600,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-08-07 02:07:02.731,11981,false,david_syer(david_syer),,,,0|i056uv:,30317,27323,,,,,"26/Mar/08 4:42 PM;lucas.l.ward;I thrashed around a lot on this issue.  I thought I had a really good solution, but when attempting to implement I hit a wall.  There's just too much to change in too little time.  I'm glad the JdbcCursorItemReader is now bufferred and Forward only, which was a good 'bug fix', but I'm just not comfortable making too big of an api change.  I was thinking about moving the MultipleColumnJdbcKeyCollector into samples, but when I saw the ItemPreparedStatementSetter, which had the same interface I already needed, I changed to use it.  I'm still debating about moving it into samples tomorrow, but I'm leaning heavily towards keeping it.

I think we'll be able to make the changes we want at 1.1, although there might have to be one or two ugly hacks to keep the api changes to a minimum, but we should be able to clean that up around 2.0",07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Not applying declarative transactions around repository causes unstable execution,BATCH-503,21278,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,lucas.l.ward,lucas.l.ward,24/Mar/08 4:00 AM,07/Aug/08 2:07 AM,10/May/19 2:37 AM,25/May/08 11:13 PM,1.0.0,,,,,,1.1.0,,,Core,,,,,1,,"I ran into this issue with a client recently.  They didn't realize that declarative transactions had to be used in order for the JobRepository to work correctly.  For example, if there is a write error in the first chunk, and there are no declarative transactions (with propagation of REQUIRES_NEW) then the first call to 'save' the StepExecution (i.e. insert it) will be rolled back with the first write error.  When processing on the chunk begins again, the call to jobRepository.saveOrUpdate(JobExecution) will cause an exception, because it will try and update (since there is an ID) but the insert that put the record with that ID into the database will have been rolled back, causing an exception to be thrown.  The job will be caught in a  loop until the skip limit has been reached, in which case it will finally fail.

I have added a task to document the 'declarative' approach, but I still feel like the job should fail if no transactions are applied.  I don't know how we can detect that, but I can come up with 3 or 4 scenarios that will cause erroneous execution behavior, because the meta data will be rolled back with the business transaction.  The one mentioned above is the worst offender though.  My personal preference would be to wire a  transaction manager into the SimpleJobRepository and handle it programmatically.  We require very specific transaction  behavior from the repository.  Requiring users to do this declaratively, which will likely be done with copy and paste, still seems a bit flaky.  At a minimum, we need to fail if they haven't set up transactions properly, since execution behavior in such a scenario is not defined.  I don't know how to do this without going the programmatic route, but perhaps Ben or Dave know of a good way to do this? ",,;25/May/08 11:14 PM;david_syer;12600,,,,,,,,,,,,,,57600,0,12600,21%,57600,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-03-24 04:15:01.088,11989,false,david_syer(david_syer),,,,0|i01tpb:,10689,10668,,,,,"24/Mar/08 4:15 AM;gk5885;if you want to still use an aop proxy, you could perhaps return a proxy from the factory bean.","24/Mar/08 4:28 AM;david_syer;I think the factory bean is a good approach if we have to do anything here, but I wouldn't make it a showstopper for 1.0.  

I know it is not trivial, and transactions are not easy to understand generally, but we do not usually have to cater for the lowest common denominator in Spring - we assume a certain level of developer knowledge and sophistication.  If there are projects where mistakes have been made maybe they just need to follow the documentation (or have some extra documentation provided by their managers / architects)?","24/Mar/08 4:42 AM;lucas.l.ward;I agree on the factory bean as a good middle ground.  I also agree that it's not a showstopper for 1.0.  

I understand your point about 'developer sophistication'.  However, I would still like to be able to fail if transactions haven't been set up properly.  I would rather fail with an exception stating that transaction logic should be around the repository than have odd failures in rollback scenarios if it isn't applied.  I've gone back and looked, and I actually saw someone else that had the same exception as above way back in M2, and I think it's only going to continue as more people use it.  I'll add documentation about applying transactions, but long term I would like to find a way to fail correctly in this scenario.","24/Mar/08 4:47 AM;gk5885;@dave
I don't necessarily think that this is a 'lowest common denominator' issue.  Somebody that knows a lot about transactions isn't going to see weird behavior and think ""oh, i need to put some advice around all of my *Create* methods in the job repository"" because that means that that person would have to already know what the job repository does and know how and when spring batch stores metadata.  So, really, you either say RTFM on what the repository does (and that it doesn't handle the transactions programatically) or RTFM on the example for where to configure the advice, but not RTFM on transactions in general.

I would think that within a framework, the transactions should be handled programatically as not to put the burden of configuration on the users.  However, since it's pretty late in the 1.0 release cycle, the modification to the factory bean would solve the problem while minimizing impact and avoiding an issue that seems like it may occur relatively often for everyone that doesn't copy and paste from the samples.","24/Mar/08 5:03 AM;david_syer;""RTFM on the example for where to configure the advice"" seems good enough to me.  Most people I have encountered just use the samples anyway.

It is pretty easy to assert the existence of a transaction in the Dao methods.  Would that work as a crude fail fast?  It's hard to detect the transaction definition attributes though, I think.

What will the FM actually say on this topic anyway?  I would have thought REQUIRES_NEW was a bad idea as a blanket policy - we need to rollback changes to the execution context, for instance.  Our samples only use REQUIRES_NEW for the *Create* method pattern, but Lucas implies that this is incorrect.  Is that true?","24/Mar/08 5:07 AM;lucas.l.ward;Our samples have the following configuration:

	<aop:config>
		<aop:advisor pointcut=""execution(* org.springframework.batch.execution..*Repository+.*(..))""
			advice-ref=""txAdvice"" />
	</aop:config>

	<tx:advice id=""txAdvice"" transaction-manager=""transactionManager"">
		<tx:attributes>
			<tx:method name=""*Create*"" propagation=""REQUIRES_NEW"" isolation=""SERIALIZABLE"" />
			<tx:method name=""*"" />
		</tx:attributes>
	</tx:advice>

I'm pretty sure this means requires new will be applied to every method in the repository.  You're right that this is only true for everything but the ExecutionContext (which should be scoped to the business transaction)  There is a saveOrUpdateExecutionContext that could have a propagation of 'REQUIRED'.  I agree that we could fairly easily detect a transaction, but not the propagation details, which is what we really need to know.  ","24/Mar/08 5:57 AM;david_syer;It means REQUIRES_NEW will be applied to methods which match the pattern ""*Create*"", which is precisely none of them in the current version of the interface.  This is probably a bug (I assume it should be ""create*"" to match createJobExecution, which used to be called findOrCreate).  The default is REQUIRED, which will be applied to all other methods.  Isn't this what we want?  It works for me.  

What was the problem you encountered with a client?  Not all the calls to save the step execution are inside the chunk transaction, so it can't be the case that it was never saved if there was a rollback.  Surely there must have been something else wrong?","24/Mar/08 6:15 AM;lucas.l.ward;Dave,

It doesn't just do it for Create*, there's two tx:methods there, one is '*Create*"" the other is just ""*"".  I don't think we want required as the default for anything but the ExecutionContext.  This was the problem with the client, the first call to save the StepExecution is made at the end of the first chunk, not before processing of the step begins.  So without the tx:method name=""*"", it was rolled back if a write error happened within the first chunk.  This is because the saveOrUpdate method in the repository assumes that any execution with an id has already been inserted and tries to do an update.  

It is a big broken though, because the ExecutionContext may not be exact without having a specific entry for saveOrUpdateExecutionContext with a propagation of REQUIRED.","24/Mar/08 6:18 AM;gk5885;just wanted to point out that these sort of refactoring issues don't show up with programatic transactions (or annotation driven, but that's not an option right now...).  Something to consider for 1.1.","24/Mar/08 6:20 AM;lucas.l.ward;I agree, but my concern is unexpected behavior if your transactions aren't configured exactly right.  That is what scares me the most, and makes me wish for programmatic transactions.  There's really only one 'right' way to configure it.  The factory bean is a decent compromise, but things like your ExecutionContext not holding the right data because it wasn't rolled back due to incorrect transaction propagation scares me.","24/Mar/08 6:21 AM;david_syer;Annotations is the way to go, but not yet obviously.

The name=""*"" entry does not specify a propagation, so as far as I am aware it is REQUIRED (the default).  Hence I don't believe whatever problem you were seeing is caused by not having REQUIRES_NEW (in fact that would be wrong for saveOrUpdateExecutionContext).","24/Mar/08 6:58 AM;lucas.l.ward;Sorry, I looked back after writing that comment and noticed that there is no propagation on the *.  ExecutionContext should be fine either way, but the *Create* should be removed.  Everything should work fine.  I missed the call to updateStatus before the loop started in ItemOrientedStep.  Without the declarative transactions, this didn't work at my client, and the insert never actually went in.  However, if the first chunk processed correctly, it seems that it was successful, presumably because it was part of the first business transaction.  It doesn't make much sense to me, since the transaction manager hadn't been called yet, but that's what I observed at my client.","24/Mar/08 7:15 AM;david_syer;I want to leave create* as a special case because we want to flag it with an isolation level to prevent concurrent access to the same JobExecution from multiple VMs.  I'll handle it, because I have a few other changes to database configuration (been testing with mySQL).","24/Mar/08 7:40 AM;lucas.l.ward;Can you also add the FactoryBean change?  It needs to be tested properly to ensure that it's being added correctly, especially before a release. (Unless we wait until 1.0.1)","24/Mar/08 8:34 AM;david_syer;I'm not sure what that change would be.  I actually don't want to do anything right now, apart from fix the samples (which already work OK, but have the wrong method name in the TX attributes config).  What do you suggest?",24/Mar/08 7:43 PM;david_syer;I found another error in the samples which would definitely cause issues in a live system using a real database - the pointcut was also wrong.  Fixed it and enabled testing on Derby and MySQL using -Denvironment=<database type>.  Derby works without a server process.  MySQL requires a server process (as far as I know).,"25/Mar/08 3:20 AM;lucas.l.ward;Reopening per our discussion earlier, I'm going to move this to Release 1.1, because there would be too many potential impacts this late in the game.",22/Apr/08 5:50 PM;david_syer;I can't agree with the estimate for this (4 days!?).  All we should be doing is making an assertion that a transaction is active in the Jdbc*Dao methods.  Any more than that would be a waste of our time in my opinion.,"23/Apr/08 1:58 AM;lucas.l.ward;Is that what the decision was?  We're just ensuring that it's active and bombing out if it's not?  For some reason i was thinking that we would be putting transactions around the repository if you used the FactoryBean, and we would then bomb out if you also added your own.",23/Apr/08 2:01 AM;gk5885;+1 for lucas' plan,23/Apr/08 3:23 AM;david_syer;OK.  That works for me.  It's still only 10 minutes work though.,25/May/08 11:13 PM;david_syer;Added transaction manager as a mandatory property of JobRepositoryFactoryBean.  The validation that there is at most one transaction interceptor is done in the step factory bean.,07/Aug/08 2:07 AM;david_syer;Assume closed as resolved and released
Killed batches cannot be restarted,BATCH-453,21089,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,gcollin,gcollin,13/Mar/08 3:39 AM,21/Sep/08 7:06 PM,10/May/19 2:37 AM,04/Sep/08 7:19 AM,1.0.0.m4,,,,,,2.0.0.M2,,,Core,,,,,0,,"Since 1.0.0.m4, a new test have been added when re-executing a failed batch.

The new test lies in org.springframework.batch.core.domain.JobExecution class.
When you re-start a failed batch, it checks if the jobexecution is running or not.
I've checked that 1.0.0.m3 didn't do this test.

Here is the method:

/**
* Test if this {@link JobExecution} indicates that it is running. It should
* be noted that this does not necessarily mean that it has been persisted
* as such yet.
* @return true if the end time is null
*/
public boolean isRunning() {
return endTime == null;
}


What's the point ?

Considere the following scenario:
- You start you're batch
- It creates a new job instance and job execution
- You simulate a hardware failure by killing the batch while it runs.
=> job execution state is still STARTED with NO END DATE, because the batch haven't had any chance to update DB before it gets killed.
- You restart the same batch.
=> It finds again the same JobInstance and JobExecution, but sees that the JobExecution.isRunning () is true, so it returns an error:
org.springframework.batch.core.repository.JobExecu tionAlreadyRunningException: A job execution for this job is already running

Expected behavior (?)

My point of view is that a killed batch should be restartable without errors.

Should I create a JIRA bug ?
",,;20/Aug/08 4:31 PM;lucas.l.ward;14400,;29/Aug/08 2:18 AM;lucas.l.ward;57600,;04/Sep/08 7:18 AM;lucas.l.ward;14400,,,,,,,,,,,,86400,14400,86400,100%,86400,14400,86400,,,,,,,,,,,,,,,21/Aug/08 2:10 PM;lucas.l.ward;mylyn-context.zip;https://jira.spring.io/secure/attachment/14587/mylyn-context.zip,20/Aug/08 4:30 PM;lucas.l.ward;mylyn-context.zip;https://jira.spring.io/secure/attachment/14576/mylyn-context.zip,,,,,,,,,,335664000,,,,,2008-03-13 03:51:34.895,5985,true,robert.kasanicky(robert.kasanicky),,,,0|i02jyv:,14944,14245,,,,,"13/Mar/08 3:51 AM;david_syer;That is actually expected behaviour.  If you ""kill -9"" a job you really can't expect to get back to a normal recoverable state.  We have to check somehow when we start a job execution that someone isn't already trying to run it, and the only way we have to find that out is to use the JobExecution as stored in the database.

If you have any suggestions how to do it better, we are definitely listening.  Maybe at least a log message that makes it clear what has happened and suggesting that the state needs to be manually updated to allow a restart?  The point is that there is no way for the framework to tell the difference between a running job and one that was terminated without prejudice, so there has to be an external intervention to get back to a restartable state.","13/Mar/08 3:57 AM;gcollin;Well I have some ideas (expressed in the forum), none are really great solutions:

- 2 columns in the BATCH_STEP_EXECUTION telling running yes/no, with the oracle (or other) sessionid used.

When checking if running or not, it checks in Oracle if the sessionid is still alive, because Oracle closes sessions when the client is killed.

=> I'm aware this is a kind of ugly DB-specific solution, but we've used it in another application and it's working well.

- The batch when running creates a temporary file (the ones deleted when the jvm exits) with a carefully designed name.
When checking if running or not, it can check if the file exists or not.

=> This solution prevents 2 same jobs running on the same machine thought, not on distinct ones.
I guess in most of the case you don't start the same batch on two different machines.

Gérard COLLIN

","13/Mar/08 4:21 AM;david_syer;Seems like maybe we need a strategy for this so people can plug in their own varieties.  How likely is it really that a job is killed with ""kill -9"" on the process, or by killing the session on the database?  To my mind this is by far the least likely way that a job could fail, so I would argue that we can postpone this beyond 1.0.  Is that reasonable?","13/Mar/08 4:39 AM;gcollin;Well, kill -9 is quite improbable, and is just an example.

But the server could crash, or the network could fail, or no space left on disk, or OutOfMemory, impossible to commit to DB, all that prevents the execution of the exception handling that will commit the FAILED state to the DB.
These events can occurs, but of course they are very rare.

So I understand it's not for 1.0, 
just letting customization without having to override 
 - JobDao.createNewJobInstance (),
 - JobInstance.createJobExecution()

would be nice.
But by overriding these methods we can plug our own isRunning() method right now.

Gérard COLLIN","13/Mar/08 4:41 AM;gcollin;Maybe you can lower the bug's priority.
I don't seem to have enough right for it.

Gérard COLLIN
","04/Jun/08 1:36 AM;lucas.l.ward;I don't think this is something we could really tackle in 1.1, moving out to 2.0","20/Jun/08 11:47 PM;brei;When a new batch is started, the job executor should write heartbeats to the db. When you restart the application, the application can check if the flag for jobexecution is set. If the last heartbeat entry is too old, the batch should be recovered. It should be possible to add recovery listeners the the job steps which would be called if the batch is recovered and then you could implement your own stuff for recovery. This solution can also been used for a clustered environment. One server is executing the batch job and the other servers could check for the heartbeats. If the server with the running batch job crashs, the other implementations on the running servers could start a recovery and maybe restarts the batch job again.

Reto ","26/Jun/08 1:41 AM;david_syer;A heartbeat is precisely the right solution, thank you.  Some care will be needed to design it for pluggability, because there are a number of different levels of robustness that could be provided, in case someone wants to be more or less robust than the default.  

In particular the reliability of an apparently *dead* heartbeat is always questionable from the outside - is it dead or just slow?  So there are some special considerations for outside agents (like a replacement job execution) trying to figure out if an apparently dead job is still there.  In general the procedure for the outside agent should be: check for heartbeat, if detected do nothing, if not detected *make sure the other guy is really dead* before proceeding with a recovery.  That has a pleasingly ruthless sound to it, doesn't it?

From the job's point of view the means the the contract is: do not commit *anything* unless you are sure that your heartbeat hasn't been interrupted.  This allows an operator or replacement job to shoot the questionable maybe-dead execution and make sure that it never lives again.  The StepExecution.version is a pretty good mechanism for that - the maybe-dead step will already die pretty quickly if you update its StepExecution in the database.  It's a short journey from there (where we already are) to dying before a commit.","18/Aug/08 1:14 PM;lucas.l.ward;I was reviewing the potential implementation of this issue and had a couple of thoughts on the implementation.  It's obvious that a lastUpdated column should be in the StepExecution table.  it makes perfect sense that we update this value on every update of the StepExecution (which is at chunk boundaries)  However, we currently only look at the JobExecution when determining if we can create a new execution.  We could also update the JobExecution when we update the StepExecution, but it seems a bit odd to do so, since the JobExecution data hasn't really changed, so putting another column there seems weird.  Furthermore, we would need to make two separate calls to the database to update both tables, unless we broke our current encapsulation and let the StepExecutionDao do it.  It would be preferred to not make anymore database calls then we have to.  It makes the most sense to me to just pull back the list of StepExecutions too ( in the case of an existing job) and inspect them, if all are complete or failed, we're fine, however, if running, we would need to inspect the lastUpdated time.  It still seems a bit complicated to me though.  Unless we created some kind of other table to hold the overall heartbeat for a JobInstance?  It still seems like any solution besides the StepExecution one above would break the encapsulation we've maintained so well.  It's the same problem as aggregating status on the JobInstance table.","18/Aug/08 6:13 PM;david_syer;Actually I thought about this too, and came to the opposite conclusion.  I believe it is actually mandatory to track stop signals at the job execution level, even if the heartbeat is in the step execution (which seems natural and as Thomas pointed out may not require any additional queries).  The reason is concurrency, basically: the signal to stop might reach a step execution too late - it has already finished and the job moved on to the next step before anyone noticed.  The best place to check for a stop signal is still in the step (that way any paralell executions can all find the signal), but it may require a query to something at a higher level (probably the job execution).  I don't think it necessarily breaks encapsulation if at the step level we use the JobRepository (but maybe at the dao level - which by the way has already been eroded by the requirements of the JobOperator).","20/Aug/08 4:33 PM;lucas.l.ward;I have updated the StepExecutionDao to store a new field in the StepExecution: LAST_UPDATED.  The SimpleJobRepository, however, is what is updating the field.  The createJobExecution method in the repository now needs to be updated to check for a stale update (along with adding a setter for the stale timeframe, which will need to be in the factory as well)  The final update will be for the stop functionality that Dave has mentioned (although, we could theoretically put that in another issue)","21/Aug/08 2:10 PM;lucas.l.ward;After going back and forth on a lot of different possibilities on this issue, (and discussing with Thomas and Dave), I kept it simple and added a check to the SimpleJobRepository to determine if the status of the JobExecution of the currently executing StepExecution has been set to STOPPING or not.  If so, setTerminateOnly is set to true (throwing an exception will cause the job to fail, not stop) and the step will stop.  It's by no means complete, but it took a lot of back and forth to even decide that this was the right direction.  

One other issue to note is that we really need to pick some common names and stick to them.  In the step we called it 'interruption' (and even have a policy named that), the status is called 'STOPPED' and 'STOPPING', and you set the stepExecution to 'terminateOnly'.  I don't care which one of the three we go with (stop, interrupt, terminate), but we should be consistent across the board.  (although I heavily favor stop, since it will go well with pause)",22/Aug/08 8:47 AM;lucas.l.ward;I added the lastUpdated property to JobExecution and a column in it's respective database.  There is also a new functional test for ensuring that modifying the status of a JobExecution will cause it to stop.  I just need to add some functionality to the daos and the JobOperator to support calling stop that way.  The column changes I've made were also only done in the immeadiate hsql schema in src/main/resources.  The base ones used for the template need to be updated as well.,"25/Aug/08 2:57 PM;lucas.l.ward;I added the support for stop into the SimpleJobOperator, which was committed.  I'll need a little more time to get the sample working using it.  There's a bit of a mess to untangle with some of the dao's, etc.

I'm not sure if the stop interface in JobOperator really needs to return a boolean.  We don't have anyway of knowing whether or not the stop is successful, short of sleeping and checking to see if it's stopped, which is probably not the operator implementation's responsibility.","04/Sep/08 7:19 AM;lucas.l.ward;Jobs can now successfully be stopped via the JobOperator interface.  There's still some polishing that needs to be done between all the collaborators, but I think that should be a separate issue, so I'm resolving this one.",18/Sep/08 3:43 PM;lucas.l.ward;Reassigned for review.,,,,,,,
consistent handling of empty input by ItemReaders,BATCH-414,20915,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,lucas.l.ward,lucas.l.ward,04/Mar/08 5:39 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,26/Jun/08 11:52 PM,1.0.0.m5,,,,,,1.1.0,,,Infrastructure,,,,,1,,"In many cases with ItemReaders it's possible to call open, but have nothing to process.  This could be because a file was empty or a query returned no results.  This should throw a 'NoWorkFoundException'  Throwing a specific exception allows developers to make a domain decision about whether or not finding no work means failure or not.  in the majority of cases it will mean failure, however, in a few it might be okay.",,analysis;24/Jun/08 2:27 AM;robert.kasanicky;7200,ItemReaders now handle empty input gracefully + tests;26/Jun/08 2:37 AM;robert.kasanicky;28800,added StepListener that detects item count == 0 and throws exception in afterStep;26/Jun/08 11:51 PM;robert.kasanicky;7200,renamed NoItemsProcessedDetector to NoWorkFoundListener and reused the NoWorkFoundException;29/Jun/08 7:23 PM;robert.kasanicky;3600,,,,,,,,,,,86400,0,46800,54%,86400,0,46800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-04-01 01:34:44.393,5999,false,david_syer(david_syer),,,,0|i01tqn:,10695,10674,,,,,01/Apr/08 1:34 AM;robert.kasanicky;I think it makes better sense to handle this concern at the step level?,01/Apr/08 7:07 PM;robert.kasanicky;Moving to 1.1 - this is not a bug and would change the behavior in a notable way,"22/Apr/08 3:04 PM;lucas.l.ward;There's been a considerable ammount of noise around this issue, so I'm assigning to myself, and I've given an initial estimate of 3 days.  It may potentially need to be handled at the step level, but I'm not quite sure yet.  I still feel like it's easy enough to ignore, but I understand the point others have made.","22/Apr/08 9:15 PM;robert.kasanicky;How about using StepExecutionListener.afterStep to check the itemCount value? It is not the same as detecting empty input, but could  be good enough. There is also an option to use separate tasklet step to check the input before processing it in the following step. Or even use both maybe.","23/Jun/08 8:49 AM;lucas.l.ward;There's actually multiple parts to this issue, one, as I think you pointed out Robert was whether or not we should default to a step failure if there is no work found to process.  Should we always throw an exception, or should we not an assume anyone that wants to catch it will handle it themselves?  Checking the item count seems possible, but it feels like a work around.  It seems like it would be easier to ignore an exception than it would be to try and detect that nothing was done.

The other part of the problem is that, either way, all of the ItemReader implementations should behave the same way, it should be documented in the java docs as part of the contract.  I'm afraid some of the readers would probably fail in open if there was no work found.    For example, if a file that is configured to be read by a FlatFileItemReader doesn't exist, is that considered 'no work' or a failure?  What if the file is empty?  Should we dictate that the open method not throw an exception in these scenarios and that the reader simply return null on the first call?  That seems somewhat brittle as well.  It still seems easier to me to throw a no work found exception and have one point to say 'NoWorkFoundException means the job was successful' via configuration.",24/Jun/08 2:26 AM;robert.kasanicky;The consensus so far is to accept empty input in the ItemReaders (the DrivingQueryItemReader will need to be adjusted) and provide optional way to fail the step if no work has been done (e.g. StepListener that checks itemCount == 0).,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,
Create JPA ItemReader/Writer,BATCH-354,20554,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,lucas.l.ward,lucas.l.ward,11/Feb/08 3:54 AM,23/Sep/08 11:10 AM,10/May/19 2:37 AM,06/Aug/08 12:42 PM,,,,,,,2.0.0.M1,,,Infrastructure,,,,,2,,"We already have hibernate versions, but there should likely be JPA ones as well.  It begs the question of whether or not a Hibernate specific one adds any value though.  The whole stateless/stateful session topic might be enough to keep it around, since I'm not sure JPA has the same abstraction (I would have to double check though)",,"added an ItemReader implementation for JPA, modified CommonItemReaderTests and subclasses to run as JUnit4 tests;02/Aug/08 8:47 AM;thomas.risberg;21600",added an ItemWriter implementation for JPA;02/Aug/08 5:23 PM;thomas.risberg;10800,"removed Spring transaction management and replaced with programmatic transactions for the JpaPagingItemReader, added integration tests;06/Aug/08 12:42 PM;thomas.risberg;3600",,,,,,,,,,,,28800,0,36000,125%,28800,0,36000,,,,,,,,,,,,,,,,,,,,,,,,,,349660800,,,,,2008-02-12 12:05:36.192,12082,false,lucas.l.ward(lucas.l.ward),,,,0|i0567r:,30213,27199,,,,,12/Feb/08 12:05 PM;wxlund;I saw the question in the forum on this topic.  The issue of ORM in batch needs to be resolved because projects want it for generally valid reasons.  I'm actually hoping that JPA will help us resolve the issue in a standard way but JPA seems to be implemented today with the use of a lot of vendor extensions. ,"09/Apr/08 9:34 AM;lucas.l.ward;I'm actually okay with moving this one off the plate of 1.1, we haven't seen a lot of requests for it other than one on the forum.  Unless anyone has objects I vote to move it under 2.0 (and even potentially past that)",09/Apr/08 6:20 PM;david_syer;AGreed.  It would work better in 2.0 with full Java 5 support.,,,,,,,,,,,,,,,,,,,,
Remove close() method from non ItemStreams,BATCH-350,20540,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,douglas.c.kaminsky,douglas.c.kaminsky,10/Feb/08 9:44 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,10/Feb/08 10:29 PM,1.0.0.m4,,,,,,1.0.0.m5,,,,,,,,0,,"The following classes have a default close method implementation which does not belong and should be removed:

org.springframework.batch.execution.launch.EmptyItemWriter
org.springframework.batch.item.writer.ItemWriterAdapter
org.springframework.batch.item.reader.ItemReaderAdapter

Here's an interesting question -- how do you deal with something that needs to be both an ItemStream and a RepeatInterceptor?

Take org.springframework.batch.io.support.HibernateAwareItemWriter for instance -- suppose you want this to be transaction managed as an ItemStream, how would you do that?",,;10/Feb/08 10:30 PM;david_syer;1440,,,,,,,,,,,,,,0,0,1440,"9,223,372,036,854,775,807%",0,0,1440,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-02-10 18:59:25.757,12085,false,david_syer(david_syer),,,,0|i0576n:,30370,27376,,,,,"10/Feb/08 9:57 AM;douglas.c.kaminsky;I should clarify regarding the above posited question -- I understand that the method signatures of the open and close methods are different between the two, but it seems like there might be a way to improve the clarity in such a case.","10/Feb/08 6:59 PM;david_syer;Good catch on the redundant close() methods - some were already fixed in another JIRA.

HibernateAwareItemWriter is not an ItemStream, so it is clear in that case.  What would you suggest if there was to be an ItemStream that itself was a RepeatListener?","10/Feb/08 10:29 PM;david_syer;The issue is resolved as described - if you want to continue the discussion about the overloaded method, can we do it offline?","11/Feb/08 2:28 AM;douglas.c.kaminsky;Sure - was just meant to provoke thought - I'll start a forum thread:
http://forum.springframework.org/showthread.php?t=49718",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
aop / template interceptor class names ambiguous,BATCH-347,20520,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,douglas.c.kaminsky,douglas.c.kaminsky,08/Feb/08 6:57 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,10/Feb/08 2:30 AM,1.0.0.m4,,,,,,1.0.0.m5,,,Infrastructure,,,,,0,,"RepeatInterceptor vs. RepeatOperationsInterceptor
RetryInterceptor vs. RetryOperationsInterceptor

Each of these pairs is badly named. Perhaps the aop ones might be renamed ""Advisor"" so as not to be as confusing?

i.e.

RepeatOperationsAdvisor
RetryOperationsAdvisor",,;10/Feb/08 2:30 AM;david_syer;3600,,,,,,,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-02-09 21:59:22.509,12088,false,david_syer(david_syer),,,,0|i0577z:,30376,27382,,,,,"08/Feb/08 6:58 AM;douglas.c.kaminsky;Sorry, should be infrastructure","09/Feb/08 9:59 PM;david_syer;I agree about the confusion - unfortunately there are several cases in Spring Core that have the same problem.  I suggest *Advice (rather than *Advisor), since that is the name of the base interface they implement.","10/Feb/08 2:30 AM;david_syer;Actually, I prefer *Listener for the non-AOP interceptor. so I think I'll go with that and leave it as Interceptor for the AOP MethodInterceptor implementations.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
API Bloat,BATCH-333,20416,22656,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Won't Fix,david_syer,gk5885,gk5885,01/Feb/08 8:27 AM,01/Mar/09 2:16 AM,10/May/19 2:37 AM,01/Mar/09 2:16 AM,,,,,,,,,,Core,Documentation,Infrastructure,,,1,,"Here's a quick look at the spring batch trunk from an API perspective:
Top-level classes: 202
Top-level interfaces: 61
Inner classes: 26
Inner interfaces: 2
Subclassable classes: 182
Implementable interfaces: 62
Explicitly overridable methods: 178
Implicitly overridable methods: 512

Subclassable classes are those that are public and not final.  Implementable interfaces are those that are public.  Explicitly overridable methods are those that are designed to be overridden (i.e. methods in interfaces and abstract methods).  Implicitly overridable methods are those found in subclassable classes that may be overridden (i.e. public or protected and not final).


This is getting pretty out of hand...  80% of the spring-batch classes are subclassable on top of the 26 public interfaces.  Developers are overwhelmed with extension points.  While it's nice to be flexible, this is a framework and extensibility needs to be directed.",,;28/Aug/08 10:44 PM;david_syer;57600,,,,,,,,,,,,,,0,0,57600,"9,223,372,036,854,775,807%",0,0,57600,,,,,,,,,,,,,,,08/Feb/08 5:36 AM;gk5885;DefaultFlatFileItemReader-classdiagram.png;https://jira.spring.io/secure/attachment/13631/DefaultFlatFileItemReader-classdiagram.png,07/Feb/08 2:11 AM;gk5885;flatfilereading.png;https://jira.spring.io/secure/attachment/13619/flatfilereading.png,,,,,,,,,,321580800,,,,,2008-02-04 04:04:53.546,12098,false,david_syer(david_syer),,,,0|i01sgv:,10489,185,,,,,"01/Feb/08 8:48 AM;gk5885;oops.  typo.  
80% of the spring-batch classes are subclassable on top of the 26 public interfaces. 
should be
80% of the spring-batch classes are subclassable on top of the 61 public interfaces. 
","01/Feb/08 8:49 AM;gk5885;bah.  typo again.
80% of the spring-batch classes are subclassable on top of the 62 public interfaces. 
","04/Feb/08 4:04 AM;david_syer;I kind of agree.  Ben and I have been discussing, and it is a topic that has arisen many times (as you can imagine) in the past.  There is no time to make any significant changes for 1.0, so I'm marking this for future work.  It is something we want to get right, but there are some Java language issues as well - all interfaces are likely to be publicly visible, even if we only use them internally.

For 1.0, this is really just a documentation issue.  Most developers only need to know ItemWriter.  Maybe Tasklet, and maybe ItemReader.  Advanced usage would include the ExceptionHandler, CompletionPolicy, RepeatInterceptor.  There are probably a few more.

In the future we need a better story for OSGi (1.0 will go out as an OSGi bundle, but there won't be any point trying to be strict about it just yet).","04/Feb/08 4:32 AM;gk5885;Yes, time is certainly a factor.  It's probably my fault for bringing this up so late in development, but it almost certainly needs to be looked at before 1.1 just because all 228 classes and 63 interfaces need to be effectively frozen until spring-batch 2.0.  How much scaling back can you really do to an api _after_ releasing 1.0?

A quick example is JobRepositorySupport.  You don't even use it to implement JobRepository, but if 1.0 gets released with that class, you can't really make it disappear in 1.1.  If anything, I would think that you'd be better off identifying the things that need to be exposed (just like you did) and hide the rest of it.  Then, if 1.1 comes around and someone objects to not having access to something you can always add it to the public-facing part of the framework.

On the other hand, I agree that documentation would go a _long_ way towards fixing a lot of these problems.  As I mentioned to Lucas, to understand how the DefaultFlatFileReader is implemented and invoked, there's quite an extensive list of interfaces that need to be understood.  A little documentation pointing developers towards the highlights would certainly clear up a lot.

Then again, the smaller the API, the less there is to document... :-)",04/Feb/08 7:00 AM;gk5885;My mistake on the example.  JobRepositorySupport is in the test sources.  Substitute that with Converter for an equally valid example.,"04/Feb/08 7:33 PM;david_syer;Converter was scratched last week in favour of ItemTransformer (so one less interface there anyway), and there is only one implementation (apart from inner classes, mostly in test cases).  You might have to think of a better example again.","05/Feb/08 1:31 AM;gk5885;Actually, that was my point... Converter isn't even being used, but it's still present in the source and if it doesn't get removed it's a part of the API.  Just some simple cleanup, reevaluating whether or not some of the *Adaptor classes, *Support classes, etc. and consolidating similar interfaces (there seem to be a few that define a single Object->Object  or Object->void method) would be a quick, pre-1.0 task that could save some headaches in the long run.",06/Feb/08 5:37 AM;david_syer;I removed the Converter - it was an oversight.  Now we need a new poster child for API bloat.,"07/Feb/08 2:08 AM;gk5885;I think that you're missing the forest for the trees... I wouldn't think that there would be a poster child for an api-level issue. Perhaps it was my mistake for including an example at all.  All I was trying to do was point out that things get missed when you get focused on solving individual problems.  IMHO, the issue is that the API is huge. Very, very huge. There is a new abstraction for every possible detail and it makes spring-batch as unnavigable as it is extensible.

My recommendation remains that there is some consideration made prior to the 1.0 release about how many classes are exposed and whether or not some of the abstractions can be cut down.","07/Feb/08 2:11 AM;gk5885;This might be a better way to look at the issue.  This is a class diagram of just the classes related to reading a flat file.  (there may be one or two stray ones in there related to writing, but i tried to filter them out)  In order for someone picking up spring batch to get a good idea of how flat file reading works, and what the various options are, he/she would have to understand the majority of the classes in this diagram.  That's a lot.","07/Feb/08 4:27 AM;david_syer;I don't disagree with the basic point you are trying to make, but there are still some Java language constraints that we can't get around even if we wanted to.  And (apart from the fact that it gratuitously includes StreamManager, and at least one private inner class) with that in mind the diagram is a good starting point.  But you are not going to be able to convince me that FieldlSetMapper, FieldSet, LineTokenizer etc. should not be a) interfaces, b) public interfaces.

Thanks for the effort and all the feedback, by the way - it is very helpful, and you are right on the money.  If we can find any more superfluous / wrong extension points we can definitely remove them.  But we don't have the bandwidth for a re-write.","08/Feb/08 5:36 AM;gk5885;Here's another interesting example of how a large API leaves behind some strange artifacts as it evolves.  I was making a class diagram for the inheritance relationships for DefaultFlatFileItemReader and came across AbstractItemReader.  It is an abstract class that implements ItemReader and only provides an empty implementation of close().  Unfortunately, ItemReader doesn't define a close method.  So, everything that extends AbstractItemReader has a close method that will never get called (unless an implementation also implements ItemStream) and we have a layer of abstraction that adds no value.","09/Feb/08 2:59 PM;douglas.c.kaminsky;Well the AbstractItemReader seems to be a hastily converted AbstractItemProvider, which provided the close and recover methods. Item recovery was moved to the ItemRecoverer interface in M4, and the close method is now encapsulated in ItemStream, so this is a good example of a deprecated class that should be removed, and a JIRA issue should be created specifically to remove this, but I don't think that's the crux of Greg's argument.

Don't get me wrong, I don't buy what Greg is saying 100% -- I don't think that every framework necessarily should declare final anything that they don't expect to be an extension point. Leaving something as extendable is not the same as API bloat IMO -- however, I do think that documentation should establish best practices for which classes are INTENDED to be extension points, leaving the rest as advanced customization for users who won't get the same level of support.

Aside from the heart of the topic --- about the FieldSet issue, I suggested to Lucas several months ago that this be made a public interface, for a much different reason than the guys in the forum - theirs was for symmetry with ResultSet -- mine was for the use case of ""as-you-read"" data tweaking, and Lucas said ""you could just as easily put that logic into one of our supported extension points"" - that was the end of the issue for me. I think that it should not have been made public since, as far as I could gather between my ideas and talking to Lucas, there is no widespread use case to support it that is not already addressed by other features.

I think this is a fair and reasonable standard for determining whether or not a feature is helpful or just bloat. We don't need several ways to do the same things, but we also don't need to lock down the framework to only the ""best practice"" extension points.",09/Feb/08 3:02 PM;douglas.c.kaminsky;Created an issue for removal of the AbstractItemReader --- http://jira.springframework.org/browse/BATCH-348,"11/Aug/08 11:57 PM;david_syer;We had the API bloat discussion for 2.0, and made quite a few changes to public APIs.  The main conclusion though is that a framework has too many extension points to be really literal about only exporting a small set of interfaces (JLS restrictions also relevant).

Postponing this again so we can talk about it for a later release.",01/Mar/09 2:16 AM;david_syer;I think we talked about this one enough now.  It's going to be down to specific issues about specific topics from this point.,,,,,,,
"create schema generator configurations for MS SQL, Sybase",BATCH-328,20366,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,douglas.c.kaminsky,douglas.c.kaminsky,29/Jan/08 7:54 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,28/Jun/08 7:03 PM,1.0.0.m4,,,,,,1.1.0,,,Core,,,,,2,,"There's no Sybase or MS SQL schema currently in the distribution. Just thought I'd throw that out there...

There would need to be a change to the main body of the ""init"" code, as TIMESTAMP has a different meaning in Sybase than it does in other DBMS's -- in Sybase (if I remember properly) it's a 64 bit integer that just increments every time a select is performed, and has no relation to date or time (although you can determine the order of events since it's guaranteed to be sequential until it rolls over back to zero). Not sure if this is echoed in MS SQL, but I'd guess that it is considering that Sybase / T*SQL was the core of the modern MS SQL product.

Anyway, TIMESTAMP would have to be externalized as ${TIMESTAMP} in the init template.",,;28/Jun/08 7:03 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,SPR-4592,,,,,,,,,,,,30/Jun/08 9:42 AM;thomas.risberg;BATCH-328-samples.patch;https://jira.spring.io/secure/attachment/14274/BATCH-328-samples.patch,28/Jun/08 1:08 PM;thomas.risberg;BATCH-328.patch;https://jira.spring.io/secure/attachment/14263/BATCH-328.patch,21/May/08 10:04 PM;prebennilsson;MS SQL support in Spring Batch.zip;https://jira.spring.io/secure/attachment/14078/MS+SQL+support+in+Spring+Batch.zip,25/May/08 8:54 PM;veaven;spring_batch_sybase.sql;https://jira.spring.io/secure/attachment/14098/spring_batch_sybase.sql,,,,,,,,339379200,,,,,2008-01-30 01:25:33.194,12100,false,david_syer(david_syer),,,,0|i01trj:,10699,10678,,,,,"30/Jan/08 1:25 AM;david_syer;If that's the only change for Sybase/MSSQL I can do it quickly.  Of not I'm not going to get round to it soon, so patches welcome...","16/Mar/08 9:22 PM;david_syer;There is no DataFieldMaxValueIncrementer for Sybase yet in Spring Core.  Postponing this until we get some answers there (maybe it will happen in core, or maybe there is a workaround - anyone know?).",21/May/08 2:18 AM;robert.kasanicky;http://forum.springframework.org/showthread.php?p=181593,"21/May/08 10:04 PM;prebennilsson;Hi all,

I created DDL for MS SQL Server for both the batch core tables and the samples tables. I have also created an Incrementer class for MS SQL Server (MsSQLMaxValueIncrementer), and added it to the DefaultDataFieldMaxValueIncrementerFactory class.

To get the Spring Batch samples to run on MS SQL Server, I made a copy of JobRepositoryFactoryBean, that points to my own version of DefaultDataFieldMaxValueIncrementerFactory. That seems to work OK.

Best regards
Preben Nilsson","23/May/08 1:16 AM;david_syer;Great thanks.  If you didn't already, could you attach the incrementer implementation (and a test case if possible) to SPR-4592?","25/May/08 8:54 PM;veaven;I created a schema for Sybase, and I run some job on sybase now. In fact, it is similar to MS SQL database schema with a small difference.","04/Jun/08 1:46 AM;lucas.l.ward;It looks like the above issue to create incremeters has been fixed, so we just need to add the additional schemas and update the JobRepositoryFactoryBean","28/Jun/08 1:08 PM;thomas.risberg;Patch with code changes and SQL scripts for Sybase and SQL Server.  Will provide a second patch for the samples later on.

--Thomas",28/Jun/08 7:03 PM;david_syer;Applied latest patch.  Thanks.,"30/Jun/08 9:42 AM;thomas.risberg;Patch to allow the samples to be run against Oracle, SQL Server and Sybase.  Most tests run fine against Oracle and SQLServer.  Sybase has a problem creating some tables:

java.sql.SQLException: The 'CREATE TABLE' command is not allowed within a multi-statement transaction in the 'test' database.

We need to change how the DDL scripts are executed to solve this issue.

There are still some sample tests that fail on a number of databases - I'll create separate issues and patches as I come up with solutions. 

--Thomas
",30/Jun/08 5:48 PM;david_syer;Patch applied thanks.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,
Step as factory for StepExecutor,BATCH-324,20318,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,28/Jan/08 9:45 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,30/Jan/08 1:19 AM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,0,,Step as factory for StepExecutor,,;30/Jan/08 1:20 AM;david_syer;16200,,,,,,,,,,,,,,7200,0,16200,225%,7200,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12104,false,david_syer(david_syer),,,,0|i057an:,30388,27394,,,,,"30/Jan/08 1:19 AM;david_syer;SimpleStepExecutor and Default JobExecutor still used internally, but Step and Job now know how to launch themselves.  The fact that a Job can launch itself without any state is interesting but irrelevant.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Refactor ItemWriter as primary collaborator (with wrapper for processor),BATCH-320,20306,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,28/Jan/08 2:44 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,28/Jan/08 8:49 PM,1.0-m3,,,,,,1.0.0.m4,,,Infrastructure,,,,,0,,"Refactor ItemWriter as primary collaborator (with wrapper for processor).  It is still quite confusing that ItemReader and ItemProcessor are the primary touchpoints for input/output.  ItemWriter would be easier to understand, and it can wrap a processor in a similar way the processor does now in reverse.",,;28/Jan/08 8:51 PM;david_syer;14400,,,,,,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12107,false,david_syer(david_syer),,,,0|i057br:,30393,27399,,,,,28/Jan/08 8:49 PM;david_syer;Renamed all processor to writer and removed ItemProcessor.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
BatchCommandLineLauncher simplified and rename,BATCH-304,20212,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,david_syer,david_syer,22/Jan/08 12:35 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,30/Jan/08 2:50 AM,1.0-m3,,,,,,1.0.0.m4,,,Samples,,,,,0,,"BatchCommandLineLauncher simplified and renamed.  There are simply too many ways to skin this cat, and we don't want to try and cover everyone's preferences in one main method.  Rename as SimpleCommandLineJobDispatcher (or something?), and make it work in the simple case that there is one application context (in XML) and a named Job (possibly one of many), with two optional runtime parameters (a key and a schedule date).  The JobLauncher is identified by type.",,;30/Jan/08 2:51 AM;david_syer;18000,,,,,,,,,,,,,,0,0,18000,"9,223,372,036,854,775,807%",0,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-05-23 10:18:43.722,12123,false,david_syer(david_syer),,,,0|i01oa7:,9811,9838,,,,,"23/Jan/08 8:26 PM;david_syer;JobIdentifier died in this process, and JobParameters was born.  There is a factory for the JobParameters which can be used in command line launchers and a PropertyEditor for JMX style usage.  The command line tool is still in execution, but is now SimpleCommandLineJobeLauncher.","23/May/08 10:18 AM;kwilliaa;the getting started page still instructs users to use BatchCommandLineLauncher to run jobs from the command line.  Someone should update it to the new class name.

http://static.springframework.org/spring-batch/getting-started.html",23/May/08 9:22 PM;david_syer;Updated docs.  Thanks.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
Replace repeat contexts in core domain with boolean flag that can be checked by executors,BATCH-303,20210,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,21/Jan/08 10:46 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,21/Jan/08 11:55 PM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,0,,Replace repeat contexts in core domain with boolean flag that can be checked by executors,,;21/Jan/08 11:56 PM;david_syer;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12124,false,david_syer(david_syer),,,,0|i057cv:,30398,27404,,,,,21/Jan/08 11:55 PM;david_syer;Use StepExecution instead of contexts and push termination flag into core domain.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
JobLauncher should have only one run method.,BATCH-295,19176,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,lucas.l.ward,lucas.l.ward,15/Jan/08 9:44 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,23/Jan/08 8:47 PM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,1,,"Currently, the JobLauncher interface has three versions of the run method:

public JobExecution run() throws NoSuchJobException, JobExecutionAlreadyRunningException;

public JobExecution run(String jobName)

public JobExecution run(JobIdentifier jobIdentifier)

Should this really be the case?  What is the motivation for having three?  It's extremely confusing and requires a bit of an odd contract that all implementations of the JobLauncher have to implement.  For run(String), the contract is that a JobIdentifier will be obtained using the name, and then run(Identifier) will be called.  For run(), a default name will be obtained, and then run(String) will be called, etc.  This seems more like 3 constructors than it does an interface.  

I vote for having only run(JobIdentifier), however, I can see why run(String) might be argued for as well, and would be interested in seeing the arguments for both.  Regardless, there should be only one.

I know one of the motivations has to do with using JMX, however, there can easily be something similar to ExportedJobLauncher, that exists in the Samples project, that can be exported.",,;23/Jan/08 8:48 PM;david_syer;16200,;23/Jan/08 8:48 PM;david_syer;60,,,,,,,,,,,,,7200,0,16260,225%,7200,0,16260,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2008-01-16 00:23:45.0,12132,false,david_syer(david_syer),,,,0|i057ef:,30405,27411,,,,,"16/Jan/08 12:23 AM;david_syer;I think the run() and run(String) methods are there as conveniences, especially for remote clients.  I think I agree that they have probably outlived their usefulness.  I want to check that I can still do my JMX demo first.","16/Jan/08 1:27 AM;gk5885;This issue gets my +1.  Not only is the contract a little strange, but it also makes JobLauncher require a jobIdentifierFactory and possibly a jobName for those methods to succeed.  Because you're using a bunch of optional collaborators, the control flow gets a bit confusing too.","17/Jan/08 2:33 AM;gk5885;The new JobLauncher looks vastly improved.  A suggestion is that for JobLaunchers running in container, you may want to check status or stop jobs individually.  Something like:

stop(JobIdentifier)
stopAll()
isRunning(JobIdentifier)
isAnyJobRunning()

Also, it may be nice to have stop indicate whether or not the job was running when it returns (noop because it wasn't running vs. actually stopped a running job).","17/Jan/08 10:59 AM;lucas.l.ward;I agree with Greg for the most part, I just committed a new class: DefaultJobLauncher, that has methods stop(JobIdentifier) and isRunning(JobIdentifier).  I could easily see a use case for the other two methods mentioned above as well.  A secondary goal of the class was to show a much simpler version than SimpleJobLauncher that works with a JobExecutor and Repository directly, rather than via a JobExecutorFacade.  This makes the flow significantly easier to understand, and would be even simpler if BATCH-299 is fixed.

The way I see it, the run(String) and getStatistics() methods could easily be implemented by a class that interfaces with the DefaultJobLauncher via composition.  run(String) would be something like:

public void run(String jobName){
    JobIdentifier identifier = new SimpleJobIdentifier( jobName );
    jobLauncher.run(identifier);
}

getStatistics would be the same as it is now, which would be no issue since it would have access to the JobExecution already.","17/Jan/08 11:02 AM;lucas.l.ward;I would also like to add that the class is not intended to completely replace the SimpleJobLauncher just yet, at the moment it is still a bit of a prototype, but I wanted to get everyone's opinion on it before moving along this course more.",23/Jan/08 8:47 PM;david_syer;Resolved along with changes made for BATCH-304,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,
"Make input parameters easier to access from ItemReaders, etc.",BATCH-282,19134,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,douglas.c.kaminsky,douglas.c.kaminsky,13/Jan/08 8:11 AM,24/Nov/08 1:47 AM,10/May/19 2:37 AM,24/Nov/08 1:47 AM,1.0-m3,,,,,,2.0.0.M3,,,Core,,,,,1,,"Couldn't we add a simpler mechanism for grabbing job identifier info, eg. JobIdentifierAware (or, more user-friendly, InstanceParameterAware) to directly inject all of the relevant parameters directly, without having to deal with the step context.

Source forum thread: http://forum.springframework.org/showthread.php?t=48447",,;05/Sep/08 12:12 AM;david_syer;14400,;15/Oct/08 10:49 PM;david_syer;10800,;27/Oct/08 6:52 AM;david_syer;28800,;14/Nov/08 2:58 AM;david_syer;28800,,,,,,,,,,,57600,7200,82800,143%,77400,19800,90000,,,SPR-5224,,,,,,,,,,,,,,,,,,,,,,,330739200,,,,,2008-01-13 16:01:01.0,6034,false,david_syer(david_syer),,,,0|i02k8f:,14987,14285,,,,,"13/Jan/08 4:01 PM;lucas.l.ward;I agree, right now getting to the JobIdentifier looks like it would be something like the following:

stepContext.getStepExecution().getJobExecution().getJobInstance().getJobIdentifier().

I'm okay with JobIdentifierAware, I'm not sure if I would go so fine grained as InstancePropertiesAware though.","24/Jan/08 3:12 AM;lucas.l.ward;Note: JobIdentifier is removed, but JobParameters are the same thing a developer would need access to, so the issue is still there.",12/May/08 2:32 AM;lucas.l.ward;I moved this to 2.0.  I don't think there's anyway we could solve this beyond the convenience method currently in place without making more changes than would be acceptable in a point release.,"15/May/08 5:11 AM;douglas.c.kaminsky;What about adding a static class to manage the job parameters for a given execution?

e.g.

JobParametersHolder.getJobParameters()

caveat:
threadsafety is an issue if multiple jobs running in same JVM

probably could handle this with a ThreadLocal?","15/May/08 10:34 AM;david_syer;ThreadLocal won't work if you launch the job in another thread, or if the reader/writer is accessed in multiple threads (most of the framework implementations do not support this, but it's not that unusual).  I can't see how this would work at all in that case, except if you knew the JobExecution id.  And if you knew that you would know the job parameters anyway.","16/May/08 3:42 AM;douglas.c.kaminsky;If I understand ThreadLocals properly, the purpose of the ThreadLocal would be to hold a separate immutable copy of the JobParameters for each thread - a lot of threads would have the same exact information, but I'm not sure why you think it wouldn't work as part of a potential strategy. It may take some more components to make it work (e.g. adding some logic that would have each new thread retrieve the job parameters for its corresponding execution from the repository and store it in its thread local via static method call, etc.). The idea of using a static call with a ThreadLocal would just be so all this is handled automatically and stored in memory by the executing class (task executor?) instead of having to go to the repository using the execution id to retrieve your parameters, which it seems is what you're implying by saying ""if you knew that you would know the job parameters anyway""

The only other n=1 option I can think of is to make an Aware implementation and create a stock JobExecutionListener that injects this into each Aware artifact (i.e. readers / writers for item oriented, the injected tasklet for tasklet step), but this requires much more configuration to work.","16/May/08 3:44 AM;douglas.c.kaminsky;*having to go to the repository using the execution id 

should read

having to go to the repository using the execution id or calling a 5-level deep accessor method","15/Oct/08 10:50 PM;david_syer;Added StepScope (again).  ThreadLocal is used, but hidden from the user (hopefully).  When Spring EL is available (soon) we will also have late binding to JobParameters, and ExecutionContext values.","14/Nov/08 2:53 AM;david_syer;Implemented late binding to StepContext properties using a homegrown proxy TargetSource.  Can be upgraded or dynamically switched to Spring 3.0 EL features when and if they are available.  Example from integration test:

	<bean id=""simple"" class=""org.springframework.batch.core.scope.TestCollaborator"" scope=""step"">
		<property name=""name"" value=""#{stepExecutionContext[foo]}"" />
	</bean>

	<bean id=""compound"" class=""org.springframework.batch.core.scope.TestCollaborator"" scope=""step"">
		<property name=""name"" value=""#{stepExecutionContext[foo]}-bar"" />
	</bean>

	<bean id=""value"" class=""org.springframework.batch.core.scope.TestCollaborator"" scope=""step"">
		<property name=""name"" value=""foo"" />
		<property name=""parent"" value=""#{stepExecutionContext[parent]}"" />
	</bean>

	<bean id=""ref"" class=""org.springframework.batch.core.scope.TestCollaborator"" scope=""step"">
		<property name=""name"" value=""foo"" />
		<property name=""parent"" ref=""#{stepExecutionContext[foo]}"" />
	</bean>

All this is enabled by StepScope, so this is also necessary (somewhere in the ApplicationContext):

	<bean class=""org.springframework.batch.core.scope.StepScope"" />
	
We can use Spring 3.0 EL binding if it is available later (by switching on the SpringVersion).",,,,,,,,,,,,,,
Allow FixedLengthLineAggregator to be configured with different padding/alignment for specific columns,BATCH-278,19110,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,robert.kasanicky,sparkle,sparkle,10/Jan/08 9:21 PM,23/Sep/08 6:37 AM,10/May/19 2:37 AM,07/Aug/08 12:56 AM,1.0-m3,,,,,,2.0.0.M1,,,Infrastructure,,,,,0,,"I'm currently evaluating if Spring Batch needs our requirements and what I do have to write on my own. We have a customer who needs to have an output format similar with the following example. I simplified the format to present the two important columns, first is a lastName and second is a memberId. The lastName should be aligned left with padding space, the memberId should be aligned right with padding zero.

E.g. (range is 1-13,13-23):
Wood      000123456789
Cinque    123456789012

Do you have any plans to upgrade the FixedLengthLineAggregator or a subclass with such functionality, column specific padding/alignment? 


",,;06/Aug/08 11:45 PM;david_syer;21600,,,,,,,,,,,,,,28800,0,21600,75%,28800,0,21600,,,,,,,,,,,,,,,14/Mar/08 11:07 AM;douglas.c.kaminsky;batch-278-unittest-v2.patch;https://jira.spring.io/secure/attachment/13789/batch-278-unittest-v2.patch,14/Mar/08 11:05 AM;douglas.c.kaminsky;batch-278-unittest.patch;https://jira.spring.io/secure/attachment/13788/batch-278-unittest.patch,14/Mar/08 7:08 AM;douglas.c.kaminsky;batch-278-unittest.patch;https://jira.spring.io/secure/attachment/13785/batch-278-unittest.patch,14/Mar/08 11:07 AM;douglas.c.kaminsky;batch-278-v2.patch;https://jira.spring.io/secure/attachment/13790/batch-278-v2.patch,14/Mar/08 11:05 AM;douglas.c.kaminsky;batch-278.patch;https://jira.spring.io/secure/attachment/13787/batch-278.patch,14/Mar/08 7:08 AM;douglas.c.kaminsky;batch-278.patch;https://jira.spring.io/secure/attachment/13784/batch-278.patch,,,,,,339379200,,,,,2008-01-11 04:27:42.0,6035,false,lucas.l.ward(lucas.l.ward),,,,0|i02k8n:,14988,14286,,,,,"11/Jan/08 4:27 AM;david_syer;It wouldn't be a big change, but it wasn't planned.  We use JIRA for planning, so this ticket can now be folded into a plan (it probably won't be in 1.0, but maybe a point release 1.0.1, unless someone contributes some code).","14/Mar/08 7:08 AM;douglas.c.kaminsky;Been sitting on this one for awhile... 

Attached a modification that preserves the original behavior (with slight rename of setters to ""setDefaultXXX"" instead of ""setXXX"") and adds the ability to inject maps from FieldSet name to align / padding -- or, in the case where your field set does not have a name, allows you to address your ranges by index (e.g. 0 = first range, 1 = second range, etc.). The added logic does not seem to have a noticable performance impact. Hope this solves the issue adequately.","14/Mar/08 11:05 AM;douglas.c.kaminsky;Updated attachments to allow for values in padding map to be non-character - new behavior converts to string and asserts that length is 1, then converts to character - added a regression condition test to one of the test cases","14/Mar/08 11:07 AM;douglas.c.kaminsky;Sorry, last upload named the files the same so they're indistinguishable by name alone - use the attached ""v2"" versions. I don't have rights so please delete the duplicates.","19/Mar/08 9:29 PM;nebhale;We should follow a system like the logback formatting scheme:

http://logback.qos.ch/manual/layouts.html

See format modifiers
","03/Jun/08 9:33 AM;lucas.l.ward;I raised the priority on this, as I think it absolutely needs to be done for 1.1","05/Jun/08 10:54 PM;david_syer;I'm not sure what we can do in 1.1.  The FieldSet is created by the application, not the framework, so all the conversion and formatting has already been done before we get any data to write out in the aggregator.  So the FieldSetCreator should handle zero padding of numbers (the aggregator can't tell the difference between field types).  It's sort of uncomfortable because it seems like the file output concerns should be more separate from the object mapping concerns, but they aren't.  This is basically because of our design of the LineAggregator using FieldSet and FieldSetCreator.  I can't see a good way to fix this without redesigning the aggregation and conversion, so I would prefer to leave it for now.

The workaround shouldn't be too painful in 1.x - you (the application programmer) just have to know the width of the numeric columns so you can add the zero padding in the FieldSetCreator.",06/Aug/08 11:45 PM;david_syer;The original requested feature is now available through the FormatterLineAggregator (a replacement for FixedLengthLineAggregator).,07/Aug/08 12:56 AM;david_syer;Assigned for review,,,,,,,,,,,,,,
Support Callable<ExitStatus>,BATCH-274,19070,22651,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,gk5885,gk5885,08/Jan/08 6:44 AM,23/Sep/08 11:10 AM,10/May/19 2:37 AM,16/Jul/08 11:18 PM,1.0.0.m4,,,,,,2.0.0.M1,,,Core,,,,,0,,"Tasklet is essentially the same interface as Callable<ExitStatus>

ExitStatus execute()
vs.
ExitStatus call()

It would seem to make more sense to reuse a common java interface rather than create a new one with unfamiliar vocabulary.  It may even be reasonable in Java 1.4 as long as executing callables is wrapped in
try
{
ExitStatus = (ExitStatus)callable.call();
}
catch(ClassCastException e)
{
  throw new CallablesMustReturnExitStatusExceptionWithSomeHelpfulMessageTelingYouToFixItException();
}

This also has the added benefit of promoting thread-safe execution because the Callable interface specifically states that it may be run in a separate thread.",,;16/Jul/08 11:26 PM;david_syer;1800,,,,,,,,,,,,,,28800,0,1800,6%,28800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,341193600,,,,,2008-01-08 11:37:53.0,12150,false,lucas.l.ward(lucas.l.ward),,,,0|i05687:,30215,27201,,,,,"08/Jan/08 11:37 AM;douglas.c.kaminsky;On face, this won't work - Callable doesn't exist before 1.5

Assuming Callable was available, this is a dangerous precedent: ItemProvider, for instance, could also be written as Callable<Object> according to the same logic. While I do believe the ability to safely define threaded job behavior is an important part of the direction of Spring Batch, I personally don't see the value in this.","08/Jan/08 2:32 PM;lucas.l.ward;I tend to agree with Doug, although for different reasons.  Many of the changes in Milestone 4 will push the Tasklet into more of a supporting role, where it exists solely as a wrapper for legacy jobs that call stored procs or scripts.  ChunkProvider/ItemReader and ItemProcessor are now taking more of a central role, and as Doug said, they really shouldn't be 'Callable' since they represent distinct Domain concepts.

However, there may be some merit to reusing the callable interface post 1.0, so perhaps it should be moved to fix version 1.1?","09/Jan/08 1:23 AM;gk5885;@Doug
It exists, just as a backport or part of doug lea's work, not part of the jdk.  And the issue wasn't to replace Tasklet (although I probably would), the issue is to support Callable.

As for ItemProvider being Callable<Object> (or probably Callable<MyDomainObject>, I would argue against that because it breaks the symmetry of the api.  The issue wasn't intended to be ""use callable everywhere you have an interface with a single method taking no parameters,"" but rather use callable over tasklet because they both represent units of execution to be invoked by a supporting infrastructure.

@Lucas
Yeah, I do like the fact that we're going to be seeing tasklet a lot less, but really the only reason that i brought this up is that a lot of people know what a callable is and what it's used for, but nobody knows what a tasklet is.  It's entirely a judgment call, but i thought that I'd suggest it.","11/Jan/08 4:25 AM;david_syer;I think it would be reasonable to exptec that someone might write a wrapper for a Callable that turned it into a Tasklet.  Since we are not supporting Java 5 yet, but we know we will be in the future, I would prefer to leave it until then, to avoid having to provide a separate build/module with Java 5 features.  Our other usage of backport is deeply internal, so no client should notice it, but this would be quite a public change if we made it.",16/Jul/08 11:18 PM;david_syer;Added CallableTaskletAdapter.,,,,,,,,,,,,,,,,,,
Re-organise I/O (io) packages,BATCH-267,18991,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,31/Dec/07 1:02 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,01/Jan/08 7:29 PM,1.0-m3,,,,,,1.0.0.m4,,,Infrastructure,,,,,0,,Re-organise I/O (io) packages - they do not have very consistent or sensible naming conventions and locations of implementations reletive to interfaces etc.,,;01/Jan/08 7:29 PM;david_syer;7200,,,,,,,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12157,false,david_syer(david_syer),,,,0|i057gv:,30416,27422,,,,,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,,
Javadocs missing from website,BATCH-265,18979,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,30/Dec/07 7:03 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,30/Dec/07 7:53 PM,1.0-m3,,,,,,1.0.0.m4,,,Documentation,,,,,0,,Javadocs missing from website - I can't see them anyway...,,;30/Dec/07 7:58 PM;david_syer;3600,,,,,,,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12159,false,david_syer(david_syer),,,,0|i01sif:,10496,10475,,,,,30/Dec/07 7:53 PM;david_syer;Checked pom and it looks OK.  Not sure what happened on the website - so edited by hand (http://static.springframework.org/spring-batch/apidocs/index.html),07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Dependencies among jobs ,BATCH-264,18965,22668,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,thomas.risberg,rajiv,rajiv,23/Dec/07 10:11 PM,16/Oct/08 8:32 PM,10/May/19 2:37 AM,16/Oct/08 8:31 PM,1.0-m3,,,,,,2.0.0.M3,,,Core,,,,,0,,We need to set the predecessors and successors for a given job depending on exit status of the jobs. I think it is a very common feature required by any batch framework and should be added to the framework. ,,;15/Oct/08 1:24 AM;david_syer;28800,;16/Oct/08 8:32 PM;david_syer;14400,,,,,,,,,,,,,57600,0,43200,75%,57600,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,333244800,,,,,2007-12-30 05:51:46.0,12160,false,david_syer(david_syer),,,,0|i055rz:,30142,27113,,,,,30/Dec/07 5:51 AM;david_syer;The best way to do that is to set up the chain as a series of steps and then check for the business condition that would terminate the job using a RepeatInterceptor at the step operations level.  Can you suggest some scenarios where this will not work?,"30/Dec/07 11:15 PM;rajiv;Dave, 

may be I am missing something here. Do you mean that I write a container job that will have all the jobs as steps? If yes then that would not satisfy the requirements.   

I will try to give some scenarios to make the requirement clear.

Scenario1

JobB depends on successful completion of JobA
JobC depends on successful completion of JobA.
Both JobB and JobC are scheduled to run at the same time. 

Scenario2

JobF depends on successful completion of JobD and JobE
JobG depends on successul completion of JobD only.

Scenario3

Successful completion of JobH triggers JobI
Failure of JobH triggers JobJ



I am  thinking of some solution as follows:


Scenario1

Both JobB and JobC has following property.

<property name=""predecessors"">
     <bean class=""batch.core.JobPredecessor"">
        <property name=""jobName"" value=""JobA"" />
        <property name=""exitStatus"" value=""COMPLETED"" />
    </bean>
</property>
       

Scenario2
   
JobF has following predecessors

<property name=""predecessors"">
     <bean class=""batch.core.JobPredecessor"">
        <property name=""jobName"" value=""JobD"" />
        <property name=""exitStatus"" value=""COMPLETED"" />
    </bean>
     <bean class=""batch.core.JobPredecessor"">
        <property name=""jobName"" value=""JobE"" />
        <property name=""exitStatus"" value=""COMPLETED"" />
    </bean>
</property>

while JobD has only JobD as predecessor.

Scenario3

JobH has following as successors

<property name=""successors"">
     <bean class=""batch.core.JobSuccessor"">
        <property name=""jobName"" value=""JobI"" />
        <property name=""exitStatus"" value=""COMPLETED"" />
    </bean>
     <bean class=""batch.core.JobSuccessor"">
        <property name=""jobName"" value=""JobJ"" />
        <property name=""exitStatus"" value=""FAILED"" />
    </bean>
</property>


Initially we were planning to implement this in before and after methods of JobListeners but we did not find a way to gracefully return (without creating an entry for job) from the before method so we decided to put it in quartz job listener.

Thanks,
Rajiv","30/Dec/07 11:43 PM;david_syer;I think you mean JobExecutionListener?  I think it might be appropriate to put a test in the JobExecutor to check if a listener has vetoed the execution of a job, by setting its status / end time etc.  Would that help?  

If by ""without creating an entry for job"" you mean ""without creating a JobExecution instance and persisting it"" I don't think we can support that, for two reasons.  1) there has to be an audit of every attempted job execution.  2) to prevent concurrent execution of the same job the creation of the JobExecution and saving it in the database has to be atomic (transactional and blocking).

I was thinking at a lower level of having a listener to the step (via RepeatInterceptor) which can definitely already veto the further execution of a step.","12/Jul/08 10:12 PM;david_syer;I am more and more convinced that the right level to specify dependencies is between steps (not jobs).  The main reason for this conclusion is that with steps there is already an ""aggregate"" concept which links the executions together (the JobExecution).  If we create dependencies between jobs in the framework then we'll have to track the execution of the linked set of jobs through another aggregate, which seems pointless, since JobExecution already does a perfectly good job.  

If we operated at the job level (with a new aggregate called JobExecutionPlan, perhaps), then each job would have to be seeded with its own parameters.  Maybe this could be an argument in favour of a new aggregate.  But parameters for dependent executions are normally context dependent (it depends on how you got there), e.g. the input file for step 2 is created by step 1, and so I think the fact that each job has its own parameters is not a huge benefit, where ExecutionContext can already be used to supply the necessary parameters.

If there are no new insights in 2.0.0.M1 I think we should close this issue, and concentrate on the step dependencies (which are already provided by StepExecutionMessageHandler).","15/Oct/08 1:25 AM;david_syer;Added ConditionalJob which addresses this requirement better than MessageOrientedStep (formerly StepExecutionMessageHandler).  An XML DSL will be the next piece of work, and maybe some support for parallel branches.",16/Oct/08 8:31 PM;david_syer;DSL added.  Assigned to Thomas for review.,,,,,,,,,,,,,,,,,
FlatFileParsingException should include line number in its toString(),BATCH-259,18922,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,jkuipers,jkuipers,17/Dec/07 8:02 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,17/Dec/07 8:23 PM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,0,,"When an error occurs during the parsing of a flat file in 1.0M3, a FlatFileParsingException is thrown that has useful information like the line number. However, at the moment each piece of code that deals with exceptions is in itself responsible for catching FlatFileParsingExceptions and retrieving the line number from that. IMO, this is not something that should be done in generic exception handling code. To make generic exception handling easier and more informative, I think the line number should at least be part of the default toString() of the exception and maybe even be part of its message (not sure about that, though). 

In the previous (M2) version of Batch, an error in the input file would cause this output:
Exception in thread ""main"" org.springframework.batch.io.exception.ValidationException: Validation error at line 21: Field names must be same length as values: names=[ARTIST, ALBUM, NUMBER, TITLE], values=[Admiral Freebee, Admiral Freebee, 3, Bad year for rock 'n roll, extra field]
	at org.springframework.batch.io.file.support.SimpleFlatFileInputSource.readFieldSet(SimpleFlatFileInputSource.java:164)

The M3 release gives you this:
Exception in thread ""main"" org.springframework.batch.io.exception.FlatFileParsingException: Parsing error
	at org.springframework.batch.io.file.support.SimpleFlatFileInputSource.read(SimpleFlatFileInputSource.java:198)
[snip]
Caused by: java.lang.IllegalArgumentException: Field names must be same length as values: names=[ARTIST, ALBUM, NUMBER, TITLE], values=[Admiral Freebee, Admiral Freebee, 3, Bad year for rock 'n roll, extra field]
	at org.springframework.batch.io.file.FieldSet.<init>(FieldSet.java:53)
	at org.springframework.batch.io.file.support.transform.AbstractLineTokenizer.tokenize(AbstractLineTokenizer.java:78)
	at org.springframework.batch.io.file.support.SimpleFlatFileInputSource.read(SimpleFlatFileInputSource.java:194)
	... 22 more

As can be seen, we've lost the line number now since the message for the FlatFileParsingException holds only ""Parsing error"", which isn't very informative. This is trivial to add, but will save operators a lot of hair-pulling finding out which line in the input broke their job.",,;17/Dec/07 8:22 PM;david_syer;3600,,,,,,,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-12-17 20:22:35.0,12165,false,david_syer(david_syer),,,,0|i057gf:,30414,27420,,,,,"17/Dec/07 8:22 PM;david_syer;Added line number, input and resource path to message.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Error in business-schema-postgresql,BATCH-256,18880,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,peter.zozom,peter.zozom,12/Dec/07 8:31 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,13/Dec/07 5:38 AM,1.0.0.m4,,,,,,1.0.0.m4,,,Samples,,,,,0,,Schema 'business-schema-postgresql.sql' cointains error: 'BLOB' is not valid keyword in PSQL. 'BYTEA' can be used instead.,,;13/Dec/07 5:38 AM;david_syer;900,,,,,,,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-12-13 05:38:17.0,12168,false,david_syer(david_syer),,,,0|i01oav:,9814,9841,,,,,13/Dec/07 5:38 AM;david_syer;Thanks.  Fixed it.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
broken hsql business schema,BATCH-251,18842,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,robert.kasanicky,robert.kasanicky,09/Dec/07 7:02 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,09/Dec/07 11:06 PM,1.0-m3,,,,,,1.0.0.m4,,,Samples,,,,,0,,"""position"" is a keyword in hsql so it can't be used as column name (causes all sample jobs to fail on schema creation)",,;09/Dec/07 11:06 PM;david_syer;1800,,,,,,,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-12-09 23:06:47.0,12173,false,david_syer(david_syer),,,,0|i01obb:,9816,9843,,,,,09/Dec/07 11:06 PM;david_syer;Easy to fix.  Not sure why it changed from POS to POSITION (typo).,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,,
Wrong DB Schema for DB2 for z/OS,BATCH-250,18834,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,eickmeyer,eickmeyer,07/Dec/07 11:20 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,11/Dec/07 9:51 PM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,0,,The batch tables defnied in the schema definition for DB2 do not work out of the box with the framework DAOs when they are created on DB2 for z/OS. There's a problem with the SCHEDULE_DATE column.,,;11/Dec/07 9:52 PM;david_syer;1800,,,,,,,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,07/Dec/07 11:22 PM;eickmeyer;schema-db2.patch;https://jira.spring.io/secure/attachment/13188/schema-db2.patch,,,,,,,,,,,339379200,,,,,2007-12-10 07:07:13.0,12174,false,david_syer(david_syer),,,,0|i057hj:,30419,27425,,,,,07/Dec/07 11:22 PM;eickmeyer;The patch changes the type of the SCHEDULE_DATE column from DATE to TIMESTAMP. With this modification it works again.,"10/Dec/07 7:07 AM;lucas.l.ward;Jens,

I would be interested in having a bit more information about your error.  Does DB2 on z/OS not support any DATE columns?  What type of error were you getting?  Can you provide a stack trace?

The reason that SCHEDULE_DATE was originally a DATE type is because it doesn't really need much more information than what day it is.  However, if you look at BATCH-84, SCHEDULE_DATE is going to be removed, and a more generic JOB_IDENTIFIER_PROPS table created that will house identifying information for a job instance.  Because it is more generic, it's date representation will likely be a TIMESTAMP.","11/Dec/07 5:52 PM;eickmeyer;Lucas,

DB2 for z/OS has support for DATE columns. Maybe it's the JDBC driver that has some problems. However, when the original table definition is used we get the following exception:

PreparedStatementCallback; SQL [SELECT ID, STATUS from BATCH_JOB where JOB_NAME = ? and JOB_KEY = ? and SCHEDULE_DATE = ?]; DB2 SQL error: SQLCODE: -181, SQLSTATE: 22007, SQLERRMC: null; nested exception is com.ibm.db2.jcc.a.SqlException: DB2 SQL error: SQLCODE: -181, SQLSTATE: 22007, SQLERRMC: null
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [SELECT ID, STATUS from BATCH_JOB where JOB_NAME = ? and JOB_KEY = ? and SCHEDULE_DATE = ?]; DB2 SQL error: SQLCODE: -181, SQLSTATE: 22007, SQLERRMC: null; nested exception is com.ibm.db2.jcc.a.SqlException: DB2 SQL error: SQLCODE: -181, SQLSTATE: 22007, SQLERRMC: null
Caused by: 
com.ibm.db2.jcc.a.SqlException: DB2 SQL error: SQLCODE: -181, SQLSTATE: 22007, SQLERRMC: null
	at com.ibm.db2.jcc.a.cq.e(cq.java:1482)
	at com.ibm.db2.jcc.a.cq.a(cq.java:1113)
	at com.ibm.db2.jcc.c.bc.n(bc.java:578)
	at com.ibm.db2.jcc.c.bc.i(bc.java:255)
	at com.ibm.db2.jcc.c.bc.c(bc.java:56)
	at com.ibm.db2.jcc.c.q.c(q.java:53)
	at com.ibm.db2.jcc.c.bo.h(bo.java:162)
	at com.ibm.db2.jcc.a.cq.m(cq.java:1109)
	at com.ibm.db2.jcc.a.cr.d(cr.java:1961)
	at com.ibm.db2.jcc.a.cr.Q(cr.java:408)
	at com.ibm.db2.jcc.a.cr.executeQuery(cr.java:391)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:92)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:595)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:588)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:625)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:657)
	at org.springframework.batch.execution.repository.dao.SqlJobDao.findJobs(SqlJobDao.java:158)
	at org.springframework.batch.execution.repository.SimpleJobRepository.findOrCreateJob(SimpleJobRepository.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:304)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:106)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy2.findOrCreateJob(Unknown Source)
	at org.springframework.batch.execution.launch.SimpleJobExecutorFacade.createExecutionFrom(SimpleJobExecutorFacade.java:167)
	at org.springframework.batch.execution.launch.SimpleJobLauncher.run(SimpleJobLauncher.java:274)
	at de.kkh.fr2.batch.uc4.launcher.JobLauncher.start(JobLauncher.java:183)
	at de.kkh.fr2.batch.sample.launcher.AbstractBatchTest.runJob(AbstractBatchTest.java:35)
	at de.kkh.fr2.batch.sample.launcher.AbstractBatchTest.assertReturnCode(AbstractBatchTest.java:69)
	at de.kkh.fr2.batch.sample.launcher.AbstractBatchTest.assertSuccess(AbstractBatchTest.java:85)
	at de.kkh.fr2.batch.sample.launcher.SimpleJobTest.testStartJob(SimpleJobTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

The DB2 manual tells us that the error code -181 means ""The String representation of a Datetime value is not a valid Datetime value"".

The trace of the JDBC driver looks like this:

[ibm][db2][jcc][Time:1197445299506][Thread:main][Connection@1712651] prepareStatement (SELECT ID, STATUS from BATCH_JOB where JOB_NAME = ? and JOB_KEY = ? and SCHEDULE_DATE = ?) called
[ibm][db2][jcc][Time:1197445299506][Thread:main][Connection@1712651] prepareStatement () returned PreparedStatement@ab835a
[ibm][db2][jcc][Time:1197445299506][Thread:main][PreparedStatement@ab835a] setString (1, simpleJob) called
[ibm][db2][jcc][Time:1197445299506][Thread:main][PreparedStatement@ab835a] setString (2, 850585276) called
[ibm][db2][jcc][Time:1197445299506][Thread:main][PreparedStatement@ab835a] setTimestamp (3, 1970-01-01 00:00:00.0) called
[ibm][db2][jcc][Time:1197445299506][Thread:main][PreparedStatement@ab835a] executeQuery () called

Here we see that the JDBC driver tries to set the value of the SCHEDULE_DATE column with the setTimestamp() method is used instead of setDate(). That's why we tried to switch to TIMESTAMP for SCHEDULE_DATE.","11/Dec/07 9:51 PM;david_syer;Rather than changing the schema it is better to change the Dao.  I added explicit SQL type information for the queries that update JobInstance (it was already done for JobExecution), so now JdbcTemplate knows that it is a DATE, not a TIMESTAMP.  BATCH-84 will supersede this change in m4 anyway.  But we should be able to resolve this issue now.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
"relative path to parent pom should be ""../parent""",BATCH-246,18778,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,nebhale,robert.kasanicky,robert.kasanicky,03/Dec/07 7:05 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,03/Dec/07 10:07 PM,1.0-m3,,,,,,1.0-m3,,,,,,,,0,,"The relative path to parent pom has not been updated after the parent pom was moved to separate module - it should now be ""../parent"" instead of "".."". 

This does not cause trouble for command-line building, but makes difference within eclipse (with correct relative path changes in one module are immediately visible in other modules, without the need to install the updated modules to repository first).",,;03/Dec/07 10:07 PM;nebhale;600,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,03/Dec/07 7:19 PM;robert.kasanicky;parent-pom.patch;https://jira.spring.io/secure/attachment/13178/parent-pom.patch,,,,,,,,,,,339379200,,,,,2007-12-03 22:07:39.0,12178,false,david_syer(david_syer),,,,0|i01c6n:,7851,8287,,,,,03/Dec/07 7:19 PM;robert.kasanicky;Attached patch for convenience.,03/Dec/07 10:07 PM;nebhale;Odd that this didn't affect my Eclipse usage.  But it is fixed now,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
Deprecate and/or remove support for Hibernate Daos for batch meta data,BATCH-238,18734,,Task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,29/Nov/07 2:58 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,10/Dec/07 8:34 AM,1.0-m3,,,,,,1.0.0.m4,,,Core,,,,,0,,Deprecate and/or reomve support for Hibernate Daos for batch meta data.  We only need to support one Dao implementation for RDBMS - we think Jdbc is better for us.  Need to communicate this carefully in release notes for m4.,,;10/Dec/07 8:47 AM;david_syer;28800,,,,,,,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-12-02 21:20:38.0,12186,false,david_syer(david_syer),,,,0|i057j3:,30426,27432,,,,,"02/Dec/07 9:20 PM;smaller;We find the abstraction that the hibernate dao's provide a very useful feature of Spring batch. In fact without them we would not be able to use spring batch in our current environment as there is a naming convention that we are obliged to respect, the DBA's will not allow us to use the standard table names as defined in spring-batch. In fact in DB2 (zSeries v7) we would not even be able to use these names anyway as there is a limit of 18 characters on the table names.","04/Dec/07 4:22 AM;david_syer;I think we still only want to support one implementation, and most people would prefer not to have the mandatory Hibernate dependency.  I guess overriding the table names might be something we need to support in the Jdbc case.  Would that do it for your case?

Anything else would probably mean you would have to write your own Dao implementations - they are interfaces, so you are free to provide your own implementation.","10/Dec/07 8:34 AM;david_syer;Removed Hibernate* for the Batch meta data.  Stijn - does the tablePrefix setting in the Sql*Daos not give you enough flexibility to conform to your policies?  If not, I think you might need to maintain your own Daos.  Raise another issue if this seems particularly onerous, and see if anyone else votes for it.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
Document changes between m2 and m3 - deploy samples from m2 against m3 jars and list steps to change,BATCH-236,18730,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,lucas.l.ward,david_syer,david_syer,29/Nov/07 12:17 AM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,03/Dec/07 2:42 AM,1.0-m3,,,,,,1.0-m3,,,Documentation,,,,,1,,Document changes between m2 and m3 - deploy samples from m2 against m3 jars and list steps to change.,,"Robert added a patch for this work, that took him approximately 2 days to create.;03/Dec/07 2:41 AM;lucas.l.ward;57600",,,,,,,,,,,,,,72000,14400,57600,80%,72000,14400,57600,,,,,,,,,,,,,,,02/Dec/07 11:05 PM;robert.kasanicky;M2-to-M3-transition-final.txt;https://jira.spring.io/secure/attachment/13175/M2-to-M3-transition-final.txt,30/Nov/07 2:24 AM;robert.kasanicky;M2-to-M3-transition.txt;https://jira.spring.io/secure/attachment/13170/M2-to-M3-transition.txt,,,,,,,,,,339379200,,,,,2007-11-30 02:24:14.0,12188,false,david_syer(david_syer),,,,0|i01sin:,10497,10476,,,,,"30/Nov/07 2:24 AM;robert.kasanicky;Attached text file describes the issues I had to resolve after switching M2 samples to M3 framework. 

The list should be fairly complete although I haven't fixed all the problems - the remaining seem to be instances of those already documented. I'll  go through the list once more on Monday and probably make some minor edits, but I'm attaching it now so that it is available for review.","02/Dec/07 11:05 PM;robert.kasanicky;Attached reviewed version, with few items added (complete enough to make M2 tradeJob work with M3 framework).","03/Dec/07 2:42 AM;lucas.l.ward;The attached log of changes that need to be made should work for M2 to M3, and should be distributed as part of the release.",04/Dec/07 4:37 AM;david_syer;Added Robert's migration guide to src/site/apt/migration.  And a link in site.xml.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,
Merge InputSource with ItemProvider,BATCH-212,18613,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,20/Nov/07 6:53 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,18/Dec/07 4:48 AM,1.0-m3,,,,,,1.0.0.m4,,,Infrastructure,,,,,0,,"Merge InputSource with ItemProvider - there is no real need for two interfaces, and ItemProvider is probably fine to keep.  The only complication is recovery - it needs to be delegated to a new marker interface (maybe replacing Recoverable).",,;18/Dec/07 4:48 AM;david_syer;10800,,,,,,,,,,,,,,14400,0,10800,75%,14400,0,10800,,,BATCH-222,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,,12211,false,david_syer(david_syer),,,,0|i057n3:,30444,27450,,,,,28/Nov/07 11:48 PM;david_syer;Remove recover() from ItemProvider as it will be replaced later in BATCH-230.,18/Dec/07 4:48 AM;david_syer;Merged and created ItemReader interface as replacement.,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,,
Concurrent modification of StepExecution when running an asynchrounous step operation,BATCH-170,18218,,Bug,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,markymiddleton,markymiddleton,15/Oct/07 9:14 AM,23/Sep/08 11:07 AM,10/May/19 2:37 AM,19/Dec/07 12:01 AM,1.0-m3,,,,,,,,,,,,,,0,,"Use of a hibernateJobDao eventually results in a StaleObjectStateException when running an asynchrounous step operation:

  <bean id=""myStepExecutor"" class=""org.springframework.batch.execution.step.simple.SimpleStepExecutor"" scope=""prototype"">
    <property name=""transactionManager"" ref=""txManager"" />
    <property name=""repository"" ref=""simpleJobRepository"" />  
    <property name=""stepOperations"">
      <bean class=""org.springframework.batch.repeat.support.TaskExecutorRepeatTemplate"">
        <property name=""taskExecutor"" ref=""threadPoolTaskExecutor""/>        
      </bean>
    </property>    
  </bean>

See:
http://forum.springframework.org/showthread.php?t=44884",,;19/Dec/07 12:02 AM;david_syer;10800,,,,,,,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,359424000,,,,,2007-12-18 04:53:23.0,12253,false,lucas.l.ward(lucas.l.ward),,,,0|i034p3:,18303,74,,,,,"18/Dec/07 4:53 AM;david_syer;The Hibernate*Daos have been removed, but the problem is still there.","19/Dec/07 12:01 AM;david_syer;Updated SqlStepDao to check optimistic locking, and synchronized access to the step execution so that multiple threads can share a single instance.  If anyone wants to test it more extensively, that would be great (I used parallelJob.xml from the samples).",,,,,,,,,,,,,,,,,,,,,
Recoverable is a nasty abstraction - encourages stateful Tasklets.,BATCH-87,17548,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,08/Aug/07 6:10 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,16/Dec/07 8:26 PM,1.0-m2,,,,,,1.0.0.m4,,,Core,,,,,0,,Recoverable is a nasty abstraction - encourages stateful Tasklets.  It would be better if the behaviour was included in the Tasklets not the StepExecutor.,,;16/Dec/07 8:28 PM;david_syer;10800,,,,,,,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-12-11 02:51:29.0,12332,false,david_syer(david_syer),,,,0|i0580n:,30505,27511,,,,,11/Dec/07 2:51 AM;douglas.c.kaminsky;I'd be interested in hearing more of your opinions about why stateful tasklets are to be discouraged.,"11/Dec/07 6:26 AM;david_syer;Because they can easily be used in a concurrent setting.  I am sure there are some good reasons why some Tasklets are stateful, but unless they are coded very carefully, they will not work if chunks are processed in parallel.  Recoverable is a good example of where the framework can provide an obvious strategy for state management instead of using instance variables internally.",16/Dec/07 8:26 PM;david_syer;Removed Recoverable and re-assigned its responsibilities within SimpleStepExecutor using ItemRecoverer (new interface in infrastructure).,07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,,,,,,,,,,,
Aggregation of execution context when partitioning,BATCH-53,17395,22658,Sub-task,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,wxlund,wxlund,20/Jul/07 9:42 AM,19/Jan/09 10:48 PM,10/May/19 2:37 AM,19/Jan/09 5:00 AM,,,,,,,2.0.0.M4,,,Core,,,,,0,,"Batch Statistics Aggregation - we had a discussion some months back about modeling our schema so that the parent tables stored the summary, aggregated data for the detail at the next level down.  We are getting questioned about how we are going to do this in our partitioning scenarios by clients.  Chong and Lucas discussed yesterday and when Lucas and I reviewed we realized that we were looking at the issue a little differently.  I remember a considerable noise at one of our clients because we didn't cover all of the scenarios correctly on aggregating statistics.  For example, we had an issue getting statistics aggregated correctly on jobs that had been restarted multiple times to provide the true number of records processed.  Here's some thoughts on what I think we're aggregating. 

a.	Skips & Records processed for the job ::= statistics for all records processed by the job regardless of how many skips.  I remember in our early performance testing Mike Tsay kept a table of records down to the tracking of how many we were processing per time unit.  We had five steps running on the CDX batch jobs, each having their own set of record types they processed (e.g. participant, addresses, employers, court cases, etc).   POINT OF AGGREGATION 
b.	Skips & Records processed for the Partitioned Step ::= All records and skips for aggregation of all partitioned steps.  POINT OF AGGREGATON
c.	Skips & Records processed for a Step ::= all records within a single step.  Different than B because he's only concerned about his own records. 

A & B need to produce the same results whether a job has been restarted or not, in other words, the statistics and summaries should be the same whether restarts were involved or not.  Would we meet project needs if we didn't expose status and statistics at this level of detail?",Execution and Operations,;13/Oct/08 10:01 PM;david_syer;28800,,,,,,,,,,,,,,57600,3600,28800,50%,57600,3600,28800,,,,,,,,,,,,,,,,,,,,,,,,,,333504000,,,,,2007-07-23 05:30:02.0,12365,false,david_syer(david_syer),,,,0|i03xq7:,23006,19471,,,,,"23/Jul/07 5:30 AM;ttrang;Shouldn't we keep this simple and just have the statistics for the current run, restart or not?  If we need to know the overall value across multiple runs, then a report can be generated to aggregate the information.  This will keep the architecture simple and not be statistics smart around statistics across multiple runs.",24/Jul/07 10:50 PM;david_syer;It actually doesn't require a partitioning container to encounter this problem.  The SimpleBatchContainer can be used to process chunks in parallel using a TaskExecutorRepeatTemplate as its stepOperations property.  The problem is less severe because the aggregation can in principle be done using standard concurrent techniques in process (e.g. synchronize access to the counters).  But it might not actually be thread-safe in the current implementation.,"25/Jul/07 2:54 PM;wxlund;Tommy's response is the same position that Lucas took in our discussion.  I wanted Tsay to weigh in because I thought this was an issue for the harvested batch.  Maybe if the queries are preset for aggregation of the results, which is easy enough to do, then this should suffice.  I agree, it's simpler.  Good point by Dave on the problem being more general.  As soon as processing is split we need a way to aggregate the results and the options are the same; 1) increment aggregate counters while processing or 2) aggregate the results at the end of processing.  #1 provides better real time information at the cost of potential concurrency impacts and #2 gives post processing information at the end of the run.  If that meets operational needs I'm fine with the latter.  ","03/Mar/08 5:38 PM;david_syer;Aggregation has to be handled by a single-threaded, or synchronized process.  I think we understand the problem well enough to push it off until a later version now.","12/May/08 9:06 AM;lucas.l.ward;I don't see how this could be addressed for 1.1, this seems like a 2.0 issue?",13/Oct/08 10:02 PM;david_syer;StepExecution aggregation is now a separate strategy in the prototype.  We probably need to address the ExecutionContext as well.,,,,,,,,,,,,,,,,,
Support for multiple I/O files in a single jobRun for a particular scheduleDate.,BATCH-34,17296,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,lucas.l.ward,david_syer,david_syer,09/Jul/07 3:26 AM,12/Nov/08 8:30 PM,10/May/19 2:37 AM,12/Nov/08 8:30 PM,1.0-m2,,,,,,2.0.0.M3,,,Infrastructure,,,,,0,,"Scenario:  Read 100 rows from the database and write to file, Output file can have at most 50 lines(rows). So does spring batch support creating 2 files each containing 50 lines (filename.txt.001 & filename.txt.002).

This is supported, however, there isn't any kind of 'max record count' that would signal to the FileOutputSource that a new file should be created. The outputsource would simply need to be closed and reopened. However, a wrapper could easily be written that would do this for you.
Edit/Delete Message",,;07/Nov/08 1:21 AM;robert.kasanicky;28800,;12/Nov/08 8:30 PM;robert.kasanicky;14400,,,,,,,,,,,,,14400,0,43200,300%,14400,0,43200,,,,,,,,,,,,,,,25/Oct/07 12:39 AM;peter.zozom;flatfile_os_refactored_071024.patch;https://jira.spring.io/secure/attachment/13038/flatfile_os_refactored_071024.patch,,,,,,,,,,,330912000,,,,,2007-10-25 00:39:01.0,12383,true,robert.kasanicky(robert.kasanicky),,,,0|i03xrr:,23013,19478,,,,,"25/Oct/07 12:39 AM;peter.zozom;I have created new flat file output sources (see attached patch).
- SingleFlatFileOutputSource has same functionality as FlatFileOutputSource, but it is refactored to be extendable
- SplittableFlatFileOutputSource extends SingleFlatFileOutputSource and allows to specify 'max record count'. When record limit is reached new file is created. Output Source attaches part number to filename as extension so file names are filename.txt.001, filename.txt.002. Output source also supports rollback to last commit point located in different file than currently opened file (e.g. we are processing filename.txt.005 and last commit point was somwere in filename.txt.002)","25/Oct/07 2:51 AM;lucas.l.ward;Peter,  I'll take a look at the solution as soon as possible.  At first glance it seems to me that writing a simple wrapper for the input source would be the simplest approach.  The wrapper would delegate read calls to it's inputSource and call close when the limit is reached, and open again on a new resource.  However, extending may be an easier to configure solution.  In my mind this is somewhat related to BATCH-16.  The approach taken in the xml input sources was to use a static utils class to help with restarting, etc.  However, it seems to me that common file handling concerns for reading in from both xml and flat files could be handled using a common abstract class.  This would allow a wrapper, such as one that could be created to fix this issue, to work for both xml, flat file, and anything else that extended the common abstract file input source interface.","13/Nov/07 1:36 AM;lucas.l.ward;I understand your point about extending the output source so that you can span rollbacks and commits across files.  However, I'm not sure if we should be doing that.  Personally, I would prefer that any limit given simply means that we will close the file at the first commit point after the limit is reached.  However, I would be interested to hear if anyone has a use case that requires an exact file size or record count.","27/Jun/08 1:48 AM;lucas.l.ward;Moving to 2.0, as there seems to be no requests for the feature.",16/Oct/08 12:56 AM;robert.kasanicky;Is this still a feature we care about implementing? It's being pushed forwards for almost a year now...,16/Oct/08 2:48 AM;david_syer;We scheduled it for 2.0.0.M3.  If it isn't really difficult I think we should do it.  But I would concentrate on more important things first (this could always go into 2.1).,"07/Nov/08 1:18 AM;robert.kasanicky;There is now basic implementation commited.

TODO:
-strategise naming of created output resources
-test with StaxEventItemWriter","12/Nov/08 8:30 PM;robert.kasanicky;There is now MultiResourceItemWriter that works with both FlatFileItemWriter and StaxEventItemWriter and has customizable suffix creation. One can set an item count limit per resource and a new resource is created after this limit is exceeded, but only on chunk boundary.",,,,,,,,,,,,,,,
Remove transaction synchronization and state management from input/output sources (formerly buffering),BATCH-7,16968,,Improvement,Closed,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,lucas.l.ward,lucas.l.ward,29/May/07 2:33 PM,07/Aug/08 2:06 AM,10/May/19 2:37 AM,04/Feb/08 1:12 AM,1.0-m1,,,,,,1.0.0.m4,,,Infrastructure,,,,,0,,"Currently, all input templates (simpleFileInput is an exception) store their state in a threadlocal.  However, this impacts readability and is overkill for most cases.  It may be a better approach to either remove the thread local with the expectation that either the input or the entire module itself will be wrapped in a threadlocal scope(since many cases may result in a non-thread safe module being created and then needing partitioning for performance reasons)  Or the InputState could be created as a dependency to the inputs (something like SqlInputState) which would default to a simple, non thread safe implementation, but could be replaced with an implementation that uses either a wrapper or composite pattern to wrap the state in a thread local.",,;04/Feb/08 1:13 AM;david_syer;21600,,,,,,,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,339379200,,,,,2007-06-12 05:27:00.0,12407,false,david_syer(david_syer),,,,0|i02tpj:,16522,15544,,,,,"12/Jun/07 5:27 AM;david_syer;Changed title to reflect current usage / terminology.

Discussed with Rob: we would prefer the input / output sources to be created as needed, rather than sitting there as Spring beans.  This forces a factory/context pattern up the interface layers into the ItemProvider or its implementations.","23/Jun/07 10:18 PM;david_syer;Custom scopes might be the best approach.  There is now a StepScope available, but the ThreadLocals still need to be replaced.  Keeping the state encapsulated in an object that expresses the class invariants still makes sense though.","05/Jul/07 12:46 AM;david_syer;Replaced ThreadLocal everywhere with equivalent RepeatContext mechanism.

Actually it might be better to do the TX synchronization at the ItemProvider level anyway.  There is no easy way to synchronize access to a file that is open for XML reading, so it's probably better to buffer the items themselves rather than try to mark an input stream.  If we did that it would handle Skippable but not Restartable in the ItemProvider.  Would also solve BATCH-26 (sort of) - at least it wouldn't be the same problem any more.","06/Jul/07 2:46 AM;lucas.l.ward;I agree that buffering may be another approach to transaction synchronization that may be more appropriate in certain scenarios. (especially XML) However, I'm not sure I understand the advantage of moving it to an ItemProvider.  The InputSource already has state about the input, so it still seems natural that it would buffer the input if needed.  Moving it to the ItemProvider would then require that the provider have state about what has been read so far, in addition to what the input source is already holding.

I think this also highlights another issue we've discussed before, at times, the line between ItemProvider and InputSource isn't very clear.  It gets especially blurry when reading from XML or any other input source that would retrun a mapped object.  Ideally, it would be the best if ItemProviders had nothing but developer code handling the business scenarios of loading the data, with no architectural concerns.  However, given the interfaces such as Restartable that must be called, it's impossible to do.","06/Jul/07 5:09 AM;david_syer;The advantage of doing the buffering at the ItemProvider is that it is generic for all InputSources.  I guess it could just as easily be done by the InputSources using a helper object to do the buffering.  The developer touch point is normally adding a mapper or something to an ItemProvider anyway, so it won't much matter how we do it.","12/Sep/07 6:12 AM;lucas.l.ward;As I was working through reviewing some of the new xml input sources, I had a new thought about buffering the objects returned by Input Source or Item Provider.  One issue with doing so would be either the Item Provider (in the case of buffering an InputSource) or ItemProcessor modifying the object that had been buffered after it had been returned, if the transaction is rolled-back and that same object given back to the itemprocessor or provider, there could be issues if it depended upon the object being in it's initial state.

We could try and tell developers not to modify objects returned from a transactional buffer, or encourage them to be immutable, but there's no garantees, and these types of errors would be extremely hard to debug. ",12/Sep/07 7:05 AM;wxlund;I don't think its possible to ask for these to be immutable.  Therefore it sounds like you're spot on with saying that we can't buffer.  Too bad we always lose something between language generations.  Forte Tool actually rolled back instance variables as well as transactions but I've never seen another language that supports that feature.,"12/Sep/07 7:30 AM;lucas.l.ward;The only way that I can see to still buffer and not have to worry about objects within the buffer being invalidated would be to either A) Make a copy of them, which would almost certainly cause a performance issue, not to mention there would need to be some kind of contract on the domain objects to ensure they are 'copyable' B) Buffer the objects getting written out.  Afterall, they're the only things you really care about, since any given output will always be the same given it's corresponding input.","03/Oct/07 1:52 AM;david_syer;The original impetus for this was the XML input sources, and they have solved the problem in a different way.  So buffering would be nice for maintenance / reliability but arguably adds very little to the user's experience.  Leaving this issue open but re-prioritised.",29/Nov/07 3:04 AM;david_syer;Buffering is a non-issue if there is no TX synchronization - it won't be needed when all the retry happens at the chunk level.,"07/Jan/08 5:56 PM;david_syer;The best approach seems to be to put the mark(), reset() (and markSupported()) methods into ItemReader/Writer.  Then let the clients of those classes decied what to do with them.","04/Feb/08 1:11 AM;david_syer;A lot of work was done on this that is more relevant to BATCH-222 and BATCH-229.  This one is finished really, with some tidying up to do (which will be covered there).","04/Feb/08 1:12 AM;david_syer;ItemStream and mark(), reset() introduced on all the relevant Item*.  The buffering is now an option, if someone wants to wrap an existing Item* (e.g. see StagingItemReader in the samples), but not a necessity.",07/Aug/08 2:06 AM;david_syer;Assume closed as resolved and released,,,,,,,,,
