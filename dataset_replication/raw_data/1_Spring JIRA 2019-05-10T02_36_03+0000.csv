Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Depend),Outward issue link (Depend),Outward issue link (Depend),Outward issue link (Depend),Outward issue link (Depends),Outward issue link (Duplicate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Related),Outward issue link (Related),Outward issue link (Supersede),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Acceptance Criteria),Custom field (Actual Story Points),Custom field (Business Value),Custom field (Days since last comment),Custom field (Epic Colour),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (First Response Date),Custom field (Global Rank),Custom field (Last commented by a User),Custom field (Last updater),Custom field (Out of Scope),Custom field (Platform),Custom field (Pull Request URL),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Ranking),Custom field (Reference URL),Custom field (Spring Forum Reference),Sprint,Custom field (Story Points),Custom field (Virtual Machine),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Error Channel for streams modules that fail to process a message,XD-923,51199,,Story,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,grenfro,grenfro,04/Oct/13 8:00 AM,31/Oct/14 10:04 AM,10/May/19 2:35 AM,31/Oct/14 10:04 AM,,,,,,,,1.1 M1,,,,,,,,,0,,,,,,,,"As a user, I'd like to be notified when a exception is thrown in a module so that I can tap into an error channel to receive the failures for each stream/module.

",,;27/Oct/14 12:02 PM;grussell;10800,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,"* DLQ and binding it to some default DLE would make it easier to configure
* Possibly have an error channel at the stream level
* The payload of the message will be the message that failed",4.0,,142992000,,,,,2014-06-02 08:28:53.821,37689,false,tmarshall(tmarshall),"* Custom exception handling
* DLE naming configs
* Routing key options
",,,0|i000db:,61,37391,,,Sprint 37,8.0,,"02/Jun/14 8:28 AM;mark.fisher;Perhaps in the StreamPlugin we can simply bind the ""errorChannel"" (which is always available) to the MessageBus with a reserved channel name, e.g. tap:stream:foo.errors. Then anyone could create streams with that as the ""source channel"", e.g.: tap:stream:foo.errors > anysink (or we might want to make the errors channel global with an optional qualifier per-stream, similar to the way batch jobs taps are exposed as ""tap:job:somejob"" or ""tap:job:somejob.items"").",06/Jun/14 11:21 AM;mark.pollack;The current rabbit support will send messages that can't be processed to a dead latter queue.,"27/Oct/14 11:58 AM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1249

Note, item 2 - it doesn't make sense (to me) to have a single stream-wide DLQ because the contents will be mixed.

This pull request adds an option to automatically declare and bind the DLQ for each ""pipe"" (consumer) queue in the stream. The option can be set at the bus or consumer level.

All DLQs for all streams are bound to a single DLX, (named {{xdbus.DLX}} by default).",,,,,,,,,,,,,,,,,,,,,
SimpleNamespaceContext.removeBinding() does not clean up all references,SWS-819,46541,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Fixed,arjen.poutsma,tthomas,tthomas,06/Dec/12 10:21 AM,10/Dec/12 2:20 AM,10/May/19 2:36 AM,07/Dec/12 2:39 AM,1.5.9,2.1.2,,,,,,2.1.3,,,,,XML,,,,0,,,,,,,,"In SimpleNamespaceContext.removeBinding() the first line should be changed to 

String namespaceUri = prefixToNamespaceUri.remove(prefix);

Otherwise the internal map prefixToNamespaceUri still contains the prefix, and hasBinding(String prefix) behaves incorrectly.

This is error is critical, as under certain circumstances XML schema validation fails. If necessary I can provide an example. ",n/a,;07/Dec/12 2:39 AM;arjen.poutsma;600,,,,,,,,3600,3600,600,16%,3600,3600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,202348800,,,,,2012-12-07 02:39:31.212,33280,false,arjen.poutsma(arjen.poutsma),,,,0|i060db:,35098,32982,,,,,,07/Dec/12 2:39 AM;arjen.poutsma;Fixed! Thanks for spotting this.,"09/Dec/12 6:35 AM;tthomas;Your welcome. Took me a whole day to track this down. Didn't expect an error at this level, quite surprising that this one could live for so long.

Please also fix for 1.5.10 as this is the version we're currently using. Thanks. ","10/Dec/12 2:20 AM;arjen.poutsma;I've fixed this in the 1.5 branch in SVN, but I am afraid there won't be a 1.5.11 that contains it, as it is not supported anymore.",,,,,,,,,,,,,,,,,,,,,
Error loading SAML properties file,SWS-815,46515,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,jaminh,jaminh,04/Dec/12 12:44 PM,05/Dec/12 6:09 AM,10/May/19 2:36 AM,05/Dec/12 1:39 AM,2.1.2,,,,,,,2.1.3,,,,,Security,,,,0,,,,,,,,Wss4j is unable to load the properties file when it is given an absolute path. Wss4j is using the ClassLoader to load the properties file. See http://grepcode.com/file/repository.springsource.com/org.apache.ws/com.springsource.org.apache.ws.security/1.6.5/org/apache/ws/security/saml/SAMLIssuerFactory.java#SAMLIssuerFactory.getProperties%28java.lang.String%29 for how the saml properties file gets loaded by Wss4j.,,;05/Dec/12 1:29 AM;arjen.poutsma;300,,,,,,,,,,300,,,,300,,,,,,,,SWS-796,,,,,,,,,,,,,,,,,,,202694400,,,,,2012-12-05 01:39:22.445,33254,true,jaminh(jaminh),,,,0|i0607r:,35073,32956,,,,,,04/Dec/12 12:45 PM;jaminh;Related to https://jira.springsource.org/browse/SWS-796,"04/Dec/12 1:19 PM;jaminh;It is probably worth mentioning that I used a ClassPathResource for specifying the saml properties location. Perhaps if I used a different kind of Resource getAbsolutePath() would just return the string I pass into it when I construct it? Ultimately I think using Resource for the parameter on the setSamlProperties() method in the Wss4jSecurityInterceptor is inappropriate since the properties file has to be on the Classpath. Perhaps it would make sense to require a ClassPathResource that way we can ensure that the file is on the classpath and that it exists, but instead of calling getFile().getAbsolutePath() we can just call getPath().","05/Dec/12 1:39 AM;arjen.poutsma;I'm sorry for this. I thought that using a Resource would allow for more flexibility, but it turns out WSS4J is a bit picky (as always).

I have changed the Resource parameter into a String in SVN. I've also triggered a snapshot build of 2.1.3 that contains this change. Could you please try a snapshot and see if it works? See http://static.springsource.org/spring-ws/site/downloads/snapshots.html",05/Dec/12 6:09 AM;jaminh;Tried it with the snapshot and it worked. Thanks.,,,,,,,,,,,,,,,,,,,,
Document @SoapHeader in reference guide,SWS-812,46303,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,mdeinum,mdeinum,23/Nov/12 1:51 AM,30/Nov/12 3:34 AM,10/May/19 2:36 AM,30/Nov/12 3:34 AM,,,,,,,,2.1.2,,,,,Documentation,,,,0,,,,,,,,Currently the @SoapHeader annotation isn't mentioned in the reference guide.,,;30/Nov/12 3:34 AM;arjen.poutsma;240,,,,,,,,,,240,,,,240,,,,,,,,,,,,,,,,,,,,,,,,,,,203817600,,,,,,33103,true,arjen.poutsma(arjen.poutsma),,,,0|i05za7:,34922,32805,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When using annotation-driven register the SoapHeaderElementMethodArgumentResolver by default.,SWS-811,46301,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,mdeinum,mdeinum,23/Nov/12 1:19 AM,30/Nov/12 3:25 AM,10/May/19 2:36 AM,30/Nov/12 3:25 AM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,When using the @SoapHeader annotation it is required that the SoapHeaderElementMethodArgumentResolver is registered. However this one isn't active by default. Would be a nice addition if this would be supported by default when using the annotation-driven xml element (and maybe also as a default strategy inside the DefaultMethodEndpointHandler).,,;30/Nov/12 3:25 AM;arjen.poutsma;1020,,,,,,,,,,1020,,,,1020,,,,,,,,,,,,,,,,,,,,,,,,,,,203126400,,,,,2012-11-30 03:25:33.918,33101,false,arjen.poutsma(arjen.poutsma),,,,0|i05z9r:,34920,32803,,,,,,30/Nov/12 3:25 AM;arjen.poutsma;Fixed!,,,,,,,,,,,,,,,,,,,,,,,
add support to pass in sslSocketFactory to org.springframework.ws.transport.http.HttpsUrlConnectionMessageSender,SWS-808,45966,,New Feature,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,mores,mores,02/Nov/12 10:14 AM,30/Nov/12 2:28 AM,10/May/19 2:36 AM,30/Nov/12 2:28 AM,2.1.1,,,,,,,2.1.2,,,,,,,,,0,,,,,,,,Here is a patch that allows a sslSocketFactory to be passed in.,,;30/Nov/12 2:27 AM;arjen.poutsma;1140,,,,,,,,,,1140,,,,1140,,,,,,,,,,,,,,02/Nov/12 10:14 AM;mores;HttpsUrlConnectionMessageSender.patch;https://jira.spring.io/secure/attachment/20599/HttpsUrlConnectionMessageSender.patch,,,,,,,,,,,,,203212800,,,,,2012-11-30 02:28:15.937,32856,false,arjen.poutsma(arjen.poutsma),,,,0|i05xsn:,34681,32558,,,,,,"30/Nov/12 2:28 AM;arjen.poutsma;Patch applied, with minor changes. Thanks for the patch!",,,,,,,,,,,,,,,,,,,,,,,
Introduce FactoryBean for javax.net.ssl.KeyManagerFactory,SWS-807,45930,,New Feature,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,mores,mores,31/Oct/12 8:33 AM,30/Nov/12 3:02 AM,10/May/19 2:36 AM,30/Nov/12 3:02 AM,2.1.1,,,,,,,2.1.2,,,,,Security,,,,0,client-side-certificate,,,,,,,"A webservice can be protected by a client side certificate, if so the SSLContext.init() needs the KeyManagerFactory. 

",,;30/Nov/12 3:01 AM;arjen.poutsma;1740,,,,,,,,,,1740,,,,1740,,,,,,,,,,,,,,31/Oct/12 9:45 AM;mores;KeyManagerFactoryBean.java;https://jira.spring.io/secure/attachment/20595/KeyManagerFactoryBean.java,31/Oct/12 8:33 AM;mores;KeyManagerFactoryBean.java;https://jira.spring.io/secure/attachment/20594/KeyManagerFactoryBean.java,,,,,,,,,,,,203126400,,,,,2012-11-30 03:02:02.859,32820,false,arjen.poutsma(arjen.poutsma),,,,0|i05xl3:,34647,32522,http://vafer.org/blog/20061010073725/,,,,,"31/Oct/12 9:45 AM;mores;Now returns KeyManager[] instead of KeyManagerFactory.

Tested with org.springframework.ws.transport.http.HttpsUrlConnectionMessageSender","30/Nov/12 3:02 AM;arjen.poutsma;Class added, with minor differences. Thanks for the patch!",,,,,,,,,,,,,,,,,,,,,,
@ symbol in the content-id is converted to %40. The receiving web server is not able to handle it,SWS-806,45922,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Works as Designed,arjen.poutsma,jashandeep,jashandeep,30/Oct/12 8:01 PM,03/Dec/12 5:57 AM,10/May/19 2:36 AM,03/Dec/12 5:56 AM,1.5.6,,,,,,,2.1.2,,,,,XML,,,,0,,,,,,,,"Hi,

Spring ws version :1.5.6
Marshaller: Jaxb2Marshaller

Problem description: I am sending a series of Spring MTOM attachments to a webservice.In the Content-Id inside the ""XOP"" tag in the request XML there is a special character '@' which is encoded as % + ASCII hexadecimal
The web service provider is not able to handle this. 

Please refer the following XML for issue.
<ns10:FingerImpressionImage>
- <<ns6:BinaryBase64Object>
  <<xop:Include href=""cid:be434728-da9e-4b88-858f-065cc11074a0%40niem.gov"" xmlns:xop=""http://www.w3.org/2004/08/xop/include"" /> 
  </ns6:BinaryBase64Object>

---      ------=_Part_4_1104626135.1351225350567
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-Id: <be434728-da9e-4b88-858f-065cc11074a0@niem.gov>

My question is as follows
1. Is this an issue or is that a standard process of encoding the Content-Id
2. Can I stop encoding from happening.
3. How is the Content-Id in Spring generated. How can i stop using Spring from using @niem.gov in the Content-Id.
4. In which jar file is the code for Content-Id.
5. Should this be handled at the service provider or consumer side.
6. How can i get around this problem? 
",,;03/Dec/12 5:57 AM;arjen.poutsma;4020,,,,,,,,,,4020,,,,4020,,,,,,,,,,,,,,,,,,,,,,,,,,,202867200,,,,,2012-12-03 05:55:32.293,32812,false,arjen.poutsma(arjen.poutsma),,,,0|i05xjb:,34639,32514,,,,,,"03/Dec/12 5:55 AM;arjen.poutsma;Hi,

Let me try and answer your questions:

1. This is a standard process. Content-IDs are URIs, and therefor need to be encoded.
2. You currently can't. However, if you want to customize the marshalling process, take a look at the Jaxb2AttachmentMarshaller and Jaxb2AttachmentUnmarshaller classes inside org.springframework.oxm.jaxb.Jaxb2Marshaller. Note that these classes are in the Spring Framework, not Spring Web Services.
3. It is generated from the element name space that the attachment is attached to. So in your case, niem.gov is probably the namespace of the XML element of the attachment.
4. Not sure I understand this question. Spring-WS is correct here, and has no problem interacting with other WS implementations doing MTOM. See the mton sample, for instance, which has a JAX-WS client.
5. Like I said in 2, take a look at the Jaxb2Marshaller in SPR, and create a custom subclass.",,,,,,,,,,,,,,,,,,,,,,,
WebServiceMessageReceiverHandlerAdapter not easily overridable to produce SOAP faults,SWS-804,45750,,Defect,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,machine,machine,15/Oct/12 10:28 PM,30/Nov/12 3:49 AM,10/May/19 2:36 AM,30/Nov/12 3:49 AM,2.1 GA,,,,,,,2.1.2,,,,,,,,,0,,,,,,,,"WebServiceMessageReceiverHandlerAdapter has been changed recently to catch InvalidXmlException and return a HTTP 400 status code. We would like to instead return a SOAP fault with a detailed message of the parse error (I'm not certain but returning 400 is probably against the SOAP spec). This is impossible with the new implementation of WebServiceMessageReceiverHandlerAdapter without re-implementing the handle(...) method. 

Could the handling of this exception (and probably the non-POST transport method) be done by a separate protected method such that it can be overridden?",,;30/Nov/12 3:48 AM;arjen.poutsma;720,,,,,,,,,,720,,,,720,,,,,,,,,,,,,,,,,,,,,,,,,,,203126400,,,,,2012-11-30 03:49:30.517,32674,false,arjen.poutsma(arjen.poutsma),,,,0|i05wov:,34502,32374,,,,,,30/Nov/12 3:49 AM;arjen.poutsma;Fixed!,,,,,,,,,,,,,,,,,,,,,,,
Ensure that only valid Java Identifiers are added to JMS headers,SWS-798,45542,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,markdb,markdb,24/Sep/12 7:09 PM,02/Jul/13 2:31 AM,10/May/19 2:36 AM,25/Sep/12 4:20 AM,,,,,,,,2.1.2,,,,,,,,,0,,,,,,,,"This is related to closed issue SWS-252.  The mime header property that is returning an exception is ""Accept-Encoding"". Need a way to ensure that valid Java Identifiers are added to jms headers or somehow eliminated. The current implementation just returns the given header name if no match is found in the CONVERSION_TABLE and set into the message header. ",,;25/Sep/12 4:20 AM;arjen.poutsma;1440,,,,,,,,,,1440,,,,1440,,,,,,,,,,,,,,,,,,,,,,,,,,,208828800,,,,,2012-09-25 04:21:00.344,32463,false,arjen.poutsma(arjen.poutsma),,,,0|i05vf3:,34296,32163,,,,,,24/Sep/12 7:14 PM;markdb;The correct closed issue is SWS-258 not 252 as originally stated.,25/Sep/12 4:21 AM;arjen.poutsma;Fixed. JmsTransportUtils now has a fallback mechanism for headers that are not in the conversion table.,,,,,,,,,,,,,,,,,,,,,,
XsdSchemaHandlerAdapter does not transform schema locations,SWS-797,45540,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,arvindbpatel,arvindbpatel,24/Sep/12 1:19 PM,25/Sep/12 6:31 AM,10/May/19 2:36 AM,25/Sep/12 6:30 AM,2.1 GA,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"This is on an existing issue that was marked resolved.
The issue number is SWS-791.

I have modified the issue but didn't know how to reopen it so I am opening this new one referring to SWS-791.

Sorry for that.

Thanks,",Spring WS,;25/Sep/12 6:29 AM;arjen.poutsma;3900,,,,,,,,,,3900,,,,3900,,,,,,,,,,,,,,,,,,,,,,,,,,,208828800,,,,,2012-09-25 06:30:29.596,32461,false,arjen.poutsma(arjen.poutsma),,,,0|i05ven:,34294,32161,https://jira.springsource.org/browse/SWS-791?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel,,,,,25/Sep/12 6:30 AM;arjen.poutsma;Fixed in 2.1.2. Please try a recent snapshot as of tonight (http://static.springsource.org/spring-ws/site/downloads/snapshots.html) to verify this functionality.,,,,,,,,,,,,,,,,,,,,,,,
Ability to specify SAML properties file in Wss4jInterceptor,SWS-796,45429,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,jaminh,jaminh,14/Sep/12 8:17 AM,05/Dec/12 1:21 AM,10/May/19 2:36 AM,03/Dec/12 6:25 AM,,,,,,,,2.1.2,,,,,Security,,,,0,,,,,,,,Performing the SAMLTokenSigned securement action requires that the samlPropFile option has been set on the Wss4jHandler object. A setter should be exposed on the Wss4jInterceptor to set that option.,,;03/Dec/12 6:23 AM;arjen.poutsma;1560,,,,,,,,,,1560,,,,1560,,,,,,,,,,,,,,08/Oct/12 2:38 PM;jaminh;AbstractSAMLCallbackHandler.java;https://jira.spring.io/secure/attachment/20541/AbstractSAMLCallbackHandler.java,08/Oct/12 2:39 PM;jaminh;SAML2CallbackHandler.java;https://jira.spring.io/secure/attachment/20542/SAML2CallbackHandler.java,08/Oct/12 2:40 PM;jaminh;saml.properties;https://jira.spring.io/secure/attachment/20543/saml.properties,,,,,,,,,,,202867200,,,,,2012-12-03 06:25:25.679,32350,false,arjen.poutsma(arjen.poutsma),,,,0|i05uq7:,34184,32050,,,,,,08/Oct/12 2:38 PM;jaminh;Pulled this from the Wss4j JUnit tests,08/Oct/12 2:39 PM;jaminh;Modified version pulled from Wss4j JUnits,08/Oct/12 2:40 PM;jaminh;Example SAML properties. Notice you have to define the Crypto used for the SAML assertion in the SAML properties file.,"08/Oct/12 2:42 PM;jaminh;After adding a setter for the SAML properties file to the Wss4jSecurityInterceptor I was able to successfully create a soap message with a signed SAML token. Creating a SAML token requires a SAML properties file and a SAML CallbackHandler so I will include examples of the ones I used for testing.

Here is the necessary setter method.
/**
 * Set the location of the SAML properties file.
 * 
 * @param location the location of the SAML properties file
 */
public void setSamlPropertiesFile(String location)
{
    this.handler.setOption(WSHandlerConstants.SAML_PROP_FILE, location);
}",03/Dec/12 6:25 AM;arjen.poutsma;Property added!,,,,,,,,,,,,,,,,,,,
Transform schemaLocation in WsdlDefinitionHandlerAdapter,SWS-791,44835,,New Feature,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,arvindbpatel,arvindbpatel,08/Aug/12 12:22 PM,04/Dec/12 10:52 AM,10/May/19 2:36 AM,26/Nov/12 3:13 AM,2.0 GA,,,,,,,2.1.1,,,,,XML,,,,0,,,,,,,,"I have a static-wsdl defined and in wsdl I have inported a schema with schemaLocation attribute.
When I deploy this to weblogic spring doesn't transform the schemaLocation to where it's deployed.

I do have transformWsdlLocations set to true in my web.xml.

The location in the service section of WSDL does get transformed but schemaLocation is not.

Please help.

Thanks,
",WINDOWS,;14/Aug/12 3:13 AM;arjen.poutsma;1860,,,,,,,,,,1860,,,,1860,,,,,,,,SWS-797,,,,,,,,,,,,,,,,,,,202780800,,,,,2012-08-09 01:11:16.616,31879,true,arvindbpatel(arvindbpatel),,,,0|i05rvz:,33724,31579,,,,,,09/Aug/12 1:11 AM;arjen.poutsma;The WsdlDefinitionHandlerAdapter currently does not support transforming the schemaLocation. I will consider this issue a feature request for that functionality.,"14/Aug/12 3:14 AM;arjen.poutsma;Fixed. WsdlDefinitionAdapter now has a transformSchemaLocations property, which defaults to false. When set to true, it will transform all schemaLocation attributes found in the WSDL, just like transformLocations does.","21/Aug/12 10:04 AM;arvindbpatel;Hi,
Can you please point me the url where I can download the new version 2.1.1 ?

Thanks,
Arvind","22/Aug/12 2:11 AM;arjen.poutsma;@Arvind, it's not out yet. Keep an eye on the forum to see when it's released.","04/Sep/12 1:43 PM;arvindbpatel;Hi Arjen,


We are running behind deadlines and was wondering if the new version 2.1.1 out yet.

let me know.

Regards,
Arvind",18/Sep/12 6:19 AM;arjen.poutsma;It's out now.,"24/Sep/12 8:07 AM;arvindbpatel;Hi Arjen,

I tried this and it does replace the schemaLocation in the wsdl but It does NOT replace schemaLocation in XSDs.

For example I have Employee.wsdl which has the following line

<xsd:import namespace=""http://www.localhost/schema/EmployeeService"" schemaLocation=""http://localhost/employee/EmployeeService.xsd""/>

This does get replaced with actual server name : 

But Now if my EmployeeService.xsd has the following line , it does not replace with the actual server name;

<xsd:import namespace=""http://www.localhost/schema/Employee"" schemaLocation=""http://localhost/employee/Employee.xsd""/>

Please advise.

Thanks,
Arvind.","25/Sep/12 5:21 AM;arjen.poutsma;Indeed: I only changed the code in the WsdlDefinitionHandlerAdapter (as requested), but I should also change the XsdSchemaHandlerAdapter, which serves the XSD files.

Will fix for 2.1.2.","02/Nov/12 7:24 AM;arvindbpatel;Let me know if this issue is resolved and if it's part of nightly build so that I can try.

Thanks,",05/Nov/12 4:23 AM;arjen.poutsma;If you are talking about SWS-797: yes that should be in the nightly build.,"05/Nov/12 11:57 AM;arvindbpatel;It's related to SWS-797 , but it does not completely solve the problem.

Please refer to my comment above from 24/Sep/12 8:07 AM and your reply on 25/Sep/12 5:21 AM

Please let me know if this is part of the nightly build.

Thanks,
Arvind",06/Nov/12 2:52 AM;arjen.poutsma;It should be part of the build. Let me know if it doesn't work for you.,"06/Nov/12 12:14 PM;arvindbpatel;I tried the new build but it does not replace the schema locations in XSD.

Is there a special property that I need to set ?

Thanks,
","07/Nov/12 2:53 AM;arjen.poutsma;I made some additional changes, and now you should be able to enable XSD transformations by setting the transformSchemaLocations property to true. Please use a recent snapshot to try this out (as of tonight).","07/Nov/12 9:19 AM;arvindbpatel;I tried the new version and It still does not work.
The configuration I have is 

<bean id=""wsdlDefinitionHandlerAdapter"" class=""org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter"">
         <property name=""transformSchemaLocations"" value=""true""/>
</bean>

Let me know if I am missing anything.

Thanks,","09/Nov/12 3:08 AM;arjen.poutsma;Ok, I'll reopen this issue and take a look at it again.","19/Nov/12 6:53 AM;arvindbpatel;I took nightly built jars and it worked now.

Thanks a lot for working on this.

Let me know when you include this in a new release.

Thanks again !",26/Nov/12 3:13 AM;arjen.poutsma;Good to hear!,"29/Nov/12 11:12 AM;arvindbpatel;Arjen,

Can you give me the timeframe when the new version (2.1.2)is going to be relased ?

Thanks,","30/Nov/12 1:52 AM;arjen.poutsma;I hope to do it before the end of the year. There are still 8 issues to resolve, and I cannot yet tell how much time they will take.","04/Dec/12 3:05 AM;arjen.poutsma;It's out now, see http://forum.springsource.org/showthread.php?132971-Spring-Web-Services-2-1-2-RELEASE-released","04/Dec/12 7:19 AM;arvindbpatel;When I go to download page and click on link to download it gives me error and takes me to the page with following contents

<Error>
<Code>AccessDenied</Code>
<Message>Access Denied</Message>
<RequestId>21BD3C619D51FCBF</RequestId>
<HostId>
+WultixhXrHOmYTTzoYS3xdZbOohDoJbLeNrCMvHL6zDlJbZiQIeForthbcnYNd1
</HostId>
</Error>
","04/Dec/12 9:08 AM;arjen.poutsma;Yes, I screwed up with the rights. Try again, this should be fixed now.","04/Dec/12 10:52 AM;arvindbpatel;It worked, thank you,
"
MethodEndpoint.getBean is inconsistent with its API,SWS-787,44617,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,hpstoerr,hpstoerr,23/Jul/12 5:24 AM,07/Aug/12 2:52 AM,10/May/19 2:36 AM,07/Aug/12 2:52 AM,2.0.4,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"The API description of MethodEndpoint.getBean says ""Returns the object bean for this method endpoint."" But if the constructor with a BeanFactory argument is used, it actually returns the bean name (String) instead of the actual bean! 

You might correct the documentation, but I'd much prefer if you fix the implementation to do as the documentation says, since currently you need to get hold of the BeanFactory as well to get to the endpoint object, and the MethodEndpoint does not provide it.
",,;07/Aug/12 2:52 AM;arjen.poutsma;360,,,,,,,,,,360,,,,360,,,,,,,,,,,,,,,,,,,,,,,,,,,213062400,,,,,2012-08-07 02:52:35.327,31647,false,arjen.poutsma(arjen.poutsma),,,,0|i05qjz:,33508,31347,,,,,,07/Aug/12 2:52 AM;arjen.poutsma;Fixed!,,,,,,,,,,,,,,,,,,,,,,,
SOAP envelope Matcher / MessageCreator,SWS-786,44603,,New Feature,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,shutyaev,shutyaev,20/Jul/12 1:52 PM,15/Aug/12 3:10 AM,10/May/19 2:36 AM,14/Aug/12 2:40 AM,2.1 GA,,,,,,,2.1.1,,,,,Test,,,,0,,,,,,,,"At present there is no support to use test data in the form of a complete SOAP envelope with request/response matchers and message creators. Such data can be easily obtained from TRACE level logs, so the SOAP envelope support is a useful feature.",,;14/Aug/12 2:40 AM;arjen.poutsma;1560,,,,,,,,,,1560,,,,1560,,,,,,,,,,,,,,14/Aug/12 8:54 AM;shutyaev;SoapEnvelope-1.patch;https://jira.spring.io/secure/attachment/20195/SoapEnvelope-1.patch,20/Jul/12 1:54 PM;shutyaev;SoapEnvelope.patch;https://jira.spring.io/secure/attachment/20117/SoapEnvelope.patch,,,,,,,,,,,,212371200,,,,,2012-08-14 02:40:49.589,31633,false,arjen.poutsma(arjen.poutsma),,,,0|i05qgn:,33493,31333,,,,,,"20/Jul/12 1:54 PM;shutyaev;I'm attaching a patch that contains all the required changes on this issue and also some tests. Can someone review it?

P.S. The patch was made using svn revision #2000.",14/Aug/12 2:40 AM;arjen.poutsma;Patch applied. Thanks!,"14/Aug/12 8:54 AM;shutyaev;Thanks for accepting my proposal :) I almost forgot about this issue. However, since I've attached the first file I made a small but important correction - added the following block to SoapEnvelopeDiffMatcher:

static {
     XMLUnit.setIgnoreWhitespace(true);
}

Please either add it manually or discard the previous patch and apply the new one I'm attaching with this comment.",15/Aug/12 3:10 AM;arjen.poutsma;Done!,,,,,,,,,,,,,,,,,,,,
MTOM sample should not use deprecated api,SWS-785,44455,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,rpiotrow,rpiotrow,11/Jul/12 6:52 AM,07/Aug/12 3:21 AM,10/May/19 2:36 AM,07/Aug/12 3:21 AM,2.1 GA,,,,,,,2.1.1,,,,,Samples,,,,0,,,,,,,,MTOM sample use deprecate API in server code. E.g it uses org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapter.,,;07/Aug/12 3:20 AM;arjen.poutsma;1320,,,,,,,,,,1320,,,,1320,,,,,,,,,,,,,,,,,,,,,,,,,,,213062400,,,,,2012-08-07 03:21:08.353,31465,false,arjen.poutsma(arjen.poutsma),,,,0|i05pgn:,33331,31165,,,,,,07/Aug/12 3:21 AM;arjen.poutsma;Fixed! Thanks for spotting this.,,,,,,,,,,,,,,,,,,,,,,,
Add URLPathEndpointMapping Feature,SWS-784,44267,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,yamanyar,yamanyar,29/Jun/12 8:01 AM,10/Jul/12 2:39 AM,10/May/19 2:36 AM,10/Jul/12 2:39 AM,,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"With UriEndpointMapping you have to map the whole url in case of http protocol is used. With following class, url path instead of full uri is used. So that hostname and port is not important.

Mapping with UriEndpointMapping and URLPathEndpointMapping 
""http://theserver:9084/service/abc"" -> ""/service/abc""

Please add a class like:

{code:java} 
package org.springframework.ws.server.endpoint.mapping;

import org.springframework.ws.context.MessageContext;
import org.springframework.ws.server.endpoint.mapping.AbstractMapBasedEndpointMapping;
import org.springframework.ws.transport.WebServiceConnection;
import org.springframework.ws.transport.context.TransportContext;
import org.springframework.ws.transport.context.TransportContextHolder;

import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Locale;

/**
 *
 *@author Kaan Yamanyar
 */
public class URLPathEndpointMapping extends AbstractMapBasedEndpointMapping {

    @Override
    protected boolean validateLookupKey(String key) {
        try {
            new URI(key);
            return true;
        } catch (URISyntaxException e) {
            return false;
        }
    }

    @Override
    protected String getLookupKeyForMessage(MessageContext messageContext) throws Exception {
        TransportContext transportContext = TransportContextHolder.getTransportContext();
        if (transportContext != null) {
            WebServiceConnection connection = transportContext.getConnection();
            if (connection != null) {
                String connectionUri = connection.getUri().toString();
                URL connectionURL = new URL(connectionUri);
                String path = connectionURL.getPath().toLowerCase(Locale.ENGLISH);
                logger.debug(""Required endpoint: ""+path);
                return path;
            }
        }
        return null;
    }
}
{code}",,;10/Jul/12 2:39 AM;arjen.poutsma;660,,,,,,,,,,660,,,,660,,,,,,,,,,,,,,,,,,,,,,,,,,,216432000,,,,,,31381,true,arjen.poutsma(arjen.poutsma),,,,0|i05oo7:,33203,31081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SaxUtils leaks file handles, locks file on Windows",SWS-783,44236,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Invalid,arjen.poutsma,krosenvold,krosenvold,27/Jun/12 2:14 AM,15/Apr/13 10:41 PM,10/May/19 2:36 AM,07/Aug/12 2:33 AM,2.1 GA,,,,,,,2.1.1,,,,,XML,,,,0,,,,,,,,"The method ""createInputSource"" in SaxUtils leaks the input stream in 

InputSource inputSource = new InputSource(resource.getInputStream());

While this might be considered a small nuisance, it becomes a PITA on Windows, because the ""SimpleXsdSchema"" uses this method and therefore locks the ""xsd"" file in the file system, which is a pain when running ""mvn clean install"" because clean fails because the XSD/WSDL file is locked.

There are basically 4 non-test usages of this method that need to be reworked to avoid leaking file handles.
",,;07/Aug/12 2:45 AM;arjen.poutsma;2100,,,,,,,,,,2100,,,,2100,,,,,,,,,,,,,,27/Jun/12 3:14 AM;krosenvold;Added_closeable_support_to_saxutils.patch;https://jira.spring.io/secure/attachment/20000/Added_closeable_support_to_saxutils.patch,27/Jun/12 3:36 AM;krosenvold;Added_closeable_support_to_saxutils1-v2.patch;https://jira.spring.io/secure/attachment/20001/Added_closeable_support_to_saxutils1-v2.patch,,,,,,,,,,,,191376000,,,,,2012-07-10 03:21:10.613,31382,true,krosenvold(krosenvold),,,,0|i05oof:,33204,31082,,,,,,"27/Jun/12 3:14 AM;krosenvold;The enclosed patch adds a ""CloseableInputSource"" that can be properly closed. 

The test-cases on spring-ws seem to be quite far from working on windows, so I am unable to run them. 

I am unsure of how this should be tested (if necessary).",27/Jun/12 3:31 AM;krosenvold;It's locking on the WSDL too. Update coming soon,27/Jun/12 3:36 AM;krosenvold;And here's version 2 that does not lock the wsdl file either,"10/Jul/12 3:21 AM;arjen.poutsma;Thanks for work you put into those patches, but I cannot confirm the problem actually exists. According to the [InputSource Javadoc|http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html], the underlying input stream should be closed as part of the parsing process:

{quote}[...] standard processing of both byte and character streams is to close them on as part of end-of-parse cleanup, so applications should not attempt to re-use such streams after they have been handed to a parser.{quote}

I did some further testing on this by putting a breakpoint on InputStread.close(), and it does get called as part of DocumentBuilder.parse(). All of this on MacOS X, using the standard Oracle JDK (1.7.0_04-b21).

Are you using the standard Oracle JDK Xerces parser, or perhaps using something else, like the IBM JDK or a different parser?",07/Aug/12 2:33 AM;arjen.poutsma;Closing as invalid for now.,12/Apr/13 10:13 AM;rogerdpack;also possibly related: http://betterlogic.com/roger/2013/04/documentbuilder-file-handle-leak-windows,"15/Apr/13 10:41 PM;krosenvold;@roger ""not really"", since I've been running on java7 all along.",,,,,,,,,,,,,,,,,
"DefaultMethodEndpointAdapter.JDOM_CLASS_NAME must be updated to ""org.jdom2.Element""",SWS-782,43967,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,mtopolnik,mtopolnik,21/Jun/12 2:00 AM,26/Jun/12 12:59 AM,10/May/19 2:36 AM,26/Jun/12 12:59 AM,,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,"The class name used by the DefaultMethodEndpointAdapter to detect whether JDOM is on classpath wasn't updated to reflect the upgrade to JDOM2. This breaks the use of JDOM2 Elements for endpoint mapping. A workaround is to add the class org.jdom.Element to the classpath---either by adding the old JDOM dependency, or by just creating an empty class of that name.",,;26/Jun/12 12:59 AM;arjen.poutsma;300,,,,,,,,,,300,,,,300,,,,,,,,,,,,,,,,,,,,,,,,,,,217209600,,,,,2012-06-21 02:18:49.79,31268,true,arjen.poutsma(arjen.poutsma),,,,0|i05nyn:,33088,30968,,,,,,"21/Jun/12 2:18 AM;arjen.poutsma;Thanks for spotting this, it will be fixed in 2.1.1.

Note that I did make the change in the AnnotationDrivenBeanDefinitionParser, so that <sws:annotation-driven/> will pick up JDOM 2.",21/Jun/12 2:32 AM;mtopolnik;I see. That explains why this one was missed :),,,,,,,,,,,,,,,,,,,,,,
SoapFaultMappingExceptionResolver not handling exception,SWS-777,43528,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,gordonad,gordonad,22/May/12 7:37 PM,28/Aug/12 3:00 AM,10/May/19 2:36 AM,29/May/12 4:03 AM,2.1 RC1,,,,,,,2.1 GA,,,,,Core,,,,0,,,,,,,,"Given the following configuration:

{code:xml}
    <bean class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
        <property name=""exceptionMappings"">
            <value>
                org.springframework.dao.EmptyResultDataAccessException=CLIENT,Entity not found
            </value>
        </property>
        <property name=""defaultFault"" value=""SERVER""/>
    </bean>
{code}

The result in 2.0.5 is correct:
{code:xml}
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
        <SOAP-ENV:Header/>
        <SOAP-ENV:Body>
            <SOAP-ENV:Fault>
                <faultcode>SOAP-ENV:Client</faultcode>
                <faultstring xml:lang=""en"">Entity not found</faultstring>
            </SOAP-ENV:Fault>
        </SOAP-ENV:Body>
    </SOAP-ENV:Envelope>
{code}

The result in 2.1.0.RC1 is INCORRECT:
{code:xml}
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
    <SOAP-ENV:Header/>
    <SOAP-ENV:Body>
        <SOAP-ENV:Fault>
            <faultcode>SOAP-ENV:Server</faultcode>
            <faultstring xml:lang=""en"">Incorrect result size: expected 1, actual 0</faultstring>
        </SOAP-ENV:Fault>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
{code}",,;29/May/12 4:03 AM;arjen.poutsma;7260,,,,,,,,,,7260,,,,7260,,,,,,,,SWS-772,,,,,,,,,,,,,,,,,,,219110400,,,,,2012-05-23 00:33:05.088,30871,false,arjen.poutsma(arjen.poutsma),,,,0|i05lin:,32692,30571,,,,,,"23/May/12 12:33 AM;arjen.poutsma;Hmm, that's strange. Do you also use {{<sws:annotation-driven>}}, by any chance? There were some changes to that in 2.1.

Also: does the EmptyResultDataAccessException have a {{@SoapFault}} annotation, perhaps?",23/May/12 12:33 AM;arjen.poutsma;Added formatting.,"23/May/12 6:10 AM;gordonad;Arjen,

Yes, I have configured <ws:annotation-driven/>

I am using the examples from the Enterprise Integration with Spring course that I am teaching this week.  I use those to run through the upcoming versions of SWS, SI & SB to determine any api changes to share with the students.

Thanks,
Gordon Dickens

@gdickens
linkedin.com/in/gordondickens
Blog: technophile.gordondickens.com
","29/May/12 1:08 AM;arjen.poutsma;Gordon,

Can you elaborate which example(s) of the EI course show this problem? That makes it a bit easier to duplicate.

EDIT: never mind, I found it myself in the ws-2 lab of the course.

Thanks,

Arjen","29/May/12 4:10 AM;arjen.poutsma;It seems like SWS-772 was the culprit here. See my [last comment|https://jira.springsource.org/browse/SWS-772?focusedCommentId=79384&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-79384] on that issue for the reason.

For the ws-2 lab, it seems like adding an ordered property will fix it, like so:
{code:xml}

<bean class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
    <property name=""order"" value=""0""/>
    <property name=""exceptionMappings"">
        <value>
            org.springframework.dao.EmptyResultDataAccessException=CLIENT,Entity not found
        </value>
    </property>
    <property name=""defaultFault"" value=""SERVER""/>
</bean>
{code}",,,,,,,,,,,,,,,,,,,
Windows-specific error with relative XSD referencing,SWS-776,43499,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,desliner,desliner,21/May/12 5:00 AM,14/Aug/12 2:04 AM,10/May/19 2:36 AM,14/Aug/12 2:04 AM,2.0.5,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"It appears, that Spring ignores relative addressing in XSD files on Windows platform.

Root cause was found at org.springframework.xml.sax.SaxUtils.getSystemId() method. It tries to construct java.net.URI object from path string with Windows-style \-slashes and fails on this operation. This path string is obtained from java.net.URL.toExternalForm(). Exception is silently ignored and null is returned from the method.

Current workaround is to implement custom org.springframework.core.io.ClassPathResource class that will override getURL() returning paths with valid /-slashes.
Then one should use instances of this class to populate xsds property of org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection, instead of automatic Spring-generated instances.
Patch with workaround is attached. Now XSD schema collection declaration looks like this:

{code:xml}
<bean class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"">
  <property name=""xsds"">
    <list>
      <bean class=""com.platform.util.spring.SafeClassPathResource"">
         <constructor-arg value=""META-INF/xsd/service.xsd"" />
      </bean>
    </list>
  </property>
</bean>
{code}",OS Windows,;26/Jun/12 2:38 AM;arjen.poutsma;5760,,,,,,,,,,5760,,,,5760,,,,,,,,,,,,,,21/May/12 5:00 AM;desliner;SafeClassPathResource.patch;https://jira.spring.io/secure/attachment/19689/SafeClassPathResource.patch,26/Jun/12 2:37 AM;arjen.poutsma;path-1.0-src.zip;https://jira.spring.io/secure/attachment/19996/path-1.0-src.zip,,,,,,,,,,,,212544000,,,,,2012-06-26 02:37:04.474,30842,false,arjen.poutsma(arjen.poutsma),,,,0|i05lc7:,32663,30542,,,,,,"26/Jun/12 2:37 AM;arjen.poutsma;I suspect Spring-WS is not to blame, but rather Spring itself. But I've tried to reproduce this on a Windows VM, and I couldn't. I've attached a sample maven project, could you please take a look at it and see what's different from your project?","14/Aug/12 2:04 AM;arjen.poutsma;Closing as Cannot Reproduce for now, due to lack of feedback.",,,,,,,,,,,,,,,,,,,,,,
<sws:annotation-driven/> should register a SoapFaultAnnotationExceptionResolver,SWS-772,43238,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,pcholakov,pcholakov,08/May/12 2:12 AM,27/Sep/13 1:00 AM,10/May/19 2:36 AM,08/May/12 3:14 AM,2.0.3,,,,,,,2.1 RC1,,,,,Core,,,,0,,,,,,,,"I would expect adding an <sws:annotation-driven/> element to automatically honour @SoapFault-annotated exceptions, however it doesn't do this. One has to declare a SoapFaultAnnotationExceptionResolver bean separately in order for this to work. Is there any situation in which annotation-driven endpoints are desirable, but annotated faults are not?",,;08/May/12 3:13 AM;arjen.poutsma;900,,,,,,,,,,900,,,,900,,,,,,,,,,,,,,,,,,,,,,,,,,,177206400,,,,,2012-05-08 03:14:38.361,30657,true,hpstoerr(hpstoerr),,,,0|i05k73:,32478,30357,,,,,,"08/May/12 3:14 AM;arjen.poutsma;You're right, it was an oversight to not include the SoapFaultAnnotationExceptionResolver.","29/May/12 4:00 AM;arjen.poutsma;Note that due to this change, you might be required to set ""order"" property values on custom ExceptionResolvers.

This is due to the fact that <sws:annotation-driven/> now adds the SoapFaultAnnotationExceptionResolver (with order 0) and SimpleSoapExceptionResolver (Ordered.LOWEST_PRECEDENCE). Formerly, these two were also registered, but only if you did not have any ""custom"" exception resolvers in the application context. As such, if you do have custom exception resolvers in the application context (such as the SoapFaultMappingExceptionResolver), you have to make sure they act before the ones provided by <sws:annotation-driven/>, or at least before the SimpleSoapExceptionResolver (which always resolves the exception, making it suitable as a fallback mechanism, hence the low precedence).","27/Sep/13 1:00 AM;hpstoerr;It would be very nice if the documentation would actually mention this somewhere. I was just tearing out some of my already receding hair trying to find out where that SoapFaultAnnotationExceptionResolver suddenly came, that broke our exception handling after upgrading to spring-ws 2.1. 8-)  I only found out about it when googling and finding the changelog. Perhaps you can mention it in the chapter about the SoapFaultAnnotationExceptionResolver, and also mention how to get rid of it if you don't need it. Setting the order of your own exceptionresolvers to negative values seems to be a reasonable way to do this.

By the way: even setting the logging of the whole spring framework to trace did not give me any clue where it comes from. Shouldn't there be some log message about that? Perhaps it would be even better if there was a message about each bean where the bean definition comes from.",,,,,,,,,,,,,,,,,,,,,
Upgrade template.mf,SWS-771,43224,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,07/May/12 4:02 AM,15/May/12 12:07 AM,10/May/19 2:36 AM,15/May/12 12:07 AM,,,,,,,,2.1 RC1,,,,,,,,,0,,,,,,,,"Make sure all OSGi template.mf files are up to date, so that the version numbers correspond to the versions used in the pom.",,;15/May/12 12:07 AM;arjen.poutsma;5700,,,,,,,,,,5700,,,,5700,,,,,,,,,,,,,,,,,,,,,,,,,,,221011200,,,,,,30643,false,arjen.poutsma(arjen.poutsma),,,,0|i05k47:,32465,30343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In documentation, JMS server configuration doesn't work",SWS-770,43156,,Defect,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,pilerou,pilerou,02/May/12 2:53 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,02/May/12 6:01 AM,,,,,,,,2.0.5,,,,,Documentation,,,,0,,,,,,,,"http://static.springsource.org/spring-ws/site/reference/html/server.html contains a jms configuration for server.

This configuration uses a deprecated class : org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping

When i use it, i have an exception : java.lang.IllegalStateException: No adapter for endpoint

Using the recommanded class org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping works fine.

Documentation should be updated.
",,;02/May/12 6:01 AM;arjen.poutsma;120,,,,,,,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:15.641,30575,false,arjen.poutsma(arjen.poutsma),,,,0|i05jov:,32396,30275,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Namespace problems after upgrading to Axiom 1.2.13,SWS-763,42936,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Complete,arjen.poutsma,grzes,grzes,13/Apr/12 1:11 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,01/May/12 7:44 AM,2.0.4,,,,,,,2.0.5,,,,,Core,,,,1,,,,,,,,"After upgrading to Axiom 1.2.13 which changes (restricts) some namespace issues there are several problems with Spring-WS + Axiom Message Factory:

1. {{UnsupportedOperationException}} in {{org.springframework.ws.soap.axiom.AxiomSoapMessage}} constructor:

{noformat}
java.lang.UnsupportedOperationException: This is not allowed. Use set SOAPEnvelope instead
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.setOMDocumentElement(SOAPMessageImpl.java:59)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.<init>(OMDocumentImpl.java:101)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.<init>(SOAPMessageImpl.java:42)
	at org.apache.axiom.soap.impl.llom.soap11.SOAP11Factory.createSOAPMessage(SOAP11Factory.java:329)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.<init>(AxiomSoapMessage.java:100)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.<init>(AxiomSoapMessage.java:89)
	at org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.createSoapMessage(AxiomSoap11MessageTest.java:29)
	at org.springframework.ws.soap.AbstractSoapMessageTestCase.createMimeMessage(AbstractSoapMessageTestCase.java:51)
	at org.springframework.ws.mime.AbstractMimeMessageTestCase.createWebServiceMessage(AbstractMimeMessageTestCase.java:44)
	at org.springframework.ws.AbstractWebServiceMessageTestCase.setUp(AbstractWebServiceMessageTestCase.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

2. {{org.apache.axiom.attachments.Attachments.getAttachmentSpecType()}} throws OMException, not NullPointerException now:

{noformat}
org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type; nested exception is org.apache.axiom.om.OMException: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:295)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.axiom.om.OMException: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type
	at org.apache.axiom.attachments.Attachments.getAttachmentSpecType(Attachments.java:164)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.isXopPackage(AxiomSoapMessage.java:220)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.getOutputFormat(AxiomSoapMessage.java:309)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:258)
	... 24 more
{noformat}

3. Conflicting namespace declarations in {{org.springframework.ws.soap.axiom.AxiomHandler.startElement()}}:

{noformat}
javax.xml.transform.TransformerException: org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:716)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at org.apache.axiom.om.impl.llom.OMElementImpl.declareDefaultNamespace(OMElementImpl.java:401)
	at org.springframework.ws.soap.axiom.AxiomHandler.startElement(AxiomHandler.java:93)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:204)
	at com.sun.org.apache.xml.internal.serializer.ToSAXHandler.flushPending(ToSAXHandler.java:277)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:243)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:601)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:180)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3104)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:609)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:707)
	... 25 more
---------
org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at org.apache.axiom.om.impl.llom.OMElementImpl.declareDefaultNamespace(OMElementImpl.java:401)
	at org.springframework.ws.soap.axiom.AxiomHandler.startElement(AxiomHandler.java:93)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:204)
	at com.sun.org.apache.xml.internal.serializer.ToSAXHandler.flushPending(ToSAXHandler.java:277)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:243)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:601)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:180)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3104)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:609)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:707)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

4. Violation of Iterator contract in {{org.springframework.ws.soap.axiom.support.AxiomUtils.removeContents(OMContainer)}}:

{noformat}
java.util.ConcurrentModificationException: The current node has been removed using a method other than Iterator#remove()
	at org.apache.axiom.om.impl.traverse.OMAbstractIterator.hasNext(OMAbstractIterator.java:67)
	at org.springframework.ws.soap.axiom.support.AxiomUtils.removeContents(AxiomUtils.java:107)
	at org.springframework.ws.soap.axiom.AbstractPayload.getResult(AbstractPayload.java:72)
	at org.springframework.ws.soap.axiom.AxiomSoapBody.getPayloadResult(AxiomSoapBody.java:57)
	at org.springframework.ws.soap.AbstractSoapBodyTestCase.testGetPayloadResultTwice(AbstractSoapBodyTestCase.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

Please find attached a patch (with tests) allowing Spring-WS to be used with Axiom 1.2.13. All tests pass also with Axiom 1.2.9.

regards
Grzegorz Grzybek",,;01/May/12 7:44 AM;arjen.poutsma;420,,,,,,,,,,420,,,,420,,,,,,,,,,,,,,13/Apr/12 1:11 AM;grzes;axiom-1.2.13.patch;https://jira.spring.io/secure/attachment/19579/axiom-1.2.13.patch,,,,,,,,,,,,,221270400,,,,,2012-05-01 07:46:38.73,30358,false,arjen.poutsma(arjen.poutsma),,,,0|i05icf:,32178,30058,,,,,,"01/May/12 7:46 AM;arjen.poutsma;Thanks for the patch, works like a charm!

Arjen",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Add method to set digest algorithm for signature (WSS4J) ,SWS-761,42906,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,oliverm,oliverm,11/Apr/12 1:14 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,01/May/12 7:52 AM,2.0.4,,,,,,,2.0.5,,,,,Security,,,,0,,,,,,,,"I wanted to change the digest algorithm which is used for signatures in secured SOAP Messages (default is SHA1). WSS4J supports this, but it seems this is not included in the Wss4jSecurityInterceptor facade (2.0.4.RELEASE) from Spring WS Security.
The constant ""org.apache.ws.security.handler.WSHandlerConstants .SIG_DIGEST_ALGO"" allows it to set the digest algorithm which is used in WSS signatures.

I patched the following code into the Wss4jSecurityInterceptor class and was then able to change the digest algorithm:

{code}
public void setSecurementSignatureDigestAlgorithm(String digestAlgo) {
    handler.setOption(WSHandlerConstants.SIG_DIGEST_AL GO, digestAlgo);
}
{code}

Context XML:
{code:xml}
<bean id=""wsSecurityInterceptor"" class=""org.springframework.ws.soap.security.wss4j. Wss4jSecurityInterceptor"">
.. snip ..
   <property name=""securementSignatureDigestAlgorithm"" value=""http://www.w3.org/2001/04/xmlenc#sha256""/>
</bean>
{code}",,;01/May/12 7:52 AM;arjen.poutsma;180,,,,,,,,,,180,,,,180,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-01 07:48:00.7,30328,false,arjen.poutsma(arjen.poutsma),,,,0|i05i5r:,32148,30028,http://forum.springsource.org/showthread.php?125244-Missing-method-to-set-digest-algorithm-for-signature-%28WSS4J%29,,,,,01/May/12 7:48 AM;arjen.poutsma;Added formatting.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Please specify URL and license in pom.xml,SWS-760,42851,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Trivial,Complete,arjen.poutsma,jieryn,jieryn,06/Apr/12 7:13 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,01/May/12 4:14 AM,2.0.4,,,,,,,2.0.5,,,,,,,,,0,,,,,,,,"Deployed POMs do not include a project URL or project License section. These data are important for other aspects of Apache Maven which produce reports, e.g. the Project Dependency Management page which is automatically created during {{mvn site}}.

SpringFramework core already provides this information, so it will be nice if the other Spring projects do this as well.",,;01/May/12 4:14 AM;arjen.poutsma;120,,,,,,,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:33.996,30273,false,arjen.poutsma(arjen.poutsma),,,,0|i05htj:,32093,29973,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
FAQ about Mac OS X test failures needs updating,SWS-759,42616,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,jetforme,jetforme,15/Mar/12 2:52 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,01/May/12 4:16 AM,,,,,,,,2.0.5,,,,,,,,,0,,,,,,,,"http://static.springsource.org/spring-ws/site/faq.html#osx

As of Lion 10.7.3 (and probably earlier), neither Java 1.5.0 or 1.6.0 includes this compatibility jar.",,;01/May/12 4:16 AM;arjen.poutsma;120,,,,,,,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:46.485,30038,false,arjen.poutsma(arjen.poutsma),,,,0|i05ge7:,31862,29738,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Upgrade XmlSchemaCollection,SWS-758,42534,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,davidkarlsen,davidkarlsen,09/Mar/12 6:35 AM,08/May/12 1:21 AM,10/May/19 2:36 AM,08/May/12 1:21 AM,2.0.4,,,,,,,2.1 RC1,,,,,XML,,,,0,,,,,,,,"It would be good if spring webservices could upgrade to:
{noformat}
<dependency>
  <groupId>org.apache.ws.xmlschema</groupId>
  <artifactId>xmlschema-core</artifactId>
  <version>2.0.1</version>
</dependency>
{noformat}

as the oldeer version conflicts with other parts of my application.",,;08/May/12 1:21 AM;arjen.poutsma;1980,,,,,,,,,,1980,,,,1980,,,,,,,,,,,,,,,,,,,,,,,,,,,221011200,,,,,2012-05-07 03:03:17.052,29957,false,arjen.poutsma(arjen.poutsma),,,,0|i05fw7:,31781,29657,,,,,,07/May/12 2:48 AM;davidkarlsen;About when would you guess 2.1RC1 to be out?,"07/May/12 3:03 AM;arjen.poutsma;Hopefully this week. It's going to contain library upgrades only. Some of the upgrades do break backwards compatibility, though, so that's why I opted for a 2.1 release version rather than 2.0.x.",,,,,,,,,,,,,,,,,,,,,,
Airline Sample Maven Build Error,SWS-757,42403,,Bug,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,nishimorit,nishimorit,28/Feb/12 1:43 AM,20/Jun/12 8:44 AM,10/May/19 2:36 AM,08/May/12 2:00 AM,2.0.4,,,,,,,2.1 RC1,,,,,Samples,,,,0,maven,,,,,,,"When Maven builds the airline sample project, there occur the following errors;

com.sun.xml.wsit:xws-security:jar:1.3.1 is missing.
com.sun.xml.wsit:wsit-rt:jar:1.1 is missing.

I cannot find a repository which has them.","Tomcat 7, STS 2.8.1, Maven 3.0.3",;08/May/12 2:04 AM;arjen.poutsma;1020,,,,,,,,,,1020,,,,1020,,,,,,,,,,,,,,,,,,,,,,,,,,,217209600,,,,,2012-03-02 01:28:35.161,29678,true,jimv(jimv),,,,0|i04nr3:,27222,21871,http://forum.springsource.org/showthread.php?119544-Spring-WS-2-0-3-Ariline-Sample-Maven-Build-Error,,,,,"02/Mar/12 1:28 AM;arjen.poutsma;These are in:

{code:xml}
<repository>
    <id>jboss.repository.releases.public</id>
    <name>JBoss Repo Public</name>
    <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
</repository>
{code}
","08/Mar/12 3:20 AM;nishimorit;This description is in spring-ws-2.0.4.RELEASE/samples/airline/client/saaj/pom.xml[Client Project].
I build spring-ws-2.0.4.RELEASE/samples/airline/server/pom.xml[Server Project], so build errors occur.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,"06/May/12 9:27 AM;kumagaur;I have the same issue and I am using the sample file which has same location as you mentioned
<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <parent>
        <artifactId>airline-client</artifactId>
        <groupId>org.springframework.ws</groupId>
        <version>2.0.4.RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>airline-saaj-client</artifactId>
    <packaging>jar</packaging>
    <name>Spring WS Airline Sample - SAAJ Client</name>
    <profiles>
        <profile>
            <id>jdk15</id>
            <activation>
                <jdk>!1.6</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax.xml.soap</groupId>
                    <artifactId>saaj-api</artifactId>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>com.sun.xml.messaging.saaj</groupId>
                    <artifactId>saaj-impl</artifactId>
                </dependency>
                <dependency>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.sun.org.apache.xml.security</groupId>
                    <artifactId>xmlsec</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>jboss.repository.releases.public</id>
            <name>JBoss Repo Public</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.springframework.ws.samples.airline.client.saaj.Driver</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.sun.xml.wsit</groupId>
            <artifactId>xws-security</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.xml.wsit</groupId>
          <artifactId>wsit-rt</artifactId>
        </dependency>
    </dependencies>
</project>
.

",07/May/12 2:13 AM;arjen.poutsma;I'll take another look at this for 2.1 RC1,"08/May/12 2:00 AM;arjen.poutsma;I just did a build with an empty repository, and all the samples build fine for me:

{noformat}
> pwd
/Users/arjen/Projects/spring-ws/samples
> mvn clean install -Dmaven.repo.local=./repo
...
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring WS Samples ................................. SUCCESS [0.216s]
[INFO] Spring WS Echo Sample ............................. SUCCESS [0.007s]
[INFO] Spring WS Echo Sample - Server .................... SUCCESS [2.406s]
[INFO] Spring WS Echo Sample - Clients ................... SUCCESS [0.021s]
[INFO] Spring WS Echo Sample - SAAJ Client ............... SUCCESS [0.563s]
[INFO] Spring WS Echo Sample - Spring-WS Client .......... SUCCESS [0.404s]
[INFO] Spring WS Holiday Service Tutorial ................ SUCCESS [1.493s]
[INFO] Spring WS MTOM Sample ............................. SUCCESS [0.006s]
[INFO] Spring WS MTOM Sample - Server .................... SUCCESS [1.571s]
[INFO] Spring WS MTOM Sample - Clients ................... SUCCESS [0.005s]
[INFO] Spring WS MTOM Sample - JAX-WS Client ............. SUCCESS [1.749s]
[INFO] Spring WS MTOM Sample - Spring-WS Client .......... SUCCESS [0.607s]
[INFO] Spring WS POX Sample .............................. SUCCESS [0.006s]
[INFO] Spring WS POX Sample - Server ..................... SUCCESS [1.332s]
[INFO] Spring WS POX Sample - Clients .................... SUCCESS [0.014s]
[INFO] Spring WS POX Sample - Spring-WS Client ........... SUCCESS [0.314s]
[INFO] Spring WS Stock Quote Sample ...................... SUCCESS [0.005s]
[INFO] Spring WS Stock Quote Sample - Server ............. SUCCESS [0.760s]
[INFO] Spring WS Stock Quote Sample - Clients ............ SUCCESS [0.005s]
[INFO] Spring WS Stock Quote Sample - JAX-WS Client ...... SUCCESS [1.519s]
[INFO] Spring WS Stock Quote Sample - Spring-WS Client ... SUCCESS [0.419s]
[INFO] Spring WS Airline Sample .......................... SUCCESS [0.007s]
[INFO] Spring WS Airline Sample - Server ................. SUCCESS [6.498s]
[INFO] Spring WS Airline Sample - Clients ................ SUCCESS [0.005s]
[INFO] Spring WS Airline Sample - SAAJ Client ............ SUCCESS [0.361s]
[INFO] Spring WS Airline Sample - Axis 1 Client .......... SUCCESS [1.020s]
[INFO] Spring WS Airline Sample - Spring-WS Client ....... SUCCESS [4.410s]
[INFO] Spring WS Airline Sample - JMS Client ............. SUCCESS [0.297s]
[INFO] Spring WS Airline Sample - JAX-WS Client .......... SUCCESS [1.463s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 28.211s
[INFO] Finished at: Tue May 08 10:56:04 CEST 2012
[INFO] Final Memory: 29M/81M
[INFO] ------------------------------------------------------------------------
{noformat}

Make sure you build from the 'samples' directory, not a subdirectory.
","20/Jun/12 8:44 AM;jimv;Arjen,
I also started with a blank repository, and built from the samples dir, but I get errors:
xxx$ pwd
/Users/xxx/Downloads/spring-ws-2.1.0.RELEASE
xxx$ cd samples
xxx$ mvn clean install -Dmaven.repo.local=./repo
[INFO] Scanning for projects...

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring WS Samples ................................. SUCCESS [18.744s]
[INFO] Spring WS Echo Sample ............................. SUCCESS [0.006s]
[INFO] Spring WS Echo Sample - Server .................... SUCCESS [1:26.472s]
[INFO] Spring WS Echo Sample - Clients ................... SUCCESS [0.004s]
[INFO] Spring WS Echo Sample - SAAJ Client ............... SUCCESS [19.522s]
[INFO] Spring WS Echo Sample - Spring-WS Client .......... SUCCESS [0.297s]
[INFO] Spring WS Holiday Service Tutorial ................ SUCCESS [3.531s]
[INFO] Spring WS MTOM Sample ............................. SUCCESS [0.005s]
[INFO] Spring WS MTOM Sample - Server .................... SUCCESS [18.549s]
[INFO] Spring WS MTOM Sample - Clients ................... SUCCESS [0.006s]
[INFO] Spring WS MTOM Sample - JAX-WS Client ............. FAILURE [26.047s]
[INFO] Spring WS MTOM Sample - Spring-WS Client .......... SKIPPED

[ERROR] Failed to execute goal org.codehaus.mojo:jaxws-maven-plugin:1.10:wsimport (default) on project mtom-jax-ws-client: Error executing: wsimport [-s, /Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/target/jaxws/wsimport/java, -d, /Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/target/classes, -p, org.springframework.ws.samples.mtom.client.jaxws, file:///Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/mtom.wsdl] -> [Help 1]

Since I am currently most interested in the airline project, I tried running mvn clean install from airline dir, but get the following error:
[ERROR] Failed to execute goal on project airline-server: Could not resolve dependencies for project org.springframework.ws:airline-server:war:2.1.0.RELEASE: The following artifacts could not be resolved: com.sun.xml.wsit:xws-security:jar:1.3.1, com.sun.xml.wsit:wsit-rt:jar:1.1: Could not find artifact com.sun.xml.wsit:xws-security:jar:1.3.1 in spring-ext (https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/) -> [Help 1]",,,,,,,,,,,,,,,,,
EndpointInterceptor.afterCompletion is not always invoked,SWS-754,42281,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,larshvile,larshvile,20/Feb/12 4:07 AM,15/Apr/13 3:03 AM,10/May/19 2:36 AM,02/May/12 7:10 AM,2.0.4,,,,,,,2.0.5,,,,,Core,,,,0,,,,,,,,"afterCompletion's javadoc states that it will be called on any outcome of endpoint invocation, allowing for proper resource cleanup. There is however a case where handleRequest() successfully completes, but afterCompletion() is never invoked. This happens whenever an exception occurs and no EndpointExceptionResolver is able to resolve the exception.

{code:title=MessageDispatcher.java|borderStyle=solid}
// within dispatch()'s last catch block
catch (Exception ex) {
  Object endpoint = mappedEndpoint != null ? mappedEndpoint.getEndpoint() : null;
  processEndpointException(messageContext, endpoint, ex); // exception is rethrown here..
  triggerHandleResponse(mappedEndpoint, interceptorIndex, messageContext);
  triggerAfterCompletion(mappedEndpoint, interceptorIndex, messageContext, ex); // .. and afterCompletion() is never invoked
}
{code}

",,;02/May/12 7:09 AM;arjen.poutsma;2820,,,,,,,,,,2820,,,,2820,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-02 07:10:01.422,29556,false,arjen.poutsma(arjen.poutsma),,,,0|i047pb:,24622,21334,,,,,,02/May/12 7:10 AM;arjen.poutsma;Fixed. Thanks for spotting this!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
SaajSoapMessageFactory's checkForUtf8ByteOrderMark is corrupting input stream,SWS-750,41817,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Fixed,arjen.poutsma,zakvandermerwe,zakvandermerwe,20/Jan/12 12:25 AM,20/Aug/13 3:07 AM,10/May/19 2:36 AM,24/Jan/12 7:16 AM,1.5.8,1.5.9,,,,,,2.0.4,,,,,Core,,,,1,,,,,,,,"There appears to be a bug in the implementation of ""checkForUtf8ByteOrderMark"" in org.springframework.ws.soap.saaj.SaajSoapMessageFactory.

Under certain circumstances, the call to pushbackInputStream.read(bom) will read less than the required 3 bytes into bom. Then, since the byte order mark isn't found, unread(bom) is called which results in some invalid bytes being added to the stream.

The contract for PushbackInputStream.read(byte[] b, int off, int len) says ""Reads *up to* len bytes of data."" In our case, using Tomcat (versions 6 and 7) with recent releases of Chrome and IE, the call to inputstream.available() in BufferedInputStream's implementation of read returns 0. This is because no more data can be read without blocking. It seems to be just an unfortunate coincidence caused by the size of the header sent by the newest version of chrome and IE. The end result is that our soap envelope is corrupted and our system is unusable.",,;24/Jan/12 7:15 AM;arjen.poutsma;1860,,,,,,,,,,1860,,,,1860,,,,,,,,SWS-845,,,,,,,,,,,,,,,,,,,194486400,,,,,2012-01-24 07:14:57.317,29150,true,arjen.poutsma(arjen.poutsma),,,,0|i03lzj:,21104,17828,,,,,,"24/Jan/12 7:14 AM;arjen.poutsma;This should be fixed now, as we now only unread the amount of bytes that were actually read.

I do wonder, however, what Chrome and IE have to do with this bug. Are you sending SOAP messages to Spring-WS from these browsers?","24/Jan/12 10:57 PM;zakvandermerwe;Hi Arjen, thanks for your fast response!

   ""I do wonder, however, what Chrome and IE have to do with this bug. Are you sending SOAP messages to Spring-WS from these browsers?""
That's right, we are sending SOAP messages from these browsers. I only included this information in the ticket because it seems strange that we suddenly started to encounter this bug after using spring-ws without problems for a couple of years. We thought it must have something to do with a change in the payload sent by recent versions of these two browsers.

Your change will fix our issue, but isn't it possible to miss a valid byte order mark if the first read call doesn't read all 3 bytes? It seems like you might need to call read() in a loop until 3 bytes have been read.
","25/Jan/12 1:10 AM;arjen.poutsma;No problem. I was just wondering about the browser use, I have never seen it before :).

With regard to the fix: yes, it is possible to miss a BOM with this new code. However, I think the PushbackInputStream cannot unread multiple reads, so that would defy the purpose. Having a UTF-8 SOAP message with a BOM is quite uncommon anyway, so I don't think this will bother many users, if any at all.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,"10/Mar/13 4:49 PM;pkotlov;Hello,

having some hard time thinking of a hotfix for a release still using Spring-ws-1.5.9

After reading this (It describes my problem pretty exact):
http://forum.springsource.org/showthread.php?131438-Using-spring-ws-behind-https
I assumed SaajSoapMessageFactory could be the root of my problem. 
I have already created a fixed version of spring-ws with the checkForUtf8ByteOrderMark 
Method fixed but I am still facing the same Problem.

I face the Problem only on my https server and only when using a special service.

This is the SOAP Message that is passed to Xerces:
<nullnullSOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">

For several reasons I will have to update to spring 3.2 and spring-ws 2.1 in 1-2 months. 
It' just, I can't do it right now.

Any Help or pointing to the place where my problem could be, will be very much appreciated.



","10/Mar/13 7:33 PM;pkotlov;Hm... after 5 hours of trying different solution I found out that the only code that works for me is:

{code:title=SaajSoapMessageFactory.java|borderStyle=solid}
    private InputStream checkForUtf8ByteOrderMark(InputStream inputStream) throws IOException {
        return inputStream;
    }
{code} 
I will digg into it if the update to 3.2/2.1 want work.
",,,,,,,,,,,,,,,,,,
org.springframework.xml.sax.SaxUtils swallows exceptions,SWS-749,41798,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,davidnee,davidnee,18/Jan/12 12:07 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,24/Jan/12 7:22 AM,2.0.2,,,,,,,2.0.4,,,,,Core,,,,0,,,,,,,,"While starting a spring-ws application on Websphere, CommonsXsdSchemaCollection makes a call to SaxUtils in order to resolve the location of XSDs defined in the collection. I hit a problem whereby the SaxUtils.getSystemId() swallows an exception (see below) because there is a space in the URL of the XSD. This was a serious pain to track down because the code went on to create a different exception that lead me on a wild goose chase. Would be good if the exception was logged.

{noformat}
====================== Note: I've X'd out some of the file names
[1/18/12 13:47:15:228 CST] 00000017 SystemOut     O 2012-01-18 13:47:15,228 INFO    SaxUtils - resource -class path resource [xsd/XXXXXXXXXXXService_V_1_0.xsd]
[1/18/12 13:47:15:228 CST] 00000017 SystemOut     O 2012-01-18 13:47:15,228 INFO    SaxUtils - resource URL -wsjar:file:/D:/opt/sw/IBM/SDP/runtimes/base_v7/profiles/was70profile1/installedApps/wn-ila3bga9y136Node01Cell/XXX XXXXXXXX API.ear/xxxx-xx-api-12.1.war/WEB-INF/lib/xxxx-core-api-12.1.jar!/xsd/XXXXXXXXXXXService_V_1_0.xsd
[1/18/12 13:47:15:228 CST] 00000017 SystemOut     O 2012-01-18 13:47:15,228 INFO    SaxUtils - resource URL external form-wsjar:file:/D:/opt/sw/IBM/SDP/runtimes/base_v7/profiles/was70profile1/installedApps/wn-ila3bga9y136Node01Cell/XXX XXXXXXXX API.ear/xxx-ws-api-12.1.war/WEB-INF/lib/xxxx-core-api-12.1.jar!/xsd/XXXXXXXXXXXService_V_1_0.xsd
[1/18/12 13:47:15:228 CST] 00000017 SystemOut     O 2012-01-18 13:47:15,228 INFO    SaxUtils - URISyntaxException -
java.net.URISyntaxException: Illegal character in opaque part at index 113: wsjar:file:/D:/opt/sw/IBM/SDP/runtimes/base_v7/profiles/was70profile1/installedApps/wn-ila3bga9y136Node01Cell/XXX XXXXXXXX API.ear/xxxx-ws-api-12.1.war/WEB-INF/lib/xxxx-core-api-12.1.jar!/xsd/XXXXXXXXXXXService_V_1_0.xsd
	at java.net.URI$Parser.fail(URI.java:2820)
	at java.net.URI$Parser.checkChars(URI.java:2993)
	at java.net.URI$Parser.parse(URI.java:3030)
	at java.net.URI.<init>(URI.java:589)
	at org.springframework.xml.sax.SaxUtils.getSystemId(SaxUtils.java:61)
=================================
{noformat}

I modified SaxUtils to produce the logging info above (this is not a suggested solution, just some verbose logging I added to try find out what was happening). Below is the modified code that produced the log output above...

{code}
    /** Retrieves the URL from the given resource as System ID. Returns <code>null</code> if it cannot be opened. */
    public static String getSystemId(Resource resource) {
        try {
        	logger.info(""resource URL -"" + resource.getURL());
        	logger.info(""resource URL external form-"" + resource.getURL().toExternalForm());
            return new URI(resource.getURL().toExternalForm()).toString();
        }
        catch (IOException e) {
        	logger.info(""IOException -"",e);
            return null;
        }
        catch (URISyntaxException e) {
        	logger.info(""URISyntaxException -"",e);
            return null;
        }
    }
{code}",Windows/Spring 3.0.6.RELEASE/Websphere Application Server 7.0.0.15,;24/Jan/12 7:22 AM;arjen.poutsma;180,,,,,,,,,,180,,,,180,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-01-19 02:00:08.519,29131,false,arjen.poutsma(arjen.poutsma),,,,0|i03jjr:,20709,17804,,,,,,18/Jan/12 1:23 PM;davidnee;Apologies for the bad formatting...I will read the JIRA Help before I submit again.,19/Jan/12 2:00 AM;arjen.poutsma;Added formatting.,24/Jan/12 7:22 AM;arjen.poutsma;Fixed.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,
Not well formed xml causes server 500 error,SWS-748,41746,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,dl_dan,dl_dan,14/Jan/12 7:49 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,25/Jan/12 4:12 AM,2.0.3,,,,,,,2.0.4,,,,,XML,,,,0,,,,,,,,"In 2.0.3 and likely previous versions, parsing a not well formed xml causes http 500 instead of a client error, e.g bad request.

	com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	com.sun.xml.internal.messaging.saaj.util.transform.EfficientStreamingTransformer.transform(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.EnvelopeFactory.createEnvelope(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl.createEnvelopeFromSource(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.SOAPPartImpl.getEnvelope(Unknown Source)
	org.springframework.ws.soap.saaj.support.SaajUtils.getSaajVersion(SaajUtils.java:155)
	org.springframework.ws.soap.saaj.SaajSoapMessage.getSaajVersion(SaajSoapMessage.java:257)
	org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:342)
	org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init&gt;(SaajSoapMessage.java:117)
	org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:184)
	org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:58)
	org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:90)
	org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	",,;25/Jan/12 4:11 AM;arjen.poutsma;4020,,,,,,,,,,4020,,,,4020,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:33.116,29079,false,arjen.poutsma(arjen.poutsma),,,,0|i03e73:,19842,17633,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Convenience constructor for SimpleUsernamePasswordCallbackHandler,SWS-745,41577,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Trivial,Fixed,arjen.poutsma,elygre,elygre,04/Jan/12 5:40 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,24/Jan/12 7:26 AM,2.0.3,,,,,,,2.0.4,,,,,Security,,,,0,,,,,,,,"The class org.springframework.ws.soap.security.xwss.callback.SimpleUsernamePasswordCallbackHandler has two properties ""username"" and ""password"", and only a default constuctor. When using this class, I always find myself writing this code:

{code}
SimpleUsernamePasswordCallbackHandler callback = new SimpleUsernamePasswordCallbackHandler ();
callback.setUsername(username);
callback.setPassword(password);
doSomething(callback);
{code}

Of course, I'd love to write this instead, which would be a, hm, productivity booster?

{code}
doSomething(new SimpleUsernamePasswordCallbackHandler (username, password));
{code}

Hence, the request: Add the required constructors to make this work:

{code}
public class SimpleUsernamePasswordCallbackHandler extends AbstractCallbackHandler implements InitializingBean {
   ...
   public SimpleUsernamePasswordCallbackHandler ();
   public SimpleUsernamePasswordCallbackHandler (String username, String password);
   ...
}
{code}",,;24/Jan/12 7:26 AM;arjen.poutsma;180,,,,,,,,,,180,,,,180,,,,,,,,,,,,,,20/Jan/12 10:06 AM;jaminh;spring-ws-security.patch;https://jira.spring.io/secure/attachment/19324/spring-ws-security.patch,,,,,,,,,,,,,221270400,,,,,2012-01-20 10:06:57.116,28910,false,arjen.poutsma(arjen.poutsma),,,,0|i032nr:,17973,17371,,,,,,20/Jan/12 10:06 AM;jaminh;Here is a patch for the new constructor,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
JMSCorrelationID together with Oracle AQ,SWS-742,41419,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,amarakov,amarakov,20/Dec/11 2:45 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,25/Jan/12 2:58 AM,2.0.3,,,,,,,2.0.4,,,,,Core,,,,0,feature-support,third-party-compatibility,,,,,,"In org.springframework.ws.transport.jms.JmsSenderConnection.onReceiveBeforeRead() the following code set the value of messageSelector:

{code}
if (responseDestination instanceof TemporaryQueue || responseDestination instanceof TemporaryTopic) {
       messageConsumer = session.createConsumer(responseDestination);
} else {
       String messageId = requestMessage.getJMSMessageID().replaceAll(""'"", ""''"");
       String messageSelector = ""JMSCorrelationID = '"" + messageId + ""'"";
       messageConsumer = session.createConsumer(responseDestination, messageSelector);
}
{code}

If  I'm using Oracle AQ, expression (responseDestination instanceof TemporaryQueue) always returns true (See Oracle Streams Advanced Queuing Java API Reference http://docs.oracle.com/cd/B19306_01/server.102/b14291/oracle/jms/AQjmsDestination.html). Regarding this it is impossible to use JMSCorrelationID together with Oracle AQ. ","spring-ws-2.0.3.RELEASE, spring-framework-3.1.0.RC1, AQAPI12_BUILT_WITH_RDBMS_VERSION_10.2",;25/Jan/12 2:58 AM;arjen.poutsma;4200,,,,,,,,,,4200,,,,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-01-25 02:58:58.591,28751,false,arjen.poutsma(arjen.poutsma),,,,0|i02vvb:,16873,15875,,,,,,25/Jan/12 2:58 AM;arjen.poutsma;Fixed.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
"EndpointInterceptorAdapter removes ""throws Exception"" from handleFault() method defined by EndpointInterceptor",SWS-737,40087,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,klr8,klr8,10/Oct/11 12:15 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Oct/11 1:10 AM,2.0.2,,,,,,,2.0.3,,,,,Core,,,,0,,,,,,,,"EndpointInterceptor defines handleFault as follows:

boolean handleFault(MessageContext messageContext, Object endpoint) throws Exception;

EndpointInterceptorAdapter provides a default implementation like this (notice the missing ""throws Exception""):

public boolean handleFault(MessageContext messageContext, Object endpoint) {
    return true;
}

As a result subclasses of EndpointInterceptorAdapter can no longer throw exceptions from handleFault()",,;17/Oct/11 1:09 AM;arjen.poutsma;120,,,,,,,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:38.245,27647,false,arjen.poutsma(arjen.poutsma),,,,0|i00lkn:,3540,4930,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
OSGi manifest version range for javax.servlet package import too restrictive,SWS-732,39952,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,mpilquist,mpilquist,27/Sep/11 6:52 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,06/Oct/11 3:06 AM,2.0.2,,,,,,,2.0.3,,,,,,,,,0,,,,,,,,"The Import-Package statement for javax.servlet and javax.servlet.http is currently [2.4.0, 3.0.0).  Since spring-ws is compatible with Servlet 3, this should be opened to [2.4.0, 4.0.0).",,;06/Oct/11 3:05 AM;arjen.poutsma;840,,,,,,,,,0,840,,,0,840,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-10-06 03:06:35.986,12854,false,arjen.poutsma(arjen.poutsma),,,,0|i00llr:,3545,4935,,,,,,06/Oct/11 3:06 AM;arjen.poutsma;Fixed.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
CryptoFactoryBean keystore location can't resolve ClassPathResource where resource is located in a jar,SWS-726,39314,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,kyle.cronin,kyle.cronin,24/Aug/11 9:21 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Oct/11 1:30 AM,2.0.2,,,,,,,2.0.3,,,,,Security,,,,0,,,,,,,,"When using a ClassPathResource to set the keyStoreLocation property, if the resource is located in a jar file a FileNotFoundException is thrown.

{noformat}
Caused by: java.io.FileNotFoundException: class path resource [com/foo/security/foo.keystore] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/C:/views/java/jboss/server/oneforce/deploy/oba.war/WEB-INF/lib/foo-security.jar!/com/foo/security/foo.keystore
	at org.springframework.util.ResourceUtils.getFile(ResourceUtils.java:204)
	at org.springframework.core.io.AbstractFileResolvingResource.getFile(AbstractFileResolvingResource.java:52)
	at org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean.setKeyStoreLocation(CryptoFactoryBean.java:88)
{noformat}

{{org.apache.ws.security.components.crypto.AbstractCrypto}} has it's own mechanism for locating classpath resources. The following patch will fallback to the ClassPathResource path if can't be resolved to a file.

{code:java|title=org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean}
public void setKeyStoreLocation(Resource location) throws IOException {
	String resourcePath = null;
	try {
		File keyStoreFile = location.getFile();
		resourcePath = keyStoreFile.getAbsolutePath();
	} catch (IOException ioe) {
		// can't resolve to file on the file system
		// allow org.apache.ws.security.components.crypto.AbstractCrypt to resolve from resource path
		if(location instanceof ClassPathResource) {
			resourcePath = ((ClassPathResource) location).getPath();
		} else {
			throw ioe;
		}
	}
	
	this.configuration.setProperty(""org.apache.ws.security.crypto.merlin.file"", resourcePath);	
}
{code}",,;17/Oct/11 1:29 AM;arjen.poutsma;840,,,,,,,,,,840,,,,840,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-10-17 01:30:18.006,1391,false,arjen.poutsma(arjen.poutsma),,,,0|i00lmv:,3550,4940,,,,,,"17/Oct/11 1:30 AM;arjen.poutsma;Fixed, thanks for the patch!",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Wss4jSecurityInterceptor design,SWS-723,39052,,Refactoring,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,pkral,pkral,04/Aug/11 5:54 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Oct/11 1:55 AM,,,,,,,,2.0.3,,,,,,,,,1,,,,,,,,"{{Wss4jSecurityInterceptor}} implementation has design restriction making it practically imposible to extend. While working on Kerberos extension in Wss4j, I have to add new properties to configure ServicePrincipalName etc. I suggest to:

- change scope from private to protected for method {{Wss4jSecurityInterceptor#initializeRequestData(messageContext)}} for ability to access {{ReqData}} custom properties or
- make {{Wss4jHandler}} public so it make sense to use generic {{set/getOptions}} in subclasses",,;17/Oct/11 1:55 AM;arjen.poutsma;360,,,,,,,,,,360,,,,360,,,,,,,,,,,,,,18/Aug/11 2:41 PM;kyle.cronin;Wss4jSecurityInterceptor.patch;https://jira.spring.io/secure/attachment/18577/Wss4jSecurityInterceptor.patch,,,,,,,,,,,,,221270400,,,,,2011-08-18 14:41:35.199,1394,false,arjen.poutsma(arjen.poutsma),,,,0|i00lnj:,3553,4943,,,,,,"18/Aug/11 2:41 PM;kyle.cronin;There is no way to get access to {{RequestData}} through any other means and therefore forced to use the default {{WSSConfig}}. Changing the scope of {{initializeRequestData}} would allow users to inject custom {{WSSconfig}} into the {{RequestData}}. 

Attaching a patch where {{initializeRequestData}} is protected along with an additional enhancement to configure the {{WSSConfig}} for both the {{WSSecurityEngine}} and {{RequestData}}","01/Sep/11 2:21 AM;pkral;Seems to be OK, will that patch be applied to the trunk ?","17/Oct/11 1:55 AM;arjen.poutsma;Patch applied, thanks!",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,
Reloading the spring context does not refresh the MessageDispatcherServlet,SWS-718,38744,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,j.gorter,j.gorter,12/Jul/11 8:38 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Oct/11 3:18 AM,2.0.2,,,,,,,2.0.3,,,,,Core,,,,0,,,,,,,,"Our application uses a special classloader from which it can load beans dynamically. The applicationcontext is reloaded to do this. The normal DispatcherServlet has a mechanism to allow the applicationcontext to be reloaded by overriding the onRefresh method. The MessageDispatcherServlet does not do this and crashes occur when webservices are invoked. 

The class below can be used as a workaround.

{code}
public class FixedMessageDispatcherServlet
	extends MessageDispatcherServlet
{

	private boolean initializing = true;

	@Override
	protected void onRefresh(ApplicationContext context)
	{
		try {
			if (this.initializing) {
				this.initializing = false;
			} else {
				this.initFrameworkServlet();
			}
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}
{code}",,;17/Oct/11 3:17 AM;arjen.poutsma;3300,,,,,,,,,,3300,,,,3300,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-10-17 03:18:01.043,1399,false,arjen.poutsma(arjen.poutsma),,,,0|i00lon:,3558,4948,,,,,,"17/Oct/11 3:18 AM;arjen.poutsma;Fixed. MessageDispatcherServlet.onRefresh now calls the new initDefaultStrategies method, just like the normal DispatcherServlet does. ",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
MockWebServiceClient.sendRequest swallows StackTrace of exceptions thrown during request processing,SWS-714,38666,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,oakinger,oakinger,06/Jul/11 1:03 PM,09/Dec/14 8:09 AM,10/May/19 2:36 AM,17/Oct/11 3:36 AM,,,,,,,,2.0.3,,,,,,,,,0,,,,,,,,"imho there is no need to catch the exception in

    public ResponseActions sendRequest(RequestCreator requestCreator) {
        Assert.notNull(requestCreator, ""'requestCreator' must not be null"");
        try {
            WebServiceMessage request = requestCreator.createRequest(messageFactory);
            MessageContext messageContext = new DefaultMessageContext(request, messageFactory);

            messageReceiver.receive(messageContext);

            return new MockWebServiceClientResponseActions(messageContext);
        }
        catch (Exception ex) {
            fail(ex.getMessage());
            return null;
        }
    }

as this swallows any stacktrace. Why not just let the exception propagate?
",,;17/Oct/11 3:36 AM;arjen.poutsma;240,,,,,,,,,,240,,,,240,,,,,,,,,,,,,,,,,,,,,,,,,,,139276800,,,,,2011-10-17 03:38:08.828,1403,true,rubensa(rubensa),,,,0|i00lpj:,3562,4952,,,,,,"17/Oct/11 3:38 AM;arjen.poutsma;The Exception cannot propagate because that would force users to deal with it in their integration tests, which is typically not what you want.

That said, I did add some additional logging so that the stacktrace is now fully logged and not lost.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,"09/Dec/14 8:09 AM;rubensa;If you catch the exception and don't rethrow it, how am I supposed to test with an expected exception?

Supose I wan't to test a no end point call, something like this:

{code:java}
    @Test(expected = NoEndpointFoundException.class)
    public void whenWrongEndpointThenNoEndpointFoundExceptionIsThrown() {
        Source requestPayload = new StringSource(
                ""<badGetCountryRequest xmlns='http://org/eu/rubensa/ws/country'>""
                        + ""</badGetCountryRequest>"");

        mockClient.sendRequest(withPayload(requestPayload));
    }
{code}
As original exception (*NoEndpointFoundException*) is captured, the exception thrown is an *AssertionError*, not the expected one, and test fails.",,,,,,,,,,,,,,,,,,,,,
Upgrade to wss4j 1.6,SWS-711,38508,,Improvement,Resolved,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,mdiskin,mdiskin,23/Jun/11 10:09 AM,30/May/14 12:12 AM,10/May/19 2:36 AM,09/May/12 3:57 AM,2.0.2,,,,,,,2.1 RC1,,,,,,,,,4,,,,,,,,"From support issue - Reference #11620

wss4j 1.6.1 has made much improves to the WS-Security implememtation and key to us (sure others) is the work to ensure cross-implementation compliance with BSP 1.1 http://coheigea.blogspot.com/2011/03/wss4j-16-basic-security-profile-11.html.

This upgrade opens up the possibility for Spring-WS to support SAML authentication (I'll open a separate issue for that).",,;17/Oct/11 2:11 AM;arjen.poutsma;840,;08/May/12 12:47 AM;arjen.poutsma;33720,;09/May/12 3:57 AM;arjen.poutsma;59400,,,,,,,,93960,,,,93960,,,,,,,,,,,,,,02/May/12 7:59 PM;jaminh;spring-ws.patch;https://jira.spring.io/secure/attachment/19628/spring-ws.patch,,,,,,,,,,,,,156038400,,,,,2011-10-17 02:11:08.095,1406,true,vansh2k6(vansh2k6),,,,0|i00lq7:,3565,4955,http://forum.springsource.org/showthread.php?107632-When-will-WSS4J-1.6.0-be-supported,,,,,"17/Oct/11 2:11 AM;arjen.poutsma;Unfortunately, WSS4J 1.6 introduced some breaking, non-backwards compatible changes, making it non-trivial to upgrade.

Postponed to 2.1.","20/Jan/12 1:33 PM;patrickr;Yes, please upgrade. We depend on 3rd party software which now ships with WSS4J 1.6. That's a huge issue, because we're using (and want to keep using) Spring WS...","21/Jan/12 3:27 AM;subes;Spring-WS 2.0.3.RELEASE with WSS4J 1.6.4 leads to the following exception for me:

{code}
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'wssInterceptor' defined in class path resource [META-INF/ctx.integration.ws.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: org.apache.ws.security.WSSecurityEngine.getInstance()Lorg/apache/ws/security/WSSecurityEngine;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:997)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:943)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:148)
	at de.invesdwin.gemeinsam.test.TestContextLoader.loadContext(TestContextLoader.java:78)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:130)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: org.apache.ws.security.WSSecurityEngine.getInstance()Lorg/apache/ws/security/WSSecurityEngine;
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:162)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:76)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:990)
	... 39 more
Caused by: java.lang.NoSuchMethodError: org.apache.ws.security.WSSecurityEngine.getInstance()Lorg/apache/ws/security/WSSecurityEngine;
	at org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor.<init>(Wss4jSecurityInterceptor.java:121)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 41 more
{code}
","12/Apr/12 2:58 AM;ivankhoosty;FYI,

Jboss 7.1.0.Final ships with wss4j 1.5.8 and xmlsec 1.4.5

Jboss 7.1.1.Final ships with wss4j 1.6.5 and xmlsec 1.5.1 (https://issues.jboss.org/browse/JBWS-3439)

this means that any webapp using spring-ws cannot run on Jboss 7.1.1.Final, as xmlsec 1.5.1 gets loaded as part of java ee module dependency, so spring-ws bundled xmlsec 1.4.3 gets ignored... there is an api change from 1.4 to 1.5, which breaks the deployment.","02/May/12 6:37 AM;mdiskin;Hi Arjen,

I have created another approach for the wssj authenication integration using spring/spring security servlet filters. This allows for the requests to be stateless (I create the UserDetails after the SAML2 validation from the attributes provided) and able to then use the Roles (GrantedAuthority) in the spring security filter rules, etc... which was not something I could do with the springws interceptor approach. Did you want me to budndle this up under this or another case if you want to consider it?","02/May/12 7:02 AM;arjen.poutsma;@Mark

Sure, feel free to attach it to another issue. Even if I won't make it part of the main distribution, it might be helpful to other people.

Thanks!","02/May/12 7:59 PM;jaminh;I have started working on getting Spring WS to build with WSS4J 1.6.5. I have gotten to a point where everything will at least build but I haven't tried testing beyond getting timestamp validation to work. It seems like in WSS4J 1.6 they are trying to split up the securement and validation so I tried to adjust some of the callback handlers accordingly. Also something to keep in mind is the Crypto interface was changed significantly in WSS4J 1.6 so any custom Crypto implementations are probably going to break when upgrading, but I believe it still comes with the basic Merlin implementation. I will attach a patch in case other people want to try to build on that. In the meantime I will keep working on it as much as I can.","03/May/12 4:28 AM;arjen.poutsma;@jaminh: Thanks for the patch, it will certainly help.

Things are a bit tricky, however, because I don't want to force people to upgrade their wss4j version in a bug-fix release of Spring-WS (2.0.5). Forcing an upgrade would be fine for a 2.1 version of SWS, but 2.1 is still far off.

So we'll have to resort to some reflection trickery in order to make our wss4j support work for both 1.5.x and 1.6.x. We have this kind of tricks in other places as well, for instance the Quartz support in SPR. It's not easy, but hopefully it will work.","03/May/12 4:50 AM;mdiskin;Any thoughts on doing parallel releases (2.0.5,2.1) with the wss4j in the 2.1 (or 2.1rc) and moving some of the other work into a 2.2?","03/May/12 5:00 AM;arjen.poutsma;@mark: yeah, that's an option as well, but I am only willing to take that route as a last resort, after trying the reflection-based approach. It's quite uncommon for a Spring project to release a minor version with only library upgrades, and without any new features in it.","04/May/12 5:21 AM;arjen.poutsma;After some investigation, I've decided that the reflection-based approach is just too much hassle. Instead, I am going to follow Mark's suggestion, and release 2.0.5 without it (hopefully today). Shortly after that (next week, perhaps), I will push out 2.1 RC1, which will contain a fix for this issue and a couple of other library upgrades. Since 2.1 will contain library upgrades, I expect a short release cycle, and hopefully we'll see a 2.1 GA shortly after the RC. All other 2.1 M1 issues have been moved to 2.2 M1.

","04/May/12 5:29 AM;mdiskin;In the meantime I've dropped the spring-ws-security dependancy, that way I'm able to bring in the latest wss4j 1.6 and handle the SAML2 SenderVoucher in my Security filter and still use the springws 2.0.x jars.","09/May/12 3:56 AM;arjen.poutsma;I've upgraded SVN to use WSS4J 1.6, with the help of the patch provided jaminh (Thanks!). It compiles, and all tests run fine. That said, because the way WSS4J has changed internally, there are some breaking changes:

* {{SpringDigestPasswordValidationCallbackHandler}} and {{SpringPlainTestPasswordValidationCallbackHandler}} have been merged into {{SpringSecurityPasswordValidationCallbackHandler}}, which works the same way as the SpringDigestPasswordValidationCallbackHandler (i.e. supply it with a {{UserDetailsService}}).
* The {{Wss4jSecurityInterceptor}} no longer has the securementCallbackHandler property, as it's no longer used by WS4J.

Furthermore, the {{Wss4jSecurityInterceptor}} has some additional properties: enableRevocation and bspCompliant. Check the javadocs to see what these do.

I've just triggered a snapshot build, and it would be great if you guys could check it out if everything still works for you. [This page|http://static.springsource.org/spring-ws/site/downloads/snapshots.html] shows you how to get snapshots.

If everything looks good, I will release 2.1.0-RC1 this Friday (11th May) followed by the GA release the following week.",15/May/12 4:06 AM;arjen.poutsma;I've just pushed out version 2.1.0.RC1. Please give it a go and tell me if you find anything.,"18/Jun/12 5:35 AM;pkotlov;Combination of spring-ws-2.1.0 and wss4j-1.6.6 still results in this error:

{noformat}
Could not instantiate bean class [org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor]: Constructor threw exception; 
nested exception is java.lang.NoSuchMethodError: org.apache.ws.security.WSSecurityEngine.getInstance()Lorg/apache/ws/security/WSSecurityEngine;{noformat} 

Using wss4j-1.5.12 solves the problem for me. Well perhaps not for everyone... ;)
","30/May/14 12:12 AM;vansh2k6;I am using Spring-ws 2.1.4 along with wss4j 1.6.4 and getting the same problem while using wss4j 1.5.x, its working fine.

Looks like the issue still exists with wss4j 1.6.x.",,,,,,,,
Make it possible to retrieve SoapHeaderElement from SoapHeader by QName,SWS-710,38506,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,cpilsworth,cpilsworth,23/Jun/11 7:38 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Oct/11 12:46 AM,2.0.2,,,,,,,2.0.3,,,,,Core,,,,0,soap,soapheader,soapheaderelement,,,,,"I would like to retrieve a SoapHeaderElement from a SoapHeader using it's QName.  At the moment, it seems the api only allows for this to be retrieved by through iteration using the SoapHeader.examine*() methods.

Currently, getting an individual element looks something like this:
{code:java}
Iterator<SoapHeaderElement> headerElements = soapHeader.examineAllHeaderElements();
while(headerElements.hasNext()) {
  SoapHeaderElement elem = headerElements.next();
  if (QNAME_MESSAGE_ID.equals(elem.getName())) {
    return elem.getText();
  }
}    
{code}

It would be good to be able to access header elements directly, like so:
{code:java}
return soapHeader.getHeaderElement(qName);
{code}",,;17/Oct/11 12:46 AM;arjen.poutsma;1200,,,,,,,,,,1200,,,,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:25.714,1407,false,arjen.poutsma(arjen.poutsma),,,,0|i00lqf:,3566,4956,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Jaxp13XPathTemplate should support StreamSources with only a systemId if it's a valid URL,SWS-706,37681,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,jkuipers,jkuipers,28/Apr/11 11:47 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,19/May/11 3:28 AM,2.0.1,,,,,,,2.0.2,,,,,XML,,,,0,,,,,,,,"I ran into this while working with Spring Integration: that supports a File-based payload to be unmarshalled which results in a StreamSource with neither a Reader nor an InputStream, which means the Jaxp13XPathTemplate cannot be used with that Source. It's easy enough to try to read from the systemId if it's a valid URL, which it is in this case.
I've patched the template and tested that this indeed does the trick. It would be great if this patch could be added to the next release, since I'll otherwise have to ship training material with the patched version. ",,;19/May/11 3:27 AM;arjen.poutsma;4440,,,,,,,,,0,4440,,,0,4440,,,,,,,,,,,,,,28/Apr/11 11:47 AM;jkuipers;Jaxp13XPathTemplate.diff;https://jira.spring.io/secure/attachment/18095/Jaxp13XPathTemplate.diff,,,,,,,,,,,,,221270400,,,,,2011-05-19 03:28:11.188,1411,false,arjen.poutsma(arjen.poutsma),,,,0|i00lrb:,3570,4960,,,,,,19/May/11 3:28 AM;arjen.poutsma;Fixed.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
sws:annotation-driven does not pick up @Endpoint annotations on classes that are JDK proxies,SWS-702,37272,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Fixed,arjen.poutsma,klr8,klr8,04/Apr/11 5:20 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,18/Oct/11 4:14 AM,2.0.1,,,,,,,2.0.3,,,,,Core,,,,0,,,,,,,,"We essentially have an app context loaded by the MessageDispatcherServlet that does the following:

{code:xml}
<bean id=""ws.myWebService"" class=""foo.bar.MyWebServiceImpl""/>
<aop:aspectj-autoproxy />
<bean class=""foo.bar.MyCustomAspect""/>
<sws:annotation-driven/>
{code}

The MyWebServiceImpl looks like this:

{code}
@Endpoint
public class MyWebServiceImpl implements MyWebService {

  @PayloadRoot(namespace = ""http://my.foo.bar"", localPart = ""myWebService"")
  @MyCustomAnnotation // picked up by MyCustomAspect to proxy this class
  @ResponsePayload
  public MyResponseDocument getFactInfo(@RequestPayload MyRequestDocument request) {
    ...
  }
}
{code}

As a result of the @MyCustomAnnotation, the MyWebServiceImpl will be JDK proxied. Because of this the @Endpoint is not picked up. If we remove the custom aspect the @Endpoint is indeed picked up.

For now, I have added the following to the app context as a workaround:
{code:xml}
<aop:config proxy-target-class=""true""/>
{code}

Note that this seems to be similar to SWS-262",SWS 2.0.1.RELEASE,;19/May/11 5:55 AM;arjen.poutsma;1020,;18/Oct/11 4:14 AM;arjen.poutsma;14580,,,,,,,,0,15600,,,0,15600,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-04-04 05:39:18.395,1414,false,arjen.poutsma(arjen.poutsma),,,,0|i00lrz:,3573,4963,,,,,,"04/Apr/11 5:39 AM;arjen.poutsma;Hey Erwin,

Changing back to unassigned, that's the way I track issues I have to take a look at.","19/May/11 5:55 AM;arjen.poutsma;I can't seem to reproduce this. I have a test case which reproduces this scenario, but it works for me (with or without using CGlib proxies).

See https://src.springframework.org/svn/spring-ws/trunk/core/src/test/java/org/springframework/ws/server/endpoint/mapping/PayloadRootAnnotationMethodEndpointMappingTest.java and the related app context: https://src.springframework.org/svn/spring-ws/trunk/core/src/test/resources/org/springframework/ws/server/endpoint/mapping/applicationContext.xml.

Let me know what I am missing.","25/May/11 11:25 PM;klr8;Arjen,

I think you missed the ""implements MyWebService"" part.
In your test the OtherBean does not implement an interface that defines the ""void doIt()"" method. As a result JDK proxying is never even considered (it only works with interfaces) and you get the effects of ""aop:config proxy-target-class=""true"""" automatically.","18/Oct/11 4:20 AM;arjen.poutsma;I hope I finally fixed this.

Take a look at https://src.springframework.org/svn/spring-ws/trunk/core/src/test/java/org/springframework/ws/server/endpoint/mapping/JdkProxyRegistrationTest.java and the related app context: https://src.springframework.org/svn/spring-ws/trunk/core/src/test/resources/org/springframework/ws/server/endpoint/mapping/jdk-proxy-registration.xml

Note, however, that the annotations have to be on the interface, and cannot only be on the implementing class. This is due to the fact that the AOP target might change at runtime, and it would be very inefficient to introspect the endpoint each time a web service request comes in. This is consistent with Spring MVC (see SPR-5084).",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
XomPayloadMethodProcessor is not added methodReturnValueHandlers in DefaultMethodEndpointAdapter,SWS-699,36998,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,sannies,sannies,24/Mar/11 5:38 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,28/Mar/11 2:31 AM,2.0 GA,,,,,,,2.0.1,,,,,Core,XML,,,0,,,,,,,,"{code:java}
      private void initMethodReturnValueHandlers() {
            ...
            if (isPresent(XOM_CLASS_NAME)) {
                methodArgumentResolvers.add(new XomPayloadMethodProcessor());
            }
            ...
      }
{code}

as you can see the XomPayloadMethodProcessor is added to the methodArgumentResolvers and not to the methodReturnValueHandlers. 

To fix the problem just replace the methodArgumentResolvers.add(...) with methodReturnValueHandlers.add(...) 
",all,;28/Mar/11 2:31 AM;arjen.poutsma;360,;28/Mar/11 2:31 AM;arjen.poutsma;360,,,,,,,,0,720,,,0,720,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-03-28 02:31:57.736,1417,false,arjen.poutsma(arjen.poutsma),,,,0|i00lsn:,3576,4966,,,,,,28/Mar/11 2:31 AM;arjen.poutsma;Fixed. Thanks for spotting this!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
EndpointExceptionResolver is not registered automatically when used together with <sws:annotation-driven/> tag,SWS-698,36835,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,griff777,griff777,15/Mar/11 6:56 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,22/Mar/11 4:26 AM,2.0 GA,,,,,,,2.0.1,,,,,,,,,0,,,,,,,,"After removing <sws:annotation-driven/> EndpointExceptionResolver starts to work. Whats more - it looks like that <sws:annotation-driven/> tag is not needed as anotation based Endpoints works without it.
Additional details in the Spring forum post.

",,;22/Mar/11 4:21 AM;arjen.poutsma;6000,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-03-22 02:27:28.05,1418,false,arjen.poutsma(arjen.poutsma),,,,0|i00lsv:,3577,4967,http://forum.springsource.org/showthread.php?p=351055&posted=1#post351055,,,,,"22/Mar/11 2:27 AM;arjen.poutsma;Indeed, annotation-based endpoints work without it, but the use of the XSD namespace will give you some extras (like marshaller autodetection, for isntance).","22/Mar/11 4:26 AM;arjen.poutsma;This should be fixed now: the <sws:annotation-driven/> tag does not register any exception resolvers anymore. It used to, and thus overrided the defaults in SoapMessageDispatcher.properties and also disabled autodetected exception resolvers, which is what you ran into.

Can you please try a snapshot (as of tonight) and see if it works for you? I'd like to push out a 2.0.1 release later this week, containing this fix.

Cheers, Arjen","24/Mar/11 12:04 AM;griff777;Works for me, Thanks!",29/Mar/11 2:29 AM;arjen.poutsma;Corrected spelling in Summary,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
Print SOAP message if validation fails,SWS-694,36402,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,dart0,dart0,18/Feb/11 10:53 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,21/Mar/11 4:28 AM,2.0 GA,,,,,,,2.0.1,,,,,Test,,,,0,,,,,,,,"When a validation in a RequestMatcher or ResponseMatcher fails, it's sometimes hard to find out what went wrong. If the AssertionError contained the message, it would have been easier to detect the issue.

Patch attached",,;21/Mar/11 4:28 AM;arjen.poutsma;4920,,,,,,,,,0,4920,,,0,4920,,,,,,,,,,,,,,18/Feb/11 10:53 AM;dart0;error-message.patch;https://jira.spring.io/secure/attachment/17629/error-message.patch,,,,,,,,,,,,,221270400,,,,,2011-03-21 04:30:30.755,1421,false,arjen.poutsma(arjen.poutsma),,,,0|i00ltj:,3580,4970,,,,,,"21/Mar/11 4:30 AM;arjen.poutsma;Hi Lukas,

I've committed the patch with some minor changes, including the capability to add a label, indicating what the source is actually supposed to be. I've also made the AssertionError subclass a top-level class, so that people can specifically test for it.

Could you please take a look at the current SVN and see if everything is in order?

Cheers,

Arjen",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Annotation-driven tag does not support ws-addressing @Action,SWS-691,36226,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Fixed,arjen.poutsma,willemvd,willemvd,08/Feb/11 3:51 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,22/Mar/11 5:00 AM,2.0 GA,,,,,,,2.0.1,,,,,Core,,,,0,,,,,,,,"Objects annotated with @Action should be picked up by the sws:annotation-driven tag (triggered with AnnotationActionEndpointMapping), but this fails because the AnnotationDrivenBeanDefinitionParser does not register all possible endpoint mappings in the registerEndpointMappings method.

Ws-addressing support is not working without explicit adding the AnnotationActionEndpointMapping in the Spring context.

Workaround:

Add the following line to the Spring context xml:
<bean class=""org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping"" />

","Windows XP, IBM WebSphere 7",;22/Mar/11 5:00 AM;arjen.poutsma;360,,,,,,,,,0,360,,,0,360,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-03-22 05:01:22.36,1424,false,arjen.poutsma(arjen.poutsma),,,,0|i00lu7:,3583,4973,http://forum.springframework.org/showthread.php?t=102326,,,,,22/Mar/11 5:01 AM;arjen.poutsma;Fixed.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Manifest files in 2.0.0 release are incorrect,SWS-681,35893,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,casey.hadden,casey.hadden,17/Jan/11 10:27 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,21/Mar/11 4:59 AM,2.0 GA,,,,,,,2.0.1,,,,,Core,,,,5,,,,,,,,"The manifest files in the 2.0 release jars appear incorrect.

The spring-ws-core jar does not include OSGi information, while the spring-ws-security jar and others reference the 2.0.0.M4 release.

spring-ws-core-2.0.0.RELEASE.jar/META-INF/MANIFEST.MF :
Manifest-Version: 1.0
Archiver-Version: Plexus Archiver
Created-By: Apache Maven
Built-By: arjen
Build-Jdk: 1.6.0_22

spring-ws-security-2.0.0.RELEASE.jar/META-INF/MANIFEST.MF:
Manifest-Version: 1.0
Archiver-Version: Plexus Archiver
Created-By: Apache Maven
Built-By: arjen
Build-Jdk: 1.6.0_22
Export-Package: org.springframework.ws.soap.security;version=""2.0.0.M4""
[snip]
Bundle-Vendor: SpringSource
Bundle-Version: 2.0.0.M4
Tool: Bundlor 1.0.0.RELEASE
Bundle-Name: Spring Web Services SOAP Security
",,;21/Mar/11 4:56 AM;arjen.poutsma;1440,,,,,,,,,0,1440,,,0,1440,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-02-13 04:59:56.649,1433,false,arjen.poutsma(arjen.poutsma),,,,0|i00lw7:,3592,4982,,,,,,"13/Feb/11 4:59 AM;rkettelerij;This turns out to be an issue for Apache Camel, see https://issues.apache.org/jira/browse/CAMEL-3659.","15/Mar/11 8:00 AM;david_geary;Also ensure that javax package imports do not include version numbers (or are verison ""0"") where possible (ie for packages now part of java se)

eg in spring ws 1.5.9 the imports are (extract from manifest)

javax.activation;version=""1.1"",
javax.servlet,javax.servlet.http,javax.wsdl;resolution:=optional,
javax.wsdl.extensions;resolution:=optional,
javax.wsdl.extensions.schema;resolution:=optional,
javax.wsdl.extensions.soap;resolution:=optional,
javax.wsdl.extensions.soap12;resolution:=optional,
javax.wsdl.factory;resolution:=optional,
javax.wsdl.xml;resolution:=optional,
javax.xml.namespace,
javax.xml.parsers,
javax.xml.soap;resolution:=optional,
javax.xml.stream;version=""1.0"",
javax.xml.stream.events;version=""1.0"",
javax.xml.stream.util;version=""1.0"",
javax.xml.transform,
javax.xml.transform.dom,
javax.xml.transform.sax,
javax.xml.transform.stream

whereas in spring ws 2.0.0.M1 more versions are referenced ie 

javax.activation;version=""[1.1.0, 2.0.0)"",
javax.servlet;version=""[2.4.0, 3.0.0)"",
javax.servlet.http;version=""[2.4.0, 3.0.0)"",
javax.wsdl;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.schema;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.soap;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.soap12;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.factory;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.xml;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.xml.namespace;version=""0"",
javax.xml.parsers;version=""0"",
javax.xml.soap;version=""[1.1.0, 2.0.0)"";resolution:=""optional"",
javax.xml.stream;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.stream.events;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.stream.util;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.transform;version=""0"",
javax.xml.transform.dom;version=""0"",
javax.xml.transform.sax;version=""0"",
javax.xml.transform.stream;version=""0"",
javax.xml.xpath;version=""0"",

compared to core spring (3.0.5) where the imports are just 

javax.xml.namespace;version=""0"";resolution:=""optional"",
javax.xml.stream;version=""0"";resolution:=""optional"",
javax.xml.stream.events;version=""0"";resolution:=""optional"",
javax.xml.stream.util;version=""0"";resolution:=""optional"",
javax.xml.transform;version=""0"";resolution:=""optional"",
javax.xml.transform.sax;version=""0"";resolution:=""optional"",
javax.xml.transform.stax;version=""0"";resolution:=""optional""

Since spring ws currently forces the version, to get the spring ws bundles resolved you need to install additional bundles (eg javax.xml.stream) but even then this will cause a conflict with core spring which gets wired to the underlying JRE javax classes.

Not having the version number allows the everything to pick up the underlying JRE javax classes.","21/Mar/11 4:59 AM;arjen.poutsma;This should be fixed now.

I've uploaded a new snapshot for you to verify. Could you please download this snapshot and see if the manifests are correct now?","21/Mar/11 10:12 AM;david_geary;Seems to be fixed, tested on Karaf - the snapshot bundles install and resolve now.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
jms 1.1 dependency jar - change to freely available jar in M2 Central,SWS-678,35703,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Critical,Won't Fix,arjen.poutsma,joerg.bellmann,joerg.bellmann,04/Jan/11 3:05 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Jan/11 5:00 AM,2.0 RC2,,,,,,,2.0 GA,,,,,Core,Samples,,,0,,,,,,,,"Tried to build after checkout gives following output:
{code}
ERROR] Failed to execute goal on project spring-ws-support: Could not resolve dependencies for project org.springframework.ws:spring-ws-support:jar:2.0.0-RC2: The following artifacts could not be resolved: javax.jms:jms:jar:1.1, javax.ejb:ejb:jar:2.1: Could not find artifact javax.jms:jms:jar:1.1 in central (http://repo1.maven.org/maven2) -> [Help 1]
{code}

Use the following for jms-dependency:
{code}
<dependency>
    <groupId>org.apache.geronimo.specs</groupId>
    <artifactId>geronimo-jms_1.1_spec</artifactId>
    <version>1.1.1</version>
</dependency>
{code}","Ubuntu, maven 3.0.1, jdk 1.6.0_22",;05/Jan/11 5:01 AM;arjen.poutsma;5460,,,,,,,,,0,5460,,,0,5460,,,,,,,,,,,,,,04/Jan/11 3:18 PM;joerg.bellmann;SWS-678.patch;https://jira.spring.io/secure/attachment/17494/SWS-678.patch,,,,,,,,,,,,,221270400,,,,,2011-01-04 15:12:29.794,1436,false,arjen.poutsma(arjen.poutsma),,,,0|i00lwv:,3595,4985,,,,,,"04/Jan/11 3:12 PM;arjen.poutsma;We prefer to use the javax.* group ids in maven, as this is what Maven recommends. I understand that it can be a bit cumbersome to download & install them manually.",04/Jan/11 3:18 PM;joerg.bellmann;With respect to [SWS-644] this patch only replaces the jms dependencies.,"04/Jan/11 3:52 PM;joerg.bellmann;I would not say that Maven recommends this. If you refer to [this site|http://maven.apache.org/guides/mini/guide-coping-with-sun-jars.html] all I read is how to do it when I use _Sun's_ artifacts. And that Apache isn't allowed to distribute them from ibiblio because these artifacts fall under a *bad license* for oss. And that it seems there are no naming conventions for these artifacts at Sun.

Conclusion: Don't use these artifacts. Use the artifacts for all JEE - APIs from Apache. They are [available here |http://mvnrepository.com/artifact/org.apache.geronimo.specs] and in M2 Central and have the *right license*. Running _mvn_ on a fresh SWS-checkout will resolve them and don't break the build.

All fine.","05/Jan/11 5:00 AM;arjen.poutsma;Let me try and explain my reasoning for using the javax.* group ids. We want to use one consistent approach, so it's either going to be javax.* or org.apache.gernimo.specs for all JEE specs (jms, mail, activation, ejb, etc.). The problem is that some of the Spring-WS dependencies depend on the javax.* jars, so even if we use the geronimo specs, we still end up with javax.* on the classpath (unless we disable those transitive dependencies with exclusions, which is another world of pain). Finally, we also depend on some SUN/Oracle-specific extensions of the JavaMail jar (to enable IMAP IDLE support). I could not find these extensions in the geronimo specs.

So, once again, I understand that it can be a pain to download & install the javax.* jars manually, but I think the current solution is the best, though that's not saying much.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
XwssSecurityInterceptor in combination with <sws:interceptors>,SWS-675,35661,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,03/Jan/11 3:03 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Jan/11 7:05 AM,2.0 RC2,,,,,,,2.0 GA,,,,,Core,,,,0,,,,,,,,"The following config:

{code:xml}

<sws:interceptors>
<bean id=""wsSecurityInterceptor"" class=""org.springframework.ws.soap.security.xwss.X wsSecurityInterceptor"">
<description>
This interceptor validates incoming messages according to the policy defined in
'securityPolicy.xml'.
The policy defines that all incoming requests must have a UsernameToken with a password digest
in it.
The actual authentication is performed by the Spring callback handler.
</description>
<property name=""secureResponse"" value=""false""/>
<property name=""policyConfiguration""
value=""/WEB-INF/spring/securityPolicy.xml""/>
<property name=""callbackHandlers"">
<list>
<bean class=""org.springframework.ws.soap.security.xwss.c allback.SpringDigestPasswordValidationCallbackHand ler"">
<property name=""userDetailsService"" ref=""securityService""/>
<property name=""userCache"" ref=""userCache""/>
</bean>
<bean class=""com.xifin.security.UserValidationCallbackHa ndler"">
<property name=""userCache"" ref=""userCache""/>
</bean>
</list>
</property>
</bean>

</sws:interceptors>
{code}

results in the following exception:



{noformat}
2010-12-30 16:35:37,699 DEBUG SoapMessageDispatcher[handleHeaders() line 120] - Handling MustUnderstand header {http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}Security
2010-12-30 16:35:37,702 WARN SoapMessageDispatcher[createMustUnderstandFault() line 162] - Could not handle mustUnderstand headers: {http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}Security. Returning fault
2010-12-30 16:35:37,704 DEBUG sent[receive() line 181] - Sent response [SaajSoapMessage http://schemas.xmlsoap.org/soap/envelope/}Fault] for request [SaajSoapM
{noformat}",,;06/Jan/11 5:05 AM;arjen.poutsma;12960,,,,,,,,,0,12960,,,0,12960,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1439,false,arjen.poutsma(arjen.poutsma),,,,0|i00lxj:,3598,4988,http://forum.springsource.org/showpost.php?p=336815&postcount=7,,,,,05/Jan/11 7:05 AM;arjen.poutsma;Fixed!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Allow MarshallingPayloadMethodProcessor to have a null marshaller or unmarshaller,SWS-672,35480,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,swanjr,swanjr,17/Dec/10 8:48 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,20/Dec/10 1:25 AM,2.0 RC1,,,,,,,2.0 RC2,,,,,Core,,,,0,,,,,,,,"With Spring 2.0 I like how it allows you to configure different binding mechanisms and marshallers for the request and response to a single operation. In my case, I am using the @XPathParam configuration to parse the request to my operation and using a custom Stax marshaller for the response. Below is my custom marshaller configuration in my spring context file. As you can see below, I have no Unmarshaller configured on MarshallingPayloadMethodProcessor because I am not doing any unmarshalling in my service using the Unmarshaller interface. The issue is that MarshallingPayloadMethodProcessor requires both a marshaller and unmarshaller be set and will throw an exception if they are not both set. 

Would it possible to change the MarshallingPayloadMethodProcessor's validation logic so it only checks that at least a marshaller or an unmarshaller is set instead of always requiring both?
    

    <bean class=""org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter"">
        <property name=""methodReturnValueHandlers"">
            <list>
                <bean class=""org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor"">
                    <property name=""marshaller"" ref=""pingMarshaller"" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id=""pingMarshaller"" class=""...","Spring-ws 2.0.0-RC1, Java 5.0",;20/Dec/10 1:25 AM;arjen.poutsma;1020,,,,,,,,,0,1020,,,0,1020,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:36.524,1442,false,arjen.poutsma(arjen.poutsma),,,,0|i00ly7:,3601,4991,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
sws:interceptors,SWS-670,35472,35441,Sub-task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,17/Dec/10 12:31 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,20/Dec/10 1:05 AM,,,,,,,,2.0 RC2,,,,,,,,,0,,,,,,,,,,;20/Dec/10 1:04 AM;arjen.poutsma;17880,,,,,,,,,0,17880,,,0,17880,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1444,false,arjen.poutsma(arjen.poutsma),,,,0|i00lyn:,3603,4993,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Tutorial requires transformWsdlLocations true,SWS-664,35336,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,sylvestris,sylvestris,09/Dec/10 2:25 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,10/Dec/10 2:17 AM,1.5.9,,,,,,,2.0 RC2,,,,,Documentation,,,,0,,,,,,,,"Working through the tutorial, section 3.7 ""Publishing the WSDL"" 

<quote>
We use a a relative URI and we instruct the framework to transform it dynamically to an absolute URI.
</quote>

I have found out by trial and error that this only works if the following is set in web.xml

  <init-param>
    <param-name>transformWsdlLocations</param-name>
    <param-value>true</param-value>
  </init-param>

However, this is only mentioned in section 5.3.1.1 later on in the documentation.
",,;10/Dec/10 2:17 AM;arjen.poutsma;540,,,,,,,,,0,540,,,0,540,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:45.697,1450,false,arjen.poutsma(arjen.poutsma),,,,0|i00lzz:,3609,4999,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Support for UriEndpointMapping in server-side test,SWS-662,35159,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Won't Fix,arjen.poutsma,dart0,dart0,01/Dec/10 8:13 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,19/May/11 5:18 AM,2.0 RC1,,,,,,,2.0.2,,,,,Test,,,,0,,,,,,,,Currently the server-side testing framework supports only payload based endpoint mapping. It's not easy to test services that are configured by UriEndpointMapping ,,;19/May/11 5:09 AM;arjen.poutsma;540,,,,,,,,,0,540,,,0,540,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2011-05-19 05:18:38.022,1451,false,arjen.poutsma(arjen.poutsma),,,,0|i00m07:,3610,5000,,,,,,"19/May/11 5:18 AM;arjen.poutsma;I am not sure this would be a good thing to add, for two reasons: first, I don't consider using the UriEndpointMapping a best practice, because it's transport specific. More importantly, there currently is no annotation-based version of the UriEndpointMapping, and I don't plan to add one. As SWS is moving more and more to a annotation-based programming model, adding URI-based mapping support to the server-side test module is a bit strange.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Make sure samples are included in release,SWS-653,34828,,Task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,11/Nov/10 1:56 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,13/Dec/10 2:39 AM,,,,,,,,2.0 RC2,,,,,,,,,0,,,,,,,,,,;13/Dec/10 2:39 AM;arjen.poutsma;960,,,,,,,,,0,960,,,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1459,false,arjen.poutsma(arjen.poutsma),,,,0|i00m1z:,3618,5008,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Add documentation for testing framework,SWS-651,34697,27431,Sub-task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,05/Nov/10 4:38 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,09/Nov/10 7:40 AM,,,,,,,,2.0 RC1,,,,,Documentation,,,,0,,,,,,,,,,;10/Nov/10 1:49 AM;arjen.poutsma;57600,,,,,,,,,0,57600,,,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1461,false,arjen.poutsma(arjen.poutsma),,,,0|i00m2f:,3620,5010,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
AxiomSoapMessageFactory does not provide way to set properties on XMLInputFactory,SWS-650,34648,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,msqr,msqr,02/Nov/10 11:41 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,03/Nov/10 2:26 AM,1.5.9,,,,,,,2.0 RC1,,,,,,,,,0,,,,,,,,"The AxiomSoapMessageFactory class instantiates an internally-only accessible XMLInputFactory in its constructor like this:

{{inputFactory = XMLInputFactory.newInstance();}}

I would like to be able to turn text coalescing off to be able to handle very large text element content (i.e. base-64 encoded binary data) but without turning off coalescing the JVM will quickly run out of memory.

A way to configure the XMLInputFactory properties, for example to be able to specify a Map<String, Object> configurable property to pass to

{{inputFactory.setProperty(key, value);}}

There are many useful properties that can be configured:

http://woodstox.codehaus.org/javadoc/stax-api/1.0/javax/xml/stream/XMLInputFactory.html",,;03/Nov/10 2:25 AM;arjen.poutsma;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-11-03 02:26:24.772,1462,false,arjen.poutsma(arjen.poutsma),,,,0|i00m2n:,3621,5011,,,,,,"03/Nov/10 2:26 AM;arjen.poutsma;I've added a createXmlInputFactory() method, which you can override in a subclass to customize the XMLInputFactory.","03/Nov/10 1:32 PM;msqr;Thanks, Arjen, but I wonder why we need to subclass just to configure these properties? I think having a createXMLInputFactory() method is useful, of course, but to make it easier to use without needing to subclass could we have a configurable Map<String, Object> property that this class can use?",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
Document Spring-WS Security exception handling,SWS-648,34597,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,hurragutt,hurragutt,01/Nov/10 2:37 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,10/Nov/10 2:27 AM,1.5.7,2.0 M3,,,,,,1.5.10,2.0 RC1,,,,Security,,,,0,,,,,,,,"In [SWS-549|https://jira.springframework.org/browse/SWS-549], the exceptionHandler property was introduced into the {{AbstractWSSecurityInterceptor.}}
This creates an inconsistency with the overall exceptionhandling architecture in Spring WS.

Instead of introducing the EndpointExceptionResolver in this Interceptor, would it not be better to just let the exception flow up to the MessageDispatcher, where the resolvers already are configured (with sensible defaults)

And as this is not documented anywhere unlike the exception resolving in the MessageDispatcher (http://static.springsource.org/spring-ws/sites/1.5/reference/html/server.html#server-endpoint-exception-resolver), it is too easy to miss out on or forget this extra configuration step.

In my opinion this could be done for both the client and endpoint handleRequest/handleResponse methods by just removing the catch clauses.
I would be happy to contribute a patch for this if needed.
",,;10/Nov/10 2:23 AM;arjen.poutsma;2040,;10/Nov/10 2:27 AM;arjen.poutsma;2280,,,,,,,,0,4320,,,0,4320,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-11-01 03:08:50.976,1464,false,arjen.poutsma(arjen.poutsma),,,,0|i00m33:,3623,5013,,,,,,"01/Nov/10 3:08 AM;arjen.poutsma;The problem here is that we'd like any security exception to result in a security-specific SOAP Fault by default. We can't do that in the default configuration of the MessageDispatcher (or exception resolvers), since the specific exceptions (WsSecurityValidationException and WsSecurityFaultException) are part of the spring-ws-security module. 

So I agree that this is architecturally inconsistent, but I don't see any nice way out. Also note that we can't break backwards compatibility here.",01/Nov/10 3:09 AM;arjen.poutsma;Closing as Won't Fix for now.,"01/Nov/10 3:29 AM;hurragutt;In that case, I suggest that the documentation around exception handling should be improved.",01/Nov/10 4:10 AM;arjen.poutsma;Updated issue to reflect documentation is required.,"01/Nov/10 4:11 AM;arjen.poutsma;Agreed, I've reopened the issue (& edited it accordingly).",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,
PayloadValidatingInterceptor throws IllegalArgumentException when passed a schema collection,SWS-647,34015,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,sah5,sah5,25/Oct/10 3:01 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,25/Jan/12 1:36 AM,1.5.9,,,,,,,2.0.4,,,,,,,,,0,,,,,,,,"When I configure the PayloadValidatingInterceptor to refer to a CommonsXsdSchemaCollection, I get the following error when my web service is invoked:

{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatingInterceptor' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
	at javax.servlet.GenericServlet.init(GenericServlet.java:241)
	at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
	at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
	at weblogic.servlet.internal.StubLifecycleHelper.(StubLifecycleHelper.java:48)
	at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1338)
	... 33 more
{noformat}

-------------------------

Here's my spring bean config:

{code:xml}
    <bean id=""validatingInterceptor"" class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
        <property name=""xsdSchemaCollection"" ref=""schemaCollection"" />
        <property name=""validateRequest"" value=""true"" />
        <property name=""validateResponse"" value=""true"" />
    </bean>

    <bean id=""schemaCollection"" class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"">
        <property name=""xsds"">
            <list>
                <value>classpath:schemas/CommonTypes.xsd</value>
                <value>classpath:schemas/TakeService.xsd</value>
            </list>
        </property>
        <property name=""inline"" value=""true"" />
    </bean>
{code}
------------------------

The workaround is to explicit set the ""schemas"" property, thus duplicating the XSD paths in the config (which is not ideal):
{code:xml}
    <bean id=""validatingInterceptor"" class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
        <property name=""schemas"">
            <list>
                <value>classpath:schemas/CommonTypes.xsd</value>
                <value>classpath:schemas/TakeService.xsd</value>
            </list>
        </property>
        <property name=""validateRequest"" value=""true"" />
        <property name=""validateResponse"" value=""true"" />
    </bean>
{code}

",,;25/Jan/12 1:36 AM;arjen.poutsma;720,,,,,,,,,,720,,,,720,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-10-26 02:38:05.88,1465,false,arjen.poutsma(arjen.poutsma),,,,0|i00m3b:,3624,5014,,,,,,26/Oct/10 2:38 AM;arjen.poutsma;Added formatting,"26/Oct/10 2:47 AM;arjen.poutsma;Can you provide the full stack trace, please, including all the nested exceptions? I can't see where the exception is thrown from.","26/Oct/10 8:02 AM;sah5;No problem, here it is:

{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatingInterceptor' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
        at javax.servlet.GenericServlet.init(GenericServlet.java:241)
        at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
        at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
        at weblogic.servlet.internal.StubLifecycleHelper.<init>(StubLifecycleHelper.java:48)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)

Caused By: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
        at javax.servlet.GenericServlet.init(GenericServlet.java:241)
        at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
        at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
        at weblogic.servlet.internal.StubLifecycleHelper.<init>(StubLifecycleHelper.java:48)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)
{noformat}
","26/Oct/11 1:05 PM;ayala8424;I was having this problem using glassfish as a server, the error was because glassfish was installed in the following path: 

C:\Documents and Settings\user\My Documents\glassfish

The problem is the space in ""My documents"", to fix this error I change the location of the server for example C:\glassfish.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
Create TransformerHelper class,SWS-643,33447,,New Feature,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,21/Sep/10 6:47 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,21/Sep/10 6:49 AM,,,,,,,,2.0 RC1,,,,,XML,,,,0,,,,,,,,"Smart folk say that composition is better than inheritance ;). So we should probably get rid of TransformerObjectSupport, and introduce a TransformerHelper.",,;21/Sep/10 6:49 AM;arjen.poutsma;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1469,false,arjen.poutsma(arjen.poutsma),,,,0|i00m47:,3628,5018,,,,,,21/Sep/10 6:49 AM;arjen.poutsma;Done,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Make sentMessageTracingLogger independent from receivedMessageTracingLogger,SWS-641,33375,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,saemmy,saemmy,16/Sep/10 5:36 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,17/Sep/10 3:18 AM,2.0 M3,,,,,,,1.5.10,2.0 RC1,,,,Core,,,,0,,,,,,,,"sentMessageTracingLogger logs the WebService request only correct, if receivedMessageTracingLogger is set to TRACE level. Otherwise, the WebService request will be logged as empty String.

Therefore it is not possible to log the WebService request message only once. WebService request message is either logged twice (if sentMessageTracingLogger AND receivedMessageTracingLogger both are set to LogLevel.TRACE) or WebService request message is never logged (for all other LogLevels of sentMessageTracingLogger and receivedMessageTracingLogger).",,;17/Sep/10 3:13 AM;arjen.poutsma;180,,,,,,,,1800,1620,180,10%,1800,1620,180,,,,,,,,,,,,,,16/Sep/10 6:53 AM;saemmy;MessageDispatcher.diff;https://jira.spring.io/secure/attachment/17110/MessageDispatcher.diff,,,,,,,,,,,,,221270400,,,,,2010-09-17 03:18:07.221,1471,false,arjen.poutsma(arjen.poutsma),,,,0|i00m4n:,3630,5020,,,,,,16/Sep/10 6:53 AM;saemmy;Diff for suggested code change added. I think that´s a really small code change and it would be great if it will be integrated into Spring-Ws 2.0,"17/Sep/10 3:18 AM;arjen.poutsma;Fixed, both in 2.0 and 1.5 branch",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
"evaluateAsBoolean returns true for node with text content ""false""",SWS-640,33020,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,djudd,djudd,27/Aug/10 3:15 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,01/Sep/10 5:18 AM,1.5.8,,,,,,,2.0 RC1,,,,,XML,,,,0,,,,,,,,"The method Jaxp13XPathTemplate.evaluateAsBoolean returns true if the element selected by the expression exists, regardless of its contents. The text contents can be empty, ""false"", or ""WTF"", and evaluateAsBoolean will return true. 

This does not appear to match its Javadoc, which says: ""Evaluates the given expression as a boolean. Returns the boolean evaluation of the expression, or false if it is invalid."" The very similar method evaluateAsDouble has nearly identical Javadoc: ""Evaluates the given expression as a double. Returns the evaluation of the expression, or Double.NaN if it is invalid."" - but evaluateAsDouble returns the actual contents of the text node. If evaluateAsBoolean is really meant to mean, ""doesExpressionSelectAnything"", it should be renamed.

Below is a unit test that demonstrates the problem. The second assert fails.

The problem also occurs when using a WSDL which defines aFlag as type ""xs:boolean"". And, it also occurs with JaxenXPathTemplate. However, I have not seen it using sources other than DOMSource.

{code}
package com.yodle.misc;

import static org.junit.Assert.*;

import javax.xml.transform.dom.DOMSource;

import org.junit.Test;
import org.springframework.ws.server.endpoint.AbstractDomPayloadEndpoint;
import org.springframework.xml.transform.StringSource;
import org.springframework.xml.xpath.Jaxp13XPathTemplate;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class BugDemo {

	final String request =
		""<someRequest> "" +		
		""	<aDouble>123</aDouble> "" +
		""	<aFlag>false</aFlag> "" +
		""</someRequest> "";
	
	private class Endpoint extends AbstractDomPayloadEndpoint {

		@Override
		protected Element invokeInternal(Element requestElement, Document responseDocument) throws Exception {
			Jaxp13XPathTemplate xPathTemplate = new Jaxp13XPathTemplate();
			DOMSource src = new DOMSource(requestElement);
			
			double aDouble = xPathTemplate.evaluateAsDouble(""aDouble"", src);
			assertEquals(123d, aDouble, 0.01);
			
			boolean aFlag = xPathTemplate.evaluateAsBoolean(""aFlag"", src);
			assertFalse(aFlag);
			
			return null;
		}
		
	};
	
	@Test
	public void demonstrateEvaluateAsBooleanStrangeBehavior() throws Exception {
		Endpoint endPoint = new Endpoint();
		endPoint.invoke(new StringSource(request));
	}
	
}
{code}",,;16/Sep/10 5:09 AM;arjen.poutsma;73740,,,,,,,,,0,73740,,,0,73740,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-09-01 04:39:23.647,1472,false,arjen.poutsma(arjen.poutsma),,,,0|i00m4v:,3631,5021,,,,,,01/Sep/10 4:39 AM;arjen.poutsma;Added formatting,"01/Sep/10 5:18 AM;arjen.poutsma;The return value of the evaluateAsBoolean method is determined per the boolean() function defined in the XPath specification. This means that an expression that selects zero nodes will return false, while an expression that selects one or more nodes will return true. An expression that returns a string returns false for empty strings and true for all other strings. An expression that returns a number returns false for zero and true for non-zero numbers.

I've cleared up the javadoc to make this clearer.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
Create Server-Side testing framework,SWS-632,32466,27431,Sub-task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,30/Jul/10 2:09 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Nov/10 4:38 AM,,,,,,,,2.0 RC1,,,,,,,,,0,,,,,,,,Create testing framework for MessageDispatcher usage.,,;17/Sep/10 3:09 AM;arjen.poutsma;11940,;02/Nov/10 9:38 AM;arjen.poutsma;48780,;03/Nov/10 4:08 AM;arjen.poutsma;6060,,,,,,,0,66780,,,0,66780,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1478,false,arjen.poutsma(arjen.poutsma),,,,0|i00m67:,3637,5027,,,,,,05/Nov/10 4:38 AM;arjen.poutsma;Done,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Create Client-Side testing framework,SWS-631,32465,27431,Sub-task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,30/Jul/10 2:07 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Nov/10 4:37 AM,,,,,,,,2.0 M3,2.0 RC1,,,,,,,,0,,,,,,,,Create a framework for testing WebServiceTemplate usage.,,;30/Jul/10 4:21 AM;arjen.poutsma;46680,;03/Nov/10 2:22 AM;arjen.poutsma;1320,;05/Nov/10 4:39 AM;arjen.poutsma;36660,,,,,,,0,84660,,,0,84660,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,1479,false,arjen.poutsma(arjen.poutsma),,,,0|i0407z:,23410,19916,,,,,,05/Nov/10 4:37 AM;arjen.poutsma;Done,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Jaxp13XPathTemplate uses thread-unsafe XPathFactory as field,SWS-613,30743,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,ajvanerp,ajvanerp,25/Mar/10 2:31 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,11/May/10 8:10 PM,1.5.9,,,,,,,1.5.10,2.0 M2,,,,XML,,,,0,,,,,,,,"The XPathFactory provided by Sun in the JDK mentions it's not threadsafe, see: http://java.sun.com/javase/6/docs/api/javax/xml/xpath/XPathFactory.html. Though it is not clear from documentation nor code which of the methods is not threadsafe. It can either be:
a) The XPathFactory.newInstance(...) method: In which case Jaxp13XPathTemplate should clearly document that it should only be constructed once for an entire application to prvent concurrency bugs
b) Any of the other instance methods: In which case Jaxp13XPathTemplate should not use XPathFactory as a field if it wants to be threadsafe.

This means that at the moment the Jaxp13XPathTemplate deviates from other Spring templates, such as JdbcTemplate etc, as these are all threadsafe.",,;11/May/10 8:09 PM;arjen.poutsma;1140,,,,,,,,,0,1140,,,0,1140,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-05-11 20:10:08.054,7520,false,arjen.poutsma(arjen.poutsma),,,,0|i01ogv:,9841,9868,,,,,,11/May/10 8:10 PM;arjen.poutsma;Fixed in 2.0 and 1.5 branches.,"15/Apr/11 1:11 AM;edh;Arjen, can this bug be the cause for http://forum.springsource.org/showthread.php?t=107721 ?",15/Apr/11 1:17 AM;edh;In addition to my previous content ? How can I get a hold (using Maven) of the 1.5.10 release ?,"13/Apr/12 9:37 AM;edh;Is this really fixed in the 2.0 branch because in 2.0.x Jaxp13XPathTemplate still has XPathFactory as a field: ""private XPathFactory xpathFactory"".

","01/May/12 4:03 AM;arjen.poutsma;@Edwin: Note that the createXPath() method is synchronized, and that's the only place the field is used. So yes, it is fixed.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,
Incompatibility with WS-I requirement R2750,SWS-610,30614,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,cott,cott,15/Mar/10 10:01 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,30/May/10 8:30 PM,,,,,,,,1.5.10,2.0 M3,,,,,,,,0,,,,,,,,"According to WS-I Basic Profile 1.1 requirement R2750:

A CONSUMER MUST ignore an envelope carried in a HTTP response message in a one-way operation.

This doesn't seem to be the case with Spring WS. When calling a one-way soap service that returns an empty soap envelope, an exception is thrown.

This is the soap response:

{code:xml}
<SOAP:Envelope xmlns:SOAP=""http://schemas.xmlsoap.org/soap/envelope/"">
   <SOAP:Header/>
   <SOAP:Body/>
</SOAP:Envelope>
{code}

And this is the exception:

{noformat}
org.springframework.ws.client.WebServiceTransformerException: Transformation error: javax.xml.transform.TransformerException: Source object passed to ''{0}'' has no contents.; 
nested exception is javax.xml.transform.TransformerException: javax.xml.transform.TransformerException: Source object passed to ''{0}'' has no contents.
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:572)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:394)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:384)
	<...custom code...>
Caused by: javax.xml.transform.TransformerException: javax.xml.transform.TransformerException: Source object passed to ''{0}'' has no contents.
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:720)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
	at org.springframework.ws.client.core.WebServiceTemplate$4.extractData(WebServiceTemplate.java:407)
	at org.springframework.ws.client.core.WebServiceTemplate$SourceExtractorMessageExtractor.extractData(WebServiceTemplate.java:771)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:560)
	... 33 more
Caused by: javax.xml.transform.TransformerException: Source object passed to ''{0}'' has no contents.
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:668)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:708)
	... 37 more
{noformat}
",,;30/May/10 8:30 PM;arjen.poutsma;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-05-30 20:30:25.423,7523,false,arjen.poutsma(arjen.poutsma),,,,0|i0408n:,23413,19928,,,,,,30/May/10 8:30 PM;arjen.poutsma;Fixed in 2.0 and 1.5 branch,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
Drop OXM chapter from ref docs,SWS-603,30333,,Task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,28/Feb/10 7:57 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,07/Apr/10 9:52 PM,2.0 M1,,,,,,,2.0 M2,,,,,Documentation,,,,0,,,,,,,,"We should drop the oxm chapter from the reference docs, as it now lives in SPR.",,;07/Apr/10 9:52 PM;arjen.poutsma;2820,,,,,,,,,0,2820,,,0,2820,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,7529,false,arjen.poutsma(arjen.poutsma),,,,0|i01q1z:,10098,10094,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Merge core and core-tiger modules,SWS-597,29888,,Task,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,31/Jan/10 6:54 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,31/Jan/10 8:41 PM,,,,,,,,2.0 M1,,,,,,,,,0,,,,,,,,"Since all modules require Java 5 now, we should merge the -tiger modules with the ""normal"" modules.",,;31/Jan/10 8:42 PM;arjen.poutsma;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,,7535,false,arjen.poutsma(arjen.poutsma),,,,0|i0409j:,23417,19936,,,,,,"31/Jan/10 8:41 PM;arjen.poutsma;Done. Tests still fail, though.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
MessageAddressingProperties not Serializable,SWS-596,29846,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,sanspeaker,sanspeaker,27/Jan/10 11:36 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,27/Jan/10 11:49 PM,1.5.8,,,,,,,1.5.9,,,,,XML,,,,0,,,,,,,,"From what I can tell, the MessageAddressingProperties and EndpointReference classes are not serializable so we cannot store those types in a JMS queue as part of a message header (i.e., spring integration MessageHeader).

Any plans to make these classes Serializable in the future?

Thanks.",,;27/Jan/10 11:49 PM;arjen.poutsma;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-01-27 23:49:59.61,7536,false,arjen.poutsma(arjen.poutsma),,,,0|i01oh3:,9842,9869,,,,,,27/Jan/10 11:49 PM;arjen.poutsma;They are serializable now.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
"SchemaCollection issue when XSD files are in the classpath, in different JAR artifacts",SWS-594,29604,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,obillard,obillard,11/Jan/10 8:40 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,11/Jan/10 8:55 PM,1.5.8,,,,,,,1.5.9,,,,,XML,,,,0,,,,,,,,"Problem described in issue SWS-413 has partially been fixed.

Given XSD-A importing XSD-B, both in the classpath, the fix works if XSD-A and XSD-B are in the same classpath location (both in WEB-INF/classes, or in the same JAR file), but it does not work if the XSD files are located in different JAR files, for example.

The provided patch fixes this : if the imported XSD could not be resolved with the same base URI, we must keep searching in the classpath, (last statements should not be in an else block).","Spring WS 1.5.8, WAR file deployed in either Tomcat or Jetty.",;11/Jan/10 8:54 PM;arjen.poutsma;120,,,,,,,,,0,120,,,0,120,,,,,,,,,,,,,,11/Jan/10 8:42 PM;obillard;CommonsXsdSchemaCollection.diff;https://jira.spring.io/secure/attachment/16083/CommonsXsdSchemaCollection.diff,,,,,,,,,,,,,221270400,,,,,2010-01-11 20:55:11.231,7538,false,arjen.poutsma(arjen.poutsma),,,,0|i01ohb:,9843,9870,,,,,,11/Jan/10 8:42 PM;obillard;Patch fixing this issue in a simple way.,"11/Jan/10 8:55 PM;arjen.poutsma;Applied the patch, thanks!",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
Version not specified for build and reporting plugins,SWS-592,29331,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,sslavic,sslavic,19/Dec/09 9:29 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Jan/10 10:33 PM,1.5.8,,,,,,,1.5.9,,,,,,,,,0,,,,,,,,"Several build and reporting plugins used in SWS POMs do not have version specified, which makes builds to be not reproducible. Future Maven versions might no longer support building such malformed project.",,;05/Jan/10 10:33 PM;arjen.poutsma;1080,,,,,,,,,0,1080,,,0,1080,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:28.104,7540,false,arjen.poutsma(arjen.poutsma),,,,0|i0409z:,23419,19939,,,,,,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,,
Child POMs should specify parent relativePath,SWS-590,29329,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,sslavic,sslavic,19/Dec/09 8:59 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,06/Jan/10 12:53 AM,1.5.8,,,,,,,1.5.9,,,,,,,,,0,,,,,,,,Child modules are not nested within their parent module directories so default parent relativePath (../pom.xml) is wrong. Maven 3 will refuse to build such projects (see more details [here|http://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html#Maven3.xCompatibilityNotes-ParentPOMResolution]). Correct relativePath should be set.,,;06/Jan/10 1:01 AM;arjen.poutsma;1140,,,,,,,,,0,1140,,,0,1140,,,,,,,,,,,,,,19/Dec/09 9:02 AM;sslavic;org.springframework.ws.spring-ws-invalid_parent_relativePath.patch;https://jira.spring.io/secure/attachment/16027/org.springframework.ws.spring-ws-invalid_parent_relativePath.patch,,,,,,,,,,,,,221270400,,,,,2010-01-06 00:53:27.981,7542,false,arjen.poutsma(arjen.poutsma),,,,0|i01c4f:,7841,8278,,,,,,19/Dec/09 9:02 AM;sslavic;Attaching proposed patch ([^org.springframework.ws.spring-ws-invalid_parent_relativePath.patch]).,06/Jan/10 12:53 AM;arjen.poutsma;Fixed. Thanks for the patch!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
"debug logging will hide parsing error on non well formed xml, and continue processing with incomplete xml",SWS-588,29221,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,woltere,woltere,13/Dec/09 2:07 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,06/Jan/10 1:34 AM,1.5.7,,,,,,,1.5.9,,,,,XML,,,,0,,,,,,,,"logResponse will call toString() on the message, this will trigger the parsing of the xml, parsing exceptions are suppressed by toString. However the message (SaajSoapMessage) will be partially filled.
When getEnvelope() is called the incomplete message will be returned without any error or exception.
","java version ""1.6.0_07""
Windows & Linux",;06/Jan/10 1:34 AM;arjen.poutsma;840,,,,,,,,,0,840,,,0,840,,,,,,,,,,,,,,13/Dec/09 2:09 PM;woltere;MessageLazyLoadTest.java;https://jira.spring.io/secure/attachment/15999/MessageLazyLoadTest.java,,,,,,,,,,,,,221270400,,,,,2010-01-06 01:34:07.385,7544,false,arjen.poutsma(arjen.poutsma),,,,0|i01ohj:,9844,9871,,,,,,13/Dec/09 2:09 PM;woltere;unit test showing the issue.,"06/Jan/10 1:34 AM;arjen.poutsma;This issue does not seem to exist anymore in the current 1.5.9 SVN codebase. I get the following exception when the message is loaded:

{noformat}
org.springframework.ws.soap.saaj.SaajSoapMessageException: Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source: 
{noformat}",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
specify custom TransformerFactory in org.springframework.xml.transform.TransformerObjectSupport,SWS-586,29072,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,mikhail.tokarev,mikhail.tokarev,01/Dec/09 5:09 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,06/Jan/10 12:26 AM,,,,,,,,1.5.9,,,,,XML,,,,0,,,,,,,,"Currently the only ways to specify custom TransformerFactory for TransformerObjectSupport are to set System Property ""javax.xml.transform.TransformerFactory"" or put custom library to endorsed path (either of jvm or app-server). But both of them are too strong and may violate behaviour of app-server or any other component of system.

It would be handy to have a set method for ""TransformerFactory transformerFactory"" field or any other way to override TransformerFactory.newInstance() logic.

",,;06/Jan/10 12:26 AM;arjen.poutsma;2760,,,,,,,,,0,2760,,,0,2760,,,,,,,,,,,SPR-3658,,,,,,,,,,,,,,,,221270400,,,,,2012-05-04 07:03:32.054,7545,false,arjen.poutsma(arjen.poutsma),,,,0|i01ohr:,9845,9872,,,,,,01/Dec/09 5:10 PM;mikhail.tokarev;similar issue SPR-3658,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,,
AbstractHttpSenderConnection does not immediately recognise HTTP 204 has no content-length,SWS-583,28700,,Improvement,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,rubrica,rubrica,12/Nov/09 8:13 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,06/Jan/10 12:40 AM,1.5.8,,,,,,,1.5.9,,,,,Core,,,,0,,,,,,,,"The hasResponse() method in AbstractHttpSenderConnection currently only has specific logic for the HTTP 202 status code, immediately returning false. If a 204 is received without the Conent-Length header set (not mandatory as by definition a 204 has no content), the method will go straight to inferring the content-length by trying to read the input stream. The input stream will not contain any content and so it is left to the client server's keepAliveTimeout value to close the stream and cause the method to finish.

Although the correct result is returned from the method, it would be much better if there was a simple check for the 204 status to return false straight away.

This caused issues with our system as our sending method which uses the WebServiceTemplate took 20 seconds to finish even though the HTTP 204 was received within a few ms (the 20 seconds was configured on the client's server). 

The first if statement in the current method could be adapted (with a new STATUS_NO_CONTENT added to the HttpTransportConstants representing 204):
{code}
 protected final boolean hasResponse() throws IOException {
        if (HttpTransportConstants.STATUS_ACCEPTED == getResponseCode()) {
            return false;
        }
        long contentLength = getResponseContentLength();
        if (contentLength < 0) {
            if (responseBuffer == null) {
                responseBuffer = FileCopyUtils.copyToByteArray(getRawResponseInputStream());
            }
            contentLength = responseBuffer.length;
        }
        return contentLength > 0;
    }
{code}",,;06/Jan/10 12:40 AM;arjen.poutsma;720,,,,,,,,,0,720,,,0,720,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-01-06 00:35:07.089,7547,false,arjen.poutsma(arjen.poutsma),,,,0|i040af:,23421,19943,,,,,,06/Jan/10 12:35 AM;arjen.poutsma;Added formatting.,06/Jan/10 12:40 AM;arjen.poutsma;Fixed. Thanks for the suggestion!,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
AxiomSoapMessageFactory does not parse application/xop+xml Content-Type properly,SWS-579,28421,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,artbristol,artbristol,22/Oct/09 3:35 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,10/Nov/09 1:07 AM,1.5.8,,,,,,,1.5.9,,,,,,,,,0,,,,,,,,"AxiomSoapMessageFactory#getCharSetEncoding(), when given the following HTTP Content-Type header (which I assume is valid),

application/xop+xml;type=""text/xml; charset=utf-8""

returns a CharSet of 'utf-8""' instead of 'utf-8' (i.e. there is an erroneous double quote at the end of the string).
",Weblogic 10.3,;10/Nov/09 1:07 AM;arjen.poutsma;780,,,,,,,,,0,780,,,0,780,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-11-10 01:03:52.232,7551,false,arjen.poutsma(arjen.poutsma),,,,0|i040an:,23422,19944,,,,,,"10/Nov/09 1:03 AM;arjen.poutsma;According to the HTTP spec, that Content-Type header would be incorrect (http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7).  Which particular SOAP stack is creating that header?

At any rate, we we will fix it nonetheless.",10/Nov/09 1:07 AM;arjen.poutsma;Fixed.,11/Nov/09 11:39 PM;artbristol;Thanks for the fix. Both ends of the web service are running Spring-WS SOAP stacks.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,
Fix manifest to disallow usage of org.springframework.oxm version 3.0.0,SWS-578,28403,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Major,Fixed,arjen.poutsma,ericeberry,ericeberry,21/Oct/09 4:02 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,05/Jan/10 10:10 PM,1.5.8,,,,,,,1.5.9,,,,,Core,,,,0,,,,,,,,"The manifests of bundles org.springframework.ws and org.springframework.ws.java allow the use of org.springframework.oxm;version=""[1.5.8,3.1.0)"".  Since Spring-ws 1.5.8 is incompatible with the OXM library in Spring 3.0, this is incorrect.  The manifest needs to be modified to org.springframework.oxm;version=""[1.5.8,2.0.0)"".","Spring-WS 1.5.8.A, from the EBR (http://www.springsource.com/repository/app/bundle/version/detail?name=org.springframework.ws&version=1.5.8.A)",;05/Jan/10 10:11 PM;arjen.poutsma;5520,,,,,,,,,0,5520,,,0,5520,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2010-01-05 22:10:14.268,7552,false,arjen.poutsma(arjen.poutsma),,,,0|i02m3z:,15291,14529,,,,,,"22/Oct/09 4:23 AM;ericeberry;Just so you catch everything:

org.springframework.ws imports
    org.springframework.oxm;version=""[1.5.8.A, 3.1.0)""
    org.springframework.oxm.mime;version=""[1.5.8.A, 3.1.0)""

org.springframework.ws.java5 imports
    org.springframework.oxm;version=""[1.5.8.A, 3.1.0)""","05/Jan/10 10:10 PM;arjen.poutsma;Should be fixed now, thanks for providing a solution!",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,,
sentMessageTracingLogger  skips request message headerer content ,SWS-576,28334,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,miluch,miluch,13/Oct/09 8:40 PM,04/May/12 7:03 AM,10/May/19 2:36 AM,10/Nov/09 9:02 PM,1.5.3,1.5.8,,,,,,1.5.9,,,,,Core,,,,0,,,,,,,,"In org.springframework.ws.server.MessageDispatcher class sentMessageTracingLogger with trace level does not log the same request message as the one being logged by receivedMessageTracingLogger.
I've noticed that request message having <SOAP-ENV:Header> with wss4j stuff is properly logged by receivedMessageTracingLogger on trace level:

{noformat}
Received request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
<SOAP-ENV:Header>
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" SOAP-ENV:mustUnderstand=""1"">
<wsse:UsernameToken xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""UsernameToken-21398464"">
<wsse:Username>876543</wsse:Username>
<wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"">a701050a4e03ef54319c319c9a06a895</wsse:Password>
</wsse:UsernameToken>
</wsse:Security>
</SOAP-ENV:Header>
<SOAP-ENV:Body>....</SOAP-ENV:Body></SOAP-ENV:Envelope>] 
{noformat}

Unfortunately sentMessageTracingLogger strips out content of <SOAP-ENV:Header> when logging request message:
{noformat}
Sent response [------=_Part_18_463346590.1255441172093
Content-Type: application/xop+xml; type=""text/xml""; charset=utf-8

<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
<SOAP-ENV:Header/>
<SOAP-ENV:Body>...</SOAP-ENV:Body></SOAP-ENV:Envelope>
------=_Part_18_463346590.1255441172093--] for request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/""><SOAP-ENV:Header>
</SOAP-ENV:Header><SOAP-ENV:Body>...</SOAP-ENV:Body></SOAP-ENV:Envelope>
{noformat}

It seems that wss4j headers are processed by WSS4j Interceptor and then somehow removed from requestMessage. Actually had no time to dig it further and check if custom headres are also stripped out.
Anyway i think that sentMessageTracingLogger  should log original client request message.
I am attaching patch version of MessageDispatcher","Widnows XP, Websphere 6.1.0.19, SAAJ 1.3 (sun implementation), MTOM enabled JAXB2 marshaller.
",;10/Nov/09 9:02 PM;arjen.poutsma;1080,,,,,,,,,0,1080,,,0,1080,,,,,,,,,,,,,,,,,,,,,,,,,,,221270400,,,,,2009-11-10 20:32:42.122,7554,false,arjen.poutsma(arjen.poutsma),,,,0|i040av:,23423,19945,,,,,,10/Nov/09 8:32 PM;arjen.poutsma;Formatting,"10/Nov/09 9:04 PM;arjen.poutsma;Indeed, the WSS4J interceptors change the request content, getting rid of security headers. This conforms to the SOAP spec, which says that a processing node should remove the headers that belong to it after processing.

That said, this issue should be fixed now: we keep a reference to the request content as it came in.","19/Nov/09 9:39 PM;arjen.poutsma;@Jakub,

I think you forgot to attach your patch to this issue. We have some issues with our JIRA installation a few weeks ago, perhaps we lost your patch in the process. But let me know if the solution currently in svn is not working for you. A shame we didn't get to chat at Devoxx.

Cheers,

Arjen","23/Nov/09 3:56 AM;miluch;I am quite sure i successfully attached patch but it does not matter now since it is nearly identical to yours.
I believe your code works as expected but I haven't tried it, since I am still using SWS 1.5.5 ( with my original patch applied).
It is all because of https://jira.springsource.org/browse/SWS-374 and Websphere. Actually i haven't checked myself if newer (above 1.5.5) versions of SWS work on Websphere but according to comments by Sebastien Dubois these do not work. I am planning to check it myself this week.
Back to devoxx: really ashame we had no time to chat but actually i have not seen you at all in Antwerp! I had a chat with Peter Meijer on Tuesday and have seen him quite regularly till Thursday afternoon at SpringSource booth but I haven't seen you at all during whole conference! During one of launch breaks I have met Tareq and have just asked him a couple of SWS related questions. I hope we will have a chat/beer during next SpringOne/geecon.",04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,
CommonsXsdSchemaCollection: Combination of xs:includes and xs:imports in a schema result in incorrect/overcomplete schema in wsdl generated by DefaultWsdl11Definition,SWS-575,28312,,Bug,Closed,SWS,Spring Web Services,software,gregturn,,http://projects.spring.io/spring-ws/,Minor,Fixed,arjen.poutsma,gizit,gizit,12/Oct/09 7:53 AM,04/May/12 7:03 AM,10/May/19 2:36 AM,10/Jan/10 8:12 PM,1.5.8,,,,,,,1.5.9,,,,,XML,,,,0,,,,,,,,"When using a DefaultWsdl11Definition for wsdl generation I used a CommonsXsdSchemaCollection to combine a set of xsd's. I found out that when a schema uses a mix of xs:imports and xs:includes, the inline schema in the generated wsdl (inside <wsdl:types>) contains an error. Both xs:imports and xs:includes are 'expanded' inline in the generated wsdl, but the xs:include lines are not removed from the inline schema, causing test tools like SOAPUI to fail (included schema's cannot be retrieved).","Not relevant, issue reproduced on both windows/jboss4.3 and Mac OS X 10.5.8/tomcat 6.0.18",;10/Jan/10 8:11 PM;arjen.poutsma;6180,,,,,,,,7200,1020,6180,85%,7200,1020,6180,,,,,,,,,,,,,,25/Nov/09 4:59 AM;gizit;holidayService.zip;https://jira.spring.io/secure/attachment/15964/holidayService.zip,,,,,,,,,,,,,221270400,,,,,2010-01-10 19:18:51.662,7555,false,arjen.poutsma(arjen.poutsma),,,,0|i01ohz:,9846,9873,,,,,,25/Nov/09 4:59 AM;gizit;holidayservice showing the issue,"10/Jan/10 7:18 PM;arjen.poutsma;It seems that if I put the include before the import in hr.xsd, all works well.",10/Jan/10 8:12 PM;arjen.poutsma;this should be fixed now.,04/May/12 7:03 AM;arjen.poutsma;Closing old issues,,,,,,,,,,,,,,,,,,,,
allow creation and usage of tc server instances outside of installation directory,STS-2768,73042,,Improvement,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,zaza,mlippert,mlippert,16/Jul/12 2:19 AM,27/Nov/12 4:15 AM,10/May/19 2:36 AM,27/Nov/12 4:01 AM,2.9.2.RELEASE,3.0.0.M3,,,,,,3.2.0.M1,,,,,SERVER,,,,0,Y6M3,,,,,,,"At the moment the tc server integration for Eclipse allows you to create new tc server instances (or select an existing one) when setting up a new server in Eclipse. But this works only for instances in the installation directory of the tc server itself, you cannot create instances outside of this directory or select existing instances from a different directory.

This needs to be improved to allow creation and selection of instances in arbitrary directories.",,;12/Oct/12 8:58 AM;zaza;8280,,,,,,,,,0,8280,,,0,8280,,,,,,,,,,,,,,08/Nov/12 11:34 AM;zaza;mylyn-context.zip;https://jira.spring.io/secure/attachment/24711/mylyn-context.zip,16/Oct/12 6:44 AM;zaza;sts-2768_create_instance.png;https://jira.spring.io/secure/attachment/24654/sts-2768_create_instance.png,,,,,,,,,,,,203385600,,,,,2012-10-12 04:31:55.861,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ah1r:,9223372036854775807,9223372036854775807,,,,,,"12/Oct/12 4:31 AM;zaza;That could be fixed with a Browse button for selecting the directory with existing instances, right? The button would be on the ""tc Server Configuration"" wizard page. I would use the same page for selecting the location where to save the server, defaulted to /Servers.","12/Oct/12 4:41 AM;mlippert;Yepp, sounds good... :-)","16/Oct/12 6:11 AM;zaza;Creating an instance in a non default location (outside the tc Server) can be achieved by passing an extra argument to the instance creating script ({{tcruntime-instance.bat}} on Windows). The arg is {{-i instanceDir}}, where {{instanceDir}} is the non default location of your choice.

Knowing that, I thought I'm all set, created a UI for selecting the dir but then it turned out that the selected directory must still be within a tc Server as the code makes several assumption on that fact. For instance, when creating an instance the script being executed is expected to be in the given directory. For a regular case, that works just fine, it's in ../vfabric-tc-server-developer-2.7.2.RELEASE/tcruntime-instance.bat (*.sh version is also there). But when specifying a custom instance dir, the script can not be found.

What it means, is that the fix here won't be only about adding a set of UI bits, apparently a number of changes in the core part need to be done as well.

The use case described earlier, creating/reusing instances from a different tc Server installation, can be addressed by creating a runtime environment for that server. So, given the complexity of the eventual fix I have to ask: is it worth the hassle?","16/Oct/12 6:17 AM;zaza;For reusing instances from outside the given runtime env, the simplest solution would be to copy them beforehand. This sounds like an ugly kludge, though.",16/Oct/12 6:44 AM;zaza;The new UI for selecting a non default instance directory.,"01/Nov/12 8:28 AM;zaza;Creating and running an external instance with batch scripts works just fine. For the record, here are the commands I used:
{code}
...\vfabric-tc-server-developer-2.8.0.RELEASE>tcruntime-instance.bat create test -i c:\temp
{code}
{code}
...\vfabric-tc-server-developer-2.8.0.RELEASE>tcruntime-ctl.bat test batch -n c:\temp\
{code}

The latter has to be run with admin rights when on Windows.","08/Nov/12 11:33 AM;zaza;[Here|https://github.com/zaza/eclipse-integration-tcserver/commit/b0b982e75e194ad3fcb38d09e053de8139cb63dc] is a work-in-progress commit:
+ Allow to select an external location for a newly create instance (uncheck _Use default instance location_ on the _Create tc Server Instance_ page).
+ Added UI test for the _New Server Wizard_.
+ Added a simple test called {{TcServerInstanceTest}} for executing instance creating with a instance dir provided.
+/- No validation of a created server (e.g. if it runs) in the UI test. All assertions are about the wizard.
- 3 TODOs in the UI test with cases to be implemented.
- Reusing an existing instance can be done in the UI but doesn't seem to work.
- Reusing an existing instance should (?) display modules from that instance on the _Add and Remove (modules)_ page of the wizard.
- Reusing an existing instance from a different tc Server runtime should work. E.g. I have two tc Servers in my STS, 2.7.2 and 2.8. Selecting an instance from 2.7.2 while creating a server for 2.8.0 should work fine.

Any comments on the last three -s would be appreciated.","20/Nov/12 6:59 AM;mlippert;Hey Tomasz! Here are my comments with regards to your three questions:
- Reusing an existing instance can be done in the UI but doesn't seem to work <= that should work and I saw this working. What exactly is not working?
- Reusing an existing instance should display modules from that instance on the Add and Remove (modules) page of the wizard. <= the question here is how to find out which modules from your workspace are deployed in that instance, I guess. But it would be nice indeed.
- Reusing an existing instance from a different tc Server runtime should work. E.g. I have two tc Servers in my STS, 2.7.2 and 2.8. Selecting an instance from 2.7.2 while creating a server for 2.8.0 should work fine. <= I am not sure regarding this one. I thought a tc server instance is specific for a certain tc server runtime. But if it is possible to use an instance that got created with tc server 2.7.2 with a new tc server 2.8.1, that would be great.",27/Nov/12 4:01 AM;zaza;Fixed with [e13934407de7ba5683c585f077e506d3835b232e|https://github.com/SpringSource/eclipse-integration-tcserver/commit/e13934407de7ba5683c585f077e506d3835b232e].,"27/Nov/12 4:15 AM;zaza;bq. 3 TODOs in the UI test with cases to be implemented.

Done.

bq. Reusing an existing instance can be done in the UI but doesn't seem to work <= that should work and I saw this working. What exactly is not working?

Not sure what I meant by that, double checked it today and it worked just fine. I was able to point to an existing instance and a newly created server started just fine.

bq. Reusing an existing instance should display modules from that instance on the Add and Remove (modules) page of the wizard. <= the question here is how to find out which modules from your workspace are deployed in that instance, I guess. But it would be nice indeed.

Filed STS-3084 for it.

bq. Reusing an existing instance from a different tc Server runtime should work. E.g. I have two tc Servers in my STS, 2.7.2 and 2.8. Selecting an instance from 2.7.2 while creating a server for 2.8.0 should work fine. <= I am not sure regarding this one. I thought a tc server instance is specific for a certain tc server runtime. But if it is possible to use an instance that got created with tc server 2.7.2 with a new tc server 2.8.1, that would be great.

This works fine. I was able to reuse an instance from tc Server 2.7.2 in 2.8.0. I can confirm the running server was 2.8.0 but the instance/config/webapps were taken from the 2.7.2 location.",,,,,,,,,,,,,,
Editing very large XML files with the integration-graph enabled can be very slow,STS-1327,74494,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,02/Nov/10 2:39 PM,30/Nov/10 5:00 PM,10/May/19 2:36 AM,02/Nov/10 5:10 PM,2.5.0.RELEASE,,,,,,,2.5.1.RELEASE,,,,,,,,,0,Y4M2,,,,,,,,,;02/Nov/10 5:10 PM;ldossantos;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,268704000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v9b:,9223372036854775807,9223372036854775807,,http://forum.springsource.org/showthread.php?t=97379,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - groovy adapter,STS-1324,76371,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,01/Nov/10 5:24 PM,30/Nov/10 5:00 PM,10/May/19 2:36 AM,02/Nov/10 4:14 PM,,,,,,,,2.5.1.RELEASE,,,,,,,,,0,Y4M2,,,,,,,The control-bus element seems relevent,,;02/Nov/10 4:14 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,268790400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahvj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - feed adapter,STS-1323,72585,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,01/Nov/10 2:08 PM,30/Nov/10 5:00 PM,10/May/19 2:36 AM,01/Nov/10 3:43 PM,,,,,,,,2.5.1.RELEASE,,,,,,,,,0,Y4M2,,,,,,,,,;01/Nov/10 3:43 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,268790400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahr3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update visual editor support for Spring Integration RC2,STS-1322,76373,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,01/Nov/10 2:07 PM,30/Nov/10 5:00 PM,10/May/19 2:36 AM,17/Nov/10 1:32 PM,,,,,,,,2.5.2.RELEASE,,,,,,,,,0,Y4M3,,,,,,,,,;01/Nov/10 5:26 PM;ldossantos;6300,;15/Nov/10 7:02 PM;ldossantos;15300,;17/Nov/10 1:32 PM;ldossantos;3600,,,,,,0,0,25200,"9,223,372,036,854,775,807%",0,0,25200,,,,,,,,,,,,,,,,,,,,,,,,,,,267580800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahqv:,9223372036854775807,9223372036854775807,,,,,,"01/Nov/10 5:26 PM;ldossantos;Minor updates to core namespace, & xml adapter.",15/Nov/10 1:49 PM;ldossantos;RC2 introduces changes to the Twitter and XMPP adapters that need to be updated,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - twitter adapter,STS-1249,72645,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,22/Sep/10 1:32 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,22/Sep/10 6:58 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,,,,,0,Y4M1,,,,,,,,,;22/Sep/10 6:58 PM;ldossantos;4200,,,,,,,,0,0,4200,"9,223,372,036,854,775,807%",0,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,272246400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xj3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - sftp adapter,STS-1248,75432,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,22/Sep/10 1:32 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,22/Sep/10 5:53 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,,,,,0,Y4M1,,,,,,,,,;22/Sep/10 5:53 PM;ldossantos;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,272246400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xi7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - ftp adapter,STS-1247,72314,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,22/Sep/10 1:32 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,22/Sep/10 5:16 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,,,,,0,Y4M1,,,,,,,,,;22/Sep/10 5:16 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,272246400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xif:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update visual editor support for Spring Integration M7,STS-1246,73518,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,22/Sep/10 1:32 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,22/Sep/10 4:18 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,,,,,0,Y4M1,,,,,,,,,;22/Sep/10 4:18 PM;ldossantos;9900,,,,,,,,0,0,9900,"9,223,372,036,854,775,807%",0,0,9900,,,,,,,,,,,,,,,,,,,,,,,,,,,272246400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xhb:,9223372036854775807,9223372036854775807,,,,,,"22/Sep/10 4:18 PM;ldossantos;Mainly changes in ip, jdbc adapters.",,,,,,,,,,,,,,,,,,,,,,,
Support toggling state types on & off,STS-1236,74403,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,14/Sep/10 3:29 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,24/Nov/10 12:17 PM,,,,,,,,2.5.2.RELEASE,,,,,EDITING,UI,,,0,Y4M3,,,,,,,- as a developer I may want to prepare multiple diagrams from a flow for inclusion in a design document. To do that I would like to be able to hide individual states and transitions focusing on specific paths through the flow or just leaving out detail not relevant to what I want to communicate.,,;24/Nov/10 12:17 PM;ldossantos;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,272937600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v3r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transitions with no 'to' reference should loop back to the originating state,STS-1235,74490,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,14/Sep/10 3:29 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,14/Sep/10 4:26 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,EDITING,UI,,,0,Y4M1,,,,,,,,,;14/Sep/10 4:26 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,272937600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v4f:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement render/entry/exit events,STS-1204,76310,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 4:21 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,01/Oct/10 10:37 AM,,,,,,,,2.5.0.RC1,,,,,EDITING,UI,,,0,Y4M1,,,,,,,,,;01/Oct/10 10:37 AM;ldossantos;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adi7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a bordered container figure,STS-1201,73129,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 3:01 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,01/Oct/10 10:37 AM,,,,,,,,2.5.0.RC1,,,,,EDITING,UI,,,0,Y4M1,,,,,,,A bordered figure suitable for displaying sub-elements,,;02/Sep/10 11:21 AM;ldossantos;23400,;03/Sep/10 2:04 PM;ldossantos;21600,;08/Sep/10 5:09 PM;ldossantos;6300,,,,,,0,0,51300,"9,223,372,036,854,775,807%",0,0,51300,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adgn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a list section figure,STS-1200,74518,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 3:01 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,01/Oct/10 10:37 AM,,,,,,,,2.5.0.RC1,,,,,EDITING,UI,,,0,Y4M1,,,,,,,Suitable for group list item figures,,;03/Sep/10 4:02 PM;ldossantos;7200,;08/Sep/10 5:10 PM;ldossantos;28800,,,,,,,0,0,36000,"9,223,372,036,854,775,807%",0,0,36000,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ac1j:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a list item figure,STS-1199,74015,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 3:01 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,31/Aug/10 4:19 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,EDITING,UI,,,0,Y3M12,,,,,,,"Suitable for displaying single line items, icon optional",,;31/Aug/10 4:32 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ac1b:,9223372036854775807,9223372036854775807,,,,,,31/Aug/10 4:19 PM;ldossantos;Can be done with exisiting label figures.,,,,,,,,,,,,,,,,,,,,,,,
Implement evaluate/set/render actions under transitions,STS-1198,74325,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 11:34 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,01/Oct/10 10:37 AM,,,,,,,,2.5.0.RC1,,,,,EDITING,UI,,,0,Y4M1,,,,,,,,,;01/Oct/10 10:37 AM;ldossantos;9900,,,,,,,,0,0,9900,"9,223,372,036,854,775,807%",0,0,9900,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ac0v:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement if transitions,STS-1197,72746,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Aug/10 11:26 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,09/Sep/10 5:02 PM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,EDITING,UI,,,0,Y4M1,,,,,,,,,;09/Sep/10 5:02 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,274147200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ac0f:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
new line character shown when editing element description,STS-1190,72669,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,25/Aug/10 3:38 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,01/Oct/10 10:17 AM,2.5.0.M3,,,,,,,2.5.0.RC1,,,,,,,,,0,Y4M1,,,,,,,"Steps:
1. Open batch graph
2. Add fail element
3. Hover over text

See screenshot.",,;01/Oct/10 10:17 AM;ldossantos;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,25/Aug/10 3:39 PM;spingel;screenshot.png;https://jira.spring.io/secure/attachment/24090/screenshot.png,,,,,,,,,,,,,271468800,,,,,2010-08-25 16:56:45.021,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aicf:,9223372036854775807,9223372036854775807,,,,,,"25/Aug/10 4:56 PM;ldossantos;Interesting. I haven't seen that before. The end/fail/stop/next element descriptions probably shouldn't be editable anyway, since editing that text has no effect.","01/Oct/10 9:34 AM;cdupuis;Leo, is this fixed.

Christian","01/Oct/10 10:17 AM;ldossantos;The newline break is intentional in order to split the label into two lines for those 4 elements. As far as I can tell, the odd rendering of the newline character was only happening on Linux, and only when the text was being edited. Since this label shouldn't be edited, i've disabled the edit window from popping up when the text is selected. I think that's all that's required.
",,,,,,,,,,,,,,,,,,,,,
Allow for in-place editing of transition names,STS-1174,74646,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Aug/10 11:14 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,18/Aug/10 11:07 AM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M12,,,,,,,We use the 'on' attribute for labelling transition elements because they have no 'id' attribute. We'll need to modify the edit policy slightly to make up for this difference.,,;18/Aug/10 11:07 AM;ldossantos;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,275356800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a7yf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add transition tools to the palette,STS-1158,76330,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,10/Aug/10 4:25 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,17/Aug/10 4:41 PM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M12,,,,,,,We need a way to add new transitions to the graph. Transitions may not always have an end point.,,;17/Aug/10 4:41 PM;ldossantos;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,275961600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a0xz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - xmpp adapter,STS-1148,72210,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,03/Aug/10 11:46 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,06/Aug/10 11:54 AM,,,,,,,,2.5.0.M3,,,,,,,,,0,Y3M11,,,,,,,,,;03/Aug/10 5:17 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,276566400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yjb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - groovy adapter,STS-1147,74161,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,03/Aug/10 11:45 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,03/Aug/10 5:18 PM,,,,,,,,2.5.0.M3,,,,,,,,,0,Y3M11,,,,,,,,,;03/Aug/10 3:50 PM;ldossantos;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,276566400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09ykf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add visual editor support for Spring Integration - event adapter,STS-1146,75064,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,03/Aug/10 11:45 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,06/Aug/10 11:53 AM,,,,,,,,2.5.0.M3,,,,,,,,,0,Y3M11,,,,,,,,,;03/Aug/10 3:37 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,276566400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yk7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update visual editor support for Spring Integration M6,STS-1145,74883,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,03/Aug/10 11:45 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,06/Aug/10 11:52 AM,,,,,,,,2.5.0.M3,,,,,,,,,0,Y3M11,,,,,,,,,;04/Aug/10 6:02 PM;ldossantos;18900,;05/Aug/10 4:46 PM;ldossantos;15600,;06/Aug/10 11:52 AM;ldossantos;2700,,,,,,0,0,37200,"9,223,372,036,854,775,807%",0,0,37200,,,,,,,,,,,,,,,,,,,,,,,,,,,276566400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09yjz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate having collapsible parts,STS-1139,72774,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,29/Jul/10 11:27 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,02/Sep/10 11:23 AM,,,,,,,,2.1.0.RC1,2.1.0.RELEASE,,,,EDITING,UI,,,0,Y3M12,,,,,,,,,;03/Aug/10 11:20 AM;ldossantos;35100,;09/Aug/10 5:48 PM;ldossantos;15300,;10/Aug/10 6:26 PM;ldossantos;17100,;11/Aug/10 5:49 PM;ldossantos;20700,;02/Sep/10 11:23 AM;ldossantos;5400,,,,0,0,93600,"9,223,372,036,854,775,807%",0,0,93600,,,,,,,,,,,,,,,,,,,,,,,,,,,273974400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09v8n:,9223372036854775807,9223372036854775807,,,,,,02/Sep/10 11:23 AM;ldossantos;Work in progress on a couple of new collapsible container figures.,,,,,,,,,,,,,,,,,,,,,,,
Create a tool palette,STS-1138,74301,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,28/Jul/10 3:05 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,28/Jul/10 4:07 PM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M11,,,,,,,Editor should have a palette that allows for dragging components on the graph. To start this only needs to support the state components.,,;28/Jul/10 4:07 PM;ldossantos;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,277084800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a3jj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Put labels on the transitions,STS-1129,74141,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Jul/10 3:29 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,28/Jul/10 3:04 PM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M11,,,,,,,"States can have any number of transitions between them, so it's necessary to have labels to identify each transition.",,;26/Jul/10 5:32 PM;ldossantos;6300,;28/Jul/10 3:04 PM;ldossantos;21600,,,,,,,0,0,27900,"9,223,372,036,854,775,807%",0,0,27900,,,,,,,,,,,,,,,,,,,,,,,,,,,277257600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a027:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Display transitions between state elements,STS-1127,72723,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Jul/10 1:54 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,26/Jul/10 3:26 PM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M11,,,,,,,First knock at this will not include labels on the transitions,,;26/Jul/10 3:26 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,277257600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a01r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Display state elements in a visual editor,STS-1126,74626,72727,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Jul/10 11:30 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,26/Jul/10 1:51 PM,,,,,,,,2.5.0.M3,,,,,EDITING,UI,,,0,Y3M11,,,,,,,"As a first step, get a quick editor up that renders the various state elements, no connections between them.",,;26/Jul/10 1:51 PM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,277257600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a0cn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPEs when deleting root element in bean config file,STS-1106,76043,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,19/Jul/10 4:07 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,19/Jul/10 6:12 PM,2.3.3.M2,,,,,,,2.5.0.M3,,,,,,,,,0,Y3M11,,,,,,,"If the root element of a config file is deleted in the config editor a number of NPEs can occur.


java.lang.NullPointerException
at com.springsource.sts.wizard.ui.BeanWizard.createBean(BeanWizard.java:180)
at com.springsource.sts.wizard.ui.BeanWizard.performFinish(BeanWizard.java:275)
at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:752)
at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:373)

Caused by: java.lang.NullPointerException
at com.springsource.sts.config.ui.editors.SpringConfigEditor$4.run(SpringConfigEditor.java:485)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
... 23 more

java.lang.NullPointerException
at org.springframework.ide.eclipse.beans.ui.editor.namespaces.DefaultReferenceableElementsLocator.getReferenceableElements(DefaultReferenceableElementsLocator.java:33)
at org.springframework.ide.eclipse.beans.ui.editor.util.BeansEditorUtils.getReferenceableNodes(BeansEditorUtils.java:834)
at org.springframework.ide.eclipse.beans.ui.editor.util.BeansCompletionUtils.addBeanReferenceProposals(BeansCompletionUtils.java:49)
at org.springframework.ide.eclipse.beans.ui.editor.util.BeansCompletionUtils.addBeanReferenceProposals(BeansCompletionUtils.java:35)
at org.springframework.ide.eclipse.beans.ui.editor.contentassist.BeanReferenceContentAssistCalculator.computeProposals(BeanReferenceContentAssistCalculator.java:47)
at com.springsource.sts.quickfix.AbstractContentAssistConverter.computeProposals(AbstractContentAssistConverter.java:56)
at com.springsource.sts.quickfix.AbstractContentAssistConverter.computeNameMatchedProposals(AbstractContentAssistConverter.java:39)
at com.springsource.sts.quickfix.AbstractContentAssistConverter.getMethodProposals(AbstractContentAssistConverter.java:87)
at com.springsource.sts.quickfix.AbstractContentAssistConverter.getReferenceableBeanDescriptions(AbstractContentAssistConverter.java:95)
at com.springsource.sts.wizard.ui.BeanWizardPage.validateAttribute(BeanWizardPage.java:435)
at com.springsource.sts.wizard.ui.BeanWizardPage.updateAttribute(BeanWizardPage.java:382)
at com.springsource.sts.wizard.ui.BeanWizardPage.access$0(BeanWizardPage.java:349)
at com.springsource.sts.wizard.ui.BeanWizardPage$1.modifyText(BeanWizardPage.java:99)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:167)

java.lang.NullPointerException
at org.eclipse.wst.xml.core.internal.provisional.format.ElementNodeFormatter.getUndefinedRegions(ElementNodeFormatter.java:410)
at org.eclipse.wst.xml.core.internal.provisional.format.ElementNodeFormatter.formatStartTag(ElementNodeFormatter.java:198)
at org.eclipse.wst.xml.core.internal.provisional.format.ElementNodeFormatter.formatNode(ElementNodeFormatter.java:121)
at org.eclipse.wst.xml.core.internal.provisional.format.NodeFormatter.format(NodeFormatter.java:75)
at org.eclipse.wst.sse.core.internal.format.AbstractStructuredFormatProcessor.formatNode(AbstractStructuredFormatProcessor.java:411)
at com.springsource.sts.config.ui.editors.AbstractConfigDetailsPart.editAttribute(AbstractConfigDetailsPart.java:147)
at com.springsource.sts.config.ui.editors.AbstractNamespaceDetailsPart$17.modifyAttribute(AbstractNamespaceDetailsPart.java:802)
at com.springsource.sts.config.ui.widgets.TextAttribute$1.modifyText(TextAttribute.java:63)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:167)",,;19/Jul/10 6:12 PM;ldossantos;6300,,,,,,,,0,0,6300,"9,223,372,036,854,775,807%",0,0,6300,,,,,,,,,,,,,,,,,,,,,,,,,,,277862400,,,,,2010-07-19 16:24:54.08,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09udj:,9223372036854775807,9223372036854775807,,,,,,19/Jul/10 4:24 PM;ldossantos;Should probably start by disabling the ability to delete the root element from the forms pages.,19/Jul/10 4:37 PM;spingel;We'll probably also need to consider the case where the root element is manually removed through editing of the XML.,"19/Jul/10 6:12 PM;ldossantos;Good point. I've disabled the ability to delete the root node from the form pages, and I've also disabled the new bean wizard button when the root node is missing. This should handle most of the NPE cases. The formatter exception is a weird case that is pretty difficult to reproduce, but I believe I've fixed that one as well.",,,,,,,,,,,,,,,,,,,,,
Config editor beeps when a graph page is selected,STS-977,76307,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/May/10 1:18 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/May/10 2:18 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,,,;26/May/10 2:18 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,282528000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09t3r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a context menu on implicit channels to make them explicit,STS-973,74501,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,19/May/10 2:17 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,20/May/10 6:17 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,,,;20/May/10 6:17 PM;ldossantos;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,283132800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aeqv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reverse the direction of connections on inbound gateways,STS-972,76359,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,19/May/10 2:17 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,19/May/10 3:27 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"On inbound gateways, the request channel should be an outgoing connection and the reply channel should be an incoming channel. This is the opposite behaviour from outbound gateways and the opposite behaviour from how inbound gateways are currently displayed in the graph.",,;19/May/10 3:27 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,283132800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aerj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consider making channel renaming into a refactor operation,STS-957,74357,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,05/May/10 10:49 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,27/May/10 4:09 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"When a channel id is changed, all references to the channel break and connections on the graph disappear. It might make sense to make this a refactoring operation. Need to investigate the feasibility of performing a refactor operation when renaming a channel id, whether this can be hooked in to the forms and/or direct editing of a channel label in the graph. ",,;27/May/10 4:09 PM;ldossantos;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,282441600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09zy7:,9223372036854775807,9223372036854775807,,,,,,27/May/10 4:09 PM;ldossantos;This will only work when directly editing a label on the graph. Not practical to hook it into the forms side.,,,,,,,,,,,,,,,,,,,,,,,
Auto generate an id when placing a new channel,STS-956,73442,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,05/May/10 10:48 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,14/May/10 2:51 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,,,;14/May/10 2:51 PM;ldossantos;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,283564800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09zyn:,9223372036854775807,9223372036854775807,,,,,,"14/May/10 2:51 PM;ldossantos;channel, publish-subscribe-channel and jmx equivalents will generate an id of 'channelN' where N is > 0 when created from the graph palette",,,,,,,,,,,,,,,,,,,,,,,
Implement quick fix for adding a bean config file to a config set,STS-955,73679,72955,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,03/May/10 10:25 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,05/May/10 10:50 AM,,,,,,,,2.3.3.M2,,,,,EDITING,,,,0,Y3M8,,,,,,,"Create implementation when quickfix is run, then add the new quickfix to the bean reference quickfix processor",,"Time worked: 08:00 from Sun, 2 May 2010 00:00:00 -0700 to Sat, 8 May 2010 23:59:59 -0700.;05/May/10 10:50 AM;thon;28800",,,,,,,,14400,0,28800,200%,14400,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,284515200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09tpr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support wiretap connections from channel elements,STS-945,72713,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Apr/10 12:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,27/May/10 11:26 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"Rather than having an interceptors container with wiretap icons within, we might want to represents wiretap elements as a different coloured connection from one channel to another.",,;27/May/10 11:26 AM;ldossantos;23400,,,,,,,,0,0,23400,"9,223,372,036,854,775,807%",0,0,23400,,,,,,,,,,,,,,,,,,,,,,,,,,,285120000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09w8n:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support drawing a connection between an output-channel node and an input-channel node,STS-943,74135,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Apr/10 12:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,14/May/10 2:23 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"Upon releasing the connection tool, the graph should auto generate the channel in between the two nodes.",,;14/May/10 2:23 PM;ldossantos;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,283564800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09wa7:,9223372036854775807,9223372036854775807,,,,,,14/May/10 2:23 PM;ldossantos;Dragging a connection between two anchor nodes will now automatically create a channel element and connect the channel to both anchor nodes.,,,,,,,,,,,,,,,,,,,,,,,
Implement a placeholder element  ,STS-942,75890,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,26/Apr/10 12:00 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,19/May/10 6:12 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,For bean elements or other elements that we don't have a specific use case for but which we want to display in the graph. May be commonly seen inside a chain container for example. Would probably have a question mark or bean icon.,,;19/May/10 6:12 PM;ldossantos;9000,,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,283132800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09wb3:,9223372036854775807,9223372036854775807,,,,,,"19/May/10 2:21 PM;ldossantos;Should look for bean elements in the graph, and any unknown element in chains",,,,,,,,,,,,,,,,,,,,,,,
Dashboard tab on Dashboard view unable to retrieve updates from Springsource site,STS-941,75277,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,sldoyle,sldoyle,26/Apr/10 10:40 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,26/Apr/10 1:15 PM,2.3.2.RELEASE,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,"We are using the Ironport proxy server.  I had a similar problem with being able to retrieve things in the Extensions tab (https://issuetracker.springsource.com/browse/STS-731).  Apparently it was not using the proxy server settings in the Eclipse preferences.  That issues has since been resolved in the latest version as I am able to install the Grails and Groovy extensions.  It appears that the updates may have a similar issue.  Looking at the .log file in the project I am getting the following message:

org.eclipse.core.runtime.CoreException: Download of http://dist.springsource.com/release/STS/doc/updates.xml failed: Unexpected HTTP response 407
	at com.springsource.sts.internal.core.net.HttpClientTransportService.toException(HttpClientTransportService.java:205)
	at com.springsource.sts.internal.core.net.HttpClientTransportService.stream(HttpClientTransportService.java:187)
	at com.springsource.sts.core.HttpUtil.stream(HttpUtil.java:112)
	at com.springsource.sts.internal.ide.ui.editors.AggregateFeedJob.run(AggregateFeedJob.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 1 com.springsource.sts.core 4 0 2010-04-26 12:25:47.386
!MESSAGE Download of http://dist.springsource.com/release/STS/doc/updates.xml failed: Unexpected HTTP response 407


However when I put the url in my web browser I am able to access the site without an error.",Windows XP   STS 2.3.2 release 3.5.2,;26/Apr/10 2:23 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,285033600,,,,,2010-04-26 13:15:01.632,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09wlz:,9223372036854775807,9223372036854775807,,,,,,"26/Apr/10 1:15 PM;spingel;Hi Scott, 

thank you for the bug report. The proxy authentication failure is caused by a missing entry in a manifest file that. I have corrected that and a fix will available in the next release.

Steffen",26/Apr/10 2:28 PM;sldoyle;Is there a timeline as to when the 2.3.3 release will be publicly available?,"27/Apr/10 2:30 PM;spingel;The date for the next release has not been determined, yet, but you can obtain the fix by updating to a nightly build following the instructions outlined in this document: http://dist.springsource.com/release/STS/doc/STS-installation_instructions.pdf .",,,,,,,,,,,,,,,,,,,,,
"When an element has no id, hide the title and only display it on hover",STS-939,73132,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:03 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,17/May/10 5:49 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,In order to prevent icons from getting too wide with labels such as int-jmx:notification-publishing-channel-adapter,,;17/May/10 5:49 PM;ldossantos;10800,,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahfr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Titles on elements should be directly editable,STS-938,72323,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:03 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Apr/10 3:44 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"Currently titles can be selected and edited, but the edit has no effect.",,;26/Apr/10 3:44 PM;ldossantos;4200,,,,,,,,0,0,4200,"9,223,372,036,854,775,807%",0,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahg7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support zooming in the graphical editor,STS-937,73752,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,30/Apr/10 2:28 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,It would be nice to zoom out the graph to get a big picture view of large applications.,,;27/Apr/10 4:30 PM;ldossantos;18000,;30/Apr/10 2:28 PM;ldossantos;5100,,,,,,,0,0,23100,"9,223,372,036,854,775,807%",0,0,23100,,,,,,,,,,,,,,,,,,,,,,,,,,,285033600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahgf:,9223372036854775807,9223372036854775807,,,,,,"27/Apr/10 4:30 PM;ldossantos;Zooming can be enabled via the keyboard through CTRL+ and CTRL- (CMD+ and CMD-) on Windows and via the mouse scroll wheel by holding down the CTRL or CMD key while scrolling. I've run into some issues enabling the Zoom contribution widget in the toolbar, so I'm not ready to close this issue yet. The discoverability of the zoom functionality without the tool bar widget isn't great.","27/Apr/10 4:31 PM;ldossantos;To correct myself, that's CTRL on Windows & Linux, CMD on Mac.",,,,,,,,,,,,,,,,,,,,,,
Support moving endpoints on existing connections,STS-936,74367,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,06/May/10 11:40 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"For example, if a user wants to change an output-channel connection to point to channelA instead of channelB, they have to delete the existing connection to channelB and then draw a new connection to channelA. It should be possible to select the endpoint on channelB, and drag that to channelA.",,;05/May/10 5:27 PM;ldossantos;7200,;06/May/10 11:40 AM;ldossantos;3600,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahgn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support bidirectional connections on gateway elements,STS-934,74262,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,04/May/10 5:33 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"Gateways and inbound-gateways should be visually represented with their reply and request channel connections on the right side, and outbound-gateways should have their reply and request channel connections on the left side. The request-channel connection should be incoming, and the reply-channel should be outgoing. Currently all left side connections are incoming and all right side connections are outgoing, so this needs to be corrected for gateways.",,;04/May/10 5:33 PM;ldossantos;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,284428800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahdr:,9223372036854775807,9223372036854775807,,,,,,"04/May/10 5:33 PM;ldossantos;There's an issue with connections sometimes drawing over top the element icon, but will try to address it with STS-927",,,,,,,,,,,,,,,,,,,,,,,
Hovering over a connection anchor should display the anchor's title,STS-933,74345,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Apr/10 5:00 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"This currently only works in connection mode, but should also be enabled for selection mode.",,;26/Apr/10 5:00 PM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahdz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Settle on an appropriate visual representation for showing a sequence of elements within a chain,STS-932,74634,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/May/10 4:50 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"Elements that appear within a chain element are executed sequentially. We need to find a good way to show this visually. One idea was to remove the connection anchors from the icons, so that you just see the elements in order. The other idea was to automatically draw the connections from one element to the other and then make these connections non editable.",,;12/May/10 5:40 PM;ldossantos;14400,;13/May/10 4:50 PM;ldossantos;2700,,,,,,,0,0,17100,"9,223,372,036,854,775,807%",0,0,17100,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahe7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove toolbar from the graph page, and move the toggle layout button into the graph pallette",STS-931,73126,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:02 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,30/Apr/10 11:45 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"The toolbar that I added to the graph page has a few bad side effects that I haven't been able to correct. Most notably is that when the graph is wide, we get two horizontal scrollbars and it completely breaks scrolling in the editor. If we move the toggle layout button from the toolbar into the palette, we can get rid of the toolbar.",,;30/Apr/10 11:45 AM;ldossantos;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ah87:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a forms based properties view,STS-929,74326,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,03/May/10 4:47 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,We want to replace the existing properties view with a richer one that has the same forms based UI and content assist functionality that currently exists in the config editor's namespace tabs. This would help minimize switching back and forth between the graph tab and the form tab.,,;28/Apr/10 5:56 PM;ldossantos;21600,;29/Apr/10 5:28 PM;ldossantos;21600,;30/Apr/10 5:12 PM;ldossantos;9000,;03/May/10 4:47 PM;ldossantos;18900,,,,,0,0,71100,"9,223,372,036,854,775,807%",0,0,71100,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ah9z:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get icon samples and information to our graphic designer,STS-928,74151,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Apr/10 10:57 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,,,;26/Apr/10 10:57 AM;ldossantos;5400,;26/Apr/10 11:53 AM;ldossantos;1800,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahav:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connections should not obscure icons,STS-927,74495,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/May/10 1:10 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,This seems to be a problem primarily in free layout mode.,,;14/May/10 5:51 PM;ldossantos;10800,;17/May/10 2:30 PM;ldossantos;10800,;26/May/10 1:10 PM;ldossantos;4200,,,,,,0,0,25800,"9,223,372,036,854,775,807%",0,0,25800,,,,,,,,,,,,,,,,,,,,,,,,,,,282528000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahbz:,9223372036854775807,9223372036854775807,,,,,,"17/May/10 2:30 PM;ldossantos;Made some adjustments to improve the way connections are laid out on the graph. Still not completely satisfied, but it works a little bit better than before. The issue that was raised with gateway elements (STS-934) is fixed.",26/May/10 1:10 PM;ldossantos;I believe I've fixed the remaining issues.,,,,,,,,,,,,,,,,,,,,,,
Centre the connections coming out of the channel icons,STS-926,74187,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 5:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Apr/10 2:39 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,They're currently offset awkwardly.,,;26/Apr/10 2:39 PM;ldossantos;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahcf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support implicit input-channel elements,STS-925,76329,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,23/Apr/10 4:57 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/May/10 4:06 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M9,,,,,,,"When an element defines an input-channel id for which no channel element exists, we want to show the implicit input-channel since it is valid. The icon would be greyed out and non functional, and would be replaced if the channel were later explicitly defined. The idea is the same for channel-adapters that don't have a channel attribute on them.",,;07/May/10 5:36 PM;ldossantos;5400,;10/May/10 5:46 PM;ldossantos;16200,;12/May/10 5:40 PM;ldossantos;5400,;13/May/10 4:06 PM;ldossantos;10800,,,,,0,0,37800,"9,223,372,036,854,775,807%",0,0,37800,,,,,,,,,,,,,,,,,,,,,,,,,,,283651200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ahpb:,9223372036854775807,9223372036854775807,,,,,,10/May/10 5:46 PM;ldossantos;I have implicit channels working for elements that define an unknown input-channel reference. Still need to work on implicit channels for channel-adapters.,13/May/10 4:06 PM;ldossantos;Implicit channels on channel adapters implemented.,,,,,,,,,,,,,,,,,,,,,,
NPE in BundleManifestUtils.locateManifestFolder,STS-921,74136,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Blocker,Complete,,besson,besson,23/Apr/10 1:05 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,07/Jun/10 2:26 AM,2.3.2.RELEASE,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,"STS doesn't find the META-INF folder defined in the bundles root directory. I have added this folder to the source path in the build path properties dialog. The resulting .classpath file is as follows:

<?xml version=""1.0"" encoding=""UTF-8""?>
<classpath>
	<classpathentry kind=""src"" path=""src""/>
	<classpathentry including=""META-INF/"" kind=""src"" path=""""/>
	<classpathentry kind=""con"" path=""org.eclipse.jdt.launching.JRE_CONTAINER""/>
	<classpathentry kind=""con"" path=""com.springsource.server.ide.jdt.core.MANIFEST_CLASSPATH_CONTAINER""/>
	<classpathentry kind=""output"" path=""bin""/>
</classpath>

Why does the BundleManifestUtils.locateManifestFolder method doesn't find that manifest?

My bundles wouldn't be resolved anymore, because no Bundle Dependencies leaf is visible in the package explorer.
",ubuntu 9.04,"Time worked: 00:45 from Tue, 27 Apr 2010 00:00:00 -0700 to Tue, 27 Apr 2010 23:59:59 -0700.;27/Apr/10 4:37 PM;spingel;2700",,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,23/Apr/10 1:53 AM;besson;sampleProjects.zip;https://jira.spring.io/secure/attachment/24023/sampleProjects.zip,23/Apr/10 4:09 AM;cdupuis;sts-921.png;https://jira.spring.io/secure/attachment/23978/sts-921.png,,,,,,,,,,,,285033600,,,,,2010-04-23 01:14:30.39,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajhb:,9223372036854775807,9223372036854775807,,,,,,"23/Apr/10 1:14 AM;cdupuis;Would it be possible to attach a small sample project to this issue? That way I can be sure that I'm looking at the right configuration.
Thanks, Christian","23/Apr/10 1:44 AM;besson;The zip contains three jar's. A bundle with the service definition, the bundle which would export these services through rmi and a par that define these two as an application deployed on a dm Server 2.0","23/Apr/10 1:46 AM;besson;BTW, i've forgotten to thank for fast reply!","23/Apr/10 1:53 AM;besson;Now a more useful copy of the project folders...
sorry, the first one is somewhat useless, so i deleted it","23/Apr/10 4:08 AM;cdupuis;Very strange. I imported your projects all works fine! See attached screenshot.

I'm not sure if this could be a Linux-only problem since I tested on Mac. Can you post the stacktrace from the NPE?

Christian","23/Apr/10 4:11 AM;besson;here is the stacktrace...

!ENTRY com.springsource.server.ide.jdt.core 4 0 2010-04-23 13:14:40.296
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at com.springsource.server.ide.manifest.core.BundleManifestUtils.locateManifestFolder(BundleManifestUtils.java:137)
	at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.addWorkspaceBundle(ServerClasspathContainer.java:399)
	at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.createDependencyLocator(ServerClasspathContainer.java:503)
	at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainer.refreshClasspathEntries(ServerClasspathContainer.java:267)
	at com.springsource.server.ide.jdt.internal.core.util.ClasspathUtils.updateClasspathContainer(ClasspathUtils.java:173)
	at com.springsource.server.ide.jdt.internal.core.classpath.ServerClasspathContainerUpdateJob.runInWorkspace(ServerClasspathContainerUpdateJob.java:76)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
","23/Apr/10 5:28 AM;besson;I recently had success too, but with a completely new workspace using the same projects, the same runtime and the same sts...

It's not the first time i lost a day of work trying to get sts running correctly by ending up with either a new install or
like above a new workspace... hmmm.... Don't misunderstand, i'm very happy with the tooling but i guess in some circumstances it's not as stable as i wish/need for productive work.

any ideas how the state of the workspace can affect the build process?","25/Apr/10 10:53 PM;cdupuis;Very strange. I imported your projects all works fine! See attached screenshot.

I'm not sure if this could be a Linux-only problem since I tested on Mac. Can you post the stacktrace from the NPE?

Christian","27/Apr/10 4:37 PM;spingel;I can reproduce the error with STS 2.3.2 if I manually run the generation of the MANIFEST.MF on the com.no.exists.service project. The problem occurs because the raw location for the project which is identified as the container for the manifest is null on Linux. If I move the META-INF folder into the src folder the exception does occur any longer.

Christian, I have added a null check. Please verify that that is the right fix.
",,,,,,,,,,,,,,,
Make sure tests pass in Eclipse 3.6,STS-920,72805,73363,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,22/Apr/10 10:09 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,31/May/10 6:52 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,,,,,,,,,,"Time worked: 01:00 from Thu, 22 Apr 2010 00:00:00 -0700 to Thu, 22 Apr 2010 23:59:59 -0700.;22/Apr/10 8:57 PM;spingel;3600",,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,285465600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajg7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add documentation to help plug-in,STS-918,73541,72610,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,20/Apr/10 4:48 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,26/Apr/10 2:22 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,,,;26/Apr/10 2:22 PM;spingel;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,285638400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ady7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add configuration UI for triggering auto configuration,STS-915,74198,73986,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,20/Apr/10 1:11 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,10/May/10 2:40 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,y3m9,,,,,,,* Replace Configuration tab on dashboard,,"Time worked: 04:00 from Mon, 26 Apr 2010 00:00:00 -0700 to Mon, 26 Apr 2010 23:59:59 -0700.;26/Apr/10 8:08 PM;spingel;14400",;10/May/10 2:40 PM;spingel;7200,,,,,,,28800,0,21600,75%,28800,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,285638400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0advz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapter elements only appear on the root of the graph,STS-908,74166,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,12/Apr/10 10:47 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,07/May/10 11:27 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,Elements from adapter namespaces currently don't appear within containers.,,;06/May/10 6:05 PM;ldossantos;12600,;07/May/10 11:27 AM;ldossantos;2700,,,,,,,0,0,15300,"9,223,372,036,854,775,807%",0,0,15300,,,,,,,,,,,,,,,,,,,,,,,,,,,284256000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aam7:,9223372036854775807,9223372036854775807,,,,,,"06/May/10 6:05 PM;ldossantos;I have elements from the adapter namespaces contributing into chain elements now. This is mostly done, want to polish a few things tommorrow before I close this off.",,,,,,,,,,,,,,,,,,,,,,,
Contribute adapter elements to the tool palette,STS-907,73075,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Complete,ldossantos,ldossantos,ldossantos,12/Apr/10 10:47 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Apr/10 1:44 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,We need to be able to drag & drop elements from the tool palette onto the graph canvas when an Integration adapter namespace is enabled.,,;12/Apr/10 5:48 PM;ldossantos;18000,;13/Apr/10 4:53 PM;ldossantos;16200,;14/Apr/10 6:17 PM;ldossantos;14400,;15/Apr/10 1:43 PM;ldossantos;3600,,,,,0,0,52200,"9,223,372,036,854,775,807%",0,0,52200,,,,,,,,,,,,,,,,,,,,,,,,,,,286329600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aamn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ensure that automatic workspace configuration works on Eclipse 3.5 and 3.6,STS-905,73083,73363,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,09/Apr/10 4:37 PM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,12/Apr/10 4:58 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,,,"Time worked: 03:40 from Mon, 12 Apr 2010 00:00:00 -0700 to Mon, 12 Apr 2010 23:59:59 -0700.;12/Apr/10 4:58 PM;spingel;13200","Time worked: 01:00 from Tue, 13 Apr 2010 00:00:00 -0700 to Tue, 13 Apr 2010 23:59:59 -0700.;13/Apr/10 6:33 PM;spingel;3600","Time worked: 00:30 from Thu, 15 Apr 2010 00:00:00 -0700 to Thu, 15 Apr 2010 23:59:59 -0700.;15/Apr/10 10:44 PM;spingel;1800",,,,,,14400,0,18600,129%,14400,0,18600,,,,,,,,,,,,,,,,,,,,,,,,,,,286588800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aat3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add provisional support for the Integration adapters,STS-897,74915,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,31/Mar/10 10:51 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,12/Apr/10 10:52 AM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"First step here would be to generate graph data for the channel & channel adapter elements.

integration-file:
* <file-to-bytes-transformer> w/ input & output channel connections
* <file-to-string-transformer> w/ input & output channel connections
* <inbound-channel-adapter> w/ channel connection
* <outbound-channel-adapter> w/ channel connection
* <outbound-gateway> w/ request & reply channel connections
 
integration-http
* <inbound-channel-adapter> w/ channel connection
* <inbound-gateway> w/ request & reply channel connections
* <outbound-gateway> w/ request & reply channel connections
 
integration-httpinvoker
* <inbound-gateway> w/ request & reply channel connections
* <outbound-gateway> w/ request & reply channel connections
 
integration-ip
* <inbound-channel-adapter> w/ channel connection
* <outbound-channel-adapter> w/ channel connection
 
integration-jdbc
* <inbound-channel-adapter> w/ channel connection
 
integration-jms
* <channel>
* <header-enricher> w/ input & output channel connections
* <inbound-channel-adapter> w/ channel connection
* <inbound-gateway> w/ request channel connection
* <message-driven-channel> w/ channel connection
* <outbound-channel-adapter> w/ channel connection
* <outbound-gateway> w/ request & reply channel connections
* <publish-subscribe-channel>
 
integration-jmx
* <attribute-polling-channel-adapter> w/ channel connection
* <notification-listening-channel-adapter>  w/ channel connection
* <notification-publishing-channel-adapter>  w/ channel connection
* <operation-invoking-channel-adapter>  w/ channel connection

integration-mail
* <header-enricher> w/ input & output channel connection
* <imap-idle-channel-adapter> w/ channel connection
* <inbound-channel-adapter> w/ channel connection
* <mail-to-string-transformer> w/ input & output channel connections
* <outbound-channel-adapter> w/ channel connection

integration-rmi
* <inbound-gateway> w/ request & reply channel connections
* <outbound-gateway> w/ request & reply channel connections

integration-security (no channel references)

integration-stream
* <stderr-channel-adapter> w/ channel connection
* <stdin-channel-adapter> w/ channel connection
* <stdout-channel adapter> w/ channel connection

integration-ws
* <header-enricher> w/ input & output channel connections
* <inbound-gateway> w/ request & reply channel connections
* <outbound-gateway> w/ request & reply channel connections

integration-xml
* <marshalling-transformer> w/ input & output channel connections
* <unmarshalling-transformer> w/ input & output channel connections
* <validating-router> w/ input channel connection
* <xpath-router> w/ input channel & default output channel connections
* <xpath-splitter> w/ input & output channel connections
* <xslt-transformer> w/ input & output channel connections",,;31/Mar/10 5:58 PM;ldossantos;19800,;05/Apr/10 5:40 PM;ldossantos;16200,;12/Apr/10 10:52 AM;ldossantos;79200,,,,,,0,0,115200,"9,223,372,036,854,775,807%",0,0,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,286329600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a0zj:,9223372036854775807,9223372036854775807,,,,,,12/Apr/10 10:52 AM;ldossantos;Graph is capable of reading in elements from the Integration adapter namespaces. Opened STS-907 and STS-908 to address existing issues.,,,,,,,,,,,,,,,,,,,,,,,
add test plan that builds and runs against Helios,STS-892,72455,73363,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,29/Mar/10 3:55 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Apr/10 11:10 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,,,"Time worked: 03:00 from Tue, 13 Apr 2010 00:00:00 -0700 to Tue, 13 Apr 2010 23:59:59 -0700.;13/Apr/10 6:34 PM;spingel;10800","Time worked: 00:30 from Thu, 15 Apr 2010 00:00:00 -0700 to Thu, 15 Apr 2010 23:59:59 -0700.;15/Apr/10 10:44 PM;spingel;1800",,,,,,,0,0,12600,"9,223,372,036,854,775,807%",0,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,,287539200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1dr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.IllegalArgumentException from BeansEditorValidator when opening XML resources from JARs,STS-863,74165,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,cdupuis,cdupuis,11/Mar/10 10:33 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,19/Mar/10 10:43 AM,2.3.1.RELEASE,,,,,,,2.5.0.RC1,,,,,,,,,0,Y3M7,,,,,,,"When opening an XML that sits in a JAR the following exception occurs. 

You can re-create this with opening the spring.xml from the attached jar (put it on the classpath).

{code}
java.lang.IllegalArgumentException: Path must include project and resource name: /spring.xml
	at org.eclipse.core.runtime.Assert.isLegal(Assert.java:63)
	at org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1634)
	at org.eclipse.core.internal.resources.Container.getFile(Container.java:123)
	at com.springsource.sts.quickfix.BeansEditorValidator.connect(BeansEditorValidator.java:200)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.setInputModel(ReconcileStepForValidator.java:312)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.reconcile(ValidatorStrategy.java:251)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.process(DocumentRegionProcessor.java:199)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.process(StructuredRegionProcessor.java:221)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor.run(DirtyRegionProcessor.java:641)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

{code}",,"Time worked: 00:37 from Sun, 14 Mar 2010 00:00:00 -0800 to Sat, 20 Mar 2010 23:59:59 -0700.;19/Mar/10 10:43 AM;thon;2220",,,,,,,,0,0,2220,"9,223,372,036,854,775,807%",0,0,2220,,,,,,,,,,,,,,11/Mar/10 10:34 PM;cdupuis;SimpleLogger.jar;https://jira.spring.io/secure/attachment/23965/SimpleLogger.jar,,,,,,,,,,,,,288403200,,,,,2010-03-19 10:43:17.137,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09ytr:,9223372036854775807,9223372036854775807,,,,,,19/Mar/10 10:43 AM;thon;This should now fixed. Validations are not done on spring.xml files that are in jar files now.,,,,,,,,,,,,,,,,,,,,,,,
Extensions Dashboard Panel - Infinitest and PMD remain after installation,STS-859,75094,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,rpurcell,rpurcell,11/Mar/10 7:26 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,11/Jun/10 6:00 PM,2.3.1.RELEASE,,,,,,,2.3.3.M2,,,,,,,,,0,y3m8,,,,,,,"After a fresh install, selecting EclEmma, FindBugs, Infinitest, PMD and installing these successfully: the icons for Infinitest and PMD appear again in the Extensions panel after a restart.  See screenshot.  Attempting to install these again causes an error.  As far as I can tell these tools are all actually installed correctly.","Mac OS X Snow Leopard, springsource-tool-suite-2.3.1.RELEASE-e3.5.2-macosx-cocoa-x86_64","Time worked: 04:00 from Thu, 8 Apr 2010 00:00:00 -0700 to Thu, 8 Apr 2010 23:59:59 -0700.;08/Apr/10 4:58 PM;spingel;14400",;13/Apr/10 3:44 PM;spingel;7200,,,,,,,0,0,21600,"9,223,372,036,854,775,807%",0,0,21600,,,,,,,,,,,,,,11/Mar/10 7:26 AM;rpurcell;SpringSource Tool Suite.png;https://jira.spring.io/secure/attachment/24714/SpringSource+Tool+Suite.png,,,,,,,,,,,,,281145600,,,,,2010-06-11 18:00:16.369,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09z73:,9223372036854775807,9223372036854775807,,,,,,11/Jun/10 6:00 PM;spingel;This will be fixed in the next release of STS.,,,,,,,,,,,,,,,,,,,,,,,
change dependencies to Atlassian JIRA connector,STS-854,73842,73834,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,08/Mar/10 5:41 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Apr/10 9:51 PM,,,,,,,,2.3.3.M2,,,,,,,,,2,y3m8,,,,,,,"* Refactor source
* Update feature dependencies
* Update build scripts",,;15/Apr/10 9:51 PM;spingel;7200,"Time worked: 03:30 from Fri, 16 Apr 2010 00:00:00 -0700 to Fri, 16 Apr 2010 23:59:59 -0700.;20/Apr/10 11:20 AM;spingel;12600",,,,,,,0,0,19800,"9,223,372,036,854,775,807%",0,0,19800,,,,,,,,,,,,,,,,,,,,,,,,,,,289353600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09u93:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create contribution for default Eclipse welcome page,STS-835,73156,74300,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,18/Feb/10 12:42 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,18/Feb/10 5:32 PM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,y3m6,,,,,,,,,;18/Feb/10 5:32 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,290908800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09wkv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Export Batch graphs to external file (e.g. image),STS-822,72516,,New Feature,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,ldossantos,dsyer,dsyer,11/Feb/10 8:56 AM,30/Nov/10 4:56 PM,10/May/19 2:36 AM,01/Mar/10 10:38 AM,,,,,,,,2.3.2.RELEASE,Sprint 10,,,,,,,,0,Y3M6,,,,,,,Export Batch graphs to external file (e.g. image) so it can be emailed / printed etc.,,;01/Mar/10 10:39 AM;ldossantos;9900,,,,,,,,,0,9900,,,0,9900,,,,,,,,,,,,,,11/Feb/10 9:01 AM;dsyer;batch-graph.jpg;https://jira.spring.io/secure/attachment/24011/batch-graph.jpg,,,,,,,,,,,,,289958400,,,,,2010-03-01 10:38:38.508,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ak07:,9223372036854775807,9223372036854775807,,,,,,11/Feb/10 9:01 AM;dsyer;Attached screen shot (batch-graph.jpg) of badly drawn graph (lines criss-crossing over important other components is the main problem).,01/Mar/10 10:38 AM;ldossantos;You'll be able to use the export menu to export the graph as png/jpg/bmp and you'll be able to use the print menu to print the graph as well.,,,,,,,,,,,,,,,,,,,,,,
Drawing problems with Spring Batch graph editor,STS-821,72975,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,dsyer,dsyer,11/Feb/10 8:56 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,01/Mar/10 5:40 PM,2.3.1.RELEASE,,,,,,,2.3.2.RELEASE,Sprint 10,,,,,,,,0,Y3M6,,,,,,,"Drawing problems with Spring Batch graph editor.  The graphs are not very readable once they get a few flows on them.  Also, dragging a new element onto the pane puts it out of sight (you have to know that it's there and scroll to it).",,;01/Mar/10 5:40 PM;ldossantos;6300,,,,,,,,0,0,6300,"9,223,372,036,854,775,807%",0,0,6300,,,,,,,,,,,,,,,,,,,,,,,,,,,289958400,,,,,2010-02-11 09:59:31.822,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ajzz:,9223372036854775807,9223372036854775807,,,,,,"11/Feb/10 9:59 AM;ldossantos;I've been working on a manual layout mode that will allow the user to move the graph objects where ever they want to place them, and dragging new elements will place them directly where the user clicked. The plan is to roll out this feature along with the Spring Integration graphs, but it will work with Spring Batch graphs as well.","01/Mar/10 5:40 PM;ldossantos;There's no reason to wait for the SI graph, since the layout feature is already implemented we're going to roll it out with STS 2.3.1. Look for new header in the Spring Batch graph editor. There will be a button that will allow toggling between automatic layout mode (the current default), and manual layout mode. Having a manual layout option should alleviate the problems you've described.",,,,,,,,,,,,,,,,,,,,,,
[Config editor] Pre-fill fields with their default values.,STS-813,74233,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,08/Feb/10 10:51 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,09/Feb/10 4:04 PM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,Y3M6,,,,,,,,,;08/Feb/10 5:29 PM;ldossantos;3000,;09/Feb/10 4:04 PM;ldossantos;8400,,,,,,,0,0,11400,"9,223,372,036,854,775,807%",0,0,11400,,,,,,,,,,,,,,,,,,,,,,,,,,,291772800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ae2n:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Config Editor] Required fields should be highlighted in some manner.,STS-812,74772,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,08/Feb/10 10:49 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,08/Feb/10 4:39 PM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,Y3M6,,,,,,,"A great example is the PDE forms, which denote required fields with an asterisk. We might also want to sort required fields to the top.",,;08/Feb/10 4:39 PM;ldossantos;8400,,,,,,,,0,0,8400,"9,223,372,036,854,775,807%",0,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,291772800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ae2v:,9223372036854775807,9223372036854775807,,,,,,"08/Feb/10 4:39 PM;ldossantos;Default attributes are now sorted to the top and are marked with an asterisk. This is only enabled for form pages that are read from the XSD, which for now is Spring Batch 2.1 form pages and Spring Integration (all versions). Will roll out these features to other Spring projects in the future.",,,,,,,,,,,,,,,,,,,,,,,
copy insight configuration files to workspace,STS-801,73067,72598,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,02/Feb/10 4:51 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,02/Feb/10 5:23 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m5,,,,,,,* spring-insight.yml,,;02/Feb/10 5:23 PM;spingel;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,292291200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aagn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Remove @Deprecated quick fix proposal for class and method,STS-799,73751,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,01/Feb/10 2:54 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,04/Feb/10 1:26 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M5,,,,,,,,,"Time worked: 02:01 from Sun, 31 Jan 2010 00:00:00 -0800 to Sat, 6 Feb 2010 23:59:59 -0800.;01/Feb/10 4:56 PM;thon;7260","Time worked: 05:27 from Sun, 31 Jan 2010 00:00:00 -0800 to Sat, 6 Feb 2010 23:59:59 -0800.;04/Feb/10 1:26 PM;thon;19620",,,,,,,21600,0,26880,124%,21600,0,26880,,,,,,,,,,,,,,,,,,,,,,,,,,,292377600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aamv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix duplicate proposals shown for quick fix,STS-798,76392,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,01/Feb/10 10:28 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,10/Feb/10 5:10 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M6,,,,,,,,,"Time worked: 04:21 from Sun, 7 Feb 2010 00:00:00 -0800 to Sat, 13 Feb 2010 23:59:59 -0800.;10/Feb/10 5:10 PM;thon;15660",,,,,,,,0,0,15660,"9,223,372,036,854,775,807%",0,0,15660,,,,,,,,,,,,,,,,,,,,,,,,,,,292377600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aamf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
only show tc Server and dm Server extensions if not installed,STS-795,74532,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,29/Jan/10 1:47 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,08/Feb/10 7:04 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m6,,,,,,,,,;08/Feb/10 7:04 PM;spingel;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,292636800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aaw7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
verify that insight actions are only displayed when insight application is available and enabled,STS-794,74526,72598,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,29/Jan/10 1:46 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,10/Feb/10 5:35 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m6,,,,,,,,,;04/Feb/10 8:22 PM;spingel;3600,;10/Feb/10 5:35 PM;spingel;1800,,,,,,,7200,0,5400,75%,7200,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,292118400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aawf:,9223372036854775807,9223372036854775807,,,,,,"04/Feb/10 8:22 PM;spingel;Christian, do you prefer to not show the action at all or disable it in the context menu? Right now it is getting disabled if the server is not running or if Insight is not enabled.",,,,,,,,,,,,,,,,,,,,,,,
specify platform filters for bundles that use new extension point format,STS-793,74133,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,29/Jan/10 1:42 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,04/Feb/10 9:51 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m5,,,,,,,,,;04/Feb/10 9:51 PM;spingel;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,292118400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aax3:,9223372036854775807,9223372036854775807,,,,,,04/Feb/10 9:51 PM;spingel;Added filter expression. It will work as long as the versions are single digit since it's based on alphabetical ordering.,,,,,,,,,,,,,,,,,,,,,,,
show PONT dialog on first launch,STS-790,74549,72598,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,28/Jan/10 12:22 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,10/Feb/10 5:35 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m6,,,,,,,"If a user launches tc Server for the first time, a dialog is shown indicating how to enable Insight (only if Insight is disabled, Checkbox for never show again"").",,;05/Feb/10 6:36 PM;spingel;10800,"Time worked: 00:50 from Wed, 10 Feb 2010 00:00:00 -0800 to Wed, 10 Feb 2010 23:59:59 -0800.;10/Feb/10 5:35 PM;spingel;3000",,,,,,,7200,0,13800,191%,7200,0,13800,,,,,,,,,,,,,,,,,,,,,,,,,,,292723200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ab5j:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add check box to tc Server editor,STS-789,74925,72598,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,28/Jan/10 12:21 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,02/Feb/10 8:04 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m5,,,,,,,Add check box on the tc Server editor to enable/disable (default disable) Spring Insight. If not checked the -Dinsight.enabled=false system property is added to the launch configuration.,,;02/Feb/10 8:03 PM;spingel;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,292723200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ab5r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove attribute restriction while reporting messages in quickfix validation,STS-785,73763,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,27/Jan/10 10:48 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,29/Jan/10 8:01 AM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,Y3M5,,,,,,,,,"Time worked: 17:00 from Sun, 24 Jan 2010 00:00:00 -0800 to Sat, 30 Jan 2010 23:59:59 -0800.;29/Jan/10 8:01 AM;thon;61200",,,,,,,,28800,0,61200,212%,28800,0,61200,,,,,,,,,,,,,,,,,,,,,,,,,,,292809600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ab33:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support dynamic generation of form content for the config editor,STS-784,75349,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,26/Jan/10 2:15 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,01/Feb/10 4:31 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M5,,,,,,,"The form pages of the config editor are crafted by hand for every XML element. Going forward, we want to be able to read a namespace's XSD and generate the form content from the definition. There is sufficient tooling information in the XSD's to generate content assist and hyperlink detectors for the form pages. This would significantly cut down on the amount of time required to add support for a new namespace, or update an existing one.",,;27/Jan/10 3:38 PM;ldossantos;27000,;01/Feb/10 4:31 PM;ldossantos;19200,,,,,,,0,0,46200,"9,223,372,036,854,775,807%",0,0,46200,,,,,,,,,,,,,,,,,,,,,,,,,,,292377600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ab2n:,9223372036854775807,9223372036854775807,,,,,,01/Feb/10 4:31 PM;ldossantos;Generated forms will ship with STS 2.3.1,,,,,,,,,,,,,,,,,,,,,,,
fix failing config editor tests,STS-783,72246,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,spingel,spingel,26/Jan/10 1:20 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Feb/10 5:58 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M6,,,,,,,,,"Time worked: 02:00 from Tue, 26 Jan 2010 00:00:00 -0800 to Tue, 26 Jan 2010 23:59:59 -0800.;26/Jan/10 3:59 PM;spingel;7200",,,,,,,,14400,0,7200,50%,14400,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,291168000,,,,,2010-02-15 17:57:12.357,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ab2v:,9223372036854775807,9223372036854775807,,,,,,"27/Jan/10 6:13 PM;spingel;Leo, assigning back to you for the remainder of the work.",15/Feb/10 5:57 PM;ldossantos;Config tests have been passing for a couple of weeks now.,15/Feb/10 5:57 PM;ldossantos;Config tests have been passing for a couple of weeks now.,,,,,,,,,,,,,,,,,,,,,
Fix quickfix tests,STS-782,73520,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,25/Jan/10 1:58 PM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,26/Jan/10 10:39 AM,,,,,,,,2.5.0.RC1,,,,,,,,,0,Y3M5,,,,,,,,,"Time worked: 05:29 from Sun, 24 Jan 2010 00:00:00 -0800 to Sat, 30 Jan 2010 23:59:59 -0800.;26/Jan/10 10:39 AM;thon;19740",;28/Jan/10 8:56 AM;spingel;3600,"Time worked: 06:46 from Sun, 24 Jan 2010 00:00:00 -0800 to Sat, 30 Jan 2010 23:59:59 -0800.;29/Jan/10 4:28 PM;thon;24360",,,,,,7200,0,47700,662%,7200,0,47700,,,,,,,,,,,,,,,,,,,,,,,,,,,292636800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a8of:,9223372036854775807,9223372036854775807,,,,,,26/Jan/10 10:39 AM;thon;quickfix tests are now running properly again.,29/Jan/10 4:28 PM;thon;The quickfix UI tests should now be running properly.,,,,,,,,,,,,,,,,,,,,,,
Memory settings for tc Server too restrictive?,STS-779,74903,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,ewolff,ewolff,21/Jan/10 2:01 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,26/Feb/10 9:45 AM,,,,,,,,2.3.1.RELEASE,2.3.2.RELEASE,Sprint 10,,,,,,,0,y3m6,,,,,,,I ran a ROO generated application on the built in tc Server developer edition and tried to show the performance metrics. tc Server crashed on me with an OutOfMemoryError - Heap Space. So I guess it would make sense to increase the settings. Also the whole thing seemed slow which might be caused by garbage collection.,"Mac OS X 10.6, JDK 1.6, STS 2.3.0, ROO 1.0.0.RELEASE",;26/Feb/10 9:45 AM;spingel;7200,,,,,,,,7200,7200,7200,100%,7200,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,290822400,,,,,2010-02-19 14:19:34.055,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a727:,9223372036854775807,9223372036854775807,,,,,,"19/Feb/10 2:19 PM;spingel;The startup scripts shipped with tc Server specify ""-Xmx512m -Xss192k"". I'll change the tc Server tooling to add these parameters to the generated launch configuration by default unless overridden by the user.",,,,,,,,,,,,,,,,,,,,,,,
indicate if extension have already been installed,STS-778,74414,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,20/Jan/10 5:56 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,25/Jan/10 3:49 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m5,,,,,,,,,"Time worked: 06:00 from Mon, 18 Jan 2010 00:00:00 -0800 to Sun, 24 Jan 2010 23:59:59 -0800.;25/Jan/10 3:49 PM;spingel;21600",,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,293414400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a72n:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
improve extension point documentation,STS-777,74227,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Jan/10 6:55 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,20/Jan/10 5:03 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m5,,,,,,,,,;20/Jan/10 5:03 AM;spingel;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,293500800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a73j:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add check for updates button,STS-776,74635,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Jan/10 6:54 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,25/Jan/10 3:50 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m5,,,,,,,,,"Time worked: 02:00 from Mon, 25 Jan 2010 00:00:00 -0800 to Sun, 31 Jan 2010 23:59:59 -0800.;25/Jan/10 3:50 PM;spingel;7200",,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,293500800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a73r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
support filtering of directory entries,STS-775,74531,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Jan/10 6:53 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,25/Jan/10 3:49 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m5,,,,,,,,,"Time worked: 03:00 from Mon, 18 Jan 2010 00:00:00 -0800 to Sun, 24 Jan 2010 23:59:59 -0800.;25/Jan/10 3:49 PM;spingel;10800",,,,,,,,14400,0,10800,75%,14400,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,293500800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a7hj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
support installation of multiple features per discovery entry,STS-774,73981,73517,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Jan/10 6:53 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,20/Jan/10 5:04 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m5,,,,,,,,,;20/Jan/10 5:04 AM;spingel;18000,,,,,,,,0,0,18000,"9,223,372,036,854,775,807%",0,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,293500800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a7ev:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix failing GEF editor tests,STS-769,72584,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,18/Jan/10 11:39 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,12/Feb/10 2:38 PM,Sprint 8,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,,,,,,,,"Some of our GEF based tests are failing. Since these tests were implemented, SWTBot has added GEF support. Suggest we move to the official SWTBot GEF plugin for our GEF tests.",,"Time worked: 03:00 from Sun, 17 Jan 2010 00:00:00 -0800 to Sat, 23 Jan 2010 23:59:59 -0800.;19/Jan/10 11:01 AM;ldossantos;10800",,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,293587200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a7av:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add test coverage reporting to build,STS-765,74271,74338,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,13/Jan/10 3:39 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/Jan/10 9:07 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,,,,,,,,,,;13/Jan/10 9:07 PM;spingel;7200,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,294019200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a3bj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't add an object onto graph canvas when in automatic layout mode.,STS-764,74011,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,13/Jan/10 11:21 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/Jan/10 11:31 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M5,,,,,,,"Objects can be dropped onto other containers, just not the main canvas. Some kind of regression.",,"Time worked: 00:10 from Sun, 10 Jan 2010 00:00:00 -0800 to Sat, 16 Jan 2010 23:59:59 -0800.;13/Jan/10 11:31 AM;ldossantos;600",,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,294019200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a3tj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix compile errors on Eclipse 3.4,STS-759,74231,74338,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,12/Jan/10 6:34 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,12/Jan/10 10:36 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,,,,,,,,,,;12/Jan/10 10:36 PM;spingel;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,294105600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a3lr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Coordinate persistence should be split out on a per-file basis,STS-756,72825,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Won't Fix,ldossantos,ldossantos,ldossantos,12/Jan/10 11:07 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,14/Jan/10 3:39 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M5,,,,,,,"Initial implementation has all graphs saving their coordinates into one pref file, but we'll want to have one pref file per config file.",,;14/Jan/10 3:39 PM;ldossantos;2400,,,,,,,,0,0,2400,"9,223,372,036,854,775,807%",0,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,293932800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a12f:,9223372036854775807,9223372036854775807,,,,,,"14/Jan/10 3:39 PM;ldossantos;After discussing this again, we've figured it's fine the way it is.",,,,,,,,,,,,,,,,,,,,,,,
"In manual layout mode, adding a new element should drop it in place",STS-755,75877,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,12/Jan/10 11:07 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/Jan/10 1:18 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M5,,,,,,,"Currently the items get placed arbitrarily (maybe at [0,0])",,;13/Jan/10 1:18 PM;ldossantos;7800,,,,,,,,0,0,7800,"9,223,372,036,854,775,807%",0,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,294105600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a12v:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move the layout toggle button from the window toolbar into the editor header,STS-754,74330,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,12/Jan/10 11:06 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,16/Feb/10 3:56 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M6,,,,,,,,,;16/Feb/10 3:56 PM;ldossantos;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,294105600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a147:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Graph pages should have a form header,STS-753,72183,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,12/Jan/10 11:06 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Feb/10 5:54 PM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,Y3M6,,,,,,,"We want a form header on the graph pages (batch & integration) just like we have on all the other form pages, so that we can give error feedback and pop some toolbars into.",,;12/Jan/10 4:59 PM;ldossantos;14400,;14/Jan/10 4:13 PM;ldossantos;22200,;12/Feb/10 4:41 PM;ldossantos;38700,;15/Feb/10 5:54 PM;ldossantos;14400,,,,,0,0,89700,"9,223,372,036,854,775,807%",0,0,89700,,,,,,,,,,,,,,,,,,,,,,,,,,,291168000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a14f:,9223372036854775807,9223372036854775807,,,,,,"19/Jan/10 5:20 PM;ldossantos;I've tried tackling this 3 different ways, and every time I end up with some major repainting issues that I haven't been able to solve.","10/Feb/10 3:23 PM;ldossantos;In reply to comment #1:
> I've tried tackling this 3 different ways, and every time I end up with some
> major repainting issues that I haven't been able to solve.

These painting issues seem to only be a problem on Cocoa. Testing on Carbon and Win32 works as expected, so I'll have to find out exactly what bug we're exposing in Cocoa, and find a workaround.",12/Feb/10 4:41 PM;ldossantos;I've found a workaround for the drawing error on Cocoa and committed the header code. I still need to abstract out the error display code from the form pages so that we can put that into the graph pages as well.,15/Feb/10 5:54 PM;ldossantos;Graph pages show error/status message in the header just like the form pages have always done.,,,,,,,,,,,,,,,,,,,,
Persist section collapse state on dashboard restart,STS-752,74645,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,12/Jan/10 10:48 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,12/Jan/10 5:03 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M5,,,,,,,,,"Time worked: 01:19 from Sun, 10 Jan 2010 00:00:00 -0800 to Sat, 16 Jan 2010 23:59:59 -0800.;12/Jan/10 5:12 PM;thon;4740",,,,,,,,14400,0,4740,32%,14400,0,4740,,,,,,,,,,,,,,,,,,,,,,,,,,,294105600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a13r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't undo graph movement,STS-751,74365,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,08/Jan/10 2:17 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Jan/10 1:34 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M5,,,,,,,"Put the integration-graph into manual layout mode and move some element of the graph. Command-Z to undo the operation, and see that nothing happens. Commands are currently routed to the source editor, so these kind of move operations which don't change the xml aren't captured. Need to unify the command stack between the source editor and the graphical editor.",,"Time worked: 07:30 from Sun, 10 Jan 2010 00:00:00 -0800 to Sat, 16 Jan 2010 23:59:59 -0800.;11/Jan/10 5:05 PM;ldossantos;27000",;14/Jan/10 6:01 PM;ldossantos;12600,;15/Jan/10 1:34 PM;ldossantos;5400,,,,,,0,0,45000,"9,223,372,036,854,775,807%",0,0,45000,,,,,,,,,,,,,,,,,,,,,,,,,,,294451200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1hz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Graph chokes when an item defines an transition onto itself.,STS-719,74921,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,17/Dec/09 2:48 PM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,18/Dec/09 11:55 AM,2.3.0.RELEASE,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"Run the wizard for the Spring Batch Admin Webapp project template. Open the module-context.xml file and switch to the the batch-graph tab. Note that the graph is blank despite there being 3 jobs in the file. It seems that the graph is choking on the ""infinite"" job with the ""infinite.s1"" step recursing on itself. Need to find a fix for that. Stack trace below:

Error
Thu Dec 17 14:39:44 PST 2009
Unhandled event loop exception

org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.RuntimeException: Cycle detected in graph)
	at org.eclipse.swt.SWT.error(SWT.java:3884)
	at org.eclipse.swt.SWT.error(SWT.java:3799)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:137)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3405)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3102)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
Caused by: java.lang.RuntimeException: Cycle detected in graph
	at org.eclipse.draw2d.graph.InitialRankSolver.solve(InitialRankSolver.java:54)
	at org.eclipse.draw2d.graph.InitialRankSolver.visit(InitialRankSolver.java:33)
	at org.eclipse.draw2d.graph.DirectedGraphLayout.visit(DirectedGraphLayout.java:98)
	at com.springsource.sts.config.flow.parts.GraphLayoutManager.layout(GraphLayoutManager.java:62)
	at com.springsource.sts.config.flow.parts.GraphXYLayout.layout(GraphXYLayout.java:36)
	at org.eclipse.draw2d.Figure.layout(Figure.java:1029)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1739)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.Viewport.validate(Viewport.java:363)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1741)
	at org.eclipse.draw2d.DeferredUpdateManager.performValidation(DeferredUpdateManager.java:207)
	at org.eclipse.draw2d.DeferredUpdateManager.performUpdate(DeferredUpdateManager.java:179)
	at org.eclipse.draw2d.DeferredUpdateManager$UpdateRequest.run(DeferredUpdateManager.java:48)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	... 22 more

",,;18/Dec/09 11:55 AM;ldossantos;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,296265600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09twn:,9223372036854775807,9223372036854775807,,,,,,"18/Dec/09 11:55 AM;ldossantos;GEF doesn't support items that cycle on themselves. I've made a change so that transitions are ignored when the source and target are equal. What this means is that visualizations such as the infinite example won't show that the step is cycling on itself. Since the alternative is a runtime exception, I think it's a fair compromize.",,,,,,,,,,,,,,,,,,,,,,,
Fix STS Dashboard layout problems,STS-717,74762,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,17/Dec/09 10:47 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,17/Dec/09 3:11 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"Some problems when dashboard is resized
* text gets cut off horizontally when resizing horizontally
* feed description is cut down to one line when resizing vertically
* tutorial section has wrong size when tutorials are not installed",,"Time worked: 03:07 from Sun, 13 Dec 2009 00:00:00 -0800 to Sat, 19 Dec 2009 23:59:59 -0800.;17/Dec/09 3:11 PM;thon;11220",,,,,,,,3600,0,11220,311%,3600,0,11220,,,,,,,,,,,,,,,,,,,,,,,,,,,296352000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09txz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse NamepsaceElementsRule in as-you-type validation,STS-710,74134,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:22 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Jan/10 2:56 PM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,Y3M5,,,,,,,,,"Time worked: 03:02 from Mon, 18 Jan 2010 00:00:00 -0800 to Mon, 18 Jan 2010 23:59:59 -0800.;18/Jan/10 5:12 PM;thon;10920",,,,,,,,7200,0,10920,151%,7200,0,10920,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9s7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanPropertyRule in as-you-type validation,STS-708,73072,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:19 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,11/Dec/09 4:01 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 00:30 from Sun, 6 Dec 2009 00:00:00 -0800 to Sat, 12 Dec 2009 23:59:59 -0800.;11/Dec/09 4:01 PM;thon;1800",,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9rb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanInitDestroyMethodRule in as-you-type validation,STS-706,72167,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:17 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,14/Dec/09 1:18 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 00:52 from Sun, 13 Dec 2009 00:00:00 -0800 to Sat, 19 Dec 2009 23:59:59 -0800.;14/Dec/09 1:18 PM;thon;3120",,,,,,,,7200,0,3120,43%,7200,0,3120,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aaav:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanFactoryRule in as-you-type validation,STS-705,72636,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:17 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,14/Dec/09 11:23 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 01:24 from Sun, 13 Dec 2009 00:00:00 -0800 to Sat, 19 Dec 2009 23:59:59 -0800.;14/Dec/09 11:23 AM;thon;5040",,,,,,,,7200,0,5040,70%,7200,0,5040,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aaan:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanDeprecationRule in as-you-type validation,STS-704,74230,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:16 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Dec/09 1:39 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 01:11 from Sun, 13 Dec 2009 00:00:00 -0800 to Sat, 19 Dec 2009 23:59:59 -0800.;15/Dec/09 1:38 PM;thon;4260",,,,,,,,7200,0,4260,59%,7200,0,4260,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aaaf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanConstructorArgumentRule in as-you-type validation,STS-701,74150,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 1:14 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,07/Jan/10 10:00 AM,,,,,,,,2.3.1.RELEASE,,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 01:00 from Sun, 6 Dec 2009 00:00:00 -0800 to Sat, 12 Dec 2009 23:59:59 -0800.;11/Dec/09 4:44 PM;thon;3600",,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,296611200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aa53:,9223372036854775807,9223372036854775807,,,,,,14/Dec/09 10:38 AM;thon;Currently all constructor arguments are treated as Object type. Needs to refine this to make quickfix work properly,,,,,,,,,,,,,,,,,,,,,,,
Reuse BeanClassRule in as-you-type validation,STS-699,73539,74146,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,11/Dec/09 11:59 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,11/Dec/09 1:26 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,"Time worked: 01:30 from Fri, 11 Dec 2009 00:00:00 -0800 to Fri, 11 Dec 2009 23:59:59 -0800.;11/Dec/09 1:25 PM;thon;5400",,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aa67:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a new layout manager for container parts,STS-698,75175,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,11/Dec/09 10:53 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Dec/09 5:01 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"The existing layout manager on container parts relies on an automatic layout algorithm to resize the container to fit its children. As we swap out the automatic layout algorithm for a coordinate based algorithm, we lose the ability to size containers.",,;15/Dec/09 5:01 PM;ldossantos;25200,,,,,,,,0,0,25200,"9,223,372,036,854,775,807%",0,0,25200,,,,,,,,,,,,,,,,,,,,,,,,,,,296524800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aa5z:,9223372036854775807,9223372036854775807,,,,,,15/Dec/09 5:01 PM;ldossantos;I was able to reuse the automatic layout algorithm to set the bounds on the containers. There's some issues with regards to parts having their coordinates changed around that will need to be sorted out as part of TOOLS-647 ,,,,,,,,,,,,,,,,,,,,,,,
Make sure as you type quickfixes correspond to Spring IDE validations,STS-695,74146,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,08/Dec/09 10:26 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,12/Feb/10 10:10 AM,,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,,,,,,,,Make sure that error messages are consistent and that all validation rules in Spring IDE are implemented in as you type quickifx,,"Time worked: 06:00 from Tue, 8 Dec 2009 00:00:00 -0800 to Tue, 8 Dec 2009 23:59:59 -0800.;09/Dec/09 1:42 PM;thon;21600","Time worked: 05:18 from Wed, 9 Dec 2009 00:00:00 -0800 to Wed, 9 Dec 2009 23:59:59 -0800.;09/Dec/09 5:09 PM;thon;19080","Time worked: 05:00 from Thu, 10 Dec 2009 00:00:00 -0800 to Thu, 10 Dec 2009 23:59:59 -0800.;11/Dec/09 9:29 AM;thon;18000",,,,,,86400,27720,58680,67%,158400,65520,92820,,,,,,,,,,,,,,,,,,,,,,,,,,,297129600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a9pj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix dashboard project wizard error,STS-690,74454,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,thon,thon,02/Dec/09 9:33 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,02/Dec/09 10:12 AM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,"The following error occurs when a wizard link is clicked twice.

org.eclipse.swt.SWTException: Widget is disposed
       at org.eclipse.swt.SWT.error(SWT.java:3884)
       at org.eclipse.swt.SWT.error(SWT.java:3799)
       at org.eclipse.swt.SWT.error(SWT.java:3770)
       at org.eclipse.swt.widgets.Widget.error(Widget.java:619)
       at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:462)
       at org.eclipse.swt.widgets.Combo.getSelectionIndex(Combo.java:748)
       at org.eclipse.ui.dialogs.WorkingSetConfigurationBlock.updateSelectedWorkingSets(WorkingSetConfigurationBlock.java:413)
       at org.eclipse.ui.dialogs.WorkingSetConfigurationBlock.setWorkingSets(WorkingSetConfigurationBlock.java:191)
       at org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPageOne$WorkingSetGroup.setWorkingSets(NewJavaProjectWizardPageOne.java:808)
       at org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPageOne.setWorkingSets(NewJavaProjectWizardPageOne.java:1380)
       at org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPageOne.init(NewJavaProjectWizardPageOne.java:1148)
       at org.eclipse.jdt.internal.ui.wizards.JavaProjectWizard.addPages(JavaProjectWizard.java:73)
       at org.eclipse.jface.wizard.WizardDialog.createContents(WizardDialog.java:546)
       at org.eclipse.jface.window.Window.create(Window.java:431)
       at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1089)
       at org.eclipse.jface.window.Window.open(Window.java:790)
       at com.springsource.sts.internal.ide.ui.editors.DashboardMainPage$16.linkActivated(DashboardMainPage.java:531)
       at org.eclipse.ui.forms.widgets.AbstractHyperlink.handleActivate(AbstractHyperlink.java:233)
       at org.eclipse.ui.forms.widgets.ImageHyperlink.handleActivate(ImageHyperlink.java:199)
       at org.eclipse.ui.forms.widgets.AbstractHyperlink.handleMouseUp(AbstractHyperlink.java:327)
       at org.eclipse.ui.forms.widgets.AbstractHyperlink.access$2(AbstractHyperlink.java:311)
       at org.eclipse.ui.forms.widgets.AbstractHyperlink$4.handleEvent(AbstractHyperlink.java:125)
       at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
       at org.eclipse.swt.widgets.Display.sendEvent(Display.java:3543)
       at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1250)
       at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1273)",,"Time worked: 00:35 from Wed, 2 Dec 2009 00:00:00 -0800 to Wed, 2 Dec 2009 23:59:59 -0800.;02/Dec/09 10:12 AM;thon;2100",,,,,,,,0,0,2100,"9,223,372,036,854,775,807%",0,0,2100,,,,,,,,,,,,,,,,,,,,,,,,,,,297648000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6un:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create configuration UI for setting urls,STS-687,74912,73790,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,01/Dec/09 10:42 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,04/Dec/09 4:43 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,"Time worked: 04:00 from Fri, 4 Dec 2009 00:00:00 -0800 to Fri, 4 Dec 2009 23:59:59 -0800.;04/Dec/09 4:43 PM;spingel;14400",,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,297734400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6qv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default layout should be horizontal,STS-686,74100,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,01/Dec/09 10:10 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,04/Dec/09 5:03 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,,,,,,,,"Currently, the default layout is vertical",,;01/Dec/09 5:49 PM;ldossantos;20100,;02/Dec/09 5:54 PM;ldossantos;20100,"Time worked: 05:20 from Sun, 29 Nov 2009 00:00:00 -0800 to Sat, 5 Dec 2009 23:59:59 -0800.;03/Dec/09 5:54 PM;ldossantos;19200",;04/Dec/09 5:03 PM;ldossantos;18000,,,,,0,0,77400,"9,223,372,036,854,775,807%",0,0,77400,,,,,,,,,,,,,,,,,,,,,,,,,,,297734400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6qn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix text alignment in the dashboard title,STS-682,73208,72565,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Nov/09 10:21 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,03/Dec/09 2:30 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,,,"Time worked: 03:07 from Sun, 29 Nov 2009 00:00:00 -0800 to Sat, 5 Dec 2009 23:59:59 -0800.;03/Dec/09 2:30 PM;thon;11220",,,,,,,,7200,0,11220,155%,7200,0,11220,,,,,,,,,,,,,,,,,,,,,,,,,,,298166400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6zj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Collapse Update section when content cannot be read,STS-681,74664,72565,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,26/Nov/09 10:20 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,13/Jan/10 11:28 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M3,,,,,,,,,"Time worked: 00:29 from Thu, 26 Nov 2009 00:00:00 -0800 to Thu, 26 Nov 2009 23:59:59 -0800.;30/Nov/09 7:49 AM;thon;1740",,,,,,,,7200,0,1740,24%,7200,0,1740,,,,,,,,,,,,,,,,,,,,,,,,,,,294105600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a6z3:,9223372036854775807,9223372036854775807,,,,,,03/Dec/09 9:53 AM;thon;Marking this as fixed for now. I think the left column has enough room for update section to be always displayed.,12/Jan/10 10:44 AM;thon;Reopening. Should still collapse update section if there is no content.,,,,,,,,,,,,,,,,,,,,,,
Icon work,STS-680,74333,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,24/Nov/09 1:38 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,23/Apr/10 5:07 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,Replace placeholder icons.,,;19/Jan/10 5:20 PM;ldossantos;10800,;20/Jan/10 4:02 PM;ldossantos;14400,,,,,,,0,0,25200,"9,223,372,036,854,775,807%",0,0,25200,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a53j:,9223372036854775807,9223372036854775807,,,,,,"20/Jan/10 4:02 PM;ldossantos;I've put in some rough icons based on those found in one of the EIP icon templates. Not all of the elements we're displaying had appropriate icons, so I had to mix & match. Will need to have a graphic artist draw us up some real icons.",23/Apr/10 5:07 PM;ldossantos;We've got out graphic artist in the loop. See STS-928,,,,,,,,,,,,,,,,,,,,,,
Unable to install extensions behind proxy,STS-679,76104,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,paulpach,paulpach,24/Nov/09 9:33 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,27/Nov/09 11:58 AM,2.2.1.RELEASE,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,,,,,,,,"I have an authenticated proxy configured for eclipse, and STS is able to successfully get the list of available extensions when I click on the ""extensions"" tab.

I check Grails support and Groovy Eclipse, and click install after a few seconds I get the following error:

""Problems occurred while performing installation: Error resolving hostname dist.springsource.com for {0}: please check your Internet connection and try again.

See error log for details""

Here are the details from the corresponding error in the error log:

eclipse.buildId=M20090917-0800
java.version=1.5.0_22
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Framework arguments:  -product com.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86 -product com.springsource.sts.ide


Error
Tue Nov 24 11:30:49 CST 2009
Problems occurred while performing installation: Error resolving hostname dist.springsource.com for {0}: please check your Internet connection and try again.

org.eclipse.core.runtime.CoreException: Error resolving hostname dist.springsource.com for {0}: please check your Internet connection and try again.
at org.eclipse.mylyn.internal.discovery.ui.wizards.PrepareInstallProfileJob.doRun(PrepareInstallProfileJob.java:114)
at org.eclipse.mylyn.internal.discovery.ui.wizards.PrepareInstallProfileJob.run(PrepareInstallProfileJob.java:86)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
Caused by: java.net.UnknownHostException: dist.springsource.com: dist.springsource.com
at java.net.InetAddress.getAllByName0(InetAddress.java:1145)
at java.net.InetAddress.getAllByName(InetAddress.java:1072)
at java.net.InetAddress.getAllByName(InetAddress.java:1008)
at java.net.InetAddress.getByName(InetAddress.java:958)
at org.eclipse.mylyn.internal.discovery.ui.wizards.PrepareInstallProfileJob.doRun(PrepareInstallProfileJob.java:112)
... 2 more


","Windows xp, behind authenticated http proxy",;27/Nov/09 11:58 AM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,297820800,,,,,2009-11-24 13:07:54.136,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a533:,9223372036854775807,9223372036854775807,,,,,,24/Nov/09 1:07 PM;spingel;The discovery is trying to resolve the host name to verify availability of the site but in your case the local machine is not be able to do that since that is expected to be handled by the proxy. I'll work on a fix for the discovery mechanism to skip that check.,"27/Nov/09 11:58 AM;spingel;The problem has been addressed in the upstream Mylyn release. Paul, in order to install the fixed build please add this update site http://download.eclipse.org/tools/mylyn/update/weekly/e3.4/ and Install the latest ""Mylyn Task List (required)"" feature. After a restart the discovery installation should work properly with your proxy setup.","30/Nov/09 7:54 AM;paulpach;Thank you Steffen, it worked.",,,,,,,,,,,,,,,,,,,,,
Support for workspace utility projects (WTP feature) with CloudFoundry,STS-677,74383,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Critical,Fixed,,dsyer,dsyer,24/Nov/09 5:41 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,01/Dec/09 6:01 PM,Sprint 7,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,,,,,,,,Support for workspace utility projects (WTP feature) with CloudFoundry.  Currently if you deploy a WAR project with STS to CloudFoundry it only works if all the dependencies are JARs (not workspace projects).  This is inconvenient since now I need a new workspace to test my project in the cloud.,,;01/Dec/09 6:01 PM;spingel;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,297734400,,,,,2009-11-24 06:46:33.888,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a53z:,9223372036854775807,9223372036854775807,,,,,,"24/Nov/09 6:46 AM;cdupuis;Steffen, can you please look into this?",01/Dec/09 6:01 PM;spingel;I have committed a fix. Dependent WTP utility projects are now included in the war file that is deployed to the CloudFoundry server. ,,,,,,,,,,,,,,,,,,,,,,
monitor if server has initialized,STS-675,72234,72205,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,23/Nov/09 6:57 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Nov/09 11:49 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,In order to determine when a remotely running tc Server has initialized a ping thread needs to be implemented that monitors the web port.,,;26/Nov/09 11:49 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,298425600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5gv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redirect server output to a file and show in Eclipse console,STS-674,73746,72205,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,23/Nov/09 6:55 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Nov/09 11:24 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;26/Nov/09 11:24 PM;spingel;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,298425600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5k7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix remote shutdown of tc Server,STS-672,75196,74069,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,23/Nov/09 6:51 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,26/Nov/09 9:34 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;26/Nov/09 9:34 PM;spingel;7200,;26/Nov/09 9:35 PM;spingel;7200,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,298425600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a5jb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create extension points for new project section on dashboard,STS-668,74308,72565,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,20/Nov/09 9:24 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,23/Nov/09 5:00 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,New project links like Grails and Roo projects should be extended so that they are not shown if those features are no installed,,"Time worked: 02:18 from Mon, 23 Nov 2009 00:00:00 -0800 to Mon, 23 Nov 2009 23:59:59 -0800.;23/Nov/09 4:59 PM;thon;8280",,,,,,,,14400,6120,8280,57%,14400,6120,8280,,,,,,,,,,,,,,,,,,,,,,,,,,,298684800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2pj:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
support deploying through JMX,STS-665,72145,74069,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Nov/09 3:56 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,23/Nov/09 1:01 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;19/Nov/09 7:38 PM;spingel;14400,;23/Nov/09 1:01 PM;spingel;7200,,,,,,,28800,0,21600,75%,28800,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,298425600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2zb:,9223372036854775807,9223372036854775807,,,,,,20/Nov/09 10:16 AM;spingel;This client side implementation is complete but resolving this bug is pending on feedback on the tc Server Deployer Mbean.,"23/Nov/09 1:01 PM;spingel;Turns out the context root needs to be prefixed with a ""/"".",,,,,,,,,,,,,,,,,,,,,,
The graph does too much work when it redraws,STS-664,73045,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,19/Nov/09 2:41 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,11/Dec/09 10:29 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"When the graph redraws, it discards all existing parts and recreates them all again. Ideally the graph would only discard a part if it has been deleted, and would only create new parts when required. In fact, this bug seems to be a blocker to getting STS-647 completed.",,;19/Nov/09 6:25 PM;ldossantos;13500,;20/Nov/09 5:58 PM;ldossantos;16200,Design meeting;24/Nov/09 1:29 PM;ldossantos;5400,;08/Dec/09 6:21 PM;ldossantos;26700,;09/Dec/09 5:51 PM;ldossantos;19800,;10/Dec/09 2:55 PM;ldossantos;12000,;10/Dec/09 5:10 PM;ldossantos;5400,,0,0,99000,"9,223,372,036,854,775,807%",0,0,99000,,,,,,,,,,,,,,,,,,,,,,,,,,,296870400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2yn:,9223372036854775807,9223372036854775807,,,,,,11/Dec/09 10:29 AM;ldossantos;I refactored the graphical editor model so that model elements and graph parts persist across editor refreshes.,,,,,,,,,,,,,,,,,,,,,,,
[releng] setup PDE build for server bundles,STS-663,74194,73986,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,19/Nov/09 1:43 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,23/Nov/09 6:24 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,"Time worked: 04:00 from Mon, 23 Nov 2009 00:00:00 -0800 to Mon, 23 Nov 2009 23:59:59 -0800.;23/Nov/09 6:24 PM;spingel;14400",,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,298771200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2zz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem starting Spring tcServer - Missing expected file or folder tijars.,STS-662,74739,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Critical,Fixed,,ndefreitas,ndefreitas,18/Nov/09 7:57 PM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,08/Feb/10 3:15 PM,2.2.1.RELEASE,,,,,,,2.3.1.RELEASE,Sprint 9,,,,,,,,0,y3m6,,,,,,,"I get this message when attempting to start tcServer (even in a new workspace): ""The Tomcat installation directory is not valid. It is missing expected file or folder tijars.""



-- Configuration Details --
Product: SpringSource Tool Suite 2.2.1.200910210131-RELEASE (com.springsource.sts.ide)
Installed Features:
 com.springsource.sts 2.2.1.200910210131-RELEASE
",,"Time worked: 00:20 from Thu, 19 Nov 2009 00:00:00 -0800 to Thu, 19 Nov 2009 23:59:59 -0800.;19/Nov/09 1:35 PM;spingel;1200",;08/Feb/10 3:15 PM;spingel;3600,,,,,,,0,0,4800,"9,223,372,036,854,775,807%",0,0,4800,,,,,,,,,,,,,,20/Nov/09 7:17 PM;ndefreitas;Screen shot 2009-11-20 at 10.04.18 PM.png;https://jira.spring.io/secure/attachment/24096/Screen+shot+2009-11-20+at+10.04.18+PM.png,20/Nov/09 5:20 PM;ndefreitas;Screen shot 2009-11-20 at 8.04.18 PM.png;https://jira.spring.io/secure/attachment/23929/Screen+shot+2009-11-20+at+8.04.18+PM.png,20/Nov/09 5:20 PM;ndefreitas;Screen shot 2009-11-20 at 8.04.34 PM.png;https://jira.spring.io/secure/attachment/23993/Screen+shot+2009-11-20+at+8.04.34+PM.png,24/Nov/09 7:55 PM;ndefreitas;Screen shot 2009-11-24 at 10.38.44 PM.png;https://jira.spring.io/secure/attachment/24506/Screen+shot+2009-11-24+at+10.38.44+PM.png,24/Nov/09 7:55 PM;ndefreitas;Screen shot 2009-11-24 at 10.39.06 PM.png;https://jira.spring.io/secure/attachment/24507/Screen+shot+2009-11-24+at+10.39.06+PM.png,24/Nov/09 7:55 PM;ndefreitas;Screen shot 2009-11-24 at 10.45.33 PM.png;https://jira.spring.io/secure/attachment/24037/Screen+shot+2009-11-24+at+10.45.33+PM.png,24/Nov/09 7:55 PM;ndefreitas;Screen shot 2009-11-24 at 10.48.44 PM.png;https://jira.spring.io/secure/attachment/23989/Screen+shot+2009-11-24+at+10.48.44+PM.png,24/Nov/09 8:33 PM;ndefreitas;Screen shot 2009-11-24 at 11.32.20 PM.png;https://jira.spring.io/secure/attachment/23957/Screen+shot+2009-11-24+at+11.32.20+PM.png,20/Nov/09 7:21 PM;ndefreitas;SpringSource tc Server v6.0.server;https://jira.spring.io/secure/attachment/23982/SpringSource+tc+Server+v6.0.server,21/Nov/09 6:23 AM;ndefreitas;out.log;https://jira.spring.io/secure/attachment/23874/out.log,,,,291772800,,,,,2009-11-18 20:39:51.864,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a2w7:,9223372036854775807,9223372036854775807,,,,,,18/Nov/09 8:39 PM;spingel;Are you using the tc Server instance that is shipped with STS or a seperately installed version?,19/Nov/09 6:47 AM;ndefreitas;I'm using the one that shipped with STS 2.2.1 on Mac OSX 10.6.1 (64bit).,19/Nov/09 1:24 PM;spingel;Can you check if the Installation directory that is configured in the Runtime Environment for the server points to a valid and readable directory?,"20/Nov/09 5:20 PM;ndefreitas;At first the Location: property says [Workspace Metadata], then after I click ""Switch Location"" it points to the /Servers/...  (see attached).","20/Nov/09 7:17 PM;ndefreitas;It's using these directories in the run configuration:
/Applications/springsource/tc-server-6.0.20.A
/Applications/springsource/tc-server-6.0.20.A
/Applications/springsource/tc-server-6.0.20.A/wtpwebapps
/Applications/springsource/tc-server-6.0.20.A/endorsed

I'm able to navigate to each of them except the last ""endorsed"" directory - it doesn't exist: -Djava.endorsed.dirs=""/Applications/springsource/tc-server-6.0.20.A/endorsed""","20/Nov/09 7:21 PM;ndefreitas;Also,
The server config directories do not contain any files - just this one at the same level as the ""SpringSource tc Server v6.0-config"" and ""SpringSource dm Server v1.0-config"" in the /Servers/ folder in the workspace.",21/Nov/09 6:23 AM;ndefreitas;Here's the eclipse startup debug log (sudo ./STS -debug).,"24/Nov/09 3:46 PM;spingel;That is odd. The Server Locations settings should be set to ""Use tc Server installation"" and the /Servers/SpringSource tc Server v6.0-config should contain a bunch of configuration files.

When you click on Runtime Environment in the tc server editor what is the value that is set for Installation directory? Please check that that directory contains a lib/, bin/, conf/ and webapps/ folder (the error message about tijars is a bit misleading). 

In case any of these directories are missing please try reinstalling STS to make sure you have a clean tc-server-6.0 setup.","24/Nov/09 7:55 PM;ndefreitas;Actually it (/Servers/SpringSource tc Server v6.0-config) doesn't have any config files.  
Nor does the Installation directory (/Applications/springsource/tc-server-6.0.20.A) contain a lib/, bin/, conf/ or webapps/ folders - see Terminal output.

I did notice another folder called /Applications/springsource/tc-server-6.0.20.C. This folder does include a lib, bin, conf & webapps.",24/Nov/09 7:55 PM;ndefreitas;Here's the other terminal output screenshot.,"24/Nov/09 8:33 PM;ndefreitas;I reinstalled, but this time instead of downloading the dmg, I took the springsource-tool-suite-2.2.1.RELEASE-e3.5.1-macosx-cocoa-x86_64.tar.gz file.

All seems to be working now.

Thanks.",24/Nov/09 8:51 PM;spingel;Thanks for getting back Nigel. I'll investigate why the config files were not properly picked up from either the tc-server-6.0.20.A or tc-server-6.0.20.C folder.,08/Feb/10 3:15 PM;spingel;I have changed the auto configuration support to always pick the latest available version.,,,,,,,,,,,
Add toolbar action to Roo shell to quickly create a new Roo project,STS-660,74131,73536,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Complete,cdupuis,cdupuis,cdupuis,18/Nov/09 6:46 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,27/Nov/09 9:15 AM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,,,,,,,,,,;27/Nov/09 9:17 AM;cdupuis;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,298857600,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a38f:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
extract URLs from source and move to extension,STS-654,74443,73790,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,17/Nov/09 1:09 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,03/Dec/09 5:18 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,"Time worked: 02:00 from Mon, 30 Nov 2009 00:00:00 -0800 to Sun, 6 Dec 2009 23:59:59 -0800.;03/Dec/09 5:18 PM;spingel;7200",,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a32v:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create extension point for URL contributions,STS-653,73567,73790,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,17/Nov/09 1:08 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,30/Nov/09 6:30 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,,,,,,,,,,;30/Nov/09 6:30 PM;spingel;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a34f:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
adopt Buckminster aggregator for dependency managemnt,STS-652,74310,74338,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,17/Nov/09 12:56 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,10/Dec/09 4:57 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,y3m4,,,,,,,"Buckminster Aggregator:
* Requires that all features from all contributions (sites) can be installed concurrently
* The model does not easily allow to disable certain contributions (e.g. update sites for 3.4 and 3.5 builds)
* There is no simple way to limit aggregation to certain features and their dependencies
* It is not possible to easily update an existing aggregation

While this looked promising I don't think it's yet feasible to use Buckminister Aggregator for the planned purposes.",,;10/Dec/09 4:57 PM;spingel;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a33z:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query URL extension to display feeds on the dashboard,STS-651,74697,72565,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,17/Nov/09 11:38 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,07/Dec/09 10:12 AM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,,,"Time worked: 00:35 from Mon, 7 Dec 2009 00:00:00 -0800 to Mon, 7 Dec 2009 23:59:59 -0800.;08/Dec/09 9:21 AM;thon;2100",,,,,,,,7200,5100,2100,29%,7200,5100,2100,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a33j:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement UI for dashboard base on wireframe,STS-650,72903,72565,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,17/Nov/09 11:34 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,02/Dec/09 9:34 AM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,,,"Time worked: 06:38 from Thu, 19 Nov 2009 00:00:00 -0800 to Thu, 19 Nov 2009 23:59:59 -0800.;20/Nov/09 9:20 AM;thon;23880","Time worked: 07:07 from Fri, 20 Nov 2009 00:00:00 -0800 to Fri, 20 Nov 2009 23:59:59 -0800.;23/Nov/09 10:30 AM;thon;25620","Time worked: 02:58 from Mon, 23 Nov 2009 00:00:00 -0800 to Mon, 23 Nov 2009 23:59:59 -0800.;23/Nov/09 4:59 PM;thon;10680","Time worked: 06:39 from Tue, 24 Nov 2009 00:00:00 -0800 to Tue, 24 Nov 2009 23:59:59 -0800.;25/Nov/09 9:24 AM;thon;23940","Time worked: 08:58 from Wed, 25 Nov 2009 00:00:00 -0800 to Wed, 25 Nov 2009 23:59:59 -0800.;26/Nov/09 8:31 AM;thon;32280","Time worked: 07:47 from Thu, 26 Nov 2009 00:00:00 -0800 to Thu, 26 Nov 2009 23:59:59 -0800.;30/Nov/09 7:49 AM;thon;28020","Time worked: 08:00 from Mon, 30 Nov 2009 00:00:00 -0800 to Mon, 30 Nov 2009 23:59:59 -0800.;30/Nov/09 9:47 PM;thon;28800",,57600,0,173220,300%,57600,0,173220,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a35b:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement serialization of graph coordinates,STS-648,74538,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:31 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,06/Jan/10 3:34 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"It appears that most (all?) of the elements we want to display so far include an id attribute. Solution might be to store the element type (ie. channel, or filter), id, and x & y coords for each figure. If id attribute is empty, discard coord information. Could this work? ...",,;05/Jan/10 5:09 PM;ldossantos;51000,;06/Jan/10 3:34 PM;ldossantos;12600,,,,,,,57600,0,63600,110%,57600,0,63600,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a34v:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement a coordinate based layout for the graph,STS-647,73188,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:31 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,16/Dec/09 5:52 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,;18/Nov/09 5:57 PM;ldossantos;22500,;19/Nov/09 2:42 PM;ldossantos;11700,;10/Dec/09 5:10 PM;ldossantos;4800,;16/Dec/09 5:52 PM;ldossantos;13200,,,,,57600,0,52200,90%,57600,0,52200,,,,,,,,,,,,,,,,,,,,,,,,,,,296438400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a34n:,9223372036854775807,9223372036854775807,,,,,,16/Dec/09 5:53 PM;ldossantos;We've got a functioning coordinate layout system in place.,,,,,,,,,,,,,,,,,,,,,,,
Implement a facility for switching between coordinate & algorithm based layouts,STS-646,73940,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:31 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,07/Jan/10 4:35 PM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,,,;23/Nov/09 5:48 PM;ldossantos;3000,;07/Jan/10 4:35 PM;ldossantos;14400,,,,,,,14400,0,17400,120%,14400,0,17400,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a30f:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement element creation & connection tools,STS-645,72963,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:31 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,19/Mar/10 6:04 PM,,,,,,,,2.3.2.RELEASE,Sprint 10,,,,,,,,0,Y3M7,,,,,,,,,;30/Nov/09 5:45 PM;ldossantos;28800,;10/Dec/09 2:54 PM;ldossantos;1800,;15/Mar/10 3:18 PM;ldossantos;82800,;17/Mar/10 5:50 PM;ldossantos;42000,;19/Mar/10 6:03 PM;ldossantos;7200,,,,57600,0,162600,282%,57600,0,162600,,,,,,,,,,,,,,,,,,,,,,,,,,,288748800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1vz:,9223372036854775807,9223372036854775807,,,,,,15/Mar/10 3:18 PM;ldossantos;Logging time worked over last week & today,,,,,,,,,,,,,,,,,,,,,,,
Decide what elements to display in the graph,STS-644,74058,76328,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:30 AM,01/Dec/10 12:01 PM,10/May/19 2:36 AM,23/Apr/10 5:07 PM,,,,,,,,2.3.3.M2,,,,,,,,,0,Y3M8,,,,,,,"Right now we're display the following :

* <channel>
* <publish-subscribe-channel>

* <logging-channel-adapter> w/ channel connection
* <inbound-channel-adapter> w/ channel connection
* <outbound-channel-adapter> w/ channel connection
* <recipient-list-router> w/ input channel connection

* <bridge> w/ input & output channel connections
* <chain> w/ input & output channel connections
* <delayer> w/ input & output channel connections
* <header-enricher> w/ input & output channel connections
* <object-to-string-transformer> w/ input & output channel connections
* <payload-deserializing-transformer> w/ input & output channel connections
* <payload-serializing-transformer> w/ input & output channel connections
* <service-activator> w/ input & output channel connections
* <splitter> w/ input & output channel connections
* <transfomer> w/ input & output channel connections

* <aggregator> w/ input, output & discard channel connections
* <filter> w/ input, output & discard channel connections
* <resequencer> w/ input, output & discard channel connections

* <header-value-router> w/ input channel & default output channel connections
* <payload-type-router> w/ input channel & default output channel connections
* <router> w/ input channel & default output channel connections

* <gateway> w/ default request & default reply channel connections

WONTDOs:

* add reply & error channel conections to <header-enricher>",,;17/Nov/09 4:20 PM;ldossantos;7800,;23/Nov/09 5:47 PM;ldossantos;17400,;25/Nov/09 4:52 PM;ldossantos;27000,;26/Nov/09 2:51 PM;ldossantos;9000,;25/Jan/10 5:22 PM;ldossantos;27000,;23/Apr/10 5:07 PM;ldossantos;57600,,,14400,0,145800,"1,012%",14400,0,145800,,,,,,,,,,,,,,,,,,,,,,,,,,,285379200,,,,,2009-11-23 18:02:51.709,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1vr:,9223372036854775807,9223372036854775807,,,,,,"23/Nov/09 6:02 PM;mfisher;Here are answers to the first set of questions:

    * <logging-channel-adapter> w/ channel connection
       That is an ""input"" channel. That adapter is essentially an ""outbound-channel-adapter"" whose output is sent to the log.

    * <mapping> w/ channel connection
        That is just an inner element of a router. These are simply used to map values from the router ref/method's return value to a channel reference, and those mappings will be resolved dynamically. For example if the invoked method returns ""foo"", that value might be mapped to a channel named ""fooChannel123"".

    * <recipient> w/ channel connection
        That is similar to above, but in this case a statically configured recipient channel for the recipient-list-router. It probably does make sense in this case to display a connection. The recipient-list-router basically has an inverse relationship with a publish-subscribe-channel.

    * <wire-tap> w/ channel connection
        The wire-tap is a way to connect to one channel, intercept all messages there, and then send them to another channel. It would be good to show a connection, but keep in mind that it is the ""secondary"" path.

    * add reply & error channel conections to <header-enricher>
         It's probably best to avoid this one in the visualization (limiting to auto-completion assistance should be fine). For one thing, we'll be removing those attributes in 2.0 in favor of subelements. The actual referenced channel there is simply being stored within a header value for the Message that passes through that header-enricher. So, it would be confusing if we made it appear as though the output from header-enricher were being directed to those channels.

Hope that helps.
-Mark

","23/Nov/09 6:05 PM;mfisher;As for the second and third sets of questions, I would say that the discard-channels could be helpful. it might be nice to show a ""secondary"" connection (lighter shade/different color or something), and that same technique could be used for the wire-tap's channel.

I would imagine that method connections might be displayed in a similar way to ""actions"" in the Web Flow visualizer/editor.
","22/Apr/10 10:44 AM;ldossantos;From our face to face meeting:

Remove <completion-strategy>, <mapping>, <method>, <recipient>, <selector> and <selector-chain> elements.
Remove <interceptors> and <wire-tap> elements.
Remove method connections",22/Apr/10 11:35 AM;ldossantos;Also removing <thread-local-channel>,"23/Apr/10 5:07 PM;ldossantos;Mark, I think we're on the same page now and our face-to-face meeting accomplished what I initially set out for this task. Closing.",,,,,,,,,,,,,,,,,,,
Add hyperlink & content assist to form widgets,STS-643,74362,72944,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,17/Nov/09 11:14 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,15/Dec/09 11:41 AM,,,,,,,,2.3.1.RELEASE,Sprint 8,,,,,,,,0,Y3M4,,,,,,,"The XSD describes tool annotations for attributes:

* bean
* channel
* channel-resolver
* completion-strategy
* completion-strategy-method
* correlation-strategy
* correlation-stragegy-method
* default-output-channel
* default-reply-channel
* default-request-channel
* discard-channel
* error-channel
* error-handler
* input-channel
* output-channel
* reply-channel  // on headerEntricherAttributes
* scheduler
* service-interface  // this is a class ref
* task-executor
* transaction-manager

* ref on queueType elements (queue)
* ref on methodInvokingChannelAdapterType elements (inbound-channel-adapter, outbound-channel-adapter)
* ref on handlerEndpointType elements (aggregator, filter, resequencer, service-activator, splitter, transformer)
* ref on handlerType elements
* ref on routerType elements (router)",,;08/Dec/09 6:22 PM;ldossantos;7200,;14/Dec/09 4:55 PM;ldossantos;16200,;15/Dec/09 11:41 AM;ldossantos;3600,,,,,,14400,0,27000,187%,14400,0,27000,,,,,,,,,,,,,,,,,,,,,,,,,,,296524800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a1xj:,9223372036854775807,9223372036854775807,,,,,,14/Dec/09 4:55 PM;ldossantos;Forms have content assist. Waiting on an API change in Spring IDE to add hyperlinks.,15/Dec/09 11:41 AM;ldossantos;Hyperlinks have been added. Closing.,,,,,,,,,,,,,,,,,,,,,,
New Bean class quick fix does not fill in package name if package does not exist,STS-637,74749,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,cdupuis,cdupuis,17/Nov/09 6:03 AM,30/Nov/10 4:58 PM,10/May/19 2:36 AM,17/Nov/09 4:27 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,Y3M3,,,,,,,,,"Time worked: 02:01 from Tue, 17 Nov 2009 00:00:00 -0800 to Tue, 17 Nov 2009 23:59:59 -0800.;18/Nov/09 7:56 AM;thon;7260",,,,,,,,0,0,7260,"9,223,372,036,854,775,807%",0,0,7260,,,,,,,,,,,,,,,,,,,,,,,,,,,298944000,,,,,,9223372036854775807,false,tmarshall(tmarshall),,,,0|i0a1xz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ignore port conflict when starting local tc Server in VMWare,STS-635,75900,74069,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,16/Nov/09 7:48 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,19/Nov/09 3:25 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;19/Nov/09 3:25 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,299030400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xfr:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
provide UI for entering JMX credentials,STS-634,73750,74069,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,16/Nov/09 12:50 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,19/Nov/09 1:42 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;19/Nov/09 1:36 PM;spingel;21600,,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,299030400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09xd3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix configuration error when using tc Server VMware integration in guest mode,STS-630,72225,74069,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,12/Nov/09 9:10 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,19/Nov/09 3:57 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,"Steps:
1. Create tc Server for VMware server in guest mode
2. Add web application to server

The operation fails with an error that the configuration can not be loaded.",,;19/Nov/09 1:33 PM;spingel;10800,;19/Nov/09 1:33 PM;spingel;14400,;19/Nov/09 1:42 PM;spingel;18000,,,,,,57600,0,43200,75%,57600,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,299376000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09tkf:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[releng] create scripts for building server bundles,STS-628,73346,73986,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,10/Nov/09 1:20 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,03/Dec/09 5:19 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,," * dm Server
 * tc Server
 * Tomcat",,"Time worked: 02:00 from Mon, 23 Nov 2009 00:00:00 -0800 to Sun, 29 Nov 2009 23:59:59 -0800.;30/Nov/09 7:15 PM;spingel;7200","Time worked: 03:00 from Mon, 30 Nov 2009 00:00:00 -0800 to Sun, 6 Dec 2009 23:59:59 -0800.;03/Dec/09 5:19 PM;spingel;10800",,,,,,,7200,0,18000,250%,7200,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,299548800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09trz:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
implements tests for bundle based server installation,STS-627,72309,,Improvement,Closed,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Won't Fix,,spingel,spingel,10/Nov/09 1:19 PM,07/Apr/17 8:53 AM,10/May/19 2:36 AM,07/Apr/17 8:53 AM,,,,,,,,,,,,,,,,,0,,,,,,,,,,"Time worked: 02:00 from Thu, 3 Dec 2009 00:00:00 -0800 to Thu, 3 Dec 2009 23:59:59 -0800.;03/Dec/09 7:23 PM;spingel;7200",;23/Dec/09 7:41 PM;spingel;7200,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,65836800,,,,,2017-04-07 08:53:50.172,9223372036854775807,false,mlippert(mlippert),,,,0|i09trr:,9223372036854775807,9223372036854775807,,,,,,"07/Apr/17 8:53 AM;mlippert;This project has moved its issue management to GitHub Issues:
https://github.com/spring-projects/spring-ide/issues

Therefore we closed the majority of old issues, like this one here. If you think this issue is still valid and should be fixed or worked on, please feel free to file it as a new issue on GitHub (using the link above).
",,,,,,,,,,,,,,,,,,,,,,,
investigate using p2 touchpoint instructions for adding servers,STS-625,73543,73986,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,spingel,spingel,spingel,09/Nov/09 2:15 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,23/Nov/09 6:48 PM,,,,,,,,2.3.0.RELEASE,Sprint 7,,,,,,,,0,y3m3,,,,,,,,,;09/Nov/09 2:19 PM;spingel;10800,;19/Nov/09 1:28 PM;spingel;14400,"Time worked: 02:00 from Mon, 16 Nov 2009 00:00:00 -0800 to Sun, 22 Nov 2009 23:59:59 -0800.;23/Nov/09 6:48 PM;spingel;7200",,,,,,14400,0,32400,225%,14400,0,32400,,,,,,,,,,,,,,,,,,,,,,,,,,,299548800,,,,,2009-11-10 02:29:35.127,9223372036854775807,true,tmarshall(tmarshall),,,,0|i09tqn:,9223372036854775807,9223372036854775807,,,,,,"10/Nov/09 2:29 AM;cdupuis;Steffen, I've added a new ConfiguratorAction to the configurator bundle.

This touchpoint action implementation will the IWorkspaceConfiguratorParticipant extension point and will invoke participants that match the directory name.

I think implementing a dm Server, tc Server and tomcat specific IWorkspaceConfiguratorParticipant would be easy and would work with the new infrastructure. Those 3 new IWorkspaceConfiguratorParticipant could then implement some of the WTP server specific login in ConfiguratorImporter.

WDYT?

Christian","10/Nov/09 8:36 AM;spingel;Great, that works. I have added a namespace for the action to ensure that it's unique. I'll add a configurator implementation for servers next.
",,,,,,,,,,,,,,,,,,,,,,
Need STS to support VMware Lab Manager 4.0,STS-621,74263,,Bug,Closed,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Won't Fix,,gmflau,gmflau,06/Nov/09 11:02 AM,07/Apr/17 8:54 AM,10/May/19 2:36 AM,07/Apr/17 8:54 AM,2.2.0.RELEASE,,,,,,,,,,,,,,,,0,,,,,,,,"I recently tried to connect my STS to VMware Lab Manager 4.0 but failed.  I learned that every Lab Manager 4.0 SOAP API call would require two additional fields, ""organization"" and ""workspace"" (introduced in Lab Manager 4.0).   Currently, the STS' GUI only allows us to enter Lab Manager's URL (location), user_id and password. When I tried to connect my STS to Lab Manager 4.0, it gave me an error message saying ""Could not find Bucket in database given the parameters"".  Since I think this problem is specific to Lab Manager 4.0, you might want to make the ""organization"" and ""workspace"" fields optional in the GUI so that STS can connect to Lab Manager version 3.x and 4.0.

Thanks,
Gilbert
","STS 2.2.0 GA release
VMware Lab Manager 4.0","Time worked: 05:05 from Mon, 9 Nov 2009 00:00:00 -0800 to Mon, 9 Nov 2009 23:59:59 -0800.;10/Nov/09 10:49 AM;thon;18300",,,,,,,,0,0,18300,"9,223,372,036,854,775,807%",0,0,18300,,,,,,,,,,,,,,,,,,,,,,,,,,,65836800,,,,,2009-11-09 05:39:10.388,9223372036854775807,false,mlippert(mlippert),,,,0|i0ah67:,9223372036854775807,9223372036854775807,,,,,,"09/Nov/09 5:39 AM;spingel;Terry, we may need to update the SOAP stubs to the latest version to ensure compatibility.","04/Dec/09 2:47 AM;cdupuis;Terry, what is the status of this?","04/Dec/09 9:52 AM;thon;I have made the changes but have not tested it thoroughly yet, as the Lab Manager that I can get access to is not 4.0. I'll try it with Andrew's connection today.",28/Apr/10 3:21 PM;spingel;There is another report of a connection problem with LabManager 4.1: http://forum.springsource.org/showthread.php?t=87027 .,"07/Apr/17 8:54 AM;mlippert;This project has moved its issue management to GitHub Issues:
https://github.com/spring-projects/spring-ide/issues

Therefore we closed the majority of old issues, like this one here. If you think this issue is still valid and should be fixed or worked on, please feel free to file it as a new issue on GitHub (using the link above).
",,,,,,,,,,,,,,,,,,,
dm Server 2 Bundle Overview Start/Stop Bundle Not Working,STS-612,73385,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Cannot Reproduce,,scotthamilton77,scotthamilton77,30/Oct/09 5:38 AM,30/Nov/10 4:59 PM,10/May/19 2:36 AM,15/Mar/10 3:48 PM,2.2.0.RELEASE,,,,,,,2.5.0.RC1,,,,,,,,,1,,,,,,,,"Start the server with some bundles deployed (ours is an RFC-66 war bundle project).  Open the server in STS and go to the Bundle Overview tab.  Get the list of bundles and find your bundle, click on it.

Click stop - nothing happens.",,;01/Mar/10 12:58 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,288748800,,,,,2010-03-01 12:58:14.514,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aji7:,9223372036854775807,9223372036854775807,,,,,,"01/Mar/10 12:58 PM;spingel;Scott, I haven't been able to reproduce this problem. What happens if you attempt to stop other bundles? Does that have any effect?","15/Mar/10 3:48 PM;spingel;A new release of the SpringSource Tool Suite is now available. Scott, please reopen this bug in case you are still experiencing the problem with the latest version including any relevant entries from the error log (Window > Show View > Error Log). Thanks.",,,,,,,,,,,,,,,,,,,,,,
The properties view for the config editor should respond to selections in tables,STS-607,74620,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,27/Oct/09 3:30 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,28/Oct/09 12:13 PM,,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,,0,Y3M2,,,,,,,"Currently the properties view responds to selections in the XML editor, the beans graph page, and the batch graphical editor. Selections in the form pages are currently ignored. We should be passing selections in the tables in those pages to the properties view.",,;27/Oct/09 6:23 PM;ldossantos;9900,;28/Oct/09 12:13 PM;ldossantos;6600,,,,,,,0,0,16500,"9,223,372,036,854,775,807%",0,0,16500,,,,,,,,,,,,,,,,,,,,,,,,,,,300758400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adqv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Outline view does not respond to page changes in the config editor.,STS-606,73840,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,27/Oct/09 3:08 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,29/Oct/09 10:01 AM,,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,,0,Y3M2,,,,,,,"If the config editor opens to the beans graph page, then the outline view will display a mini graph overview. If the config editor opens to any other page, then the outline view will display a tree of the XML structure. Flipping between pages in the config editor will not change what is displayed in the outline view. The outline view should respond to page changes and update it's display based on what kind of page is active in the config editor.",,;27/Oct/09 6:23 PM;ldossantos;1500,;28/Oct/09 5:40 PM;ldossantos;10800,;29/Oct/09 10:01 AM;ldossantos;2100,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,300758400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adsn:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The focus button in the Spring Explorer should not be enabled if no task is active,STS-574,72579,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,spingel,spingel,15/Oct/09 9:12 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,19/Oct/09 10:28 AM,2.2.0.RELEASE,,,,,,,2.2.1.RELEASE,Sprint 5,,,,,,,,0,Y3M1,,,,,,,The Focus button is always enabled.,,"Time worked: 02:28 from Sun, 11 Oct 2009 00:00:00 -0700 to Sat, 17 Oct 2009 23:59:59 -0700.;16/Oct/09 2:32 PM;ldossantos;8880",,,,,,,,0,0,8880,"9,223,372,036,854,775,807%",0,0,8880,,,,,,,,,,,,,,16/Oct/09 2:26 PM;ldossantos;SpringIDE Focus Action Patch.txt;https://jira.spring.io/secure/attachment/24649/SpringIDE+Focus+Action+Patch.txt,,,,,,,,,,,,,301449600,,,,,2009-10-16 14:26:02.617,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a4g7:,9223372036854775807,9223372036854775807,,,,,,16/Oct/09 2:26 PM;ldossantos;Patch to Spring IDE,19/Oct/09 10:28 AM;ldossantos;Patch has been applied by Christian,19/Oct/09 10:28 AM;ldossantos;Patch has been applied by Christian,,,,,,,,,,,,,,,,,,,,,
[linux] borders in dm Server editor Redeploy and Artefact sections are cut off,STS-571,76319,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,15/Oct/09 8:25 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,04/Nov/09 6:16 AM,2.1.0.SR01,,,,,,,2.3.0.RELEASE,Sprint 6,,,,,,,,0,y3m2,,,,,,,,,;04/Nov/09 6:16 AM;spingel;7200,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,301708800,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a4hj:,9223372036854775807,9223372036854775807,,,,,,16/Oct/09 12:10 PM;spingel;I have fixed the borders. Still need to improve the action enablement and sizing of the buttons.,,,,,,,,,,,,,,,,,,,,,,,
Authoring button not available in cheatsheet editor,STS-562,74303,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,spingel,spingel,14/Oct/09 10:20 PM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,01/Mar/10 4:11 PM,2.3.0.RELEASE,,,,,,,2.3.1.RELEASE,2.3.2.RELEASE,Sprint 10,,,,,,,0,y3m6,,,,,,,The corresponding action set is not activated when the cheatsheet editor is opened.,,;01/Mar/10 4:11 PM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,301881600,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0a4on:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create a feature for installing m2eclipse,STS-557,74936,72605,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,08/Oct/09 6:33 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,12/Oct/09 9:58 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,y3m1,,,,,,,,,"Time worked: 02:00 from Mon, 12 Oct 2009 00:00:00 -0700 to Sun, 18 Oct 2009 23:59:59 -0700.;12/Oct/09 9:58 PM;spingel;7200",,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,302400000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0aglb:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange names in RequestMapping,STS-555,74623,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,,ldossantos,ldossantos,08/Oct/09 9:59 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,08/Oct/09 10:31 AM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,Y3M1,,,,,,,It appears that SVN decorations are being applied to the method string.,,;08/Oct/09 10:31 AM;ldossantos;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,302400000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0agkv:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prompt for credentials when connecting to server,STS-549,72690,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,spingel,spingel,07/Oct/09 2:15 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,09/Oct/09 10:10 AM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,y3m1,,,,,,,"* Automatically create Cloud Foundry server on initial STS startup
* Prompt user to enter credentials when connecting server and no credentials are available",,"Time worked: 03:25 from Wed, 7 Oct 2009 00:00:00 -0700 to Wed, 7 Oct 2009 23:59:59 -0700.;08/Oct/09 5:09 PM;thon;12300","Time worked: 00:58 from Fri, 9 Oct 2009 00:00:00 -0700 to Fri, 9 Oct 2009 23:59:59 -0700.;09/Oct/09 4:21 PM;thon;3480",,,,,,,0,0,15780,"9,223,372,036,854,775,807%",0,0,15780,,,,,,,,,,,,,,,,,,,,,,,,,,,302486400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0af1z:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use URL field for creating new CF account,STS-548,73999,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,07/Oct/09 1:50 PM,14/Apr/11 1:27 AM,10/May/19 2:36 AM,07/Oct/09 2:08 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,CLOUDFOUNDRY,,,,0,y3m1,,,,,,,,,"Time worked: 00:19 from Wed, 7 Oct 2009 00:00:00 -0700 to Wed, 7 Oct 2009 23:59:59 -0700.;08/Oct/09 5:09 PM;thon;1140",,,,,,,,3600,2460,1140,31%,3600,2460,1140,,,,,,,,,,,,,,,,,,,,,,,,,,,302486400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0af1r:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redeploy applications instead of recreating the deployment,STS-545,75433,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,spingel,spingel,05/Oct/09 10:01 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,06/Oct/09 4:21 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,y3m1,,,,,,,,,"Time worked: 03:34 from Tue, 6 Oct 2009 00:00:00 -0700 to Tue, 6 Oct 2009 23:59:59 -0700.;06/Oct/09 4:21 PM;thon;12840","Time worked: 01:05 from Wed, 7 Oct 2009 00:00:00 -0700 to Wed, 7 Oct 2009 23:59:59 -0700.;08/Oct/09 5:09 PM;thon;3900",,,,,,,0,0,16740,"9,223,372,036,854,775,807%",0,0,16740,,,,,,,,,,,,,,,,,,,,,,,,,,,302572800,,,,,2009-10-06 16:20:59.11,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ad3b:,9223372036854775807,9223372036854775807,,,,,,"06/Oct/09 4:20 PM;thon;Restarting modules that are not in stopped state will redeploy it on CF, otherwise a new deployment is created.",,,,,,,,,,,,,,,,,,,,,,,
Disable CF server finish button until credentials are entered,STS-543,75035,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,thon,thon,thon,05/Oct/09 3:37 PM,14/Apr/11 1:28 AM,10/May/19 2:36 AM,06/Oct/09 9:18 AM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,CLOUDFOUNDRY,,,,0,y3m1,,,,,,,,,"Time worked: 02:56 from Mon, 5 Oct 2009 00:00:00 -0700 to Mon, 5 Oct 2009 23:59:59 -0700.;06/Oct/09 9:18 AM;thon;10560","Time worked: 01:39 from Tue, 6 Oct 2009 00:00:00 -0700 to Tue, 6 Oct 2009 23:59:59 -0700.;06/Oct/09 4:21 PM;thon;5940",,,,,,,7200,0,16500,229%,7200,0,16500,,,,,,,,,,,,,,,,,,,,,,,,,,,302659200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ad2n:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create a Cloud Foundry feature,STS-542,73582,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,spingel,spingel,spingel,03/Oct/09 7:43 PM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,05/Oct/09 10:57 AM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,y3m1,,,,,,,,,;05/Oct/09 10:57 AM;spingel;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,302832000,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0ade7:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add connect and disconnect to server view toolbar for Cloud Foundry server,STS-538,75413,,Task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,02/Oct/09 10:41 AM,11/Aug/11 5:11 PM,10/May/19 2:36 AM,11/Aug/11 5:11 PM,,,,,,,,,,,,,CLOUDFOUNDRY,,,,0,,,,,,,,,,"Time worked: 02:01 from Fri, 2 Oct 2009 00:00:00 -0700 to Fri, 2 Oct 2009 23:59:59 -0700.;02/Oct/09 6:04 PM;thon;7260","Time worked: 02:09 from Wed, 7 Oct 2009 00:00:00 -0700 to Wed, 7 Oct 2009 23:59:59 -0700.;08/Oct/09 5:09 PM;thon;7740",,,,,,,0,0,15000,"9,223,372,036,854,775,807%",0,0,15000,,,,,,,,,,,,,,,,,,,,,,,,,,,244339200,,,,,2009-10-03 19:42:25.123,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adnz:,9223372036854775807,9223372036854775807,,,,,,"02/Oct/09 1:32 PM;thon;Web tools remove all tool bar actions before adding the server actions, so there's no good way to add connect or disconnect to the toolbar. Adding these actions to the view menu is possible, but that is not much better than the actions in the context menu which we already have.",03/Oct/09 7:42 PM;spingel;Thanks for investigating this Terry.,03/Oct/09 8:54 PM;cdupuis;Just to make sure that we are on the same page here: I was talking about adding the connect and disconnect actions to the Server View tool bar; not the global Eclipse tool bar.,"07/Oct/09 1:29 PM;thon;I've added connect and disconnect to the server view menu and I have filed a bug with web tools about not being able to contribute to the server view toolbar:

291664: Server view tool bar contributions are ignored
https://bugs.eclipse.org/bugs/show_bug.cgi?id=291664",05/Jul/11 12:02 PM;spingel;Connect/Disconnect is now available from the server editor.,11/Aug/11 5:11 PM;thon;Marking this as completed as Connect/Disconnect is also available in contetx menu in Server view,11/Aug/11 5:11 PM;thon;Marking this as completed as Connect/Disconnect is also available in contetx menu in Server view,,,,,,,,,,,,,,,,,
Disable remove for cloud application,STS-537,74388,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,02/Oct/09 10:39 AM,05/Jul/11 1:08 PM,10/May/19 2:36 AM,05/Jul/11 1:08 PM,,,,,,,,2.7.0.M3 (CF),,,,,CLOUDFOUNDRY,,,,0,,,,,,,,"Since deleting application is currently not possible, we should either disable remove action on application context menu or hides application if user selects that action.",,"Time worked: 01:23 from Fri, 2 Oct 2009 00:00:00 -0700 to Fri, 2 Oct 2009 23:59:59 -0700.;02/Oct/09 6:04 PM;thon;4980","Time worked: 00:14 from Mon, 5 Oct 2009 00:00:00 -0700 to Mon, 5 Oct 2009 23:59:59 -0700.;06/Oct/09 9:18 AM;thon;840",,,,,,,0,0,5820,"9,223,372,036,854,775,807%",0,0,5820,,,,,,,,,,,,,,,,,,,,,,,,,,,302918400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adnj:,9223372036854775807,9223372036854775807,,,,,,02/Oct/09 4:08 PM;thon;Remove action cannot be disabled easily as it is created in the server view and it is always set to be enabled. Will have to look at another way to deal with when this action is run,,,,,,,,,,,,,,,,,,,,,,,
Connect Cloud Foundry account when user finishes the server wizard,STS-536,75919,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,thon,thon,thon,02/Oct/09 10:37 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,02/Oct/09 4:06 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,Y3M1,,,,,,,,,"Time worked: 02:01 from Fri, 2 Oct 2009 00:00:00 -0700 to Fri, 2 Oct 2009 23:59:59 -0700.;02/Oct/09 6:04 PM;thon;7260",,,,,,,,0,0,7260,"9,223,372,036,854,775,807%",0,0,7260,,,,,,,,,,,,,,,,,,,,,,,,,,,302918400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adp3:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement 'Run on Server...',STS-535,76334,73407,Sub-task,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Major,Fixed,ldossantos,ldossantos,ldossantos,02/Oct/09 9:45 AM,01/Dec/10 12:00 PM,10/May/19 2:36 AM,03/Oct/09 10:15 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,y3m1,,,,,,,,,;02/Oct/09 7:23 PM;ldossantos;25200,;05/Oct/09 10:57 AM;spingel;10800,,,,,,,0,0,36000,"9,223,372,036,854,775,807%",0,0,36000,,,,,,,,,,,,,,,,,,,,,,,,,,,302918400,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adov:,9223372036854775807,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When restarting STS with an open config editor, the editor does not load the beans graph page.",STS-534,72615,,Bug,Resolved,STS,Spring Tool Suite,software,mlippert,"The Spring Tool Suite™ (STS) provides the best Eclipse-powered development environment for building Spring-powered enterprise applications.
  
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
This Jira project is now archived as read-only, please file new issues at <a href=""https://github.com/spring-projects/spring-ide/issues"">https://github.com/spring-projects/spring-ide/issues</a> </div>
",http://spring.io/tools/,Minor,Fixed,,ldossantos,ldossantos,02/Oct/09 9:12 AM,30/Nov/10 4:57 PM,10/May/19 2:36 AM,05/Oct/09 4:56 PM,,,,,,,,2.2.0.RELEASE,Sprint 4,,,,,,,,0,Y3M1,,,,,,,,,;05/Oct/09 4:56 PM;ldossantos;15000,,,,,,,,0,0,15000,"9,223,372,036,854,775,807%",0,0,15000,,,,,,,,,,,,,,,,,,,,,,,,,,,302659200,,,,,,9223372036854775807,true,tmarshall(tmarshall),,,,0|i0adof:,9223372036854775807,9223372036854775807,,,,,,"05/Oct/09 11:15 AM;ldossantos;On startup, Eclipse will load previously open editors eagerly. At this point Spring IDE has not loaded its BeansModel yet. Need to defer loading of the beans graph page.","05/Oct/09 4:56 PM;ldossantos;The beans graph page will now load as soon as the beans model has been loaded. This will occur a few seconds after startup, and will not be immediate.",,,,,,,,,,,,,,,,,,,,,,
SQL Server error code 209 should map to BadSqlGrammarException,SPR-9946,45962,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Complete,cbeams,jfreedman,jfreedman,02/Nov/12 3:42 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/Nov/12 6:20 AM,,,,,,,,3.2 RC1,,,,,Data:JDBC,,,,0,,,,,,,,"Executing the following statement currently throws a TransientDataAccessResourceException but should throw a BadSqlGrammarException

{code}SELECT x.foo x, y.foo y
FROM (
    SELECT 'x' foo
) x
JOIN (
    SELECT 'x' foo
) y ON y.foo = x.foo
ORDER BY foo{code}

There's nothing transient about this error",,;02/Nov/12 7:07 AM;cbeams;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-11-02 06:20:06.21,32852,true,issuemaster(issuemaster),,,,0|i05xrz:,34678,32554,,,,,,"02/Nov/12 6:20 AM;cbeams;{quote}
{noformat}
commit 74e86fe52fbb831d0512819c205817edcd5ffc77
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Support SQL exception translation for MSSQL 209
    
    SQL Server error 209 [1] will now raise a BadSqlGrammarException.
    
    [1]: http://www.sql-server-helper.com/error-messages/msg-1-500.aspx
    
    Issue: SPR-9946
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14579|https://github.com/spring-projects/spring-framework/issues/14579]. ,,,,,,,,,,,,,,,,,,,,,,
AbstractEnvironment addActiveProfile ignores profiles activated with properties,SPR-9944,45947,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,cbeams,jankronquist,jankronquist,01/Nov/12 7:57 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/Nov/12 7:06 AM,3.1.3,,,,,,,3.2 RC1,,,,,Core,,,,0,,,,,,,,"addActiveProfile does not check if profiles are initiated using a property. This means that you have to call getActiveProfiles() before calling addActiveProfile!

See code below:
{code}
protected Set<String> doGetActiveProfiles() {
	if (this.activeProfiles.isEmpty()) {
		String profiles = this.getProperty(ACTIVE_PROFILES_PROPERTY_NAME);
		if (StringUtils.hasText(profiles)) {
			setActiveProfiles(commaDelimitedListToStringArray(trimAllWhitespace(profiles)));
		}
	}
	return this.activeProfiles;
}

public void addActiveProfile(String profile) {
	if (this.logger.isDebugEnabled()) {
		this.logger.debug(format(""Activating profile '%s'"", profile));
	}
	this.validateProfile(profile);
	this.activeProfiles.add(profile);
}
{code}",,;02/Nov/12 7:06 AM;cbeams;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-11-02 07:06:19.242,32837,true,issuemaster(issuemaster),,,,0|i05xon:,34663,32539,,,,,,"02/Nov/12 7:06 AM;cbeams;Thanks, Jan.

{quote}
{noformat}
commit c94bc2e709ab00b154fdedc613b92b093dc0d029
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Respect spring.profiles.active in #addActiveProfile
    
    Prior to this commit, calls to ConfigurableEnvironment#addActiveProfile
    would cause any active profile values provided via the
    ""spring.profiles.active"" property to be ignored.
    
    Now these two mechanisms can be used in conjunction and work as
    expected.
    
    Issue: SPR-9944
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14577|https://github.com/spring-projects/spring-framework/issues/14577]. ,,,,,,,,,,,,,,,,,,,,,,
Fix package cycles in spring-test,SPR-9924,45894,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Blocker,Complete,sbrannen,cbeams,cbeams,26/Oct/12 5:22 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/Oct/12 3:17 PM,3.2 RC1,,,,,,,3.2 RC1,,,,,Test,,,,0,,,,,,,,"[~sbrannen], see attached screenshots from Structure 101 - it looks like a couple package cycles crept in during recent changes to spring-test. /cc [~rstoya05-aop]",,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,26/Oct/12 5:22 AM;cbeams;Screen Shot 2012-10-26 at 2.20.23 PM.png;https://jira.spring.io/secure/attachment/20588/Screen+Shot+2012-10-26+at+2.20.23+PM.png,26/Oct/12 5:22 AM;cbeams;Screen Shot 2012-10-26 at 2.20.47 PM.png;https://jira.spring.io/secure/attachment/20589/Screen+Shot+2012-10-26+at+2.20.47+PM.png,27/Oct/12 12:13 PM;cbeams;Screen Shot 2012-10-27 at 9.12.33 PM.png;https://jira.spring.io/secure/attachment/20593/Screen+Shot+2012-10-27+at+9.12.33+PM.png,,,,,,,,,,,9936000,,,,,2012-10-27 11:44:59.239,32784,true,issuemaster(issuemaster),,,,0|i05xcn:,34609,32486,,,,,,"27/Oct/12 11:44 AM;sbrannen;Completed as described in the comments for [GitHub commit 90c5f226b6|https://github.com/SpringSource/spring-framework/commit/90c5f226b62503b492167bcd87361842f73d18b1]:

{quote}
*Fix package cycles in spring-test*

Code introduced in conjunction with SPR-5243 introduced package cycles
between the ~.test.context.web and ~.test.context.support packages. This
was caused by the fact that ServletTestExecutionListener extended
AbstractTestExecutionListener.

To address this, ServletTestExecutionListener now implements
TestExecutionListener directly.
{quote}","27/Oct/12 12:13 PM;cbeams;Hi Sam,

Some tangles have indeed been resolved, but it looks like one remains. See the screenshot, thanks.","27/Oct/12 3:17 PM;sbrannen;Completed as described in the comments for [GitHub commit 461d99af29|https://github.com/SpringSource/spring-framework/commit/461d99af29e8c358ff80ff9ff58a8ea63fe7b670]:

{quote}
*Fix package cycles in spring-test*

Code introduced in conjunction with SPR-5243 introduced package cycles
between the ~.test.context and ~.test.context.web packages. This was
caused by the fact that ContextLoaderUtils worked directly with the
@WebAppConfiguration and WebMergedContextConfiguration types.

To address this, the following methods have been introduced in
ContextLoaderUtils. These methods use reflection to circumvent hard
dependencies on the @WebAppConfiguration and
WebMergedContextConfiguration types.

 - loadWebAppConfigurationClass()
 - buildWebMergedContextConfiguration()
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14557|https://github.com/spring-projects/spring-framework/issues/14557]. ,,,,,,,,,,,,,,,,,,,,
Refactor AnnotationAttributes convenience methods,SPR-9911,45812,,Refactoring,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Works as Designed,cbeams,cbeams,cbeams,23/Oct/12 3:11 AM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,23/Oct/12 3:25 AM,3.1.1,,,,,,,,,,,,,,,,0,,,,,,,,"Suggestion: move methods currently within the package-private {{MetadataUtils}} into 
AnnotationAttributes, eg:
{code}
AnnotationAttributes.fromMetadata(importMetadata, SomeAnnotation.class);
{code}",,;23/Oct/12 3:25 AM;cbeams;1800,,,,,,,,,,1800,,,,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:45.515,32736,true,issuemaster(issuemaster),,,,0|i05x2f:,34563,32436,,,,,,"23/Oct/12 3:25 AM;cbeams;Won't Fix/Works as Designed, because {{core.type}} already has a dependencies on {{core.annotation}}. Moving the methods currently in {{MetadataUtils}} into {{core.annotation.AnnotationAttributes}} would establish a cyclic dependency back to {{core.type}} because those methods take parameters of {{core.type}} classes {{AnnotationMetadata}} and {{MethodMetadata}}.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14544|https://github.com/spring-projects/spring-framework/issues/14544]. ,,,,,,,,,,,,,,,,,,,,,,
Un-@Ignore SpringRunnerContextCacheTests and fix order-dependent issues under JDK7,SPR-9789,45385,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,cbeams,cbeams,11/Sep/12 4:14 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,13/Oct/12 11:34 AM,,,,,,,,3.2 RC1,,,,,[Build],Test,,,0,jdk7,,,,,,,"{{SpringRunnerContextCacheTests}} suffers from JDK7-related non-determinism in values returned from {{Class#getDeclaredMethods}}, which in turn affects JUnit and its execution of {{@Test}} methods.

This has been remedied for other affected tests in the framework (a) by fixing order-dependent test methods or (b) through the upgrade to JUnit 4.11 snapshot, which includes support for predictable test method ordering in JUnit.

However, because {{spring-test}} has a compile-time dependency on JUnit 4.10, I believe the predictability introduced in 4.11 is not kicking in here.

In any case, to fix this problem, please un-{{@Ignore}} {{SpringRunnerContextCacheTests}} and run the tests under JDK7. Note that these tests succeed for me under OSX JDK1.7.0_08-ea-b03, but do consistently fail under JDK1.7.0_05 on the CI server.",,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-10-13 11:34:44.361,32306,true,issuemaster(issuemaster),,,,0|i05ugn:,34141,32006,,,,,,"13/Oct/12 11:34 AM;sbrannen;Completed as described in the comments from [GitHub commit 300d41840b|https://github.com/SpringSource/spring-framework/commit/300d41840b09dba9a0e1bba32d9060916f80bcf9]:

{quote}
*Fix JDK7 method order-dependent issues in SRCCT*

{{SpringRunnerContextCacheTests}} suffers from JDK7-related non-determinism in values returned from {{Class#getDeclaredMethods()}}, which in turn affects JUnit and its execution of @Test methods.

This commit addresses this issue by introducing an {{OrderedMethodsSpringJUnit4ClassRunner}} that sorts the test methods alphabetically, which is actually required for {{SpringRunnerContextCacheTests}} to work properly.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14422|https://github.com/spring-projects/spring-framework/issues/14422]. ,,,,,,,,,,,,,,,,,,,,,,
Make locales in MockHttpServletRequest configurable,SPR-9724,45062,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,rwinch,rwinch,24/Aug/12 9:33 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/Oct/12 9:24 AM,3.1.2,,,,,,,3.2 RC1,,,,,Test,,,,0,,,,,,,,"h4. Status Quo

The {{MockHttpServletRequest}} constructor adds {{Locale.ENGLISH}} as the _preferred locale_.

h4. Proposals

It may be nice to default to {{Locale.getDefault()}} instead {{Locale.ENGLISH}}.

It would also be nice to support {{getLocales()}} not returning this hard coded value. One way of doing that is add a setter for the locales. This would make testing edge cases easier.",,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-10-27 09:24:33.619,32074,true,issuemaster(issuemaster),,,,0|i05t1b:,33910,31774,,,,,,"27/Oct/12 9:24 AM;sbrannen;Completed as described in the comments for [GitHub commit 591aa01741|https://github.com/SpringSource/spring-framework/commit/591aa017412470f20d6e663ec6416857003c5edf]:

{quote}
*Configurable locales in MockHttpServletRequest*

Prior to this commit the MockHttpServletRequest constructor chain set
the preferred local to Locale.ENGLISH. Furthermore, it was possible to
add additional preferred locales ""in front"" of ENGLISH; however, it was
not possible to delete ENGLISH from the list of preferred locales.

This commit documents the fact that ENGLISH is the default preferred
locale and makes it possible to set the list of preferred locales via a
new setPreferredLocales(List<Locale> locales) method.
{quote}","27/Oct/12 9:25 AM;sbrannen;{quote}It may be nice to default to {{Locale.getDefault()}} instead {{Locale.ENGLISH}}.{quote}

It was not possible to do this since it breaks backward compatibility.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14358|https://github.com/spring-projects/spring-framework/issues/14358]. ,,,,,,,,,,,,,,,,,,,,,
MockHttpSession does not implement invalidate() properly,SPR-9686,44851,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,carlholmes,carlholmes,09/Aug/12 4:54 PM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,16/Aug/12 4:18 AM,3.1.2,,,,,,,3.2 M2,,,,,Test,,,,0,feature-support,specification-compatibility,,,,,,"h4. Status Quo

The {{invalidate()}} method in {{MockHttpSession}} is implemented incorrectly, according to the contract of the method:

{quote}
Throws: java.lang.IllegalStateException if this method is called on an already invalidated session
{quote}

However, invoking {{invalidate()}} on the same {{MockHttpSession}} instance twice does not do this.

h4. Proposal

This can be fixed easily by including a check on the {{invalid}} field, and throwing an {{IllegalStateException}} if it is {{true}} before setting it to {{true}} for the first time.",,"triage, analysis, development, testing, etc.;16/Aug/12 4:20 AM;sbrannen;1800",,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-16 04:18:56.306,31898,true,issuemaster(issuemaster),,,,0|i05rzj:,33740,31598,,,,,,"16/Aug/12 4:18 AM;sbrannen;This has been completed as described in the comments for [GitHub commit 8059625670aedbdb1f5b9689ef1a9cbc41b050ec|https://github.com/SpringSource/spring-framework/commit/8059625670aedbdb1f5b9689ef1a9cbc41b050ec].

{quote}
*Implement invalidate() properly in MockHttpSession*

The invalidate() method in MockHttpSession is currently implemented
incorrectly. According to the Servlet specification, the method should
throw an IllegalStateException if it is invoked on an already
invalidated session. However, invoking invalidate() on the same
MockHttpSession instance multiple times does not throw an exception.

This commits addresses this issue by checking the invalid field and
throwing an IllegalStateException if it has already been set to true.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14320|https://github.com/spring-projects/spring-framework/issues/14320]. ,,,,,,,,,,,,,,,,,,,,,,
Add optional AspectJ dependencies where appropriate,SPR-9683,44897,,Task,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,cbeams,cbeams,13/Aug/12 6:27 AM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,13/Aug/12 6:27 AM,3.2 M1,,,,,,,3.2 M2,,,,,[Build],,,,0,,,,,,,,,,;13/Aug/12 6:28 AM;cbeams;600,,,,,,,,,,600,,,,600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:38.895,31921,true,issuemaster(issuemaster),,,,0|i05s4n:,33763,31621,,,,,,"13/Aug/12 6:27 AM;cbeams;{quote}
{noformat}
commit 81128871be4b9055fc562893c3a7ecd37184fd3b
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Add optional AspectJ dependencies where appropriate
    
    spring-core, spring-aop and spring-context each have compile-time
    dependencies on classes in the aspectjweaver jar. Prior to this commit,
    only spring-core declared an optional dependency on it; now all three
    do.
    
    Issue: SPR-9683
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14317|https://github.com/spring-projects/spring-framework/issues/14317]. ,,,,,,,,,,,,,,,,,,,,,,
Upgrade to ASM 4.0 and CGLIB 3.0,SPR-9669,44807,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,cbeams,cbeams,07/Aug/12 1:46 AM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,09/Aug/12 3:47 PM,,,,,,,,3.2 M2,,,,,[Build],Core:AOP,Core:DI,,0,third-party-compatibility,,,,,,,"ASM 4.0 was released in Oct 2011 to address Java 7 bytecode compatibility, particularly with regard to invokedynamic [1].

Certain public API changes were made in the process.  Upgrade Spring's own internal repackaging of ASM to ensure users don't run into problems with Java 7 classes.  This is most likely to cause problems in conjunction with Spring's component-scanning functionality, so this is high priority.

The repackaged {{org.springframework.asm}} classes are currently based on ASM 2.2.3, which is now several generations behind.  Here are the differences between APIs across those generations:

{{2.2.3-> 3.2}}: http://asm.ow2.org/jdiff223to32/changes.html
{{3.2  -> 3.3}}: http://asm.ow2.org/jdiff32to33/changes.html
{{3.3  -> 3.4}}: http://asm.ow2.org/jdiff33to40/changes.html


CGLIB 3.0 was released on May 25th, 2012 [2] in order to upgrade its dependency on ASM to 4.0.  This also involved some API changes.  Upgrade Spring's dependency on CGLIB (currently at 2.2) to 3.0.  Impact may or may not be significant, but should not have external impact at the API level (because we do not expose CGLIB APIs).  It will be important to advise users as to whether CGLIB 3.0 is the new lower bound supported by Spring as of 3.2 GA, or if 2.2 is still supported (with caveats about Java 7 support).  This depends again on the extent of internal API changes necessary to support the upgrade.

[1]: http://mail.ow2.org/wws/arc/asm/2011-10/msg00025.html
[2]: http://cglib.cvs.sourceforge.net/viewvc/cglib/cglib/build.xml?revision=1.56&view=markup",,;09/Aug/12 3:47 PM;cbeams;72000,,,,,,,,,,72000,,,,72000,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:38.569,31851,true,issuemaster(issuemaster),,,,0|i05rpr:,33696,31551,,,,,,"09/Aug/12 3:47 PM;cbeams;{quote}
{noformat}
commit 92500ab9023ae2afd096be9c014423fcd4180c55
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Upgrade to CGLIB 3 and inline into spring-core
    
    CGLIB 3 has been released in order to depend on ASM 4, which Spring now
    depends on internally (see previous commit).
    
    This commit eliminates spring-beans' optional dependency on cglib-nodep
    v2.2 and instead repackages net.sf.cglib => org.springframework.cglib
    much in the same way we have historically done with ASM.
    
    This change is beneficial to users in several ways:
    
     - Eliminates the need to manually add CGLIB to the application
       classpath; especially important for the growing number of
       @Configuration class users. Java-based configuration functionality,
       along with proxy-target-class and method injection features now
       work 'out of the box' in Spring 3.2.
    
     - Eliminates the possibility of conflicts with other libraries that
       may dependend on differing versions of CGLIB, e.g. Hibernate
       3.3.1.ga and its dependency on CGLIB 2.1.3 would easily cause a
       conflict if the application were depending on CGLIB 3 for
       Spring-related purposes.
    
     - Picks up CGLIB 3's changes to support ASM 4, meaning that CGLIB is
       that much less likely to work well in a Java 7 environment due to
       ASM 4's support for transforming classes with invokedynamic
       bytecode instructions.
    
    On CGLIB and ASM:
    
      CGLIB's own dependency on ASM is also transformed along the way to
      depend on Spring's repackaged org.springframework.asm, primarily to
      eliminate unnecessary duplication of ASM classfiles in spring-core and
      in the process save around 100K in the final spring-core JAR file size.
    
      It is coincidental that spring-core and CGLIB currently depend on the
      exact same version of ASM (4.0), but it is also unlikely to change any
      time soon. If this change does occur and versions of ASM drift, then
      the size optimization mentioned above will have to be abandoned. This
      would have no compatibility impact, however, so this is a reasonable
      solution now and for the forseeable future.
    
    On a mysterious NoClassDefFoundError:
    
      During the upgrade to CGLIB 3.0, Spring test cases began failing due to
      NoClassDefFoundErrors being thrown from CGLIB's DebuggingClassWriter
      regarding its use of asm-util's TraceClassVisitor type. previous
      versions of cglib-nodep, particularly 2.2, did not cause this behavior,
      even though cglib-nodep has never actually repackaged and bundled
      asm-util classes. The reason for these NoClassDefFoundErrors occurring
      now is still not fully understood, but appears to be due to subtle JVM
      bytecode preverification rules. The hypothesis is that due to minor
      changes in DebuggingClassWriter such as additional casts, access to
      instance variables declared in the superclass, and indeed a change in
      the superclass hierarchy, preverification may be kicking in on the
      toByteArray method body, at which point the reference to the missing
      TraceClassVisitor type is noticed and the NCDFE is thrown. For this
      reason, a dummy implementation of TraceClassVisitor has been added to
      spring-core in the org.springframework.asm.util package. This class
      simply ensures that Spring's own tests never result in the NCDFE
      described above, and more importantly that Spring's users never
      encounter the same.
    
    Other changes include:
    
     - rename package-private Cglib2AopProxy => CglibAopProxy
     - eliminate all 'cglibAvailable' checks, warnings and errors
     - eliminate all 'CGLIB2' language in favor of 'CGLIB'
     - eliminate all mention in reference and java docs of needing to add
       cglib(-nodep) to one's application classpath
    
    Issue: SPR-9669
{noformat}
{quote}

{quote}
{noformat}
commit c16f18a5fd659f34d6290b5f2cffe54534b7592a
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Remove spring-asm and inline ASM 4 into spring-core
    
    ASM 4.0 is generally compatibile with Java 7 classfiles, particularly
    including 'invokedynamic' instructions. This is important when
    considering that Spring's component-scanning support is internally
    ASM-based and it is increasingly likely that component classes having
    invokedynamic instructions may be encountered and read by ASM.
    This upgrade, then, is primarily preventive in nature.
    
    Changes include:
    
     - upgrade from ASM 2.2.3 to ASM 4.0
    
     - adapt to ASM API changes as necessary throughout spring-core,
       resulting in no impact to the public Spring API.
    
     - remove dedicated spring-asm module
    
     - use new :spring-core:asmRepackJar task to repackage
       org.objectweb.asm => org.springframework.asm as per usual and write
       repackaged classes directly into spring-core jar
    
    The choice to eliminate the spring-asm module altogether and instead
    inline the repackaged classes directly into spring-core is first to
    eliminate an otherwise unnecessary second jar. spring-core has a
    non-optional dependency on spring-asm meaning it is always on the
    application classpath. This change simplifies that situation by
    consoliding two jars into one. The second reason for this choice is in
    anticipation of upgrading CGLIB to version 3 and inlining it into
    spring-core as well. See subsequent commit for details.
    
    Issue: SPR-9669
{noformat}
{quote}

{quote}
{noformat}
commit 69a392981e135a1c78ed18b9495626e7b34349e4
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Upgrade JarJar to version 1.3
    
    JarJar 1.3 now uses ASM 4 in order to be compatible with Java 7
    'invokedynamic' instructions. This is not an immediate concern for
    the classes that we use JarJar to repackage and transform, but is a
    timely upgrade in anticipation of the subsequent commits in which we
    upgrade Spring's own dependency on ASM from 2.2.3 to 4.0 and Spring's
    dependency on CGLIB from 2.2 to 3.0 (which in turn depends on ASM 4.0).
    
    See https://code.google.com/p/jarjar/wiki/ChangeLog
    
    Issue: SPR-9669
{noformat}
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14303|https://github.com/spring-projects/spring-framework/issues/14303]. ,,,,,,,,,,,,,,,,,,,,,,
Introduce countRowsInTableWhere() and dropTables() in abstract transactional base classes in the TestContext framework,SPR-9665,44779,,New Feature,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,sbrannen,sbrannen,03/Aug/12 1:16 PM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,03/Aug/12 1:57 PM,,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Impetus

Due to the changes introduced in SPR-9235 and SPR-8990, we should introduce {{countRowsInTableWhere()}} and {{dropTables()}} convenience methods in the abstract transactional base classes in the TestContext framework

----
h4. Deliverables

# (/) Introduce {{countRowsInTableWhere()}} and {{dropTables()}} convenience methods in:
#- {{AbstractTransactionalJUnit4SpringContextTests}}
#- {{AbstractTransactionalTestNGSpringContextTests}}
# (/) Update the changelog

----",,,,,,,,,,,0,2700,,,0,2700,,SPR-9235,SPR-8990,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:38.386,31823,true,issuemaster(issuemaster),,,,0|i05rjj:,33668,31523,,,,,,"03/Aug/12 1:57 PM;sbrannen;Completed as described in the _Deliverables_ and in the comments for [GitHub commit 015086cb9c|https://github.com/SpringSource/spring-framework/commit/015086cb9c50fa4eabd47fab064bc1bbdde8caa6]:

{quote}
*Introduce new methods in tx base test classes*

Recently new utility methods were added to JdbcTestUtils, and a
JdbcTemplate was introduced in abstract transactional base classes in
the TestContext framework. This presents an easy opportunity to make
these new utility methods available as convenience methods in the base
test classes.

This commit introduces new countRowsInTableWhere() and dropTables()
convenience methods in the abstract transactional base classes in the
TestContext framework. These new methods internally delegate to methods
of the same names in JdbcTestUtils.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14299|https://github.com/spring-projects/spring-framework/issues/14299]. ,,,,,,,,,,,,,,,,,,,,,,
"Support single, unnamed transaction manager bean in the TestContext framework",SPR-9645,44707,,New Feature,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,sbrannen,sbrannen,27/Jul/12 1:15 AM,15/Jan/19 1:15 AM,10/May/19 2:36 AM,27/Jul/12 3:17 PM,3.1.2,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Status Quo

{{TransactionalTestExecutionListener}} -- in conjunction with {{@TransactionConfiguration}} -- requires that the {{PlatformTransactionManager}} be named _""transactionManager""_ by default. Otherwise, the bean name can be overridden via the {{transactionManager}} attribute of {{@TransactionConfiguration}} or the {{value}} attribute of {{@Transactional}}.

However, if there is only a single {{PlatformTransactionManager}} in the test's {{ApplicationContext}}, then the requirement to specify the exact name of that bean (or to name it exactly _""transactionManager""_) is often superfluous.

Furthermore, {{TransactionAspectSupport}} already implements an algorithm that falls back to looking up the transaction manager _by type_, using the following algorithm from its {{determineTransactionManager()}} method.

# return configured transaction manager if set
# else, look up _by type_ and _qualifier_ (from {{@Transactional}})
# else, look up _by type_ and _explicit name_
# else, look up _by type_

h4. Goal

In addition to the algorithm already in place, the _Spring TestContext Framework_ should attempt to look up a single, unnamed {{PlatformTransactionManager}} _by type_ as opposed to _by name_ if an explicit name or qualifier has not been specified.

h4. Deliverables

- (/) Refactor the implementation of {{beforeTestMethod()}} in {{TransactionalTestExecutionListener}} so that it is comparable to the algorithm for determining the transaction manager used in {{TransactionAspectSupport}}, using the following steps.
## look up _by type_ and _qualifier_ (from {{@Transactional}})
## else, look up _by type_ and _explicit name_ (from {{@TransactionConfiguration}})
## else, look up single bean _by type_
## else, look up _by type_ and _default name_ (from {{@TransactionConfiguration}})
- (/) Update the Javadoc for {{@TransactionalTestExecutionListener}}.
- (/) Update the Javadoc for {{@TransactionConfiguration}}.
- (/) Update the _Testing_ chapter of the Reference Manual accordingly.
- (/) Update the changelog accordingly.",,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:37.774,31739,true,issuemaster(issuemaster),,,,0|i05r3r:,33597,31439,,,,,,"27/Jul/12 3:17 PM;sbrannen;Completed as outlined in the comments for [GitHub commit f21fe33e74|https://github.com/SpringSource/spring-framework/commit/f21fe33e74ac3844a5690f71266e07c78ec219dd].

{quote}
*Support single, unqualified tx manager in the TCF*

TransactionalTestExecutionListener currently requires that the
PlatformTransactionManager bean be named ""transactionManager"" by
default. Otherwise, the bean name can only be overridden via the
transactionManager attribute of @TransactionConfiguration or the value
attribute of @Transactional.

However, if there is only a single PlatformTransactionManager in the
test's ApplicationContext, then the requirement to specify the exact
name of that bean (or to name it exactly ""transactionManager"") is often
superfluous.

This commit addresses this issue by refactoring the
TransactionalTestExecutionListener so that it is comparable to the
algorithm for determining the transaction manager used in
TransactionAspectSupport for ""production"" code. Specifically, the TTEL
now uses the following algorithm to retrieve the transaction manager.

 - look up by type and qualifier from @Transactional
 - else, look up by type and explicit name from 
   @TransactionConfiguration
 - else, look up single bean by type
 - else, look up by type and default name from @TransactionConfiguration
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14279|https://github.com/spring-projects/spring-framework/issues/14279]. ,,,,,,,,,,,,,,,,,,,,,,
SpEL MethodFilter registration fails if custom method resolvers have been set,SPR-9621,44625,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,aclement,sbrannen,sbrannen,23/Jul/12 6:50 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,09/Aug/12 2:09 PM,3.0 GA,3.1.2,,,,,,3.2 M2,,,,,Core:SpEL,,,,0,,,,,,,,"h4. Status Quo

Attempting to register a custom {{MethodFilter}} with a {{StandardEvaluationContext}} after invoking {{setMethodResolvers()}} with a custom list of {{MethodResolver}} instances results in a {{NullPointerException}}.

----
h4. Analysis

Based on the current documentation in {{StandardEvaluationContext}} it is unclear what the expected behavior should be, but either the implementation is broken, or the use case is unsupported.

In either case, allowing a {{NullPointerException}} to be thrown is inappropriate.

----
h4. Steps to Reproduce

In the following code, the call to {{registerMethodFilter()}} results in a {{NullPointerException}} since the internal {{reflectiveMethodResolver}} field within {{StandardEvaluationContext}} is {{null}}.

{code}
StandardEvaluationContext context = new StandardEvaluationContext();

// Register a custom MethodResolver...
List<MethodResolver> customResolvers = new ArrayList<MethodResolver>();
customResolvers.add(new CustomMethodResolver());
context.setMethodResolvers(customResolvers);

// or simply...
// context.setMethodResolvers(new ArrayList<MethodResolver>());

// Register a custom MethodFilter...
MethodFilter filter = new CustomMethodFilter();
context.registerMethodFilter(String.class, filter);
{code}

----
h4. Deliverables

- Either refactor the implementation of {{StandardEvaluationContext}} so that a {{NullPointerException}} is not thrown for the aforementioned failing use case
- Or document that the use case is unsupported and throw a more meaningful exception that contains contextual information in the exception message

",,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-07 10:18:25.684,31654,true,issuemaster(issuemaster),,,,0|i05qlj:,33515,31354,,,,,,"07/Aug/12 10:18 AM;aclement;https://github.com/SpringSource/spring-framework/pull/117

This pull request will avoid the NPE and instead throw a more meaningful IllegalStateException if attempting to register a method filter when it looks like the non-standard resolvers are in use.","09/Aug/12 2:09 PM;sbrannen;Completed as described in the comments for [GitHub commit 3e8b5575c10942e1eb20a18a6a605a2ceda35498|https://github.com/SpringSource/spring-framework/commit/3e8b5575c10942e1eb20a18a6a605a2ceda35498].

{quote}
*Avoid NPE when registering a SpEL MethodFilter*

Attempting to register a custom MethodFilter with a
StandardEvaluationContext after invoking setMethodResolvers() with a
custom list of MethodResolver instances results in a
NullPointerException. Based on the current documentation in
StandardEvaluationContext it is unclear what the expected behavior
should be, but either the implementation is broken, or the use case is
unsupported. In either case, allowing a NullPointerException to be
thrown is inappropriate.

This commit documents the fact that the SpEL MethodFilter is intended to
be used with the ReflectiveMethodResolver. Furthermore,
StandardEvaluationContext.registerMethodFilter() now throws an
IllegalStateException if the user attempts to set a filter after having
registered a custom set of resolvers.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14255|https://github.com/spring-projects/spring-framework/issues/14255]. ,,,,,,,,,,,,,,,,,,,,,
SpEL fails to parse nested double quotes in expressions,SPR-9620,44620,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,aclement,sbrannen,sbrannen,23/Jul/12 5:49 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,09/Aug/12 1:17 PM,3.0 GA,3.1.2,,,,,,3.2 M2,,,,,Core:SpEL,,,,0,,,,,,,,"h4. Status Quo

The Spring Expression Language currently supports nested single quotes within expressions but not nested double quotes.

For example, {{'Wayne''s World'}} properly evaluates to _Wayne's World_, but each of the following results in an exception being thrown.

|| Expression           || Expected        || Result ||
| ""double quote: """".""   | double quote: "". | {{SpelParseException}} |
| ""double quote: \""\""."" | double quote: "". | {{IllegalStateException}} |

----
h4. Deliverables

# Determine if it's appropriate for SpEL to throw an {{IllegalStateException}} in the second example above
# Wrap the {{IllegalStateException}} in a {{SpelParseException}} if it is determined to be an error to throw the {{IllegalStateException}} 
# Support nested double quotes within SpEL expressions
#- using the syntax from at least one of the aforementioned failing examples, preferably from the first one for consistency with handling of single quotes

----",,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-07 09:59:52.318,31650,true,issuemaster(issuemaster),,,,0|i05qkn:,33511,31350,,,,,,07/Aug/12 9:59 AM;aclement;Pull request that implements same behaviour for double as for single: https://github.com/SpringSource/spring-framework/pull/116,"09/Aug/12 1:17 PM;sbrannen;Completed as described in the comments for [GitHub commit 51bac37d9b67991bdfcbd53e0ed30a1574475bbf|https://github.com/SpringSource/spring-framework/commit/51bac37d9b67991bdfcbd53e0ed30a1574475bbf].

{quote}
*Support nested double quotes in SpEL expressions*

The Spring Expression Language currently supports nested single quotes
within expressions but not nested double quotes.

The SpEL tokenizer has been modified to support nested double quotes in
the same way it supports single quotes. A sequence of two double quotes
will now be replaced by one when evaluated.

Extra error handling has also been added to report when invalid escaping
is encountered, since SpEL does not support escaping with backslash.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14254|https://github.com/spring-projects/spring-framework/issues/14254]. ,,,,,,,,,,,,,,,,,,,,,
SpEL should support standard operators for logical AND and logical OR,SPR-9614,44607,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,aclement,sbrannen,sbrannen,20/Jul/12 4:27 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,09/Aug/12 12:21 PM,3.0 GA,3.1.2,,,,,,3.2 M2,,,,,Core:SpEL,,,,0,,,,,,,,"h4. Status Quo

SpEL typically supports logical operators for boolean expressions consistent with standard Java language semantics.

However, the operators for logical {{AND}} and logical {{OR}} are only supported as textual operators. In other words, SpEL does not support the use of {{&&}} and {{||}} as logical operators.

h4. Deliverables

# Provide support for {{&&}} as an alias for the logical operator {{AND}}.
# Provide support for {{||}} as an alias for the logical operator {{OR}}.
",,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-07 09:23:43.094,31637,true,issuemaster(issuemaster),,,,0|i05qhj:,33497,31337,,,,,,07/Aug/12 9:23 AM;aclement;Pull request: https://github.com/SpringSource/spring-framework/pull/115,"09/Aug/12 12:21 PM;sbrannen;Completed as described in the message for [GitHub commit 0d963a690b71e31412a921b9c67c04d8a6bce194|https://github.com/SpringSource/spring-framework/commit/0d963a690b71e31412a921b9c67c04d8a6bce194].

{quote}
*Support symbolic boolean operators for OR and AND*

SpEL typically supports logical operators for boolean expressions
consistent with standard Java language syntax. However, the operators
for logical AND and logical OR are currently only supported as textual
operators. In other words, SpEL does not support the use of && and || as
logical operators.

The SpEL tokenizer has now been modified to recognize && and || as
symbolic boolean operators. The parser has been modified to allow the
use of either the textual or symbolic operators.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14248|https://github.com/spring-projects/spring-framework/issues/14248]. ,,,,,,,,,,,,,,,,,,,,,
SpEL should support case-insensitive null literals,SPR-9613,44606,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,aclement,sbrannen,sbrannen,20/Jul/12 4:22 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,03/Aug/12 4:55 PM,3.0 GA,3.1.2,,,,,,3.2 M2,,,,,Core:SpEL,,,,0,,,,,,,,"h4. Status Quo

SpEL supports boolean literal values _true_ and _false_ in a case-insensitive manner; however, _null_ literals must currently be lowercase.

For example, the following code results in a {{SpelEvaluationException}} instead of {{result}} equaling {{null}}.

{code}
ExpressionParser parser = new SpelExpressionParser();
Expression exp = parser.parseExpression(""NULL"");
Object result = exp.getValue();
{code}

h4. Deliverables

# Ensure that null literals are interpreted in a case-insensitive manner, analogous to the current support for boolean literals.
",,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-03 10:44:24.739,31636,true,issuemaster(issuemaster),,,,0|i05qhb:,33496,31336,,,,,,03/Aug/12 10:44 AM;aclement;Pull request submitted: https://github.com/SpringSource/spring-framework/pull/113,"03/Aug/12 4:55 PM;sbrannen;Completed as described in the comments for [GitHub commit 3fbcebb82e|https://github.com/SpringSource/spring-framework/commit/3fbcebb82e232ee080860a84b43e08bf4b27d5fd]:

{quote}
*Support case-insensitive null literals in SpEL*

Prior to this commit null literals in SpEL expressions had to be
specified as ""null"" (i.e., all lowercase).

With this commit null literals in SpEL expressions are interpreted in a
case-insensitive manner, analogous to the current support for boolean
literals.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14247|https://github.com/spring-projects/spring-framework/issues/14247]. ,,,,,,,,,,,,,,,,,,,,,
SpEL fails to parse method invocation on an Integer literal,SPR-9612,44605,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,aclement,sbrannen,sbrannen,20/Jul/12 4:10 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,03/Aug/12 4:12 PM,3.0 GA,3.1.2,,,,,,3.2 M2,,,,,Core:SpEL,,,,0,,,,,,,,"h4. Status Quo

When attempting to parse an Integer literal expression such as {{42.toString()}}, SpEL throws a {{SpelParseException}} with a message similar to: _EL1041E:(pos 3): After parsing a valid expression, there is still more data in the expression: 'toString'_.

However, SpEL succeeds at parsing an equivalent expression for a Double literal such as {{3.14.isInfinite()}}.

h4. Deliverables

# Ensure that method invocation on an Integer literal works analogous to the existing support for method invocation on a Double literal.",,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-03 08:54:06.437,31635,true,issuemaster(issuemaster),,,,0|i05qh3:,33495,31335,,,,,,"03/Aug/12 8:54 AM;aclement;Pull request submitted: https://github.com/SpringSource/spring-framework/pull/112

The problem here is that '3.' is a valid number (including the dot).  The simplest fix without writing a lot of extra code means we will no longer cope with dotted numbers that are missing the fractional component.  So, with this change '3.e4' won't work anymore and will need to be written '3.0e4'.  I feel that is OK given '3.foo()' constructs are likely *much* more common than '3.e4' constructs.","03/Aug/12 4:12 PM;sbrannen;Completed as described in the comments for [GitHub commit 026ee846c7|https://github.com/SpringSource/spring-framework/commit/026ee846c7d14474be7bfe45deb0deff90a4ed1a]:

{quote}
*Modify SpEL Tokenizer to support methods on numbers*

When attempting to parse an Integer literal expression such as
42.toString(), SpEL currently throws a SpelParseException with a message
similar to: ""EL1041E:(pos 3): After parsing a valid expression, there is
still more data in the expression: 'toString'"". The problem here is that
'3.' is currently considered a valid number (including the dot).
However, SpEL succeeds at parsing an equivalent expression for a Double
literal such as 3.14.isInfinite().

To address this issue, the SpEL Tokenizer no longer consumes the
trailing '.' on an integer as part of the integer. So '3.foo()' will now
be parsed as '3' '.' 'foo()' and not '3.' 'foo()' -- which was what
prevented parsing of method invocations on integers. To keep the change
simple, the parser will no longer handle real numbers of the form
'3.e4'. From now on they must include the extra 0 (i.e., '3.0e4').
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14246|https://github.com/spring-projects/spring-framework/issues/14246]. ,,,,,,,,,,,,,,,,,,,,,
Initialize ServletContext and ServletConfig property sources eagerly in FrameworkServlet,SPR-9610,44596,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,david_syer,david_syer,20/Jul/12 8:09 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/Nov/12 5:09 AM,3.1.2,,,,,,,3.2 RC1,,,,,Web,,,,0,repro-project-submitted,,,,,,,"ServletContext and ServletConfig properties are added too late in FrameworkServlet initializer.  I wanted to use the Environment in an ApplicationContextInitializer including the property sources from web.xml (as advertised in StandardServletEnvironment), but StandardServletEnvironment isn't initialized until the refresh starts.  The workaround is easy - just call

{code}
WebApplicationContextUtils.initServletPropertySources(
    applicationContext.getEnvironment().getPropertySources(),
    servletContext, applicationContext.getServletConfig()
);
{code}

in the ApplicationContextInitializer, for example: https://github.com/cloudfoundry/uaa/blob/master/common/src/main/java/org/cloudfoundry/identity/uaa/config/YamlServletProfileInitializer.java#L58
",,;02/Nov/12 5:16 AM;cbeams;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-11-02 05:09:15.123,31626,true,issuemaster(issuemaster),,,,0|i05qf3:,33486,31326,,,,,,"02/Nov/12 5:09 AM;cbeams;Thanks, Dave.

{quote}
{noformat}
commit 1070e4d5c1daec820f12ea39a4d665106d1e9539
Author: Chris Beams <cbeams@vmware.com>
Commit: Chris Beams <cbeams@vmware.com>

    Initialize FrameworkServlet property sources eagerly
    
    Prior to this change,
    FrameworkServlet#configureAndRefreshWebApplicationContext called
     #postProcessWebApplicationContext(wac) and #applyInitializers(wac)
    prior to #refresh, but because servlet-based property source stubs were
    not replaced until #refresh, any post-processing or initialization
    routines could not benefit from accessing the Environment to retrieve
    properties from the ServletContext or ServletConfig.
    
    The workaround to this problem is detailed in SPR-9610 - the user simply
    needed to call WebApplicationContextUtils#initServletPropertySources
    manually within their ApplicationContextInitializer (or overridden
     #postProcessWebApplicationContext method)
    
    This commit ensures that
    FrameworkServlet#configureAndRefreshWebApplicationContext calls
    WebApplicationContextUtils#initServletPropertySources eagerly, prior to
    invoking #postProcessWebApplicationContext and #applyInitializers.
    Related Javadoc has also been updated throughout to clarify the behavior
    of #initServletPropertySources, when it can be called and what the
    effects are, etc.
    
    Note also that a reproduction issue was added to demonstrate the problem
    and verify its resolution [1].
    
    [1]: https://github.com/SpringSource/spring-framework-issues/tree/master/SPR-9610
    
    Issue: SPR-9610
{noformat}
{quote}
","02/Nov/12 5:12 AM;cbeams;This issue solves the problem for {{FrameworkServlet}}, but note that SPR-9439 solved the problem for {{ContextLoader}}.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14244|https://github.com/spring-projects/spring-framework/issues/14244]. ,,,,,,,,,,,,,,,,,,,,,
Support TransactionManagementConfigurer for determining the transaction manager in the TestContext framework,SPR-9604,44569,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,blackbeltdev,blackbeltdev,18/Jul/12 8:38 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,27/Jul/12 4:28 PM,3.1.2,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Status Quo

Since Spring 2.5, the _Spring TestContext Framework_ -- specifically the   {{TransactionalTestExecutionListener}} -- looks up the {{PlatformTransactionManager}} by a bean named _""transactionManager""_ by default. The exact name of the bean can be overridden via {{@TransactionConfiguration}} or {{@Transactional}}; however, the bean will always be looked up _by name_.

The {{TransactionManagementConfigurer}} interface that was introduced in Spring 3.1 provides a programmatic approach to specifying the {{PlatformTransactionManager}} bean to be used for annotation-driven transaction management, and that bean is not required to be named _""transactionManager""_.

However, as of Spring 3.1.2, using the {{TransactionManagementConfigurer}} on a {{@Configuration}} class has no effect on how the TestContext framework looks up the transaction manager. Consequently, if an explicit name or qualifier has not been specified, the bean must be named ""_transactionManager_"" in order for a transactional integration test to work.

h4. Deliverables

# (/) Refactor the implementation of {{beforeTestMethod()}} in {{TransactionalTestExecutionListener}} so that it honors the presence of a {{TransactionManagementConfigurer}} bean if an explicit name or qualifier has not been specified.
# (/) Update the Javadoc for {{@TransactionalTestExecutionListener}}.
# (/) Update the Javadoc for {{@TransactionConfiguration}}.
# (/) Update the _Testing_ chapter of the Reference Manual accordingly.
# (/) Update the changelog accordingly.",,,,,,,,,,,0,9000,,,0,9000,,SPR-9645,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-07-19 09:30:04.586,31599,true,issuemaster(issuemaster),,,,0|i05q93:,33459,31299,,,,,,"19/Jul/12 9:30 AM;sbrannen;Hi Kirk,

I'm assuming this is simply a configuration issue.

Have you tried annotating your test class as follows?

{code}
@TransactionConfiguration(transactionManager = ""myTxMgr"")
public class MyTests extends AbstractTransactionalTestNGSpringContextTests {
    // ...
}
{code}

Alternatively, you can annotate individual test methods with {{@Transactional(""myTxMgr"")}}.

Please give these approaches a try and let us know if you are still having issues.

Thanks,

Sam","23/Jul/12 10:00 AM;blackbeltdev;
That's kind of beside the point I was trying to make. I agree that the above would work but with the introduction of Java Config in Spring configuration in 3.1 IMHO the principle of least surprise should dictate that TransactionManagementConfigurer should be supported in test classes as well as through the old @TransactionConfiguration test specific configuration to make the API more consistent.

I thought maybe that this support was simply overlooked so that's why I created this bug report.
","24/Jul/12 3:12 PM;sbrannen;Hi Kirk,

Out of curiosity, how many instances of {{PlatformTransactionManager}} do you have defined as beans in the {{ApplicationContext}} that you're loading in your integration tests?

{quote}
TransactionManagementConfigurer should be supported in test classes as well as through the old @TransactionConfiguration test specific configuration to make the API more consistent.
{quote}

Are you saying that you want to declare {{TransactionManagementConfigurer}} on a test class instead of {{@TransactionConfiguration}}?

If not, can you please elaborate with a description of your use case and some code and configuration snippets?

Thanks,

Sam




","26/Jul/12 1:01 PM;blackbeltdev;No in my example I had a single PlatformTransactionManager with a single @Configuration Java based configuration that I was using for both integration testing and from within a servlet application. I just happened to not to call it ""transactionManager"" but it would work from a servlet based application just fine if I used TransactionManagementConfigurer marker interface.

I was observing that Spring test framework doesn't even attempt to use this information which IMO would make it more consistent if it did. Naming it ""transactionManager"" or using the @TransactionConfiguration annotation AFAIK are the only options. My opinion is that it should support the TransactionManagementConfigurer mechanism for test support in the same manner as it does for ""normal"" Spring usage.

{code}
@Configuration
@Profile(""dev"")
public class EmbeddedDataConfig implements TransactionManagementConfigurer {

	@Override
	public PlatformTransactionManager annotationDrivenTransactionManager() {
		return transactionManager();
	}

	@Bean
	public DataSource dataSource() {
		
		DataSource dataSource = new EmbeddedDatabaseBuilder()
				.setType(EmbeddedDatabaseType.H2)
				.addScript(""classpath:/demo/config/sql/schema.sql"")
				.build();
		DatabaseHelper.populate(dataSource);
		
		return dataSource;
	}

	@Bean
	public PlatformTransactionManager transactionManager() {
		return new DataSourceTransactionManager(dataSource());
	}

}

{code}
","26/Jul/12 4:00 PM;sbrannen;{quote}Naming it ""transactionManager"" or using the @TransactionConfiguration annotation AFAIK are the only options.{quote}

As I mentioned previously, another option is to annotate your test class or individual test methods with {{@Transactional(""myTxMgr"")}} (assuming your transaction manager bean is named ""myTxMgr"").

Sam",27/Jul/12 1:35 AM;sbrannen;Reworked this issue's _Summary_ and _Description_ to reflect the true intent of the proposal based on feedback from the original reporter.,27/Jul/12 1:38 AM;sbrannen;Please note that this issue inspired and now depends on SPR-9645.,"27/Jul/12 8:38 AM;blackbeltdev;(SNIP)

Sorry I didn't re-read the summary. I think we are on the same page now :)

Just to be super clear...

We agree that this works today (Groovy code BTW):

{code}
@ContextConfiguration
@TransactionConfiguration(transactionManager=""myTxManager"")
public class DatabaseHelperTest extends AbstractTransactionalTestNGSpringContextTests {

	@Configuration
	public static class Config  {
		
		@Bean
		DataSource dataSource() {
			def dataSource = new SingleConnectionDataSource(""jdbc:h2:~/test"", true)
			return dataSource
		}
		
		@Bean
		PlatformTransactionManager myTxManager() {
			return new DataSourceTransactionManager(dataSource())
		}
	}
...

}
{code}

What I'm suggesting is that this should also work, i.e. @TransactionConfiguration should not be required as that same information is easily determined by TransactionManagementConfigurer already.

{code}
@ContextConfiguration
public class DatabaseHelperTest extends AbstractTransactionalTestNGSpringContextTests {

	@Configuration
	public static class Config implements TransactionManagementConfigurer {
		
		@Bean
		DataSource dataSource() {
			def dataSource = new SingleConnectionDataSource(""jdbc:h2:~/test"", true)
			return dataSource
		}
		
		@Bean
		PlatformTransactionManager myTxManager() {
			return new DataSourceTransactionManager(dataSource())
		}

		@Override
		public PlatformTransactionManager annotationDrivenTransactionManager() {
			return myTxManager()
		}
	}
...
}
{code}

As it stands today the second version does not work and will fail. I think @TransactionConfiguration still has value as the annotation with the highest precedence but it would be nice to be able to leverage the 3.1 API with the test framework is all I'm saying.
","27/Jul/12 4:28 PM;sbrannen;Completed as described in the following comments from [GitHub commit 2b7a629068|https://github.com/SpringSource/spring-framework/commit/2b7a62906891b7a936412894f9ab78cdb69dc378].

{quote}
*Support TransactionManagementConfigurer in the TCF*

Currently the Spring TestContext Framework looks up a
PlatformTransactionManager bean named ""transactionManager"". The exact
name of the bean can be overridden via @TransactionConfiguration or
@Transactional; however, the bean will always be looked up 'by name'.

The TransactionManagementConfigurer interface that was introduced in
Spring 3.1 provides a programmatic approach to specifying the
PlatformTransactionManager bean to be used for annotation-driven
transaction management, and that bean is not required to be named
""transactionManager"". However, as of Spring 3.1.2, using the
TransactionManagementConfigurer on a @Configuration class has no effect
on how the TestContext framework looks up the transaction manager.
Consequently, if an explicit name or qualifier has not been specified,
the bean must be named ""transactionManager"" in order for a transactional
integration test to work.

This commit addresses this issue by refactoring the
TransactionalTestExecutionListener so that it looks up and delegates to 
a single TransactionManagementConfigurer as part of the algorithm for
determining the transaction manager.
{quote}",08/Aug/12 8:03 AM;blackbeltdev;Awesome. Thanks guys!,14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14238|https://github.com/spring-projects/spring-framework/issues/14238]. ,,,,,,,,,,,,,
MockHttpServletResponse's sendRedirect() method does not set the status code,SPR-9594,44500,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,rstoya05-aop,rstoya05-aop,13/Jul/12 8:46 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,16/Jul/12 9:53 AM,3.1.2,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Overview

Currently {{MockHttpServletResponse.sendRedirect()}} does not set the HTTP response status, but it should. 

The Javadoc for {{HttpServletResponse.sendRedirect}}:

{quote}Sends a temporary redirect response to the client using the specified redirect location URL.{quote}

The servlet spec says:

{quote}The sendRedirect method will set the appropriate headers and content body to redirect the client to a different URL.{quote}

There is no specific status code mentioned, but ""temporary redirect"" implies 302, a similar comment exists in {{RedirectView.sendRedirect()}}, and it is what Tomcat returns.

[Originally reported|https://github.com/SpringSource/spring-test-mvc/pull/47] in spring-test-mvc by Rob Winch.

h4. Deliverables

# (/) Set the HTTP response status code in {{MockHttpServletResponse.sendRedirect()}} to {{302}}
# (/) Set the {{Location}} HTTP response header in {{MockHttpServletResponse.sendRedirect()}} to the supplied URL",,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-07-13 08:52:46.143,31523,true,issuemaster(issuemaster),,,,0|i05ps7:,33383,31223,,,,,,13/Jul/12 8:52 AM;rwinch;We should probably also automatically add the Location header.,13/Jul/12 2:49 PM;rwinch;Pull request https://github.com/SpringSource/spring-framework/pull/108,"16/Jul/12 9:53 AM;sbrannen;This issue has been resolved in [commit 35a423a858|https://github.com/SpringSource/spring-framework/commit/35a423a858c8578500858815cfe35b23fcdf5bb5] thanks to Rob Winch's contribution:

{quote}
*Fix minor issue in MockHttpServletRequest*

Previously MockHttpServletRequest#sendRedirect did not set the HTTP status
or the Location header. This does not conform to the HttpServletRequest
interface.

MockHttpServletRequest will now:

  - Set the HTTP status to 302 on sendRedirect
  - Set the Location header on sendRedirect
  - Ensure the Location header and getRedirectedUrl are kept in synch

Issue: SPR-9594
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14228|https://github.com/spring-projects/spring-framework/issues/14228]. ,,,,,,,,,,,,,,,,,,,,
Improve getNamedDispatcher(String) method of MockServletContext,SPR-9587,44477,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,rstoya05-aop,rstoya05-aop,12/Jul/12 8:55 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,25/Jul/12 6:16 PM,3.1.2,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"Currently the {{getNamedDispatcher(String)}} method of {{MockServletContext}} always returns {{null}}. However, it could return a {{MockRequestDispatcher}} for the name ""default"", i.e. one would always expect a default {{Servlet}} to be present. This is specifically important for web application tests that involve the {{DefaultServletHttpRequestHandler}}, which attempts to forward to the default {{Servlet}}.

Additionally, {{MockServletContext}} could provide a method for registering named {{RequestDispatcher}} instances.",,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-07-25 18:16:09.967,31488,true,issuemaster(issuemaster),,,,0|i05plr:,33354,31188,,,,,,"25/Jul/12 6:16 PM;sbrannen;This work has been completed as described in the following comments from [GitHub commit 37dc211f588eeb296a60c8d9f234c8341506ad49|https://github.com/SpringSource/spring-framework/commit/37dc211f588eeb296a60c8d9f234c8341506ad49].

{quote}
*Support named dispatchers in MockServletContext*

Currently the {{getNamedDispatcher(String)}} method of {{MockServletContext}} always returns null. This poses a problem in certain testing scenarios since one would always expect at least a default {{Servlet}} to be present. This is specifically important for web application tests that involve the {{DefaultServletHttpRequestHandler}} which attempts to forward to the default {{Servlet}} after retrieving it by name. Furthermore, there is no way to register a named {{RequestDispatcher}} with the {{MockServletContext}}.

This commit addresses these issues by introducing the following in {{MockServletContext}}.

- a new {{defaultServletName}} property for configuring the name of the default {{Servlet}}, which defaults to _""default""_
- named {{RequestDispatchers}} can be registered and unregistered
- a {{MockRequestDispatcher}} is registered for the _""default""_ {{Servlet}} automatically in the constructor
- when the {{defaultServletName}} property is set to a new value the current default {{RequestDispatcher}} is unregistered and replaced with a {{MockRequestDispatcher}} for the new {{defaultServletName}}
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14221|https://github.com/spring-projects/spring-framework/issues/14221]. ,,,,,,,,,,,,,,,,,,,,,,
ReflectionTestUtils.setField() should not call toString() on the target,SPR-9571,44358,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,barooo,barooo,06/Jul/12 2:02 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,10/Aug/12 7:46 AM,3.1.1,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"{{ReflectionTestUtils.setField()}} is implicitly calling {{toString()}} on the target when arguments for a call to {{Assert.notNull()}} are built, which can have side effects, specifically (line 107):

{code}
Field field = ReflectionUtils.findField(target.getClass(), name, type);
Assert.notNull(field, ""Could not find field ["" + name + ""] on target ["" + target + ""]"");
{code}

For example, a lot of our database models have a {{toString()}} which dumps properties, which can try and hit the database. If the connection is null a new one is created.  I am unable to inject a mock connection into the model with {{setField()}} from 3.1+ because during injection a call to {{toString()}} happens which will trigger initialization and try and use a real connection instead of using my mock.

In 3.0.6, the {{toString()}} was wrapped in a null check so it only happened on error instead of when the arguments to {{Assert.notNull()}} are built.

You could argue that {{toString()}} shouldn't have side effects, but {{ReflectionTestUtils}} is often used on questionable, legacy code to make it testable.

I've reverted to spring-test 3.0.6 in the meantime.",,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-10 06:53:42.905,31376,true,issuemaster(issuemaster),,,,0|i05on3:,33198,31076,,,,,,"10/Aug/12 6:53 AM;sbrannen;Hi John,

Yes, I would definitely argue that invoking {{toString()}} should _never_ have side effects, especially not related to external systems (e.g., databases).

However, I also understand your argument regarding questionable legacy code that is out of your control. So I think we can do something about this.

\- Sam","10/Aug/12 7:46 AM;sbrannen;Completed as described in the message for [GitHub commit df961a938e1f0811ac1cbd679f35de9e4d0eb8c6|https://github.com/SpringSource/spring-framework/commit/df961a938e1f0811ac1cbd679f35de9e4d0eb8c6].

{quote}
*RTU.setField() shouldn't call toString() on target*

ReflectionTestUtils.setField() implicitly calls toString() on the target
object when arguments for a call to Assert.notNull() are built. This can
have undesirable side effects, for example if the toString() invocation
results in a thrown exception or access to an external system (e.g., a
database).

This commit addresses this issue by inlining the Assert.notNull() code,
thereby avoiding accidental invocation of toString() on a non-null
target.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14205|https://github.com/spring-projects/spring-framework/issues/14205]. ,,,,,,,,,,,,,,,,,,,,,
Refactor PropertySourcesPropertyResolver#containsString for consistency,SPR-9529,43968,,Refactoring,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,mauromol,mauromol,21/Jun/12 2:34 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,21/Jun/12 3:59 AM,3.1.1,3.1 GA,,,,,,3.2 M2,,,,,Core:Environment,,,,0,,,,,,,,"To ensure maximum performance and consistency, shouldn't {{org.springframework.core.env.PropertySourcesPropertyResolver.containsProperty(String)}} be implemented as such?

{code}
public boolean containsProperty(String key) {
  for (PropertySource<?> propertySource : this.propertySources) {
    if (propertySource.containsProperty(key)) {
      return true;
    }
  }
  return false;
}
{code}",,;21/Jun/12 4:00 AM;cbeams;1800,,,,,,,,,,1800,,,,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-06-21 03:59:26.183,31269,true,issuemaster(issuemaster),,,,0|i05nyv:,33089,30969,,,,,,"21/Jun/12 3:59 AM;cbeams;Good call, Mauro.  This is complete.
{quote}
{noformat}

commit 35055fd866baadefeec2e2f47d1d94454763b452
Author: Chris Beams <cbeams@vmware.com>
Date:   Thu Jun 21 12:28:12 2012 +0200

    Refactor PropertyResolver impl for consistency
    
    PropertySourcesPropertyResolver#containsProperty now
    calls #containsProperty on each underlying PropertySource instead of
    calling #getProperty and checking for null.
    
    Issue: SPR-9529
{noformat}
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14163|https://github.com/spring-projects/spring-framework/issues/14163]. ,,,,,,,,,,,,,,,,,,,,,,
Infer return type of parameterized static factory methods,SPR-9493,43822,,New Feature,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,sbrannen,sbrannen,11/Jun/12 11:52 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,24/Mar/13 9:35 AM,2.5 final,3.0 GA,3.1 GA,,,,,3.2 M2,,,,,Core:DI,Test,,,1,autowiring,depedency,EasyMock,factory-method,injection,mock,Mockito,"h4. Overview

Spring users often run into issues with _autowiring by type_ for beans that are defined in XML configuration using a {{factory-method}} that is parameterized.

Although this situation arrises frequently when using dynamic mocks to replace production-specific beans in tests, this situation is not particular to tests or mocks. One can also have parameterized factory methods for generating proxies or dynamic implementations of components in production code.

Specifically, if a {{factory-method}} is parameterized (i.e., the method itself, not the enclosing {{class}} or {{interface}}), Spring always _predicts_ the return type to be {{Object}}, even if the type can be explicitly inferred from the method signature and supplied arguments (which are available in the bean definition).

Note, however, that the order in which beans are defined plays a role here. If the bean created by the factory is instantiated by the Spring container before the _autowired_ dependent, then there is no issue, since the concrete type of the factory-created bean is already known. 

Problems arise when the ordering is reversed: if the _autowired_ dependent bean is created before the factory-created bean is created, then the concrete type of the factory-created bean is not yet known (i.e., it will be predicted to be simply {{Object}}). Consequently, autowiring by type will fail. Similarly, a call to {{getBeansOfType(<type of factory-created bean>\)}} on the {{BeanFactory}} or {{ApplicationContext}} will also fail to return the factory-created bean if it has not yet been created.

----
h4. Dynamic Mock Example

Consider a parameterized {{factory-method}} declaration such as EasyMock's {{createMock()}} method which has the following signature.

{code}public static <T> T createMock(Class<T> toMock){code}

Ideally Spring should be able to predict the type {{T}} before the factory method is invoked. However, as of Spring 3.1, the predicted type is unfortunately {{Object}} instead of {{T}}. For details, see the implementation of the {{getTypeForFactoryMethod()}} method in {{AbstractAutowireCapableBeanFactory}}. In short, {{getTypeForFactoryMethod()}} does not infer the return type based on the parameterized type supplied as an argument to the factory method (i.e., {{Class<T> toMock}} in the EasyMock example). In such cases the return type is simply predicted to be {{Object}}.

h5. Test Case

The following test case can be used to verify both the current and the proposed behavior.

With the current behavior the test passes _as is_.

If you comment out the three _getBean()_ lines, the test will then fail. With the changes proposed by this issue, the test would no longer fail with those three lines removed.

{code}
@Test
public void parameterizedFactoryMethod() {
	RootBeanDefinition rbd = new RootBeanDefinition(EasyMock.class);
	rbd.setFactoryMethodName(""createMock"");
	rbd.getConstructorArgumentValues().addGenericArgumentValue(Runnable.class);

	DefaultListableBeanFactory bf = new DefaultListableBeanFactory();
	bf.registerBeanDefinition(""easyMock"", rbd);

	// NOTE: commenting out the following three lines will prevent the
	// subsequent call to getBeansOfType() from finding the Runnable mock.
	Object mock = bf.getBean(""easyMock"");
	assertNotNull(mock);
	assertTrue(mock instanceof Runnable);

	Map<String, Runnable> beans = bf.getBeansOfType(Runnable.class);
	assertEquals(1, beans.size());
}
{code}

----
h4. Alternatives

In testing scenarios, most developers end up implementing their own {{FactoryBean}} that circumvents the issues outlined above by explicitly returning the mock object's type in {{FactoryBean.getObjectType()}} (e.g., in a [{{MockitoFactoryBean}}|http://www.jayway.com/2011/11/30/spring-integration-tests-part-i-creating-mock-objects/], [{{EasyMockFactoryBean}}|https://jira.springsource.org/browse/SPR-9130], etc.). There is also an open source project called [Springockito|https://bitbucket.org/kubek2k/springockito/] that addresses this issue for Spring and Mockito.

These are viable work-arounds in testing scenarios when you are explicitly overriding a bean definition with a dynamic mock, because in that case your test configuration is decidedly only for tests.

However, these work-arounds do not address the general need for reliable autowiring by type for beans created by a parameterized {{factory-method}}.

----
h4. Analysis

If a factory method returns {{T}} and an argument to the factory method is either parameterized with {{Class<T>}} or of type {{T}}, then we should have enough information to infer the exact return type from the method metadata and bean definition.

Returning to the EasyMock example, if we pass {{java.lang.Runnable}} to the {{createMock()}} method, then in the {{getTypeForFactoryMethod()}} method in {{AbstractAutowireCapableBeanFactory}} we actually have access to all of the following information:

|| Description                               || Value ||
| *Factory Class*                            | {{org.easymock.EasyMock}} |
| *Factory Method*                           | {{createMock}} |
| *Factory Method Generic Signature*         | {{public static <T> T org.easymock.EasyMock.createMock(java.lang.Class<T>\)}} |
| *Factory Method Type Parameters*           | {{\{T\}}} |
| *Factory Method Generic Return Type*       | {{T}} |
| *Factory Method Generic Parameter Types*   | {{\{java.lang.Class<T>\}}} |
| *Bean Definition Generic Constructor Args* | {{\[java.lang.Runnable\]}} |

With that information we should be able to reliably predict the return type to be {{java.lang.Runnable}}.

----
h4. Deliverables

# (/) Add a new method to {{GenericTypeResolver}} that can accurately predict the target return type of a parameterized factory method in most use cases.
# (/) Modify the {{getTypeForFactoryMethod()}} method in {{AbstractAutowireCapableBeanFactory}} so that it properly delegates to the method introduced in the previous deliverable, falling back to the current algorithm if the factory method is not parameterized.

----",,"Analysis, research, discussions, implementation, testing, documentation, etc.;19/Jun/12 9:38 AM;sbrannen;21600",,,,,,,,,0,25200,,,0,25200,,,,,,,,SPR-9130,,,,,SPR-8769,,,,,,,,,,,,,,9936000,,,,,2013-03-20 06:24:43.457,31123,true,issuemaster(issuemaster),,,,0|i05n27:,32942,30823,,,,,,19/Jun/12 3:59 AM;sbrannen;Latest work on this topic: [GitHub|https://github.com/sbrannen/spring-framework/commit/3e4a918b2068c301cf9686013cca31d2af26039b].,19/Jun/12 7:02 AM;sbrannen;Pull request: https://github.com/SpringSource/spring-framework/pull/97,"19/Jun/12 9:36 AM;sbrannen;This work has been completed as described in the following comments from the corresponding [GitHub commit|https://github.com/SpringSource/spring-framework/commit/c461455c7cd795f1adb2aa2c7755c804a78d0c99].

{panel}
*Infer return type of parametrized factory methods*

Currently, if a factory method is parameterized and the corresponding
variable types are declared on the method itself instead of on the
enclosing class or interface, Spring always predicts the return type to
be Object, even if the return type can be explicitly inferred from the
method signature and supplied arguments (which are available in the bean
definition).

This commit introduces a new resolveParameterizedReturnType() method in
GenericTypeResolver that attempts to infer the concrete type for the
generic return type of a given parameterized method, falling back to the
standard return type if necessary. Furthermore,
AbstractAutowireCapableBeanFactory now delegates to
resolveParameterizedReturnType() when predicting the return type for
factory methods.

resolveParameterizedReturnType() is capable of inferring the concrete
type for return type T for method signatures similar to the following.
Such methods may potentially be static. Also, the formal argument list
for such methods is not limited to a single argument.

 - public <T> T foo(Class<T> clazz)
 - public <T> T foo(Object obj, Class<T> clazz)
 - public <V, T> T foo(V obj, Class<T> clazz)
 - public <T> T foo(T obj)

Issue: SPR-9493
{panel}","05/Aug/12 10:11 AM;sbrannen;FYI: {{resolveParameterizedReturnType()}} in {{GenericTypeResolver}} has been renamed to {{resolveReturnTypeForGenericMethod()}} in order to better reflect applicable use cases.
","20/Mar/13 6:24 AM;dma_k;Can somebody confirm this is working for the given scenario:

XML:
{code}
<bean name=""mocksControl"" class=""org.easymock.EasyMock"" factory-method=""createStrictControl"" />

<bean id=""transactionOperations""
	factory-bean=""mocksControl""
	factory-method=""createMock""
	p:class=""org.springframework.transaction.support.TransactionOperations"" />

<bean id=""jdbcOperations""
	factory-bean=""mocksControl""
	factory-method=""createMock""
	p:class=""org.springframework.jdbc.core.JdbcOperations"" />
{code}

Java:
{code}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(""classpath:/my-context.xml"")
public class MyTest {

	@Autowired
	private TransactionOperations		transactionOperations;

	@Autowired
	private IMocksControl			mocksControl;
...
}
{code}

Trace:
{code}
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.XXX.transactionOperations; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.transaction.support.TransactionOperations] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:285)
	... 41 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.transaction.support.TransactionOperations] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:986)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:856)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:768)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:486)
	... 43 more

{code}

The problem is that {{GenericTypeResolver.resolveReturnTypeForGenericMethod()}} is passed {{args}} which are always empty for bean-based factory as constructed from {{mbd.getConstructorArgumentValues().getGenericArgumentValues()}}, but one need to take into account {{mbd.getPropertyValues().getPropertyValues()}} as well.

Spring 3.2.2.","24/Mar/13 9:35 AM;sbrannen;[~dma_k], this issue was concerned with static factory methods (i.e., against factory classes) and resolved that issue appropriately.

Thus, please open a new issue requesting support for parameterized factory methods against factory beans.

Thanks,

Sam",24/Mar/13 9:35 AM;sbrannen;Setting back to resolved.,"24/Mar/13 12:51 PM;dma_k;Sam, I have created a separate issue SPR-10411.

If I may add something:
* The description of this very issue does not mention that only static factory methods are supported. Fix for static methods is only half of the story.
* The issue SPR-9130 is marked as fixed with this very issue, however its not the case. SPR-9130 holds exactly the same scenario I have played with, which could have been checked before this issue was marked as resolved. Now correct relation is SPR-9130 -> SPR-10411.","08/Jun/13 1:08 PM;sbrannen;Dmitry, you're totally right regarding SPR-9130, and I've updated the links between all of these related issues accordingly.

Regarding this issue's original _Description_, it in fact only discussed static factory methods; however, the _Summary_ was generic. So I changed the _Summary_ to explicitly refer to {{static}} factory methods in order to avoid any further confusion.

Also, thanks for creating SPR-10411!

Cheers,

Sam",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14127|https://github.com/spring-projects/spring-framework/issues/14127]. ,,,,,,,,,,,,,,
Introduce MockEnvironment in the spring-test module,SPR-9492,43818,,New Feature,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,sbrannen,sbrannen,11/Jun/12 10:56 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,28/Jul/12 11:29 AM,3.1 GA,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Status Quo

For legacy reasons, a {{MockEnvironment}} implementation already exists in multiple places within Spring's test suite. Furthermore, it is not available to the general public.

h4. Goal

{{MockEnvironment}} can be used as a general purpose _stub_ within developer tests (i.e., not just within Spring's own test suite). As such, it should be promoted to a first-class citizen in the {{spring-test}} module, alongside the existing {{MockPropertySource}}.

Doing so would eliminate at least the copy of {{MockEnvironment}} in the base {{spring}} module. It would also solve the Javadoc warning that {{MockEnvironment}} is not visible from {{MockPropertySource}} in the {{spring-test}} module.

h4. Deliverables

# (/) Move {{MockEnvironment}} to the {{spring-test}} module.
# (/) Delete all other occurrences of {{MockEnvironment}}, where possible.
# (x) Clean up the Gradle build if necessary.
#- deemed unnecessary
# (/) Document the existence of {{MockEnvironment}} and {{MockPropertySource}} in the testing chapter of the reference manual.",,"analysis, development, testing, and documentation;30/Jul/12 9:02 AM;sbrannen;10800",,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:33.481,31119,true,issuemaster(issuemaster),,,,0|i05n1b:,32938,30819,,,,,,28/Jul/12 11:28 AM;sbrannen;Submitted [pull request #111|https://github.com/SpringSource/spring-framework/pull/111].,"28/Jul/12 11:29 AM;sbrannen;Merged pull request:

{quote}
*Introduce MockEnvironment in the spring-test module*

For legacy reasons, a MockEnvironment implementation already exists in multiple places within Spring's test suite; however, it is not available to the general public.

This commit promotes MockEnvironment to a first-class citizen in the spring-test module, alongside the existing MockPropertySource.

In addition, the following house cleaning has been performed.

 - deleted MockPropertySource from the spring-expression module
 - deleted MockEnvironment from the ""spring"" integration testing module
 - updated test copies of MockPropertySource and MockEnvironment
 - documented MockEnvironment and MockPropertySource in the testing
   chapter of the reference manual
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14126|https://github.com/spring-projects/spring-framework/issues/14126]. ,,,,,,,,,,,,,,,,,,,,,
Document correct data sql file name in default scripts of embedded database in reference manual,SPR-9467,43727,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,simonwg,simonwg,05/Jun/12 4:06 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,19/Jun/12 11:52 AM,3.1.1,,,,,,,3.2 M2,,,,,[Documentation],Data:JDBC,Test,,0,,,,,,,,"In Spring Reference Documentation Section 13.8.8 [Testing data access logic with an embedded database|http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/htmlsingle/spring-framework-reference.html#jdbc-embedded-database-dao-testing], the default data script name is {{""test-data.sql""}}; however, from the source code of {{EmbeddedDatabaseBuilder.addDefaultScripts()}} the data script name should be called {{""data.sql""}} instead.",,;19/Jun/12 3:48 PM;sbrannen;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-06-19 11:52:08.77,31029,true,issuemaster(issuemaster),,,,0|i05mhr:,32850,30729,,,,,,"19/Jun/12 11:52 AM;sbrannen;This work was completed in the following commit on GitHub.

https://github.com/SpringSource/spring-framework/commit/027e49c58ae47274eb14c0591663f6d8ad82095a

{panel}
*Document default scripts for embedded databases*

The reference manual currently documents the wrong file name for the
default data SQL script used by EmbeddedDatabaseBuilder. In addition,
the testing chapter of the reference manual does not link to the testing
section of the JDBC chapter.

 - Updated the ""Testing data access logic with an embedded database""
   section of the reference manual appropriately.
 - Added a new paragraph to the ""JDBC Testing Support"" section of the
   testing chapter which cross references the ""Testing data access logic
   with an embedded database"" section.

Issue: SPR-9467
{panel}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14102|https://github.com/spring-projects/spring-framework/issues/14102]. ,,,,,,,,,,,,,,,,,,,,,,
ApplicationContext environment inheritance may causes child context environment property sources to be lost,SPR-9444,43578,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,cbeams,cbeams,26/May/12 4:12 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,26/May/12 4:51 AM,,,,,,,,3.2 M1,,,,,,,,,0,,,,,,,,,,;27/May/12 2:50 AM;cbeams;21600,,,,,,,,,,21600,,,,21600,,,,,,,,SPR-9761,SPR-9894,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:32.037,30921,true,issuemaster(issuemaster),,,,0|i05ltr:,32742,30621,,,,,,"26/May/12 4:51 AM;cbeams;{quote}
{noformat}
commit 9fcfd7e827323a0a47161779ff7fcad224b473d4
Author: Chris Beams <cbeams@vmware.com>
Date:   Sat May 26 14:09:21 2012 +0300

    Introduce ConfigurableEnvironment#merge
    
    Prior to this change, AbstractApplicationContext#setParent replaced the
    child context's Environment with the parent's Environment if available.
    This has the negative effect of potentially changing the type of the
    child context's Environment, and in any case causes property sources
    added directly against the child environment to be ignored. This
    situation could easily occur if a WebApplicationContext child had a
    non-web ApplicationContext set as its parent. In this case the parent
    Environment type would (likely) be StandardEnvironment, while the child
    Environment type would (likely) be StandardServletEnvironment. By
    directly inheriting the parent environment, critical property sources
    such as ServletContextPropertySource are lost entirely.
    
    This commit introduces the concept of merging an environment through
    the new ConfigurableEnvironment#merge method. Instead of replacing the
    child's environment with the parent's,
    AbstractApplicationContext#setParent now merges property sources as
    well as active and default profile names from the parent into the
    child. In this way, distinct environment objects are maintained with
    specific types and property sources preserved. See #merge Javadoc for
    additional details.
    
    Issue: SPR-9444, SPR-9439
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14080|https://github.com/spring-projects/spring-framework/issues/14080]. ,,,,,,,,,,,,,,,,,,,,,,
Fix package cycle established by @EnableSpringConfigured,SPR-9441,43565,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,cbeams,cbeams,cbeams,25/May/12 1:17 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,26/May/12 4:52 AM,,,,,,,,3.2 M1,,,,,,,,,0,migration-3.2,,,,,,,"{{@EnableSpringConfigured}} and its underlying {{SpringConfiguredConfiguration}} {{@Configuration}} class accidentally established a package cycle between {{beans.factory.aspectj}} and {{context.annotation}} due to the {{SpringConfiguredConfiguration}}'s dependency on annotations such as {{@Configuration}}, {{@Bean}} and {{@Role}}.",,;27/May/12 2:52 AM;cbeams;14400,,,,,,,,,,14400,,,,14400,,,,,,,,SPR-9811,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:31.887,30908,true,issuemaster(issuemaster),,,,0|i05lqv:,32729,30608,,,,,,"26/May/12 4:52 AM;cbeams;{quote}
{noformat}
commit 5327a7a37d25b67ee2ae7d1ead2a3db6847767c0
Author: Chris Beams <cbeams@vmware.com>
Date:   Fri May 25 17:30:45 2012 +0300

    Fix package cycle in @EnableSpringConfigured
    
    @EnableSpringConfigured and its @Import'ed
    SpringConfiguredConfiguration @Configuration class inadvertently
    established a package cycle between beans.factory.aspectj and
    context.annotation due to SpringConfiguredConfiguration's
    dependency on annotations such as @Configuration, @Bean and @Role.
    
    This commit fixes this architecture bug by moving
    @EnableSpringConfigured and SpringConfiguredConfiguration from the
    beans.factory.aspectj package to the context.annotation package where
    they belong.
    
    This change is assumed to be very low impact as @EnableSpringConfigured
    was introduced in 3.1.0 and relocation is happening as quickly as
    possible in 3.1.2. @EnableSpringConfigured is assumed to be infrequently
    used at this point, and for those that are the migration path
    is straightforward. When upgrading from Spring 3.1.0 or 3.1.1, update
    import statements in any affected @Configuration classes to reflect the
    new packaging.
    
    Issue: SPR-9441
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14077|https://github.com/spring-projects/spring-framework/issues/14077]. ,,,,,,,,,,,,,,,,,,,,,,
Eliminate package cycle between ContextLoader and WebApplicationContextUtils,SPR-9439,43563,,Refactoring,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,cbeams,cbeams,25/May/12 1:02 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,26/May/12 4:50 AM,,,,,,,,3.2 M1,,,,,,,,,0,,,,,,,,"Changes introduced in Spring 3.1 for {{Environment}} support inadvertently established a cyclic dependency between {{org.springframework.web.context}} and {{org.springframework.web.context.support}}, specifically through {{ContextLoader}} invocation of {{WebApplicationContextUtils#initServletPropertySources}}.",,;27/May/12 2:48 AM;cbeams;36000,,,,,,,,,,36000,,,,36000,,SPR-9444,,,,,,SPR-9610,SPR-10138,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:40:31.861,30906,true,issuemaster(issuemaster),,,,0|i05lqf:,32727,30606,,,,,,"26/May/12 4:50 AM;cbeams;{quote}
{noformat}
commit 2a2b6eef9107a877492e965b5e063d6f1712e7f9
Author: Chris Beams <cbeams@vmware.com>
Date:   Fri May 25 23:05:08 2012 +0300

    Introduce ConfigurableWebEnvironment
    
    Changes introduced in Spring 3.1 for Environment support inadvertently
    established a cyclic dependency between the
    org.springframework.web.context and
    org.springframework.web.context.support packages, specifically through
    web.context.ContextLoader's invocation of
    web.context.support.WebApplicationContextUtils#initServletPropertySources.
    
    This commit introduces ConfigurableWebEnvironment to break this cyclic
    dependency. All web.context.ConfigurableWebApplicationContext types now
    return web.context.ConfigurableWebEnvironment from their #getEnvironment
    methods; web.context.support.StandardServletEnvironment now implements
    ConfigurableWebEnvironment and makes the call to
    web.context.support.WebApplicationContextUtils#initServletPropertySources
    within its implementation of #initPropertySources. This means that
    web.context.ContextLoader now invokes
    web.context.ConfigurableWebEnvironment#initPropertySources instead of
    web.context.support.WebApplicationContextUtils#initServletPropertySources
    and thus the cycle is broken.
    
    Issue: SPR-9439
{noformat}
{quote}
",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14075|https://github.com/spring-projects/spring-framework/issues/14075]. ,,,,,,,,,,,,,,,,,,,,,,
Fix compile and test classpaths regarding slf4j versions,SPR-9421,43395,37126,Sub-task,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Critical,Complete,sbrannen,sbrannen,sbrannen,17/May/12 5:03 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,04/Dec/12 12:11 PM,,,,,,,,3.2 GA,,,,,[Build],,,,0,,,,,,,,"h4. Status Quo

When executing various tests within Eclipse -- using the {{.classpath}} files generated by the Gradle {{import-into-eclipse.sh}} script -- you get the following error:

{panel}
SLF4J: slf4j-api 1.6.x (or later) is incompatible with this binding.
SLF4J: Your binding is version 1.5.5 or earlier.
SLF4J: Upgrade your binding to version 1.6.x. or 2.0.x
{panel}

Note that if you upgrade all slf4j dependencies to 1.6.x, you will then see similar failures when running the Gradle build as well.

----
h4. Analysis

The core of the problem is that the slf4j API and implementation JARs are out of sync. Specifically, we currently use version 1.6.1 of {{slf4j-api}} and version 1.5.3 of {{slf4j-jcl}}.

It appears that the reason for this is that we want to build against Hibernate 3 and Hibernate 4 which require different versions of slf4j. Note as well that the version of Ehcache also plays a role in this game.

----
h4. Example Failing Tests

|| Module          || Test Class ||
| *spring-context* | {{EhCacheCacheTests}} |
| *spring-orm*     | {{HibernateTransactionManagerTests}} |
| *spring-webmvc*  | {{RequestResponseBodyMethodProcessorTests}} |
| *spring-test*    | {{HibernateSessionFlushingTests}} |

----
h4. Attempted Fixes in the Past

- [Fix transitive dependency issue with slf4j-api|https://github.com/SpringSource/spring-framework/commit/6d5a630c4491f9b2790095cef4d37f6cdd2d7456]
- [Upgrade slf4j-api and -log4j12 dependencies to 1.6.1|https://github.com/SpringSource/spring-framework/commit/fdded0768ebd65f040f0e9c970f50a22ee99d005]

----
h4. Deliverables

# (/) Ensure that versions for the slf4j API and implementation JARs are compatible in *all* modules.
# (/) Ensure that tests in *all* modules execute without errors, both via the Gradle build and within Eclipse.

----",,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-05-17 21:39:56.597,30814,true,issuemaster(issuemaster),,,,0|i05l5z:,32635,30514,,,,,,"17/May/12 6:01 PM;sbrannen;Chris, can you please take a look at this?

Thanks,

Sam","17/May/12 9:39 PM;cbeams;Yes, thanks.  Why 'critical' as a priority?","18/May/12 8:46 AM;sbrannen;I marked this issue as _critical_ since it points to a larger problem, namely that our dependency management in Gradle is fragile at best and broken in the worst case.

It is fragile in that we cannot run the same tests from the command line and within the IDE, and it is potentially broken in that we cannot be certain that we are building or testing against the appropriate versions of dependencies.

I also have a very big issue with disabling existing tests for any longer than a week. The reason for this is that the tests were written to verify expected behavior in the framework, and as such they serve as our regression test suite. So if we disable tests and then forget about them, we are opening ourselves up to breaking previous functionality without even noticing it.

In summary I think this is critical since it jeopardizes the quality of the framework.","18/May/12 8:48 AM;sbrannen;Please note that it may make sense to first address the issue of how we can effectively build and test against two versions of Hibernate (each with different dependencies) within the same Gradle build and within our IDEs.

If that issue is solved, the issue with slf4j might go away.","18/May/12 10:37 AM;rstoya05-aop;In the case of spring-webmvc at least, removing the spring-orm dependency and regenerating Eclipse settings, gets tests to succeed inside Eclipse. I can't see why spring-orm is a dependency for spring-webmvc. There are no actual imports, only JavaDoc references to classes in spring-orm.

","04/Dec/12 12:11 PM;sbrannen;Resolved as described in the comments from [GitHub commit 19d7cedc|https://github.com/SpringSource/spring-framework/commit/19d7cedcf2e2a4c6ab837fe59d929a0a26c83f4c]:

{quote}
*Fix classpaths regarding slf4j versions*

 - Defined global slf4jVersion as '1.6.1' in the Gradle build.

 - Replaced dependencies on slf4j-log4j12 with slf4j-jcl where possible;
   however, spring-test-mvc still depends on jcl-over-slf4j and
   slf4j-log4j12 (see SPR-10070).

 - Reenabled HibernateSessionFlushingTests.

 - Verified that the following tests pass in the Gradle build and within
   Eclipse:
   - HibernateSessionFlushingTests
   - HibernateTransactionManagerTests (Hibernate 3)
   - HibernateTransactionManagerTests (Hibernate 4)
   - RequestResponseBodyMethodProcessorTests
{quote}

See SPR-10070 for related issues in the {{spring-mvc-test}} module.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#14057|https://github.com/spring-projects/spring-framework/issues/14057]. ,,,,,,,,,,,,,,,,,
Deprecate SimpleJdbcTestUtils in favor of JdbcTestUtils,SPR-9235,42592,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,michelz,michelz,14/Mar/12 12:12 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,03/Aug/12 12:08 PM,3.1.1,,,,,,,3.1.3,3.2 M2,,,,Test,,,,3,,,,,,,,"h4. Overview

Since {{SimpleJdbcTemplate}} is now deprecated, {{SimpleJdbcTestUtils}} should also be deprecated, and its methods could be moved to {{JdbcTestUtils}}, changing them to use {{JdbcTemplate}} instead.

h4. Proposed Solution

The file attached is a patch where I did this. Also, I added two methods that are very useful for database testing:

- {{dropTables()}}: this method is similar to {{deleteFromTables()}} but instead of removing all rows, it will drop the tables.
- {{countRowsInTable()}}: {{countRowsInTable()}} already exists, but I added this overloaded method that takes a {{whereClause}} to augment the query.",,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,14/Mar/12 12:12 PM;michelz;JdbcTestUtils.java;https://jira.spring.io/secure/attachment/19513/JdbcTestUtils.java,,,,,,,,,,,,,9936000,,,,,2012-03-20 06:35:32.937,30014,true,issuemaster(issuemaster),,,,0|i05g8v:,31838,29714,,,,,,"20/Mar/12 6:35 AM;cbeams;Added @thomas.risberg as a watcher.  Thomas, this looks reasonable.  If you see fit, please assign to yourself and schedule for an upcoming release.",15/Apr/12 10:02 PM;ibrandt;I'm looking forward to the release of this.  I've used {{SimpleJdbcTestUtils}} extensively.  As it stands upgrading from 3.0 to 3.1 implies a flood of deprecation warnings without an equivalent API to migrate to.,"14/May/12 5:04 AM;cbeams;Ian, Michel, all,

This is an ideal candidate for a pull request - if anyone here is interested in contributing, you can start with Michel's original attachment here, and then follow the [contributor guidelines|https://github.com/SpringSource/spring-framework/wiki/Contributor-guidelines] to get it committed.",09/Jun/12 11:26 AM;ibrandt;Done: https://github.com/SpringSource/spring-framework/pull/90.  Hopefully this is in time for a 3.1.2 backport.,11/Jun/12 6:50 AM;michelz;I added a comment on the Git pull request on Github. One SQL has an extra escape char (`) that should be removed. ,"12/Jul/12 2:28 PM;ibrandt;I just noticed 3.1.2 was released, and was sorry to see that this was not included.  Is there going to be a 3.1.3?  Is there anything I need to do to the above pull request to get it considered?","03/Aug/12 12:08 PM;sbrannen;This issue has been addressed in [GitHub commit a7d43773e8|https://github.com/SpringSource/spring-framework/commit/a7d43773e870fc7bf4106d34f42e8f3c0337b7b7] as described in the commit message:

{quote}
*Deprecate SimpleJdbcTestUtils in favor of JdbcTestUtils*

Several static utility methods in SimpleJdbcTestUtils accept an instance of SimpleJdbcTemplate as an argument; however, SimpleJdbcTemplate has been deprecated since Spring 3.1 in favor of simply using JdbcTemplate which now also supports Java 5 language constructs such as var-args. Consequently, use of such methods from SimpleJdbcTestUtils results in deprecation warnings without an equivalent API to migrate to.

This commit addresses this issue by migrating all existing methods in SimpleJdbcTestUtils to JdbcTestUtils. The migrated methods now accept an instance of JdbcTemplate as an argument, thereby avoiding the deprecation warnings but maintaining semantic compatibility with the functionality previous available in SimpleJdbcTestUtils.

In addition, this commit also introduces two new methods:

- countRowsInTableWhere(): counts the rows in a given table, using a provided WHERE clause
- dropTables(): drops the tables with the specified names
{quote}","03/Aug/12 12:16 PM;sbrannen;FYI: I have raised SPR-9664 to have this feature considered for backporting to Spring 3.1.x.

So feel free to watch SPR-9664 if you're interested.",03/Aug/12 12:40 PM;ibrandt;Thank you Sam!,"03/Aug/12 2:00 PM;sbrannen;If you're following this issue, you may also be interested in SPR-9665.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13873|https://github.com/spring-projects/spring-framework/issues/13873]. ,,,,,,,,,,,,,
Reduce log level for message re: missing annotation,SPR-9233,42580,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,manthos,manthos,13/Mar/12 6:55 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/May/12 3:50 AM,3.1.1,,,,,,,3.2 M1,,,,,Core,,,,6,logging,,,,,,,"Since 3.1.1 the AbstractRecursiveAnnotationVisitor logs a warning when annotation class could not be loaded (see AbstractRecursiveAnnotationVisitor#logNonFatalException). Until 3.1.0 any Exception was catched without any message. I agree to log this but IMO this should be a debug log message. Annotations (even if RetentionPolicy.RUNTIME) may or may not be available at run-time. See also Java Language Specification:
{quote}
9.6.1.2 Retention

Annotations may be present only in the source code, or they may be present in the binary form of a class or interface. *An annotation that is present in the binary may or may not be available at run-time via the reflective libraries of the Java platform.*
...
{quote}

So there is nothing wrong about getting a ClassNotFoundException regarding annotations. 

I suggest to change the log level to debug or (IMO better) to catch ClassNotFoundException -> logger.debug(...) because it's legitimate and any other Exception -> logger.warn(...). 

Background: We currently use jsr305 with @javax.annotation.Nonnull and @javax.annotation.Nullable doing some code analyses during builds. At run-time these annotations are no longer available/needed and we get tons of warnings ??""Failed to classload type while reading annotation metadata. This is a non-fatal error, but certain annotation metadata may be unavailable.""??. Of course, it's not a problem to workaround this: we can include jsr305 or change log level in config of this logger but IMO I should not get a warning when everything is like expected and JLS-compliant.",,;27/May/12 3:51 AM;cbeams;2400,,,,,,,,,,2400,,,,2400,,,,,,,,SPR-9031,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-03-19 02:02:47.608,30002,true,issuemaster(issuemaster),,,,0|i05g67:,31826,29702,,,,,,"19/Mar/12 2:02 AM;cbeams;Good point, thanks.  We're working on other logging-related efforts for 3.2 M1 as it is, so this will fit in nicely.",09/May/12 11:25 PM;bernd;I could live with a warning but what's really cluttering the startup of the application is the output of the stack trace for it.,"27/May/12 3:50 AM;cbeams;{quote}
{noformat}
commit 535d31f8d43029ff4a53238c787a52d770f8532c
Author: Chris Beams <cbeams@vmware.com>
Date:   Sun May 27 13:27:39 2012 +0300

    Reduce log level for message re: missing annotation
    
    Previously (since Spring 3.1.1) RecursiveAnnotationAttributesVisitor
    logs at level WARN when ASM parsing encounters an annotation or an (enum
    used within an annotation) that cannot be classloaded. This is not
    necessarily indicative of an error, e.g. JSR-305 annotations such as
    @Nonnull may be used only for static analysis purposes, but because
    these annotations have runtime retention, they remain present in the
    bytecode. Per section 9.6.1.2 of the JLS, ""An annotation that is present
    in the binary may or may not be available at run-time via the reflective
    libraries of the Java platform.""
    
    This commit lowers the log level of these messages from warn to debug,
    but leaves at warn level other messages dealing with the ability
    reflectively read enum values from within annotations.
    
    Issue: SPR-9233
{noformat}
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13871|https://github.com/spring-projects/spring-framework/issues/13871]. ,,,,,,,,,,,,,,,,,,,,
MethodInterceptor causes integration test to commit changes to database,SPR-9158,42361,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Works as Designed,sbrannen,grd22001,grd22001,23/Feb/12 12:10 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,31/Jul/12 7:04 AM,3.0.5,3.1.2,,,,,,,,,,,Data:ORM,Test,Transaction,,0,testing,transactions,,,,,,"h4. Overview

The following Spring AOP method interceptor ({{MethodLoggingInterceptor}}) causes a Hibernate-based DAO test case to commit changes to the database even though the transaction manged by the Spring TestContext framework is rolled back.

----
h4. Code

Regarding the {{testCreateRemoveHunter()}} method in {{SampleDaoImplTest}}:

- The test works if the method interceptor is not enabled.
- The test works if only one operation is performed per test method.
- The logs confirm that the Spring TestContext Framework properly rolls back the transaction after the test method.

----
{code:title=MethodLoggingInterceptor}
public class MethodLoggingInterceptor implements MethodInterceptor {

    private final Logger logger = Logger.getLogger(this.getClass().toString());

    @Override
    public Object invoke(MethodInvocation methodInvocation) throws Throwable {

        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        Object result = methodInvocation.proceed();

        stopWatch.stop();

        StringBuilder logMessage = new StringBuilder();
        // build logMessage ...
	logger.info(logMessage.toString());

        return result;
    }
}
{code}

{code:xml|title=Config File}
<bean name=""methodLoggingInterceptor"" class=""com.kohls.listing.das.interceptor.MethodLoggingInterceptor""/>

<bean name=""proxyCreator"" class=""org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"">
    <property name=""beanNames"">
        <list>
            <value>*</value>
        </list>
     </property>
     <property name=""interceptorNames"">
        <list>
            <value>methodLoggingInterceptor</value>
        </list>
     </property>
</bean>

<bean id=""dataSource"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
        <property name=""driverClassName"" value=""${database.driver}""/>
        <property name=""url"" value=""${database.url}""/>
        <property name=""username"" value=""${database.username}""/>
        <property name=""password"" value=""${database.password}""/>
        <property name=""defaultCatalog"" value=""${hibernate.default_schema}""/>
</bean>

<bean id=""transactionManager"" class=""org.springframework.orm.hibernate3.HibernateTransactionManager"">
        <property name=""sessionFactory"" ref=""sessionFactory""/>
</bean>

<bean id=""sessionFactory"" class=""org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"">
        <property name=""dataSource"" ref=""dataSource""/>
        <property name=""hibernateProperties"">
            <props>
                <prop key=""hibernate.jdbc.batch_size"">100</prop>
                <prop key=""hibernate.show_sql"">true</prop>
                <prop key=""hibernate.connection.autocommit"">false</prop>
                <prop key=""hibernate.dialect"">${database.dialect}</prop>
            </props>
        </property>
        <property name=""configLocation"" value=""hibernate.cfg.xml""/>
</bean>
{code}

{code:title=SampleDaoImplTest}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(""classpath*:applicationContext.xml"")
public class SampleDaoImplTest {

    @Autowired
    HunterDao hunterDao;

    @Test
    @Transactional
    public void testCreateRemoveHunter() {
        Hunter hunter = new Hunter();
        hunterDao.createHunter(hunter);
        hunterDao.deleteHunter(hunter);
    }

    @AfterTransaction
    public void afterTransaction() {
        // if you query the state of the database, the hunter table
        // contains the Hunter entity created in testCreateRemoveHunter(),
        // but it shouldn't since the transaction for the test was rolled
        // back by the Spring TestContext Framework.
    }
}
{code}

----
h4. Analysis

The basic cause of the problem is that the {{MethodInterceptor}} is applied to *every* bean in the context by specifying ""*"" for the {{beanNames}} property of {{BeanNameAutoProxyCreator}}. This results in the interceptor being applied not only to application beans but also to the Hibernate {{SessionFactory}}.

If the {{beanNames}} property of {{BeanNameAutoProxyCreator}} is changed to something less _greedy_ than ""*"" -- for example, ""*Dao"" -- the {{sessionFactory}} will not be advised by the method interceptor, and the code will work as expected.

As for why the {{SessionFactory}} fails to operate as expected when advised by a {{MethodInterceptor}}, that remains to be determined, but it is assumed that Spring's Hibernate support fails to properly manage the {{Session}} for the current thread if the {{SessionFactory}} is hidden behind a dynamic proxy, which is the case when a {{MethodInterceptor}} is applied to every bean in the application context.

----","Ubuntu 11.10, oracle 11 with lattest driver",,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-02-26 05:44:17.105,29636,true,issuemaster(issuemaster),,Standalone,,0|i04d1z:,25489,21501,,,,,,"26/Feb/12 5:44 AM;cbeams;_Added Sam Brannen as a watcher_

@Sam, it would be great if you could take a look at this issue.  Please assign to yourself, triage and schedule appropriately if you have time.

@Guillermo, a reproduction project would really help move this along.  Consider following the instructions at https://github.com/SpringSource/spring-framework-issues#readme.

Thanks!",28/Feb/12 10:45 AM;grd22001;I've added an example app to github,29/Feb/12 4:49 AM;cbeams;@Guillermo - please past the URL to the pull request.  I'm not seeing it.,29/Feb/12 5:27 AM;grd22001;git@github.com:gdeluca/SPR-9158.git,"29/Feb/12 6:05 AM;cbeams;Thanks, Guillermo; we'll take a look.  In the future, consider submitting such projects as pull requests against https://github.com/SpringSource/spring-framework-issues.  This streamlines things for us quite a bit.  In any case, thanks for the project.","30/Jul/12 2:25 PM;sbrannen;Hi Guillermo,

I have determined the basic cause of the problem you're experiencing: you are applying the {{MethodInterceptor}} to *every* bean in the context by specifying ""*"" for the {{beanNames}} property of {{BeanNameAutoProxyCreator}}. This results in the interceptor also being applied to the Hibernate {{SessionFactory}}.

Thus, if you change your {{BeanNameAutoProxyCreator}} definition to the following -- note the ""*Dao"" pattern -- the {{sessionFactory}} will not be advised by the method interceptor, and your code will work as expected.

{code:xml}
<bean name=""proxyCreator"" class=""org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"">
    <property name=""beanNames"">
        <list>
            <value>*Dao</value>
        </list>
     </property>
     <property name=""interceptorNames"">
        <list>
            <value>methodLoggingInterceptor</value>
        </list>
     </property>
</bean>
{code}

Why are you applying your {{MethodLoggingInterceptor}} to every bean in the context instead of just your application code?

Is this a requirement for your use case?

Thanks in advance for feedback!

Sam","31/Jul/12 6:19 AM;grd22001;Thanks Sam, that's enough for my case. You can close this bug if's ok for you","31/Jul/12 7:04 AM;sbrannen;Resolving as ""_Works as Designed_"" as explained in the _Analysis_ section:

{quote}
h4. Analysis

The basic cause of the problem is that the {{MethodInterceptor}} is applied to *every* bean in the context by specifying ""*"" for the {{beanNames}} property of {{BeanNameAutoProxyCreator}}. This results in the interceptor being applied not only to application beans but also to the Hibernate {{SessionFactory}}.

If the {{beanNames}} property of {{BeanNameAutoProxyCreator}} is changed to something less _greedy_ than ""*"" -- for example, ""*Dao"" -- the {{sessionFactory}} will not be advised by the method interceptor, and the code will work as expected.

As for why the {{SessionFactory}} fails to operate as expected when advised by a {{MethodInterceptor}}, that remains to be determined, but it is assumed that Spring's Hibernate support fails to properly manage the {{Session}} for the current thread if the {{SessionFactory}} is hidden behind a dynamic proxy, which is the case when a {{MethodInterceptor}} is applied to every bean in the application context.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13796|https://github.com/spring-projects/spring-framework/issues/13796]. ,,,,,,,,,,,,,,,
Provide support for ApplicationContextInitializers in the TestContext framework,SPR-9011,41674,,New Feature,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,rstoya05-aop,rstoya05-aop,09/Jan/12 6:17 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,20/Aug/12 6:37 AM,3.1 GA,,,,,,,3.2 M2,,,,,Test,,,,11,,,,,,,,"h4. Status Quo

Starting with Spring 3.1 applications can specify {{contextInitializerClasses}} via {{context-param}} and {{init-param}} in {{web.xml}}.

----
h4. Goals

For comprehensive testing it should be possible to re-use {{ApplicationContextInitializer}} instances in tests as well. 

This could be done at the {{@ContextConfiguration}} level by allowing an array of ACI types to be specified, and the TCF would allow each to visit the {{ApplicationContext}} at the right time.

----
h4. Deliverables

# (/) Introduce a new {{initializers}} attribute in {{@ContextConfiguration}}.
#- {code}Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {};{code}
# (/) Introduce a new {{inheritInitializers}} attribute in {{@ContextConfiguration}}.
#- {code}boolean inheritInitializers() default true;{code}
# (/) Allow a context to be loaded solely via a custom {{ApplicationContextInitializer}} (i.e., without locations or classes)
# (/) Initializers must be included in {{MergedContextConfiguration}} for determining the context cache key.
# (/) Invoke initializers within existing {{SmartContextLoader}} implementations.
#- for example, in {{AbstractGenericContextLoader.loadContext(...)}} methods
#- (/) per the contract defined in the Javadoc for {{ApplicationContextInitializer}}: _{{ApplicationContextInitializer}} processors are encouraged to detect whether Spring's {{Ordered}} interface has been implemented or if the {{@Order}} annotation is present and to sort instances accordingly if so prior to invocation._
#-- {code}Collections.sort(initializerInstances, new AnnotationAwareOrderComparator());{code}
# (/) Document in Javadoc
# (/) Document in the reference manual

----
h4. Pseudocode Examples

{code:java|title=Single Initializer}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(
    locations = ""/app-config.xml"",
    initializers = CustomInitializer.class)
public class ApplicationContextInitializerTests {}
{code}

{code:java|title=Multiple Initializers}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(
    locations = ""/app-config.xml"",
    initializers = {PropertySourceInitializer.class, ProfileInitializer.class})
public class ApplicationContextInitializerTests {}
{code}

{code:java|title=Merged Initializers}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(
    classes = BaseConfig.class,
    initializers = BaseInitializer.class)
public class BaseTest {}

@ContextConfiguration(
    classes = ExtendedConfig.class,
    initializers = ExtendedInitializer.class)
public class ExtendedTest extends BaseTest {}
{code}

{code:java|title=Overridden Initializers}
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(
    classes = BaseConfig.class,
    initializers = BaseInitializer.class)
public class BaseTest {}

@ContextConfiguration(
    classes = ExtendedConfig.class,
    initializers = ExtendedInitializer.class,
    inheritInitializers = false)
public class ExtendedTest extends BaseTest {}
{code}

{code:java|title=Initializer without Locations or Classes}
// In the following example, an exception would not be thrown even
// if no default XML file or @Configuration class is detected.
// In other words, the initializer would be responsible for 
// providing XML configuration files or annotated configuration
// classes to the provided context.
@ContextConfiguration(initializers = EntireAppInitializer.class)
public class InitializerWithoutConfigFilesOrClassesTest extends BaseTest  {}
{code}

----",,,,,,,,,,,0,129600,,,0,129600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-03-08 07:14:59.703,29007,true,issuemaster(issuemaster),,,,0|i033u7:,18164,17524,,,,,,"08/Mar/12 7:14 AM;cbeams;@Sam, here's a nice use case explaining why this functionality is necessary, or at least very nice to have: http://forum.springsource.org/showthread.php?123995-Registering-PropertySources-in-test-cases&p=404617#post404617

I've asked Scott to weigh in here further to make his case.","08/Mar/12 8:09 AM;scottyfred;Following Chris' blog post on [Unified Property Management in Spring 3.1|http://blog.springsource.org/2011/02/15/spring-3-1-m1-unified-property-management/], I can add custom PropertySource implementations to a stand-alone or web ApplicationContext. 

I also want to be able to test how the system behaves with and without the custom PropertySource being registered. In order to do this in a test case using @ContextConfiguration, I need a way to manipulate the application context after it has been created but before it has been refreshed.  Right now, as Chris suggested in the forum thread, I would need to manually create an app context in the test case instead of using @ContextConfiguration. 
","28/Apr/12 3:10 AM;cbeams;Sam, take a look at this post as well: http://stackoverflow.com/questions/10357985/java-spring-applicationcontext-configuration/10362527

Not the best use case, perhaps, but it does show that folks expect ACI classes and @ContextConfiguration to work together somehow.","01/May/12 7:27 AM;hr_flick;My use case is not specific to testing. I need to be able to set the active profiles on application contexts loaded in non-web containers (e.g. Mule).
In these cases the problem is the same as with web applications: The application context is not created by our code, but by the container.

I would expect my ApplicationContextInitializers to be discovered and executed when defined as beans in xml or set up for classpath scanning.

Would it be possible to generalize this issue to encompass both test-support and support for other container-created contexts?","24/May/12 7:31 AM;gstathis;+1 for the more generalized case. We have the same problem as Scott with @ContextConfiguration in our unit tests. We have hundreds of them so, re-writing them all to manage their own ApplicationContext is definitely not something we look forward to. But besides the unit tests, we are also in the same boat as Christian; our services are distributed as a JAR, so we rely on being provided with a spring-managed context that loads settings from a properties file in the classpath. We would then use those settings to turn bean profiles or/off via spring XML configuration without having to control the Application context ourselves.","17/Jul/12 9:26 AM;sbrannen;Christian and George,

{quote}
I would expect my ApplicationContextInitializers to be discovered and executed when defined as beans in xml or set up for classpath scanning.
{quote}

It is not feasible to have an {{ApplicationContextInitializer}} (_ACI_) defined as a Spring bean since an ACI should not reside in the {{ApplicationContext}} which it initializes.

{quote}
Would it be possible to generalize this issue to encompass both test-support and support for other container-created contexts?
{quote}

No, this issue is dedicated to providing support for configuring ACIs in the TestContext framework (e.g., via {{@ContextConfiguration}}). 

If you would like to see support for configuring ACIs in other deployment environments, please create a separate JIRA issue for that specific use case.

Regards,

Sam","17/Jul/12 11:14 AM;sbrannen;If you are _watching_ this issue, please feel free to participate in the discussion regarding the proposed _Deliverables_ and the corresponding _Pseudocode Examples_ listed in this issue's _Description_.

Thanks!

Sam","20/Aug/12 6:37 AM;sbrannen;Completed as described in the message for [GitHub commit 58daeea1e2d7f3688057e0131cba5291a6f70fc2|https://github.com/SpringSource/spring-framework/commit/58daeea1e2d7f3688057e0131cba5291a6f70fc2]:

{quote}
*Support ApplicationContextInitializers in the TCF*

Starting with Spring 3.1 applications can specify
contextInitializerClasses via context-param and init-param in web.xml;
however, there is currently no way to have such initializers invoked in
integration testing scenarios without writing a custom
SmartContextLoader. For comprehensive integration testing it should
therefore be possible to re-use ApplicationContextInitializers in the
Spring TestContext Framework as well.

This commit makes this possible at the @ContextConfiguration level by
allowing an array of ACI types to be specified, and the out-of-the-box
SmartContextLoader implementations invoke the declared initializers at
the appropriate time.

 - Added initializers and inheritInitializers attributes to
   @ContextConfiguration.

 - Introduced support for ApplicationContextInitializers in
   ContextConfigurationAttributes, MergedContextConfiguration, and
   ContextLoaderUtils.

 - MergedContextConfiguration stores context initializer classes as a
   Set and incorporates them into the implementations of hashCode() and
   equals() for proper context caching.

 - ApplicationContextInitializers are invoked in the new
   prepareContext(GenericApplicationContext, MergedContextConfiguration)
   method in AbstractGenericContextLoader, and ordering declared via the
   Ordered interface and @Order annotation is honored.

 - Updated DelegatingSmartContextLoader to support initializers.
   Specifically, a test class may optionally declare neither XML
   configuration files nor annotated classes and instead declare only
   application context initializers. In such cases, an attempt will
   still be made to detect defaults, but their absence will not result
   an an exception.

 - Documented support for application context initializers in Javadoc
   and in the testing chapter of the reference manual.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13650|https://github.com/spring-projects/spring-framework/issues/13650]. ,,,,,,,,,,,,,,,
Provide JdbcTemplate in abstract transactional base classes in the TestContext framework,SPR-8990,41575,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,klr8,klr8,04/Jan/12 3:27 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,03/Aug/12 1:03 PM,3.1 GA,,,,,,,3.2 M2,,,,,Test,,,,1,,,,,,,,"h4. Status Quo

{{AbstractTransactionalTestNGSpringContextTests}} provides a {{SimpleJdbcTemplate}} for use in subclasses. Spring 3.1 deprecated {{SimpleJdbcTemplate}}. As a result any {{AbstractTransactionalTestNGSpringContextTests}} subclass that uses the {{simpleJdbcTemplate}} member inherited from the superclass will get deprecation warnings.

----
h4. Goals

It would be useful to also add a {{protected JdbcTemplate jdbcTemplate}} instance variable to {{AbstractTransactionalTestNGSpringContextTests}}, allowing subclasses to switch to this new {{jdbcTemplate}} to avoid the deprecation warnings.

The same remark is applicable to {{AbstractTransactionalJUnit4SpringContextTests}} and other similar test support classes.

----
h4. Deliverables

# (/) In {{AbstractTransactionalJUnit4SpringContextTests}} and {{AbstractTransactionalTestNGSpringContextTests}}:
#- Define and instantiate a {{protected JdbcTemplate jdbcTemplate}}
#- _Deprecate_ the existing {{simpleJdbcTemplate}} instance variable
#- Delegate to {{JdbcTestUtils}} instead of the now deprecated {{SimpleJdbcTestUtils}}
# (/) Update the reference manual
# (/) Update the changelog

----",,,,,,,,,,,0,7200,,,0,7200,,SPR-9235,,,,,,SPR-6922,SPR-9345,,,,,,,,,,,,,,,,,,9936000,,,,,2012-04-25 06:52:17.022,28908,true,issuemaster(issuemaster),,,,0|i032mv:,17969,17367,,,,,,"25/Apr/12 6:52 AM;dmgob;Same deal for AbstractTransactionalJUnit4SpringContextTests.
Access to a jdbcTemplate member would eliminate compiling-the-tests
warnings.
","03/Aug/12 1:03 PM;sbrannen;Completed as described in the _Deliverables_ in this issue and in the commit message from [GitHub commit 8d9637ada6|https://github.com/SpringSource/spring-framework/commit/8d9637ada65b3b7211a37f853221493c963b1799]:

{quote}
*Provide JdbcTemplate in tx base classes in the TCF*

Since Spring 2.5, the abstract transactional base classes in the
TestContext framework have defined and delegated to a protected
SimpleJdbcTemplate instance variable; however, SimpleJdbcTemplate has
deprecated since Spring 3.1. Consequently, subclasses of
AbstractTransactionalJUnit4SpringContextTests and
AbstractTransactionalTestNGSpringContextTests that use this instance
variable suffer from seemingly unnecessary deprecation warnings.

This commit addresses this issue by introducing a protected JdbcTemplate
instance variable in abstract transactional base classes to replace the
use of the existing SimpleJdbcTemplate. Furthermore, the existing
simpleJdbcTemplate instance variable has been deprecated, and utility
methods in the affected base classes now delegate to JdbcTestUtils
instead of the now deprecated SimpleJdbcTestUtils.
{quote}","03/Aug/12 1:59 PM;sbrannen;If you're following this issue, you may also be interested in SPR-9665.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13630|https://github.com/spring-projects/spring-framework/issues/13630]. ,,,,,,,,,,,,,,,,,,,,
"RestTemplate.headForHeaders throws ""IllegalArgumentException: No InputStream specified"" on server resource which status code are 4xx",SPR-8883,41094,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,juergen.hoeller,ludovic.praud,ludovic.praud,29/Nov/11 6:07 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,20/Jun/12 2:46 AM,3.0.6,,,,,,,3.1 GA,,,,,Web,,,,1,,,,,,,,"With RestTemplate, an {{IllegalArgumentException: No InputStream specified}} is thrown when doing HTTP HEAD on a resource which has a 4xx Status-Code.

The problem is within {{org.springframework.web.client.DefaultResponseErrorHandler#handleError}} method which fetchs the body of the response with :
{code:java}
    byte[] body = FileCopyUtils.copyToByteArray(response.getBody());
{code}
and that copy throws an {{IllegalArgumentException: No InputStream specified}}

We don't expect the body to be different from null when doing an HTTP HEAD (the HEAD always returns empty body response). The handleError method must handle null body response.

*workaround*

Set an override of DefaultResponseErrorHandler in RestTemplate which fix the problem.

{code:java}
    this.restTemplate.setErrorHandler(new DefaultResponseErrorHandler() {
        @Override
        public void handleError(final ClientHttpResponse response) throws IOException {
            final HttpStatus statusCode = response.getStatusCode();
            final MediaType contentType = response.getHeaders().getContentType();
            final Charset charset = contentType != null ? contentType.getCharSet() : null;
            final byte[] body = (response.getBody() != null) ? FileCopyUtils.copyToByteArray(response.getBody()) : null;
            switch (statusCode.series()) {
                case CLIENT_ERROR:
                    throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset);
                case SERVER_ERROR:
                    throw new HttpServerErrorException(statusCode, response.getStatusText(), body, charset);
                default:
                    throw new RestClientException(""Unknown status code ["" + statusCode + ""]"");
            }
        }
    });
{code}",,;08/Dec/11 11:17 AM;arjen.poutsma;720,,,,,,,,,0,720,,,0,720,,,,,,,,SPR-8713,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-12-01 15:44:31.658,28423,true,issuemaster(issuemaster),,Jetty -> 7,,0|i02mrj:,15397,14625,,,,,Sun JVM -> 1.6,"01/Dec/11 3:44 PM;rstoya05-aop;It looks like this issue was already fixed as part of SPR-8713:

https://fisheye.springsource.org/changelog/spring-framework?cs=4995

Would you mind testing with 3.1 RC2 ?","08/Dec/11 8:02 AM;ludovic.praud;I have tested against 3.1 RC2 and it does not work. Because it is not an IOException but a IllegalArgumentException that is thrown. As said before, response.getBody() return null which cause the IllegalArgumentException from copyToByteArray method.

I've made a comment of changeset 4995 which said :

??Does the swallowing of all IOException in the getResponseBody really a good idea to fix the issue. In my case, the response.getBody() is null. Only a null check should be OK. If there is a problem in the inputStream, it could be important to let the IOException goes up.??

Hope it helps.","08/Dec/11 11:23 AM;arjen.poutsma;Fixed: we now check whether the response body is null.

As for swallowing the IOException: when the DefaultResponseErrorHandler is invoked, we are already in error-handling-land, and it's not strange (perhaps even expected) if the underlying HTTP code throws IOExceptions when we ask it for the body. If we would let it propagate, it will only add more confusion, I think, as it will change the focus from the real error to the IOException.",05/Jan/12 12:37 PM;ludovic.praud;Is it possible to have this fixed also in spring 3.0.x because right now I cannot upgrade to spring 3.1 due to incompatibility problem with 3rd party test library which does not handle changes in spring-test-3.1 ?,"09/Jan/12 2:40 AM;arjen.poutsma;Juergen, is this eligible for a back port to the 3.x branch?","19/Jun/12 2:36 AM;cbeams;Ludovic, why did you reopen this issue?  If you're still experiencing this bug (or something similar perhaps), please open a new issue and mention this one when doing so.

Arjen, please create a Backport subtask for this issue if backporting is still a relevant concern for you.",19/Jun/12 2:51 AM;ludovic.praud;@Chris : Sorry. I thought it was the solution to indicate that this was not fixed in 3.0.x branch.,20/Jun/12 2:43 AM;arjen.poutsma;Reopening to create subtask.,14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13524|https://github.com/spring-projects/spring-framework/issues/13524]. ,,,,,,,,,,,,,,,
Introduce support for generating unique names for embedded databases,SPR-8849,40901,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,sbrannen,golliwog,golliwog,14/Nov/11 2:54 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,20/Mar/15 4:23 PM,3.1 GA,,,,,,,4.2 RC1,,,,,Data:JDBC,Test,,,6,,,,,,,,"Hi,
I use an embedded database (HSQL) in my integration test suite. Its a maven project with TestNG.

{code:xml}
<jdbc:embedded-database id=""mirDataSource"">
	<jdbc:script location=""classpath:db/schema.sql"" />
	<jdbc:script location=""classpath:db/tables_hsqldb.sql"" />
	<jdbc:script location=""classpath:db/package_verweildauer.sql"" />
	<jdbc:script location=""classpath:db/data.sql"" />
</jdbc:embedded-database>
{code}

I have one default context configuration (which includes the database) and several extensions:
for instance:

{code:java}
@ContextConfiguration(""/spring/default.xml"")
public class PodcastControllerTest extends AbstractTestNGSpringContextTests {...}

// and

@ContextConfiguration({ ""/spring/components/amq-broker.xml"", ""/spring/default.xml"" })
public class SophoraAvDocumentTest extends AbstractTestNGSpringContextTests {...}
{code}

When executing the tests with maven (maven-surefire), all the tests with the first configuration reuse the same context (due to context caching). The first test-setup with the second configuration should create a fresh application context, but it fails with Database-Errors indicating, that the objects to create already exist. (I spent quite some time debugging the maven process).

Here is the maven surefire config:

{code:xml}
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<configuration>
		<threadCount>1</threadCount>
		<excludedGroups>slow,local</excludedGroups>
		<argLine>-Xmx1024m</argLine>
	</configuration>
</plugin>
{code}

My theory is, that both contexts connect to the same database instance, because they are in the same vm and the name of the db-instance is the same: 
EmbeddedDatabaseFactory.databaseName = ""testdb""; 

I did not find a way to assign the name with the jdbc:embedded-database-Tag.

So I created a custom EmbeddedDatabaseBuilder which assigns a random name (UUID) to every new instance:

{code:java}
EmbeddedDatabaseBuilder builder = new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.HSQL).setName(UUID.randomUUID().toString());
for (String sqlResource : this.scripts) {
    builder.addScript(sqlResource);
}
this.embeddedDatabase = builder.build();
{code}

With this one the errors are gone. Would it be a solution to add a configuration-option to jdbc:embedded-database for random db-instance names?",,Analysis and development of test suite to reproduce the problem and demonstrate a work-around.;09/Jun/12 3:40 PM;sbrannen;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,SPR-12835,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-11-16 15:04:16.441,28200,true,issuemaster(issuemaster),,,,0|i028db:,13065,12828,,,,,Sun JVM -> 1.6,"16/Nov/11 3:04 PM;cbeams;Hi Julian,

I have a couple ideas here, but it would be good to see the failure in action before making too many assumptions.  Would you be willing to put together a small reproduction project following the instructions here? https://github.com/SpringSource/spring-framework-issues#readme

Thanks,

Chris","13/Jan/12 4:04 AM;mleduque;I'm not the original reporter but I tried to provide a test project for this issue. If you don't see it, tell me.",29/Feb/12 4:23 PM;rstoya05-aop;https://github.com/SpringSource/spring-framework-issues/pull/16,"09/Jun/12 3:38 PM;sbrannen;Hi guys,

@Mickaël, thanks for pull request!

Based on your work and Julian's suggested programmatic work-around, I committed a test suite that both demonstrates the problem and a configuration-based work-around using a SpEL expression.

See [commit 04a682729020af09c70ebbf6a210f42b8cc1c36b|https://github.com/SpringSource/spring-framework/commit/04a682729020af09c70ebbf6a210f42b8cc1c36b] for details.

{noformat}
Reproduce claims raised in SPR-8849

This commit introduces a test suite (Spr8849Tests) that demonstrates
the claims made in SPR-8849.

Specifically, if <jdbc:embedded-database id=""xyz"" /> is used to create
an embedded HSQL database in an XML configuration file and that
configuration file is imported in different sets of configuration files
that are used to load ApplicationContexts for different integration
tests, the embedded database will be initialized multiple times using
any nested <jdbc:script /> elements. If such a script is used to create
a table, for example, subsequent attempts to initialize the database
named ""xyz"" will fail since an embedded database named ""xyz"" already
exists in the JVM.

As a work-around, this test suite uses a SpEL expression to generate a
random string for each embedded database instance:

  id=""#{T(java.util.UUID).randomUUID().toString()}""

See the Javadoc in Spr8849Tests for further information.

Issue: SPR-8849
{noformat}

\- Sam","18/Dec/13 7:55 AM;tkrah;But if those context does use e.g. DataSourceTransactionManager which does need a explicit reference to the above dataSource, how to setup this?","18/Dec/13 8:10 AM;sbrannen;[~tkrah], if you generate random IDs in XML configuration, then there won't be a way to know the random ID. So in such cases, you won't be able to refer to the {{DataSource}} bean by ID.

However, if you use Java Config (i.e., an {{@Bean}} method to create your {{DataSource}} programmatically), your bean could retain a constant name (e.g., {{dataSource}}). In that scenario you would create the embedded database (and thus the {{DataSource}}) programmatically via the {{EmbeddedDatabaseBuilder}}.

Regards,

Sam","20/Nov/14 2:11 AM;tkrah;So wouldn't it be better to just have 2 additional properties - the {{dbName}} for the actual database (so its not the ""id"" used for the name so i can still reference it by name in the context.xml and i would be able to use the SpEL expression from above - if those optional {{dbName}} is not given, if can fallback to the id to be backward compatible) and another property like {{customDriverProperties}} which are added 1:1 to the connection string from the database builder, to support custom stuff (e.g. H2 pgsql mode or MVCC support options)?","20/Nov/14 3:39 AM;sbrannen;Note that {{EmbeddedDatabaseBuilder}} already provides support for setting the {{name}}.

Providing an explicit attribute via {{<jdbc:embedded-database />}} for setting the name would certainly be a welcome improvement for XML-based configuration; however, the need for having the name auto-generated still exists. Thus, introducing such _automatic name generation_ support into both the Java builder API and XML namespace would remove the burden of coming up with such a SpEL expression from the developer.

In summary, I would recommend the following changes:

# Introduce {{dbName}} attribute in {{<jdbc:embedded-database />}}, analogous to {{EmbeddedDatabaseBuilder.setName()}}.
# Introduce a {{boolean}} flag for automatically generating a random, unique name for the embedded database.
#- this must be configurable via the Java builder API and the XML namespace.

Regards,

Sam","20/Nov/14 3:41 AM;sbrannen;Regarding support for a {{customDriverProperties}} property, that is an unrelated topic.

If you would like to see that implemented, please open a new JIRA issue to suggest it formally.

Thanks,

Sam","20/Nov/14 4:03 AM;tkrah;Thanks Sam, regarding your suggestions this sounds really good to me having it configurable at the jdbc namespace and at the builder API.
For the customDriverProperties i opened SPR-12455, sorry for hijacking this one.

regards Torsten.","29/Jan/15 11:32 AM;gbonk;This looks like my issue where the TestContext cache tries to re-create beans of embedded databases.  

http://stackoverflow.com/questions/28157842/multiple-embedded-hsqldb-databases-in-junit-errors-during-build",20/Mar/15 8:44 AM;sbrannen;FYI: the ground work for this issue has just been completed in conjunction with SPR-12834 and SPR-12835.,"20/Mar/15 9:13 AM;sbrannen;The previously proposed work-around has been updated as described in [GitHub commit ab771df|https://github.com/spring-projects/spring-framework/commit/ab771dfd97b14f978a0513f4e9425db86099b348]:

{quote}
*Refactor tests to use the new database-name attribute*

This commit refactors the XML configuration used by the tests in the
Spr8849Tests test suite so that a unique database name is always
generated (via the new 'database-name' attribute that was introduced in
SPR-12835) while reusing the same bean name (i.e., 'dataSource').

This is a much more robust alternative to the previous work-around
since the name of the DataSource does not randomly change across
application contexts, thus allowing proper autowiring by name and bean
referencing within XML configuration.
{quote}

Consequently, the following viable solution now exists for setting a unique name for each embedded database:

{code:xml}
<jdbc:embedded-database id=""dataSource"" database-name=""#{T(java.util.UUID).randomUUID().toString()}"">
	<jdbc:script location=""..."" />
</jdbc:embedded-database>
{code}

The above solution is, however, still considered a manual work-around until this issue (SPR-8849) has been resolved.","20/Mar/15 4:23 PM;sbrannen;Completed as described in [GitHub commit c0fbe0a|https://github.com/spring-projects/spring-framework/commit/c0fbe0ae5adcdfc0c99fbba4118493e3f998486d]:

{quote}
*Support unique names for embedded databases*

Development teams often encounter errors with embedded databases if
their test suite inadvertently attempts to recreate additional
instances of the same database. This can happen quite easily if an XML
configuration file or @Configuration class is responsible for creating
an embedded database and the corresponding configuration is then reused
across multiple testing scenarios within the same test suite (i.e.,
within the same JVM process) -- for example, integration tests against
embedded databases whose ApplicationContext configuration only differs
with regard to which bean definition profiles are active.

The root cause of such errors is the fact that Spring's
EmbeddedDatabaseFactory (used internally by both the
<jdbc:embedded-database> XML namespace element and the
EmbeddedDatabaseBuilder for Java Config) will set the name of the
embedded database to ""testdb"" if not otherwise specified. For the case
of <jdbc:embedded-database>, the embedded database is typically
assigned a name equal to the bean's id. Thus, subsequent attempts to
create an embedded database will not result in a new database. Instead,
the same JDBC connection URL will be reused, and attempts to create a
new embedded database will actually point to an existing embedded
database created from the same configuration.

This commit addresses this common issue by introducing support for
generating unique names for embedded databases. This support can be
enabled via:

- {{EmbeddedDatabaseFactory.setGenerateUniqueDatabaseName()}}
- {{EmbeddedDatabaseBuilder.generateUniqueName()}}
- {{<jdbc:embedded-database generate-name=""true"" ... >}}
{quote}","20/Mar/15 4:43 PM;sbrannen;The _proper_ solution to the problem originally raised by this JIRA issue will be available in Spring Framework 4.2 RC1 as follows:

{code:xml}
<jdbc:embedded-database id=""mirDataSource"" generate-name=""true"">
    <jdbc:script location=""classpath:db/schema.sql"" />
    <jdbc:script location=""classpath:db/tables_hsqldb.sql"" />
    <jdbc:script location=""classpath:db/package_verweildauer.sql"" />
    <jdbc:script location=""classpath:db/data.sql"" />
</jdbc:embedded-database>
{code}

Thus, all that's required to get it working as expected is the addition of {{generate-name=""true""}}. :)","20/Mar/15 5:08 PM;sbrannen;Out of curiosity, how do people feel about the {{generate-name}} attribute?

Is it not descriptive enough, too short?

Would something longer be a better choice?

- {{generate-unique-name}}
- {{generate-unique-db-name}}
- {{generate-unique-database-name}}

Thanks in advance for feedback!

\- Sam

p.s. please keep in mind that SPR-12835 introduced a new {{database-name}} attribute.","17/Sep/15 1:52 PM;gbonk;Why couldn't the database just be reused instead of generating unique names and duplicate databases? 


{noformat}
 List existingDataBases = org.hsqldb.DatabaseManager.getDatabaseURIs();

    boolean isExisting = false;
    String localDBName = StringUtils.lowerCase(this.databaseName);

    for (Object object : existingDataBases) {
        if (object.toString().contains(localDBName)) {
            isExisting = true;
            break;
        }
    }

    // Now populate the database
    if (!isExisting && this.databasePopulator != null) {

{noformat}
","17/Sep/15 8:08 PM;sbrannen;{quote}Why couldn't the database just be reused instead of generating unique names and duplicate databases? {quote}

The unique name generation is a feature that you have to explicitly opt in for.

The default behavior is that the database _will_ be reused. Nothing has changed in this regard. The only possible issue is if you have scripts that are used to populate the database. So in that sense, your proposal warrants consideration. Please open a new JIRA issue to track this proposal on its own.

Thanks,

Sam",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13491|https://github.com/spring-projects/spring-framework/issues/13491]. ,,,,,
RestTemplate headers not sent when bufferRequestBody is false,SPR-8809,40654,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,rpfong,rpfong,01/Nov/11 9:35 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/Dec/11 3:30 AM,3.1 RC1,,,,,,,3.1 GA,,,,,Web,,,,0,,,,,,,,"I'm using Spring Core 3.1.0.RC1 on Sun Java 6 with Tomcat 7.0.14. I'm trying to send custom http headers when invoking RestTemplate methods using features in SPR-5866 & SPR-7494.

I configured an InterceptingClientHttpRequestFactory to use an interceptor that adds a header prior to execution. However, I've discovered that my header is not sent when the SimpleClientHttpRequestFactory bufferRequestBody property is false. I've also tried adding the header by setting an interceptor directly on the RestTemplate instead of via request factory but with the same result.

I've only been able to send the custom header by setting the SimpleClientHttpRequestFactory bufferRequestBody property back to its default of true. I need to avoid buffering due to bug SPR-7909. Is this expected behavior? Are any workarounds available? Thank you!

references:
SPR-5866 = RestTemplate - access to Request Headers
SPR-7494 = Introduce interceptors for RestTemplate
SPR-7909 = Sending large payloads with RestTemplate results in an OutOfMemoryError","Windows 7 64-bit, Sun Java 1.6.0_29, Apache Tomcat 7.0.14",;30/Nov/11 3:10 AM;arjen.poutsma;420,;02/Dec/11 3:30 AM;arjen.poutsma;120,,,,,,,,,540,,,,540,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-11-30 03:11:45.492,27963,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00jk7:,3214,4637,http://forum.springsource.org/showthread.php?115876-3.1-RestTemplate-headers-not-sent-when-bufferRequestBody-is-false,,,,Sun JVM -> 1.6,"30/Nov/11 3:11 AM;arjen.poutsma;This should be fixed now, can you please try a recent (as of tonight) snapshot and try again?

Thanks,

Arjen","30/Nov/11 9:49 AM;rpfong;I downloaded org.springframework.web-3.1.0.CI-1162.jar and replaced only that file in my project but did not see any change in behavior.  Do I need to change any other jars?

I'd also like to provide you with a test case of some sort but I'm not sure what the best structure is in this case.  Please advise.  Thanks.",30/Nov/11 9:53 AM;rpfong;Apparently I did not grab the right file.  The file I tested was dated 30 Jul 2011 (from http://static.springsource.org/downloads/nightly/snapshot-download.php?project=SPR) although this is the nightly link from the Spring Downloads webpage.  Where is the correct non-Maven nightly snapshot download location?,"30/Nov/11 10:14 AM;rpfong;I located the correct build (1294) via the builds tab and tried it.  I ran into the exception below.  I reviewed the test you wrote and the interceptor has the same statement structure as my own.  This problem occurs whether I use the InterceptingClientHttpRequestFactory or the RestTemplate.interceptors property.

Exception in thread ""main"" org.springframework.web.client.ResourceAccessException: I/O error: cannot write to a URLConne
ction if doOutput=false - call setDoOutput(true); nested exception is java.net.ProtocolException: cannot write to a URLC
onnection if doOutput=false - call setDoOutput(true)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:453)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:401)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:199)
	at my.Main.main(Main.java:21)
Caused by: java.net.ProtocolException: cannot write to a URLConnection if doOutput=false - call setDoOutput(true)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:995)
	at org.springframework.http.client.SimpleStreamingClientHttpRequest.getBodyInternal(SimpleStreamingClientHttpRequest.ja
va:83)
	at org.springframework.http.client.AbstractClientHttpRequest.getBody(AbstractClientHttpRequest.java:44)
	at org.springframework.http.client.InterceptingClientHttpRequest$RequestExecution.execute(InterceptingClientHttpRequest
.java:88)
	at my.spring.SharedSecretClientHttpRequestInterceptor.intercept(SharedSecretClientHttpRequestInterceptor.java:24)
	at org.springframework.http.client.InterceptingClientHttpRequest$RequestExecution.execute(InterceptingClientHttpRequest
.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:67)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpReques
t.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:49)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:438)
	... 3 more
","30/Nov/11 9:35 PM;arjen.poutsma;Ok, thanks for the feedback. I will investigate further.","02/Dec/11 3:31 AM;arjen.poutsma;Ok, I made some more changes, and I think it's fixed now. Can you try a recent snapshot (as of tomorrow) again to see if it works for you?","09/Dec/11 10:38 AM;rpfong;G'day, Arjen.  I confirmed that the header is now sent without buffering via an InterceptingClientHttpRequestFactory as of build CI-1303.  Thank you!
",09/Dec/11 11:57 AM;arjen.poutsma;Great! Thanks for helping out.,14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13451|https://github.com/spring-projects/spring-framework/issues/13451]. ,,,,,,,,,,,,,,,
Support not (!) operator for profile selection,SPR-8728,39955,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,tmattsson,tmattsson,28/Sep/11 2:40 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/May/12 12:20 AM,3.1 M2,,,,,,,3.2 M1,,,,,Core,,,,7,bean-profiles,,,,,,,"It would be really helpful if the profile attribute could take names of profiles that all has to be active.

For instance:
{code}
<beans profile=""production,datacenter_us"">
    ...
</beans>
<beans profile=""production,datacenter_eu"">
    ...
</beans>
{code}

As for syntax there would need to be a notation that can express both OR and AND, possibly using | and ,

Like:
{code}
<beans profile=""staging|production"">
    ...
</beans>
{code}

Even better would be if the syntax was in line with other expressions such as SpEL.",,;27/May/12 2:29 AM;cbeams;9000,,,,,,,,,,9000,,,,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-09-28 16:38:52.914,12959,true,issuemaster(issuemaster),,,,0|i02n3r:,15452,14682,,,,,,"28/Sep/11 4:38 PM;cbeams;Hi Tobias,

I've been expecting this request :)

For the uninitiated, the semantics of {{<beans profile=""...""/>}} are such that comma-delimited values signify boolean OR, e.g. for {{<beans profile=""x,y"">}}, individual {{<bean>}} elements declared within will be registered if profile {{x}} *or* profile {{y}} are currently active.

To re-iterate your request, you would like to introduce additional boolean operations -- particularly AND -- to indicate that individual {{<bean>}} elements declared within will be registered only if profile {{x}} *and* profile {{y}} are both currently active.

Let me note at this point, that OR logic was selected as the only available operation and mapped to the comma (',') delimiter because it is the most reasonable default, i.e. what most users would expect in most situations, reads well, and also provides the most flexibility.  You can effectively achieve boolean AND logic simply by nesting {{<beans>}} elements, e.g.:

{code}
<beans profile=""x"">
    <beans profile=""y"">
        <bean id=""beanOnlyRegisteredIfXandYActive"" ... />
    </beans>
</beans>
{code}

With that said, we understand that this is not an ideal approach if indeed AND logic ends up being commonplace for bean definition profile users.  Therefore, we're open to implementing something here, but I would like to see additional votes and concrete use cases before doing so.  In the meantime, I hope that the simple alternative above can meet your needs more effectively.  Please feel free to rally support for this issue.  We'd like to hear from other users.

Also note that any such change must also be reflected in the {{@Profile}} annotation.  This is somewhat more tricky given that {{@Profile}}'s {{value}} attribute accepts a proper {{String}} array rather than a single comma-delimited string.  For example, {{@Profile(\{""x"", ""y""\})}} currently indicates that the annotated component should be registered if profile {{x}} *or* profile {{y}} are currently active.  Were we to introduce additional boolean operations, this would need to be reflected as an additional attribute to the annotation, e.g.: {{@Profile(value=\{""x"", ""y""\}, operation=AND)}}; or optionally this could be supported by parsing individual {{value}} strings in the same fashion as the {{<beans profile=""..."">}} attribute, e.g. {{@Profile(""x&&y"")}}, however this creates some ambiguity about the semantics of the following: {{@profile(\{""x&&y"", ""a||b""\})}}.  Does the latter mean either ""x and y"" *or* ""a or b""? Or does it mean ""x and y"" *and* ""a or b""? All of this would need to be defined and documented, without losing the initial simplicity of the comma-delimited OR approach.

As you can see, this is a seemingly simple request that can quickly spiral into complexity.  For that reason, and as mentioned above, I'd like to get more feedback before heading in any one direction.

Cheers

Chris","04/Jan/12 3:48 AM;klr8;Next to AND logic, NOT would also be very useful.
I just spend a few days introducing bean definition profiles in a large Spring based application. In quite a few places I had just two variants for a particular set of bean definitions: one that should normally be used, and one that should only be used in special situations. Right now your only option is using two profiles:

<beans profile=""normal"">...</beans>
<beans profile=""special"">...</beans>

The downside here is that you need to explicitly activate the 'normal' profile, which can be a bit of a pain. IMHO, it would be more elegant to be able to write something like this:

<beans profile=""!special"">...</beans>
<beans profile=""special"">...</beans>

If you find yourself in a special situation it makes sense that you need to activate the 'special' profile.","04/Jan/12 4:47 AM;cbeams;Hi Erwin,

For this particular use case, could the {{default}} profile meet your needs?

http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/core/env/Environment.html#getDefaultProfiles()

You may even rename the default profile to ""normal"" if you wish through the {{spring.profiles.default}} property or {{ConfigurableEnvironment#setDefaultProfiles}}

http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/core/env/AbstractEnvironment.html#DEFAULT_PROFILES_PROPERTY_NAME

http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/core/env/ConfigurableEnvironment.html#setDefaultProfiles(java.lang.String...)

","04/Jan/12 4:56 AM;klr8;Hey Chris,

I don't think the default profiles would cover my case. The problem is that we actually have a large number of bean definition profiles (a least 20) and the ""just two variants"" remark only applies to a few of those. For other cases I need to be explicit and select a particular variant. In other words: I have explicitly activated profiles (Environment.getActiveProfiles()), and as a result the default profiles are no longer considered (AbstractEnvironment.acceptsProfiles()).","09/May/12 10:15 PM;proggerpete;I'm with Erwin. I have several components that can run with a 'normal' or 'special' profile and I want to be able to switch between modes on each component individually. At the moment this requires me setting all profiles explicitly.

A not operator as Erwin suggested would be very helpful.","15/May/12 10:51 AM;cbeams;ok -- it certainly does look like there's demand for this change.  I'm moving the fixVersion to 3.2 M1 so that I can at least take a stab at a NOT operator.  I'll also look at the feasibility of full SpEL expression support, but at this point I would favor as simple as possible a set of changes for the reasons I initially listed above.

One thing that I'd appreciate feedback on:

The current semantics of comma-delimited profile strings is that the comma represents OR logic, e.g.:

{code}
<bean profile=""p1,p2"" ... />
{code}

indicates that this bean should be registered if {{p1}} is active OR {{p2}} is active.

Introducing a simple NOT ({{!}}) operator,
{code}
<bean profile=""p1,!p2"" ... />
{code}
would by extension indicate that this bean should be registered if {{p1}} is active OR {{p2}} is NOT active

This syntax would also allow for strange loopholes like the following:
{code}
<bean profile=""p1,!p1"" ... />
{code}
in which case the given bean would always be registered.  Harmless perhaps, but worth noting.

Does anyone see issues with the above?

",15/May/12 4:30 PM;proggerpete;@Chris : Looks good to me. =),"15/May/12 11:36 PM;klr8;I like the approach.
Since the NOT operator is well understood it is easy to reason through a profile specification like ""p1,!p2"" or even ""p1,!p1"" and understand when a set beans will be activated.
Furthermore, simply introducing the ""!"" prefix also works elegantly in @Profile.

So +1 from me.","27/May/12 12:20 AM;cbeams;{quote}
{noformat}
commit bcd44f3798ed06c0704d2a3564b8a9735e747e87
Author: Chris Beams <cbeams@vmware.com>
Date:   Sun May 27 08:10:40 2012 +0300

    Support not (!) operator for profile selection
    
    The following syntax is now supported
    
      <beans profile=""p1,!p2"">
    
      @Profile(""p1"", ""!p2"")
    
    indicating that the <beans> element or annotated component should
    be processed only if profile 'p1' is active or profile 'p2' is not
    active.
    
    Issue: SPR-8728
{noformat}
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13370|https://github.com/spring-projects/spring-framework/issues/13370]. ,,,,,,,,,,,,,,
DefaultResponseErrorHandler IOException Bug,SPR-8713,39851,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,ebarlas,ebarlas,20/Sep/11 3:03 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/Sep/11 1:18 AM,3.0.5,,,,,,,3.0.7,3.1 RC1,,,,Web,,,,0,,,,,,,,"DefaultResponseErrorHandler.handleError throws IOException for HTTP error responses (for example with 4xx, 5xx status codes) with no content.  RestTemplate invocations with error responses will throw ResourceAccessExceptions rather than HttpClientErrorException, HttpServerErrorException, and RestClientException.  This breaks client code that relies on specific exception behavior.

To reproduce, (1) implement a simple spring REST client that sends a request and (2) configure a server that sends error responses with no content.


Client example: 

{code}
import org.springframework.http.HttpMethod;
import org.springframework.web.client.RestTemplate;

public class Main {

    public static void main(String[] args) {
        RestTemplate restTemplate = new RestTemplate();
        restTemplate.exchange(""http://localhost:8080"", HttpMethod.GET, null, null);
    }

}
{code}

Server example using netcat:

{noformat}
$ nc -l 8080
GET / HTTP/1.1
User-Agent: Java/1.6.0_24
Host: localhost:8080
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive

HTTP/1.1 400 Bad Request
Content-Length: 0
{noformat}

Result:

{noformat}
Sep 20, 2011 2:58:41 PM org.springframework.web.client.RestTemplate handleResponseError
WARNING: GET request for ""http://localhost:8080"" resulted in 400 (Bad Request); invoking error handler
Exception in thread ""main"" org.springframework.web.client.ResourceAccessException: I/O error: Server returned HTTP response code: 400 for URL: http://localhost:8080; nested exception is java.io.IOException: Server returned HTTP response code: 400 for URL: http://localhost:8080
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:453)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:401)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:377)
	at com.citrix.queue.support.Main.main(Main.java:10)
Caused by: java.io.IOException: Server returned HTTP response code: 400 for URL: http://localhost:8080
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1491)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1485)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1139)
	at org.springframework.http.client.SimpleClientHttpResponse.getBody(SimpleClientHttpResponse.java:77)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:72)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:486)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:443)
	... 3 more
Caused by: java.io.IOException: Server returned HTTP response code: 400 for URL: http://localhost:8080
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1436)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at org.springframework.http.client.SimpleClientHttpResponse.getStatusCode(SimpleClientHttpResponse.java:47)
	at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:45)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:439)
	... 3 more
{noformat}",,;27/Sep/11 1:16 AM;arjen.poutsma;1260,,,,,,,,,,1260,,,,1260,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-09-27 00:53:50.862,11026,true,issuemaster(issuemaster),,,,0|i00os7:,4060,5413,,,,,Mac OS X JVM -> 1.6,27/Sep/11 12:53 AM;arjen.poutsma;Added formatting,27/Sep/11 1:18 AM;arjen.poutsma;Fixed in HEAD,"01/Dec/11 5:34 AM;juergen.hoeller;Backported to 3.0.7, for release in late December.

Juergen",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13355|https://github.com/spring-projects/spring-framework/issues/13355]. ,,,,,,,,,,,,,,,,,,,,
UriUrils.decode() not properly rejecting invalid escaped URLs,SPR-8706,39811,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,peger,peger,18/Sep/11 9:23 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/Sep/11 1:55 AM,3.0.6,,,,,,,3.1 RC1,,,,,Core,,,,0,,,,,,,,"UriUtils is not properly validating that a %XX is a valid hex code, leading to invalid characters in the encoded output. Possible security implications unknown.",,;27/Sep/11 1:55 AM;arjen.poutsma;180,,,,,,,,,,180,,,,180,,,,,,,,,,,,,,18/Sep/11 9:23 PM;peger;x.diff;https://jira.spring.io/secure/attachment/18813/x.diff,,,,,,,,,,,,,9936000,,,,,2011-09-27 01:55:28.458,10915,true,issuemaster(issuemaster),,,,0|i00pwn:,4242,5541,,,,,,27/Sep/11 1:55 AM;arjen.poutsma;Fixed in HEAD,14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13348|https://github.com/spring-projects/spring-framework/issues/13348]. ,,,,,,,,,,,,,,,,,,,,,,
Reduce log level to DEBUG when @TestExecutionListeners is not present,SPR-8645,39353,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Complete,sbrannen,john.dunlap,john.dunlap,26/Aug/11 3:37 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,10/Aug/12 6:20 AM,3.0.6,,,,,,,3.2 M2,,,,,Test,,,,0,,,,,,,,"h4. Overview

Example log output:

{panel}org.springframework.test.context.TestContextManager - @TestExecutionListeners is not present for class [class <classname>]: using defaults.{panel}

My logs are getting cluttered by messages like this because it gets displayed after each test is run. I don't need test execution listeners in my use case so I find myself trying to find ways to silence this message.

h4. Goal

Consider changing the log level of this message from {{INFO}} to {{DEBUG}} or {{TRACE}}.
",,,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-10 06:20:52.237,431,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i02n6n:,15465,14693,,,,,Sun JVM -> 1.6,"10/Aug/12 6:20 AM;sbrannen;Completed as described in the message for [GitHub commit 5710cf5ed29139e94853f3d14124eb100a924b82|https://github.com/SpringSource/spring-framework/commit/5710cf5ed29139e94853f3d14124eb100a924b82].

{quote}
*Reduce log level to DEBUG when @TELs isn't present*

The default set of TestExecutionListeners is sufficient in most
integration testing scenarios; however, the TestContextManager
nonetheless logs an INFO message if the @TestExecutionListeners
annotation is not present on an integration test class.

In order to avoid flooding the logs with messages about the absence of
@TestExecutionListeners, this commit reduces the log level for such
messages from INFO to DEBUG.
{quote}",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13287|https://github.com/spring-projects/spring-framework/issues/13287]. ,,,,,,,,,,,,,,,,,,,,,,
XMLEventStreamReader.getText() fails for COMMENT and ENTITY_REFERENCE events,SPR-8457,38417,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,edalquist,edalquist,15/Jun/11 11:01 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,17/Jun/11 2:11 AM,3.0.5,,,,,,,3.1 RC1,,,,,Core,,,,0,,,,,,,,"XMLStreamReader.getText() specifies the following:

  /**
   * Returns the current value of the parse event as a string,
   * this returns the string value of a CHARACTERS event,
   * returns the value of a COMMENT, the replacement value
   * for an ENTITY_REFERENCE, the string value of a CDATA section,
   * the string value for a SPACE event,
   * or the String value of the internal subset of the DTD.
   * If an ENTITY_REFERENCE has been resolved, any character data
   * will be reported as CHARACTERS events.
   * @return the current text or null
   * @throws java.lang.IllegalStateException if this state is not
   * a valid text state.
   */


The current implementation only works for CHARACTERS, CDATA, & SPACE events which all use the Characters XMLEvent class. COMMENT and ENTITY_REFERENCE events use a different class and fail the isCharacters() check in the existing code:
{code}
    public String getText() {
        if (event.isCharacters()) {
            return event.asCharacters().getData();
        }
        else {
            throw new IllegalStateException();
        }
    }
{code}


The following will not fail and is much closer to correct than the existing implementation though as the TODO notes it is still not 100% correct as getText must return resolved entity references. I feel like this fallback approach is at least a decent default and first pass at getting this issue fixed.
{code}
    public String getText() {
        if (event.isCharacters()) { //Handles CHARACTERS, CDATA, & SPACE
            return event.asCharacters().getData();
        }
        else if (event.getEventType() == XMLEvent.COMMENT) {
            return ((Comment) event).getText();
        }
        else if (event.getEventType() == XMLEvent.ENTITY_REFERENCE) {
            //TODO this should be the replacement value, not sure how to resolve that
            return ((EntityReference) event).getName();
        }
        else {
            throw new IllegalStateException();
        }
    }
{code}


This bug is a problem for any use of the XMLEventStreamReader where a comment exists in the parsed document.",,;17/Jun/11 2:09 AM;arjen.poutsma;1020,,,,,,,,,0,1020,,,0,1020,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-06-17 00:37:04.536,1009,true,issuemaster(issuemaster),,,,0|i00pw7:,4240,5540,,,,,Sun JVM -> 1.6,"17/Jun/11 2:11 AM;arjen.poutsma;Fixed, though I did not include the entity reference part. I don't know how to obtain the replacement value either, and I'd rather see an IllegalStateException for entity references than a illegal value (eg. the name).","17/Jun/11 7:17 AM;edalquist;Sounds good, I'm fine with not handling entity references. Any chance of this getting fixed in the 3.0 branch?",17/Jun/11 7:21 AM;arjen.poutsma;@Eric: this won't be fixed in the 3.0 branch.,14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13103|https://github.com/spring-projects/spring-framework/issues/13103]. ,,,,,,,,,,,,,,,,,,,,
SpringOXM CastorMarshaller tests,SPR-8453,38401,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jnarloch,jnarloch,14/Jun/11 7:36 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,15/Jun/11 4:45 AM,3.1 M2,,,,,,,3.1 RC1,,,,,OXM,,,,0,CastorXML,SpringOXM,,,,,,"I had been working with Werner Guttman lead of the Castor XML project on ideas for extending the Spring OXM for current Castor version. I've prepared a set of patches with additional properties for one of the previously resolved issues (SPR-8295 and SPR-8296).

You should find two patches attached:
SpringOXM MarshallerTests 14.06.2011.patch 
SpringOXM UnmarshallerTests 14.06.2011.patch",,;15/Jun/11 4:07 AM;arjen.poutsma;1380,;15/Jun/11 4:45 AM;arjen.poutsma;60,,,,,,,,0,1440,,,0,1440,,,,,,,,,,,,,,15/Jun/11 4:41 AM;jnarloch;SpringOXM CastorMarshallerTest with CastorObject.patch;https://jira.spring.io/secure/attachment/18341/SpringOXM+CastorMarshallerTest+with+CastorObject.patch,14/Jun/11 7:36 AM;jnarloch;SpringOXM MarshallerTests 14.06.2011.patch;https://jira.spring.io/secure/attachment/18339/SpringOXM+MarshallerTests+14.06.2011.patch,14/Jun/11 7:36 AM;jnarloch;SpringOXM UnmarshallerTests 14.06.2011.patch;https://jira.spring.io/secure/attachment/18340/SpringOXM+UnmarshallerTests+14.06.2011.patch,,,,,,,,,,,9936000,,,,,2011-06-15 04:05:12.821,1012,true,issuemaster(issuemaster),,,,0|i00pvz:,4239,5539,,,,,Sun JVM -> 1.6,"15/Jun/11 4:05 AM;arjen.poutsma;I've applied the patches, but unfortunately some tests fail. I haven't investigated why they fail, but instead marked them with @Ignore. 

Could you please supply another patch so that these tests succeed?","15/Jun/11 4:07 AM;jnarloch;That was quite unexpected, becouse I check that the test run successfully.

 I will look into it.

","15/Jun/11 4:12 AM;arjen.poutsma;Well, it could be that the CastorObject was missing from the patch. I simply created it from scratch, but I'm not sure it's correct.","15/Jun/11 4:41 AM;jnarloch;Sorry, for that I forgot about it. Attached updated patch.

All tests from CastorMarshallerTests should work now, the one test from CastorUnmarshaller fails when Castor XML 1.3.2 is used, I did hovewer work with Castor XML 1.2.0, so I will report this as a bug",15/Jun/11 4:45 AM;arjen.poutsma;That seems to have done the trick. Thanks!,"15/Jun/11 4:52 AM;jnarloch;Ok, thanks Arjen for help.",14/Jan/19 8:40 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13099|https://github.com/spring-projects/spring-framework/issues/13099]. ,,,,,,,,,,,,,,,,,
3.1.0.M2 update of the RestTemplate for Apache HTTP Components will default to sending 2 requests on authentication and doesn't support HttpContext parameters without significant extention/rewrite,SPR-8367,38097,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,davidparks21,davidparks21,24/May/11 12:38 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Dec/11 5:22 PM,3.1 M2,,,,,,,3.1 GA,,,,,Web,,,,3,,,,,,,,"Reference JIRA: https://jira.springsource.org/browse/SPR-6180?focusedCommentId=66682#comment-66682


Any use cases which require an HttpContext attribute to be set aren't covered in this implementation, and the extensions required make the whole thing so messy as to make using the Rest Template more of a burden than a benefit. Here is the particular case that I've been fussing with today to little avail, setting preemptive authentication (i.e. send basic authentication headers by default rather than performing 2 requests to authenticate):

http://hc.apache.org/httpcomponents-client-ga/tutorial/html/authentication.html#d4e1023

The problem being that the RestTemplate implementation as it is has no support for setting HttpContext parameters (the template calls the Http.execute(HttpUriRequest) which uses only the non-accessible default HttpContext), there aren't any good ways to set the default context parameters on the HttpClient in 4.x Apache HTTP Components. You end up needing to extend HttpClient to provide for default HttpContext params on the HttpClient object and the whole thing just becomes a spaghetti mess from there making the template more pain than pleasure.
",,;06/Dec/11 5:22 PM;arjen.poutsma;1140,,,,,,,,,,1140,,,,1140,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-06-14 01:53:41.222,1054,true,issuemaster(issuemaster),,,,0|i00idr:,3023,4496,,,,,,"24/May/11 1:42 AM;davidparks21;Incidentally, I just realized how simple this is with 3.x:

HttpClient client = new HttpClient();
client.getParams().setAuthenticationPreemptive(true);
Credentials defaultcreds = new UsernamePasswordCredentials(""username"", ""password"");
client.getState().setCredentials(new AuthScope(""www.host.com"", 443, AuthScope.ANY_REALM), defaultcreds);
RestTemplate restTemplate = new RestTemplate(new CommonsClientHttpRequestFactory(client));

It seems like Commons HTTP 4 went just a tad bit abstraction happy and made things a bit more difficult because of it.

Anyway, I just want to emphasize that the main use case I'm concerned with here is enabling preemptive authentication. I don't see much sense in not presenting credentials on the first request in context of a REST service.","14/Jun/11 1:53 AM;arjen.poutsma;@David,

I feel your pain, but it is a bit unclear to me what exactly do you want us to do?

Do you want to be able to set a HttpContext as a property of the HttpComponentsClientHttpRequestFactory?","14/Jun/11 3:02 AM;davidparks21;That's a fine question indeed Arjen.

Let's see, there's a few things at issue here. One, HttpContext params are more of a runtime thing in the new HTTP Components, it's designed so that you can have different context params per request. Not something that's really logical in the RestTemplate context. 

But the meat of this issue is that pre-emptive authentication isn't easily configured (as it was in commons-http-3.0).

One quick-fix solution that I think is reasonable in the case of the RestTemplate would be to just enabled pre-emptive authentication for us in the RestTemplate's usage of http components. It's a natural default in the context of REST services, and I can't see many other likely use cases for the ContextParams.

A bigger, harrier but all encompassing solution: Provide methods within the RestTemplate4CommonsHttp (sorry, forgot the new name) for properly configuring HttpContext params that will be used at request execution time.

A middle of the road solution might be to simply give us access to the HttpContext params that you will ultimately use in the request. This way we can configure pre-emptive authentication (or other context param features) at creation time similar to how we might in 3.0. This solution is slightly muddied because there are some hard coded default params in the default context that need to be duplicated in an odd sort of way (sorry for the fuzzy description, it's been some weeks since I did this and it was about that point that I threw up my hands and went back to 3.0)","13/Jul/11 7:54 AM;olegk;@David,

> It seems like Commons HTTP 4 went just a tad bit abstraction happy and made things a bit more difficult because of it.

As far pre-emptive authentication is concerned it used to be a major source of security related issues prior to HttpClient 4.x. People used to turn it on blindly and often ended up sending their corporate credentials to external sites by mistake without fully realising the implications of their action. HttpClient 4.x forces people to do more work, but at the same time it makes them configure pre-emptive selectively and also enables the use of more secure schemes such as DIGEST, not just inherently insecure BASIC.

@Arjen 

> Do you want to be able to set a HttpContext as a property of the HttpComponentsClientHttpRequestFactory?

A setter for AuthCache should be sufficient as long as HttpComponentsClientHttpRequestFactory sticks it into the local HTTP context prior to execution of the request.

Oleg
  ","06/Dec/11 5:24 PM;arjen.poutsma;I've opted to add a createHttpContext method to HttpComponentsClientHttpRequestFactory, and passing on the created HttpContext (if any) to the request. This seemed more flexible than having just a AuthCache setter, as the context can contain more than just a authentication cache.

","20/Feb/12 8:56 AM;eugenparaschiv;Hi, 
I'm trying to figure out how to use the new infrastructure (with most examples I could find targeting the old one). I'm doing something along the lines of: 
DefaultHttpClient newHttpClient = new DefaultHttpClient();
Credentials creds = new UsernamePasswordCredentials( username, password );
newHttpClient.getCredentialsProvider().setCredentials( new AuthScope( host, port, AuthScope.ANY_REALM ), creds );
HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory( newHttpClient );
restTemplate.setRequestFactory( requestFactory );

but the Authentication headers do not seem to be in the request. Is there a working example of configuring RestTemplate with HttpClient (4.x) and Digest Auth?
Thanks. ",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#13014|https://github.com/spring-projects/spring-framework/issues/13014]. ,,,,,,,,,,,,,,,,,
Ability to specify ResourceResolver property for SchemaFactory in Jaxb2Marshaller,SPR-8349,37275,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,emenaceb,emenaceb,04/Apr/11 7:19 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Dec/11 4:56 PM,,,,,,,,3.1 GA,,,,,OXM,,,,0,,,,,,,,"In some situations, it's neccesary to specify a ResourceResolver for SchemaFactory  in order to resolve external references. 

For example, 
We need to load a schema with a imported schema 
but the location of the source of the imported one
is not accesible from the network 
but it's at classpath.




",,;06/Dec/11 4:56 PM;arjen.poutsma;300,,,,,,,,,,300,,,,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-05-19 01:47:01.728,1057,true,issuemaster(issuemaster),,,,0|i02pif:,15842,15012,,,,,,"19/May/11 1:47 AM;arjen.poutsma;Moved to SPR, the new home of OXM.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12996|https://github.com/spring-projects/spring-framework/issues/12996]. ,,,,,,,,,,,,,,,,,,,,,,
Spring OXM CastorMarshaller unmarshalling methods,SPR-8341,38004,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jnarloch,jnarloch,17/May/11 6:17 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,15/Jun/11 4:10 AM,,,,,,,,3.1 RC1,,,,,OXM,,,,0,CastorXML,,,,,,,"I had been working with Werner Guttman lead of the Castor XML project on ideas for extending the Spring OXM for current Castor version. I've prepared a patch with change made to CastorMarshaller unmarshalling methods, so that they will use Castor API and 'native' support for StAX.

You will find two patches attached, one with changes made in implementation and second with changes made in ivy build file and manifest file.

Before resolving this task, could You please resolve the issue in EBR (https://issuetracker.springsource.com/browse/EBR-747).
So that the Spring OXM could use the current Castor version (1.3.2)",,;15/Jun/11 4:10 AM;arjen.poutsma;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,17/May/11 6:17 AM;jnarloch;SpringOXM Build.patch;https://jira.spring.io/secure/attachment/18231/SpringOXM+Build.patch,21/May/11 3:48 AM;jnarloch;SpringOXM Unmarshalling methods - 21.05.11.patch;https://jira.spring.io/secure/attachment/18247/SpringOXM+Unmarshalling+methods+-+21.05.11.patch,17/May/11 6:17 AM;jnarloch;SpringOXM Unmarshalling methods.patch;https://jira.spring.io/secure/attachment/18230/SpringOXM+Unmarshalling+methods.patch,,,,,,,,,,,9936000,,,,,2011-06-15 04:10:25.704,1060,true,issuemaster(issuemaster),,,,0|i00pvr:,4238,5538,,,,,Sun JVM -> 1.6,21/May/11 3:48 AM;jnarloch;Attached patch that won't cause conflict after SPR-8295 and SPR-8296 has been put into head revision.,15/Jun/11 4:10 AM;arjen.poutsma;Patch applied. Thanks!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12989|https://github.com/spring-projects/spring-framework/issues/12989]. ,,,,,,,,,,,,,,,,,,,,,
Allow AnnotationTypeFilter to consider interfaces as well,SPR-8336,37967,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,juergen.hoeller,olivergierke,olivergierke,13/May/11 11:41 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,16/Jul/12 10:30 AM,3.0.5,3.1 M1,,,,,,3.1 GA,,,,,Core,,,,0,,,,,,,,Currently {{AnnotationTypeFilter}} invokes the constructor of {{AbstractTypeHierarchyTraversingFilter}} setting {{considerInterfaces}} to {{false}}. This probably makes sense in most cases. However there might be {{BeanDefinitionParser}} implementations that declare a {{FactoryBean}} creating a proxy for discovered interfaces. So it would be cool if we could add a constructor to pass in a {{boolean}} to enable interface discovery as well.,,;13/May/11 11:23 PM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,DATACMNS-37,,,,,,,,,,,,13/May/11 11:42 AM;olivergierke;filter.patch;https://jira.spring.io/secure/attachment/18225/filter.patch,13/May/11 11:28 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18226/mylyn-context.zip,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:58.518,764,true,issuemaster(issuemaster),,,,0|i00xmn:,5493,6787,,,,,,13/May/11 11:42 AM;olivergierke;Added patch for review. Have that commited locally so that I could push it as is.,"13/May/11 11:28 PM;olivergierke;Applied the path with slight polishment (removed the invalid comment from the test case) as it was reviewed by Chris. Would be cool if we could backport it to 3.0.6 even if it's no bugfix in a strict sense. I am unsure currently when Spring Data will be able to move to 3.1, as requiring the new major version will probably make Spring Data adoption a bit harder.",13/May/11 11:28 PM;olivergierke;- duplicate comment -,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12984|https://github.com/spring-projects/spring-framework/issues/12984]. ,,,,,,,,,,,,,,,,,,,,
Spring OXM schema improvement for CastorMarshaller,SPR-8309,37817,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jnarloch,jnarloch,09/May/11 1:40 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,14/Jun/11 6:47 AM,3.1 M1,,,,,,,3.1 RC1,,,,,OXM,,,,1,CastorXML,,,,,,,"I had been working with Werner Guttman lead of the Castor XML project on ideas for extending the Spring OXM for current Castor version. I've prepared a set of patches with change made to Spring OXM schema, that will allow configuring the Castor marshaller using oxm namespace.

This propsitions will allows to define the marshaller like below i.e.:
<oxm:castor-marshaller id=""marshaller""
target-class=""org.springframework.ws.samples.airline.schema.Flight""
target-package=""org.springframework.ws.samples.airline.schema""
mapping-location=""classpath:mapping.xml""/>

You will find three patches attached:
SpringOXM Xml Schema - with changes made in the xsd.
SpringOXM Xml Schema Implmentation - that contains simple change made in CastorMarshaller and definition of CastorMarshallerBeanDefinitionParser.
SpringOXM Xml Schema Tests - with tests for CastorMarshallerBeanDefinitionParser",,;14/Jun/11 6:46 AM;arjen.poutsma;1440,,,,,,,,,0,1440,,,0,1440,,,,,,,,,,,,,,21/May/11 4:29 AM;jnarloch;SpringOXM Xml Schema 21.05.11.patch;https://jira.spring.io/secure/attachment/18248/SpringOXM+Xml+Schema+21.05.11.patch,21/May/11 4:29 AM;jnarloch;SpringOXM Xml Schema Implementation 21.05.11.patch;https://jira.spring.io/secure/attachment/18249/SpringOXM+Xml+Schema+Implementation+21.05.11.patch,22/May/11 3:58 AM;jnarloch;SpringOXM Xml Schema Implementation 22.05.11.patch;https://jira.spring.io/secure/attachment/18255/SpringOXM+Xml+Schema+Implementation+22.05.11.patch,09/May/11 1:40 AM;jnarloch;SpringOXM Xml Schema Implementation.patch;https://jira.spring.io/secure/attachment/18128/SpringOXM+Xml+Schema+Implementation.patch,21/May/11 4:29 AM;jnarloch;SpringOXM Xml Schema Tests 21.05.11.patch;https://jira.spring.io/secure/attachment/18250/SpringOXM+Xml+Schema+Tests+21.05.11.patch,09/May/11 1:40 AM;jnarloch;SpringOXM Xml Schema Tests.patch;https://jira.spring.io/secure/attachment/18129/SpringOXM+Xml+Schema+Tests.patch,09/May/11 1:40 AM;jnarloch;SpringOXM Xml Schema.patch;https://jira.spring.io/secure/attachment/18127/SpringOXM+Xml+Schema.patch,,,,,,,9936000,,,,,2011-06-14 06:47:07.017,1067,true,issuemaster(issuemaster),,,,0|i00pvj:,4237,5537,,,,,Sun JVM -> 1.6,"21/May/11 4:29 AM;jnarloch;I uploaded updated patches, that won't cause conflict with CastorMarshaller. I had also reconsidered the previouse idea and decided to add encoding to attribute definition.","22/May/11 3:58 AM;jnarloch;I noticed that I could simplyfile the implementation and use AbstractSimpleBeanDefinitionParser instead. So attached the modified patch.

To sum up, could You please use:
SpringOXM Xml Schema 21.05.11.patch
SpringOXM Xml Schema Implementation 22.05.11.patch
SpringOXM Xml Schema Tests 21.05.11.patch",14/Jun/11 6:47 AM;arjen.poutsma;Fixed. Thanks for the patches!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12958|https://github.com/spring-projects/spring-framework/issues/12958]. ,,,,,,,,,,,,,,,,,,,,
Extension for CastorMarshaller - additional unmarshaller properties,SPR-8296,37767,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jnarloch,jnarloch,05/May/11 9:08 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,19/May/11 7:05 AM,3.1 M1,,,,,,,3.1 M2,,,,,OXM,,,,1,CastorXML,,,,,,,"I had been working with Werner Guttman lead of the Castor XML project on ideas for extending the Spring OXM for current Castor version.
I've prepared a patch with additional ""internal"" Castor properties that we would like to exposed by CastorMarshaller.
We willing to prepare a set of other enhancement in future.

This issue is related to SPR-8295.
This time I've attached two patches with changes for Castor Unmarshaller class used internally by Spring's CastorMarshaller.",,;19/May/11 7:01 AM;arjen.poutsma;1500,,,,,,,,,0,1500,,,0,1500,,,,,,,,,,,,,,05/May/11 9:08 AM;jnarloch;SpringOXMCastorUnmarshaller.patch;https://jira.spring.io/secure/attachment/18114/SpringOXMCastorUnmarshaller.patch,05/May/11 9:08 AM;jnarloch;SpringOXMCastorUnmarshallerTests.patch;https://jira.spring.io/secure/attachment/18115/SpringOXMCastorUnmarshallerTests.patch,,,,,,,,,,,,9936000,,,,,2011-05-19 07:05:35.767,5092,true,issuemaster(issuemaster),,,,0|i03pjj:,21680,18183,,,,,Sun JVM -> 1.6,"19/May/11 7:05 AM;arjen.poutsma;Patch applied. Some minor changes:

* setClassloader was removed in favor of making the CastorMarshaller implement BeanClassLoaderAware. I think it's very unlikely that users will specify a classloader in their application context. By implementing BeanClassLoaderAware, the marshaller will use the classloader used by the bean factory, which I think is the desired behavior.
* as with SPR-8295, the test patch was not applied, for the same reasons described in that issue.","19/May/11 7:07 AM;jnarloch;Thanks Arjen, I appreciate Your help.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12944|https://github.com/spring-projects/spring-framework/issues/12944]. ,,,,,,,,,,,,,,,,,,,,,
Extension for CastorMarshaller - additional marshaller properties,SPR-8295,37766,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jnarloch,jnarloch,05/May/11 9:02 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,19/May/11 6:34 AM,3.1 M1,,,,,,,3.1 M2,,,,,OXM,,,,1,CastorXML,,,,,,,"I had been working with Werner Guttman lead of the Castor XML project on ideas for extending the Spring OXM for current Castor version.
I've prepared a patch with additional ""internal"" Castor properties that we would like to exposed by CastorMarshaller.
We willing to prepare a set of other enhacment in future.

I've attchet two patches one with changes made in CastorMarshaller, second with unit tests for those additional properties.
The mentioned patches contain properties specific for Castor Marshaller class used internally by Spring's CastorMarshaller.
",,;19/May/11 6:34 AM;arjen.poutsma;1440,,,,,,,,,0,1440,,,0,1440,,,,,,,,,,,,,SPR-7442,05/May/11 9:02 AM;jnarloch;SpringOXMCastorMarshaller.patch;https://jira.spring.io/secure/attachment/18112/SpringOXMCastorMarshaller.patch,05/May/11 9:02 AM;jnarloch;SpringOXMCastorMarshallerTests.patch;https://jira.spring.io/secure/attachment/18113/SpringOXMCastorMarshallerTests.patch,,,,,,,,,,,,9936000,,,,,2011-05-19 06:35:14.264,1699,true,issuemaster(issuemaster),,,,0|i03pfb:,21661,18144,,,,,Sun JVM -> 1.6,"19/May/11 6:35 AM;arjen.poutsma;Patch applied. The minor changes I made:

* marshallAsDocument was renamed to marshalAsDocument, as per the Castor method
* javadoc reference to setSupressXMLDeclaration was removed, as I don't think that method called anywhere. I am aware that setSuppressXMLDeclaratian is essentially the reverse of marshalAsDocument; I just don't think it's necessary to put this in CastorMarshaller javadoc.
* the test patch was not applied, as the only thing it seemed to do was validate whether a setter method actually changed a field. I'd be more interested in tests that actually verify the *behavior* of the new properties. For instance, a test method which checks whether setMarshalAsDocument(false) actually gets rid of the XML declaration.
",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12943|https://github.com/spring-projects/spring-framework/issues/12943]. ,,,,,,,,,,,,,,,,,,,,,,
SimpleClientHttpResponse disconnects the underlying HttpURLConnection when closing,SPR-8123,37137,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Duplicate,bclozel,juan.farre,juan.farre,31/Mar/11 8:58 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,04/Apr/16 5:06 PM,3.0.5,,,,,,,,,,,,Web,,,,0,,,,,,,,"I've noticed that SimpleClientHttpResponse.close() (which it is documented you MUST always call it after completing the request) invokes HttpURLConnection.disconnect() for the wrapped connection.
JDK javadoc for HttpURLConnection states the following:

Calling the close() methods on the InputStream or OutputStream of an HttpURLConnection after a request may free network resources associated with this instance but has no effect on any shared persistent connection. Calling the disconnect() method may close the underlying socket if a persistent connection is otherwise idle at that time.

So, when you close SimpleClientHttpResponse you may be disconnecting the underlying socket for a connection that could otherwise be reused (not the HttpURLConnection instance itself, but the underlying socket connection).
I believe close should close any open InputStreams (if either HttpURLConnection.getErrorStream() or URLConnection.getInputStream() were invoked), but not invoke the disconnect method.
If such functionality is required to be available for users of SimpleHttpUrlConnection, then I believe a new method should be added (for example disconnect()) that is not required to be called.

Thanks,

Juan",,;07/Jun/11 2:37 AM;arjen.poutsma;10140,,,,,,,,,0,10140,,,0,10140,,,,,,,SPR-14040,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-03-31 23:16:55.72,5094,true,issuemaster(issuemaster),,,,0|i00pb3:,4145,5477,,,,,,31/Mar/11 11:16 PM;cbeams;Arjen - you implemented the code in question. Can you comment?,"06/Jun/11 5:51 AM;arjen.poutsma;While I do agree that closing the underlying connection for every RestTemplate call is a bit overaggressive, I don't see a good alternative. Closing the body stream, as suggested, is simply not good enough, as I believe this will keep the underlying socket open indefinitely.

That said, it's rather hard to find good documentation about the way HttpUrlConnection actually works. The javadoc only contains hollow phrases with 'may close' and 'may disconnect', which is completely useless IMO.

Also, we should consider the fact that Google App Engine has their own implementation of HttpURLConnection, and that there is no guarantee that GAE deals with reusing sockets the same 'intelligent' way the SUN JDK does. By calling disconnect(), we at least know for sure that everything is properly cleaned up.","06/Jun/11 9:21 AM;juan.farre;I understand your point and the fact that calling disconnect in the close method is a save way of avoiding connection leaks.
But I'd like to comment a couple more details:

HttpURLConnection javadoc starts referring to HTTP spec for details. So, when it talks about persistent connections, it's referring to the definition in HTTP spec and its explanation of the standard-compliant behaviour regarding to them (using persistent connections is, in fact, the default for HTTP 1.1 and hence, calling disconnect for every request, wouldn't be standard-compliant strictly speaking).

This also implies that an idle persistent connection can always be explicitly closed in two possible ways:
- Calling disconnect, which, following the javadoc, ""Indicates that other requests to the server are unlikely in the near future"", and could be done through a specialized method of SimpleHttpUrlConnection.
- Just sending ""Connection: close"" header in any request or response, as HTTP standard specifies.

There are more details about persistent connections, their importance and their implementation in java.net doc, which you probably have already read:

http://download.oracle.com/javase/6/docs/technotes/guides/net/http-keepalive.html

It also gives interesting guidelines for applications using this API.
One of the many interesting points in that documentation is that you can control keep-alive behavior via system properties http.keepAlive and http.maxConnections. This gives users of HttpURLConnection (or SimpleHttpUrlConnection) the hability to change default behavior if they wish. Having SimpleHttpUrlConnection.close() call disconnect() gives no chance to change default behavior, unless you do the bad practice of not following the specs strictly and just not calling close().

As a last point, if google implementation does not manage connections ""well enough"" it must mean that they fail to follow HTTP and/or HttpURLConnection specs. This would be a bug and I don't think spring API implementation should be conditioned by a buggy underlaying implementation (at most, im my oppinion, it could include a configurable workaround).

For my concrete needs, having close() call disconnect() makes SimpleHttpUrlConnection completely unusable, as I could never reuse connections, and then I must use apache-commons implementation.

Of course, you have the last word about this, and for sure you know better the needs (and politics) of spring, so I accept that your final decission be ""won't fix"".

Thanks a lot,

Juan

PS: By the way, is there intention of implementing a new wrapper for the new apache HTTP-client implementation?","07/Jun/11 2:34 AM;arjen.poutsma;@Juan

I am aware of HTTP 1.1 persistent connections, and the settings HttpURLConnection has to enable it. What I am struggling with, however, is to ensure that the TCP connection is properly closed in the end. As far as I can tell, the only way to ensure that is to use disconnect(), so that's what I do.

Apache commons and the new HTTP client (that will be in 3.1 M2) solve this by having a separate connection factory, which I can close as the application context is closed. I could write such a connection factory object for the HttpURLConnection, but since we already have superior alternatives in the form of the Apache clients, I don't see the point. 

Regarding the Google App Engine: reports about key differences between the GAE and JDK HttpURLConnection have already been made. For instance, see SPR-7146, which could definitely be labeled as a GAE bug, as it doesn't follow the HttpURLConnection javadoc. Doing so wouldn't help Spring users at all, however, so I wrote a workaround.

Thanks for the feedback, and do let me know if you know of a way to solve the issues I've described above.





","07/Jun/11 3:23 AM;juan.farre;Thanks, now I understand the problem much better :)
The only idea that comes to my mind that could ensure that TCP connections are properly closed in the end and looks straightforward enough to implement is to keep WeakReferences to all SimpleHttpUrlConnection instances and have a thread invoke disconnect for the underlaying HttpURLConnections when these references have been cleared by the garbage collector.
But you're right that this might not be worth the effort having Apache alternatives.
Thanks again for your time and interest.",04/Apr/16 5:06 PM;bclozel;This has been resolved as part of SPR-14040,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12775|https://github.com/spring-projects/spring-framework/issues/12775]. ,,,,,,,,,,,,,,,,,
HttpClientErrorException should provide access to response headers,SPR-7938,36160,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,julian.reschke@gmx.de,julian.reschke@gmx.de,03/Feb/11 10:12 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,01/Jun/12 6:22 AM,,,,,,,,3.2 M2,,,,,Web,,,,2,pull-request-submitted,,,,,,,"It would be good if HttpClientErrorException would not only provide access to the response body but also to response headers,",,;01/Jun/12 8:06 AM;cbeams;7200,,,,,,,,,,7200,,,,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-02-04 00:30:05.493,1141,true,issuemaster(issuemaster),,,,0|i012of:,6311,7372,,,,,,04/Feb/11 12:30 AM;arjen.poutsma;Moved to SPR.,31/May/12 10:49 AM;sandrews;https://github.com/SpringSource/spring-framework/pull/86,"01/Jun/12 8:50 AM;david_syer;I'm not sure if anyone tested this in a live system, but there is likely to be a nasty problem waiting for anyone using it out of the box.  I think that the default implementation of HttpClientResponse (the JDK one) barfs if you try and get the headers from an error response, or even a non-OK one in my experience.  It might be a good idea to be defensive about this line: 

{code}
HttpHeaders headers = response.getHeaders();
{code}

Wrap it in a try/catch or something?","01/Jun/12 9:01 AM;cbeams;Thanks for the heads-up, Dave.  Scott, can you follow up and look into this?","01/Jun/12 9:56 AM;sandrews;@Dave The change set didn't change the semantics on when or how the HttpHeaders are accessed.  If there is an issue, it a preexisting bug.",04/Jun/12 7:28 AM;rstoya05-aop;If I'm not mistaken the issue is specifically for a 401 response? SPR-9367,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12593|https://github.com/spring-projects/spring-framework/issues/12593]. ,,,,,,,,,,,,,,,,,
Checking for @XmlRootElement annotation should be made optional in Jaxb2Marshaller ,SPR-7931,36142,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,02/Feb/11 10:18 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,14/Jun/11 2:52 AM,,,,,,,,3.1 RC1,,,,,OXM,,,,0,,,,,,,,"The {{Jaxb2Marshaller}} is only supporting classes annotated with {{@XmlRootElement}} currently and there's no way to override that behaviour as {{supportsInternal(Class, boolean)}} is private. There are cases when you want to (un)marshal classes that are {{@XmlType}} annotated only. Especially when working with XJC, you get the {{@XmlRootElement}} annotation only for classes that have their {{xsd:simpleType}} or {{xsd:complexType}} nested inside the {{xsd:element}} declaration (see [this blog entry|http://weblogs.java.net/blog/kohsuke/archive/2006/03/why_does_jaxb_p.html] for why that's the case). However, if you have a type that can be reused *and* used as a root element's type, XJC will not create the {{@XmlRootElement}} annotation but rather a factory method inside the {{ObjectFactory}} class. To get those classes (un)marshalled, you currently have to copy large parts of {{Jaxb2Marshaller}} as there's no way to disable the check for the annotation. So it would be cool if this was configurable through a bean property or at least changeable so that a subclass could potentially call {{supportsInternal(clazz, false)}}.",,;14/Jun/11 2:46 AM;arjen.poutsma;2400,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-02-03 01:15:01.544,1144,true,issuemaster(issuemaster),,,,0|i00pvb:,4236,5536,,,,,,"03/Feb/11 1:15 AM;arjen.poutsma;The reason the {{Jaxb2Marshaller}} does not support classes that are annotated with {{@XmlType}} is quite simple: JAXB2 does not support them. Try running the following piece of code:

{code}
public static void main(String[] args) throws JAXBException {
	DummyType t = new DummyType();
	JAXBContext context = JAXBContext.newInstance(DummyType.class);
	javax.xml.bind.Marshaller m = context.createMarshaller();
	m.marshal(t, System.out);
}

@XmlType
public static class DummyType {

	private String s = ""Hello"";
}
{code}

This results in the following exception:

{noformat}
[com.sun.istack.internal.SAXException2: unable to marshal type ""org.springframework.oxm.jaxb.Jaxb2MarshallerTests$DummyType"" as an element because it is missing an @XmlRootElement annotation]
{noformat}

You can, however, marshal classes annotated with {{@XmlType}} if you put them in a {{JAXBElement}}, and this is also support in the {{Jaxb2Marshaller}}. See:

{code}
public static void main(String[] args) throws JAXBException {
	DummyType t = new DummyType();
	JAXBElement<DummyType> e = new JAXBElement<DummyType>(new QName(""http://example.com"", ""dummyType""), DummyType.class, t);
	JAXBContext context = JAXBContext.newInstance(DummyType.class);
	javax.xml.bind.Marshaller m = context.createMarshaller();
	m.marshal(e, System.out);
	System.out.println();
{code}

This results in: 

{code:xml}
<dummyType xmlns=""http://example.com""/>
{code}




",03/Feb/11 1:15 AM;arjen.poutsma;Resolving as invalid.,"10/Jun/11 5:45 AM;ilcavero;As it is Jaxb2Marshaller is incompatible with spring MVC MarshallingView because it calls 'mashaller.supports(o.getClass)' and that will always return false, even if 'o' is of type 'JAXBElement<SomeSupportedTypeWithoutXMLRootElement>'. You can say that they should call 'supports(myJAXBElement.getDeclaredType())' instead but that class has no knowledge of JAXB. So basically the supports(Class) method as it is now is broken because marshaller.marshall(o, result) works but marshaller.supports(o.getClass()) fails. Why not add  a check for 'JAXBElement.class.isAssignableFrom(clazz)', that has to be better than a broken method even if not all JAXBElement objects are supported.","14/Jun/11 3:00 AM;arjen.poutsma;Resolved by introducing a 'supportJaxbElementClass' property, which defaults to false, but can be set to true to let supports(Class) return true for JAXBElement.class. 

I did it this way because I didn't want this new functionality to interfere with support(Type), which is actually a better version than supports(Class). Problem is that it requires information that isn't available in MarshallingView, because of runtime type erasure.

Also, I think this new functionality shouldn't enabled by default, because a given Jaxb2Marshaller does not support *all* JAXBElements, only those who wrap a XmlType that is supported (which is in fact what supports(Type) does). But once again, we don't have access to that information because of type erasure.",31/Jul/12 6:52 AM;bgrommes;I have another scenario not covered by this fix.  I'm using EclipseLink MOXy which allows one to specify the XmlRootElement information not with an annotation on the class but in an xml mapping file.  I want to be able to use the Jaxb2Marshaller without putting an @XmlRootElement annotation on my class since I can put it in the MOXy mapping file (this would make my POJOs JAXB annotation free).  In this case I'm not using JAXBElements.  Would it be possible to enable supportsInternal to skip the XmlRootElement annotation check?,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12586|https://github.com/spring-projects/spring-framework/issues/12586]. ,,,,,,,,,,,,,,,,,,
Better handling of 204 No Content in RestTemplate,SPR-7911,36027,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,ceharris414,ceharris414,25/Jan/11 10:16 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,14/Jun/11 3:38 AM,3.1 M1,,,,,,,3.1 RC1,,,,,Web,,,,1,,,,,,,,"Some REST web services return 204 No Content as the result for a GET in certain circumstances.  With this status, the response has no entity body and thus no Content-Type header.

RestTemplate.getForEntity throws an exception when receiving such a response:

org.springframework.web.client.RestClientException: Cannot extract response: no Content-Type found

An improvement for RestTemplate.getForEntity would be to return a ResponseEntity instance with the statusCode property set as appropriate for 204 No Content, and null values for the body and contentType properties.

I considered trying to extend RestTemplate to make it behave in this manner.  Unfortunately, the extensive use of private static classes in the implementation makes it difficult to override the behavior of getForEntity -- can't just replace the ResponseEntityResponseExtractor implementation without also replacing other unrelated collaborators (e.g. AcceptHeaderRequestCallback).  It's possible to do it, it would just require a lot more code duplication than really seems warranted.

If you don't wish to change the behavior of RestTemplate.getForEntity, perhaps you might consider relaxing the access modifiers on these collaborator classes so that a subclass could make use of them?

",,;14/Jun/11 3:38 AM;arjen.poutsma;1140,,,,,,,,,0,1140,,,0,1140,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-05-04 03:12:49.314,1146,true,issuemaster(issuemaster),,,,0|i00p7j:,4129,5470,,,,,,"04/May/11 3:12 AM;juan.farre;This is not only important for 204 responses, but also for others, like 304.

In fact, I consider 304 more important, as 204 responses can be predicted in advance (I don't personally see why a get should return 204 and not other status like 404, but I don't doubt that there may be services out there returning 204 for get requests). But 304 can be returned (obviously without an entity) in a get request that (conditionally) expects an entity body, and this should be handled somehow. A generic exception doesn't allow to recognize this situation.

My own hack to workaround this, is to have a response error handler that raises a HttpStatusCodeException including response headers. getForEntity catches it and returns an ResponseEntity with the corresponding status code, response headers, and a null body. This would be nicer if there wouldn't need to be an exception involved.

Other possibility would be just to raise an exception, but one that allows you to discriminate the situation.

Many cases should be taken into account about responses without an entity, depending on whether:

- It is a status code that never has a response body or one that can have it.

- This response could generally be expected (for example a no-content delete response can generally be expected and the client shouldn't specify an expected body, unless he knows that service will send content for that delete query), or it cannot be known in advance (for example a 304 response to a conditional get).

- The response must include an entity and no entity was detected (for example, a status 200 for a get request without a response entity). This I think should behave as it does now, as it is an illegal response.

- There is a response entity, but the status code indicates that probably the entity is not what was initially expected (for example, for 3xx responses to a get request that have a response entity, probably the entity is not what the client was expecting for a 200 response and won't probably deserialize correctly to the given response class).

- Other possible considerations.

I don't know what should exactly be done in each case, but I think it's worth considering all this carefully to provide a coherent behavior of the rest template in all possible situations.","18/May/11 5:41 AM;rclarkson;User's of Spring Android are also experiencing issues with 204 responses:

http://forum.springsource.org/showthread.php?103806-Small-issue-with-http-204","14/Jun/11 3:39 AM;arjen.poutsma;Fixed by introducing a hasMessageBody(ClientHttpResponse) method in HttpMessageConverterExtractor, which defaults to checking for 204, 304 and a Content-Length of 0.","28/Mar/12 1:18 PM;rclarkson;This change was merged into Spring for Android and released in 1.0.0.RC1.

See ANDROID-57.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12566|https://github.com/spring-projects/spring-framework/issues/12566]. ,,,,,,,,,,,,,,,,,,,
Sending large payloads with RestTemplate results in an OutOfMemoryError,SPR-7909,36023,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,25/Jan/11 7:25 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,25/Jan/11 8:08 AM,,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"When sending a large file with the RestTemplate (with a POST or PUT), the RestTemplate will throw an OutOfMemoryError:

{noformat}
com.cat.tcm.jmx.ManagementException: An unexpected error occurred performing the operation. 
at com.cat.tcm.jmx.JMXTaskTemplate.run(JMXTaskTemplate.java:144) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619) 
Caused by: java.lang.OutOfMemoryError: Java heap space 
at java.util.Arrays.copyOf(Arrays.java:2786) 
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94) 
at org.springframework.util.FileCopyUtils.copy(FileCopyUtils.java:113) 
at org.springframework.http.converter.ResourceHttpMessageConverter.write(ResourceHttpMessageConverter.java:85) 
at org.springframework.http.converter.ResourceHttpMessageConverter.write(ResourceHttpMessageConverter.java:1) 
at org.springframework.http.converter.FormHttpMessageConverter.writePart(FormHttpMessageConverter.java:288) 
at org.springframework.http.converter.FormHttpMessageConverter.writeParts(FormHttpMessageConverter.java:252) 
at org.springframework.http.converter.FormHttpMessageConverter.writeMultipart(FormHttpMessageConverter.java:242) 
at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:194) 
at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:1) 
at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:588) 
at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:436) 
at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:401) 
at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:279) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309) 
at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183) 
at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150) 
at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50) 
at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) 
at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202) 
at $Proxy17.postForObject(Unknown Source)
{noformat}
",,;25/Jan/11 8:08 AM;arjen.poutsma;57600,,,,,,,,,0,57600,,,0,57600,,,,,,,,INT-2006,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-06-08 10:09:01.996,3636,true,issuemaster(issuemaster),,,,0|i00ovz:,4077,5425,,,,,,"25/Jan/11 7:26 AM;arjen.poutsma;This is due to the fact that we buffer all content before sending it over the wire, which is necessary for setting the correct Content-Length header.","25/Jan/11 8:14 AM;arjen.poutsma;Fixed, by adding a 'bufferRequestBody' property to the SimpleClientHttpRequestFactory, which by default is true.

Setting this property to false will enable streaming mode. This will result in a ClientHttpRequest that either streams directly to the underlying HttpURLConnection (if the Content-Length is known in advance), or that will use ""Chunked transfer encoding"" (if the Content-Length is not known in advance). That is:

{code}
SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();
requestFactory.setBufferRequestBody(false);
RestTemplate rest = new RestTemplate(requestFactory);
{code}

These changes will be in 3.0.6, and in 3.1 M1. Please try a recent 3.1 M1 (as of tonight) to see if it works for you.","08/Jun/11 10:09 AM;juergen.hoeller;I've removed this from the 3.0.6 backport list since it really seems to be a new 3.1 feature to me. Unless there is a strong need to have this in 3.0.x, I'd rather recommend an upgrade to 3.1 instead.

Juergen",29/Nov/12 3:58 AM;snekoval;Any chance to get it fixed for HttpComponentsClientHttpRequestFactory?,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12564|https://github.com/spring-projects/spring-framework/issues/12564]. ,,,,,,,,,,,,,,,,,,,
Accept-Charset header with '*' results in java.nio.charset.IllegalCharsetNameException,SPR-7869,35782,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,10/Jan/11 3:36 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,10/Jan/11 4:07 AM,3.0.5,,,,,,,3.0.6,3.1 M1,,,,Web,,,,0,,,,,,,,"The following header:

Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7

results in this stack trace:

{noformat}
16:08:20,093 DEBUG [AnnotationMethodHandlerExceptionResolver.resolveException] Resolving exception from handler [documentSearchInboundGateway]: java.nio.charset.IllegalCharsetNameException: *
16:08:20,140 DEBUG [ResponseStatusExceptionResolver.resolveException] Resolving exception from handler [documentSearchInboundGateway]: java.nio.charset.IllegalCharsetNameException: *
16:08:20,140 DEBUG [DefaultHandlerExceptionResolver.resolveException] Resolving exception from handler [documentSearchInboundGateway]: java.nio.charset.IllegalCharsetNameException: *
16:08:20,140 DEBUG [DispatcherServlet.processRequest] Could not complete request
java.nio.charset.IllegalCharsetNameException: *
	at java.nio.charset.Charset.checkName(Charset.java:284)
	at java.nio.charset.Charset.lookup2(Charset.java:458)
	at java.nio.charset.Charset.lookup(Charset.java:437)
	at java.nio.charset.Charset.forName(Charset.java:502)
	at org.springframework.http.HttpHeaders.getAcceptCharset(HttpHeaders.java:184)
	at org.springframework.integration.http.support.DefaultHttpHeaderMapper.getHttpHeader(DefaultHttpHeaderMapper.java:665)
	at org.springframework.integration.http.support.DefaultHttpHeaderMapper.toHeaders(DefaultHttpHeaderMapper.java:286)
	at org.springframework.integration.http.support.DefaultHttpHeaderMapper.toHeaders(DefaultHttpHeaderMapper.java:50)
	at org.springframework.integration.http.inbound.HttpRequestHandlingEndpointSupport.doHandleRequest(HttpRequestHandlingEndpointSupport.java:260)
	at org.springframework.integration.http.inbound.HttpRequestHandlingMessagingGateway.handleRequest(HttpRequestHandlingMessagingGateway.java:91)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:49)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:619)
{noformat}",,;10/Jan/11 4:07 AM;arjen.poutsma;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,INT-1805,,,,,,,,,,,,,,9936000,,,,,2011-01-11 11:20:45.703,8536,true,issuemaster(issuemaster),,,,0|i00pmn:,4197,5503,http://forum.springsource.org/showthread.php?t=100810,,,,,"11/Jan/11 11:20 AM;tony_k;coincidentally, i was *just* grappling with this myself. working with spring 3.0.5 and spring-integration 2.0.1. do you have a suggested workaround?","28/Jan/11 2:11 AM;tziem;Where can I find version 3.0.6 in the snapshot repository?
I'm using this one:
{code}
<repository>
    <id>repository.springframework.maven.snapshot</id>
    <name>Spring Framework Maven Snapshot Repository</name>
    <url>http://maven.springframework.org/snapshot</url>
</repository>
{code}","28/Jan/11 2:18 AM;arjen.poutsma;There is no snapshot repo for 3.0.6, only for 3.1 M1.","07/Feb/11 12:32 AM;tziem;I need the fix for spring-integration 2.0.1.
When will be version 3.0.6 released?",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12526|https://github.com/spring-projects/spring-framework/issues/12526]. ,,,,,,,,,,,,,,,,,,,
Add support for package binding in the JibxMashaller,SPR-7805,35220,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,tdaitx,tdaitx,03/Dec/10 7:02 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,04/Apr/11 1:50 AM,3.0.5,,,,,,,3.1 M2,,,,,OXM,,,,0,,,,,,,,"As per [https://jira.springframework.org/browse/SWS-229] JibxMashaller already supports all the mapped classes in the IBindingFactory (wonder why the [docs|http://static.springsource.org/spring-ws/sites/1.5/reference/html/oxm.html#oxm-jibx] don't say anything about that) but I needed a way to set it per package so I have created my own JibxMarshaller and have been using it successfully so far.

By default it will ignore _targetPackage_ property if _targetClass_ property is set to keep the usual behavior.

I have also updated it to fix [https://jira.springsource.org/browse/SWS-659] as stated on the [forum|http://forum.springsource.org/showthread.php?t=42137] because I had a similar scenario where I needed multiple marshallers (one per root element). Since changing this method will break anyone who has been using the ""set class and get binding for all mapped classes"" feature/bug I'm adding two patches: one with all the changes and another with everything but the _supports(Class)_ method change.

BTW, I generated the patch against JibxMarshaller from Spring 3.0.5. Let me know if I really need to do it against SWS 1.5.9.",,;04/Apr/11 1:50 AM;arjen.poutsma;900,,,,,,,,3600,2700,900,25%,3600,2700,900,,,,,,,,,,,,,,03/Dec/10 7:02 PM;tdaitx;jibxmarshaller-targetpackage-only.patch;https://jira.spring.io/secure/attachment/17426/jibxmarshaller-targetpackage-only.patch,03/Dec/10 7:02 PM;tdaitx;jibxmarshaller-targetpackage-with-supports.patch;https://jira.spring.io/secure/attachment/17425/jibxmarshaller-targetpackage-with-supports.patch,,,,,,,,,,,,9936000,,,,,2010-12-09 00:48:53.235,8557,true,issuemaster(issuemaster),,,,0|i03plr:,21690,18200,,,,,,"09/Dec/10 12:48 AM;arjen.poutsma;No need to create a SWS version of this patch, as SWS's OXM has been removed completely in favor of SPR's OXM.","04/Apr/11 1:52 AM;arjen.poutsma;I've applied the -with-supports patch. This can result in some issues with regards to backward compatibility, but as the patch provides a clear improvement over the current code, I'm OK with doing this for Spring 3.1.

Thanks!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12461|https://github.com/spring-projects/spring-framework/issues/12461]. ,,,,,,,,,,,,,,,,,,,,,
MediaType incorrectly calls the toString() method instead of name() method causing RestTemplate on Android to fail,SPR-7729,34792,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,rclarkson,rclarkson,09/Nov/10 2:30 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,10/Jan/11 8:27 AM,3.0.5,,,,,,,3.0.6,3.1 M1,,,,Web,,,,0,,,,,,,,"While working on implementing RestTemplate on Android, we identified an issue with the instantiation of the StringHttpMessageConverter class.  It creates a new MediaType, passing it a Charset object.  toString() is called on this Charset object internally to MediaType, however the name() method should be used instead, as it returns the canonical name of the charset.

This appears to be a real problem on the Android platform as toString() does not return the canonical name of the charset.  This is currently preventing the release of RestTemplate for Android.  Thanks for the help.

Below you can see the stack trace where charset cannot be identified correctly.


11-09 17:01:12.643: ERROR/AndroidRuntime(598): FATAL EXCEPTION: main
11-09 17:01:12.643: ERROR/AndroidRuntime(598): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.springsource.greenhouse/com.springsource.greenhouse.activities.ProfileActivity}: java.nio.charset.IllegalCharsetNameException: The illegal charset name is ""Charset[ISO-8859-1]"".
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2663)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.ActivityThread.startActivityNow(ActivityThread.java:2503)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.LocalActivityManager.moveToState(LocalActivityManager.java:127)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.LocalActivityManager.startActivity(LocalActivityManager.java:339)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.widget.TabHost$IntentContentStrategy.getContentView(TabHost.java:651)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.widget.TabHost.setCurrentTab(TabHost.java:323)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.widget.TabHost$2.onTabSelectionChanged(TabHost.java:129)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.widget.TabWidget$TabClickListener.onClick(TabWidget.java:453)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.view.View.performClick(View.java:2408)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.view.View$PerformClick.run(View.java:8816)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.os.Handler.handleCallback(Handler.java:587)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.os.Handler.dispatchMessage(Handler.java:92)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.os.Looper.loop(Looper.java:123)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.ActivityThread.main(ActivityThread.java:4627)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at java.lang.reflect.Method.invokeNative(Native Method)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at java.lang.reflect.Method.invoke(Method.java:521)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:868)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:626)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at dalvik.system.NativeStart.main(Native Method)
11-09 17:01:12.643: ERROR/AndroidRuntime(598): Caused by: java.nio.charset.IllegalCharsetNameException: The illegal charset name is ""Charset[ISO-8859-1]"".
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at java.nio.charset.Charset.checkCharsetName(Charset.java:202)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at java.nio.charset.Charset.forNameInternal(Charset.java:461)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at java.nio.charset.Charset.forName(Charset.java:542)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.http.MediaType.checkParameters(MediaType.java:299)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.http.MediaType.<init>(MediaType.java:263)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.http.MediaType.<init>(MediaType.java:218)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.http.converter.StringHttpMessageConverter.<init>(StringHttpMessageConverter.java:51)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.web.client.RestTemplate.<init>(RestTemplate.java:139)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.web.client.RestTemplate.<init>(RestTemplate.java:164)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at org.springframework.social.greenhouse.GreenhouseTemplate.<init>(GreenhouseTemplate.java:106)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at com.springsource.greenhouse.util.Prefs.getGreenhouseOperations(Prefs.java:111)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at com.springsource.greenhouse.activities.ProfileActivity.refreshProfile(ProfileActivity.java:78)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at com.springsource.greenhouse.activities.ProfileActivity.onStart(ProfileActivity.java:46)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1129)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.Activity.performStart(Activity.java:3781)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2636)
11-09 17:01:12.643: ERROR/AndroidRuntime(598):     ... 18 more",,;10/Jan/11 8:27 AM;arjen.poutsma;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2011-01-10 08:28:10.648,8582,true,issuemaster(issuemaster),,,,0|i00pp3:,4208,5510,,,,,,"10/Nov/10 12:49 PM;rclarkson;This is also happening with the MappingJacksonHttpMessageConverter, since it also extends AbstractHttpMessageConverter, calls super() and passes a MediaType object.",10/Jan/11 8:28 AM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12385|https://github.com/spring-projects/spring-framework/issues/12385]. ,,,,,,,,,,,,,,,,,,,,,
Unexpected behavior with class-level @RequestMappings,SPR-7707,34621,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,kdonald,kdonald,01/Nov/10 5:56 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,08/Nov/10 6:57 AM,3.0.5,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"I am observing unexpected behavior in Spring MVC 3.0.5 in our application with @Controllers that use class-level @RequestMappings in conjunction with a ""default"" or ""root"" path mapping specified at the method-level (relative to the class-level base path).  Rather than try to explain the problem, I'll just illustrate it from several simple use cases in which I've reproduced the unexpected behavior.

Consider the following @Controller definition and the @RequestMapping rules defined within:
{code}
@Controller
@RequestMapping(""/invite"")
public class InviteController {

    @RequestMapping(method=RequestMethod.GET)
    public void invitePage(@FacebookUserId String facebookUserId, Model model) { ... }
	
    @RequestMapping(value=""/accept"", method=RequestMethod.GET, params=""token"")
    public String acceptInvitePage(@RequestParam String token, Model model, HttpServletResponse response);

    @RequestMapping(value=""/accept"", method=RequestMethod.POST)
    public String acceptInvite(@RequestParam String token, @Valid SignupForm form, BindingResult formBinding, Model model);

}
{code}

Now consider the following web requests:
{code}
GET /invite
GET /invite/bogus
GET /invite/accept
GET /invite/accept?token=123456789
{code}

With the @RequestMapping configuration above, for each web request I list which handler method was invoked and if that was expected:

|GET /invite | invitePage (expected) |
|GET /invite/bogus | 404 (expected) |
|GET /invite/accept | invitePage (NOT expected. Expected 404 or 405, instead a 500 ultimately resulted due to RuntimeException since the invitePage handler was relying on view name translation to kick in, expecting only to be invoked for GET /invite requests) |
|GET /invite/accept?token=123456789 | (acceptInvitePage (expected) |

Attempting to generalize what is happening here, it seems if I do not specify a @RequestMapping path value at the method level, that handler method is treated as the ""default fallback"" in the case of no other match.  However, this default rule seems to only apply if we access a sub-resource path that is referenced in another @RequestMapping rule, such as the '/accept' sub-path here.  If you access a completely unknown sub-path, such as 'bogus' here, a 404 is returned.  I find this confusing, and would expect a 404 in both cases.  With the @Controller code above, I am simply trying to state the following:
- invitePage should be the handler for GET /invite requests
- acceptInvitePage should be the handler for GET /invite/accept?token={token} requests.
- acceptInvite should be the handler for POST /invite/accept requests.
- Any other request within the GET /invite path should return a 404.
Unfortunately, if I send a GET request to /accept, invitePage will actually be invoked!  Even If I remove the acceptInvitePage handler method, a GET request to /accept will still result in invitePage being invoked.  Only if I remove the ""acceptInvitePage"" AND ""acceptInvite"" methods, will I then get a 404 if I send a request to GET /invite/accept (or any other path within /invite.)

I reported this issue to Juergen and he advised me to be explicit with my relative-root mappings at the method level by using ""/"" as the value instead of defining no value at all.  I tried that and ended up with code like this:

{code}
@Controller
@RequestMapping(""/invite"")
public class InviteController {

    @RequestMapping(value=""/"", method=RequestMethod.GET)
    public void invitePage(@FacebookUserId String facebookUserId, Model model) { ... }
	
    @RequestMapping(value=""/accept"", method=RequestMethod.GET, params=""token"")
    public String acceptInvitePage(@RequestParam String token, Model model, HttpServletResponse response);

    @RequestMapping(value=""/accept"", method=RequestMethod.POST)
    public String acceptInvite(@RequestParam String token, @Valid SignupForm form, BindingResult formBinding, Model model);

}
{code}

Here's what happened with this configuration:

|GET /invite | 404 (NOT expected) |
|GET /invite/bogus | 404 (expected) |
|GET /invite/accept | 405 (good enough since only a POST is allowed if no token query parameter is present) |
|GET /invite/accept?token=123456789 | acceptInvitePage (expected) |

Unfortunately, now the root mapping of GET /invite, and any other mapping like it where the ""/"" value is specified the method level, does not match.  That's a show stopper.

Juergen then suggested I try the /path/** syntax at the class-level.  I did that and got the following code and results:

{code}
@Controller
@RequestMapping(""/invite/**"")
public class InviteController {

    @RequestMapping(value=""/"", method=RequestMethod.GET)
    public void invitePage(@FacebookUserId String facebookUserId, Model model) { ... }
	
    @RequestMapping(value=""/accept"", method=RequestMethod.GET, params=""token"")
    public String acceptInvitePage(@RequestParam String token, Model model, HttpServletResponse response);

    @RequestMapping(value=""/accept"", method=RequestMethod.POST)
    public String acceptInvite(@RequestParam String token, @Valid SignupForm form, BindingResult formBinding, Model model);

}
{code}

|GET /invite | invitePage (expected) |
|GET /invite/bogus | 404 (expected) |
|GET /invite/accept | invitePage (NOT expected - Spring MVC appears to fallback to this even though invitePage is mapped explicitly to ""/""! Expected 405 |
|GET /invite/accept?token=123456789 | acceptInvitePage (expected) |

So this sort of works; however, the default fallback behavior appears to have changed.  Furthermore, I discovered this causes side effects that effect one of my other @Controllers, TwitterInviteController which handles a nested path under the /invite namespace.  Specifically, that @Controller is now defined like this:

{code}
@Controller
@RequestMapping(""/invite/twitter"")
public class TwitterInviteController {

    @RequestMapping(value=""/"", method=RequestMethod.GET)
    public void friendFinder(Account account, Model model) { ... }

}
{code}

With the class-level mapping of /invite/** in InviteController, TwitterInviteController works: if I send a GET request to /invite/twitter, friendFinder is called.  However, if I change /invite/** in InviteController back to simply ""/invite/"", TwitterInviteController no longer works.  Accessing GET /invite/twitter returns a 404 and Spring MVC warns of no matching handler method.  I became concerned seeing a @RequestMapping rule in one @Controller effect another one defined independently.

Also shown above with /invite/**, sending a GET request to /invite/accept caused the invitePage handler mapped to ""/"" to be invoked.  I cannot explain why this happened, since I did define the ""/"" value explicitly.

Finally, I tried /invite/* just to see what would happened in that case.  I got the same behavior as the /invite option, which I did not expect.

So at this point, I am confused over what I should be doing here to get the behavior I want.  I am seriously considering defining all @RequestMapping path mappings explicitly at the method level for the time being, and not using the class-level mapping feature at all until its rules are more clearly defined.",Reproduced in 3.0.5 and 3.1.0.BUILD-SNAPSHOT,;08/Nov/10 6:57 AM;arjen.poutsma;21060,,,,,,,,,0,21060,,,0,21060,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-11-02 07:20:51.846,8588,true,issuemaster(issuemaster),,,,0|i00ppz:,4212,5514,,,,,,02/Nov/10 12:09 AM;kdonald;I switched to exclusive use of method-level @RequestMappings (no class-level mappings) in Greenhouse and things there seem to work as expected.,"02/Nov/10 7:20 AM;sschmidt;On the Roo side we should see this problem not as a problem that requires changes but rather as something that comes somewhat unexpected ;)

Roo does use type level @RequestMapping(""/owners"") in conjunction with method level @RequestMapping(method = RequestMethod.GET). Since no value like ""/"" is defined in the method level mapping, all should be fine. 

However, I am somewhat surprised to hear that a POST submission will also fallback to the GET method as shown above in cases where no explicit POST mapping is defined. I would have expected to see a 404 return code rather than an exception caused by the fact that my GET method does not receive the (potentially required) method parameters it expects. 

In a Roo MVC view this will then render a view which indicates 'an internal error occured' rather than 'resource not found', so not too bad - just awkward.

",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12363|https://github.com/spring-projects/spring-framework/issues/12363]. ,,,,,,,,,,,,,,,,,,,,,
Add ETag version of WebRequest.checkNotModified(),SPR-7695,34558,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,29/Oct/10 3:16 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,29/Oct/10 3:29 AM,,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"WebRequest currently has a checkNotModified(long) method, which is based on If-Modified-Since/Last-Modified. It would be great if we also have a checkNotModified(String) method, which would be based on If-None-Match/ETag.",,;29/Oct/10 3:29 AM;arjen.poutsma;540,,,,,,,,,0,540,,,0,540,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:38.836,8596,true,issuemaster(issuemaster),,,,0|i00pqn:,4215,5515,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12351|https://github.com/spring-projects/spring-framework/issues/12351]. ,,,,,,,,,,,,,,,,,,,,,,,
@Transactional with qualifier can't find PlatformTransactionManager defined in parent context,SPR-7679,34012,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,juergen.hoeller,dbakr,dbakr,25/Oct/10 9:27 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,11/Dec/11 5:29 AM,3.0.5,,,,,,,3.0.7,3.1 GA,,,,Transaction,,,,6,,,,,,,,"When I specify qualifier for @Transactional annotation and the specified PlatformTransactionManager is defined in parent context, the exception is thrown like following:

{code}
java.lang.IllegalStateException: No matching PlatformTransactionManager bean found for qualifier 'transactionManagerExt' - neither qualifier match nor bean name match!
	at org.springframework.transaction.interceptor.TransactionAspectUtils.getTransactionManager(TransactionAspectUtils.java:91)
	at org.springframework.transaction.interceptor.TransactionAspectUtils.getTransactionManager(TransactionAspectUtils.java:53)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.determineTransactionManager(TransactionAspectSupport.java:245)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:100)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:621)
{code}

For example, if the autowired bean with {{@Transactional}}-marked method is being parsed in servlet-level context, but {{transactionManager}} is specified in the global web-application context, defined by {{contextConfigLocation}} param in web.xml.

So actually Spring does not take in account here parent contexts.
Investigating the code I have found the class {{TransactionAspectUtils}} with the following method {{isQualifierMatch()}} which uses {{bf.containsBeanDefinition}} method which of course is not parent-aware!

My suggestion is to change this method call either to {{bf.containsBean}} or to implement recursive bean searching through contexts hierarchy.",,"Evaluation, testcase and fix.;17/Nov/10 8:47 AM;olivergierke;1800",,,,,,,,600,0,1800,300%,600,0,1800,,,,,,,,,,,,,,17/Nov/10 7:53 AM;olivergierke;fix.patch;https://jira.spring.io/secure/attachment/17363/fix.patch,17/Nov/10 7:48 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17362/mylyn-context.zip,,,,,,,,,,,,9936000,,,,,2010-11-17 04:37:33.353,1184,true,issuemaster(issuemaster),,,,0|i00zlj:,5812,6999,,,,,,"25/Oct/10 9:34 AM;dbakr;To be more clear:

I have commonSpringContext.xml context config, which is root web-app context, specified in web.xml by <context-param><param-name>contextConfigLocation</param-name><param-value>/WEB-INF/commonSpringContext.xml</param-value></context-param>.
It contains definition of 2 different trans. managers:
<bean id=""transactionManagerMain"" class=""org.springframework.orm.hibernate3.HibernateTransactionManager"">...</bean>
<bean id=""transactionManagerExt"" class=""org.springframework.orm.hibernate3.HibernateTransactionManager"">...</bean>

Then servlet-specific context defined in dashboard-servlet.xml contains nothing special but <tx:annotation-driven transaction-manager=""transactionManagerMain"" /> which means by default (when no qualifier specified) transactionManagerMain is used.

In the class being parsed by <context:component-scan .. /> spec there is a code:

@Transactional(""transactionManagerExt"")
public void someMethod()...{}

And this causes an exception, because transactionManagerExt is defined in parent (root web-app) context, not in servlet's local context.

I have patched my package of spring-transacions temporary with changing call to containsBeanDefinition to containsBean in TransactionAspectUtils.

Looking forward for real solution in next release :)","17/Nov/10 4:37 AM;frans;I have absolutely the same issue. I will try to change the call from containsBeanDefinition to containsBean in TransactionAspectUtils and see if it helps as previously mentioned. If it does, it should be pretty easy to get it in the next release :)",17/Nov/10 7:53 AM;olivergierke;Proposed patch.,17/Nov/10 8:47 AM;olivergierke;Reassigned for review. Feel free to assign it back to commit.,"11/Dec/11 5:29 AM;juergen.hoeller;Fixed for 3.1 GA now, and also backported to 3.0.7.

Juergen","09/Jul/13 7:24 AM;dajohnson89;I'm afraid I'm encountering this issue still.  Using Spring version 3.1.3RELEASE.

Please see the StackOverflow question for a full description of my application context configuration environment, and the same stack trace mentioned in this issue:

http://stackoverflow.com/questions/17528654/spring-2-hibernate-datasources-2-transactionmanagers-nosuchbeandefinitionex",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12335|https://github.com/spring-projects/spring-framework/issues/12335]. ,,,,,,,,,,,,,,,,,
Support declarative SQL script execution in the TestContext framework,SPR-7655,33805,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,ramo,ramo,14/Oct/10 8:42 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,05/Jun/14 11:14 AM,3.0 GA,,,,,,,4.1 RC1,,,,,Test,,,,3,pull-request-submitted,,,,,,,"h4. Overview

{{AbstractTransactionalJUnit4SpringContextTests}} and {{AbstractTransactionalTestNGSpringContextTests}} provide the ability to manually execute a specific SQL script for the current test via their protected {{executeSqlScript()}} methods. For more control over the configuration of such scripts, one can optionally use either {{ResourceDatabasePopulator}} or {{ScriptUtils}} directly. 

The above provide several options for _programmatically_ executing scripts; however, it would be nice if the Spring TestContext Framework provided _declarative_ support via an annotation and an associated {{TestExecutionListener}}. 

----
h4. Deliverables

# (/) The semantics for locating SQL script resources should be consistent with {{@ContextConfiguration}}'s semantics for locating XML configuration files.
# (/) There needs to be a mechanism for specifying which {{DataSource}} and {{PlatformTransactionManager}} to use from the test's {{ApplicationContext}}, including default conventions consistent with {{TransactionalTestExecutionListener}} and {{@TransactionConfiguration}}
# (/) The annotation can be applied at either the class or method level with method-level overrides.
# (/) The annotation can be used as a meta-annotation.
# (/) The annotation must support all of the configuration options currently supported by {{ResourceDatabasePopulator}} -- for example, encoding, statement separator, comment prefix, block comment delimiters, error handling flags, etc.
# (/) The annotation and listener must support execution phases for scripts, for example ""before test"" and ""after test"".
# (/) The listener should execute the named scripts _within_ the current test's transaction if present, _outside of_ the current test's transaction if present, or always in a new transaction, depending on the value of a boolean flag in the annotation.
# (/) The listener should delegate to {{ResourceDatabasePopulator#execute}} to actually execute the scripts.
# (/) The listener should be registered by default in abstract base classes as well as in {{TestContextBootstrapper}} implementations.

----
h4. Proposed Annotation Names

- {{@SqlGroup}} as a _container_ with nested, _repeatable_ {{@Sql}} entries
- {{@ExecuteSql}} as a _container_ with nested, _repeatable_ {{@SqlScripts}} entries
- {{@DatabaseInitializers}} as a _container_ with nested, _repeatable_ {{@DatabaseInitializer}} entries

----
h4. Code Examples

h6. Defaults
{code:java}
@Test
// Detects default SQL script location
@Sql
public void example() { /* ... */ }
{code}

h6. Single Script
{code:java}
@Test
@Sql(""data.sql"")
public void example() { /* ... */ }
{code}

h6. Multiple Scripts
{code:java}
@Test
@Sql({""schema.sql"", ""data.sql""})
public void example() { /* ... */ }
{code}

h6. Multiple Annotations with Container
{code:java}
@Test
@SqlGroup({
	@Sql(""schema.sql""),
	@Sql(
		scripts = ""data.sql"",
		commentPrefix = ""//"",
		separator = ""@@""
	)
})
public void example() { /* ... */ }
{code}

h6. Multiple Annotations without Container (Java 8)
{code:java}
@Test
@Sql(""schema.sql""),
@Sql(
	scripts = ""data.sql"",
	commentPrefix = ""//"",
	separator = ""@@""
)
})
public void example() { /* ... */ }
{code}

----
",,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-02-08 19:19:06.339,15298,true,issuemaster(issuemaster),,,,0|i0336f:,18057,17442,,,,,,"08/Feb/12 7:19 PM;tadaya;submitted a pull request
https://github.com/SpringSource/spring-framework/pull/31","18/May/12 3:57 PM;sbrannen;Tadaya, thanks for submitting the pull request.

I'm assigning this issue to 3.2 M2 in order to look at your code after 3.2 M1 goes out.

Sam","28/May/14 6:02 AM;sbrannen;The current state of the code changes for this issue can be viewed in my personal [SPR-7655|https://github.com/sbrannen/spring-framework/commits/SPR-7655] branch on GitHub.

Of particular interest:

- [{{@DatabaseInitializers}}, {{@DatabaseInitializer}}, and {{DatabaseInitializerTestExecutionListener}}|https://github.com/sbrannen/spring-framework/tree/SPR-7655/spring-test/src/main/java/org/springframework/test/context/jdbc]
- [Integration tests with example usage|https://github.com/sbrannen/spring-framework/tree/SPR-7655/spring-test/src/test/java/org/springframework/test/context/jdbc]

Feedback is welcome! :)","05/Jun/14 11:14 AM;sbrannen;Completed as described in the comments for [GitHub commit 5fd6ebb|https://github.com/spring-projects/spring-framework/commit/5fd6ebb548d250d00cf2105c71181f08be7f40e0]:

{quote}
*Introduce annotation to execute SQL scripts in the TCF*

Prior to this commit, it was possible to execute SQL scripts
programmatically via ResourceDatabasePopulator, JdbcTestUtils, and
ScriptUtils. Furthermore, it was also possible to execute SQL scripts
declaratively via the <jdbc> XML namespace. However, it was not
possible to execute SQL scripts declaratively on a per test class or
per test method basis.

This commit makes it possible to declaratively configure SQL scripts
for execution in integration tests via annotations that can be declared
at the class or method level. Details follow.

 - Introduced a repeatable @DatabaseInitializer annotation that can be
   used to configure SQL scripts at the class or method level with
   method-level overrides. @DatabaseInitializers serves as a container
   for @DatabaseInitializer.

 - Introduced a new DatabaseInitializerTestExecutionListener that is
   responsible for parsing @DatabaseInitializer and
   @DatabaseInitializers and executing SQL scripts.

 - DatabaseInitializerTestExecutionListener is registered by default in
   abstract base test classes as well as in TestContextBootstrapper
   implementations.

 - @DatabaseInitializer and @DatabaseInitializers may be used as
   meta-annotations; however, attribute overrides are not currently
   supported for repeatable annotations used as meta-annotations. This
   is a known limitation of Spring's AnnotationUtils.

 - The semantics for locating SQL script resources is consistent with
   @ContextConfiguration's semantics for locating XML configuration
   files. In addition, a default SQL script can be detected based
   either on the name of the annotated class or on the name of the
   annotated test method.

 - @DatabaseInitializer allows for specifying which DataSource and
   PlatformTransactionManager to use from the test's
   ApplicationContext, including default conventions consistent with
   TransactionalTestExecutionListener and @TransactionConfiguration.

 - @DatabaseInitializer supports all of the script configuration options
   currently supported by ResourceDatabasePopulator.

 - @DatabaseInitializer and DatabaseInitializerTestExecutionListener
   support execution phases for scripts that dictate when SQL scripts
   are executed (i.e., before or after a test method).

 - SQL scripts can be executed within the current test's transaction if
   present, outside of the current test's transaction if present, or
   always in a new transaction, depending on the value of the boolean
   requireNewTransaction flag in @DatabaseInitializer.

 - DatabaseInitializerTestExecutionListener delegates to
   ResourceDatabasePopulator#execute to actually execute the scripts.
{quote}","22/Jun/14 5:44 AM;sbrannen;FYI: the aforementioned annotations have been renamed to {{@SqlGroup}} and {{@Sql}}.

See [GitHub commit abdb010|https://github.com/spring-projects/spring-framework/commit/abdb010fc81892fbe442d51c12924104a6b23667] for details.

Regards,

Sam",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12311|https://github.com/spring-projects/spring-framework/issues/12311]. ,,,,,,,,,,,,,,,,,,
XStreamMarshaller - Add support for configuring XStream with aliases by class (type) and also defining multiple attributes for the same class.,SPR-7636,33731,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,brownn,brownn,10/Oct/10 5:32 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,12/Oct/10 5:42 AM,3.0.4,,,,,,,3.0.5,,,,,OXM,,,,0,,,,,,,,"Suggest enhancing XStreamMarshaller to support the following additional features for configuring the underlying XStream instance - 

1) Configuring an alias for all classes which are assignable to a specified XStream type (class) by exposing the XStream.aliasType(String,Class) API, in addition to XStream.alias(String,Class).

2) Enhancing XStreamMarshaller.setUseAttributeFor(Map<?,?>)  to support configuring more than one attribute for the same class. (This has previously been requested by other Spring users, e.g. see SWS-196).

Code and unit tests for these enhancements are attached, written for Spring 3.0.4 / XStream 1.3.1.

Thanks, 

Neil Brown.
XLC Software, http://xlcsoftware.com
Changes sponsored by http://www.brighttalk.com/",,;12/Oct/10 5:42 AM;arjen.poutsma;3480,,,,,,,,,0,3480,,,0,3480,,,,,,,,,,,,,,10/Oct/10 5:32 AM;brownn;CustomXStreamMarshaller.java;https://jira.spring.io/secure/attachment/17180/CustomXStreamMarshaller.java,10/Oct/10 5:32 AM;brownn;CustomXStreamMarshallerTest.java;https://jira.spring.io/secure/attachment/17181/CustomXStreamMarshallerTest.java,,,,,,,,,,,,9936000,,,,,2010-10-12 05:42:57.602,12597,true,issuemaster(issuemaster),,,,0|i03prz:,21718,18230,,,,,Sun JVM -> 1.6,"12/Oct/10 5:42 AM;arjen.poutsma;Fixed, thanks for the patches!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12292|https://github.com/spring-projects/spring-framework/issues/12292]. ,,,,,,,,,,,,,,,,,,,,,,
AbstractStaxContentHandler sets NamespaceContext on every start/end element,SPR-7621,33645,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,edalquist,edalquist,05/Oct/10 12:05 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,12/Oct/10 3:29 AM,3.0.4,,,,,,,3.0.5,,,,,Core,,,,0,,,,,,,,"AbstractStaxContentHandler tracks the currently in-scope namespaces and sets them on every StartElement and EndElement event. According to the StAX APIs it is only necessary to send the NamespaceContext when it is changing (a new namespaces comes into or goes out of scope). The current functionality results with namespace attributes attached to every element in the document.

The fix is to track when a namespace prefix has been added or removed and only send the NamespaceContext at that time.",,;12/Oct/10 3:29 AM;arjen.poutsma;540,,,,,,,,,0,540,,,0,540,,,,,,,,,,,,,,05/Oct/10 12:06 PM;edalquist;SPR7621.patch;https://jira.spring.io/secure/attachment/17170/SPR7621.patch,,,,,,,,,,,,,9936000,,,,,2010-10-12 03:29:17.003,8619,true,issuemaster(issuemaster),,,,0|i03psf:,21720,18232,,,,,Sun JVM -> 1.6,05/Oct/10 12:06 PM;edalquist;Fix for the issue,"12/Oct/10 3:29 AM;arjen.poutsma;Fixed, thanks for the patch!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12277|https://github.com/spring-projects/spring-framework/issues/12277]. ,,,,,,,,,,,,,,,,,,,,,
StaxEventContentHandler does not set Location for StartDocument event,SPR-7620,33642,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,edalquist,edalquist,05/Oct/10 10:37 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,12/Oct/10 3:37 AM,3.0.4,,,,,,,3.0.5,,,,,Core,,,,0,,,,,,,,"StaxEventContentHandler doesn't set the configured SAX Locator on the XMLEventFactory until consumeEvent is called. consumeEvent is called _after_ the event is created which means when client code sets a Locator it does not take effect until after the next event that is written to the XMLEventWriter.

I propose modifying setDocumentLocator so that it calls setLocation on the XMLEventFactory immediately.",,;12/Oct/10 3:37 AM;arjen.poutsma;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,06/Oct/10 7:54 AM;edalquist;SPR7620.patch;https://jira.spring.io/secure/attachment/17174/SPR7620.patch,05/Oct/10 12:03 PM;edalquist;SPR7620.patch;https://jira.spring.io/secure/attachment/17169/SPR7620.patch,,,,,,,,,,,,9936000,,,,,2010-10-12 03:37:54.912,8620,true,issuemaster(issuemaster),,,,0|i03ps7:,21719,18231,,,,,Sun JVM -> 1.6,05/Oct/10 12:03 PM;edalquist;Fix for issue,06/Oct/10 7:54 AM;edalquist;Previous patch file had the change listed twice.,"12/Oct/10 3:37 AM;arjen.poutsma;Fixed, thanks for the patch!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12276|https://github.com/spring-projects/spring-framework/issues/12276]. ,,,,,,,,,,,,,,,,,,,,
Correct typos - Chapter 21. JMS,SPR-7609,33585,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Fixed,olivergierke,cg_rapauzu,cg_rapauzu,30/Sep/10 7:39 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,30/Sep/10 11:53 PM,,,,,,,,3.0.5,,,,,[Documentation],,,,0,,,,,,,,"Document URL: http://static.springsource.org/spring/docs/current/spring-framework-reference/html/jms.html
Spring 3.0 - Chapter 21. JMS 

Location: 21.1 Introduction
Problem: classes that simplifies: (noun plural - verb singular)
Text: It contains JMS template classes that simplifies the use of the JMS
Suggestion: It contains JMS template classes that simplify the use of the JMS.

Location: 21.2.1 JmsTemplate
Problem: Typo - inverted letters: recieving
Text: when sending or synchronously recieving messages
Suggestion: receiving

Location: 21.2.2 Connections
Problem: Typo - session (singular instead of plural)
Text: and perform pooling of connections and session
Suggestion: and perform pooling of connections and sessions

Location: 21.2.3 Destination Management
Problem: the creation ... are not part: (noun singular - verb plural)
Text: Even though the creation of dynamic destinations are not part of the JMS specification
Suggestion: Even though the creation of dynamic destinations is not part of the JMS specification

Location: 21.2.3 Destination Management
Problem: Confusing phrase caused by: 1. leftover ""is"" OR 2. missing ""and""
Text: This property is used by JmsTemplate determines the behavior
Suggestion: 
1. drop ""is"": This property used by JmsTemplate determines the behavior
2. add ""and"": This property is used by JmsTemplate and determines the behavior

Location: 21.2.4.2 DefaultMessageListenerContainer
Problem: Typo - transation
Text: may take advantage of XA transation semantics
Suggestion: transaction

Location: 21.4.3 The SessionAwareMessageListener  interface
Problem: Typo - wth
Text: All of the message listener container implementations that ship wth Spring
Suggestion: All of the message listener container implementations that ship with Spring

Location: 21.4.5 Processing messages within transactions
Problem: Typo - recepton
Text: This allows message recepton as well as e.g. database access
Suggestion: This allows message reception as well as e.g. database access

Location: 21.5 Support for JCA Message Endpoints
Problem: Typo - provided-specific
Text: and any provided-specific ActivationSpec object
Suggestion: and any provider-specific ActivationSpec object

Location: 21.6 JMS Namespace Support
Problem: Typo - detail
Text: its concrete subclasses for more detail on the individual properties
Suggestion: its concrete subclasses for more details on the individual properties
",,;30/Sep/10 11:52 PM;olivergierke;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-09-30 23:53:57.876,2294,true,issuemaster(issuemaster),,,,0|i01g67:,8497,8719,,,,,,"30/Sep/10 11:53 PM;olivergierke;Hi Christian, thanks for spotting this. Fix will make it into 3.0.5.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12265|https://github.com/spring-projects/spring-framework/issues/12265]. ,,,,,,,,,,,,,,,,,,,,,,
jdbc:datasource lacks 'name' attribute or related mechanism,SPR-7604,33574,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,olivergierke,bimargulies,bimargulies,30/Sep/10 5:50 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,01/Oct/10 11:32 PM,3.0.4,,,,,,,3.0.5,,,,,Data,,,,0,,,,,,,,"The EmbeddedDatabaseBuilder has a setName call. There is no corresponding attribute on jdbc:embedded-database. This is more than than esthetic: with 10.6.1.0 of derby, making two databases with the same name against a memory URL really only makes one, with rather unpleasant consequences reported elsewhere.

It has been suggested to use the beanId as the name instead of testDb; that would certainly patch the immediate problem even if a name= attribute would be nice.
",,;01/Oct/10 11:32 PM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,SPR-8849,SPR-12835,SPR-8920,,,,01/Oct/10 12:33 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17155/mylyn-context.zip,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:35.881,2295,true,issuemaster(issuemaster),,Standalone,,0|i01d6v:,8014,8426,,,,,Sun JVM,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12260|https://github.com/spring-projects/spring-framework/issues/12260]. ,,,,,,,,,,,,,,,,,,,,,,,
Embedded database support in trouble shutting down Derby,SPR-7602,33559,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,olivergierke,bimargulies,bimargulies,29/Sep/10 6:35 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,30/Sep/10 11:07 AM,3.0.4,,,,,,,3.0.5,,,,,,,,,0,,,,,,,,"I'm using the embedded database mechanism with type=""DERBY"" and derby 10.6.1.0. It works, but on the way out the door, I get the following rather loud set of complaining. 

{code}1    [Thread-2] WARN  org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer  - Could not shutdown in-memory Derby database
java.sql.SQLException: Database 'memory:testdb' not found.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleDBNotFound(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection40.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.EmbeddedDriver.connect(Unknown Source)
	at org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer.shutdown(DerbyEmbeddedDatabaseConfigurer.java:75)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.shutdownDatabase(EmbeddedDatabaseFactory.java:177)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean.destroy(EmbeddedDatabaseFactoryBean.java:57)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:487)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:463)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:431)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1022)
	at org.springframework.context.support.AbstractApplicationContext$3.run(AbstractApplicationContext.java:940)
Caused by: java.sql.SQLException: Database 'memory:testdb' not found.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 22 more
{code}",,Investigated changes in latest Derby release. Implemented fix.;30/Sep/10 11:06 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,30/Sep/10 11:09 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17154/mylyn-context.zip,,,,,,,,,,,,,9936000,,,,,2010-09-29 13:00:30.583,2296,true,issuemaster(issuemaster),,,,0|i03pun:,21730,18241,,,,,Sun JVM,"29/Sep/10 1:00 PM;olivergierke;Does that occur repeatedly or just occasionally? In a test case or production? The Derby requires some kind of unusual shutdown process that throws an exception to indicate that it was shut down correctly. The special exception seems to indicate the database is gone entirely already, which seems a little odd","29/Sep/10 4:18 PM;bimargulies;I have a unit test that uses the Spring JUnit test runner. The app context for that test uses jdbc:embedded-database.

Every time I run the unit test I get this backtrace/warning.
","30/Sep/10 4:50 AM;bimargulies;The problem here is cause, I think, by the fact that I have two embedded databases in my context,and Spring names them both 'testdb'.",30/Sep/10 4:59 AM;bimargulies;And there seems to be no provision for 'setName' in the jdbc:embedded-database element.,"30/Sep/10 5:20 AM;olivergierke;In general, with 10.6 Derby has changed the way to shutdown and purge in memory databases. So there's a compatibility issue of the embedded database support for Derby 10.6. and later. I have a fix for that issue here locally but we still have to negotiate in which version this will be applied (depends on how far we're towards the 3.0.5 release already).

Having multiple embedded databases is currently not supported via the namespace but I think we could use the bean id as database name if set. Would you mind opening another ticket for this?","30/Sep/10 5:50 AM;bimargulies;https://jira.springsource.org/browse/SPR-7604
",30/Sep/10 11:08 AM;olivergierke;Thanks for opening the ticket. I'll have a look at it. Meanwhile the fix for the general 10.6 issue should be available in tonights snapshot. Feel free to give it a try.,"01/Oct/10 2:46 PM;bimargulies;The 10.6 problems don't effect reading a clob, do they? Just shutdown?",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12258|https://github.com/spring-projects/spring-framework/issues/12258]. ,,,,,,,,,,,,,,,
HttpStatusCodeException should contain response body,SPR-7591,33496,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,24/Sep/10 2:59 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,24/Sep/10 3:07 AM,,,,,,,,3.0.5,,,,,Web,,,,0,,,,,,,,"Rather than having just the response status code and message available in HttpStatusCodeException (and subclasses HttpClientErrorException and HttpServerErrorException), it's useful to have the full response body available as well. We should offer this response body.",,;24/Sep/10 3:07 AM;arjen.poutsma;2160,,,,,,,,,0,2160,,,0,2160,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:35.568,12604,true,issuemaster(issuemaster),,,,0|i015cn:,6744,7553,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12247|https://github.com/spring-projects/spring-framework/issues/12247]. ,,,,,,,,,,,,,,,,,,,,,,,
View returned from @ExceptionHandler does not take into account response content type,SPR-7586,33475,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,jany2k,jany2k,22/Sep/10 2:23 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,30/Sep/10 4:57 AM,3.0.2,,,,,,,3.0.5,,,,,,,,,0,,,,,,,,"Hi,

I am using Spring Rest to process JSON request and return a JSON response, all works fine.

Now i want to return a html view to user in case JSON request processing throws an exception. For this i have used @ExceptionHandler to create a ModelAndView, but after returning the response DispatcherServlet uses MappingJacksonView to render the response.

Is there a way i can render a HTML Page( in case of error) for request with accept header as application/json

Quote:
{code}
@ExceptionHanlder(value=MultipleItemsFoundExceptio n.class
public ModelAndView handleMultipleItemError(MultipleItemsFoundExceptio n e, HttpServletResponse response){
ModelAndView mav = new ModelAndView();
mav.setViewName(""detail"");
mav.addObject(""list"",e.getItemList());
response.setContentType(""text/html"");
return mav;
}
{code}",,;30/Sep/10 4:53 AM;arjen.poutsma;1020,,,,,,,,,0,1020,,,0,1020,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-09-27 04:49:46.87,8628,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i03puv:,21731,18242,http://forum.springsource.org/showthread.php?p=320611#post320611,,,,,"27/Sep/10 4:49 AM;arjen.poutsma;Sorry, but I'm quite busy with conference preparations, and I don't have the time to fix this before 3.0.5 (due this Thursday).",30/Sep/10 4:26 AM;arjen.poutsma;Added formatting.,"30/Sep/10 4:33 AM;arjen.poutsma;{quote}Is there a way i can render a HTML Page( in case of error) for request with accept header as application/json{quote}

The whole point of content negotiation is that you should not ignore the Accept header :), so the answer to this would be ""no"".

But you can work around the whole content negotiation process by setting a View, rather than a view name. Like so:

{code}
@ExceptionHanlder(value=MultipleItemsFoundExceptio n.class
public ModelAndView handleMultipleItemError(MultipleItemsFoundExceptio n e, HttpServletResponse response){
ModelAndView mav = new ModelAndView();
mav.setView(new JstlView(""/WEB-INF/jsp/detail.jsp""));
mav.addObject(""list"",e.getItemList());
return mav;
}
{code}
","30/Sep/10 4:57 AM;arjen.poutsma;Furthermore, even though it might be a good feature to look at the set Content-Type of the response (as you do in the snippet), we simply don't have access to the current HttpServletResponse in the ContentNegotiatingViewResolver (or any view resolver, for that matter); we only have access to the request.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12242|https://github.com/spring-projects/spring-framework/issues/12242]. ,,,,,,,,,,,,,,,,,,,
"Doc: @RequestMapping does not work, when class implements any interface",SPR-7537,33285,,Task,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Won't Fix,juergen.hoeller,kai.moritz,kai.moritz,10/Sep/10 3:50 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,22/Sep/15 5:34 PM,,,,,,,,,,,,,Web,,,,1,,,,,,,,"I am not sure, if this is really a bug, or just a configuration issue.
Frankly speaking, I think it is the latter...

Nevertheless, I add it as a bug here, since it is a real cutback, which is not mentioned anywhere in the documentation.

When configuring a controller with @Controller and @RequestMapping, everything works fine until one adds an interface to the controller-class. When the class implements an interface, the annotated methods are not found and mapped.

The only resource dealing with this issue I was able to find is the following thread on stackoverflow.com:
http://stackoverflow.com/questions/154042/spring-mvc-problem-using-controller-on-controller-implementing-an-interface/3683558

It says, that one should set the property ""proxy-target-class"" of <tx:annotation-driven/> to true, to force the usage of cglib. But that property is missing in 3.0.x!",,Extended reference documentation;14/Sep/10 4:56 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-09-13 23:14:00.883,15308,true,issuemaster(issuemaster),,Jetty -> 7,,0|i0154v:,6709,7528,,,,,,"10/Sep/10 4:43 AM;kai.moritz;Sorry!

I confused <mvc:annotation-driven/> and <tx:annotation-driven/>!
As mentioned in the thread on stackoverflow.com <tx:annotation-driven proxy-target-class=""true""/> solves the problem.

So pleas close this bug-report (I'm not allowed to do it myself)!

I would suggest to add a tip in the Documentation in chapter 15.3, which points out this limitation and how to work around it. That could save other people a lot of time and headaches.","13/Sep/10 11:14 PM;juergen.hoeller;Actually, @RequestMapping should work with interface-based proxies as well. However, the @RequestMapping annotations need to sit on the *interface* then, since that's the only signature that actually gets exposed through the proxy...

Juergen",14/Sep/10 4:56 AM;olivergierke;Reassigned for review and finalization.,"30/Sep/10 2:24 AM;d.gajic;What will happen if we have controller which implements some of the interfaces like ApplicationEventPublisherAware or InitializingBean? 
For example I have abstract class (without annotations) which implements ApplicationEventPublisherAware. There are two controllers (annotated with @Controller and @RequestMapping) extending it. One is working and another one is throwing No adapter for handler...When I move the interface from the superclass everything works fine.

So the point is, what will happen if we can't put @RequestMapping on the interface we need to implement?",22/Sep/15 5:34 PM;juergen.hoeller;Closing groups of outdated issues. Please reopen if still relevant.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12194|https://github.com/spring-projects/spring-framework/issues/12194]. ,,,,,,,,,,,,,,,,,,
Registering null singleton results in BNFE on context refresh,SPR-7523,33179,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,juergen.hoeller,cbeams,cbeams,03/Sep/10 7:43 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Sep/10 1:38 PM,,,,,,,,3.0.5,,,,,Core,,,,0,,,,,,,,"To reproduce:
{noformat}
@Test
public void nullBeanRegistration() {
		DefaultListableBeanFactory bf = new DefaultListableBeanFactory();
		bf.registerSingleton(""nullBean"", null);
		new GenericApplicationContext(bf).refresh();
}
{noformat}

Notice the {{BeanNotFoundException}} upon {{refresh()}}.

This is happening because {{DefaultSingletonBeanRegistry.getSingleton()}} returns literal {{null}}, and {{AbstractBeanFactory.isFactoryBean()}} interprets {{null}} as meaning ""No singleton instance found"".

Resolution:

In {{isFactoryBean()}}, if the call to {{getSingleton()}} returns null, need need to double check whether the bean name is listed in {{getSingletonNames()}}.  Just evaluating whether it's null is not enough information upon which to make the subsequent decisions.

Those 'subsequent decisions' include assuming that the bean name in question ('nullBean') *must* be associated with a {{BeanDefinition}}, and thus we get the BNFE mentioned above.  ",,;03/Sep/10 9:29 AM;cbeams;4500,,,,,,,,0,0,4500,"9,223,372,036,854,775,807%",0,0,4500,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-09-06 13:38:33.064,8650,true,issuemaster(issuemaster),,,,0|i0463b:,24361,21127,,,,,,"03/Sep/10 9:29 AM;cbeams;Juergen - after attempting to implement the fix, I need to discuss this with you.  Ping me when free, thanks.","03/Sep/10 10:07 AM;cbeams;On further consideration, the best approach is probably to assert not null as a guard within {{registerSingleton()}}.  This was after all just a mistake on my part that led to recognizing the bug in the first place.  If the method failed in such a fashion, I would have realized my error quickly.

It's unlikely that there is a legitimate use case for {{registerSingleton(""beanName"", null)}} in the first place, so preventing it shouldn't cause much pain for anyone.
","06/Sep/10 1:38 PM;juergen.hoeller;I eventually fixed this through containsSingleton checks in four AbstractBeanFactory sections. AbstractBeanFactory does contain some explicit support for null instances (primarily for the purposes of a factory method returning null), so it is arguably more consistent if we do support this for manually registered singletons as well.

Juergen",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12181|https://github.com/spring-projects/spring-framework/issues/12181]. ,,,,,,,,,,,,,,,,,,,,
Improve exception handling in PropertyPlaceholderConfigurer,SPR-7510,33074,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,olivergierke,skaffman,skaffman,31/Aug/10 3:47 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,15/Sep/10 5:09 AM,3.0.4,,,,,,,3.1 M1,,,,,Core,,,,0,,,,,,,,"The {{processProperties()}} method of {{PropertyPlaceholderConfigurer}} has a catch-all for any {{Exception}} thrown by the visitor. The exception's message is extracted and passed to a re-thrown {{BeanStoreDefinitionException}}. However, the remainder of the original exception (including any stack trace) is lost.

This is a problem for unhelpful exceptions like {{NullPointerException}} where the exception message is useless.

Can the original exception be preserved, either by passing it as the root cause of the {{BeanStoreDefinitionException}}, or using a log-and-rethrow?",,Fixed by handing the original exception to {{BeanDefinitionStoreException}} additionally to the original exceptions message.;15/Sep/10 5:09 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-09-14 05:20:25.397,2298,true,issuemaster(issuemaster),,,,0|i03pwf:,21738,18250,,,,,,"14/Sep/10 5:20 AM;olivergierke;We could fix this by simply using another constructor of {{BeanDefinitionStoreException}} to either replace handing the original exception message with handing the exception itself or hand the original exception additionally to its message. However I wonder if there's some rational behind currently not doing so. If not, feel free to assign it to me to actually fix it (@Chris).

Regards,
Ollie","15/Sep/10 2:41 AM;cbeams;Sounds quite reasonable; go ahead Ollie, thanks.",15/Sep/10 5:09 AM;olivergierke;Fixed in a local branch. Waiting for 3.0.5 release to check in that stuff afterwards.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12167|https://github.com/spring-projects/spring-framework/issues/12167]. ,,,,,,,,,,,,,,,,,,,,
Make it easier to add new Message Converters to AnnotationMethodHandlerAdapter,SPR-7504,33043,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,rstoya05-aop,kdelong,kdelong,29/Aug/10 7:04 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,25/Jan/11 10:25 AM,3.0.4,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"See https://support.springsource.com/spring_support_client_getIncidentById/9995

I needed to use MarshallingHttpMessageConverter (so @RequestBody could bind a POST of XML to a POJO).  AnnotationMethodHandlerAdapter is preconfigured in its constructor with several MessagConverters, but not MarshallingHttpMessageConverter.  Using the <mvc:annotation-config/> tag, it was nearly impossible to add this MessageConverter to the AMHA.  Per Spring Support, I had to write a BeanPostProcessor to look for the AMHA and then add the MTHC (and to add insult to injury, it was an array!).

There should be a simpler way to add MessageConverters; in fact, if they are found in the application context they should be added automatically, or they should be added via the mvc:annotation-config.  Or anything more elegant than the BeanPostProcessor.

Also section 19.9 of the reference document implies that MarshallingHttpMessageConverter is configured by default, but it's not.",Irrelevant,;14/Sep/10 6:59 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,14/Sep/10 6:58 AM;olivergierke;7504.patch;https://jira.spring.io/secure/attachment/17101/7504.patch,,,,,,,,,,,,,9936000,,,,,2010-09-14 06:58:35.644,12920,true,issuemaster(issuemaster),,JBoss,,0|i00pn3:,4199,5504,https://support.springsource.com/spring_support_client_getIncidentById/9995,,,,Sun JVM,"14/Sep/10 6:58 AM;olivergierke;Added proposed patch (Git) to be reviewed by Arjen. I added a setter for custom {{HttpMessageConverter<?>}} that will be prepended to the default ones, just like you already can do with custom {{WebArgumentResolver}}.",14/Sep/10 6:59 AM;olivergierke;Reassigned for review and/or further ideas.,"25/Jan/11 10:25 AM;rstoya05-aop;It is now possible to specify a list of HttpMessageConverters through the MVC namespace:

{code:xml}
<mvc:annotation-driven>
    <mvc:message-converters>
        <bean class=""org.springframework.http.converter.StringHttpMessageConverter""/>
        <bean class=""org.springframework.http.converter.ResourceHttpMessageConverter""/>
        <bean class=""org.springframework.http.converter.json.MappingJacksonHttpMessageConverter""/>
    </mvc:message-converters>
</mvc:annotation-driven>
{code}

This option overrides the default set of HttpMessageConverters. Hence when specified the list must include all required message converters. 
","01/Feb/11 8:22 AM;jhuxhorn;I tried to use the above with the current 3.1.0.BUILD-SNAPSHOT but to no avail...
Starting up the application causes a
org.xml.sax.SAXParseException: cvc-complex-type.2.1: Element 'mvc:annotation-driven' must have no character or element information item [children], because the type's content type is empty.

I assume that using the 3.0 schemas is causing this issue but I couldn't find the location of the new 3.1 schemas anywhere.
Any idea how to work around this?","01/Feb/11 8:50 AM;rstoya05-aop;The schemas are in the jar. They don't need to be available at the URI specified in the schema location. Just make sure your schema location in the <beans> element points to spring-mvc.xsd (or spring-mvc-3.1.xsd) and not spring-mvc-3.0.xsd.

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
  xmlns:mvc=""http://www.springframework.org/schema/mvc""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"">

</beans>
{code}","02/Feb/11 4:38 AM;jhuxhorn;Thank you very much for this fast and accurate response!
Everything is working fine now.","03/Feb/11 2:08 PM;jkuipers;Instead of always overriding the list of default converters, forcing people to know what the defaults are exactly so that they can list them again if they only want to register one or two extra converters, why don't we add an attribute like ""appendToDefaults"" to the message-converters element? 
In general I would like to see Spring to offer more support for keeping defaults, as very often more items are added to the default list of mvc-related components with new framework versions and I don't always want to have to keep track of that as I update my applications to benefit from them (Formatters, Converters, HttpMessageConverters, HandlerMappings, HandlerAdapters, etc). Also, the defaults sometimes include smart classpath checking for things like Jackson and Rome, which are not available to me as a simple user using this namespace: being able to append to the defaults would be much simpler.","04/Feb/11 5:16 AM;rstoya05-aop;What we could do is place user-provided message converters in front of the default ones. So whether your provide a completely new JSON converter or an instance of say MappingJacksonHttpMessageConverter configured in a slightly different way, in both cases your converter would override or take precedence over the default ones. 

With this there needs to be a way to turn off default message converter registrations entirely. That we could do through a ""register-defaults"" attribute on the <mvc:message-converters> element, which would be set to true by default.
",04/Feb/11 5:20 AM;jkuipers;Sounds like a good idea to me!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12161|https://github.com/spring-projects/spring-framework/issues/12161]. ,,,,,,,,,,,,,,
Memory leak in serializable bean factory management,SPR-7502,33005,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,cbeams,leoliang,leoliang,27/Aug/10 12:34 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/Aug/10 4:44 AM,3.0.1,,,,,,,3.0.5,,,,,Core,,,,0,,,,,,,,"  Since Spring3.0.0, Spring adds a static ConcurrentHashMap named serializableFactories in DefaultListableBeanFactory to support the BeanFactory's serialization. But we found that when we create more and more bean factories in our application, there seems a memory leak.
  After examined the DefaultListableBeanFactory's source, We found that spring uses a WeakReference to reference the serializableFactories' value. But actually, the segement could not be garbage collected even its weak reference value has been garbage collected.",,;27/Aug/10 4:44 AM;cbeams;5940,,,,,,,,0,0,5940,"9,223,372,036,854,775,807%",0,0,5940,,,,,,,,,,,,,,27/Aug/10 4:44 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/17039/mylyn-context.zip,,,,,,,,,,,,,9936000,,,,,2010-08-27 02:23:02.492,8658,true,issuemaster(issuemaster),,,,0|i0105b:,5901,7055,,,,,,27/Aug/10 12:40 AM;leoliang;'segement' in the last sentence is segment belong to the serializableFactories,"27/Aug/10 2:23 AM;juergen.hoeller;What's the lifecycle of those DefaultListableBeanFactory instances that you are creating? Are you shutting them down as well, which should actually remove them from the serializableFactories Map?

Juergen","27/Aug/10 2:47 AM;leoliang;I admit that one of our developers did use the context in an improper way(all the DefaultListableBeanFactory instances are created as local variable in some method), but since the map is static, even we close the context, its entry still can't be gc(although the value is weakreference), except that the app exits, do I miss something?","27/Aug/10 3:02 AM;cbeams;Hi Leo,

We have identified and reproduced a specific set of conditions that can cause the leak you've reported.  However, it's a pretty unlikely scenario.  Let me explain:

The following will produce a leak:
{code}
while (true) {
    new GenericApplicationContext();
}
{code}

As will this variation:
{code}
while (true) {
    GenericApplicationContext ctx = new GenericApplicationContext();
    ctx.close();
}
{code}

However, if the context is properly {{refresh()}}'ed before {{close()}}, memory consumption stays constant:
{code}
while (true) {
    GenericApplicationContext ctx = new GenericApplicationContext();
    ctx.refresh();
    ctx.close();
}
{code}

So in short, there is a bug here which we'll fix promptly, but it must be asked -- are you indeed creating thousands of application contexts without refreshing them, and if so, why?  Note that most ApplicationContext implementations implicitly call {{refresh()}} for you when you call a constructor that takes arguments such as a path to a Spring XML file.
","27/Aug/10 3:18 AM;leoliang;This code is written by a junior developer. After we found memory leak bug, we have fixed this bug in our app.(let the context be created once not every time the method is called). Thank you. :-)","27/Aug/10 3:30 AM;leoliang;And I really forgot to check the close()'s source. After checked the source, exactly it will not cause a leak if we call close() after properly refresh()ed. :-)","27/Aug/10 3:34 AM;cbeams;Ah, great - mystery solved, then!

In the meantime, this is being fixed.  Thanks for the report.","27/Aug/10 4:44 AM;cbeams;Resolved.  Leo, thanks again for catching this - inadvertent as it may have been.

GenericApplicationContext and AbstractRefreshableApplicationContext
implementations now call DefaultListableBeanFactory.setSerializationId()
only upon successful refresh() instead of on instantiation of the
context, as was previously the case with GAC.

DLBF.setSerializationId() adds the beanFactory to the *static*
DLBF.serializableFactories map, and while calling close() on the
application context removes entries from that map, it does so only if
the context is currently active (i.e. refresh() has been called).

Also, cancelRefresh() has been overridden in GAC just as it has been
in ARAC to accomodate the possibility of a BeansException being thrown.
In this case, the beanFactory serializationId will be nulled out and
the beanFactory removed from the serializableFactories map.

The SerializableBeanFactoryMemoryLeakTests test case provides full
coverage of these scenarios.","03/Feb/15 9:48 PM;malathit90;Can somebody answer the reason for this issue in layman terms here:
http://stackoverflow.com/questions/28271654/spring-creating-multiple-applicationcontext-object-causes-memory-leak",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12159|https://github.com/spring-projects/spring-framework/issues/12159]. ,,,,,,,,,,,,,,
Introduce interceptors for RestTemplate,SPR-7494,32912,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,25/Aug/10 1:43 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,28/Jan/11 6:26 AM,,,,,,,,3.1 M1,,,,,Web,,,,1,,,,,,,,"The RestTemplate will benefit from having interceptor-style delegates, similar to the Spring-WS ClientInterceptors (see http://static.springsource.org/spring-ws/sites/1.5/apidocs/org/springframework/ws/client/support/interceptor/ClientInterceptor.html)

",,;28/Jan/11 6:25 AM;arjen.poutsma;67740,,,,,,,,,0,67740,,,0,67740,,,,,,,,,,,,,,26/Aug/10 8:00 AM;dew_the_fifth;spring-extensions.zip;https://jira.spring.io/secure/attachment/17034/spring-extensions.zip,,,,,,,,,,,,,9936000,,,,,2010-08-26 08:00:37.828,15319,true,issuemaster(issuemaster),,,,0|i00niv:,3856,5211,,,,,,"26/Aug/10 8:00 AM;dew_the_fifth;I've attached a maven project that contains code to implement this feature. The project contains interfaces and classes to describe a HttpContext and extends the existing Spring 3.0.3 org.springframework.web.client.RestTemplate class. 

The major shortcoming, so far as I can tell, of this code base is that the org.springframework.web.client.ExtendedRestTemplate does not account for the fact that the org.springframework.http.client.SimpleClientHttpResponse and the org.springframework.http.client.CommonsClientHttpResponse both maintain a single java.io.InputStream as their body. This is a shortcoming because it means that if a HttpClientInterceptor reads the body of the org.springframework.web.client.context.HttpMessageContext#getResponse then the input stream will be closed when the org.springframework.http.client.ExtendedRestTemplate attempts to extract the response. I've implemented a workaround to this problem with the org.springframework.http.client.RepeatableClientHttpResponse, and demonstrated its use with the org.springframework.web.client.interceptor.LoggingHttpClientInterceptor, but it remains a problem that must be adressed by the interceptor.

Note:
This could be resolved by using a org.springframework.http.client.RepeatableClientHttpResponse directly in the org.springframework.http.client.ExtendedRestTemplate#doExecute method, but doing so would add unecessary overhead to the call for cases where there are no interceptors and/or the interceptors do not need to access the response body.","30/Aug/10 12:33 PM;dew_the_fifth;I think the ClientHttpResponse, at least, could benefit from having a method along the lines of ""isBodyRepeatable"" to denote whether or not it is safe to read the InputStream returned by ""getBody"" more than once. 

I've been thinking about this problem a little bit more, and noticed a problem with the LoggingHttpClientInterceptor. The interceptor will wrap the response without testing to see if it is a RepeatableClientHttpResponse. This means that if a RepeatableClientHttpResponse is received by the LoggingHttpClientInterceptor it will be wrapped inside of yet another RepeatableClientHttpResponse. To avoid this I would need to specifically test to see if the resposne I recieved is a RepeatableClientHttpResponse; which feels rather tightly coupled to a specific implementation. Without the fix however I will waste both memory and CPU on a task that is unnecessary.


Please don't take offense to the following, because I think the foundations of Spring 3.0 are way better than anything I could have done myself. However I think the ClientHttpResponse, ClientHttpRequest, HttpInputMessage, and HttpOutputMessage interfaces are all a little bulky compared to the spring-ws implementations. I'm sure it is because the interfaces were not written with multiple consumers in mind, but even so it makes working with them an exercise in extreme caution. I used my debugger extensivly to ensure that the stream states were not violated, and the LoggingInterceptor only works when the body of the request is a ByteArrayOutputStream.

","28/Jan/11 6:26 AM;arjen.poutsma;Fixed by adding a ClientHttpRequestInterceptor interface, which can be set on the RestTemplate","09/Feb/11 2:49 PM;relphie;What about adding response interceptors?  Even if the issues around the response body inputstream remain unresolved, I see value in being able to inspect the headers ... ","10/Feb/11 12:40 AM;arjen.poutsma;@Brian: you can actually change the response with this ClientHttpRequestInterceptor as well, see 

https://fisheye.springsource.org/browse/~raw,r=3930/spring-framework/trunk/org.springframework.web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java

Soon, Keith will write a blog entry about these interceptors and how they are used in Spring Social to provide OAuth authentication to the RestTemplate.",01/Nov/11 4:07 AM;flozano;PLS back-port this to Spring Android's rest-template,01/Nov/11 4:25 AM;arjen.poutsma;@Francisco: feel free to report an issue against the ANDROID project at https://jira.springsource.org/browse/ANDROID,"17/Nov/11 1:59 PM;rclarkson;Interceptors are already available in Spring Android.

http://static.springsource.org/spring-android/docs/1.0.x/api/org/springframework/http/client/ClientHttpRequestInterceptor.html","26/Jul/12 5:04 PM;chanwook;@Arjen Poutsma 
this link is not available.. 
https://fisheye.springsource.org/browse/~raw,r=3930/spring-framework/trunk/org.springframework.web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java
by your comment.
did you fix link?",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12152|https://github.com/spring-projects/spring-framework/issues/12152]. ,,,,,,,,,,,,,,
Support lazy initialization for jee:jndi-lookup,SPR-7477,32836,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,olivergierke,olivergierke,olivergierke,20/Aug/10 2:26 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/Jun/11 5:43 AM,3.0.4,,,,,,,3.1 M2,,,,,Core,,,,0,,,,,,,,In multi environment scenarios using bean aliases is quite powerful (see attached slide). As handling environments usually involves JNDI lookups. The alias-approach requires beans involved being marked as lazy-init. Thus you will have to use a plain bean definition over the jee namespace. Simply adding a lazy-init attribute would fix that nicely.,,Implementation and test cases;28/Aug/10 12:06 PM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,03/Sep/10 1:52 AM;olivergierke;7477-git.patch;https://jira.spring.io/secure/attachment/17068/7477-git.patch,23/Aug/10 4:17 AM;olivergierke;spring-env-beans.pdf;https://jira.spring.io/secure/attachment/17018/spring-env-beans.pdf,,,,,,,,,,,,9936000,,,,,2010-08-23 04:01:46.948,2299,true,issuemaster(issuemaster),,,,0|i00xon:,5502,6796,,,,,,"23/Aug/10 4:01 AM;cbeams;Ollie - could you flesh this out a bit more?  I'm not sure I understand the use case yet.  No code required, just give a concrete scenario where this would be helpful, thanks.

Tentatively slated for 3.1 M2 while this is vetted.","23/Aug/10 4:17 AM;olivergierke;Take a look at this slide (taken from Eberhard's Advance Spring workshop). This config snippet sets up selecting beans based on a environment property. To only instantiate the bean suitable for the selected environment, all candidate beans have to be marked as lazy-initialized. As also shown in the example the JNDI related bean has to be set up with plain beans namespace as <jee:jndi-lookup /> does not expose this attribute.

If I don't miss any specialties, it should be straight forward to add the attribute and alter the created bean definition accordingly. So if you like, I could provide a draft for you to review.","24/Aug/10 3:12 AM;cbeams;Makes sense, and this particular use case plays into the conversation around SPR-5261 (Conditional Bean Definitions).  You may want to talk to Dave Syer about this, as he's been proposing a similar approach (I added him to the watch list for this issue).

At any rate, the lazy-init attribute seems like a reasonable addition.  Working up a patch would be great; it probably won't get addressed soon otherwise (and could easily slip from 3.1 to 3.2).

For consistency, an analysis should also be done across the rest of the core namespaces to see where else {{lazy-init}} would make sense.  For example, {{jee:remote-slsb}} would be an obvious candidate for the same reasons as {{jndi-lookup}}.","24/Aug/10 3:29 AM;david_syer;I see no reason why lazy-init shouldn't be added (patch would be great), but note that lazy-init does not prevent autowiring, so your dataSource in the example cannot be injected using @Autowired unfortunately.  If we want to fix that it will be more difficult, and it looks like some sort of conditional XML is going to be the answer anyway.","03/Sep/10 1:52 AM;olivergierke;Attached you find a proposed patch to add @lazy-init@ attribute to all elements in @jee@ namespace. It is a Git patch, so applying it to a plain SVN working copy is probably a bit tricky. But as Chris also works with Git SVN integration this should be okay (hopefully :). Any feedback appreciated.

Regards,
Ollie",03/Sep/10 1:52 AM;olivergierke;Reassigned for patch review.,"03/Sep/10 3:17 AM;cbeams;Thanks, Ollie.  I'll take a look at this next week.","01/Jun/11 5:55 AM;cbeams;This is still a candidate for M2, but the unit test failures in JeeNamespaceHandlerTests need to be addressed.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12135|https://github.com/spring-projects/spring-framework/issues/12135]. ,,,,,,,,,,,,,,,
"AbstractXmlStreamReader getAttributeValue(String, String) does not handle null namespaceURI properly",SPR-7474,32821,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,edspace,edspace,18/Aug/10 12:14 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,19/Aug/10 12:54 AM,3.0.3,,,,,,,3.0.4,,,,,Core,,,,0,,,,,,,,"According to the javadoc for XMLStreamReader, when a null namespaceURI is passed to getAttributeValue(String, String), the method should return the attribute value without matching the namespace URI. 

Javadoc:
http://download-llnw.oracle.com/javase/6/docs/api/javax/xml/stream/XMLStreamReader.html#getAttributeValue%28java.lang.String,%20java.lang.String%29

AbstractXmlStreamReader is not handling that condition correctly and tries to match the attribute's namespace with null:

{code}
if (name.getNamespaceURI().equals(namespaceURI) && name.getLocalPart().equals(localName)) {
   return getAttributeValue( i ) ;
}
return null;
{code}

 This results in getAttributeValue returning null whenever the namespaceURI parameter is null. 

The fix would be to change the code above as follows:
{code}
if (*(namespaceURI == null || name.getNamespaceURI().equals(namespaceURI))* && name.getLocalPart().equals(localName)) {
   return getAttributeValue( i ) ;
}
return null;
{code}


Please note that this problem exists in two classes:
org.springframework.util.xml.AbstractXmlStreamReader in Spring-Core 3.0.3
org.springframework.xml.stream.AbstractXmlStreamReader in Spring-Xml 1.5.9
",,;19/Aug/10 12:53 AM;arjen.poutsma;120,,,,,,,,3600,3480,120,3%,3600,3480,120,,,,,,,,,,,,,,18/Aug/10 1:19 PM;edspace;XStreamMarshaller7474.java;https://jira.spring.io/secure/attachment/17012/XStreamMarshaller7474.java,,,,,,,,,,,,,9936000,,,,,2010-08-18 12:36:17.638,8672,true,issuemaster(issuemaster),,,,0|i03pyf:,21747,18260,,,,,,"18/Aug/10 12:28 PM;edspace;By the way, this was discovered while working with spring's XStreamMarshaller which uses XmlEventStreamReader which extends AbstractXmlStreamReader. Because of this bug, the XStreamMarshaller cannot handle attribute unmarshalling correctly. XML attributes are quietly unmarshalled as null instead of with their correct value.  

Here is the full stacktrace:

XmlEventStreamReader(AbstractXmlStreamReader).getAttributeValue(String, String) line: 151	
StaxReader.getAttribute(String) line: 79	
PathTrackingReader(ReaderWrapper).getAttribute(String) line: 52	
ReferenceByXPathUnmarshaller(AbstractReferenceUnmarshaller).convert(Object, Class, Converter) line: 52	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class, Converter) line: 76	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class) line: 60	
CollectionConverter(AbstractCollectionConverter).readItem(HierarchicalStreamReader, UnmarshallingContext, Object) line: 71	
CollectionConverter.populateCollection(HierarchicalStreamReader, UnmarshallingContext, Collection) line: 68	
CollectionConverter.unmarshal(HierarchicalStreamReader, UnmarshallingContext) line: 61	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convert(Object, Class, Converter) line: 82	
ReferenceByXPathUnmarshaller(AbstractReferenceUnmarshaller).convert(Object, Class, Converter) line: 63	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class, Converter) line: 76	
ReflectionConverter(AbstractReflectionConverter).unmarshallField(UnmarshallingContext, Object, Class, Field) line: 246	
ReflectionConverter(AbstractReflectionConverter).doUnmarshal(Object, HierarchicalStreamReader, UnmarshallingContext) line: 218	
ReflectionConverter(AbstractReflectionConverter).unmarshal(HierarchicalStreamReader, UnmarshallingContext) line: 162	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convert(Object, Class, Converter) line: 82	
ReferenceByXPathUnmarshaller(AbstractReferenceUnmarshaller).convert(Object, Class, Converter) line: 63	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class, Converter) line: 76	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class) line: 60	
CollectionConverter(AbstractCollectionConverter).readItem(HierarchicalStreamReader, UnmarshallingContext, Object) line: 71	
CollectionConverter.populateCollection(HierarchicalStreamReader, UnmarshallingContext, Collection) line: 68	
CollectionConverter.unmarshal(HierarchicalStreamReader, UnmarshallingContext) line: 61	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convert(Object, Class, Converter) line: 82	
ReferenceByXPathUnmarshaller(AbstractReferenceUnmarshaller).convert(Object, Class, Converter) line: 63	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class, Converter) line: 76	
ReflectionConverter(AbstractReflectionConverter).unmarshallField(UnmarshallingContext, Object, Class, Field) line: 246	
ReflectionConverter(AbstractReflectionConverter).doUnmarshal(Object, HierarchicalStreamReader, UnmarshallingContext) line: 218	
ReflectionConverter(AbstractReflectionConverter).unmarshal(HierarchicalStreamReader, UnmarshallingContext) line: 162	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convert(Object, Class, Converter) line: 82	
ReferenceByXPathUnmarshaller(AbstractReferenceUnmarshaller).convert(Object, Class, Converter) line: 63	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class, Converter) line: 76	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).convertAnother(Object, Class) line: 60	
ReferenceByXPathUnmarshaller(TreeUnmarshaller).start(DataHolder) line: 137	
ReferenceByXPathMarshallingStrategy(AbstractTreeMarshallingStrategy).unmarshal(Object, HierarchicalStreamReader, DataHolder, ConverterLookup, Mapper) line: 33	
XStream.unmarshal(HierarchicalStreamReader, Object, DataHolder) line: 923	
XStream.unmarshal(HierarchicalStreamReader) line: 899	
XStreamMarshaller.unmarshal(HierarchicalStreamReader) line: 406	
XStreamMarshaller.unmarshalXmlStreamReader(XMLStreamReader) line: 438	
XStreamMarshaller.unmarshalXmlEventReader(XMLEventReader) line: 430	
XStreamMarshaller(AbstractMarshaller).unmarshalStaxSource(Source) line: 311	
XStreamMarshaller(AbstractMarshaller).unmarshal(Source) line: 125	
","18/Aug/10 12:36 PM;juergen.hoeller;Arjen, this looks like a quick enough fix - let's apply it to 3.0.4 still...

Juergen",18/Aug/10 1:19 PM;edspace;I have attached a patched version of XStreamMarshaller in case someone needs to use it until the official fix is released. ,"18/Aug/10 1:23 PM;edspace;Thank you for the quick response Juergen. Putting it in tomorrow's release would be great. 

Ed",19/Aug/10 12:54 AM;arjen.poutsma;Fixed! Thanks for spotting this.,"25/Aug/10 1:13 PM;edspace;As I mentioned in the description, the same fix needs to be applied to 
org.springframework.xml.stream.AbstractXmlStreamReader in Spring-Xml 1.5.9

Do I have to open another JIRA issue for that under the spring-ws project? 

Ed

","26/Aug/10 3:55 AM;arjen.poutsma;@Ed,

No need, I think we are going to get rid of that class anyway before 2.0 final comes out. Duplication is bad and all that :).",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12132|https://github.com/spring-projects/spring-framework/issues/12132]. ,,,,,,,,,,,,,,,,
Regression in redirect URL encoding,SPR-7471,32806,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,rel,rel,18/Aug/10 7:59 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,19/Aug/10 1:55 AM,3.0.4,,,,,,,3.0.4,,,,,Web,,,,0,,,,,,,,"Using spring 3.0.4.BUILD-SNAPSHOT on August 18 2010, redirected views that include a question mark (and possibly other special characters) have the question mark url encoded which causes the url to no longer work. This bug was introduced probably as a result of the fix for  SPR-7427
https://jira.springframework.org/browse/SPR-7427

For example:
redirect:some/path/foo.html?id=1
would be incorrectly encoded as:
some/path/foo.html%3Fid=1


Possibly the encodeUrl method should know how to separately encode the path portion of the url separately from the parameters ?",,;19/Aug/10 1:54 AM;arjen.poutsma;3360,,,,,,,,0,0,3360,"9,223,372,036,854,775,807%",0,0,3360,,,,,,,,,,,SPR-7427,,,,,,,,,,,,,,,,9936000,,,,,2010-08-19 01:55:14.228,8673,true,issuemaster(issuemaster),,,,0|i015gv:,6763,7569,,,,,,19/Aug/10 1:55 AM;arjen.poutsma;Fixed. Thanks for spotting this!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12129|https://github.com/spring-projects/spring-framework/issues/12129]. ,,,,,,,,,,,,,,,,,,,,,,
Split IoC chapter DocBook XML into multiple files,SPR-7467,32775,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Complete,cbeams,cbeams,cbeams,17/Aug/10 2:12 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,18/Aug/10 3:37 AM,,,,,,,,3.0.4,,,,,[Documentation],,,,0,,,,,,,,"At 7,500 lines and over 360,000 characters, {{beans.xml}} is by far the largest docbook source artifact in the Spring reference documentation.

This means extremely slow rendering times for docbook wysiwyg tools such as oXygen Author XML.

Proposed is that this file be split up into four files, simply named:

* {{beans.xml}} - IoC {{<chapter/>}} container and {{<xi:include/>}} elements including the following: 
* {{beans-1.xml}} - first third of content
* {{beans-2.xml}} - second third of content
* {{beans-3.xml}} - final third of content",,;18/Aug/10 3:37 AM;cbeams;9000,,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,,,,,,,,,,,,,18/Aug/10 3:37 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/17011/mylyn-context.zip,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:31.847,15325,true,issuemaster(issuemaster),,,,0|i01g7j:,8503,8725,,,,,,"18/Aug/10 3:37 AM;cbeams;    All <section/> elements in beans.xml >=~ 500 lines have been broken out
    into separate documents with DOCTYPE 'section'. This refactoring makes
    working with these files much easier in wysiwyg editors (namely
    oXygen Author).
    
    For consistency, this same refactoring should be applied to all other
    chapters much larger than 1500 lines, such as aop.xml (3861), mvc.xml
    (3466), jdbc.xml (3042), and so on.
    
    beans.xml and the new section files have also been formatted for
    consistency and to avoid whitespace diffs as much as possible into the
    future.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12125|https://github.com/spring-projects/spring-framework/issues/12125]. ,,,,,,,,,,,,,,,,,,,,,,
Document BeanFactoryPostProcessor implementation constraints,SPR-7466,32774,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,cbeams,cbeams,17/Aug/10 1:55 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,17/Aug/10 2:43 AM,,,,,,,,3.0.4,,,,,[Documentation],,,,0,,,,,,,,"SPR-7450, while not actually a bug in Spring per se, was ultimately related to a BeanFactoryPostProcessor implementation in Spring Security OAuth that was misbehaving by prematurely instantiating bean instances, ultimately subverting the normal bean post-processing lifecycle (specifically, {{AutowiredAnnotationBeanPostProcessor}}).

Document the constraints when implementing BFPPs, such that future authors don't make this mistake.

JavaDoc for BFPP, and relevant section(s) within the reference documentation should be updated.",,;17/Aug/10 6:05 AM;cbeams;2040,,,,,,,,0,0,2040,"9,223,372,036,854,775,807%",0,0,2040,,,,,,,,,,,,,SPR-7450,17/Aug/10 2:43 AM;cbeams;mylyn-context.zip;https://jira.spring.io/secure/attachment/17007/mylyn-context.zip,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:31.822,15327,true,issuemaster(issuemaster),,,,0|i01g7r:,8504,8726,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12124|https://github.com/spring-projects/spring-framework/issues/12124]. ,,,,,,,,,,,,,,,,,,,,,,,
Document constructor-arg 'name' attribute,SPR-7443,32664,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,juergen.hoeller,cbeams,cbeams,10/Aug/10 3:32 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,15/Sep/10 12:28 AM,,,,,,,,3.0.5,,,,,[Documentation],,,,0,,,,,,,,"Spring 3.0 GA introduced support for named constructor args, but this has not been reflected in the reference documentation.

See https://fisheye.springsource.org/browse/spring-framework/trunk/org.springframework.beans/src/main/resources/org/springframework/beans/factory/xml/spring-beans-3.0.xsd?r=2457#l559
",,;14/Sep/10 5:46 AM;olivergierke;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,SPR-6463,,,,,,,,,,,,,,,,9936000,,,,,2010-09-14 05:45:57.794,12616,true,issuemaster(issuemaster),,,,0|i01g87:,8506,8728,,,,,,14/Sep/10 5:45 AM;olivergierke;Fixed in a local branch to wait for 3.0.5 to be released to push changes into SVN.,"14/Sep/10 9:22 PM;juergen.hoeller;Would be great to sneak this into 3.0.5 still... We won't release before the end of this week anyway now.

Juergen",15/Sep/10 12:27 AM;olivergierke;Just pushed the change into SVN.,15/Sep/10 12:28 AM;olivergierke;Reassigned for review and closing.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12101|https://github.com/spring-projects/spring-framework/issues/12101]. ,,,,,,,,,,,,,,,,,,,
CastorMarshaller should have suppressXMLDeclaration,SPR-7442,32662,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,salmar,salmar,10/Aug/10 2:07 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Jun/11 3:12 AM,,,,,,,,3.1 M2,,,,,OXM,,,,0,,,,,,,,"CastorMarshaller has some of the properties the Marshaller from Castor has, but the suppressXMLDeclaration property is not defined. In order to inject the property in the same fashion as the other ones, avoiding overriding the customizeMarshaller method, CastorMarshaller should declare it.",,;11/Aug/10 1:49 AM;arjen.poutsma;1500,,,,,,,,,0,1500,,,0,1500,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-08-11 01:34:46.67,15340,true,issuemaster(issuemaster),,,,0|i04qqn:,27706,22600,,,,,,"11/Aug/10 1:34 AM;arjen.poutsma;The suppressXMLDeclaration has been introduced in Castor 1.3, which we don't have in our repo (yet). I will add the property as soon as it exists.","12/Aug/10 2:38 AM;arjen.poutsma;Rescheduling to 3.1, since it requires a Castor upgrade (from 1.2 to 1.3). We don't want to force such an upgrade in a Spring minor release.",06/Jun/11 3:12 AM;arjen.poutsma;Fixed as part of SPR-8295,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12100|https://github.com/spring-projects/spring-framework/issues/12100]. ,,,,,,,,,,,,,,,,,,,,
JSON (jackson) @RequestBody marshalling throws awkward exception,SPR-7439,32651,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,robertd,robertd,09/Aug/10 2:38 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Jun/11 3:33 AM,3.0.2,,,,,,,3.1 M2,,,,,Web,,,,1,,,,,,,,"When utilizing a @Controller method with annotation @RequestBody and 'application/json' content type with Jackson on the classpath, MappingJacksonHttpMessageConverter throws a 'JsonParseException' (subclass of IOException) when given invalid JSON.

According to AbstractHttpMessageConverter.readInternal()'s documentation, the HttpMessageNotReadableException exception is more appropriate for conversion errors. 

The side effect of this is that DefaultHandlerExceptionResolver throws a 500 Internal Server Error instead of the expected 400 Bad Request.",,;11/Aug/10 1:16 AM;arjen.poutsma;540,;06/Jun/11 3:33 AM;arjen.poutsma;600,,,,,,,,0,1140,,,0,1140,,,,,,,,SPR-9238,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-08-11 01:16:26.847,5093,true,issuemaster(issuemaster),,,,0|i00pcv:,4153,5479,,,,,,"11/Aug/10 1:16 AM;arjen.poutsma;Done, thanks for spotting this!",01/Feb/11 3:29 PM;mzimmer;In the case that the message body is missing a java.io.EOFException is thrown. An org.springframework.http.converter.HttpMessageNotReadableException is more appropriate in this case as well.,06/Jun/11 3:33 AM;arjen.poutsma;Fixed for 3.1,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12097|https://github.com/spring-projects/spring-framework/issues/12097]. ,,,,,,,,,,,,,,,,,,,,
org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text/xml;charset=UTF-8' not supported,SPR-7435,32617,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Cannot Reproduce,arjen.poutsma,abhishek.sapphire,abhishek.sapphire,07/Aug/10 11:24 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,16/Aug/10 1:53 AM,3.0.3,,,,,,,,,,,,Web,,,,2,,,,,,,,"For Ajax post to rest based urls from FF3 getting an exception.

The charset appended to the content type is making this an invalid mediatype.
Earlier was using 3.0.0.RELEASE version.

I saw a similar issue raised here : https://jira.springframework.org/browse/SPR-7135

But upgrading to 3.0.3.RELEASE version did not solve anything.The exception is
 

{noformat}
org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text/xml;charset=UTF-8' not supported
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.readWithMessageConverters(HandlerMethodInvoker.java:636)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveRequestBody(HandlerMethodInvoker.java:596)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveHandlerArguments(HandlerMethodInvoker.java:345)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:170)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:421)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:409)
{noformat}


",,;11/Aug/10 2:05 AM;arjen.poutsma;720,,,,,,,,,0,720,,,0,720,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-08-11 01:52:00.891,8688,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i015hb:,6765,7570,,,,,Sun JVM -> 1.5,"07/Aug/10 12:45 PM;abhishek.sapphire;http://grepcode.com/file/repo1.maven.org/maven2/org.springframework/spring-web/3.0.3.RELEASE/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java#HandlerMethodInvoker

Can we have the parseMediaType() before the line 627 in the above class?

MediaType mediaType = MediaType.parseMediaType(s);

As given in the test class https://fisheye.springsource.org/viewrep/spring-framework/trunk/org.springframework.web/src/test/java/org/springframework/http/MediaTypeTests.java?r=3297

Refer line 177 in the test class.",11/Aug/10 1:52 AM;arjen.poutsma;Added formatting,"11/Aug/10 2:04 AM;arjen.poutsma;The issue is not related to SPR-7135. What seems to be the problem is that there is no HttpMessageConverter that can handle both 'text/xml' and the @RequestBody parameter type. Possibly because that type is not supported by JAXB.

Can you attach the related controller method?",16/Aug/10 1:53 AM;arjen.poutsma;Closing as cannot reproduce until we get user input.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12093|https://github.com/spring-projects/spring-framework/issues/12093]. ,,,,,,,,,,,,,,,,,,,
URL in a redirect is not escaped by RedirectView,SPR-7427,32600,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Won't Fix,arjen.poutsma,chk,chk,06/Aug/10 5:56 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,25/Aug/10 2:03 AM,3.0.3,,,,,,,,,,,,Web,,,,0,,,,,,,,"When a redirect URL(-Template) contains a UTF-8 encoded Identifier (e.g. /products/{productName}), it is sent back unencoded to the User Agent. Even using CharacterEncodingFilter with force-encoding enabled there is no Content-Type header in the response. So the User-Agent expects an ISO-8859-1 or US-ASCII encoded URL, urlencodes and requests it. Expecting a UTF8 encoded URL (through CharacterEncodingFilter), Spring decodes this path segment with a wrong encoding.

There are two possible solutions:

1. I need to determine the character encoding of the response and call UriUtils.encodePathSegment for every critical path segment
2. RedirectView calls UriUtils.encodePath itself

I've spent some thought on this and think that the second option is the way to go. The spring:url tag encodes the path parameters according to the response's encoding. To be consistent in this manner, RedirectView should do the same.

The appended simple change in RedirectView works fine for me, though I haven't run any Unit-Tests against it.",,;11/Aug/10 4:45 AM;arjen.poutsma;9060,,,,,,,,,0,9060,,,0,9060,,,,,,,,,,,SPR-7490,,,06/Aug/10 5:56 AM;chk;RedirectView.java.patch;https://jira.spring.io/secure/attachment/16968/RedirectView.java.patch,,,,,,,,,,,,,9936000,,,,,2010-08-11 04:45:27.115,12617,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i015gn:,6762,7568,,,,,Sun JVM -> 1.6,11/Aug/10 4:45 AM;arjen.poutsma;This should be fixed now.,"18/Aug/10 8:01 AM;rel;This seems to cause a regression by incorrectly encoding special characters as part of the parameters of the url, I have posted a bug report: https://jira.springframework.org/browse/SPR-7471","24/Aug/10 4:55 AM;ahj;The URI passed to RedirectView should already encoded. It has to be, since the URI is passed as a plain String, and the URL parameters may contain characters such as ? and =. Therefore, this fix introduces a serious bug, as all request parameters will be encoded twice.

Furthermore, it is NOT possible to not encode the parameters beforehand. For example, the parameter value may itself be an URL, such as http://test.org?param=value. If I construct an URL using this parameter value, it would look something like http://example.org?query=http://test.org?param=value . RedirectView has no means encoding this URL correctly. Therefore, the only reasonable possibility is to pass the encoded url: http://example.org?query=http%3A%2F%2Ftest.org%3Fparam%3Dvalue to the RedirectView constructor.",24/Aug/10 5:03 AM;arjen.poutsma;Reopened to take another look at this for 3.0.5,"25/Aug/10 2:03 AM;arjen.poutsma;I've reverted all the changes made for this issue, since they simply gave other people to much trouble (and broke their apps).

Simply put: RedirectView is now the way it was in 3.0.3 and requires encoded url to be passed on.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12085|https://github.com/spring-projects/spring-framework/issues/12085]. ,,,,,,,,,,,,,,,,,,
Cron expressions use months based at 0-11 (should be 1-12),SPR-7384,32300,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,david_syer,david_syer,david_syer,20/Jul/10 12:50 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,20/Jul/10 2:26 AM,3.0 GA,,,,,,,3.0.4,,,,,Core,,,,0,,,,,,,,Cron expressions use months based at 0-11 (should be 1-12),,;20/Jul/10 2:26 AM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:29.134,3804,true,issuemaster(issuemaster),,,,0|i03pfr:,21663,3110,,,,,,"20/Jul/10 2:26 AM;david_syer;Done.  We decided it was better to be consistent than support broken old versions (3.0.0-3.0.3 used 0-11 month numbers, but most people probably don't use that).",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12042|https://github.com/spring-projects/spring-framework/issues/12042]. ,,,,,,,,,,,,,,,,,,,,,,
"HTTP headers returned as part of ResponseEntity(MultiValueMap<String, String> headers, HttpStatus statusCode) are ignored when using this constructor",SPR-7381,32251,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,jack_kerouac,jack_kerouac,15/Jul/10 10:13 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,16/Jul/10 12:47 AM,3.0.3,,,,,,,3.0.4,,,,,Web,,,,0,,,,,,,,"If a controller method returns a ResponseEntity, and this entity is created with the constructor ResponseEntity(MultiValueMap<String, String>  headers, HttpStatus  statusCode) the passed headers are ignored and do not appear in the resulting HTTP response.

I suppose that the reason for this is an error in the class AnnotationMethodHandlerAdapter, line 916:
if (body != null) {
	writeWithMessageConverters(body, inputMessage, outputMessage);
}

If the body of the response entity is null, the message is not written.

If I use the constructor ResponseEntity(T body, MultiValueMap<String, String>  headers, HttpStatus  statusCode), the headers appear as expected.",,;16/Jul/10 12:47 AM;arjen.poutsma;180,,,,,,,,900,720,180,20%,900,720,180,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:28.971,8699,true,issuemaster(issuemaster),,,,0|i015p3:,6800,3109,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12039|https://github.com/spring-projects/spring-framework/issues/12039]. ,,,,,,,,,,,,,,,,,,,,,,,
Add equivalent of JAX-RS @Consumes to Spring MVC,SPR-7354,32078,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,kdonald,kdonald,06/Jul/10 1:56 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,14/Jun/11 2:03 AM,3.0.3,,,,,,,3.1 M2,,,,,Web,,,,4,,,,,,,,"As a Spring MVC user, I would like the option to explicitly specify the media types a @Controller can accept.  If a client POSTs a request body that is not of one of those media types, the server should return the UNSUPPORTED_MEDIA_TYPE (415) status.

We should pursue semantic alignment with JAX-RS where possible.  See http://jackson.codehaus.org/javadoc/jax-rs/1.0/javax/ws/rs/Consumes.html for a description of how JAX-RS supports this feature.
",,;11/Apr/11 6:00 AM;arjen.poutsma;33900,,,,,,,,,0,33900,,,0,33900,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:28.198,12950,true,issuemaster(issuemaster),,,,0|i00p7r:,4130,3089,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12013|https://github.com/spring-projects/spring-framework/issues/12013]. ,,,,,,,,,,,,,,,,,,,,,,,
@RequestHeader negation expressions (e.g. !Accept=text/plain) are not applied,SPR-7346,32042,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,kdonald,kdonald,03/Jul/10 4:40 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,06/Jun/11 3:00 AM,3.0.3,,,,,,,3.1 M2,,,,,Web,,,,4,,,,,,,,"To reproduce:
* Checkout https://src.springsource.org/svn/spring-samples/mvc-showcase
* Deploy the application, view the root home page, and click ""Mapping by not presence of header"" link.  You'll see ""Mapped by regexp!"", indicating the wrong @Controller method was matched.  The method that should have been matched was MappingController.byHeaderNegation.  The method looks like:
{code}
@RequestMapping(value=""/mapping/header"", method=RequestMethod.GET, headers=""!Accept=text/plain"")
public @ResponseBody String byHeaderNegation() {
	return ""Mapped by path + method + header with negation!"";
}
{code}
You can confirm using Firebug that the request information contains what should be required to match (""text/plain"" is not an Accept value and the resource URL and HTTP method is correct).",,;14/Jul/10 6:52 PM;arjen.poutsma;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,26/May/11 9:40 AM;edalquist;SPR7346.patch;https://jira.spring.io/secure/attachment/18283/SPR7346.patch,26/May/11 9:40 AM;edalquist;ServletAnnotationMappingUtilsTest.java;https://jira.spring.io/secure/attachment/18284/ServletAnnotationMappingUtilsTest.java,26/May/11 9:17 AM;edalquist;ServletAnnotationMappingUtilsTest.java;https://jira.spring.io/secure/attachment/18282/ServletAnnotationMappingUtilsTest.java,,,,,,,,,,,9936000,,,,,2010-07-14 18:19:08.851,12930,true,issuemaster(issuemaster),,,,0|i00p9r:,4139,2951,,,,,,"14/Jul/10 6:19 PM;arjen.poutsma;The negation operator only tests for header presence, not header value. I.e. {{!Accept=text/plain}} is interpreted as {{!Accept}}, and as such only applies to requests which don't have an Accept header. This is consistent with the way @RequestMapping.params works, and also documented, see [http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html#headers()].

We could add the functionality that you request, but I would suggest using a different syntax ({{Accept!=text/plain}}) to make it easier to parse. I'm changing this issue from a bug to an improvement to do so.","14/Jul/10 6:53 PM;arjen.poutsma;Implemented, using the != operator shown above (""content-type!=application/pdf""). Also implemented for RequestMapping.params().",14/Jul/10 11:07 PM;kdonald;The jsvadocs of request mapping indicate you should be able to test by value.  Did you notice this?,"15/Jul/10 1:27 AM;arjen.poutsma;You are able to test by value, just not in combination with the ! operator:

{quote}
Finally, ""!My-Header"" style expressions indicate that the specified header is not supposed to be *present* in the request.
{quote}

Anyway, it's implemented now (using the != operator), so I wonder why we are even having this discussion.



","20/Jan/11 8:03 AM;ccmtaylor;negated header expressions are not evaluated correctly. I have these two controller methods:

{code}

@RequestMapping(method = RequestMethod.POST, headers=""content-type!=application/xml"")
public String create(...) {
...
}

@RequestMapping(method = RequestMethod.POST, headers=""content-type=application/xml"")
public ResponseEntity<String> create(...) {
...
}
{code}

If the content-type header on the request is set to application/xml, the first controller is invoked.

Using a debugger, I've traced this to faulty logic in ServletAnnotationMappingUtils.checkHeaders():
For the first method, the variable 'found' is true and the variable 'negated' is true for a request with the header ""Content-Type: application/xml"". However, the check

{code}
if(!found) {
    return negated;
}
{code}

causes the enclosing loop to continue, so that the method eventually ends up at the {{return true;}} on the last line, causing the wrong result to be returned.

ServletAnnotationMappingUtils.checkHeaders (correctly) also returns true for the second controller method. Control flow then returns to {{AnnotationMethodHandlerAdapter$ServletHandlerMethodResolver.resolveHnadlerMethod}}. {{RequestSpecificMappingInfoComparator}} and {{Collections.sort}} don't change the list of matches, so the first method is incorrectly returned as the controller method.

If I change my controller class and reverse the method definitions, the other create method is chosen. I suspect this bug can be reproduced by reversing the method definition order in {{ServletAnnotationControllerTests$NegatedContentTypeHeadersController}}, which should cause {{ServletAnnotationControllerTests.negatedContentTypeHeaders}} to fail.",26/May/11 9:17 AM;edalquist;Here is a unit test that verifies the logic problem in checkHeaders. The test also contains an updated version of checkHeaders that fixes the problem. I'll look at checking out the latest source as well and providing a true .patch file,26/May/11 9:40 AM;edalquist;Here is a patch to resolve the issue and an update to the test that also tests and fixes the negation operator for the media type headers,06/Jun/11 3:00 AM;arjen.poutsma;Fixed as part of SPR-7353,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12005|https://github.com/spring-projects/spring-framework/issues/12005]. ,,,,,,,,,,,,,,,
HTTP 405 (Method not supported) returned when 404 Status (Not Found) was expected,SPR-7345,32040,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,kdonald,kdonald,03/Jul/10 2:32 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,15/Jul/10 9:06 PM,3.0.3,,,,,,,3.0.4,,,,,Web,,,,0,,,,,,,,"Scenario:
- Sent a HTTP request for text/html content
- @RequestMapping only matches text/plain content
- A 405 status code was returned when I had expected a 404

This can be reproduced by running the demo application here:
https://src.springsource.org/svn/spring-samples/mvc-showcase

Deploy the application can click on the ""GET /simple/textonly"" link to see the 405 returned.  See the org.springframework.samples.mvc.simple.SimpleControllerRevisited for the @Controller implementation.",,;15/Jul/10 9:06 PM;arjen.poutsma;7860,,,,,,,,,0,7860,,,0,7860,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:27.914,8714,true,issuemaster(issuemaster),,,,0|i015pj:,6802,2964,,,,,,"06/Jul/10 1:13 AM;kdonald;The way I implemented the ""produces"" contract was by using the ""headers"" attribute of @RequestMapping:

{code}
@RequestMapping(value=""/simple/textonly"", method=RequestMethod.GET, headers=""Accept=text/plain"")
public @ResponseBody String simple() {
	return ""Hello world!"";
}
{code}

Thinking about it more , this arguably isn't the same as saying @Produces(""text/plain"").  Specifically, with the code above, if the Accept header was not set to ""text/plain"", one would expect this @RequestMapping rule to never match, and RESOURCE_NOT_FOUND (404) to be returned.  OTOH, with @Produces, you're explicitly setting the acceptable content types; if a client does not support one of them, you'd expect the server to respond with NOT_ACCEPTABLE (406) then.

What seems like a bug is the fact a METHOD_NOT_SUPPORTED (405) is currently returned.

Do we need a separate New Feature JIRA for @Produces-equivalent functionality?",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#12004|https://github.com/spring-projects/spring-framework/issues/12004]. ,,,,,,,,,,,,,,,,,,,,,,
"remove ""Accept-Charset"" header from response, generated by @ResponseBody",SPR-7316,31901,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,allnightlong,allnightlong,23/Jun/10 4:05 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,23/Jun/10 8:16 PM,3.0.3,,,,,,,3.0.4,,,,,,,,,0,,,,,,,,"I use @ResponseBody for ajax features in my app. Ussualy the answer is have only several vharacter length (answers like 'ok', 'fail', etc).
But whole http-response is very big due to Accept-Charset header overhead, like this:

Accept-Charset:big5, big5-hkscs, compound_text, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-solaris, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1381, x-ibm1383, x-ibm33722, x-ibm737, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp

I think, this header is useless, because accept-charset must be request, not response header. So consider removing it.",,;23/Jun/10 8:15 PM;arjen.poutsma;960,,,,,,,,,0,960,,,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-23 20:16:10.396,8722,true,issuemaster(issuemaster),,,,0|i03ph3:,21669,2976,,,,,,23/Jun/10 8:16 PM;arjen.poutsma;Fixed!,"23/Aug/10 6:30 AM;avthart;The behavior still exists in Spring Framework 3.0.4

This header can be bigger than 4 KB which can lead to client side problems or HTTP servers which will limit size on headers they accept (Apache 8KB). 

For now I had to unset this HTTP response header using mod_headers to solve this problem, 
but it would be nice if this can be fixed within the Spring Framework.","23/Aug/10 6:41 AM;arjen.poutsma;There is now a 'writeAcceptCharset' property on the StringHttpMessageConverter. If you set that to false (the default is true), the header is no longer written.

See http://static.springsource.org/spring/docs/3.0.4.RELEASE/javadoc-api/org/springframework/http/converter/StringHttpMessageConverter.html#setWriteAcceptCharset(boolean)",23/Aug/10 7:06 AM;allnightlong;But why writeAcceptCharset=true is default behavior?,"23/Aug/10 7:28 AM;arjen.poutsma;It's only true on the client-side, on the server-side it should be disabled.","23/Aug/10 7:55 AM;arjen.poutsma;Small correction on the above. The property writeAcceptCharset is true on the client-side (RestTemplate), while it's false when using the converter in @MVC. Unfortunately, it's also true when using the mvc XML namespace, while it shouldn't be. This is now fixed in SVN.

",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11974|https://github.com/spring-projects/spring-framework/issues/11974]. ,,,,,,,,,,,,,,,,,
RestTemplate does not handle null uri template parameters,SPR-7314,31883,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,snowch,snowch,22/Jun/10 3:33 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,23/Jun/10 8:33 PM,3.0.2,,,,,,,3.0.4,,,,,Web,,,,0,,,,,,,,"I am trying to call a rest service that has an optional path parameter (areaId, below).  Setting the optional path parameter to null causes a NPE (exception below).  The implications of this are that I have to create a different version of the method call for each optional call parameter and use lots of conditional logic to check if parameter values are null to decide which method to use.

{code}
String FIND_AREAS_QUERY = 
    ""/areas/{areaId}?countryId={countryId}&cityId={cityId}""; 

searchCriteria.setCountryID(123);
searchCriteria.setCityID(345);
searchCriteria.setAreaID(null);

areas = restTemplate.getForObject(
    restEndpointUrl + FIND_AREAS_QUERY,
    Areas.class,
    searchCriteria.getAreaID(),   /* NPE */
    searchCriteria.getCountryID(),
    searchCriteria.getCityID()
);
{code}

The exception is as follows:

{code}
java.lang.NullPointerException
	at org.springframework.web.util.UriTemplate.expand(UriTemplate.java:128)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:400)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:199)
{code}

The current workaround is below:  This can get quite a burden for lots of optional parameters.

{code}
String FIND_AREAS_QUERY = 
    ""/areas/{areaId}?countryId={countryId}&cityId={cityId}""; 

searchCriteria.setCountryID(123);
searchCriteria.setCityID(345);
searchCriteria.setAreaID(null);

if (searchCriteria.getAreaID() != null) {
   areas = restTemplate.getForObject(
       restEndpointUrl + FIND_AREAS_QUERY,
       Areas.class,
       searchCriteria.getAreaID(),
       searchCriteria.getCountryID(),
       searchCriteria.getCityID()
   );
} else {
   areas = restTemplate.getForObject(
       restEndpointUrl + FIND_AREAS_QUERY,
       Areas.class,
       searchCriteria.getCountryID(),
       searchCriteria.getCityID()
   );
}
{code}

",,;23/Jun/10 8:33 PM;arjen.poutsma;960,,,,,,,,,0,960,,,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-23 20:33:26.561,15435,true,issuemaster(issuemaster),,Standalone,,0|i015sv:,6817,2975,,,,,Sun JVM -> 1.6,23/Jun/10 8:33 PM;arjen.poutsma;Fixed!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11972|https://github.com/spring-projects/spring-framework/issues/11972]. ,,,,,,,,,,,,,,,,,,,,,,
Clarify usage of CustomEditorConfigurer,SPR-7311,31877,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,juergen.hoeller,olivergierke,olivergierke,21/Jun/10 11:07 PM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,21/Jun/10 11:43 PM,3.0.3,,,,,,,,,,,,[Documentation],,,,0,,,,,,,,The JavaDoc of {{CustomEditorConfigurer}} is a little ambiguous on when a {{PropertyEditorRegistry}} should be configured and when using the {{customEditors}} property can/should be used.,,Fixed JavaDoc.;21/Jun/10 11:42 PM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-21 23:17:20.467,2416,true,issuemaster(issuemaster),,,,0|i00xpr:,5507,3087,,,,,,21/Jun/10 11:17 PM;eberhardwolff;If you read the JavaDoc one might think that the use of the customEditors property is not a good idea and that you should use PropertyEditorRegistrar instead. In fact the customEditors are still fine but you must not register PropertyEditor instances in the map.,21/Jun/10 11:43 PM;olivergierke;Reassigned for validation and closing.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11970|https://github.com/spring-projects/spring-framework/issues/11970]. ,,,,,,,,,,,,,,,,,,,,,
o.s.http.client.SimpleClientHttpRequestFactory does not allow to specify a java.net.Proxy,SPR-7305,31865,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,cedrik_lime,cedrik_lime,20/Jun/10 8:58 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,23/Jun/10 10:45 PM,3.0.3,,,,,,,3.0.4,,,,,Web,,,,0,,,,,,,,"While working with the new ClientHttpRequestFactory, I need to create an outgoing HTTP connection via a proxy.
ClientHttpRequestFactory has 2 implementations: commons-http and simple (Java native).
While I can specify a proxy using CommonsClientHttpRequestFactory (it exposes the HttpClient instance), this is not true of SimpleClientHttpRequestFactory.

To fix this problem, you need to externalise the 1st line of SimpleClientHttpRequestFactory#createRequest(URI, HttpMethod) so that we can subclass uri.toURL().openConnection() to read uri.toURL().openConnection(someProxy) when needed.",,;23/Jun/10 10:44 PM;arjen.poutsma;7740,,,,,,,,,0,7740,,,0,7740,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-23 22:45:28.472,15441,true,issuemaster(issuemaster),,,,0|i015sn:,6816,2973,,,,,,"23/Jun/10 10:45 PM;arjen.poutsma;Done, the SimpleClientHttpRequestFactory now has a Proxy property.

I've also added o.s.http.client.support.ProxyFactoryBean, to allow for easier configuration of java.net.Proxy in Spring XML app contexts.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11964|https://github.com/spring-projects/spring-framework/issues/11964]. ,,,,,,,,,,,,,,,,,,,,,,
TypeMismatchException instead of IllegalArgumentException: argument type mismatch for wrong RequestBody,SPR-7263,31643,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,gbrehmer,gbrehmer,06/Jun/10 8:51 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,08/Jun/10 9:36 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"If a controller method is called with a wrong (but for message converter known type) @RequestBody message, an java internal reflection exception will be raised: java.lang.IllegalArgumentException: argument type mismatch.

It would be nice, if a Spring-TypeMismatchException exception could be raised instead (so a type check is needed). This exception is already mapped to a 400 Bad Request. With IllegalArgumentException the cause of the exception is not exactly enough.",,;08/Jun/10 9:35 PM;arjen.poutsma;5880,,,,,,,,,0,5880,,,0,5880,,,,,,,,,,,,,,08/Jun/10 9:31 AM;gbrehmer;SPR7263Tests.java;https://jira.spring.io/secure/attachment/16641/SPR7263Tests.java,,,,,,,,,,,,,9936000,,,,,2010-06-07 20:45:20.357,15472,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i015u7:,6823,7580,,,,,Sun JVM -> 1.6,"07/Jun/10 8:45 PM;arjen.poutsma;I'm having difficulties reproducing this issue. Can you illustrate when this issue occurs? Specifically, I'm interested in the @Controller method signature, and the payload (content-type and contents) that triggers this behavior. It would be great if you could attach a unit test that reproduces this, but it's not strictly necessary.","07/Jun/10 11:30 PM;gbrehmer;Controller:

{code:java}
@RequestMapping(value=""/customer/{id}/address"", method = RequestMethod.PUT)
@ResponseStatus(value = HttpStatus.NO_CONTENT)
public void changeAddress(@PathVariable(""id"") Long id, @RequestBody Address address, HttpServletRequest request) {
}

@RequestMapping(value=""/customer/{id}/bankaccount"", method = RequestMethod.PUT)
@ResponseStatus(value = HttpStatus.NO_CONTENT)
public void changeBankAccount(@PathVariable(""id"") Long id, @RequestBody BankAccount bankAccount, HttpServletRequest request) {
}
{code}

If I call ""customer/123/bankaccount"" with an address-instances as xml payload, the Payload will be converted by the MessageConverter but is the wrong type for function call. The MarshallingHttpMessageConverter is not using provided requestbody class type instead of other HttpMessageConverter.

Http-Request:
{noformat}
PUT /app/customer/38961805/address HTTP/1.1
Content-Length: 27
Content-Type: application/xml 

<bankAccount></bankAccount>
{noformat}

Spring-config:

{code:xml}
	<bean
		class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"">
		<property name=""messageConverters"">
			<list>
				<ref bean=""marshallingHttpMessageConverter"" />
			</list>
		</property>
	</bean>
	<bean id=""marshallingHttpMessageConverter""
		class=""org.springframework.http.converter.xml.MarshallingHttpMessageConverter"">
		<property name=""marshaller"" ref=""marshaller""></property>
		<property name=""unmarshaller"" ref=""marshaller""></property>
	</bean>
	<bean id=""marshaller"" class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
		<property name=""classesToBeBound"" ref=""jaxbxmlrootlist"" />
	</bean>
{code}

I have more time tonight and can then provide a unittest.","08/Jun/10 9:31 AM;gbrehmer;Attached a unittest. During the configuration of the test i saw, that Jaxb2RootElementHttpMessageConverter unlike MarshallingHttpMessageConverter throws the right exception (MessageNotReadable), because it creates a new JAXBContext/Marshaller for each request, which only supports the type of the @RequestBody method parameter.",08/Jun/10 8:21 PM;arjen.poutsma;Thanks for the unit test! That certainly helps.,"08/Jun/10 9:36 PM;arjen.poutsma;Fixed now. The unit test really helped, thanks for that!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11922|https://github.com/spring-projects/spring-framework/issues/11922]. ,,,,,,,,,,,,,,,,,,
ResponseStatus.reason() ignored for @ExceptionHandler methods,SPR-7259,31628,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,jkuipers,jkuipers,03/Jun/10 10:59 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,07/Jun/10 12:33 AM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,{{AnnotationMethodHandlerExceptionResolver#getModelAndView(...)}} only takes {{ResponseStatus#value()}} into consideration and ignores {{ResponseStatus#reason()}}. It should act like {{ResponseStatusExceptionResolver#resolveResponseStatus(...)}} and check if a reason is provided as well. ,,;07/Jun/10 12:33 AM;arjen.poutsma;540,,,,,,,,,0,540,,,0,540,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-07 00:33:55.76,8737,true,issuemaster(issuemaster),,,,0|i015v3:,6827,7583,,,,,,07/Jun/10 12:33 AM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11918|https://github.com/spring-projects/spring-framework/issues/11918]. ,,,,,,,,,,,,,,,,,,,,,,
AbstractMarshaller incorrectly expects DOMResult to already have a node,SPR-7257,31611,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,archie172,archie172,03/Jun/10 8:52 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,07/Jun/10 12:15 AM,3.0.2,,,,,,,3.0.3,,,,,OXM,,,,0,,,,,,,,"If you try to marshall an object into a {{DOMResult}} that was created with the {{DOMResult()}} no-arg constructor, you get this:

{noformat}
java.lang.IllegalArgumentException: DOMResult does not contain Node
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.oxm.support.AbstractMarshaller.marshalDomResult(AbstractMarshaller.java:192)
	at org.springframework.oxm.support.AbstractMarshaller.marshal(AbstractMarshaller.java:93)
{noformat}

But why? The [Javadoc for DOMResult|http://java.sun.com/javase/6/docs/api/javax/xml/transform/dom/DOMResult.html] states:
{quote}
If no output DOM source is set, the transformation will create a Document node as the holder for the result of the transformation, which may be retrieved with getNode().
{quote}

So this check is in violation of the DOM API. In any case, I can't create the node because I don't know what the document element is going to be (in general, only the marshaller knows that).

",,;07/Jun/10 12:15 AM;arjen.poutsma;420,,,,,,,,,0,420,,,0,420,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-06-07 00:15:26.114,8739,true,issuemaster(issuemaster),,Standalone,,0|i03q8v:,21794,18292,,,,,Mac OS X JVM,07/Jun/10 12:15 AM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11916|https://github.com/spring-projects/spring-framework/issues/11916]. ,,,,,,,,,,,,,,,,,,,,,,
"ResponseEntity having body, headers and HttpStatus mixed up in responseEntity.getBody()",SPR-7233,31480,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,tanmoy.banerjee,tanmoy.banerjee,24/May/10 10:18 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,27/May/10 7:08 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"My ProductController method returns @ResponseBody ResponseEntity<Product> which contains custom HttpHeaders 
{code:title=ProductCntroller.java|borderStyle=solid}
public @ResponseBody
ResponseEntity<Product> readProductAndException(@PathVariable String productId) {
        Product product = new Product();
	ResponseEntity<Product> entity = null;
..........
..........
	HttpHeaders responseHeaders = new HttpHeaders();
	responseHeaders.add(""ExceptionCause"", ""Some cause"");
	responseHeaders.add(""ExceptionClass"", ""Exception class"");
	entity = new ResponseEntity<Product>(product, responseHeaders,HttpStatus.OK);
	return entity;
}
{code}

and produces the Json string as expected (plz. see the forum post for details)

In the RestClient, I was expecting that when I perform getForEntity(), I get back ResponseEntity<Product> from which I can get back Product product = responseEntity.getBody(). However, first of all,this line of code : 

{code}
ResponseEntity<Product> responseEntity = restTemplate.getForEntity(
				readProductURI, Product.class);
{code}

gives me the following exception: 
{code}
Exception in thread ""main"" org.springframework.web.client.ResourceAccessException: I/O error: Unrecognized field ""statusCode"" (Class com.company.sample.restpoc.domain.Product), not marked as ignorable
 at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@10382a9; line: 1, column: 2]; nested exception is org.codehaus.jackson.map.JsonMappingException: Unrecognized field ""statusCode"" (Class com.company.sample.restpoc.domain.Product), not marked as ignorable
 at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@10382a9; line: 1, column: 2]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:453)
{code}

Instead, I tried to find out what is being received in the client side and found out that the ResponseEntity.getBody() gives everything, the body, the headers, the HttpStatus when there are separate methods for getting the headers and the HttpStatus

{code}
URI readProductURI = new URI(
				""http://localhost:8080/spring-rs-poc-1.0.0/products/view/""
						+ productId);

		ResponseEntity<Object> responseEntity = restTemplate.getForEntity(
				readProductURI, Object.class);

		System.out.println(""Printing responseBody.getBody()"");
		
		Map<String, ?> map = (Map<String, ?>)responseEntity.getBody();
		for (String key : map.keySet()) {
			System.out.println(""key : "" + key + "", value : ""+map.get(key));
		}
		System.out.println(""Printing responseEntity.getHeaders()"");
		
		HttpHeaders headers = responseEntity.getHeaders();
		Set<String> keys = headers.keySet();
		for (String header : keys) {
			System.out.println(""Header: ""+header);
			List<String> values = headers.get(header);
			for (String value : values) {
				System.out.println(""Header Value: ""+ value);
			}
		}

{code}

gives : 
{code}
Printing responseBody.getBody()
key : statusCode, value : OK
key : body, value : {price=null, sku=null, name=null, id=null, currency=null}
key : headers, value : {ExceptionCause=[No matching resource], ExceptionClass=[com.company.sample.common.exception.BusinessException]}

Printing responseEntity.getHeaders()
Header: Server
Header Value: Apache-Coyote/1.1
Header: Content-Type
Header Value: application/json
Header: Transfer-Encoding
Header Value: chunked
Header: Date
Header Value: Mon, 24 May 2010 12:29:24 GMT
{code}

This is apparently happening, I guess because my @ResponseBody is ResponseEntity<Product> which means when ResponseEntityResponseExtractor is calling the 
{code:title=ResponseEntityResponseExtractor}
T body = delegate.extractData(response);
{code}
the InputStream has the HttpStatus, Body and Headers all mixed up and hence the exception is being thrown. However, the inputStream should have only Product, while the response.getHeaders should have the custom headers and response.getStatusCode() should have the HttpStatus. Similarly, I feel the ResponseEntity.getBody() should give only the body, while the getHeaders() and getStatusCode() should have the headers and status code respectively


","Windows, Linux",;27/May/10 7:07 PM;arjen.poutsma;1920,,,,,,,,,0,1920,,,0,1920,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-05-25 09:15:04.903,15494,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i015vj:,6829,7584,http://forum.springsource.org/showthread.php?t=89796,,,,Sun JVM -> 1.6,25/May/10 9:15 AM;arjen.poutsma;Can you try and remove @ResponseBody from the controller method signature? I believe that's the culprit.,"25/May/10 4:41 PM;tanmoy.banerjee;Thanks Arjen,this works. Makes sense, one is the bound response body, the other is the entire response entity. However, please include this in the api java-doc if that helps make it explicit. ","27/May/10 7:08 PM;arjen.poutsma;I've reversed the return value check, so that HttpEntity/ResponseEntity now takes presedence over @ResponseBody. No documentation required, then :).","27/May/10 7:15 PM;tanmoy.banerjee;Ok Arjen, thanks :)",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11892|https://github.com/spring-projects/spring-framework/issues/11892]. ,,,,,,,,,,,,,,,,,,,
Extend HttpMessage interface to expose requestURL,SPR-7211,31396,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,aantono,aantono,17/May/10 11:48 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,17/May/10 10:14 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"In many cases it is advantageous to know where the Http Request was made (debugging, tracking, etc).
When using RestTemplate and coding against an HttpMessage interface, and its sub-interfaces, it would be nice to know what the request URL was.

Uses would include:
* Debugging
* Monitoring
* Caching
",,;17/May/10 10:14 PM;arjen.poutsma;7440,,,,,,,,,0,7440,,,0,7440,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-05-17 22:15:34.733,15511,true,issuemaster(issuemaster),,Tomcat,,0|i015wv:,6835,7587,,,,,Sun JVM -> 1.6,"17/May/10 11:50 AM;aantono;propose to add the following method to HttpMessage interface:

{code}
public java.net.URL getRequestUrl();
{code}",17/May/10 10:15 PM;arjen.poutsma;I've added getURI() to both ClientHttpRequest and ServerHttpRequest,"18/May/10 12:39 AM;aantono;Arjen, what about the *Response objects?  Its just as useful to know what request a response came for, as to know where the request is going to.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11870|https://github.com/spring-projects/spring-framework/issues/11870]. ,,,,,,,,,,,,,,,,,,,,
Doc: AspectJ argument binding does not work with typed collections,SPR-7186,31327,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,ramnivas,olivergierke,olivergierke,10/May/10 9:01 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,18/May/10 9:42 PM,3.0.2,,,,,,,3.0.3,,,,,[Documentation],,,,1,,,,,,,,"Suppose you have a generic class with a method accepting a collection of the generic type:

{code:java}
public class FooImpl<T> extends Foo<T>{

  @Override
  public void bar(List<T> param) {
    ...
  }
}
{code}

Now want to intercept the method calls whenever a list of *special T's* is given:

{code:java}
@Before(""execution(* Foo+.bar(..)) && args(param)"")
public void method(List<MySpecialType> param) {
  ...
}
{code}

Unfortunately this gets also invoked if {{FooImpl.bar(...)}} is called with a list consisting of non-{{MySpecialType}} instances which results in a {{ClassCastException}}. The reason for this probably lies in the fact, that of course {{List<MySpecialType>}} gets erased to {{List}} and thus the pointcut arguments get a primitive type of {{List}} assigned and thus matches also lists of non-{{MySpecialType}}. I tried to add concrete type information to the {{args(...)}} directive as follows:

{code:java}
@Before(""execution(* Foo+.bar(..)) && args(param<java.util.List<MySpecialType>>)"")
{code}

This get's parsed by the {{PointcutParser}} successfully but the information is neglected during matching. The only way around seems to be making a collection member type check inside the advice manually which is a little ugly IMHO.

Regards,
Ollie
",,Documentation draft.;18/May/10 8:33 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-05-11 01:39:47.589,2418,true,issuemaster(issuemaster),,,,0|i00xqf:,5510,6798,,,,,,"11/May/10 1:39 AM;ramnivas;I don't think this can be implemented (in Spring AOP as well as AspectJ). With AspectJ weaver, if you use call() pointcut, you can have a match based on generic parameters, BTW.

Also, did your second pointcut:
{code}
@Before(""execution(* Foo+.bar(..)) && args(param<java.util.List<MySpecialType>>)"")
{code}
work? That is not a syntactically valid pointcut. If it worked, that is a (separate) bug. You probably meant:
{code}
@Before(""execution(* Foo+.bar(..)) && args(java.util.List<MySpecialType>)"")
{code}
then that won't work for the same erasure issue. There is no way to do check such as 'foo instanceof List<MySpecialType>'","11/May/10 2:13 AM;olivergierke;Thanks for your comment, Ramnivas. Yes, the strangely looking pointcut is being parsed without issues. I'll take another deep dive into that and open a ticket in the AspectJ bugtracker.

Regarding the ""impossible"" I see, that there's no general solution possible as the typechecks would have to be done possibly into unlimited depth. But in case of the simple ""Collection of X"" case I see two ways. In general if X can be found out one could peek into the provided argument collection at runtime and include that result into the overall matching decision. From the poincut expression you gave above {{MySpecialType}} is extractable (actually the ""buggy"" parser already does) as well as the fact that we deal wich a collection. Alternatively Spring's {{GenericCollectionTypeResolver}} could be used to narrow the types if a {{PointcutParameter}}'s type is a collection.","11/May/10 4:04 AM;aclement;Let me know (via an AspectJ bug) about the rogue parsing of that unusual expression - looks to be a bug.

I agree with Ramnivas.  We might be able to do a bit more but I'm still concerned we can't always recover what is required to do the match - yes Springs helper (or to avoid a spring dependency, a new AspectJ one) can dig to a degree but sometimes you cannot recover that generic info as you don't know where to look (I'm not saying the info isn't there, I'm saying we don't know where it is).  The List flowing into bar() could have come from anywhere (without flow analysis) and at the point of doing the match all I can ask at runtime is for the class of that list.  Unless it is a distinct type that extends list:

class MySpecialTypeList extends List<MySpecialType> {}

then I just won't know where the original list was declared in order to discover the generic signature.

I could automate creation of the check of the elements (what you are currently coding in the advice) but turning this:

args(List<MyFoo>)

info a runtime check like this:

if (argument instanceof List && ((List)argument).size()>0 && ((List)argument).get(0) instanceof MyFoo)) {

doesn't feel right.","11/May/10 4:42 AM;ramnivas;To add to Andy's comment: Even checking for the 0th element to guess/check collection's type doesn't feel adequate (or right). To be semantically right, AspectJ will need to examine every element in the collection. And even then, there are issues such as accounting for 'null' elements (does it match a logical 'instanceof' or not?).

I think this issue belongs to ""blame it on erasure"" category :-) with little room to do the right thing.","12/May/10 9:40 AM;olivergierke;Okay, I get your points. Can we turn this into a documentation issue then? Spring AOP documentation is quite short on generics and arguments in general and AspectJ documentation on generics does not mention {{@Aspect}} configuration at all. I think we should at least leave a note at least in Spring documentation IMHO then that collections cann not be bound this way. Assign this ticket to me if you like me to propose a draft.

Regarding the invalid pointcut I've opened https://bugs.eclipse.org/bugs/show_bug.cgi?id=312730.",17/May/10 9:26 AM;ramnivas;Assigning for draft document,"18/May/10 8:32 AM;olivergierke;What do you think about this?

{noformat}<section id=""aop-ataspectj-advice-params-generics"">
          <title>Advice parameters and generics</title>

          <para>Spring AOP can handle generics used in class declarations and
          method parameters. Suppose you have a generic type like this:</para>

          <programlisting language=""java"">public interface Sample&lt;T&gt; {
  void sampleGenericMethod(T param);
  void sampleGenericCollectionMethod(Collection&gt;T&gt; param);
}</programlisting>

          <para>You can restrict interception of method types to certain
          parameter types by simply typing the advice parameter to the
          parameter type you want to intercept the method for:</para>

          <programlisting language=""java"">@Before(""execution(* ..Sample+.sampleGenericMethod(*)) &amp;&amp; args(param)"")
public void beforeSampleMethod(MyType param) {
  // Advice implementation
}</programlisting>

          <para>That this works is pretty obvious as we already discussed
          above. However, it's worth pointing out that this won't work for
          generic collections. So you cannot define a pointcut like
          this:</para>

          <programlisting language=""java"">@Before(""execution(* ..Sample+.sampleGenericCollectionMethod(*)) &amp;&amp; args(param)"")
public void beforeSampleMethod(Collection&lt;MyType&gt; param) {
  // Advice implementation
}</programlisting>

          <para>To make this work we would have to inspect every element of
          the collection, which is not reasonable as we also cannot decide how
          to treat <literal>null</literal> values in general. To achieve
          something similar to this you have to type the parameter to
          <interfacename>Collection&lt;?&gt;</interfacename> and manually
          check the type of the elements.</para>
        </section>{noformat}",18/May/10 8:32 AM;olivergierke;Reassigned for feedback.,"18/May/10 10:36 AM;ramnivas;Looks good to me. Do you want to commit this change yourself? Otherwise, let me know and I can do it.",18/May/10 4:56 PM;olivergierke;See https://fisheye.springsource.org/changelog/spring-framework/?cs=3351. Close it if you like.,18/May/10 4:57 PM;olivergierke;Updated ticket properties according to latest development.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11845|https://github.com/spring-projects/spring-framework/issues/11845]. ,,,,,,,,,,,,
ShallowEtagHeaderFilter not adding ETag,SPR-7160,31227,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,mpugmire,mpugmire,02/May/10 2:52 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,02/May/10 7:59 PM,3.0.1,3.0.2,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"ShallowEtagHeaderFilter has not been adding an ETag to the HTTP header in 3.0.1.RELEASE and 3.0.2.RELEASE in my environment.  ShallowEtagHeaderFilter in 3.0.0.RELEASE does add an ETag to the HTTP header in my environment.

What is preventing the ETag from being added is a statusCode (ShallowEtagHeaderFilter:60) that is always equal to -1.  I cannot find what is causing the statusCode to be equal to -1.

{code}
<filter>
    <filter-name>ShallowEtagHeaderFilter</filter-name>
    <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
</filter>
<filter-mapping>
    <filter-name>ShallowEtagHeaderFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>
{code}",,;02/May/10 7:58 PM;arjen.poutsma;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-05-02 19:59:11.254,8768,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i015yf:,6842,7593,,,,,Sun JVM -> 1.6,"02/May/10 7:59 PM;arjen.poutsma;The default status code has changed from -1 to 200 now, so it should work again.

Can you please try a recent snapshot and see if it works for you? Thanks

Arjen",04/May/10 6:26 AM;mpugmire;ETags are being added again in 3.0.3.BUILD-20100504.072540-29. Thank you.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11819|https://github.com/spring-projects/spring-framework/issues/11819]. ,,,,,,,,,,,,,,,,,,,,,
AppEngine : bug with SimpleClientHttpResponse.getHeaders,SPR-7146,31178,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,arutha,arutha,28/Apr/10 6:37 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,28/Apr/10 8:21 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"Hi,

I'm trying to use @ResponseBody with Spring 3.0.2 on AppEngine
I got a RestClientException(""Cannot extract response: no Content-Type found"") : 
from HttpMessageConverterExtractor (line 66) :

{code}
		MediaType contentType = response.getHeaders().getContentType();
		if (contentType == null) {
			throw new RestClientException(""Cannot extract response: no Content-Type found"");
		}
{code}

The problem comes from response.getHeaders() :
the field 0 is ignored, but with AppEngine, field 0 IS Content-Type
AppEngine uses com.google.apphosting.utils.security.urlfetch.URLFetchServiceStreamHandler$Connection as HttpURLConnection

{code}
			// Header field 0 is the status line, so we start at 1
			int i = 1;
			while (true) {
				String name = this.connection.getHeaderFieldKey(i);
				if (!StringUtils.hasLength(name)) {
					break;
				}
				this.headers.add(name, this.connection.getHeaderField(i));
				i++;
			}
{code}

Sorry for my poor english...

Thank you for your help","appengine 1.3.3.1, gwt 2.0.3, java sun 1.6.0.15, spring 3.0.2.release",;28/Apr/10 8:21 PM;arjen.poutsma;4500,,,,,,,,,0,4500,,,0,4500,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-04-28 19:05:56.87,8773,true,issuemaster(issuemaster),,Jetty,,0|i015yn:,6843,7594,,,,,Sun JVM -> 1.6,28/Apr/10 7:05 PM;arjen.poutsma;Added formatting.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11805|https://github.com/spring-projects/spring-framework/issues/11805]. ,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in AnnotationMethodHandlerAdapter if HttpHeaders in ResponseEntity are empty,SPR-7145,31174,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,jack_kerouac,jack_kerouac,28/Apr/10 1:49 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,28/Apr/10 7:04 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"A NullPointerException occurs, if a controller method is invoked, that returns a ResponseEntity and the HttpHeaders passed to the constructor of ResponseEntity are empty.
A code snippet, that results in the exception:
{code} 
@RequestMapping(method = RequestMethod.GET)
public ResponseEntity<String> unregisterEndpoint() {
	return new ResponseEntity<String>(new HttpHeaders(), HttpStatus.NOT_FOUND);
}
{code}

If I change the constructor to use a string parameter for the HTTP body, the error does not occur.

{code}
@RequestMapping(method = RequestMethod.GET)
public ResponseEntity<String> unregisterEndpoint() {
	return new ResponseEntity<String>("""", HttpStatus.NOT_FOUND);
}
{code}

So it seems to be connected to the empty HttpHeaders object.

{noformat} 
java.lang.NullPointerException
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.writeWithMessageConverters(AnnotationMethodHandlerAdapter.java:927)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.handleHttpEntityResponse(AnnotationMethodHandlerAdapter.java:915)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.getModelAndView(AnnotationMethodHandlerAdapter.java:847)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:423)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:409)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:771)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:582)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:643)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:269)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAsPrivileged(Subject.java:537)
	at org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:301)
	at org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:162)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:283)
	at org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:56)
	at org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:189)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:636)
{noformat} ",,;28/Apr/10 7:04 PM;arjen.poutsma;420,,,,,,,,,0,420,,,0,420,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:21.628,8774,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i015yv:,6844,7595,,,,,Sun JVM -> 1.6,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11804|https://github.com/spring-projects/spring-framework/issues/11804]. ,,,,,,,,,,,,,,,,,,,,,,,
"org.springframework.http.MediaType#checkParameters fails to process a Content-Type like application/xml;charset=""utf-8""",SPR-7135,31155,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,plethora,plethora,26/Apr/10 4:50 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,26/Apr/10 7:27 PM,3.0.2,,,,,,,3.0.3,,,,,OXM,,,,0,,,,,,,,"Accoring to RFC 2045, the following is a valid content type response header:
----
Content-Type: application/xml;charset=""utf-8""
----

Trying to access a resource that serves such a header (through RestTemplate) throws the following exception:
----
Exception in thread ""main"" java.nio.charset.IllegalCharsetNameException: ""utf-8""
	at java.nio.charset.Charset.checkName(Charset.java:284)
	at java.nio.charset.Charset.lookup2(Charset.java:458)
	at java.nio.charset.Charset.lookup(Charset.java:437)
	at java.nio.charset.Charset.forName(Charset.java:502)
	at org.springframework.http.MediaType.checkParameters(MediaType.java:300)
	at org.springframework.http.MediaType.<init>(MediaType.java:266)
	at org.springframework.http.MediaType.parseMediaType(MediaType.java:570)
	at org.springframework.http.HttpHeaders.getContentType(HttpHeaders.java:286)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:64)
	at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:619)
	at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:1)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:446)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:401)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:221)
        <...user code...>
----

I assume MediaType is simply missing the logic to optionally unwrap the value.",,;26/Apr/10 7:27 PM;arjen.poutsma;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-04-26 19:27:12.659,8777,true,issuemaster(issuemaster),,,,0|i02q9z:,15966,15078,,,,,,26/Apr/10 7:27 PM;arjen.poutsma;Fixed,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11794|https://github.com/spring-projects/spring-framework/issues/11794]. ,,,,,,,,,,,,,,,,,,,,,,
Add ability for CNVR to search view names that use file extensions,SPR-7117,31105,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,dturanski,dturanski,21/Apr/10 9:04 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,28/Apr/10 10:07 PM,,,,,,,,3.0.3,,,,,Core,,,,0,,,,,,,,"A common pattern for supporting multiple document types with a single controller is to append the file extension to the bean name and use BeanNameViewResolver.  For example if an application requires both Excel and PDF renderings of the logical view name ""view"", the corresponding bean names would be ""view.xls"" and ""view.pdf"".  CNVR currently does not support this pattern since it only tries to resolve ""view""

The proposed enhancement uses the mediaTypes map (or JAF in some cases) to obtain the file extension.  The request can use path extension, accept header, or request parameter containing the extension.  The mediaTypes map is reversed searched to obtain the file extension corresponding to each requested media type (Accept header can specify multiple types).  A second pass is made through the view resolvers appending ""."" + file extension to the view name

A patch is attached  


",,;28/Apr/10 10:06 PM;arjen.poutsma;6180,,,,,,,,,0,6180,,,0,6180,,,,,,,,,,,,,,27/Apr/10 1:51 AM;dturanski;ContentNegotiatingViewResolver.diff;https://jira.spring.io/secure/attachment/16489/ContentNegotiatingViewResolver.diff,21/Apr/10 9:05 PM;dturanski;ContentNegotiatingViewResolver.diff;https://jira.spring.io/secure/attachment/16470/ContentNegotiatingViewResolver.diff,21/Apr/10 9:05 PM;dturanski;ContentNegotiatingViewResolverTests.diff;https://jira.spring.io/secure/attachment/16471/ContentNegotiatingViewResolverTests.diff,,,,,,,,,,,9936000,,,,,2010-04-28 22:07:25.581,15574,true,issuemaster(issuemaster),,,,0|i04r3j:,27764,2925,,,,,,"21/Apr/10 9:14 PM;dturanski;I Just noticed a subtle bug in the patch. This is a corner case, but the code that appends the file extension to the view name does not reinitialize the view name properly, so if there are multiple media types requested the second extension would append to the first, etc.",27/Apr/10 1:51 AM;dturanski;Updated to fix bug noted in previous comment,"28/Apr/10 10:07 PM;arjen.poutsma;Done. I've changed the patch a little, to make it clearer (for me) to see what's going on. Let me know what you think.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11777|https://github.com/spring-projects/spring-framework/issues/11777]. ,,,,,,,,,,,,,,,,,,,,
RestTemplate/UriTemplate/UriUtils improperly encoding UTF-8,SPR-7107,31056,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,astralbodies,astralbodies,16/Apr/10 8:24 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,21/Apr/10 7:50 AM,3.0.1,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"I am attempting to use RestTemplate to download JSON search results from GeoNames.org.  Passing in a UTF-8 query parameter results in that parameter being encoded incorrectly.  The URL I'm hitting (after being replaced with values) is:
{noformat}
http://ws.geonames.org/searchJSON?q=Tōkyō&style=FULL&maxRows=300&featureCode=PPL&featureCode=PPLA&featureCode=PPLC&featureCode=PPLA2&featureCode=PPLA3&featureCode=PPLA4&featureCode=PPLG&featureCode=PPLF&featureCode=PPLR&featureCode=PPLX&featureCode=PPLS&featureCode=ADM1&featureCode=ADM2&featureCode=ADM3&featureCode=ADM4&featureCode=ADMD&featureCode=PCLI&featureCode=PCL&featureCode=PCLD&featureCode=PCLF&featureCode=PCLIX&featureCode=PCLS&featureCode=PRSH&featureCode=TERR&featureCode=MILB&featureCode=CONT&featureCode=RESV&featureCode=RESW
{noformat}
Which is being encoded to:
{noformat}
http://ws.geonames.org/searchJSON?q=T%4Dky%4D&style=FULL&maxRows=300&featureCode=PPL&featureCode=PPLA&featureCode=PPLC&featureCode=PPLA2&featureCode=PPLA3&featureCode=PPLA4&featureCode=PPLG&featureCode=PPLF&featureCode=PPLR&featureCode=PPLX&featureCode=PPLS&featureCode=ADM1&featureCode=ADM2&featureCode=ADM3&featureCode=ADM4&featureCode=ADMD&featureCode=PCLI&featureCode=PCL&featureCode=PCLD&featureCode=PCLF&featureCode=PCLIX&featureCode=PCLS&featureCode=PRSH&featureCode=TERR&featureCode=MILB&featureCode=CONT&featureCode=RESV&featureCode=RESW
{noformat}

The place name Tōkyō should be encoded to T%C5%8Dky%C5%8D, not T%4Dky%4D.  This is preventing any international characters from being sent through RestTemplate.",,;18/Apr/10 7:28 PM;arjen.poutsma;5040,,,,,,,,,0,5040,,,0,5040,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-04-18 19:28:32.626,8782,true,issuemaster(issuemaster),,JBoss,,0|i015zz:,6849,2815,,,,,Sun JVM -> 1.6,18/Apr/10 7:28 PM;arjen.poutsma;Fixed. Thanks for spotting this!,"20/Apr/10 5:12 AM;astralbodies;Arjen - I tried taking this updated class and replacing the 3.0.2 class with it (the nightly build wasn't built with this updated class).  Unfortunately it looks like the URL is still being translated incorrectly.
{noformat}
/searchJSON?q=T%C3%85%C2%8Dky%C3%85%C2%8D&style=FULL&maxRows=300&featureCode=PPL&featureCode=PPLA&featureCode=PPLC&featureCode=PPLA2&featureCode=PPLA3&featureCode=PPLA4&featureCode=PPLG&featureCode=PPLF&featureCode=PPLR&featureCode=PPLX&featureCode=PPLS&featureCode=ADM1&featureCode=ADM2&featureCode=ADM3&featureCode=ADM4&featureCode=ADMD&featureCode=PCLI&featureCode=PCL&featureCode=PCLD&featureCode=PCLF&featureCode=PCLIX&featureCode=PCLS&featureCode=PRSH&featureCode=TERR&featureCode=MILB&featureCode=CONT&featureCode=RESV&featureCode=RESW
{noformat}

So it looks like T%C3%85%C2%8Dky%C3%85%C2%8D is coming from Tōkyō instead of T%C5%8Dky%C5%8D.  Can you test this translation to see if it's coming out correctly?","20/Apr/10 8:17 AM;arjen.poutsma;Hmm. I've added a specific test for this (see https://src.springframework.org/svn/spring-framework/trunk/org.springframework.web/src/test/java/org/springframework/web/util/UriUtilsTest.java, line 70, encodeQueryParam method). Are you sure you replaced the correct class?

At any rate, I will take another look at this tomorrow, as it's getting late here.",20/Apr/10 1:33 PM;astralbodies;Arjen - I will certainly try it again when I'm back at work tomorrow.  I'll step through from the RestTemplate through to UriUtils.  Its almost like the final URL is being URL Encoded twice?  I've been trying to compile trunk but some JUnit tests are failing when I try building with Ant.,"20/Apr/10 6:54 PM;arjen.poutsma;I've just written the following test:

{code}
Map result = template.getForObject(""http://ws.geonames.org/searchJSON?q={city}&style={style}&maxRows={maxRows}"", Map.class, ""T\u014dky\u014d"", ""FULL"", 300);
System.out.println(result);
{code}

this prints out:
{noformat}
DEBUG: org.springframework.web.client.RestTemplate - Created GET request for ""http://ws.geonames.org/searchJSON?q=T%C5%8Dky%C5%8D&style=FULL&maxRows=300""
DEBUG: org.springframework.web.client.RestTemplate - Setting request Accept header to [application/json]
DEBUG: org.springframework.web.client.RestTemplate - GET request for ""http://ws.geonames.org/searchJSON?q=T%C5%8Dky%C5%8D&style=FULL&maxRows=300"" resulted in 200 (OK)
DEBUG: org.springframework.web.client.RestTemplate - Reading [java.util.Map] as ""application/json;charset=UTF-8"" using [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter@c73f0d8]
{totalResultsCount=415, geonames=[{alternateNames=[{name=???????, lang=th}, {name=?????, lang=ka}, {name=??, lang=zh}, {name=????????, lang=ta}, {name=?????, lang=ar}, ...
{noformat}

It seems to work fine for me...


",20/Apr/10 9:14 PM;arjen.poutsma;I've also triggered a snapshot you can try: http://build.springframework.org/browse/SPR-TRUNKSNAPSHOT-652,20/Apr/10 11:46 PM;astralbodies;Thanks; good to know I wasn't nuts getting the failures when building trunk until 652.  I'm downloading now and will run my JUnits & deploy my app with your fixes.  I should know better than to try to mix code between revisions :).,"21/Apr/10 12:52 AM;astralbodies;Haven't written a JUnit yet but my service layer isn't working.  I'm wondering if JBoss is 
{noformat}
08:47:13,968 INFO  [STDOUT] 2010-04-21 08:47:13,968 [Cache Executor Service thread-1] DEBUG org.springframework.web.client.RestTemplate  - Created GET request for ""http://ws.geonames.org/searchJSON?q=T%C3%85%C2%8Dky%C3%85%C2%8D&style=FULL&maxRows=300&featureCode=PPL&featureCode=PPLA&featureCode=PPLC&featureCode=PPLA2&featureCode=PPLA3&featureCode=PPLA4&featureCode=PPLG&featureCode=PPLF&featureCode=PPLR&featureCode=PPLX&featureCode=PPLS&featureCode=ADM1&featureCode=ADM2&featureCode=ADM3&featureCode=ADM4&featureCode=ADMD&featureCode=PCLI&featureCode=PCL&featureCode=PCLD&featureCode=PCLF&featureCode=PCLIX&featureCode=PCLS&featureCode=PRSH&featureCode=TERR&featureCode=MILB&featureCode=CONT&featureCode=RESV&featureCode=RESW""
08:47:14,014 INFO  [STDOUT] 2010-04-21 08:47:14,014 [Cache Executor Service thread-1] DEBUG org.springframework.web.client.RestTemplate  - Setting request Accept header to [application/json]
08:47:14,483 INFO  [STDOUT] 2010-04-21 08:47:14,483 [Cache Executor Service thread-1] DEBUG org.springframework.web.client.RestTemplate  - GET request for ""http://ws.geonames.org/searchJSON?q=T%C3%85%C2%8Dky%C3%85%C2%8D&style=FULL&maxRows=300&featureCode=PPL&featureCode=PPLA&featureCode=PPLC&featureCode=PPLA2&featureCode=PPLA3&featureCode=PPLA4&featureCode=PPLG&featureCode=PPLF&featureCode=PPLR&featureCode=PPLX&featureCode=PPLS&featureCode=ADM1&featureCode=ADM2&featureCode=ADM3&featureCode=ADM4&featureCode=ADMD&featureCode=PCLI&featureCode=PCL&featureCode=PCLD&featureCode=PCLF&featureCode=PCLIX&featureCode=PCLS&featureCode=PRSH&featureCode=TERR&featureCode=MILB&featureCode=CONT&featureCode=RESV&featureCode=RESW"" resulted in 200 (OK)
08:47:14,499 INFO  [STDOUT] 2010-04-21 08:47:14,499 [Cache Executor Service thread-1] DEBUG org.springframework.web.client.RestTemplate  - Reading [java.util.Map] as ""application/json;charset=UTF-8"" using [org.springframework.http.converter.json.MappingJacksonHttpMessageConverter@11cd9]
{noformat}

And my code:
{code}
String[] featureCodes = new String[] { ""PPL"", ""PPLA"", ""PPLC"", ""PPLA2"", ""PPLA3"", ""PPLA4"", ""PPLG"", ""PPLF"", ""PPLR"", ""PPLX"", ""PPLS"", ""ADM1"", ""ADM2"", ""ADM3"", ""ADM4"", ""ADMD"", ""PCLI"", ""PCL"", ""PCLD"", ""PCLF"", ""PCLIX"", ""PCLS"", ""PRSH"", ""TERR"", ""MILB"", ""CONT"", ""RESV"", ""RESW"" };
String uri = StringUtils.replace(getServiceURL(), ""{operation}"", ""searchJSON?q={q}&style={style}&maxRows={maxRows}&featureCode="" + StringUtils.join(featureCodes, ""&featureCode=""));

Map<String, String> vars = new HashMap<String, String>();
vars.put(""q"", searchString);
vars.put(""style"", ""FULL"");
vars.put(""maxRows"", ""300"");
Map<String, Object> rootAsMap = restOperations.getForObject(uri, Map.class, vars);
{code}",21/Apr/10 12:59 AM;astralbodies;Arjen - it appears the string is being mishandled by my controller (requestparam annotation) - let me make sure my server is configured correctly to handle UTF-8.,21/Apr/10 1:46 AM;astralbodies;It looks like as soon as my request enters my annotated controller method the search parameter is being improperly encoded.  Is it possible the modifications to UriUtils messed with the data binding?  I verified that my request from my AJAX call marked it as UTF and the escape sequence is correct.,21/Apr/10 5:53 AM;arjen.poutsma;So {{searchString}} in your snippet is a @RequestParam? It might help me understanding the problem better if you attach the entire @Controller class and related other code...,"21/Apr/10 6:22 AM;astralbodies;That is correct - here is my controller method.  LocationSearchService eventually calls the restOperations.getForObject.

The weird thing is that Firefox using the jQuery call to the controller gets the right escaped characters.  Using IE or Chrome I have a problem.  I'm trying to dig more into this with wireshark but I got distracted by another issue.

{code}
	@RequestMapping(""/locationSearchResults"")
	@Transactional
	public String search(
			@RequestParam(value = ""search"", required = true) String searchString,
			@RequestParam(value = ""pageNumber"", required = false) Integer pageNumber,
			@ModelAttribute(""selectedLocations"") Set<Location> selectedLocations,
			@ModelAttribute(""leafOnly"") Boolean leafOnly,
			@ModelAttribute(""userLocationId"") Long userLocationId, Model model) {
		final List<Location> locations = locationSearchService.search(
				userLocationId, searchString, selectedLocations, leafOnly);

...
		return ""locationSearchResults"";
	}
{code}

",21/Apr/10 7:14 AM;astralbodies;I determined that IE and Chrome weren't setting the right charset on my Ajax call.  Setting it to application/x-www-form-urlencoded; charset=UTF-8 forced it to come through the controller correctly.  Looks like we're good now!,21/Apr/10 7:50 AM;arjen.poutsma;Allright! Thanks for your help on this one.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11767|https://github.com/spring-projects/spring-framework/issues/11767]. ,,,,,,,,,
Add ignoreJafMediaTypes to ContentNegotiatingViewResolver,SPR-7081,30939,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,dturanski,dturanski,08/Apr/10 1:34 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,12/Apr/10 7:38 PM,,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"The configuration below is intended to render an Excel document for a .xls extension when the view name is ""accounts/list"" in a Web application. No extension, or .html should resolve to the TilesView. This works, however any non-html extension, e.g., /accounts.foo also renders an Excel document . This happens because the JAF file types map returns a media type of ""application/octet-stream"" for arbitrary file extensions. Thus the defaultContentType is suppressed. 

<bean class=""org.springframework.web.servlet.view.ContentNegotiatingViewResolver"">
  <property name=""mediaTypes""> 
    <map>
     <entry key=""html"" value=""text/html"" />
     <entry key=""xls"" value=""#{ excelView.getContentType() }"" />			
   </map>
  </property>  
  <property name=""defaultContentType"" value=""text/html"" />
  <property name=""ignoreAcceptHeader"" value=""true"" />
</bean>
	 
<bean class=""org.springframework.web.servlet.view.BeanNameViewResolver""/>
<bean class=""org.springframework.web.servlet.view.tiles2.TilesViewResolver"">
  <property name=""contentType"" value=""text/html"" /> 
</bean>

<!-- A view that generates a Account report as an Excel spreadsheet -->
<bean id=""excelView"" name=""accounts/list"" class=""rewardsonline.accounts.AccountsExcelView"" />

The proposed solution is to add an ignoreJafFileTypes property. If set to true, will produce the desired effect: .xls renders the Excel document, any other type reverts to the default HTML. The proposed patch and unit tests are attached.",,;12/Apr/10 7:38 PM;arjen.poutsma;1140,,,,,,,,,0,1140,,,0,1140,,,,,,,,,,,,,,08/Apr/10 1:36 AM;dturanski;ContentNegotiatingViewResolver.java;https://jira.spring.io/secure/attachment/16396/ContentNegotiatingViewResolver.java,08/Apr/10 1:36 AM;dturanski;ContentNegotiatingViewResolverTests.java;https://jira.spring.io/secure/attachment/16397/ContentNegotiatingViewResolverTests.java,,,,,,,,,,,,9936000,,,,,2010-04-12 19:38:36.124,15602,true,issuemaster(issuemaster),,,,0|i0161b:,6855,2826,,,,,,"12/Apr/10 7:38 PM;arjen.poutsma;Done. I've added the useJaf property, which defaults to true.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11741|https://github.com/spring-projects/spring-framework/issues/11741]. ,,,,,,,,,,,,,,,,,,,,,,
MappingJacksonHttpMessageConverter breaks with Jackson 1.0.x,SPR-7063,30845,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,sandrews,sandrews,02/Apr/10 3:41 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,05/Apr/10 10:40 PM,3.0.2,,,,,,,3.0.3,,,,,Web,,,,0,,,,,,,,"As of Spring 3.0.2.RELEASE, MappingJacksonHttpMessageConverter breaks when using Jackson 1.0.1.  TypeFactory#type was introduced in Jackson 1.3.  Upgrading to Jackson 1.4.2 resolves this issue.

{code}
SEVERE: Servlet.service() for servlet Spring MVC Dispatcher Servlet threw exception
java.lang.NoSuchMethodError: org.codehaus.jackson.map.type.TypeFactory.type(Ljava/lang/reflect/Type;)Lorg/codehaus/jackson/type/JavaType;
	at org.springframework.http.converter.json.MappingJacksonHttpMessageConverter.getJavaType(MappingJacksonHttpMessageConverter.java:114)
	at org.springframework.http.converter.json.MappingJacksonHttpMessageConverter.canRead(MappingJacksonHttpMessageConverter.java:91)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.readWithMessageConverters(HandlerMethodInvoker.java:618)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveRequestBody(HandlerMethodInvoker.java:587)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveHandlerArguments(HandlerMethodInvoker.java:336)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:169)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:421)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:409)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:771)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
{code}","Spring 3.0.2.RELEASE, Jackson 1.0.1",;05/Apr/10 10:39 PM;arjen.poutsma;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-04-05 22:40:17.142,8795,true,issuemaster(issuemaster),,,,0|i01627:,6859,2818,,,,,,05/Apr/10 10:40 PM;arjen.poutsma;Changed OSGi headers to enforce Jackson 1.3+,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11723|https://github.com/spring-projects/spring-framework/issues/11723]. ,,,,,,,,,,,,,,,,,,,,,,
@ResponseStatus: The reason value is not used.,SPR-7060,30826,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,rpond,rpond,01/Apr/10 3:18 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,01/Apr/10 7:39 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"When using the @ResponseStatus annotation on a controller method, if you specify a value for reason such as

@ResponseStatus(value=HttpStatus.BAD_REQUEST, reason=""More than 1000 results were returned. Please be more specific."")

The response still only writes out the default message for the Status, in this case it would be ""The request sent was syntactically incorrect.""

",,;01/Apr/10 7:39 PM;arjen.poutsma;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-04-01 19:39:42.432,8796,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i0162n:,6861,7599,,,,,Sun JVM -> 1.6,01/Apr/10 7:39 PM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11720|https://github.com/spring-projects/spring-framework/issues/11720]. ,,,,,,,,,,,,,,,,,,,,,,
XML MarshallingView assumes non-null value for object to be marshalled.,SPR-7047,30791,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,dlaidlaw,dlaidlaw,29/Mar/10 4:10 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,29/Mar/10 7:34 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"The org.springframework.web.servlet.view.xml.MarshallingView method locateToBeMarshalled(Map) assumes that the value of the object to be marshalled is not null. The line 132:

if (this.marshaller.supports(o.getClass())) {

Will throw NPE if/when o is null. This should be guarded with a null check, and return null when o is null. This will cause the calling method rederMergedOutputModel to throw a ServletException, which is the proper action.

As an example, this happens when using REST and the user issues a GET for a non-existent key. When this happens the model contains the object key, but null for the value of the key, which results in the NPE.",,;29/Mar/10 7:34 PM;arjen.poutsma;120,,,,,,,,,0,120,,,0,120,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-29 19:34:39.741,8802,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i01633:,6863,7601,,,,,Sun JVM -> 1.6,29/Mar/10 7:34 PM;arjen.poutsma;Fixed,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11708|https://github.com/spring-projects/spring-framework/issues/11708]. ,,,,,,,,,,,,,,,,,,,,,,
XmlBeans UnMarshalling - does not work with RequestBody annotation,SPR-7034,30728,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,tkvallil,tkvallil,24/Mar/10 11:19 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,24/Mar/10 11:52 PM,3.0 GA,,,,,,,3.0.2,,,,,OXM,,,,0,,,,,,,,"When unmarshalling controller parameters using the ""@RequestBody"" annotation and XmlBeans, I get spurious unmarshalling exceptions: ""Unexpected end of file after null""  These errors seem to be pretty consistent after the first request

XmlBeans has identified this issue as an input stream problem: http://issues.apache.org/jira/browse/XMLBEANS-226

It looks like Spring may not be handling input streams in an XmlBeans-friendly manner.

Here is my unmarshaller config:

{code:xml}
     <!-- XML Marshalling -->
     <bean id=""inboundMessageAdapter"" class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"">
        <property name=""messageConverters"">
            <util:list>
                <bean class=""org.springframework.http.converter.xml.MarshallingHttpMessageConverter"">
                    <property name=""marshaller"" ref=""xmlMarshaller""/>
                    <property name=""unmarshaller"" ref=""xmlMarshaller""/>
                </bean>
            </util:list>
        </property>
    </bean>
    
    <bean id=""xmlMarshaller"" class=""org.springframework.oxm.xmlbeans.XmlBeansMarshaller""/>
{code}
    
Here is my controller method:

{code:java}
@RequestMapping(method = RequestMethod.POST)
@ResponseBody
public SampleResponseDocument doMethod(@RequestBody SampleRequestDocument requestDocument) {
          
    return myservice.sampleMethod(requestDocument);

}
{code}

The method body is reached in the first invocation, but almost all subsequent invocations give the XmlBeans end of file error.

Please let me know if more information is needed
","Apache Tomcat 6.0.14, XmlBeans 2.4, Spring 3.0GA",;24/Mar/10 11:52 PM;arjen.poutsma;5280,,,,,,,,,0,5280,,,0,5280,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-24 22:17:57.218,8807,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i032mf:,17967,17365,,,,,Sun JVM -> 1.6,24/Mar/10 10:17 PM;arjen.poutsma;Added formatting,24/Mar/10 11:52 PM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11696|https://github.com/spring-projects/spring-framework/issues/11696]. ,,,,,,,,,,,,,,,,,,,,,
MappingJacksonJsonView should add headers for no-caching,SPR-7031,30723,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,aempinheiro,aempinheiro,24/Mar/10 7:41 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,24/Mar/10 10:14 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"This problem tends to be more serious on IE8, since the AJAX requests with the same URL are cached.

The MappingJacksonJsonView could have a boolean ""no-cache"" which if set to false does not add the headers to the response. I think when using AJAX the expected behaviour is not a cached response.

I will upload the created class since I don't know how to submit patches (btw can anyone point me to an how-to?).
","spring-webmvc 3.0.1, IE8",;24/Mar/10 10:14 PM;arjen.poutsma;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,24/Mar/10 7:45 AM;aempinheiro;SRCMappingJacksonJsonView.java;https://jira.spring.io/secure/attachment/16334/SRCMappingJacksonJsonView.java,,,,,,,,,,,,,9936000,,,,,2010-03-24 22:14:48.315,15636,true,issuemaster(issuemaster),,,,0|i0164f:,6869,7606,,,,,,"24/Mar/10 7:45 AM;aempinheiro;Would be very gentle if someone could commit this still for the 3.0.2 release.
If not, I guess no ""biggie"". ","24/Mar/10 10:14 PM;arjen.poutsma;Done. I've named the property 'disableCaching'.

Thanks for the patch!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11693|https://github.com/spring-projects/spring-framework/issues/11693]. ,,,,,,,,,,,,,,,,,,,,,
Support initial delay attribute for @Scheduled and <task:scheduled>,SPR-7022,30710,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,cbeams,dcheckoway,dcheckoway,22/Mar/10 9:02 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,22/May/12 8:50 AM,,,,,,,,3.2 M1,,,,,Core,,,,25,,,,,,,,"@Scheduled is the coolest thing ever...but it could really use an ""initialDelay"" parameter.  Otherwise there's no way (that I'm aware of) to configure a @Scheduled method to run after a specified delay.

Without it, I'm forced to use the likes of TaskScheduler.scheduleAtFixedRate(Runnable, Date, long) and pass it a startDate...and then I'm forced to wrap a Runnable around my method, etc.  That's so old school! :-)

Anyway, please consider my humble request for an optional ""initialDelay"" such as:
@Scheduled(fixedRate=60000,initialDelay=20000)
and
@Scheduled(fixedDelay=30000,initialDelay=30000)",,;22/May/12 11:00 PM;cbeams;57600,,,,,,,,,,57600,,,,57600,,,,,,,,SPR-7718,,,,,,22/Mar/10 9:50 PM;dcheckoway;scheduled-initial-delay-patch.diff;https://jira.spring.io/secure/attachment/16331/scheduled-initial-delay-patch.diff,,,,,,,,,,,,,9936000,,,,,2010-09-18 03:21:50.871,1256,true,issuemaster(issuemaster),,,,0|i00h7z:,2835,2859,,,,,,"22/Mar/10 9:50 PM;dcheckoway;Attached is a patch that should work.  I'm pretty new to contributing to Spring Framework, so I'm honestly not too sure how to build it.

But hopefully you'll be able to give this a shot.  The idea is that instead of using Map<Runnable, Long> to convey the task configuration to the ScheduledTaskRegistrar, it uses Lists with new objects CronTask, FixedDelayTask, and FixedRateTask.  The latter two are able to store *both* the initialDelay and fixedDelay or fixedRate, respectively.","18/Sep/10 3:21 AM;ojs;Please note, that this support should also be added to the scheduled element in Spring's task namespace -

{code}
<task:scheduled ref=""myService"" method=""reload"" fixed-delay=""60000"" initial-delay=""30000""/>
{code}
","19/Aug/11 7:11 AM;patb;I vote for this. The ""initialDelay"" was one of the first things I looked for when I started using the <task:scheduled.. /> tags. I use annotations heavily, but configuring scheduled service methods is one of the few things I really like doing in XML to keep the overview.",07/Oct/11 1:38 PM;tburch;I'd love to see annotation and namespace support for this!,16/Dec/11 12:49 PM;ryantenney;Any chance we could get this in 3.1.1?,08/Mar/12 8:27 AM;tburch;Maybe it can be fixed in 3.1.2 or even 3.2M1?,"08/Mar/12 8:40 AM;cbeams;""Scheduled"" for 3.2 M1, pun intended :)

@Dan, consider submitting your original patch as a pull request by following the [contributor guidelines|https://github.com/SpringSource/spring-framework/wiki/Contributor-guidelines]

","02/May/12 6:25 AM;werdex;Absence of initial-delay parameter often cause the deadlock on startup
https://jira.springsource.org/browse/SPR-7718
I have to use quartz to workaround this problem.","22/May/12 8:50 AM;cbeams;Available now in 3.2.0.BUILD-SNAPSHOT via repo.springsource.org. See [here|https://github.com/SpringSource/spring-framework/wiki/Downloading-Spring-artifacts#wiki-resolving-spring-artifacts] if you haven't dealt with snapshots before. Enjoy!
{quote}
{noformat}
commit 53673d6c598a587ab1e511bbce14ba8b686f8951
Author: Chris Beams <cbeams@vmware.com>
Date:   Wed Mar 14 18:14:28 2012 +0200

    Support initial delay attribute for scheduled tasks
    
    java.util.concurrent's ScheduledExecutorService and its #schedule*
    methods allow for an 'initialDelay' parameter in milliseconds.
    Similarly, Spring's TaskExecutor abstraction allows for a concrete
    'startTime' expressed as a Date. However, Spring's <task:scheduled> XML
    element and @Scheduled annotation have, to date, not allowed for an
    initial delay parameter that can be propagated down to the underlying
    TaskScheduler/ScheduledExecutorService.
    
    This commit introduces initial-delay and #initialDelay attributes to
    task:scheduled and @Scheduled respectively, both indicating the number
    of milliseconds to wait before the first invocation of the method in
    question. Specifying a delay in this fashion is only valid in
    conjunction with fixed-rate and fixed-delay tasks (i.e. not with cron
    or trigger tasks).
    
    The principal changes required to support these new attributes lie in
    ScheduledTaskRegistrar, which previously supported registration of
    tasks in the form of a Runnable and a Long parameter indicating (in the
    case of fixed-rate and fixed-delay tasks), the interval with which the
    task should be executed. In order to accommodate a third (and optional)
    'initialDelay' parameter, the IntervalTask class has been added as a
    holder for the Runnable to be executed, the interval in which to run
    it, and the optional initial delay. For symmetry, a TriggerTask and
    CronTask have also been added, the latter subclassing the former. And a
    'Task' class has been added as a common ancestor for all the above.
    
    One oddity of the implementation is in the naming of the new
    setters in ScheduledTaskRegistrar. Prior to this commit, the setters
    were named #setFixedDelayTasks, #setFixedRateTasks, etc, each accepting
    a Map<Runnable, long>. In adding new setters for each task type, each
    accepting a List<IntervalTask>, List<CronTask> etc, naturally the
    approach would be to use method overloading and to introduce methods
    of the same name but with differing parameter types. Unfortunately
    however, Spring does not support injection against overloaded methods
    (due to fundamental limitations of the underlying JDK Introspector).
    This is not a problem when working with the ScheduledTaskRegistrar
    directly, e.g. from within a @Configuration class that implements
    SchedulingConfigurer, but is a problem from the point of view of the
    ScheduledTasksBeanDefinitionParser which parses the <task:scheduled>
    element - here the ScheduledTaskRegistrar is treated as a Spring bean
    and is thus subject to these limitations. The solution to this problem
    was simply to avoid overloading altogether, thus the naming of the new
    methods ending in ""List"", e.g. #setFixedDelayTasksList, etc. These
    methods exist primarily for use by the BeanDefinitionParser and are
    not really intended for use by application developers. The Javadoc for
    each of the new methods makes note of this.
    
    Issue: SPR-7022

{noformat}
{quote}",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11684|https://github.com/spring-projects/spring-framework/issues/11684]. ,,,,,,,,,,,,,,
Support for HttpEntity<?> in @MVC,SPR-7018,30689,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,21/Mar/10 10:17 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,21/Mar/10 10:26 PM,,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,,,;21/Mar/10 10:26 PM;arjen.poutsma;28800,,,,,,,,,0,28800,,,0,28800,,,,,,SPR-6969,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:17.731,15650,true,issuemaster(issuemaster),,,,0|i01667:,6877,7613,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11680|https://github.com/spring-projects/spring-framework/issues/11680]. ,,,,,,,,,,,,,,,,,,,,,,,
RestTemplate fails to convert properly for Generic Type Container with MappingJacksonHttpMessageConverter,SPR-7002,30644,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,simonwg,simonwg,17/Mar/10 2:05 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,22/Mar/10 11:15 PM,3.0.1,3.0 GA,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"When I used RestTemplate to retrieve the result in Generic Type Container, the MappingJacksonHttpMessageConverter could not properly determine the type (due to erasure)

e.g.

List<MyDomain> myDomainList = restTemplate.getForObject(uri, List.class);
will throw ClassCastException

the MappingJacksonHttpMessageConverter could not determine that the List container should stores MyDomain objects by passing the List.class, it could only stores as List<LinkedHashedMap>

Recommend to add something similar to TypeReference in Jackson. http://wiki.fasterxml.com/JacksonInFiveMinutes (Section: Data Binding with Generics) to solve this issue.

Personal speaking, if the new HttpEntity could provide a setTypeReference() would be much convenient.
e.g.
  HttpEntity httpEntity = new HttpEntity();
  httpEntity.setTypeReference(new TypeReference<List<MyDomain>>() {});

  List<MyDomain> myDomainList = restTemplate.getForObject(uri, httpEntity);
",,;22/Mar/10 11:15 PM;arjen.poutsma;3960,,,,,,,,,0,3960,,,0,3960,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-22 22:43:59.502,15659,true,issuemaster(issuemaster),,,,0|i015qn:,6807,7576,,,,,,"22/Mar/10 10:43 PM;arjen.poutsma;I'm not sure I understand the second part of the description. HttpEnity is not (designed to be) used as a argument for getForObject. HttpEntity either represents request/response entity that is to be posted/retrieved, it cannot be used in the above manner.","22/Mar/10 11:19 PM;arjen.poutsma;Introducing the TypeReference concept is to big a change for a minor version. I've created SPR-7023 (scheduled for 3.1) for that.

For the time being, I've introduced a simple workaround. There is now a getJavaType method, which you can override to customize the JavaType Jackson serializes to. For instance:

{code}
converter = new MappingJacksonHttpMessageConverter() {
	@Override
	protected JavaType getJavaType(Class<?> clazz) {
		if (List.class.isAssignableFrom(clazz)) {
			return TypeFactory.collectionType(ArrayList.class, MyBean.class);
		}
		else {
			return super.getJavaType(clazz);
		}
	}
};
{code}

This will have to do for now, before we properly tackle this in 3.1.","23/Mar/10 4:21 AM;simonwg;I guess I really misunderstand the response entity before (just treat it as the meta-data for the HTTP resources). It has been clarified after read the JIRA SPR-6969 carefully.

Thanks for your help.","08/Jul/10 12:46 AM;ifoukarakis;A little bit late comment, but another workaround is to use 
MyDomain[] myDomains = restTemplate.getForObject(uri, MyDomain[].class);

then convert the array to a list (if needed). 
I had a similar issue, tested it with Spring 3.0.2 and it worked. 

Also tried to use (new ArrayList<MyDomain>()).getClass(), but it returned ArrayList as a type and it failed (as expected).","08/Jul/10 3:16 AM;simonwg;Thanks. But Array is reified (according to Java Language Spec 4.7), which will lost type safety",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11667|https://github.com/spring-projects/spring-framework/issues/11667]. ,,,,,,,,,,,,,,,,,,
AnnotationMethodHandlerAdapter gives priority to media type order over quality when selecting a method,SPR-7000,30642,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,youngm,youngm,17/Mar/10 10:39 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,25/Mar/10 12:30 AM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"AnnotationMethodHandlerAdapter.RequestMappingInfoComparator doesn't appear to order the requested accept value by quality.  Meaning that if I submit a request value like the following:

(Taken from Webkit's standard accept header)
{code}application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5{code}

And I have a controller like the following:
{code}
@Controller
public class ExampleController {
    @RequestMapping(value=""/secure/example"", headers=""accept=text/html"", method=RequestMethod.GET)
    public String showHtml() {
        ...
    }

    @RequestMapping(value=""/secure/example"", headers=""accept=image/png"", method=RequestMethod.GET)
    public String showPng() {
        ...
    }
}
{code}

Then the showHtml method is selected because it is closest to the left where the showPng method should have been selected as it expresses a higher preferred quality level from the client (default quality=1).

This issue is related to SPR-6998 but the order of the header media types should probably be taken into account AFTER the quality is taken into account.

This issue is also related to SPR-6952 though since it appears SPR-6952 won't make it into 3.0.x I think that this issue represents a more direct problem with a more straight forward solution that I believe should be included in to a 3.0.x release.

I think the order of media type method resolution should be the following:

1. Quality
2. Specificity
3. Order of content types from left to right (SPR-6998)

FYI, the patch for SPR-6952 includes a MediaType comparator that will sort by quality before specificity if you want to use it.",,;22/Mar/10 12:15 AM;arjen.poutsma;6120,;25/Mar/10 12:30 AM;arjen.poutsma;1320,,,,,,,,0,7440,,,0,7440,,,,,,,,,,,SPR-6952,,,,,,,,,,,,,,,,9936000,,,,,2010-03-25 00:30:23.923,8820,true,issuemaster(issuemaster),,,,0|i01647:,6868,7605,,,,,,25/Mar/10 12:30 AM;arjen.poutsma;Fixed. Thanks for spotting this and providing us with a patch!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11665|https://github.com/spring-projects/spring-framework/issues/11665]. ,,,,,,,,,,,,,,,,,,,,,,
Dispatcher fails to invoke handler method when request method conflicts with request path,SPR-6978,30568,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,kokaku,kokaku,12/Mar/10 1:03 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,22/Mar/10 2:12 AM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"Here is a situation that causes a HandlerMethodInvocationException
java.lang.IllegalStateException: Could not find @PathVariable [type] in @RequestMapping

GET /foo/100 - loadEntity is called
POST /foo/100 - publish is called
GET /module/100 - loadModule is called
POST /module/100 - the exception is caused

Changing the path in either loadModule or publish (ex: loadModule as /q/module/{id}) fixes the problem

It looks like RequestMapping.method is not being prioritized over RequestMapping.value

{code}
@Controller
public class MyController
{ 
    @RequestMapping(value = ""/{type}/{id}"", method = RequestMethod.GET)
    public final Object loadEntity(@PathVariable final String type, @PathVariable final long id) { return type + ""::"" + id; }

    @RequestMapping(value = ""/module/{id}"", method = RequestMethod.GET) public final Object loadModule(@PathVariable final long id) {
        return """"+id;
    }

    @RequestMapping(value = ""/{type}/{id}"", method = RequestMethod.POST) public final Object publish(@PathVariable final String type,@PathVariable final long id) { return type + ""::"" + id; }
}
{code}",,;22/Mar/10 2:12 AM;arjen.poutsma;240,,,,,,,,,0,240,,,0,240,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:16.562,8825,true,issuemaster(issuemaster),,GlassFish -> v2,,0|i0165z:,6876,7612,,,,,,"15/Mar/10 3:03 AM;kokaku;One thing I noticed after a bit more observation...I think the dispatcher is sending the request to the right method but it's doing it with the wrong parameters. From the logging, it looks like it is trying to call publish but only sending an id variable, not a type and id variable, because it processed the path variables as if loadModule was being called (where there's only an id).

I'm not sure if that makes sense - that the handler processing would separate the method from the path variables in that way - but maybe it'll help.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11643|https://github.com/spring-projects/spring-framework/issues/11643]. ,,,,,,,,,,,,,,,,,,,,,,
Add debug log for HttpMessageConverter usage,SPR-6976,30557,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Complete,arjen.poutsma,simonwg,simonwg,11/Mar/10 4:55 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,12/Mar/10 3:47 AM,3.0.1,3.0 GA,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"It would be nice to add more debug logging message for HttpMessageConverter usage in AnnotationMethodHandlerAdapter.java, RestTemplate.java and HttpMessageConverterExtractor.java for the following

- The accepted MediaType list from Client
- The actual HttpMessageConverter (and the supported media types) be used that can read/write for that HttpMessage
- The final output MediaType in the response.",,;12/Mar/10 3:47 AM;arjen.poutsma;2700,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-12 03:47:19.817,15682,true,issuemaster(issuemaster),,,,0|i0167j:,6883,7618,,,,,,12/Mar/10 3:47 AM;arjen.poutsma;Done,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11641|https://github.com/spring-projects/spring-framework/issues/11641]. ,,,,,,,,,,,,,,,,,,,,,,
SimpleUrlHandlerMapping wildcards cannot handle escaped newline characters,SPR-6973,30546,,Bug,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Won't Fix,arjen.poutsma,brandony,brandony,11/Mar/10 9:42 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,12/Mar/10 2:57 AM,3.0 GA,,,,,,,,,,,,,,,,0,,,,,,,,"If I configure a SimpleUrlHandlerMapping in the following manner:

<bean id=""urlMapping"" class=""org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"">
<property name=""mappings"">
 <props>
  <prop key=""/*/UserContent.do"">UserContentController</prop>
 </props>
</property>
</bean>

The following URL will NOT be routed to UserContentController:

http://hostname/foo%0a%0dbar/UserContent.do

The URL gets decoded into a Java string, which now has a newline in it, and that multi-line string does not match the non-multi-line regex generated by the ant pattern.  I believe that this is a regression from Spring 2.5.6.

",,;12/Mar/10 2:56 AM;arjen.poutsma;420,,,,,,,,,0,420,,,0,420,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-11 21:58:46.723,8828,true,issuemaster(issuemaster),,Tomcat -> 5.5,,0|i03qmn:,21856,18332,,,,,Sun JVM -> 1.6,"11/Mar/10 9:58 PM;juergen.hoeller;This might be a side effect of 3.0's path variable support where we revised the pattern matching code in the course of it...

Juergen","12/Mar/10 2:57 AM;arjen.poutsma;There is a very simple workaround for this, just set the 'urlDecode' property of the handler mapping to false.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11638|https://github.com/spring-projects/spring-framework/issues/11638]. ,,,,,,,,,,,,,,,,,,,,,
Introduce HttpEntity,SPR-6969,30533,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,10/Mar/10 10:45 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,11/Mar/10 2:59 AM,,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"Currently, it's not possible to explicitly set the Content-Type header (or any other header for that matter) for outgoing requests in the RestTemplate. It would be nice to introduce a wrapping {{HttpEntity}} type, which allows you to do this, like so:

{code}
HttpEntity<String> entity = new HttpEntity<String>(helloWorld, MediaType.TEXT_PLAIN);
URI location = template.postForLocation(""http://example.com/"", entity);
{code}

Additionally, it would be useful to be able to retrieve response headers as part of a GET operation. The HttpEntity can help here as well:

{code}
HttpEntity<String> entity = template.getForEntity(""http://example.com"", String.class);
String body = entity.getBody();
MediaType contentType = entity.getHeaders().getContentType();
{code}
",,;11/Mar/10 2:59 AM;arjen.poutsma;15060,,,,,,,,,0,15060,,,0,15060,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:16.262,15686,true,issuemaster(issuemaster),,,,0|i0166f:,6878,7614,,,,,,11/Mar/10 2:59 AM;arjen.poutsma;Complete,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11634|https://github.com/spring-projects/spring-framework/issues/11634]. ,,,,,,,,,,,,,,,,,,,,,,
spring-test module should depend on 'junit-dep' instead of 'junit' Maven artifact,SPR-6966,30518,,Task,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,sbrannen,garyfrost75,garyfrost75,10/Mar/10 12:59 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,09/Jun/12 5:45 PM,,,,,,,,3.2 M2,,,,,[Build],Test,,,0,,,,,,,,"JUnit dependencies include a bundled version of hamcrest, for projects already bringing in hamcrest (later versions) this causes significant issue.

Please change pom to use junit-dep rather than junit which does not include hamcrest in the jar but includes it as dependency and therefore maven can manage any conflicts to bring in the later project version.",,"Analysis, research, implementation, and testing.;09/Jun/12 5:46 PM;sbrannen;5400",,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-23 21:21:52.755,5432,true,issuemaster(issuemaster),,,,0|i02tu7:,16543,2868,,,,,,"23/Mar/10 9:21 PM;cbeams;Gary - this is good idea and we'd like to do it, but junit-dep only exists in Maven Central for JUnit versions 4.4 and 4.5.  Keeping this issue open and rescheduling for 3.1.RC1 in hopes that version 4.7 or better will be uploaded in the meantime.  If you see (or make) this happen, please comment here and we'll make the change on our end.","17/Nov/10 5:30 AM;david_syer;David Saff (JUnit dev) says that he wants to remove the Hamcrest code from JUnit, but I don't see that happening real soon (and we are at 4.8.2 now).  A workaround that seems to work is to put Hamcrest at the very top of your dependencies in the application POM - the interfaces haven't changed and as long as it is first on the classpath the more up to date classes are loaded first.","09/Jun/12 3:29 PM;sbrannen;{{junit-dep}} now exists in Maven Central (see link below -- which does not render correctly in JIRA) for JUnit 4.10, and Spring 3.2 now builds against JUnit 4.10.

{noformat}http://search.maven.org/#artifactdetails|junit|junit-dep|4.10|jar{noformat}

So I'll take a look at this for 3.2 M2.

\-Sam","09/Jun/12 5:45 PM;sbrannen;Resolved in latest [commit on GitHub|https://github.com/SpringSource/spring-framework/commit/369d77bdf0992d95480a0250d553fadb4c186c7a]:

{noformat}
spring-test module now depends on junit:junit-dep

The junit:junit Maven artifact includes a bundled version of hamcrest
core. For projects that depend on later versions of hamcrest this causes 
significant issues in terms of dependency management.

The spring-test module now depends on junit:junit-dep, thus allowing 
developers to better manage their test dependencies on a more fine 
grained level.

Also tidied up dependency issues regarding hamcrest-core and 
hamcrest-all across the build.

Issue: SPR-6966
{noformat}

\- Sam",15/Dec/12 12:43 PM;jkuipers;Was this accidentally reverted in the final release? I just upgraded from RC1 to RELEASED and now this seems to be an optional dependency to plain junit instead...,"15/Dec/12 12:54 PM;sbrannen;{quote}
Was this accidentally reverted in the final release? I just upgraded from RC1 to RELEASED and now this seems to be an optional dependency to plain junit instead...
{quote}

No, this was intentional due to the upgrade to JUnit 4.11.

For details see:

- SPR-10044
- the [3.2 migration guide|http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/spring-framework-reference/html/migration-3.2.html#migration-3.2-compatibility-spring-test]",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11631|https://github.com/spring-projects/spring-framework/issues/11631]. ,,,,,,,,,,,,,,,,,
RestTemplate should not encode fragments (#'s),SPR-6946,30446,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,04/Mar/10 5:11 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,04/Mar/10 9:41 PM,,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"RestTemplate currently (and wrongly) treats #'s as fragment indicators. Instead, we should consider the # as part of the path or (query).

See RFC 1630:

A reference to a particular part of a document may, including the
   fragment identifier, look like

        http://www.myu.edu/org/admin/people#andy

   in which case the string ""#andy"" is not sent to the server, but is
   retained by the client and used when the whole object had been
   retrieved.
",,;04/Mar/10 9:41 PM;arjen.poutsma;4620,,,,,,,,,0,4620,,,0,4620,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:15.552,15699,true,issuemaster(issuemaster),,,,0|i0168n:,6888,7622,,,,,,04/Mar/10 9:41 PM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11611|https://github.com/spring-projects/spring-framework/issues/11611]. ,,,,,,,,,,,,,,,,,,,,,,
XStreamMarshaller + JsonHierarchicalStreamDriver + JsonWriter.DROP_ROOT_MODE produce empty output,SPR-6939,30433,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,yevhen,yevhen,03/Mar/10 8:47 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,08/Mar/10 7:55 PM,3.0 GA,,,,,,,3.0.2,,,,,OXM,,,,0,,,,,,,,"When using XStreamMarshaller for serializing object to JSON by customizing StreamDriver to skip root node resulting in empty output. Configuration of StreamDriver illustrated by the following snapshot 
{code}
final XStreamMarshaller marshaller = new XStreamMarshaller();

marshaller.setStreamDriver(new JsonHierarchicalStreamDriver() {
    public HierarchicalStreamWriter createWriter(Writer writer) {
        return new JsonWriter(writer, JsonWriter.DROP_ROOT_MODE);
    }
});
{code}
At the same time using XSTream directly works just fine.
{code}
final XStream xStream = new XStream(new JsonHierarchicalStreamDriver() {
    public HierarchicalStreamWriter createWriter(Writer writer) {
        return new JsonWriter(writer, JsonWriter.DROP_ROOT_MODE);
    }
});
{code}","Windows, Java 6",;08/Mar/10 7:54 PM;arjen.poutsma;3240,,,,,,,,,0,3240,,,0,3240,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-04 02:16:37.423,8840,true,issuemaster(issuemaster),,Standalone,,0|i03qnr:,21861,18337,,,,,,"04/Mar/10 2:16 AM;arjen.poutsma;Can you indicate how you use the marshaller/xstream instance later on? Specifically: are you writing to a DOM tree, an OutputStream, a Writer, XMLStreamWriter, etc?","04/Mar/10 2:40 AM;yevhen;I used StringResult for testing. Item is simple bean with two properties (int id and String status)

{code}
final StringResult result = new StringResult();
final Item item = new Item(12, ""new"");
		
try {
        marshaller.getXStream().setMode(XStream.NO_REFERENCES);
        marshaller.getXStream().alias(""item"", Item.class);
	marshaller.marshal(item, result);
} catch (Exception e) {
// TODO: handle exception
}
{code}",08/Mar/10 7:55 PM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11604|https://github.com/spring-projects/spring-framework/issues/11604]. ,,,,,,,,,,,,,,,,,,,,
"@ResponseBody with method that return void throws ""Could not resolve view exception"".",SPR-6935,30426,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,james.king.zj,james.king.zj,03/Mar/10 12:56 PM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,03/Mar/10 8:51 PM,,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"@RequestMapping(""/hello.html"")
@ResponseBody
public void helloworld(){
    System.out.println(""Hello World!"")
}

The code above will throw ServletException, Could not resolve view with name hello.

I think a method with ResponseBody annotation should be different with a method without ResponseBody annotation. The above method should do nothing after return. ",,;03/Mar/10 8:51 PM;arjen.poutsma;300,,,,,,,,3600,3300,300,8%,3600,3300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-03 20:51:36.261,15705,true,issuemaster(issuemaster),,Tomcat,,0|i01693:,6890,7624,,,,,Sun JVM -> 1.6,03/Mar/10 8:51 PM;arjen.poutsma;Fixed,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11600|https://github.com/spring-projects/spring-framework/issues/11600]. ,,,,,,,,,,,,,,,,,,,,,,
AnnotationMethodHandlerAdapter should take into account request accept header ordering,SPR-6934,30425,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,youngm,youngm,03/Mar/10 11:17 AM,15/Jan/19 5:27 PM,10/May/19 2:36 AM,03/Mar/10 11:54 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"I have a controller like so:

{code}
public class ExampleController {
	@RequestMapping(value=""/secure/example"", headers=""accept=text/html"",method=RequestMethod.GET)
	public String list(@ModelAttribute ExampleModel example, Model model) {
            ...
	}

	@RequestMapping(value=""/secure/example"", headers={""accept=application/xml""}, method=RequestMethod.GET)
	public List<ExampleModel> listXml() {
            ...
	}
}
{code}

If I submit a request with accept=application/xml,text/html

I would expect that my listXml() method would be resolved before list().  However, because list() is declared first in the class it ends up being the one chosen by AnnotationMethodHandlerAdapter.

It appears that RequestMappingInfoComparator doesn't take into account the order of the accept media types on the request.  I believe it should.",,;03/Mar/10 11:54 PM;arjen.poutsma;10620,,,,,,,,,0,10620,,,0,10620,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-03 20:53:11.124,8841,true,issuemaster(issuemaster),,,,0|i0168v:,6889,7623,,,,,,03/Mar/10 8:53 PM;arjen.poutsma;Added formatting,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11599|https://github.com/spring-projects/spring-framework/issues/11599]. ,,,,,,,,,,,,,,,,,,,,,,
JibxMarshaller - provide access to jibx's writeDocType,SPR-6907,30305,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,bendavies,bendavies,24/Feb/10 11:05 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,01/Mar/10 10:49 PM,3.0.1,,,,,,,3.0.2,,,,,,,,,0,,,,,,,,"The current jibx oxm marshaller hides everything away from the user, making it impossible to utilise all of jibx's feature.

I need to be able to add a doctype to my marshalled document, but this is not possible with spring's current implementation.

The change would involved replacing all instances of
{code:java}
marshallingContext.marshalDocument(...) 
{code} 

with something like:
{code:java}
marshallingContext.startDocument(...)k
marshallingContext.getXmlWriter().writeDocType(...); //(if Doctype specified)
marshallingContext.marshalRoot(objectToBeMarshalled);
marshallingContext.endDocument();
{code} 

Cheers,
Ben
",,;01/Mar/10 7:08 PM;arjen.poutsma;1800,;01/Mar/10 9:56 PM;arjen.poutsma;1440,,,,,,,,0,3240,,,0,3240,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-01 19:05:07.849,15725,true,issuemaster(issuemaster),,,,0|i03qpz:,21871,1618,,,,,,"01/Mar/10 7:05 PM;arjen.poutsma;Unfortunately, the marshalRootElement method on MarshallingContext is protected, so we can't use it in the JibxMarshaller. I could not find any alternatives, do you have any  suggestions?","01/Mar/10 8:21 PM;bendavies;Ah, sorry Arjen.

That should have been

{code:java}
marshallingContext.startDocument(this.encoding, this.standalone, outputStream);
marshallingContext.getXmlWriter().writeDocType(...);
marshallingContext.marshalDocument(graph);
{code} ","01/Mar/10 9:57 PM;arjen.poutsma;Thanks for the pointer, I've added four new properties on the JibxMarshaller (docTypeRootElementName, docTypeSystemId, etc). If set, a doctype declaration is written.",01/Mar/10 10:00 PM;bendavies;Many thanks Arjen.,"01/Mar/10 10:45 PM;bendavies;Hi Arjen,

I don't think your implementation is quite right.
Your stipulation: ""Set either 'docTypePublicId' or 'docTypeSystemId'; not both"" is incorrect.

XML requires that if one uses a PUBLIC ID, one also provide a SYSTEM ID.

Take XHTML String 1.0 as an example
{code:xml}
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
{code}

""-//W3C//DTD XHTML 1.0 Strict//EN"" is the public ID
""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"" is the system id

[Official blurb|http://www.w3.org/TR/REC-xml/#sec-external-ent]:
{quote}{noformat} 
ExternalID ::=   	'SYSTEM' S  SystemLiteral
			| 'PUBLIC' S PubidLiteral S SystemLiteral 
{noformat} 
{quote}


Take a look at JiBX's implementation which respects this:
{code:java}
    /**
     * Write DOCTYPE declaration to document.
     *
     * @param name root element name
     * @param sys system ID (<code>null</code> if none, must be
     * non-<code>null</code> for public ID to be used)
     * @param pub public ID (<code>null</code> if none)
     * @param subset internal subset (<code>null</code> if none)
     * @throws IOException on error writing to document
     */
    public void writeDocType(String name, String sys, String pub, String subset)
        throws IOException {
        indentAfterFirst();
        writeMarkup(""<!DOCTYPE "");
        writeMarkup(name);
        writeMarkup(' ');
        if (sys != null) {
            if (pub == null) {
                writeMarkup(""SYSTEM \"""");
                writeMarkup(sys);
            } else {
                writeMarkup(""PUBLIC \"""");
                writeMarkup(pub);
                writeMarkup(""\"" \"""");
                writeMarkup(sys);
            }
            writeMarkup('""');
        }
        if (subset != null) {
            writeMarkup('[');
            writeMarkup(subset);
            writeMarkup(']');
        }
        writeMarkup('>');
    }
{code} 


Cheers,
Ben","01/Mar/10 10:48 PM;arjen.poutsma;Woops, reopening",01/Mar/10 10:49 PM;arjen.poutsma;I removed that assertion.,01/Mar/10 11:08 PM;bendavies;Thanks again for the quick turn around.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11572|https://github.com/spring-projects/spring-framework/issues/11572]. ,,,,,,,,,,,,,,,
Combination of ControllerClassNameHandlerMapping and @RequestMappings with file extensions results in exception,SPR-6906,30302,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,arjen.poutsma,arjen.poutsma,24/Feb/10 6:45 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,08/Mar/10 8:28 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,1,,,,,,,,"When using the ControllerClassNameHandlerMapping in combination with the following controller:

{code}
@Controller
public class FooController {
	
	@RequestMapping(value = ""{id}"", method = RequestMethod.GET)
	public String handleView(Model model, @PathVariable(""id"") String id) {
	}

	@RequestMapping(value = ""{id}.pdf"", method = RequestMethod.GET)
	public String handlePdfView(Model model, @PathVariable(""id"") String id) {
	}
}
{code}

Doing a request for /foo/bar works: the id variable is assigned the value bar.
Doing a request for /foo/bar.pdf does not work, and results in an IllegalStateException.",,;04/Mar/10 1:17 AM;arjen.poutsma;4500,,,,,,,,,0,4500,,,0,4500,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-05 05:36:53.706,8852,true,issuemaster(issuemaster),,,,0|i0168f:,6887,262,,,,,,04/Mar/10 1:17 AM;arjen.poutsma;This should be fixed now. Can you please try a recent snapshot and see if it works for you?,"05/Mar/10 5:36 AM;artconnoisseur;The request /foo/bar.pdf works correctly now, but now the request /foo/bar.do resolves to the @RequestMapping(value = ""{id}"", method = RequestMethod.GET) with a path variable value of ""bar.do"", whereas previously it had a value of ""bar"" (before fix). Not sure if the previous behavior was a bug-feature I was taking advantage of, allowing me not to specify path extensions unless I need to differentiate between different extensions for same resource.","08/Mar/10 8:28 PM;arjen.poutsma;Hi Daniel,

Indeed, the previous behavior seems to have been a coincidence of some sorts. That said, you can easily fix the controller to handle  both 'bar' and 'bar.do', by using the following mapping:

{code}
@RequestMapping(value = {""{id}"", ""{id}.*""}, method = RequestMethod.GET)
{code}

This works in my tests.
",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11571|https://github.com/spring-projects/spring-framework/issues/11571]. ,,,,,,,,,,,,,,,,,,,,
@ResponseBody does not work with @ExceptionHandler,SPR-6902,30272,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,framiere,framiere,24/Feb/10 2:46 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,10/Jan/11 5:09 AM,3.0.1,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"When this method is executed

{code}
@ExceptionHandler
@ResponseBody
public String dummyExceptionHandler(Exception e) {
    return e.getMessage();
}
{code}

Spring mvc tries to resolve the view using the method output --> 404.
As the method is annotated with @ResponseBody, it should directly write the method output to the response.
",,;02/Mar/10 8:33 PM;arjen.poutsma;780,;10/Jan/11 5:09 AM;arjen.poutsma;3720,,,,,,,,0,4500,,,0,4500,,,,,,,,,,,,,,10/Jan/11 1:59 AM;nitegate;spr-6902.zip;https://jira.spring.io/secure/attachment/17505/spr-6902.zip,,,,,,,,,,,,,9936000,,,,,2010-03-15 10:30:53.775,3635,true,issuemaster(issuemaster),,,,0|i00p8v:,4135,261,,,,,,15/Mar/10 10:30 AM;scottyfred;This is somewhat related to SPR-6693. Is there any chance that SPR-6693 can be addressed sooner than 3.1?,"15/Mar/10 2:01 PM;simonwg;Could the ResponseErrorHandler (for RestTemplate) get the error message from @ResponseBody in this case? Also, will the @ResponseBody from @ExceptionHandler supports the HttpMessageConversion?","17/Mar/10 1:53 PM;simonwg;Add a new issue regarding to my concern
https://jira.springsource.org/browse/SPR-7001","05/Apr/10 4:00 AM;tkvallil;I believe this bugfix also addresses SPR-6693

I have the following web controller method:

{code}
@ExceptionHandler(MyServiceException.class)
@ResponseBody
public MyServiceException handleException(MyServiceException ex, HttpServletResponse response) {
  response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
  return ex;
}
{code}

where MyServiceException is mapped to XML via an XSD file.

I then put in my service-servlet.xml file the following annotation definition:

{code:xml}
    <!-- When an exception occurs, we support the following output formats -->
    <bean id=""outboundExceptionAdapter"" class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver"">
        <property name=""messageConverters"">
            <util:list>
            
                <!-- Support XML marshaling -->
                <bean class=""org.springframework.http.converter.xml.MarshallingHttpMessageConverter"">
                    <property name=""marshaller"" ref=""xmlMarshaller""/>
                    <property name=""unmarshaller"" ref=""xmlMarshaller""/>
                </bean>
                
                <!-- Return plain text -->
                <bean class=""org.springframework.http.converter.StringHttpMessageConverter""/>
            </util:list>
        </property>
    </bean>
    
    <bean id=""xmlMarshaller"" class=""org.springframework.oxm.xmlbeans.XmlBeansMarshaller""/>  
{code}

And now when an exception occurs, I get nicely rendered XML returned with an HTTP 500 error code.","06/Apr/10 2:53 AM;scottyfred;Tyler, 

This issue is slightly different than SPR-6693. If you annotate an @ExceptionHandler method with @ResponseBody, then Spring will use a MessageConverter to marshal the returned object to the proper response message (an XML document in your example). The fix for this issue (SPR-6902) should make @ExceptionHandler and @ResponseBody work well together. 

If you do not apply the @ResponseBody annotation to an @ExceptionHandler method, then Spring will try to use a View to marshal the returned object instead of a MessageConverter. MarshallingView is a View that can be used to marshal the object to XML (i.e. MarshallingView is the View analog to MarshallingHttpMessageConverter). Fixing SPR-6693 should make this path work as expected, so developers can choose to use MessageConverters or Views to marshal the output. 

","01/Dec/10 2:51 AM;nitegate;Don't know if this is a regression, but with 3.0.5 I get the following warn message and the exception is thrown as if no handler was defined. Debugging shows that the handler is executed.

WARN : org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver - Could not find HttpMessageConverter that supports return type [class default.W3CGeoLocation] and [application/json, text/javascript, */*]

The handler is as follows:

@ExceptionHandler
public @ResponseBody
W3CGeoLocation handleException(IllegalArgumentException exception) {
  return new W3CGeoLocation();
}
","09/Dec/10 12:46 AM;arjen.poutsma;@Adrian:

I am not sure this is related to the issue above. Is W3CGeoLocation a supported object by the JSON message converter?","09/Dec/10 1:21 AM;nitegate;W3CGeoLocation is a simple pojo. I return this object when everything is ok as well (here it is working fine), but when an exception happens I whant to return an empty object since this a Ajax request. 

I think this whole thing is related to https://jira.springframework.org/browse/SPR-7637

It would be really nice if exception handler method behaved like normal request handler method plus the feature that they are called when an exception in a request method happens. This would make the controller code much cleaner.
Right now it is not possible to pass a ModelMap to a exception handler method, and also all ModelAttributes get lost somehow. This means if I return the same view with a form in it, the form-tag cannot find the model anymore. ","20/Dec/10 8:48 AM;arjen.poutsma;I cannot reproduce this, using @ResponseBody for @ExceptionHandler works fine for me (also when using a JSON response object).","24/Dec/10 1:36 PM;jpunt;Arjen, given that you cannot reproduce the problem (and many of us are stumbling on this),
Could you include/document the necessary/sufficient conditions to make this work?
What version, what config, or what ever?","10/Jan/11 1:58 AM;nitegate;Sorry for not giving peace on this, but this time I made a small test project where you can verify the issue. I was unable to make a junit test for this, so you will have to click this through.

It is really simple. The controller looks like this:

{code}
@Controller
public class HomeController {

	@RequestMapping(value = ""/"", method = RequestMethod.GET)
	public String home() {
		return ""index"";
	}

	@RequestMapping(value = ""/data"", method = RequestMethod.GET)
	public @ResponseBody
	MyData get(@RequestParam boolean exception) {
		if (exception) {
			throw new IllegalArgumentException();
		}
		else {
			return new MyData();
		}
	}

	@ExceptionHandler(IllegalArgumentException.class)
	public @ResponseBody
	MyData handleException() {
		return new MyData();
	}

}


{code}

The corresponding JSP file:

{code}
<html>
<head>
<script type=""text/javascript"" src=""resources/jquery-1.4.4.min.js""></script>
<script type=""text/javascript"">
	function showData(data) {
		alert(""got it: "" + data);
	}
</script>
</head>
<body>
<button onclick=""$.getJSON('data', {exception : false}, showData);"">Get Json Data</button>
<p/>
<button onclick=""$.getJSON('data', {exception : true}, showData);"">Get Json Data with Exception</button>
</body>
</html>
{code}

When you click on ""Get JSON Data"" everything is fine. When you click ""Get Json Data with Exception"" you get nothing in the browser and there is the following entry in tomcat log:

WARN : org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver - Could not find HttpMessageConverter that supports return type [class de.emaitie.test.MyData] and [application/json, text/javascript, */*;q=0.01]

It is running on Springframework 3.0.5.
",10/Jan/11 1:59 AM;nitegate;Test project,"10/Jan/11 4:17 AM;arjen.poutsma;Thanks Adrian, I will take another look at this now.","10/Jan/11 5:14 AM;arjen.poutsma;Fixed.

The issue was that the MappingJacksonHttpMessageConverter was not registered with the AnnotationMethodHandlerExceptionResolver (which handles @ExceptionHandler methods), only with the AnnotationMethodHandlerAdapter (which handles @RequestMapping methods). 

This is now fixed, or at least when you use <mvc:annotation-driven/>.

Adrian, could you try a recent 3.1 SNAPSHOT (as of tonight), and see if it works for you? If so, we will backport it to 3.0.6.","11/Jan/11 12:50 AM;nitegate;Thanks Arjen. I tried it with 3.1.0.BUILD-20110111.020601-120 and its working now.

I was hoping that you could solve it a little bit differently. IMHO the RequestHandler and ExceptionHandler Adapter/Resolver should behave exactly the same, meaning allowing the same input parameters and return values. The only difference should be that the ExceptionHandler methods are called when something breaks in the RequestHandler methods.
This is already requested here: https://jira.springframework.org/browse/SPR-7637
","11/Jan/11 10:24 AM;rstoya05-aop;Arjen, based on the description of the fix SPR-7190 is probably fixed too.","10/Jun/11 12:22 PM;randyavis;There's a workaround at 
http://stackoverflow.com/questions/6267021/spring-3-rest-responsebody-and-exceptionhandler/6311083
",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11567|https://github.com/spring-projects/spring-framework/issues/11567]. ,,,,,,
AnnotationMethodHandlerAdapter.handleResponseBody prioritizes messageConverter over MediaType,SPR-6877,30192,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,tedberg,tedberg,19/Feb/10 7:26 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,02/Mar/10 8:19 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"The nested loop should be flip flopped.  The current logic iterates over the message converters, then looks at the media types.  For request header:

{code}
Accept	application/json, text/javascript, */*
{code}

Which is sent via jQuery, this logic picks the first converter than can handle {code}*/*{code}  It should start with application/json and scan all message converters looking for a match.  Only when a match isn't found should the logic ever consider the second or third arguments.

{code:title=AnnotationMethodHandlerAdapter.handleResponseBody}

		private void handleResponseBody(Object returnValue, ServletWebRequest webRequest)
				throws ServletException, IOException {

			HttpInputMessage inputMessage = new ServletServerHttpRequest(webRequest.getRequest());
			List<MediaType> acceptedMediaTypes = inputMessage.getHeaders().getAccept();
			if (acceptedMediaTypes.isEmpty()) {
				acceptedMediaTypes = Collections.singletonList(MediaType.ALL);
			}
			MediaType.sortBySpecificity(acceptedMediaTypes);
			HttpOutputMessage outputMessage = new ServletServerHttpResponse(webRequest.getResponse());
			Class<?> returnValueType = returnValue.getClass();
			List<MediaType> allSupportedMediaTypes = new ArrayList<MediaType>();
			if (messageConverters != null) {
				for (HttpMessageConverter messageConverter : messageConverters) {
					allSupportedMediaTypes.addAll(messageConverter.getSupportedMediaTypes());
					for (MediaType acceptedMediaType : acceptedMediaTypes) {
						if (messageConverter.canWrite(returnValueType, acceptedMediaType)) {
							messageConverter.write(returnValue, acceptedMediaType, outputMessage);
							this.responseArgumentUsed = true;
							return;
						}
					}
				}
			}
			throw new HttpMediaTypeNotAcceptableException(allSupportedMediaTypes);
		}
{code}

In my case, I've registered the converters in the order matching the docs: http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/remoting.html#rest-message-conversion

{code}
 <property name=""messageConverters"">
            <list>
                <bean class=""org.springframework.http.converter.StringHttpMessageConverter""/>
                <bean class=""org.springframework.http.converter.FormHttpMessageConverter""/>
                <bean class=""org.springframework.http.converter.ByteArrayHttpMessageConverter""/>
                <!--<bean class=""org.springframework.http.converter.xml.MarshallingHttpMessageConverter""/>-->
                <bean class=""org.springframework.http.converter.json.MappingJacksonHttpMessageConverter""/>
                <bean class=""org.springframework.http.converter.xml.SourceHttpMessageConverter""/>
                <!--<bean class=""org.springframework.http.converter.BufferedImageHttpMessageConverter""/>-->
            </list>
        </property>
{code}

If I enable the xml converter, it tries to process my request, despite the json accept header.  Nothing in the docs indicate that the ordering is very important, as I'd expect these to be mutually exclusive.  If there is a specific ordering that should be used, please add that to the docs.  

The only ordering I can see is the default in the code of:

{code}
private HttpMessageConverter<?>[] messageConverters =
			new HttpMessageConverter[]{new ByteArrayHttpMessageConverter(), new StringHttpMessageConverter(),
					new FormHttpMessageConverter(), new SourceHttpMessageConverter()};
{code}



",,;02/Mar/10 8:19 PM;arjen.poutsma;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-02 20:19:24.489,8863,true,issuemaster(issuemaster),,Jetty -> 6.1,,0|i0169r:,6893,256,,,,,Mac OS X JVM -> 1.6,"02/Mar/10 8:19 PM;arjen.poutsma;Thanks for spotting this, should be fixed now.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11543|https://github.com/spring-projects/spring-framework/issues/11543]. ,,,,,,,,,,,,,,,,,,,,,,
RequestMethod does not appear to factor into @RequestMapping uniqueness in some cases,SPR-6876,30189,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,kdonald,kdonald,19/Feb/10 6:44 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,01/Mar/10 7:52 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"To reproduce:

Define the following two mappings

{code}
@Controller
@RequestMapping(""/test"")
public class TestController {

    @RequestMapping(""/{foo}"", method=RequestMethod.GET)
    public void foo() {
        System.out.println(""Foo called"");
    }

    @RequestMapping(""/{bar}"", method=RequestMethod.DELETE)
    public void bar() {
        System.out.println(""Bar called"");
    }
}
{code}

Try:
{code}
http GET /test/foo - this will work
{code}

Then try:
{code}
http DELETE /test/bar - this will fail with error ""No path variable {bar} defined"".
{code}

If you rename {bar} to {foo}, both the GET and DELETE requests will work.",,;01/Mar/10 7:52 PM;arjen.poutsma;2640,,,,,,,,,0,2640,,,0,2640,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-03-01 19:52:53.477,8864,true,issuemaster(issuemaster),,,,0|i016af:,6896,255,,,,,,01/Mar/10 7:52 PM;arjen.poutsma;Fixed.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11542|https://github.com/spring-projects/spring-framework/issues/11542]. ,,,,,,,,,,,,,,,,,,,,,,
UriTemplate and restTemplate don't url encode the at-sign (@),SPR-6874,30186,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,arjen.poutsma,bucht,bucht,19/Feb/10 12:37 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,01/Mar/10 9:31 PM,3.0 GA,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"Trying to pass in a request parameter containing an email-address doesn't work correctly as the at-sign isn't correctly encoded to %40.

Example:

{code}
Map<String, String> params = new HashMap<String, String>();
params.put(""email"", ""a@b.c"");
		
UriTemplate template = new UriTemplate(""/app/search?email={email}"");
URI url = template.expand(params);
System.out.println(url.toString());
{code}

Results in ""/app/search?email=a@b.c"" instead of the expected ""/app/search?email=a%40b.c""

This means that everything before the '@' is interpreted as username/password and everything after as the host to connect to.",,;01/Mar/10 9:30 PM;arjen.poutsma;5700,,,,,,,,,0,5700,,,0,5700,,,,,,,,,,,SPR-6854,,,,,,,,,,,,,,,,9936000,,,,,2010-03-01 19:54:07.022,8866,true,issuemaster(issuemaster),,,,0|i016a7:,6895,278,,,,,,01/Mar/10 7:54 PM;arjen.poutsma;Added formatting,"01/Mar/10 9:03 PM;arjen.poutsma;According to the [HTTP RFC|http://tools.ietf.org/html/rfc3986#appendix-A], the @-sign is a valid character in query parameters.

I've verified this by using a packet sniffer and doing a Google Search for foo@bar in Safari's search box, and the resulting request does not encode the @-sign. Furthermore, the following snippet works fine:

{code}
HttpClient client = new HttpClient();
GetMethod method = new GetMethod(""http://google.com/search?q=foo@bar"");
client.executeMethod(method);
{code}

while replacing the @-sign in the GetMethod constructor with a space (or any other character that needs to be encoded) results in a IllegalArgumentException.

Resolving as Won't Fix.",01/Mar/10 9:08 PM;bucht;Shouldn't RestTemplate be fixed to allow the @-sign then?,"01/Mar/10 9:16 PM;arjen.poutsma;After doing some more investigation, it turns out that there is a bug here. Reopening.","01/Mar/10 9:28 PM;arjen.poutsma;{quote}
Shouldn't RestTemplate be fixed to allow the @-sign then?
{quote}

Yes, it should. That was the bug I was hinting at. Fixing it now :).
","01/Mar/10 9:31 PM;arjen.poutsma;This should now be fixed. Could you try a recent snapshot (as of this night) and see if it works for you?

Thanks for spotting this!",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11540|https://github.com/spring-projects/spring-framework/issues/11540]. ,,,,,,,,,,,,,,,,,
Cache by-type lookups in DefaultListableBeanFactory,SPR-6870,30177,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Complete,cbeams,eberhardwolff,eberhardwolff,18/Feb/10 8:35 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,27/May/12 9:04 AM,2.5.6,,,,,,,3.2 M1,,,,,Core,,,,45,performance,,,,,,,"The Autowiring algorithms tries to work out the dependencies by building up the Beans. If this fails, a BeanCreationException is thrown, caught and then a different way to handle the dependencies is tried. In some situations this results in slow performance and it is probably also not the nicest programming style.",,;27/May/12 11:01 AM;cbeams;12600,,,,,,,,,,12600,,,,12600,,,,,,,,,,,,,,18/Apr/11 4:15 AM;krosenvold;SPR6870.patch;https://jira.spring.io/secure/attachment/18033/SPR6870.patch,18/Apr/11 4:15 AM;krosenvold;perf305MainPatch.html;https://jira.spring.io/secure/attachment/18035/perf305MainPatch.html,18/Apr/11 4:15 AM;krosenvold;perf305stock.html;https://jira.spring.io/secure/attachment/18034/perf305stock.html,18/Apr/11 4:15 AM;krosenvold;perfDiffStockVsPatch1.html;https://jira.spring.io/secure/attachment/18036/perfDiffStockVsPatch1.html,,,,,,,,,,9936000,,,,,2010-06-02 18:48:11.224,1264,true,issuemaster(issuemaster),,,,0|i00hsf:,2927,1609,,,,,,"02/Jun/10 6:48 PM;krosenvold;This problem is *really* bad if you use a lot of web-scoped beans and @Autowired with web-scoped beans currently uses about 75% of our total CPU time on our web server. Since the factory is not caching anything by type, it ends up iterating the entire factory a lot. And web-scoped beans are created per-request.","02/Jun/10 6:52 PM;krosenvold;And yes, this applies to spring 3.0 too. The caching really needs to be updated to understand ""by type"".",02/Jun/10 7:03 PM;krosenvold;It also severely affects start-up time of your application context. About 50-75% of our application context startup-time is spent iterating the application context to determine autowire-by type.,16/Jun/10 7:07 AM;jawspeak;+1 autowiring by type is inefficient and in my profiling is taking a large percentage of the request/response time.,"08/Jan/11 3:27 PM;krosenvold;There is now a workaround !

http://jawspeak.com/2010/11/28/spring-slow-autowiring-by-type-getbeannamesfortype-fix-10x-speed-boost-3600ms-to/","09/Jan/11 9:36 AM;jawspeak;Thanks Kristian,

My solution was not ideal, but I hope it helps you. I'm happy to contribute a patch if Spring wants it.","21/Mar/11 9:41 AM;lhotari;Please fix this issue. Add caching to the DefaultListableBeanFactory.getBeanNamesForType method. This is a performance hotspot for many Spring applications (like Grails). 

There should be caching for autowireBeanProperties and autowireByName too. Grails has caching for autowireByName in the DefaultListableBeanFactory implementation it uses: https://github.com/grails/grails-core/blob/master/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons/spring/ReloadAwareAutowireCapableBeanFactory.java . Caching should be provided by default.",21/Mar/11 10:07 AM;lhotari;Might be related to SPR-7949.,21/Mar/11 10:08 AM;lhotari;This issue might also be related to SPR-7988 .,"18/Apr/11 4:15 AM;krosenvold;The enclosed patch adds caching to DefaultListableBeanFactory#getBeanNamesForType, providing a huge boost to any users of @Autowired on non-singleton beans. Even container startup-time is significantly improved, we saved 20% on overall startup time of our 1100 bean ApplicationContext.

In a running server environment (for a typical web application using web scopes and @Autowired) this patch will provide a similar reduction in overall cpu usage.

The patch is applied over 3.0.5 but applies cleanly at r4225 on trunk.

The patch is entirely non-functional and adds no new tests but it breaks no tests either. There are several tests that verify that the caching does not break anything, something I repeatedly discovered while making the patch.

I have also enclosed a profiler report showing the loading of the application context before and after this patch, and also a diff-only report. The reports are not complete, but shows running one wired integration test with 860 autowired dependencies from a pool of 1021 beans (there is no external io in this test)


","20/Apr/11 1:41 AM;mck;There's (possibly related) performance patch for web applications using non-singleton beans submitted in SPR-7949
This patch really is just the beginnings of improving the bean factory code to use ReadWriteLocks instead of hard synchronization statements...","20/Apr/11 1:55 AM;krosenvold;This patch operates at a higher level in the stack than the SPR-7949 patch and applying this patch will render the SPR-7949 patch useless. I have not tried the patch at SPR-7949, but I did another patch a couple of years ago using readerwriterlocks that turned out to be very prone to deadlocks in highly concurrent environments. At the time I think I decided this was a fundamental problem of using readerwriterlocks in this setting. This patch has no deadlock potential.

","23/Feb/12 6:52 AM;digulla;Any chance to see some work on this? The performance of looking up Spring beans by type is a bother for us as well.

We solved this outside of Spring by using this workaround:

{code}
getBean(Class<T> type) {
    String name = type.getName() + ""#0"";
    return getBean( name, type );
}
{code}

The idea is that for most singletons, there is only a single implementation, so the ID can be omitted and Spring will use the type of the bean to generate a name. This means that you need to do some extra work for interfaces or that you must always request beans using interface by a specific ID and never by type.

But it's a poor solution. It's pretty simple to cache the bean definition lookup in {{getBean(Class<T> type)}} and that would give a huge performance boost without the need for any hacks.","24/Feb/12 3:15 AM;mindas;Spring, please solve this. Here's my story:

http://stackoverflow.com/questions/9429612/spring-wiring-by-type-is-slower-by-magnitude-than-wiring-by-name",24/Feb/12 8:55 AM;youngm;I've been told this is a risky fix because it is right in the core of some complex code.  NOW is the perfect time attempt to fix this since you are so early in the 3.2 release cycle!,"27/May/12 9:04 AM;cbeams;Thanks, Kristian for the patch.  With minor modifications, it has been applied and indeed solves the problem nicely.

At the time of this writing the snapshot containing these changes has just finished publishing.  There are a large number of watchers on this issue -- please consider taking the latest 3.2.0.BUILD-SNAPSHOT for a spin and provide any feedback.  Note that we'll be shipping this change with 3.2 M1 within a day or two as well; but naturally any feedback prior to that would be great.
{quote}
{noformat}
commit 4c7a1c0a5403b35dd812dae1f2a753538928bb32 (HEAD, SPR-6870)
Author: Chris Beams <cbeams@vmware.com>
Date:   Sun May 27 17:40:33 2012 +0300

    Cache by-type lookups in DefaultListableBeanFactory

    Prior to this change, by-type lookups using DLBF#getBeanNamesForType
    required traversal of all bean definitions within the bean factory
    in order to inspect their bean class for assignability to the target
    type. These operations are comparatively expensive and when there are a
    large number of beans registered within the container coupled with a
    large number of by-type lookups at runtime, the performance impact can
    be severe. The test introduced here demonstrates such a scenario clearly.
    
    This performance problem is likely to manifest in large Spring-based
    applications using non-singleton beans, particularly request-scoped
    beans that may be created and wired many thousands of times per second.
    
    This commit introduces a simple ConcurrentHashMap-based caching strategy
    for by-type lookups; container-wide assignability checks happen only
    once on the first by-type lookup and are afterwards cached by type
    with the values in the map being an array of all bean names assignable
    to that type. This means that at runtime when creating and autowiring
    non-singleton beans, the cost of by-type lookups is reduced to that of
    ConcurrentHashMap#get.
    
    Issue: SPR-6870
{noformat}
{quote}","09/Jul/12 9:32 PM;sylvain.laurent;For those watching this issue, it has ben back ported to 3.1.2, see SPR-9448",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11536|https://github.com/spring-projects/spring-framework/issues/11536]. ,,,,,,
enable overwriting of createHttpInputMessage and createHttpOutputMessage in AnnotationMethodHandlerAdapter,SPR-6861,30161,,Refactoring,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,aantono,aantono,17/Feb/10 10:19 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,28/Mar/10 11:25 PM,3.0.1,,,,,,,3.0.2,,,,,Web,,,,0,,,,,,,,"It would be beneficial to have an ability to provide a custom implementation of a HttpInputMessage and HttpOutputMessage to AnnotationMethodHandlerAdapter (Similar to SPR-4300).

Currently it is being hard-coded to be instantiated as ServletServerHttpRequest and ServletServerHttpResponse, which does not allow one to implement a custom handling of translating the request payload and headers. (A particular case is to implement format representation handling override via reading the _format_ query parameter instead of relying on the _Accept_ header)
A proposed improvement would be to move the creation of a messages into an overwritable method which would create an appropriate implementation.
This would allow one to extend AnnotationMethodHandlerAdapter and supply its own implementation of the messages.

Attached are the diff patches for your consideration.",,;28/Mar/10 11:25 PM;arjen.poutsma;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,17/Feb/10 10:19 AM;aantono;AnnotationMethodHandlerAdapter.diff;https://jira.spring.io/secure/attachment/16208/AnnotationMethodHandlerAdapter.diff,17/Feb/10 10:19 AM;aantono;HandlerMethodInvoker.diff;https://jira.spring.io/secure/attachment/16209/HandlerMethodInvoker.diff,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:12.446,15733,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i0163r:,6866,253,,,,,Sun JVM -> 1.6,"18/Feb/10 1:29 AM;aantono;Juergen, is it possible to include this in the 3.0.1 release?  When I marked the affected version, I choose 3.0.1 cause I was testing it on the CI build of 3.0.1, but the final version is not released yet.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11527|https://github.com/spring-projects/spring-framework/issues/11527]. ,,,,,,,,,,,,,,,,,,,,,,
Enable Executor qualification with @Async,SPR-6847,30122,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,cbeams,mark.fisher,mark.fisher,15/Feb/10 8:21 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,20/May/12 5:29 AM,3.0 GA,,,,,,,3.2 M1,,,,,Core,,,,14,,,,,,,,"The approach should be consistent with @Transactional:
http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/htmlsingle/spring-framework-reference.html#tx-multiple-tx-mgrs-with-attransactional

The bean name may be considered, but the 'qualifier' is generally recommended.
{code}
@Async(""beanNameOrQualifierValue"")
public void someOp() {
   ...
}
{code}
",,;20/May/12 5:31 AM;cbeams;43200,,,,,,,,,,43200,,,,43200,,,,,,,,SPR-9575,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-03-04 13:35:05.845,1265,true,issuemaster(issuemaster),,,,0|i00h5r:,2825,556,,,,,,"04/Mar/12 1:35 PM;viy;And what is the status of the issue after 2 years being opened?
Whether it will be implemented some day or not?
Thanks.","20/May/12 5:29 AM;cbeams;Hi Eugene, it's complete.  To all watchers: please give this a try in 3.2.0.BUILD-SNAPSHOT and provide feedback.  Thanks!
{quote}
{noformat}
commit ed0576c1811bbb3a17e2e9aed2810dc3c9097a09
Author: Chris Beams <cbeams@vmware.com>
Date:   Sat May 19 11:05:23 2012 +0300

    Support executor qualification with @Async#value
    
    Prior to this change, Spring's @Async annotation support was tied to a
    single AsyncTaskExecutor bean, meaning that all methods marked with
    @Async were forced to use the same executor. This is an undesirable
    limitation, given that certain methods may have different priorities,
    etc. This leads to the need to (optionally) qualify which executor
    should handle each method.
    
    This is similar to the way that Spring's @Transactional annotation was
    originally tied to a single PlatformTransactionManager, but in Spring
    3.0 was enhanced to allow for a qualifier via the #value attribute, e.g.
    
      @Transactional(""ptm1"")
      public void m() { ... }
    
    where ""ptm1"" is either the name of a PlatformTransactionManager bean or
    a qualifier value associated with a PlatformTransactionManager bean,
    e.g. via the <qualifier> element in XML or the @Qualifier annotation.
    
    This commit introduces the same approach to @Async and its relationship
    to underlying executor beans. As always, the following syntax remains
    supported
    
      @Async
      public void m() { ... }
    
    indicating that calls to #m will be delegated to the ""default"" executor,
    i.e. the executor provided to
    
      <task:annotation-driven executor=""...""/>
    
    or the executor specified when authoring a @Configuration class that
    implements AsyncConfigurer and its #getAsyncExecutor method.
    
    However, it now also possible to qualify which executor should be used
    on a method-by-method basis, e.g.
    
      @Async(""e1"")
      public void m() { ... }
    
    indicating that calls to #m will be delegated to the executor bean
    named or otherwise qualified as ""e1"". Unlike the default executor
    which is specified up front at configuration time as described above,
    the ""e1"" executor bean is looked up within the container on the first
    execution of #m and then cached in association with that method for the
    lifetime of the container.
    
    Class-level use of Async#value behaves as expected, indicating that all
    methods within the annotated class should be executed with the named
    executor. In the case of both method- and class-level annotations, any
    method-level #value overrides any class level #value.
    
    This commit introduces the following major changes:
    
     - Add @Async#value attribute for executor qualification
    
     - Introduce AsyncExecutionAspectSupport as a common base class for
       both MethodInterceptor- and AspectJ-based async aspects. This base
       class provides common structure for specifying the default executor
       (#setExecutor) as well as logic for determining (and caching) which
       executor should execute a given method (#determineAsyncExecutor) and
       an abstract method to allow subclasses to provide specific strategies
       for executor qualification (#getExecutorQualifier).
    
     - Introduce AnnotationAsyncExecutionInterceptor as a specialization of
       the existing AsyncExecutionInterceptor to allow for introspection of
       the @Async annotation and its #value attribute for a given method.
       Note that this new subclass was necessary for packaging reasons -
       the original AsyncExecutionInterceptor lives in
       org.springframework.aop and therefore does not have visibility to
       the @Async annotation in org.springframework.scheduling.annotation.
       This new subclass replaces usage of AsyncExecutionInterceptor
       throughout the framework, though the latter remains usable and
       undeprecated for compatibility with any existing third-party
       extensions.
    
     - Add documentation to spring-task-3.2.xsd and reference manual
       explaining @Async executor qualification
    
     - Add tests covering all new functionality
    
    Note that the public API of all affected components remains backward-
    compatible.
    
    Issue: SPR-6847
{noformat}
{quote}",24/May/12 6:58 AM;kenyoung@solutionary.com;Is there any chance that this change could be incorporated back into the 3.1.x release?  Thx,25/May/12 3:37 PM;mcollard;I second the motion to have it included in a 3.1.x release if possible.,"25/May/12 3:43 PM;cbeams;Mike, Ken - keep an eye on SPR-9443.  No guarantee yet, but will definitely review for 3.1.2.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11513|https://github.com/spring-projects/spring-framework/issues/11513]. ,,,,,,,,,,,,,,,,,,
"The class MediaType has a natural ordering that is inconsistent with equals, which is generally recommended or should otherwise at least be indicated in the javadoc",SPR-6788,29901,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,tomas_johansson,tomas_johansson,01/Feb/10 3:39 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,01/Feb/10 11:17 PM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"For example, if you use these two strings:
""text/html; q=0.7; charset=iso-8859-1""
""text/html; q=0.7""
then the compareTo method will return zero but equals will return false.

I suggest that a consistent implementation should either be fixed, or otherwise (if necessary for some reason ?) at least it should be mentioned in the javadoc that the natural ordering that is inconsistent with equals.

Example of JUnit test that I think should pass:

{code}
	@Test
	public void verifyConsistentImplementationOf_equals_And_compareTo() {
		verifyConsistentImplementationOf_equals_And_compareTo(
			MediaType.parseMediaType(""text/html; q=0.7; charset=iso-8859-1""),
			MediaType.parseMediaType(""text/html; q=0.7"")
		);
		verifyConsistentImplementationOf_equals_And_compareTo(
				[add more test cases ...]
		);
		[add more test cases ...]
	}

	private void verifyConsistentImplementationOf_equals_And_compareTo(MediaType mediaType1, MediaType mediaType2) {
		assertEquals(mediaType1.equals(mediaType2), mediaType1.compareTo(mediaType2) == 0);
	}
{code}
/ Tomas Johansson",,;01/Feb/10 11:14 PM;arjen.poutsma;12900,;01/Feb/10 11:15 PM;arjen.poutsma;12900,,,,,,,1800,0,25800,"1,433%",1800,0,25800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-02-01 19:39:51.408,15755,true,issuemaster(issuemaster),,,,0|i016fb:,6918,7641,,,,,,01/Feb/10 7:39 PM;arjen.poutsma;Added formatting.,"01/Feb/10 11:17 PM;arjen.poutsma;Thanks for spotting this.

MediaType no longer implements Comparable now. Instead, I've added a sortBySpecificity() method, which sorts a list of media types by specificity.","01/Feb/10 11:19 PM;arjen.poutsma;The javadoc of sortBySpecificity() reads:

Given two media types:
# if either media type has a wildcard type, then the media type without the wildcard is ordered before the other.
# if the two media types have different types, then they are considered equal and remain their current order.
# if either media type has a wildcard subtype, then the media type without the wildcard is sorted before the other.
# if the two media types have different subtypes, then they are considered equal and remain their current order.
# if the two media types have different quality value, then the media type with the highest quality value is ordered before the other.
# if the two media types have a different amount of parameters, then the media type with the most parameters is ordered before the other.

For example:
{noformat}
audio/basic < audio/* < */*
audio/* < audio/*;q=0.7; audio/*;q=0.3
audio/basic;level=1 < audio/basic
audio/basic == text/html
audio/basic == audio/wave
{noformat}
","02/Feb/10 3:07 AM;tomas_johansson;Well, thank you yourself for dealing with the issue within one day, but I must say I was surprised to see that you immediately removed the implementation of the interface, considering the existing client code (among spring framework users) which now will get compiling errors when they have done this:
{code}
Collections.sort(mediaTypes);
{code}
which now will have to be replaced with this:
{code}
MediaType.sortBySpecificity(mediaTypes);
{code}
Since Spring is a very much published framework ( see ""Public versus Published Interfaces"" : http://martinfowler.com/ieeeSoftware/published.pdf ) I think that the javadoc and release notes for 3.0.1 should mention that the interface should be considered as deprecated and in the future will become removed, rather than removing it at once and breaking the client code out there.

Another thing, when I looked in the implementation in the new method 'sortBySpecificity' I noted that it does not really do much itself, except from two things:

    * it gives the client an IllegalArgumentException instead of a NullPointerException when the parameter is null (and now I am ignoring the aditional size control which does not seem meaningful since a zero sized list to 'Collections.sort' does not cause any problem except for being a meaningless invocation).
    * it enables hiding of the Comparator interface

Regarding the last potential reason for exposing this method into the MediaType class, is it really an appropriate thing to do, as opposed of instead making the Comparator implementation available (either by the MediaType class, or by a new MediaTypeComparatorFactory class) ?

The problem with providing one specific method for that particular sorting is that it can force client programmers to write more clumsy code doing the sorting in different ways, if they want to either use the included Comparator or write their own Comparator.
In other words, there will not be only one way for doing the sorting but the other kind of sortings will have to be treated differently, if someone for example would want to do a reversed sorting, and also would like to do a sorting only considering the quality parameter.
For example some helper method in client code might want to implement something like this:

{code}
// example potential client code for providing the options of doing different kind of sortings
public enum MediaTypeSortingStrategy {
	SPECIFICITY, // use the ""built-in"" Comparator, included in the Spring framework distribution
	SPECIFICITY_REVERSED, // should reverse the ""built-in"" comparator 
	QUALITY 	 // use our own Comparator     
}

import org.springframework.util.Assert;
public class ... {
/**
 * @throws IllegalArgumentException if mediaTypes is null
 */
public void sortMediaTypes(
	final List<MediaType> mediaTypes, 
	final MediaTypeSortingStrategy mediaTypeSortingStrategy
) {
	// use (i.e. duplicate) the same message as in the built-in method:
	final String assertMessageToBeUsedWhenMediaTypesListIsNull = ""'mediaTypes' must not be null"";
	
	if(mediaTypeSortingStrategy == MediaTypeSortingStrategy.SPECIFICITY) {
		// now we must use the built-in method, since the Comparator is not publicly available
		MediaType.sortBySpecificity(mediaTypes); // will throw IllegalArgumentException (currently with the same message as above, but of course that might change in a future release...)
	}
	else if(mediaTypeSortingStrategy == MediaTypeSortingStrategy.SPECIFICITY_REVERSED) {
		Assert.notNull(mediaTypes, assertMessageToBeUsedWhenMediaTypesListIsNull); // want the same kind of exception as MediaType.sortBySpecificity will throw
		Collections.sort(
			mediaTypes, 
			new InvertibleComparator<MediaType>(
				// well, actually the code below can not be implemented easily,
				// without copying the Spring framework source code for the comparator
				// and exposing it ourselves into a class as below ...
				MediaTypeComparatorFactory.createSpecifictyComparator() // should return the currently package level protected 'SPECIFICITY_COMPARATOR'
			)
		);
	}		
	else if(mediaTypeSortingStrategy == MediaTypeSortingStrategy.QUALITY) {
		// we do not want a NullPointerException for this scenario but want 
		// a consistent behaviour as when using the ""built-in"" sorter
		Assert.notNull(mediaTypes, assertMessageToBeUsedWhenMediaTypesListIsNull);
		Collections.sort(mediaTypes, createMediaTypeComparatorSortingByQuality());
	}
	 ...
}
Comparator<MediaType> createMediaTypeComparatorSortingByQuality() { ... } // this method might be located in some factory class
{code}

On the other hand, if you (i.e. the Spring framework) would expose the Comparator (and I would also suggest to remove the new method sortBySpecificity), then the above method 'sortMediaTypes' could be implemented by the client code in a more transparent way like below:
{code}
public enum MediaTypeSortingStrategy {
	SPECIFICITY, // use the ""built-in"" Comparator, included in the Spring framework distribution
	SPECIFICITY_REVERSED, // should reverse the ""built-in"" comparator 
	QUALITY; 	 // use our own Comparator
	
	private static Map<MediaTypeSortingStrategy, Comparator<MediaType>> mediaTypeSortingComparators = new HashMap<MediaTypeSortingStrategy, Comparator<MediaType>>();
	static {
		// Now assume that there is a 'MediaTypeComparatorFactory' in the Spring framework
		// which exposes the Comparator 'SPECIFICITY_COMPARATOR' currently being package level protected within the MediaType class
		mediaTypeSortingComparators.put(SPECIFICITY, MediaTypeComparatorFactory.createSpecifictyComparator());
		mediaTypeSortingComparators.put(SPECIFICITY_REVERSED, new InvertibleComparator<MediaType>(MediaTypeComparatorFactory.createSpecifictyComparator()));

		// The factory name below is ugly, but it should make it obvious that the above factory with Comparator implementation(s) 
		// might be included in Spring framework, while clients might want to write their own Comparators as below  
		mediaTypeSortingComparators.put(QUALITY, ClientCodeMediaTypeComparatorFactory.createMediaTypeComparatorSortingByQuality());
	}
	public Comparator<MediaType> getComparator() {
		return mediaTypeSortingComparators.get(this);
	}
}

/**
 * @throws IllegalArgumentException if mediaTypes is null
 */
public void sortMediaTypes(
	final List<MediaType> mediaTypes, 
	final MediaTypeSortingStrategy mediaTypeSortingStrategy
) {
	// now when the client always defines the error message here, it will always be the same, as opposed 
	// to defining the message here for some of the sortings, while other assertion messages 
	// might be hardcoded in Spring framework itself (which might change and cause different messages)
	final String assertMessageToBeUsedWhenMediaTypesListIsNull = ""'mediaTypes' must not be null"";
	
	Assert.notNull(mediaTypes, assertMessageToBeUsedWhenMediaTypesListIsNull);
	Collections.sort(mediaTypes, mediaTypeSortingStrategy.getComparator());
}
{code}

/ Tomas Johansson","02/Feb/10 4:28 AM;arjen.poutsma;Thomas,

There are a couple of good reasons why I removed the Comparable implementation outright, and decided to offer a sortBySpecificity method instead.

Firstly, as you pointed out early in this issue, the original implementation of Comparable was inconsistent with equals and hashCode. The [javadoc|http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html#compareTo(T)] of Comparable states that this is strongly recommended. So, having a comparator made more sense, also because - as you rightfully comment - sorting by specificity is only of the ways to sort media types.  However, if this comparator would have been made public, it allowed usage in sorted sets and maps, which would have caused strange results. The [javadoc|http://java.sun.com/javase/6/docs/api/java/util/Comparator.html] of Comparator says:

{quote}
In particular, the sorted set (or sorted map) will violate the general contract for set (or map), which is defined in terms of equals.
{quote}

(Note that I myself made the mistake of sorting comparable MediaTypes in a TreeMap, in the ContentNegotiatingViewResolver. This could have caused some interesting new JIRAs along the way. This bug was fixed as part of the resolution of this issue.)

I figured that if I could make the mistake of using it in TreeMaps, everybody could, and I wanted to negate that. That's why I decided to offer the sortBySpecificity() method, and not make the comparator public. So, in effect, the specificity comparator is only to be used for sorting lists (and not for TreeMaps and TreeSets). 

Some other remarks:

* Throwing a IllegalArgumentException instead of a NullPointerException when null is passed is a standard practice in the Spring Framework
* The > 1 check is there for a reason: sorting a Collections.singletonList() throws an UnsupportedOperationException because the list is unmodifiable. And singleton media types lists are used a lot in Spring. Adding this line here removed 3+ similar size checks in the rest of the code base.
* Finally, you are right to say that removing the Comparable implementation from MediaType breaks backwards compatibility. In retrospect, I think it was a bug to have it in the first place, and that's why it was removed. As public/published interfaces go: I consider MediaType to be an internal class, mostly used in the framework itself, especially when it comes to sorting them. Of course, we will make sure that this will make it to the changelog.

I hope that clears things up a bit, and I hope you understand my reasoning behind these changes.

Cheers,

Arjen","02/Feb/10 9:41 PM;arjen.poutsma;After thinking about your comment a bit more, and talking this through with Juergen, we've reinstated the Comparable implementation of MediaType.

It now orders MediaTypes alphabetically, making it consistent with equals.","03/Feb/10 11:02 AM;tomas_johansson;Well, that sounded good but it actually is not consistent.
The implementation of Comparable is now based on the value of the toString method, which does not sort.
Example of a failing test with an equals method returning true, while the compareTo does not return zero:
{code}
	@Test
	public void verifyConsistentImplementationOf_equals_And_compareTo() {
		verifyConsistentImplementationOf_equals_And_compareTo(
			""text/html; q=0.7; charset=iso-8859-1"",
			""text/html; charset=iso-8859-1; q=0.7""
		);
	}
	private void verifyConsistentImplementationOf_equals_And_compareTo(String mediaTypeString1, String mediaTypeString2) {
		MediaType mediaType1 = MediaType.parseMediaType(mediaTypeString1);
		MediaType mediaType2 = MediaType.parseMediaType(mediaTypeString2);
		assertEquals(mediaType1.equals(mediaType2), mediaType1.compareTo(mediaType2) == 0);
	}
{code}

/ Tomas","03/Feb/10 9:09 PM;arjen.poutsma;The ""text/html; q=0.7; charset=iso-8859-1"" vs ""text/html; charset=iso-8859-1; q=0.7"" inconsistency should now be fixed.","03/Feb/10 11:47 PM;tomas_johansson;No, unfortunately not :-(
For example, these two parse strings do not cause a consistent result:
""text/html; q=0.7; charset=iso-8859-1"",
""text/html; Q=0.7; charset=iso-8859-1""
They are equals according to the equals method, but compareTo does not return zero.
This particular problem might be resolved by a more consistent treatment of the casing, but would it not also be generally better to reuse code for the equals and compareTo methods, e.g. letting the last part of the equals method implementation return 'compareTo(other) == 0' (or put the code in a private helper method which is reused from both equals and compareTo methods) ?

/ Tomas
",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11454|https://github.com/spring-projects/spring-framework/issues/11454]. ,,,,,,,,,,,,,,
The method org.springframework.http.MediaType.parseMediaType  does not always throw IllegalArgumentException as the documentantion claims,SPR-6786,29899,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,tomas_johansson,tomas_johansson,01/Feb/10 3:19 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,02/Feb/10 11:52 PM,,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"For example, the following invocation throws a StringIndexOutOfBoundsException:
{code}
MediaType.parseMediaType(""audio"");
{code}
(because the implementation assumes existance of a slash and does not check the value of the index before trying to get the assumed substrings separated by slashes)

The following input string passes without getting IllegalArgumentException:
{code}
MediaType mediaType = MediaType.parseMediaType(""audio/*;q="");
{code}
but when you then invoke 'mediaType.getQualityValue()' you get a NumberFormatException.
This validation should be taken care of by the parser method as the documentation claims.

Except from these kind of obvious and easy fixes, I wonder if there also should not be some kind of sanity check, or if it should be considered as correct behaviour that the following kind of test currently passes green:
{code}
String mediaTypeUsedAsTypeAndSubtype = ""´`'*^~:.,@!$%&{}[]()&"";
MediaType mediaType = MediaType.parseMediaType(mediaTypeUsedAsTypeAndSubtype + ""/"" + mediaTypeUsedAsTypeAndSubtype);
assertEquals(mediaTypeUsedAsTypeAndSubtype, mediaType.getType());
assertEquals(mediaTypeUsedAsTypeAndSubtype, mediaType.getSubtype());
{code}
/ Tomas Johansson",,;02/Feb/10 11:52 PM;arjen.poutsma;10440,,,,,,,,,0,10440,,,0,10440,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-02-02 22:59:52.321,8893,true,issuemaster(issuemaster),,Standalone,,0|i016fj:,6919,7642,,,,,Sun JVM -> 1.6,02/Feb/10 10:59 PM;arjen.poutsma;Added formatting,"02/Feb/10 11:56 PM;arjen.poutsma;I've added more checks in constructor of MediaType for illegal characters in type, subtype and parameter attributes and values. Let me know if you think something is missing.","03/Feb/10 10:26 AM;tomas_johansson;According to this section:
http://tools.ietf.org/html/rfc2616#section-3.9
the quality value must be between zero and one, and also with restrictions about the number of decimals.
Thus the following code, for example, should fail:
MediaType.parseMediaType(""audio/*;q=1.1"");
Of course, other kind of incorrect q values should also fail, e.g. ""audio/*;q=x""

Also, when I looked in the implementation I got suspicious when looking at the method checkTokenOrQuotedString:
{code}
	private void checkTokenOrQuotedString(String s) {
		if (!(s.startsWith(""\"""") && s.endsWith(""\""""))) {
			checkToken(s);
		}
	}
{code}
The value should be either a ""token"" or a ""quoted string"" but I do not think the check for quoted string is good enough here, since I believe that the following invocation should fail:
MediaType.parseMediaType(""audio/*;attr=\"""");
But since the value both starts with and ends with the one and only quotation mark, it will not fail...

","03/Feb/10 7:54 PM;arjen.poutsma;Thanks for spotting this!

I've added some more checks for quality values, charsets, and quoted strings. Let me know if you think something is missing.

One thing to note is that even though the spec says the quality factor should always start with 0 or 1; Java itself breaks this rule by using a default ""q=.2"" factor in java.net.HttpURLConnection. In general, I think that we should respect Postel's Law when it comes to parsing Media Types, and not be too restrictive.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11452|https://github.com/spring-projects/spring-framework/issues/11452]. ,,,,,,,,,,,,,,,,,,,
Improve message error when the MarshallingView modelKey attribute is not valid,SPR-6785,29894,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Trivial,Fixed,arjen.poutsma,framiere,framiere,01/Feb/10 12:05 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,01/Feb/10 1:26 AM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"When a user specifies an invalid key in the modelKey attribute a NPE exception occurs.
An appropriate error message would help the developer.

{code:xml} 
<bean class=""org.springframework.web.servlet.view.xml.MarshallingView"">
	<property name=""modelKey"" value=""invalidKey"" />
	<property name=""marshaller"" ref=""xstreamMarshaller"" />
</bean>
{code} 

gives 

{noformat} 
java.lang.NullPointerException
        at org.springframework.web.servlet.view.xml.MarshallingView.locateToBeMarshalled(MarshallingView.java:125)
        at org.springframework.web.servlet.view.xml.MarshallingView.renderMergedOutputModel(MarshallingView.java:98)
        at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)
        at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1060)
{noformat} 
",,;01/Feb/10 1:25 AM;arjen.poutsma;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-02-01 01:26:00.822,15757,true,issuemaster(issuemaster),,,,0|i016fz:,6921,7644,,,,,,"01/Feb/10 1:26 AM;arjen.poutsma;Fixed, thanks for spotting this.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11451|https://github.com/spring-projects/spring-framework/issues/11451]. ,,,,,,,,,,,,,,,,,,,,,,
HttpMessageConverter should accept Class<? extends T> on can read,SPR-6771,29819,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,25/Jan/10 7:26 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,27/Jan/10 7:24 PM,,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"There's a small glitch similar to SPR-6742 inside {{HttpMessageConverter}}. If you use it programatically you usually ask {{canRead(Class<? extends T> clazz, MediaType mediatype)}} before invoking {{read(Class<T> clazz, HttpInputMessage message)}}. If you now have an implementation fixing generics to {{Object}} to be as general as possible you can call {{canRead}} with a {{Foo.class}} but then in turn not {{read}} with {{Foo.class}} as it is not compatible to {{Class<Object>}}.",,;27/Jan/10 7:23 PM;arjen.poutsma;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-01-27 19:24:05.889,2430,true,issuemaster(issuemaster),,,,0|i00xtb:,5523,6800,,,,,,27/Jan/10 7:24 PM;arjen.poutsma;I've changed the canRead/canWrite signatures to Class<?> instead of Class<? extends T>.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11437|https://github.com/spring-projects/spring-framework/issues/11437]. ,,,,,,,,,,,,,,,,,,,,,,
Jetty 7 doesn't like ShallowEtagHeaderFilter,SPR-6759,29795,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,bjornharvold,bjornharvold,24/Jan/10 2:51 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,26/Jan/10 11:04 PM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"When I use the etag filter with jetty 7 I get the following exception for all my static content:

WARN::/js/global.js
java.lang.IllegalStateException: NO CONTENT
at org.eclipse.jetty.http.HttpGenerator.addContent(HttpGenerator.java:154)
at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:153)
at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:97)
at org.springframework.util.FileCopyUtils.copy(FileCopyUtils.java:144)
at org.springframework.web.filter.ShallowEtagHeaderFilter.doFilterInternal(ShallowEtagHeaderFilter.java:76)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)",,;26/Jan/10 11:02 PM;arjen.poutsma;3000,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-01-26 23:04:39.565,8905,true,issuemaster(issuemaster),,Jetty -> 7,,0|i016gv:,6925,7646,,,,,Mac OS X JVM -> 1.6,"26/Jan/10 11:04 PM;arjen.poutsma;It seems like Jetty has its own support for ETags on static content, it sets a response status code of 304 (Not Modified) as a result. Furthermore, it does not allow any writing to the response when this status code is set, throwing the IllegalStateException

I've added an isEligibleForEtag method, which checks if the response status code  is in the 2xx range, and only creates an Etag when it is. Furthermore, we only copy data to the response stream when there actually is content, so the IllegalStateException should not occur anymore.

I've tested this solution with Jetty 7.0.1, and it seems to work fine.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11425|https://github.com/spring-projects/spring-framework/issues/11425]. ,,,,,,,,,,,,,,,,,,,,,,
RestTemplate throws IllegalArgumentException when HTTP status is not in the HttpStatus enum ,SPR-6752,29783,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,jmills,jmills,22/Jan/10 3:04 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,23/Jan/12 5:33 AM,3.0 GA,,,,,,,3.0.1,3.1.1,,,,Web,,,,0,,,,,,,,"Using RestTemplate to connect to a server that occasionally throws HTTP Status of 420, I am getting IllegalArgumentExceptions when accessing the HttpStatus object in my implementation of the ResponseErrorHandler interface.  When I removed that, and started pulling the status from the Headers directly, RestTemplate started throwing errors due to the logger.warn call in RestTemplate.handleResponseError().  I've gotten around this by not using the HttpStatus enum (getting status from the HttpHeaders directly) and by turning up the log level for RestTemplate to ERROR.  Shouldn't this support any HTTP status value?",,;17/Feb/10 9:15 PM;arjen.poutsma;9960,,,,,,,,,0,9960,,,0,9960,,,,,,,,SPR-9406,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-02-17 21:17:24.138,8908,true,issuemaster(issuemaster),,Standalone,,0|i016cf:,6905,7631,,,,,Sun JVM -> 1.6,"17/Feb/10 9:17 PM;arjen.poutsma;I've updated the HttpStatus enum with all codes found in the offical IANA status code registry (http://www.iana.org/assignments/http-status-codes), and also included deprecated codes from earlier WebDAV specs, such as the 420 status you ran into.","22/Jan/12 3:21 PM;wwadge;Hi,

I think this bug should be reopened for there is no way to manually get the raw code. I'm currently running into the same problem due to receiving status 308 (this comes from google's document list api: http://code.google.com/apis/documents/docs/3.0/developers_guide_protocol.html).

Just exposing the raw statusline/status code should be sufficient.","23/Jan/12 5:33 AM;arjen.poutsma;I've added both the missing status codes in the enum, as well as a getRawStatusCode() method to ClientHttpResponse that returns an int.","17/Apr/12 3:34 AM;harish;Hi,
  I think we should reconsider limiting HTTP status codes to only the ones that have associated messages. All 1xx,2xx,3xx,4xx,5xx are legal and valid response codes. RestTempllate should treat them as legal and not throw IllegalArgumentException or ignore message body when any of them are passed. Both code and body should be preserved and passed to caller as such. That would help services and clients make use of flexibility provided by HTTP specifications in using existing status codes and adding their own if no suitable status exists for their needs.","14/May/12 5:44 AM;cbeams;Harish,

Since this issue is resolved, your last comment will probably be ignored.  If you wish, you can open a new JIRA issue for allowing user-defined status codes with RestTemplate.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11418|https://github.com/spring-projects/spring-framework/issues/11418]. ,,,,,,,,,,,,,,,,,,
Document Spring MVC exception -> HTTP status code mappings,SPR-6728,29744,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,kdonald,kdonald,20/Jan/10 4:44 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,28/Mar/10 9:28 PM,3.0 GA,,,,,,,3.0.2,,,,,[Documentation],,,,0,,,,,,,,"There are a number of ""built-in"" cases where an exception thrown by Spring MVC is mapped to a specific HTTP status code.  For example, with @RequestBody, when a HttpMessageConverter does not support a specific content type, a HttpMediaTypeNotSupportedException is thrown that results in a Status Code of 415 being sent to the client.  I could not figure out what exactly was trigger this 415 response from the documentation, and had to turn on the debugger to verify which exception was being thrown and where the exception->code mapping was occuring.

As a user, I would find it useful to have a table in the documentation that explains the mappings between Spring MVC exceptions and HTTP status codes.",,;28/Mar/10 9:28 PM;arjen.poutsma;1440,,,,,,,,,0,1440,,,0,1440,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:07.364,15774,true,issuemaster(issuemaster),,,,0|i01gf3:,8537,250,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11394|https://github.com/spring-projects/spring-framework/issues/11394]. ,,,,,,,,,,,,,,,,,,,,,,,
"@ResponseBody throws HttpMediaTypeNotAcceptableException if client accepts ""*/*""",SPR-6686,29647,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,sfeier,sfeier,13/Jan/10 3:55 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,14/Jan/10 8:24 PM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"It seems an old bug has cropped up again, see SPR-6214

{code:title=AbstractHttpMessageConverter.java|borderStyle=solid}
protected boolean isSupported(MediaType mediaType) {
	if (mediaType == null) {
		return true;
	}
	for (MediaType supportedMediaType : getSupportedMediaTypes()) {
		if (supportedMediaType.includes(mediaType)) {
			return true;
		}
	}
	return false;
}
{code}

I think the check should be reversed:

*{{if (mediaType.includes(supportedMediaType)) ....}}*",,;14/Jan/10 8:24 PM;arjen.poutsma;16140,,,,,,,,,0,16140,,,0,16140,,,,,,,,,,,SPR-6214,,,,,,,,,,,,,,,,9936000,,,,,2010-01-14 20:24:15.318,8938,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i0167z:,6885,7620,,,,,Sun JVM -> 1.6,14/Jan/10 8:24 PM;arjen.poutsma;Fixed. Thanks for spotting this!,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11352|https://github.com/spring-projects/spring-framework/issues/11352]. ,,,,,,,,,,,,,,,,,,,,,,
Request mapping incorrectly receiving all dispatches for a controller,SPR-6649,29549,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,sandrews,sandrews,06/Jan/10 7:05 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,25/Jan/10 8:47 PM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"In a controller I have a request mapping with the value ""/"" alongside other mappings that begin with a template variable.  All requests dispatched to this controller are mapped to the ""/"" method even if they match the pattern for another mapping.  Other controllers are not affected, only mappings within the same controller.

A test case is attached.",,;25/Jan/10 8:47 PM;arjen.poutsma;5100,,,,,,,,,0,5100,,,0,5100,,,,,,,,,,,,,,06/Jan/10 7:06 AM;sandrews;testcase.diff;https://jira.spring.io/secure/attachment/16072/testcase.diff,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:04.148,8954,true,issuemaster(issuemaster),,,,0|i016hb:,6927,7648,,,,,,06/Jan/10 7:06 AM;sandrews;Failing test case,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11315|https://github.com/spring-projects/spring-framework/issues/11315]. ,,,,,,,,,,,,,,,,,,,,,,
PathVariable does not work properly after updated to 3.0 GA,SPR-6640,29519,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Critical,Fixed,arjen.poutsma,o__jedy__o,o__jedy__o,05/Jan/10 12:18 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,10/Jan/10 9:27 PM,3.0 GA,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"Controller:

@Controller
@RequestMapping(""/*/menu/**"")
public class MenuTreeController {

	@RequestMapping(""type/{code}"")
	public ModelAndView getFirstLevelFunctionNodes(@PathVariable(""code"") String code) {

        }
}

I get following error for url like localhost:8080/book/menu/type/M5

org.springframework.web.bind.annotation.support.HandlerMethodInvocationException: Failed to invoke handler method [public org.springframework.web.servlet.ModelAndView com.abc.MenuTreeController.getFirstLevelFunctionNodes(java.lang.String)]; nested exception is java.lang.IllegalStateException: Could not find @PathVariable [code] in @RequestMapping
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:171)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:414)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:402)


I works for me, before. Can you guys help me to solve this problem, thanks.
btw, problem seems to be in AntPathStringMatcher.",,;10/Jan/10 9:27 PM;arjen.poutsma;2040,,,,,,,,,0,2040,,,0,2040,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:03.978,8957,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i016j3:,6935,7654,,,,,Sun JVM -> 1.6,"05/Jan/10 12:23 AM;o__jedy__o;seems the code is a key word here, so here use ""var"" instead of ""code"", the method in controller is like the following:

@RequestMapping(""type/{var}"")
public ModelAndView getFirstLevelFunctionNodes(@PathVariable(""var"") String var) {

}","05/Jan/10 12:27 AM;o__jedy__o;the requestmapping on the top of the controller is: @RequestMapping(""/*/menu/**"")","05/Jan/10 12:38 AM;o__jedy__o;Sorry, I just post issue by jira first time, don't know how to quote code before, ;) 
the code is the following:
{code}
@RequestMapping(""/*/menu/**"")
public class MenuTreeController {

	@RequestMapping(""type/{var}"")
	public ModelAndView getFirstLevelFunctionNodes(@PathVariable(""var"") String var) {

        }
}
{code}",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11306|https://github.com/spring-projects/spring-framework/issues/11306]. ,,,,,,,,,,,,,,,,,,,,
Add human-readable descriptions for statuc codes in HttpStatus,SPR-6614,29407,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,skaffman,skaffman,25/Dec/09 7:39 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,29/Oct/10 3:56 AM,3.0 GA,,,,,,,3.1 M1,,,,,Web,,,,0,,,,,,,,"I'd like to see the values defined in the org.springframework.http.HttpStatus enum be extended to include human-readable descriptions of each code, as defined in the HTTP RFC. These could be retrieved using a getStatusDescription() method.

This is already implemented in Commons HttpClient (see http://hc.apache.org/httpclient-3.x/apidocs/org/apache/commons/httpclient/HttpStatus.html#getStatusText%28int%29), and it would good to see it in Spring also.",,;29/Oct/10 3:56 AM;arjen.poutsma;1320,,,,,,,,,0,1320,,,0,1320,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:39:03.157,12913,true,issuemaster(issuemaster),,,,0|i00pqf:,4214,406,,,,,,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11280|https://github.com/spring-projects/spring-framework/issues/11280]. ,,,,,,,,,,,,,,,,,,,,,,,
MarshallingView auto detect model with Jaxb2Marshaller chooses the wrong object,SPR-6577,29301,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,scottyfred,scottyfred,17/Dec/09 5:55 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,26/Jan/10 8:53 PM,3.0 GA,,,,,,,3.0.1,,,,,OXM,Web,,,0,,,,,,,,"When using MarshallingView with a Jaxb2Marshaller and more than one object in the model has JAXB annotations on it, automatic detection of the appropriate object in the model does not work as expected. 

Using this example MVC RESTful service:

Request and Response classes:

{code}
@XmlRootElement(name = ""request"")
public class HelloRequest {
  private String name;
  private String title;
  // getters and setters
}

@XmlRootElement(name = ""response"")
public class HelloResponse {
  private String message;
  // getters and setters
}
{code}

Controller: 
{code}
@Controller
@RequestMapping(""/Hello"")
public class HelloController {
  @RequestMapping(value = ""/greet"", method = RequestMethod.GET)
  public HelloResponse greetGet(HelloRequest request) {
    String message = ""Hello, "" + request.getTitle() + "" "" + request.getName();
    return new HelloResponse(message);
  }
}
{code}

-servlet.xml

{code}
<beans xmlns=...>
  <bean class=""org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping""/>
  <bean class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter""/>

  <bean class=""org.springframework.web.servlet.view.ContentNegotiatingViewResolver"">
    <property name=""mediaTypes"">
      <map><entry key=""xml"" value=""application/xml""/></map>
    </property>
    <property name=""viewResolvers"">
      <list>
        <bean class=""org.springframework.web.servlet.view.ContentTypeViewResolver"" p:order=""1"" p:view-ref=""xmlView""/>
      </list>
    </property>
    <property name=""order"" value=""0""/>
  </bean>

  <bean id=""xmlView"" class=""org.springframework.web.servlet.view.xml.MarshallingView"">
    <property name=""marshaller"" ref=""marshaller""/>
  </bean>

  <oxm:jaxb2-marshaller id=""marshaller"">
    <oxm:class-to-be-bound name=""com.test.domain.HelloResponse""/>
  </oxm:jaxb2-marshaller>

  <bean name=""helloMvc"" class=""com.test.hello.HelloController""/>
</beans>
{code}

In this scenario, the Controller simply returns a response object. The model is automatically generated, and includes both the request and response objects (along with a few other objects). The model is passed to the MarshallingView, which tries to detect the appropriate model object for rendering the view (since no modelKey property was set on the MarshallingView). MarshallingView calls the supports() method of the configured Marshaller with each object in the model until supports() returns true. The detected object is then passed to the Marshaller for marshalling.

When MarshallingView is used with Jaxb2Marshaller this causes a problem. Jaxb2Marshaller.supports(Class<?> c) will return true for any type that has a JAXB @XmlRootElement annotation on it, even if that Marshaller is not configured to support that class. In this scenario, MarshallingView encounters the request object in the model first and passes it to Jaxb2Marshaller.supports(), which returns true because the request object is annotated with @XmlRootElement. MarshallingView then passes the request object to Jaxb2Marshaller.marshal(). This call fails because the Marshaller is not configured to handle HelloRequest objects:

{code}org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is
 javax.xml.bind.JAXBException: class com.test.domain.HelloRequest nor any of its super class is known to this context.
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:580)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(Jaxb2Marshaller.java:412)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(Jaxb2Marshaller.java:395)
	at org.springframework.web.servlet.view.xml.MarshallingView.renderMergedOutputModel(MarshallingView.java:103)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:798)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:647)
	... 37 more
Caused by: javax.xml.bind.JAXBException: class com.test.domain.HelloRequest nor any of its super class is known to this context.
	at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.getBeanInfo(JAXBContextImpl.java:554)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:470)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:314)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:243)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(Jaxb2Marshaller.java:408)
	... 44 more
{code}

If the Jaxb2Marshaller were configured to support HelloRequest objects, then this exception would not be thrown but the request object would incorrectly be marshalled to the output view instead of the response object.  

To fix this, either the @XmlRootElement must be removed from the HelloRequest class, or the modelKey property must be set on the MarshallingView (to ""helloResponse"" in this case) to override automatic detection of the appropriate model object. Neither of these is a good solution. 
   * The HelloRequest class does not need the @XmlRootElement annotation on it for this example, but in the real-world scenario this class is also used for other POST requests with the @RequestBody annotation. 
   * Setting the modelKey property on the view would require a unique view bean to match each response object, since the name of the response object class is used to generate the model key. 

",,;26/Jan/10 8:52 PM;arjen.poutsma;6900,,,,,,,,,0,6900,,,0,6900,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-01-26 20:53:30.856,15810,true,issuemaster(issuemaster),,Standalone,,0|i016h3:,6926,7647,,,,,Sun JVM -> 1.6,"17/Dec/09 6:12 AM;scottyfred;It seems that the Jaxb2Marshaller.supports(Class clazz) method is too greedy for this scenario. I tried extending Jaxb2Marshaller and overriding the supports() method to eliminate the ""JAXBElement.class.isAssignableFrom(clazz)"" and ""AnnotationUtils.findAnnotation(clazz, XmlRootElement.class)"" checks, but that was not possible because the contextPath and classesToBeBound fields of the class are private. 

Would it make sense to add a property to Jaxb2Marshaller so it could be configured to only support classes that are configured through the contextPath or classesToBeBound property? 

Otherwise, it seems like there would need to be changes to how the default model is created or how MarshallingView.locateToBeMarshalled() does its auto-detection. ","26/Jan/10 8:53 PM;arjen.poutsma;I've revised the supports() method to be more restrictive. It now only supports classes either in the context path or explicitly supported.

I've also added getters for context path and classesToBeBound, so that you can easily override these methods.",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11243|https://github.com/spring-projects/spring-framework/issues/11243]. ,,,,,,,,,,,,,,,,,,,,,
Document use of ControllerClassNameHandlerMapping with Spring MVC @Controllers,SPR-6533,29158,,Task,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,kdonald,hikage,hikage,07/Dec/09 6:35 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,26/Mar/10 4:51 AM,3.0 RC3,,,,,,,3.0.2,,,,,[Documentation],,,,0,,,,,,,,"Using the convention forcing controllers to implement the Controller interface or extend MultiActionController.

It would be interesting to have a way to use the Convention over Configuration with annotated controllers and thus have more flexibility on the method signatures .
",,;26/Mar/10 4:53 AM;olivergierke;2700,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,26/Mar/10 4:48 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/16347/mylyn-context.zip,26/Mar/10 4:43 AM;olivergierke;web-conventions.patch;https://jira.spring.io/secure/attachment/16346/web-conventions.patch,,,,,,,,,,,,9936000,,,,,2009-12-09 06:46:11.726,7354,true,issuemaster(issuemaster),,,,0|i01gkf:,8561,268,,,,,,09/Dec/09 6:46 AM;kdonald;Can you clarify what conventions you mean?,"14/Dec/09 1:43 AM;hikage;In Spring 2.0.x/2.5.x, you have the ControllerClassNameHandlerMapping that 

for:

{code}
class SimpleController implements Controller {

ModelAndView 	handleRequest(HttpServletRequest request, HttpServletResponse response) {

}
}
{code}

will generate the /simple* mapping.

and for :

{code}
class MultiController extends MultiActionController {

ModelAndView 	methodOne (HttpServletRequest request, HttpServletResponse response) {

}

ModelAndView 	methodeTwo (HttpServletRequest request, HttpServletResponse response) {

}

}
{code}

will generate the /multi/* mapping. The MultiController itself will dispatch the /multi/methodOne.do to the methodeOne method, and the /multi/methodeTwo.do to the methodTwo method.

With Spring 3.0, there are some weak point in this solution:

* It has been said that the hierarchy of controller would no longer evolved. Only annotation API will be improved.
* Extending the MultiActionController or implementing Controller does not give us the flexible method signature (http://static.springsource.org/spring/docs/2.5.6/reference/mvc.html#mvc-ann-requestmapping-arguments)
* Annotation API give the @RequestMapping possibility, but this one is too flexible. We want to be able to know the controller to be watch directly from the URL.



It will be interreting to be able a controller like this :

{code}
@Controller
class MultiController  {

/**
* Match /multi/methodOne.do
**/
String 	methodOne (String @RequestParam(""param"") id, Map model) {
// using param, add something to model and returning the view name
}


/**
* Match /multi/methodTwo.do
**/
void methodeTwo (HttpServletRequest request, PrintWriter out) {
// using request, and writing directly to the stream

}

/**
* New convention proposition to replace 'Controller' interface mapping: _ControllerName -> /multi.do
**/
ModelAndView _MultiController (){

return new ModelAndView();
}  

}

{code}
","14/Dec/09 5:25 AM;kdonald;ControllerClassNameMapping conventions apply to @Controllers as well.  You can do your methodOne and methodTwo examples, since Spring 2.5 even.","14/Dec/09 7:12 PM;hikage;Ok, the mapping work with ControllerClassNameMapping : a  @Controller MultiController  (that does not implement Controller or extends MultiActionController)  will be mapped to /multi/*.

But, there is no HandlerAdapter that can process these controller. 

The default handler Adapter[SimpleControllerHandlerAdapter|http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html], need the controller to implement the Controller interface. 

The [AnnotationMethodHandlerAdapter|http://static.springsource.org/spring/docs/3.0.x/javadoc-api/] work with @Controller, but use RequestMapping metadata to resolve the method.

It will be interessting to add a ""Convention based"" of the  AnnotationMethodHandlerAdapter, that use the method name in place of the RequestMapping data, to resolve the method to use.

The offending code is in the class ServletHandlerMethodResolver, innerclass of AnnotationMethodHandlerMapping :

Line 407 in Sprnig 2.5.6.SEC01:
{code}
for (Method handlerMethod : getHandlerMethods()) {
				RequestMappingInfo mappingInfo = new RequestMappingInfo();
				RequestMapping mapping = AnnotationUtils.findAnnotation(handlerMethod, RequestMapping.class);
				mappingInfo.paths = mapping.value(); // <- This

{code}

If you replace the {code}mappingInfo.paths = mapping.value(){code} by {mappingInfo.paths = new String[]{handlerMethod.getName()};
The 'method name' convention will be possible in full annotation version.




",15/Dec/09 2:57 AM;kdonald;ControllerClassNameMapping use in conjunction with AnnotationMethodHandlerAdapter should work fine for invoking methods that have been annotated with @RequestMapping but do not specify a path value.  I'd like to close this ticket out if possible.,"15/Dec/09 5:56 PM;hikage;Sorry, this actually works.

However, it could be interesting to document this in the [convention over configuration chapter|http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ch15s10.html#mvc-coc-ccnm] in the documentation.

At this time, only 'Controller' and MultiActionController are introduced in this section.","26/Mar/10 4:11 AM;olivergierke;No yet able to set this in progress, but I'll update the reference docs accordingly by altering the current model to show conventions based on {{@Controller}} based implementations.",26/Mar/10 4:43 AM;olivergierke;Patch rewriting the section on {{ClassNameUrlHandlerMapping}} using {{@Controller}} and {{@RequestMapping}} instead of deprecated {{Controller}} class hierarchy. Also dropped additional info on {{MultiActionController}} handling.,26/Mar/10 4:48 AM;olivergierke;Attached Mylyn context.,26/Mar/10 4:54 AM;olivergierke;Reassigned to Keith for review and applying.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11199|https://github.com/spring-projects/spring-framework/issues/11199]. ,,,,,,,,,,,,,
"DateTimeFormatAnnotationFormatterFactory calls String.isEmpty(), which exists only in JDK1.6+",SPR-6529,29147,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,martyjones,martyjones,07/Dec/09 12:08 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,07/Dec/09 12:41 AM,3.0 RC3,,,,,,,3.0 GA,,,,,Web,,,,0,,,,,,,,"This issue has already been raised (SPR-6395) but was closed as a duplicate and was marked as fixed in RC3.  I looked at the source and as you can see from this snippet that the isEmpty call is still there.

{code:title=DateTimeFormatAnnotationFormatterFactory.java|borderStyle=solid}
private DateTimeFormatter configureDateTimeFormatterFrom(DateTimeFormat annotation) {
	if (!annotation.pattern().isEmpty()) {
			return forPattern(annotation.pattern());
	}
	else if (annotation.iso() != ISO.NONE) {
		return forIso(annotation.iso());
	}
	else {
		return forStyle(annotation.style());
	}
}
{code}",,;07/Dec/09 12:41 AM;arjen.poutsma;480,,,,,,,,,0,480,,,0,480,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-12-07 00:41:55.565,4078,true,issuemaster(issuemaster),,IBM WebSphere -> 6.1,,0|i00pwv:,4243,5542,,,,,Sun JVM -> 1.5,"07/Dec/09 12:41 AM;arjen.poutsma;This should really be fixed now, also in NumberFormatAnnotationFormatFactory.","07/Dec/09 1:42 AM;martyjones;Arjen,

Do you know when 3.0 GA is planning on being released?",14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11195|https://github.com/spring-projects/spring-framework/issues/11195]. ,,,,,,,,,,,,,,,,,,,,,
PathVariables of type double,SPR-6528,29144,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,lyonanderson,lyonanderson,06/Dec/09 9:58 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,07/Dec/09 12:29 AM,3.0 M4,,,,,,,3.0 GA,,,,,Web,,,,0,,,,,,,,"Take the following REST endpoint:

{code} 
@RequestMapping(""/lat/{latitude}/long/{longitude}"")
public void testLatLong(@PathVariable Double latitude, @PathVariable Double longitude) {
	System.out.println(""Latitude = "" + latitude);
	System.out.println(""Longitude = "" + longitude);
}
{code} 

If you hit this with the URL

{noformat}
   /lat/123/long/456 
{noformat}

However, if the URL contains doubles with a decimal place e.g.:

{noformat}
/lat/2.3/long/445
{noformat}

The endpoint is not longer hit, i.e. we get a 404.

Interestingly, if we change the type of the PathVariables to String:

{code} 
@RequestMapping(""/lat/{latitude}/long/{longitude}"")
public void testLatLong(@PathVariable String latitude, @PathVariable String longitude) {
	System.out.println(""Latitude = "" + latitude);
	System.out.println(""Longitude = "" + longitude);
}
{code} 

It will not work when latitude or longitude contains a fullstop. However, a comma will work instead of a fullstop in this case.

",,;07/Dec/09 12:25 AM;arjen.poutsma;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,SPR-6518,,,,,,,,,,,,,,,,9936000,,,,,2009-12-07 00:29:51.817,4079,true,issuemaster(issuemaster),,,,0|i00px3:,4244,5543,,,,,Sun JVM -> 1.6,"06/Dec/09 9:59 PM;lyonanderson;This issue does relate to SPR-5778, which is still open.","07/Dec/09 12:29 AM;arjen.poutsma;This should be fixed now, as part of the fix for SPR-6482. Can you try a upcoming snapshot and see if it works for you?

BTW: SPR-5778 is not open, but closed, with a working workaround.",10/Dec/09 8:32 PM;lyonanderson;This is now fixed in the latest nightly build.,14/Jan/19 8:39 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11194|https://github.com/spring-projects/spring-framework/issues/11194]. ,,,,,,,,,,,,,,,,,,,,
Broken @RequestMapping inheritance,SPR-6502,29089,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,splatch,splatch,02/Dec/09 9:48 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,07/Dec/09 2:45 AM,3.0 RC3,,,,,,,3.0 GA,,,,,Web,,,,0,,,,,,,,"After switch from Spring 3.0.0 RC1 to Spring 3.0.0 RC3 my controlers stop working. Spring says:
{code}No adapter for handler [org.code_house.spring3.web.UserControllerImpl@5a7691c0]: Does your handler implement a supported interface like Controller?{code}

Test application (war, jar with sources) are available in Maven repository:
http://repository.code-house.org/content/repositories/code-house.internal.snapshot/org/code-house/spring3/test/1.0.0.SNAPSHOT/

Controller code:
{code}package org.code_house.spring3.web;

import java.util.List;

import org.code_house.spring3.api.UserController;
import org.code_house.spring3.dao.api.UserDAO;
import org.code_house.spring3.domain.Group;
import org.code_house.spring3.domain.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping(""/users"")
public class UserControllerImpl extends GenericControllerImpl<User, Integer>
    implements UserController {

    private UserDAO daoImpl;

    public List<Group> listAssigns() {
        return daoImpl.listAssigns();
    }

    public boolean assign(@PathVariable Integer number) {
        daoImpl.assign(number);
        return Boolean.TRUE;
    }

    @Autowired
    public void setDaoImpl(UserDAO daoImpl) {
        setDao(daoImpl);
        this.daoImpl = daoImpl;
    }
}
{code}",,;07/Dec/09 2:44 AM;arjen.poutsma;9120,,,,,,,,,0,9120,,,0,9120,,,,,,,,,,,SPR-6206,,,07/Dec/09 1:23 AM;splatch;spring.log;https://jira.spring.io/secure/attachment/15986/spring.log,,,,,,,,,,,,,9936000,,,,,2009-12-07 00:58:15.156,4088,true,issuemaster(issuemaster),,Jetty -> 6.1,,0|i00pz3:,4253,5552,,,,,Sun JVM -> 1.6,"07/Dec/09 12:58 AM;arjen.poutsma;Can you please explain what HTTP request path you tried, and what method you expect to be invoked?

I'm guessing it's /users/assign/123 or something, and the expected method is assign, but it's better to be sure.","07/Dec/09 1:07 AM;arjen.poutsma;Also, it would help if you could include the log (with DEBUG level enabled). It shows me what @Controller methods are considered, which pattern matches are executed, etc.","07/Dec/09 1:07 AM;splatch;Yes, I use url:
{code}http://localhost:8888/server/rest/users/assign/{code}

But even first URL is not correctly handled by RC3.

URL below is broken due inconsistent parameter name in concrete class:
{code}http://localhost:8888/server/rest/users/assign/1{code}",07/Dec/09 1:23 AM;splatch;Log file.,"07/Dec/09 1:24 AM;splatch;I created SVN repository with this application. You can easily download all source code and run it using maven from:
http://svn.code-house.org/spring3/trunk/",07/Dec/09 1:46 AM;arjen.poutsma;I believe this functionality broke as part of fixing SPR-6206.,07/Dec/09 2:45 AM;arjen.poutsma;This should be fixed now. Could you try a recent snapshot (as of tonight)?,"07/Dec/09 2:54 AM;arjen.poutsma;One thing to note is that I needed to change 

{code}
@RequestMapping(value = ""/assign/"")
{code}

to 

{code}
@RequestMapping(value = ""/assign"")
{code}

(Note the missing slash)
in UserController. After that, your code works for me.

",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11168|https://github.com/spring-projects/spring-framework/issues/11168]. ,,,,,,,,,,,,,,,
"@RequestMapping handled incorrectly when value contains ""."" (dot) character",SPR-6482,29049,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,arjen.poutsma,littleli,littleli,01/Dec/09 2:15 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,11/Jul/11 12:51 AM,3.0 RC3,,,,,,,3.0 GA,,,,,Web,,,,1,,,,,,,,"At the moment in my code exist method with such signature:

{code:java}
@RequestMapping(value = ""/projects/{filter}/{order}-{direction}"", method = RequestMethod.GET)
public String filteredProjectListing(@PathVariable(""filter"") String filter, @PathVariable(""order"") String order,
            @PathVariable(""direction"") String direction, ModelMap model) {
 ...
}
{code}

order is String variable containing ognl-like expresssion ie. ""raging.result"" (which I later use for BeanComparator) but this mapping is in version RC3 is not found, which is different behaviour from RC2 where there is no such problem.

Log message with example of given fault result is:

{noformat}
2009-12-01 16:38:02,459 WARN [org.springframework.web.servlet.PageNotFound] - <No mapping found for HTTP request with URI [/Example/projects/all/rate.result-asc.html] in DispatcherServlet with name 'Example'>
{noformat}

There is no problem with handling path which doesn't contain more '.' (dot) characters, so this can probably help you with analysis of the problem. ",,;06/Dec/09 11:59 PM;arjen.poutsma;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,SPR-6280,,,06/Dec/09 11:39 AM;sandrews;UriTemplateServletAnnotationControllerTests.java.diff;https://jira.spring.io/secure/attachment/15985/UriTemplateServletAnnotationControllerTests.java.diff,,,,,,,,,,,,,9936000,,,,,2009-12-01 23:48:52.862,9003,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i0132n:,6375,7422,,,,,Sun JVM -> 1.6,"01/Dec/09 11:48 PM;grzegorzborkowski;We have the same problem. After switching to RC3, some code stopped working, throwing ""no mapping found for HTTP request"".","06/Dec/09 11:39 AM;sandrews;Unit test for UriTemplateServletAnnotationControllerTests.java that demonstrates this issue.

Changing the mapping to include an explicit regex allows the test to path, but is not ideal.

For example:
@RequestMapping(""/hotels/{hotel:.*}/bookings"")","07/Dec/09 12:00 AM;arjen.poutsma;This regression was due to a matching change made as fix for SPR-6280. I've reverted that behavior, so things should work now. 

Could you please try a upcoming snapshot  and see if it is fixed?","07/Dec/09 1:25 AM;lyonanderson;Excellent, will try tonight's build tomorrow.",10/Dec/09 8:31 PM;lyonanderson;That worked. Thanks,29/Jan/10 9:39 AM;kirkdude;test,"09/Jul/11 1:10 AM;christanto;The issue still happens in 3.0.5.
""abc.xyz"" will be returned as ""abc"".",09/Jul/11 1:16 AM;christanto;Sorry I think you can close this as this issue is actually reported in SPR-6164.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11148|https://github.com/spring-projects/spring-framework/issues/11148]. ,,,,,,,,,,,,,,,
Typo in usage scenario diagram,SPR-6471,29013,,Task,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Complete,juergen.hoeller,zathomas,zathomas,29/Nov/09 6:31 AM,15/Jan/19 1:14 AM,10/May/19 2:36 AM,22/Sep/15 7:08 PM,3.0 M1,3.0 M2,3.0 M3,3.0 M4,3.0 RC1,3.0 RC2,,,,,,,[Documentation],,,,0,,,,,,,,"http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/images/overview-full.png

Diagram reads ""Dymaic Binding to Domain Model,"" should read ""Dynamic Binding to Domain Model"" ",,;26/Mar/10 5:07 AM;olivergierke;300,,,,,,,,0,0,300,"9,223,372,036,854,775,807%",0,0,300,,,,,,,,,,,,,,26/Mar/10 5:05 AM;olivergierke;graphics.patch;https://jira.spring.io/secure/attachment/16348/graphics.patch,26/Mar/10 5:05 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/16349/mylyn-context.zip,,,,,,,,,,,,9936000,,,,,2010-03-26 05:05:24.197,15839,true,issuemaster(issuemaster),,,,0|i01gkn:,8562,247,,,,,,26/Mar/10 5:05 AM;olivergierke;Attached patch to fix the issue.,26/Mar/10 5:07 AM;olivergierke;Forward to Jürgen for review and applying the patch.,22/Oct/13 3:05 PM;bparry02;This issue was resolved in [SPR-7715] with [this commit|https://github.com/spring-projects/spring-framework/commit/b5baa69f5d4bc4cf761eb118a0e629e19f6d3914].,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11137|https://github.com/spring-projects/spring-framework/issues/11137]. ,,,,,,,,,,,,,,,,,,,,
Make filterModel() in MappingJacksonJsonView more lenient,SPR-6470,29012,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,29/Nov/09 1:10 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,29/Nov/09 8:29 PM,3.0 RC2,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,"{{MappingJacksonJsonView}} has a filter callback used to respect {{BindingResult}} configuration applied to the model. It returns a {{Map<String, Object>}} and the result of the filtering is directly passed to the underlying {{ObjectMapper}}.

It would be cool if it was possible to reduce the return type to {{Object}} as it would allow more sophisticated model filtering. E.g. the current implementation *always* hands a map to the Jackson {{ObjectMapper}}, whereas it might be reasonable to just hand a single object to it. With the more lenient signature one could extract the single object from the model and only hand this to Jackson. In case you already return a container object from the list (e.g. to ensure correct list rendering in XML mapping) the JSON result is effectively wrapped twice (the actual container object + the map that results from Spring's model handling)  ",,;29/Nov/09 8:29 PM;arjen.poutsma;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-29 20:29:52.116,2435,true,issuemaster(issuemaster),,,,0|i00xun:,5529,6802,,,,,,"29/Nov/09 1:11 AM;olivergierke;bq. ""In case you already return a container object from the list""

... was meant to be ""In case you already return a container object from the *handler method* ...""",29/Nov/09 8:29 PM;arjen.poutsma;Done. You can also consider to use @ResponseBody for this purpose.,"29/Nov/09 8:54 PM;olivergierke;I took a look at this, but how to use transparent Accept-Header/URL suffix content negotiation then? As I understood it {{@ResponseBody}} is not handled in the {{ContentNegotiatingViewResover}}, right?","29/Nov/09 9:09 PM;arjen.poutsma;Well, it requires a bit more work from your end ;). You can do something like this:

{code}
@Controller
public class MyController {

  @RequestMapping(""/foo"", headers=""accept=text/plain"")
  @ResponseBody
  public String fooTextPlain() {
     return ""Foo Bar"";
  }
  
  @RequestMapping(""/foo"", headers=""accept=application/xml"")
  @ResponseBody
  public Foo fooTextPlain() {
     // Foo.class is annotated with JAXB2 @XmlRootElement
     return new Foo();
  }
}
{code}

It's not as transparent, but gives you a model more similar to JAX-RS, a model which is closer to the metal, so to say. CNVR only gets you so far, but if it works for you, that's great!","29/Nov/09 9:14 PM;olivergierke;I see. The goal I have is to have a single {{@Controller}} for non-human acccess to the applications, thus I'd like to keep the controller free from marshlling information as much as possible. But thanks for the example anyway :).",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11136|https://github.com/spring-projects/spring-framework/issues/11136]. ,,,,,,,,,,,,,,,,,,
Allow ContentNegotiatingViewResolver to be strict ant return a 406 if no view found,SPR-6467,29003,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,28/Nov/09 2:09 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,15/Jan/10 2:40 AM,3.0 RC2,,,,,,,3.0.1,,,,,Web,,,,0,,,,,,,,"Currently {{ContentNegotiatingViewResolver}} acts lenient as it returns {{null}} when it can not resolve any view to indicate that further {{ViewResolvers}} configured shall step in and try to resolve the view.

In cases when {{ContentNegotiatingViewResolver}} is the only resolver configured, not resolving the view should be answered with a {{406 Not Acceptable}} status code. A quick hack I did was to add a property {{beStrict}} to {{CNVR}} an implement an inner class to return the appropriate statuscode. See applied patch.

This solves the problem at a first glance but I think it would be more clean to prevent processing of the request entirely if no valid accept header was set by using the algorithm {{getmediaTypes(..)}} in {{CNVR}}. Currently this method is not public, but I could imagine a {{HandlerInterceptor}} implementation that gets a reference to the {{CNVR}} injected and call to {{getMediaType(..)}} to decide whether to process the request at all.",,;15/Jan/10 2:37 AM;arjen.poutsma;3420,,,,,,,,,0,3420,,,0,3420,,,,,,,,,,,,,,28/Nov/09 2:10 AM;olivergierke;bestrict.patch;https://jira.spring.io/secure/attachment/15972/bestrict.patch,,,,,,,,,,,,,9936000,,,,,2010-01-15 02:40:38.363,2436,true,issuemaster(issuemaster),,,,0|i00xuv:,5530,6803,,,,,,"15/Jan/10 2:40 AM;arjen.poutsma;Applied the patch, thanks!

I did change the name of the property to 'useNotAcceptableStatusCode', though, as 'strict' was a bit vague.

I also agree to the point you made in the second part of the description, but I currently don't see any way of fixing this.	","15/Jan/10 4:05 AM;olivergierke;Thanks a lot, Arjen! I just thought one could provide a {{HandlerInterceptor}} that gets a reference to the {{CNVR}} which is in turn able to determine in advance, whether the current request is supported. Of course this would need a new {{boolean supportsMediaTypeFor(HttpServletRequest request)}} on {{CNVR}}. This way {{preHandle}} could then throw an appropriate exception.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11133|https://github.com/spring-projects/spring-framework/issues/11133]. ,,,,,,,,,,,,,,,,,,,,,
ContentNegotiatingViewResolver can not handle View implementations returning null as content type,SPR-6466,29002,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,28/Nov/09 1:26 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,29/Nov/09 8:10 PM,3.0 RC2,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,The {{View}} interface allows {{getContentType()}} to return {{null}}. But {{View}}s returning {{null}} can not be handled by {{ContentNegotiatingViewResolver}} as it directly pipes the result of the call to {{getContentType()}} to {{MediaType.parseMediaType(..)}} which rejects {{null}} values passed.,,;29/Nov/09 8:10 PM;arjen.poutsma;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-29 20:10:47.526,2437,true,issuemaster(issuemaster),,,,0|i00q13:,4262,5561,,,,,,29/Nov/09 8:10 PM;arjen.poutsma;Should be fixed now,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11132|https://github.com/spring-projects/spring-framework/issues/11132]. ,,,,,,,,,,,,,,,,,,,,,,
MappingJacksonHttpMessageConverter ignores supported media types property,SPR-6386,28795,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,rstoya05-aop,rstoya05-aop,18/Nov/09 2:48 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,27/Nov/09 12:14 AM,3.0 RC2,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,"The MappingJacksonHttpMessageConverter getContentType() method always returns a media type of ""application/json"", which ignores the media types I may have set it up with via setSupportedMediaTypes (e.g. ""application/vnd.stocks+json"").",,;27/Nov/09 12:14 AM;arjen.poutsma;2820,,,,,,,,,0,2820,,,0,2820,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2012-08-22 07:27:33.127,4114,true,issuemaster(issuemaster),,,,0|i00q53:,4280,5579,,,,,,22/Aug/12 7:27 AM;davidbiesack;Still occurs in 3.1.0.RELEASE; see new issue SPR-7905 https://jira.springsource.org/browse/SPR-7905,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11052|https://github.com/spring-projects/spring-framework/issues/11052]. ,,,,,,,,,,,,,,,,,,,,,,
RC2: Issue with RequestMethod.GET differs from M2,SPR-6378,28782,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,kensipe,kensipe,17/Nov/09 3:52 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,24/Nov/09 9:12 PM,3.0 RC2,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,"I have a demo for Spring 3 Web that I've been running for some time... the upgrade to RC2 broke the demo.  The code is listed below.  What we need is details on the order of requestmappings... I thought I saw that earlier this year in the forums, but I can't find it anymore.  Can someone please provide the details on the order of requestmappings... thanks.

The code below (which worked before) now fails for a GET request against the list method or http://localhost:8080/mvc/book/list

I had specified the GET and POST for clarification before on the create methods... after some investigation, I discovered that if I remove the method = RequestMethod.GET on the create method that the app begins to work.  So I can work around this.  What behavior should be expected?

{code}
@Controller
public class BookController {

    @Autowired
    BookDAO dao;

    // http://localhost:8080/mvc/book/list
    @RequestMapping(""list"")
    public List<Book> list() {
        return dao.findAllBooks();
    }

    // http://localhost:8080/mvc/book/book?id=12
    @RequestMapping(""book"")
    public Book book(@RequestParam(required = true) Long id) {

        Book book = dao.getBook(id);
        return book;
    }

    @RequestMapping(method = RequestMethod.GET)
    public Book create() {
        return new Book();

    }

    // http://localhost:8080/mvc/book/create (POST)
    @RequestMapping(method = RequestMethod.POST)
    public String create(@ModelAttribute Book book, BindingResult results) {

        if (book == null)
            return null;

        dao.save(book);

        return ""redirect:list"";
    }
}
{code}",,;24/Nov/09 1:18 AM;arjen.poutsma;4980,;24/Nov/09 8:16 PM;arjen.poutsma;4860,;24/Nov/09 9:12 PM;arjen.poutsma;3300,,,,,,,0,13140,,,0,13140,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-19 21:50:41.096,4115,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00q5b:,4281,5580,,,,,Mac OS X JVM -> 1.6,19/Nov/09 9:50 PM;arjen.poutsma;Added formatting.,"24/Nov/09 12:15 AM;arjen.poutsma;I'm having a hard time duplicating this behavior.

Is there any additional info you can give me, like registered handlermappings and other stuff in your application context? It might be easiest to attach that context as a whole...","24/Nov/09 1:21 AM;arjen.poutsma;Closing as Cannot Reproduce for now, might reopen later when we have more info.","24/Nov/09 3:17 AM;kensipe;I'll include the web.xml and the spring-config.xml... if more information is needed I'll put the whole project up on github.  It would still be nice to know the order of preference for different requestmappings.

springmvc-servlet.xml
{code}
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:aop=""http://www.springframework.org/schema/aop""
       xmlns:context=""http://www.springframework.org/schema/context""
       xmlns:util=""http://www.springframework.org/schema/util""
       xmlns:jee=""http://www.springframework.org/schema/jee""
       xmlns:tx=""http://www.springframework.org/schema/tx""
       xmlns:jms=""http://www.springframework.org/schema/jms""
       xmlns:lang=""http://www.springframework.org/schema/lang""
       xmlns:p=""http://www.springframework.org/schema/p""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd"">

    <context:component-scan base-package=""com.codementor"" />


    <bean id=""urlMapping"" class=""org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"" />
    
    <bean class=""org.springframework.web.servlet.view.InternalResourceViewResolver""
          p:prefix=""/WEB-INF/jsp/""
          p:suffix="".jsp""/>


    <bean id=""entityManagerFactory"" class=""org.springframework.orm.jpa.LocalEntityManagerFactoryBean"" />

    <bean class=""org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor""  />

    <bean id=""transactionManager"" class=""org.springframework.orm.jpa.JpaTransactionManager"">
        <property name=""entityManagerFactory"" ref=""entityManagerFactory"" />
    </bean>

    <tx:annotation-driven />
    
</beans>
{code}

web.xml file
{code}
<web-app version=""2.4""
         xmlns=""http://java.sun.com/xml/ns/j2ee""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee 
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"" >

  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>/mvc/*</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>
      jsp/index.jsp
    </welcome-file>
  </welcome-file-list>

</web-app>
{code}",24/Nov/09 9:12 PM;arjen.poutsma;The problem was the combination of ControllerClassNameHandlerMapping and @RequestMapping. This should be fixed now.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11045|https://github.com/spring-projects/spring-framework/issues/11045]. ,,,,,,,,,,,,,,,,,,
Register sensible default HTTP Message Converters based on what is available in the classpath,SPR-6375,28776,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,kdonald,kdonald,17/Nov/09 7:31 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,29/Nov/09 10:21 PM,3.0 RC2,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,"The new mvc namespace gives us a nice opportunity to add additional sensible defaults.
Proposal:
- Register support for JAXB if Java 6+
- Register support for JiBX if in classpath
- Register support for JSON if Jackson in classpath ",,;29/Nov/09 10:21 PM;arjen.poutsma;6480,,,,,,,,,0,6480,,,0,6480,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-17 22:33:23.523,15866,true,issuemaster(issuemaster),,,,0|i016nj:,6955,7670,,,,,,"17/Nov/09 10:33 PM;arjen.poutsma;I'm not sure about Jibx, but we can detect Jaxb2 for sure.

JAXB2 can also be used on JDK 1.5, so I guess we just have to test for a JAXB2 class, rather than enable it on JDK 1.6 only.","23/Nov/09 7:29 PM;david_syer;I'm not convinced yet, either.  What if my application is working fine with an auto-detected JAXB converter, and then I add Jackson to the classpath?  Suddenly it breaks with no warning?","23/Nov/09 7:37 PM;arjen.poutsma;Jackson and JAXB2 are not mutually exclusive (one is JSON, the other XML), so I don't understand what you mean.","23/Nov/09 9:01 PM;david_syer;I mean that I might be using JAXB in one REST endpoint and then I add another jar file with a JSON endpoint and a transitive dependency on Jackson, and suddenly my old application code breaks at runtime.  Make sense?","23/Nov/09 9:07 PM;arjen.poutsma;No, because we will detect for Jackson and JAXB2 separately, and can include them both if found, i.e. the two are not mutually exclusive.",29/Nov/09 10:21 PM;arjen.poutsma;Done. JAXB2 and Jackson are now detected and their respective message converters are registered automatically. ,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11042|https://github.com/spring-projects/spring-framework/issues/11042]. ,,,,,,,,,,,,,,,,,
Do not require bound classes or context for Jaxb2Marshaller ,SPR-6372,28771,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,17/Nov/09 2:53 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,27/Nov/09 12:34 AM,3.0 RC2,,,,,,,3.0 RC3,,,,,OXM,,,,0,,,,,,,,We should consider removing the requirement for classesToBeBound or contextPath for the Jaxb2Marshaller and make them optional.,,;23/Nov/09 8:45 PM;arjen.poutsma;36120,;27/Nov/09 12:34 AM;arjen.poutsma;29880,,,,,,,,0,66000,,,0,66000,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:54.794,15867,true,issuemaster(issuemaster),,,,0|i03r9z:,21961,18430,,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#11038|https://github.com/spring-projects/spring-framework/issues/11038]. ,,,,,,,,,,,,,,,,,,,,,,,
Spring Expression Language creates systemProperties bean calling System.getProperties() which in enterprise shared containers is locked down,SPR-6308,28601,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,mattgoldspink,mattgoldspink,05/Nov/09 11:29 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,11/Nov/09 2:40 AM,3.0 RC1,,,,,,,3.0 RC2,,,,,Core,,,,0,,,,,,,,"We have a shared hosting environment for all our Tomcat containers in the firm and multiple teams may have webapps in the same Tomcat instance. As such the security policy is setup to disallow access to System.getProperties() as this will return a mutable view of all the system properties and if one application were to manipulate these it may adversely affect other applications in the same container.

We know the workaround for now is to simply drop in a bean named systemProperties but we would prefer a fix on the Spring side for this because it will likely catch all other groups that run a similar model to us. It seams like adding a simple bean which just delegates the call to System.getProperty(""name"") (which is not locked down) would be good enough to do this.",,;11/Nov/09 2:39 AM;arjen.poutsma;9780,,,,,,,,,0,9780,,,0,9780,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-11 02:40:51.363,12666,true,issuemaster(issuemaster),,,,0|i03pdj:,21653,18123,,,,,,"11/Nov/09 2:40 AM;arjen.poutsma;Fixed.

When access to System.getProperties() is denied, we now lazily access system properties via System.getProperty(String). If that is denied too, we log a warning.",11/Nov/09 2:50 AM;mattgoldspink;This looks great. Thanks Arjen.,"12/Nov/09 11:20 AM;sreevaddi;Hi,

http://jira.springframework.org/browse/SPR-6287
I verified my app with spring build 458.
I still see error in my server.log but my app loads up OK.

As suggested by Matt in http://jira.springframework.org/browse/SPR-6308

The only way, I could get rid of the exception is,
by dropping systemProperties and systemEnvironment beans.

Now, my app loads smoothly without any exceptions.

By the way, when is 3.0 RC2 release due ?

Thank you very much.

With Regards
Sree
","07/Mar/13 8:04 PM;nomstradamus;I am acing this issue in Was 7 and Spring 3.1.3 Release . I added the following two properties
 <beans:bean id=""systemProperties"" class=""java.util.HashMap""></beans:bean>
 <beans:bean id=""systemEnvironment"" class=""java.util.HashMap""></bean:bean>
However i still get the following error
Code Base Location:


[3/7/13 17:20:29:365 EST] 0000000b webapp        I com.ibm.ws.webcontainer.webapp.WebApp log SRVE0292I: Servlet Message - [bst-51881#bst.war]:.Initializing Spring FrameworkServlet 'appServlet'
[3/7/13 17:20:29:684 EST] 0000000b SecurityManag W   SECJ0314W: Current Java 2 Security policy reported a potential violation of Java 2 Security Permission. Refer to the InfoCenter for further information.

Permission:

      getenv.* : Access denied (java.lang.RuntimePermission getenv.*)


Code:

     org.springframework.core.env.AbstractEnvironment  in  {file:/opt/httpd/root/apps/ibm7/ccix/xyz.war/WEB-INF/lib/spring-core-3.1.3.RELEASE.jar}



Stack Trace:

java.security.AccessControlException: Access denied (java.lang.RuntimePermission getenv.*)
        at java.security.AccessController.checkPermission(AccessController.java:132)
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
        at com.ibm.ws.security.core.SecurityManager.checkPermission(SecurityManager.java:206)
        at java.lang.System.getenv(System.java:687)
        at org.springframework.core.env.AbstractEnvironment.getSystemEnvironment(AbstractEnvironment.java:345)
        at org.springframework.core.env.StandardEnvironment.customizePropertySources(StandardEnvironment.java:79)
 
","09/Jan/14 4:50 AM;juergen.hoeller;I suppose this is just a warning, not a fatal exception? I suppose it is logging any attempt to call System.getEnv there, even when guarded by a catch clause...

Juergen","09/Jan/14 4:55 AM;juergen.hoeller;Haven't noticed before: Let's continue the discussion at SPR-11297, the follow-up to this one...

Juergen",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10974|https://github.com/spring-projects/spring-framework/issues/10974]. ,,,,,,,,,,,,,,,,,
Add more logging to RestTemplate,SPR-6303,28588,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,tareq,tareq,04/Nov/09 8:33 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,04/Nov/09 11:32 PM,,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"It would be nice to add more logging to RestTemplate. Particularity, logging http status codes would make debugging easier.",,;04/Nov/09 11:32 PM;arjen.poutsma;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-04 23:32:53.389,15894,true,issuemaster(issuemaster),,,,0|i016sf:,6977,7689,,,,,,"04/Nov/09 11:32 PM;arjen.poutsma;Added status code logging on debug level for normal cases, and warning level for errors (4xx & 5xx).",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10969|https://github.com/spring-projects/spring-framework/issues/10969]. ,,,,,,,,,,,,,,,,,,,,,,
Support @RequestHeader on HttpHeaders parameters,SPR-6301,28586,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,tareq,tareq,04/Nov/09 8:23 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,05/Nov/09 1:42 AM,,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,It would be useful to support mapping all request headers to a HttpHeaders instance in a controller method.,,;05/Nov/09 1:42 AM;arjen.poutsma;4200,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:52.71,15896,true,issuemaster(issuemaster),,,,0|i016s7:,6976,7688,,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10967|https://github.com/spring-projects/spring-framework/issues/10967]. ,,,,,,,,,,,,,,,,,,,,,,,
UrlPathHelper is too aggressive decoding URLs ,SPR-6291,28537,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,02/Nov/09 2:01 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,12/Oct/10 5:57 AM,,,,,,,,3.0.5,,,,,Web,,,,1,,,,,,,,"The UrlPathHelper, used by various other MVC components such as DispatcherServlet, is too aggressive when it decoding request URLs.

For instance, it decodes [http://example.com/foo+bar] as [http://example.com/foo bar], while this is not correct according to RFC 2396.",,;08/Nov/09 10:15 PM;arjen.poutsma;30180,;12/Oct/10 5:57 AM;arjen.poutsma;540,,,,,,,,0,30720,,,0,30720,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2010-10-05 08:48:56.094,4134,true,issuemaster(issuemaster),,,,0|i00q9j:,4300,5599,,,,,,"05/Oct/10 8:48 AM;phalas;Hi Arjen,

I'm struggling with UTF-8 within URL and realized there might be problem in UriUtils.decode() method. The problem is that it decodes non-encoded strings. I would say the following test case should pass:

{{assertEquals(""Invalid encoded result"", ""T\u014dky\u014d"", UriUtils.decode(""T\u014dky\u014d"", ENC));}}

Please check the test case:

1) {{UriUtils.encodeHttpUrl(""http://localhost:8080/test/T\u014dky\u014d"", ""UTF-8"")}} gives {{http://localhost:8080/test/T%C5%8Dky%C5%8D}}
2) Paste such an address in the browser (Firefox, Chrome expands it to full UTF-8, IE8 lets it encoded)
3) Pause the app before decoding (in {{UrlPathHelper.decodeRequestString()}})

I can see 'source' (requestURI) to be the full UTF-8 string as I would expect. Then, the UriUtils comes to play and the request URI gets screwed.

BTW, URLDecoder works the expected way: {{java.net.URLDecoder.decode(""http://localhost:8080/test/T\u014dky\u014d"");}}

Of course, I might miss something important... What do you think?
Thank you.
Pavel","05/Oct/10 8:55 AM;phalas;Just to make sure, I'm using Spring 3.0.4.RELEASE.",12/Oct/10 5:57 AM;arjen.poutsma;This should now be fixed.,"23/Mar/11 6:43 AM;grzegorzborkowski;Hi Arjen, I had exactly the same problem as Pavel had. I used Spring 3.0.3, so I upgraded to 3.0.5 to get it fixed, but the problem is still there even in 3.0.5. All URLs containing non-ASCII characters get properly decoded by Tomcat, but then Spring tries to decode them once again with UrlPathHelper.decodeRequestString() and they get scrumbled completely. ",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10957|https://github.com/spring-projects/spring-framework/issues/10957]. ,,,,,,,,,,,,,,,,,,,
PathVariable resolution does not work properly,SPR-6280,28479,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,blaf,blaf,27/Oct/09 9:44 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,23/Nov/09 11:54 PM,3.0 RC1,,,,,,,3.0 RC3,,,,,Web,,,,0,,,,,,,,"For controller 
{code:java}
@Controller
@RequestMapping(""/category"")
public class CategoryController extends AbstractCsController {

    @Autowired
    private ICraftService craftService;

    @RequestMapping(value = {""/{category}/page/{page}"", ""/**/{category}/page/{page}""})
    public String category(@PathVariable String category, @PathVariable int page, Model model) {
        model.addAttribute(""categories"", craftService.findSubcategories(category));
        return ""craft/category"";
    }

    @RequestMapping(value = {""/{category}"", ""/**/{category}""})
    public String category(@PathVariable String category, Model model) {
        return category(category, 1, model);
    }

    @RequestMapping(value = {""""})
    public String category(Model model) {
        return category(1, model);
    }

    @RequestMapping(value = {""/page/{page}""})
    public String category(@PathVariable int page, Model model) {
        return category(null, page, model);
    }

}
{code}
I get following error for url like localhost:8080/context/category/page/5
{noformat}
org.springframework.web.bind.annotation.support.HandlerMethodInvocationException: Failed to invoke handler method [public java.lang.String net.tv.cs.craft.controller.CategoryController.category(int,org.springframework.ui.Model)]; nested exception is java.lang.IllegalStateException: Could not find @PathVariable [page] in @RequestMapping
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:164)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:378)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:366)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:781)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:726)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:636)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:545)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:125)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.springframework.web.filter.ShallowEtagHeaderFilter.doFilterInternal(ShallowEtagHeaderFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)
Caused by: java.lang.IllegalStateException: Could not find @PathVariable [page] in @RequestMapping
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.resolvePathVariable(AnnotationMethodHandlerAdapter.java:660)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolvePathVariable(HandlerMethodInvoker.java:542)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.resolveHandlerArguments(HandlerMethodInvoker.java:282)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:156)
	... 35 more
{noformat}

Problem seems to be in AbstractUrlHandlerMapping.lookupHandler. MAybe in code: 
{code:java}
// Pattern match?
String bestPathMatch = null;
for (String registeredPath : this.handlerMap.keySet()) {
	if (getPathMatcher().match(registeredPath, urlPath) &&
		(bestPathMatch == null || bestPathMatch.length() < registeredPath.length())) {
		bestPathMatch = registeredPath;
	}
}
{code}
After ending this loop the *bestPathMatch* variable has value _/category/\*\*/{category}/_ but it should have _/category/page/{page}_. Because of this code {code:java}Map<String, String> uriTemplateVariables = getPathMatcher().extractUriTemplateVariables(bestPathMatch, urlPath); {code} gives map with {noformat}category -> 5{noformat} entry, but should {noformat}page -> 5{noformat}. Because of the *uriTemplateVariables* doesn't contain the _page_ key it ends with the exception.

I think it is a bug because it resolves method handler correctly but the parameter resolution is not correct.",,;12/Nov/09 10:55 AM;arjen.poutsma;2700,;23/Nov/09 11:53 PM;arjen.poutsma;11100,,,,,,,,0,13800,,,0,13800,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-11-12 11:56:59.597,4138,true,issuemaster(issuemaster),,,,0|i00qaf:,4304,5603,,,,,Sun JVM -> 1.6,"12/Nov/09 11:56 AM;arjen.poutsma;Fixing this will take a while, postponing to 3.0 final.",23/Nov/09 11:54 PM;arjen.poutsma;This should work now. Please try a recent snapshot and see if it works for you.,25/Nov/09 5:38 AM;blaf;is there a maven repository with latest spring 3 snapshots?,"25/Nov/09 6:29 AM;arjen.poutsma;Yes:

{code:xml}
<repository>
    <id>s2-snapshot</id>
    <url>http://repository.springsource.com/maven/bundles/snapshot</url>
    <snapshots>
        <enabled>true</enabled>
    </snapshots>
</repository>
{code}

and then 

{code:xml}
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>org.springframework.web</artifactId>
    <version>3.0.0.BUILD-SNAPSHOT</version>
</dependency>
{code}

etc","27/Nov/09 7:50 AM;blaf;it works, thanks",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10947|https://github.com/spring-projects/spring-framework/issues/10947]. ,,,,,,,,,,,,,,,,,,
Accept header should not be mandatory for properly handling response body.,SPR-6248,28383,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Critical,Fixed,arjen.poutsma,sbtourist,sbtourist,17/Oct/09 7:39 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,26/Oct/09 10:49 PM,3.0 RC1,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"While trying to find suitable HttpMessageConverters for a custom object returned by a RequestMapping-annotated method, AnnotationMethodHandlerAdapter#handleResponseBody(Object, ServletWebRequest) fails because the request doesn't contain any Accept header.

However, the Http rfc states as follows (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html):

""If no Accept header field is present, then it is assumed that the client accepts all media types.""

So, Accept header should not be mandatory: if not present, the response body should be handled whatever its media type.",,;26/Oct/09 10:49 PM;arjen.poutsma;2040,,,,,,,,,0,2040,,,0,2040,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:50.816,4143,true,issuemaster(issuemaster),,Jetty -> 6.1,,0|i00qbj:,4309,5608,,,,,Mac OS X JVM -> 1.5,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10916|https://github.com/spring-projects/spring-framework/issues/10916]. ,,,,,,,,,,,,,,,,,,,,,,,
Multipart Content-Type charset is ignored in CommonsFileUploadSupport.,SPR-6247,28376,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,johnro76,johnro76,16/Oct/09 3:45 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,26/Oct/09 11:42 PM,2.0.9,2.5.6,3.0 M1,3.0 M2,3.0 M3,3.0 M4,3.0 RC1,3.0 RC2,,,,,Web,,,,0,,,,,,,,"value = fileItem.getString in parseFileItems in CommonsFileUploadSupport does not pass the correct encoding

value = fileItem.getString(encoding);
and
value = fileItem.getString();

This uses the encoding of the request (or the default) and does not read the charset from the Content-Type line in the multipart part.

This means you cannot send a multipart POST with different encodings for different parts/parameters.

Patch attached.",,;26/Oct/09 11:42 PM;arjen.poutsma;2940,,,,,,,,,0,2940,,,0,2940,,,,,,,,,,,,,,16/Oct/09 4:28 AM;johnro76;SPR-6247.patch;https://jira.spring.io/secure/attachment/15820/SPR-6247.patch,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:50.801,4144,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qbr:,4310,5609,,,,,Sun JVM -> 1.6,04/Nov/09 7:22 PM;johnro76;Any plan to fix in 2.5?,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10915|https://github.com/spring-projects/spring-framework/issues/10915]. ,,,,,,,,,,,,,,,,,,,,,,
Add namespace support for ErrorHandler on MessageListener containers,SPR-6240,28364,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,15/Oct/09 1:51 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,28/Oct/09 2:54 AM,,,,,,,,3.0 RC2,,,,,JMS,,,,0,,,,,,,,"An ""error-handler"" attribute should be available on the <listener-container/> element in the JMS namespace.

It will provide a reference to any bean implementing the ErrorHandler interface.
",,;28/Oct/09 2:33 AM;mark.fisher;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:50.625,15914,true,issuemaster(issuemaster),,,,0|i04rfz:,27820,22699,,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10908|https://github.com/spring-projects/spring-framework/issues/10908]. ,,,,,,,,,,,,,,,,,,,,,,,
Reintroduce Struts support,SPR-6236,28338,,New Feature,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,13/Oct/09 9:10 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,14/Oct/09 9:53 PM,,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"Many people depend on the struts support that was in Spring 2.5. We should reintroduce it, though in deprecated form.",,;14/Oct/09 9:53 PM;arjen.poutsma;5640,,,,,,,,28800,23160,5640,19%,28800,23160,5640,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:50.471,15915,true,issuemaster(issuemaster),,,,0|i016sv:,6979,7691,,,,,,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10904|https://github.com/spring-projects/spring-framework/issues/10904]. ,,,,,,,,,,,,,,,,,,,,,,,
The PathVariable annotation should provide an option for decoding,SPR-6226,28318,,Improvement,Resolved,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Won't Fix,arjen.poutsma,rstoya05-aop,rstoya05-aop,12/Oct/09 8:23 PM,15/Jan/19 1:13 AM,10/May/19 2:36 AM,13/Oct/09 12:38 AM,3.0 RC1,,,,,,,,,,,,Web,,,,0,,,,,,,,The value that is extracted from the URL requires additional work to have it decoded. It would be nice to have it automatically decoded. ,,;13/Oct/09 12:58 AM;arjen.poutsma;15420,,,,,,,,,0,15420,,,0,15420,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-10-13 00:38:01.777,15922,true,issuemaster(issuemaster),,,,0|i016u7:,6985,7696,,,,,,13/Oct/09 12:38 AM;arjen.poutsma;PathVariable values are decoded by default already.,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10894|https://github.com/spring-projects/spring-framework/issues/10894]. ,,,,,,,,,,,,,,,,,,,,,,
Using @ResponseBody throws HttpMediaTypeNotAcceptableException when it supports writing an acceptable MediaType,SPR-6214,28272,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,ande,ande,09/Oct/09 11:31 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,13/Oct/09 9:46 PM,3.0 RC1,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"AnnotationMethodHandlerAdapter will throw a HttpMediaTypeNotAcceptableException in cases where the registered message converts should be able to support an acceptable representation.

It looks like the problem is in the following method: AnnotationMethodHandlerAdapter$ServletHandlerMethodInvoker.handleResponseBody(...)
The inner-most part of the loop is only successful on this condition:
if (supportedMediaType.includes(acceptedMediaType)) {

If the acceptedMediaType is a wildcard, the condition fails. It seems it should rather be the revers:
if (acceptedMediaType.includes(supportedMediaType)) {

Then the fact that acceptedMediaType is a wildcard will make it potentially match what is supported.

The impact is that most client use a wildcard when Accept header is not explicitly set, and this results in a failure.

Will attach test.",,;13/Oct/09 9:46 PM;arjen.poutsma;600,,,,,,,,7200,6600,600,8%,7200,6600,600,,,,,,,,,,,,,,09/Oct/09 11:33 AM;ande;ResponseBodyExceptionTest.java;https://jira.spring.io/secure/attachment/15790/ResponseBodyExceptionTest.java,,,,,,,,,,,,,9936000,,,,,2009-10-13 21:46:43.053,4150,true,issuemaster(issuemaster),,Tomcat -> 6.0,,0|i00qd3:,4316,5614,,,,,Mac OS X JVM -> 1.6,09/Oct/09 11:33 AM;ande;Attaching test,13/Oct/09 9:46 PM;arjen.poutsma;Fixed. Thanks for spotting this!,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10882|https://github.com/spring-projects/spring-framework/issues/10882]. ,,,,,,,,,,,,,,,,,,,,,
"When looking up methods with @RequestMapping annotation, unannotated bridge methods are included",SPR-6206,28230,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,nwsmith@gmail.com,nwsmith@gmail.com,07/Oct/09 8:31 AM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,13/Oct/09 11:24 PM,3.0 RC1,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"When implementing an generic interface method in a controller, spring mistakenly thinks that the compiler-created bridge method is an annotated request method, causing the following error (from attached test case:)

java.lang.IllegalStateException: Ambiguous handler methods mapped for HTTP path &apos;/method&apos;: {public org.springframework.web.servlet.ModelAndViewAnnotationMethodHandlerAdapterTest$TestControllerImpl.method(AnnotationMethodHandlerAdapterTest$TestEntity), public org.springframework.web.servlet.ModelAndView AnnotationMethodHandlerAdapterTest$TestControllerImpl.method(java.lang.Object)}. If you intend to handle the same path in multiple methods, then factor them out into a dedicated handler class with that path mapped at the type level!

The issue is that with something like the following:

{code}
public interface TestController<T> {
    public ModelAndView method(T object);
}

@Controller
public interface TestControllerImpl<MyEntity> {
    @RequestMapping(""/method"")
    public ModelAndView method(MyEntity object) {
        return new ModelAndView();
    }
}
{code}
the compiler built bridge method is detected as being annotated, causing the ambiguity.  The bug appears to have been committed here:

https://fisheye.springsource.org/rdiff/spring-framework/trunk/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodResolver.java?r1=1665&r2=1737&u&N

When isHandlerMethod was changed to use findAnnotation (which will look through bridge methods and return true if the bridged method is annotated) from isAnnotationPresent on the method itself (which will show the bridged method as not annotated)

I've attached a patch to restore the previous behaviour, as unannotated methods should never show us as matches.",,;13/Oct/09 11:24 PM;arjen.poutsma;1980,,,,,,,,,0,1980,,,0,1980,,,,,,,,,,,,,,07/Oct/09 8:32 AM;nwsmith@gmail.com;AnnotationMethodHandlerError.zip;https://jira.spring.io/secure/attachment/15776/AnnotationMethodHandlerError.zip,07/Oct/09 8:32 AM;nwsmith@gmail.com;SPR6206.patch;https://jira.spring.io/secure/attachment/15777/SPR6206.patch,,,,,,,,,,,,9936000,,,,,2009-10-13 21:52:32.958,4153,true,issuemaster(issuemaster),,Standalone,,0|i00qdr:,4319,5617,,,,,,07/Oct/09 8:32 AM;nwsmith@gmail.com;JUnit test case that shows the bug described.,07/Oct/09 8:32 AM;nwsmith@gmail.com;Patch to correct issue.,13/Oct/09 9:52 PM;arjen.poutsma;Added formatting.,13/Oct/09 11:24 PM;arjen.poutsma;Fixed. Thanks for spotting this!,14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10874|https://github.com/spring-projects/spring-framework/issues/10874]. ,,,,,,,,,,,,,,,,,,,
UriTemplate: Insufficient handling of characters that need to be escaped.,SPR-6188,28170,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,sam.zurcher,sam.zurcher,04/Oct/09 5:10 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,12/Nov/09 11:28 AM,3.0 RC1,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,"The class UriTemplate (using the method expand(..)) has, according to my understanding, problems with URL parameters that contain e.g. German umlauts, or more general, characters that need to be escaped. E.g. the URL http://www.google.com/?q=zürich is not translated at all - which is ok because you could argue that it is the responsibility of the API user to escape the query parameter ('zürich') properly. BUT the URL http://www.google.com/?q=z%C3%BCrich is transformed into http://www.google.com/?q=z%25C3%25BCrich (= the percentage sign is encoded).

Attached you can find a unit test that describes the behavior in detail. Some of the tests fail describing my expectation.",,;12/Nov/09 11:27 AM;arjen.poutsma;23460,,,,,,,,,0,23460,,,0,23460,,,,,,,,,,,,,,04/Oct/09 5:12 PM;sam.zurcher;UriTemplateTest.java;https://jira.spring.io/secure/attachment/15763/UriTemplateTest.java,,,,,,,,,,,,,9936000,,,,,2009-11-12 00:40:21.782,3849,true,issuemaster(issuemaster),,,,0|i00qf3:,4325,5623,,,,,,"12/Nov/09 12:40 AM;juergen.hoeller;Arjen, has this been addressed as part of the recent URI encoding revision already?","12/Nov/09 11:29 AM;arjen.poutsma;This should be fixed now.

I've introduced our own encoding methods in UriUtils, since all those found in the JDK don't work (including URLDecoder and URI).","12/Nov/09 11:41 AM;arjen.poutsma;Also, note that the RestTemplate takes unencoded URI strings as arguments. Thus, if you pass in a URI that's already encoded, it will be encoded again, as in your second example. The reason for this is quite simple: we cannot detect whether a given URI string is encoded or not.

If you don't want the additional encoding, I've added additional methods that takes java.net.URI as arguments. You can simply construct a URI using the UriTemplate, and reuse that.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10856|https://github.com/spring-projects/spring-framework/issues/10856]. ,,,,,,,,,,,,,,,,,,,,
integration-tests should not be included in the packaged distribution,SPR-6183,28161,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,sbrannen,sbrannen,03/Oct/09 9:25 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,13/Oct/09 9:32 PM,3.0 RC1,,,,,,,3.0 RC2,,,,,,,,,0,,,,,,,,"The following are currently included in the packaged distribution:

- dist/org.springframework.integration-tests-3.0.0.RC1.jar
- src/org.springframework.integration-tests-sources-3.0.0.RC1.jar

The build should be modified to omit these from the packaged distribution.",,;13/Oct/09 9:32 PM;arjen.poutsma;2160,,,,,,,,,0,2160,,,0,2160,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2009-10-13 08:04:41.16,4159,true,issuemaster(issuemaster),,,,0|i00qfj:,4327,5625,,,,,,"13/Oct/09 8:04 AM;juergen.hoeller;Good point. Arjen, could you please have a look at this and follow up with Ben if necessary?

Juergen","13/Oct/09 6:43 PM;nebhale;Well, I went to attach two patches to this issue, but it appears that JIRA 4 still has some bugs in it....

The first patch removes the two JARs from the package build:
{noformat}
Index: org.springframework.integration-tests/build.xml
===================================================================
--- org.springframework.integration-tests/build.xml	(revision 2105)
+++ org.springframework.integration-tests/build.xml	(working copy)
@@ -1,6 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
 <project name=""org.springframework.integration-tests"">
 	<property file=""${basedir}/../build.properties""/>
-	<import file=""${basedir}/../build-spring-framework/package-bundle.xml""/>
 	<import file=""${basedir}/../spring-build/standard/default.xml""/>
 </project>
{noformat}

The second patch prevents integration test artifacts from being published to the EBR:
{noformat}
Index: org.springframework.integration-tests/build.xml
===================================================================
--- org.springframework.integration-tests/build.xml	(revision 2105)
+++ org.springframework.integration-tests/build.xml	(working copy)
@@ -3,4 +3,7 @@
 	<property file=""${basedir}/../build.properties""/>
 	<import file=""${basedir}/../build-spring-framework/package-bundle.xml""/>
 	<import file=""${basedir}/../spring-build/standard/default.xml""/>
+
+	<target name=""publish"" description=""Publishes all artifacts to remote repositories""/>
+
 </project>
{noformat}

The second patch doesn't do anything with respect to your maven central POMs so someone will need to look that over as well if you choose to apply the second patch.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10851|https://github.com/spring-projects/spring-framework/issues/10851]. ,,,,,,,,,,,,,,,,,,,,,
Upgrade Apache HttpClient to version 4.0,SPR-6180,28156,,Improvement,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Major,Fixed,arjen.poutsma,olegk,olegk,02/Oct/09 10:33 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,11/Apr/11 6:15 AM,3.0 RC1,,,,,,,3.1 M2,,,,,Web,,,,17,,,,,,,,"Folks,

Please consider upgrading HttpClient to version 4.0 which is the latest stable (GA) version of the library. Commons HttpClient 3.1 is very likely to be deprecated / officially declared end of life very soon (3 - 6 months). There have been no bug fixes in the 3.x branch for over a year. 

Patch attached. Unfortunately I was unable to fix the Ivy build which I am not very familiar with.

Oleg ",,;04/Feb/11 12:40 AM;arjen.poutsma;21780,;11/Apr/11 6:13 AM;arjen.poutsma;720,,,,,,,,0,22500,,,0,22500,,,,,,,,,,,,,,02/Oct/09 10:35 PM;olegk;spring-httpclient-4.0.patch;https://jira.spring.io/secure/attachment/15761/spring-httpclient-4.0.patch,,,,,,,,,,,,,9936000,,,,,2010-08-12 13:43:58.805,12925,true,issuemaster(issuemaster),,,,0|i00pgv:,4171,1178,,,,,,02/Oct/09 10:35 PM;olegk;RestTemplateIntegration tests pass for me when using HttpClient 4.0 based implementation of the HTTP request factory.,12/Aug/10 1:43 PM;sylvain.laurent;Any update on this ?,"11/Jan/11 9:00 AM;olegk;Arjen, HttpClient 4.1 GA will be released within a week or two. Please consider upgrading to 4.1 bypassing 4.0.

Oleg","31/Jan/11 10:35 AM;rclarkson;I've implemented Oleg's patch in Spring-Android-Rest-Template as HttpComponentsClientHttpRequestFactory, since Android has no support for the Commons 3.x client.  ANDROID-7.","02/Mar/11 8:45 AM;jeckhart;I understand adding 4.0 (or even better 4.1), but is there really a need to remove the 3.x support? This will require any project that has implemented HttpClient 3.x and CommonsClientHttpRequestFactory in their app to upgrade the entire HttpClient stack in order to upgrade from Spring 3.0.x to Spring 3.1. I believe that HttpClient 4.x occupies a separate package namespace (and maven group/artifact id) from HttpClient 3.x and the Spring factories for each have separate names. Perhaps it would be better to @deprecate CommonsClientHttpRequestFactory and mark it for removal at a later time?",03/Mar/11 12:05 AM;arjen.poutsma;@John: we will do exactly that: deprecate the 3.x support in favor of 4.x support.,"11/Apr/11 6:15 AM;arjen.poutsma;This has been committed.

Oleg, thanks for the help! Could you please check SVN to see if everything is OK?","11/Apr/11 6:32 AM;olegk;Looks good to me. I wish there was a way to avoid having to buffer request content in memory, though.

Oleg","23/May/11 7:32 AM;davidparks21;Not sure if I should comment here or open a new request, but I'll note here first: Any use cases which require an HttpContext attribute to be set aren't covered in this implementation, and the extensions required make the whole thing so messy as to make using the Rest Template more of a burden than a benefit. Here is the particular case that I've been fussing with today to little avail, setting preemptive authentication (i.e. send basic authentication headers by default rather than performing 2 requests to authenticate): 

http://hc.apache.org/httpcomponents-client-ga/tutorial/html/authentication.html#d4e1023

The problem being that the RestTemplate implementation as it is has no support for setting HttpContext parameters (the template calls the Http.execute(HttpUriRequest) which uses only the non-accessible default HttpContext), there aren't any good way to set the default context parameters on the HttpClient in 4.x Apache HTTP Components. You end up needing to extend HttpClient to provide for default HttpContext params on the HttpClient object and the whole thing just becomes a spaghetti mess from there making the template more pain than pleasure.","24/May/11 12:29 AM;arjen.poutsma;@David

That's certainly something we can try to improve. Can you please create a new JIRA for this issue, and comment the issue number here so that I can follow up on it?",24/May/11 12:41 AM;davidparks21;Added: https://jira.springsource.org/browse/SPR-8367,"09/Jul/13 3:07 AM;arjen.poutsma;{quote}I wish there was a way to avoid having to buffer request content in memory, though.{quote}

There now is, see SPR-10728.",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10848|https://github.com/spring-projects/spring-framework/issues/10848]. ,,,,,,,,,,,
HttpHeadersTests fails with non-english locale,SPR-6177,28142,,Bug,Closed,SPR,Spring Framework,software,juergen.hoeller,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-framework/issues"">GitHub</a>. Please open new issues there.",http://projects.spring.io/spring-framework/,Minor,Fixed,arjen.poutsma,krosenvold,krosenvold,01/Oct/09 10:59 PM,15/Jan/19 5:26 PM,10/May/19 2:36 AM,13/Oct/09 8:53 PM,3.0 RC1,,,,,,,3.0 RC2,,,,,Web,,,,0,,,,,,,,HttpHeadersTests.date (and possibly others) fail for my locale. I'm not sure if the problem is in the test or the code.,"On Windows XP with ""locale"" settings to norwegian under ""Regional and Language Options""",;13/Oct/09 8:53 PM;arjen.poutsma;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,9936000,,,,,2019-01-14 20:38:48.327,4161,true,issuemaster(issuemaster),,,,0|i00qfz:,4329,5627,,,,,Sun JVM -> 1.6,"01/Oct/09 11:00 PM;krosenvold;This is from trunk on oct .1
",14/Jan/19 8:38 PM;issuemaster;The Spring Framework has migrated to [GitHub Issues|https://github.com/spring-projects/spring-framework/issues]. This issue corresponds to [spring-projects/spring-framework#10845|https://github.com/spring-projects/spring-framework/issues/10845]. ,,,,,,,,,,,,,,,,,,,,,,
Allow XML property declaration,SLICE-103,31461,31403,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,23/May/10 6:42 PM,23/May/10 8:03 PM,10/May/19 2:36 AM,23/May/10 8:03 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 8,,,,,,,0,,,,,,,,,,;23/May/10 7:07 PM;nebhale;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,282787200,,,,,,18602,false,tmarshall(tmarshall),,,,0|i02ew7:,14122,3904,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specify names in XML,SLICE-101,31432,31385,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,20/May/10 12:37 AM,20/May/10 1:48 AM,10/May/19 2:36 AM,20/May/10 1:48 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;20/May/10 1:48 AM;nebhale;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,283132800,,,,,,18604,false,tmarshall(tmarshall),,,,0|i03hpz:,20413,3894,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change the name of the ca tag to constructor-arg upon completion of SPR-7218,SLICE-100,31419,,Task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,,nebhale,nebhale,19/May/10 3:06 AM,23/May/10 6:11 PM,10/May/19 2:36 AM,23/May/10 6:11 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 8,,,,,,,0,,,,,,,,,,;23/May/10 6:11 PM;nebhale;1800,,,,,,,,,0,1800,,,0,1800,,,,,,SPR-7218,,,,,,,,,,,,,,,,,,,,,283132800,,,,,,18605,false,tmarshall(tmarshall),,,,0|i03hnz:,20404,3907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow user to specify order argument in XML,SLICE-99,31415,31383,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,19/May/10 1:55 AM,19/May/10 7:37 PM,10/May/19 2:36 AM,19/May/10 7:37 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;19/May/10 7:37 PM;nebhale;7200,;19/May/10 7:37 PM;nebhale;3600,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,283219200,,,,,,18606,false,tmarshall(tmarshall),,,,0|i03hr3:,20418,3891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sort based on order argument,SLICE-98,31414,31383,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,19/May/10 1:55 AM,19/May/10 9:33 PM,10/May/19 2:36 AM,19/May/10 9:33 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;19/May/10 9:33 PM;nebhale;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,283219200,,,,,,18607,false,tmarshall(tmarshall),,,,0|i03hrb:,20419,3890,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Guarantee ordering of exported services between ApplicationContexts,SLICE-96,31410,31387,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,18/May/10 6:17 PM,19/May/10 12:24 AM,10/May/19 2:36 AM,19/May/10 12:24 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;19/May/10 12:24 AM;nebhale;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,283219200,,,,,,18609,false,tmarshall(tmarshall),,,,0|i03hpb:,20410,3899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Guarantee ordering of exported services within an ApplicationContext,SLICE-95,31409,31387,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,18/May/10 6:17 PM,18/May/10 11:15 PM,10/May/19 2:36 AM,18/May/10 11:15 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;18/May/10 11:15 PM;nebhale;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,283219200,,,,,,18610,false,tmarshall(tmarshall),,,,0|i03hpj:,20411,3898,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve javadocs,SLICE-92,31390,31382,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,17/May/10 12:26 AM,17/May/10 10:51 PM,10/May/19 2:36 AM,17/May/10 10:51 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;17/May/10 10:51 PM;nebhale;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,283392000,,,,,,18613,false,tmarshall(tmarshall),,,,0|i03hqf:,20415,3888,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve test coverage,SLICE-91,31389,31382,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,17/May/10 12:26 AM,18/May/10 1:53 AM,10/May/19 2:36 AM,18/May/10 1:53 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;18/May/10 1:53 AM;nebhale;10800,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,283392000,,,,,,18614,false,tmarshall(tmarshall),,,,0|i03hqn:,20416,3887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Violations,SLICE-90,31388,31382,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,17/May/10 12:25 AM,17/May/10 6:26 PM,10/May/19 2:36 AM,17/May/10 6:26 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;17/May/10 6:25 PM;nebhale;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,283392000,,,,,,18615,false,tmarshall(tmarshall),,,,0|i03hqv:,20417,3886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service registry should allow multiple services of the same name that are ordered based on the same criteria as types,SLICE-88,31386,,Task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,,nebhale,nebhale,17/May/10 12:15 AM,19/May/10 1:49 AM,10/May/19 2:36 AM,19/May/10 1:49 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 7,,,,,,,0,,,,,,,,,,;19/May/10 1:49 AM;nebhale;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,283392000,,,,,,18617,false,tmarshall(tmarshall),,,,0|i03hov:,20408,3896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add POMs,SLICE-71,30475,30385,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:42 PM,10/Mar/10 6:28 AM,10/May/19 2:36 AM,10/Mar/10 6:28 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;10/Mar/10 6:28 AM;nebhale;1800,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18634,false,tmarshall(tmarshall),,,,0|i053hj:,29771,3854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Factory that uses classpath scanner,SLICE-70,30474,30408,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:42 PM,18/Mar/10 8:07 PM,10/May/19 2:36 AM,18/Mar/10 8:07 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 6,,,,,,,0,,,,,,,,,,;18/Mar/10 8:07 PM;nebhale;3600,;18/Mar/10 8:07 PM;nebhale;3600,,,,,,,1800,0,7200,400%,1800,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18635,false,tmarshall(tmarshall),,,,0|i03jp3:,20733,3861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create ClassPathScanner,SLICE-69,30473,30408,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:42 PM,10/Mar/10 7:05 AM,10/May/19 2:36 AM,10/Mar/10 7:05 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;10/Mar/10 7:04 AM;nebhale;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18636,false,tmarshall(tmarshall),,,,0|i03jov:,20732,3860,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples,SLICE-68,30472,30462,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:41 PM,09/Mar/10 5:26 AM,10/May/19 2:36 AM,09/Mar/10 5:26 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;09/Mar/10 5:26 AM;nebhale;1200,,,,,,,,1800,0,1200,66%,1800,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18637,false,tmarshall(tmarshall),,,,0|i03hhz:,20377,3868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure Service References,SLICE-67,30471,30462,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:13 PM,07/Mar/10 4:01 PM,10/May/19 2:36 AM,07/Mar/10 4:01 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;07/Mar/10 4:01 PM;nebhale;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18638,false,tmarshall(tmarshall),,,,0|i03hi7:,20378,3867,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configure Service Exports,SLICE-66,30470,30462,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:13 PM,06/Mar/10 11:25 PM,10/May/19 2:36 AM,06/Mar/10 11:25 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;06/Mar/10 3:00 PM;nebhale;3600,;06/Mar/10 11:25 PM;nebhale;1800,,,,,,,7200,0,5400,75%,7200,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18639,false,tmarshall(tmarshall),,,,0|i03hif:,20379,3866,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update FileSystem to have a ZipFile based FileSystem and FileSystemEntry,SLICE-65,30469,30407,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,06/Mar/10 2:12 PM,06/Mar/10 2:13 PM,10/May/19 2:36 AM,06/Mar/10 2:13 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 5,,,,,,,0,,,,,,,,,,;06/Mar/10 2:13 PM;nebhale;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,289526400,,,,,,18640,false,tmarshall(tmarshall),,,,0|i053hr:,29772,3852,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create a BeanFactoryPostProcessor that resolves the service dependency graph and updates bean definitions with proper linkages,SLICE-63,30411,30348,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,03/Mar/10 1:58 AM,04/Mar/10 2:58 AM,10/May/19 2:36 AM,04/Mar/10 2:58 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;04/Mar/10 2:58 AM;nebhale;25200,,,,,,,,14400,0,25200,175%,14400,0,25200,,,,,,,,,,,,,,,,,,,,,,,,,,,289872000,,,,,,18642,false,tmarshall(tmarshall),,,,0|i03hgf:,20370,3845,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create FactoryBean,SLICE-52,30360,30264,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 2:12 AM,03/Mar/10 1:21 AM,10/May/19 2:36 AM,03/Mar/10 1:21 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;03/Mar/10 1:21 AM;nebhale;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18653,false,tmarshall(tmarshall),,,,0|i03hfr:,20367,3840,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Retrieve an object from service registry,SLICE-50,30358,30264,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 2:12 AM,03/Mar/10 1:21 AM,10/May/19 2:36 AM,03/Mar/10 1:21 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;02/Mar/10 3:11 AM;nebhale;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18655,false,tmarshall(tmarshall),,,,0|i03hfb:,20365,3838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update webapplication-maven,SLICE-47,30355,30349,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:40 AM,04/Mar/10 11:20 PM,10/May/19 2:36 AM,04/Mar/10 11:20 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;04/Mar/10 11:20 PM;nebhale;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18656,false,tmarshall(tmarshall),,,,0|i03hen:,20362,3850,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update webapplication-ant,SLICE-46,30354,30349,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:40 AM,04/Mar/10 11:02 PM,10/May/19 2:36 AM,04/Mar/10 11:02 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;04/Mar/10 11:02 PM;nebhale;7200,,,,,,,,1800,0,7200,400%,1800,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18657,false,tmarshall(tmarshall),,,,0|i03hfz:,20368,3849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update commandline-maven,SLICE-45,30353,30349,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:40 AM,05/Mar/10 12:27 AM,10/May/19 2:36 AM,05/Mar/10 12:27 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;05/Mar/10 12:26 AM;nebhale;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18658,false,tmarshall(tmarshall),,,,0|i03hef:,20361,3848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update commandline-ant,SLICE-44,30352,30349,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:40 AM,05/Mar/10 12:05 AM,10/May/19 2:36 AM,05/Mar/10 12:05 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;05/Mar/10 12:04 AM;nebhale;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18659,false,tmarshall(tmarshall),,,,0|i03hgn:,20371,3847,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create facility to retrieve service registry,SLICE-43,30351,30348,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:39 AM,03/Mar/10 1:59 AM,10/May/19 2:36 AM,03/Mar/10 1:59 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;03/Mar/10 1:56 AM;nebhale;1800,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18660,false,tmarshall(tmarshall),,,,0|i03hg7:,20369,3844,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create FactoryBean,SLICE-42,30350,30263,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:39 AM,03/Mar/10 1:21 AM,10/May/19 2:36 AM,03/Mar/10 1:21 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;02/Mar/10 2:31 AM;nebhale;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18661,false,tmarshall(tmarshall),,,,0|i03hgv:,20372,3884,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Accept an object with a collection of interfaces that it will be selectable by,SLICE-37,30345,30263,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:31 AM,03/Mar/10 1:22 AM,10/May/19 2:36 AM,03/Mar/10 1:22 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;02/Mar/10 1:27 AM;nebhale;1800,,,,,,,,7200,0,1800,25%,7200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18664,false,tmarshall(tmarshall),,,,0|i03hdz:,20359,3883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Accept an object and store it for later retrieval,SLICE-36,30344,30263,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,01/Mar/10 1:31 AM,03/Mar/10 1:21 AM,10/May/19 2:36 AM,03/Mar/10 1:21 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 4,,,,,,,0,,,,,,,,,,;02/Mar/10 1:11 AM;nebhale;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,18665,false,tmarshall(tmarshall),,,,0|i03he7:,20360,3882,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create schema,SLICE-35,30270,30265,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,24/Feb/10 1:34 AM,25/Feb/10 10:39 PM,10/May/19 2:36 AM,25/Feb/10 10:39 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;25/Feb/10 10:38 PM;nebhale;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,290476800,,,,,,18666,false,tmarshall(tmarshall),,,,0|i053hz:,29773,3842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stop on threads,SLICE-34,30269,30262,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,24/Feb/10 1:34 AM,24/Feb/10 2:33 AM,10/May/19 2:36 AM,24/Feb/10 2:33 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;24/Feb/10 2:27 AM;nebhale;600,,,,,,,,1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,290476800,,,,,,18667,false,tmarshall(tmarshall),,,,0|i03hkn:,20389,3836,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start on threads,SLICE-33,30268,30262,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,24/Feb/10 1:34 AM,24/Feb/10 2:33 AM,10/May/19 2:36 AM,24/Feb/10 2:33 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;24/Feb/10 2:27 AM;nebhale;1200,,,,,,,,1800,0,1200,66%,1800,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,290476800,,,,,,18668,false,tmarshall(tmarshall),,,,0|i03hkv:,20390,3835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apply Patches,SLICE-25,30243,30242,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,22/Feb/10 10:47 PM,22/Feb/10 11:57 PM,10/May/19 2:36 AM,22/Feb/10 11:57 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;22/Feb/10 11:57 PM;nebhale;1200,,,,,,,,1800,0,1200,66%,1800,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,290563200,,,,,,18674,false,tmarshall(tmarshall),,,,0|i053in:,29776,3813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create UNIX scripts,SLICE-23,30182,30179,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,18/Feb/10 9:25 PM,19/Feb/10 12:22 AM,10/May/19 2:36 AM,19/Feb/10 12:22 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;19/Feb/10 12:21 AM;nebhale;600,,,,,,,,1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,290908800,,,,,,18676,false,tmarshall(tmarshall),,,,0|i03hn3:,20400,3832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create windows scripts,SLICE-22,30181,30179,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,18/Feb/10 9:25 PM,19/Feb/10 12:21 AM,10/May/19 2:36 AM,19/Feb/10 12:21 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;19/Feb/10 12:21 AM;nebhale;600,,,,,,,,1800,0,600,33%,1800,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,290908800,,,,,,18677,false,tmarshall(tmarshall),,,,0|i03hmn:,20398,3831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create packaged build with all needed JAR files,SLICE-21,30180,30179,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,18/Feb/10 9:25 PM,19/Feb/10 12:23 AM,10/May/19 2:36 AM,19/Feb/10 12:23 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;19/Feb/10 12:23 AM;nebhale;600,,,,,,,,3600,0,600,16%,3600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,290908800,,,,,,18678,false,tmarshall(tmarshall),,,,0|i03hmv:,20399,3830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create sample application,SLICE-19,30112,30108,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:42 PM,23/Feb/10 12:28 AM,10/May/19 2:36 AM,23/Feb/10 12:28 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;23/Feb/10 12:27 AM;nebhale;1800,,,,,,,,14400,0,1800,12%,14400,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18680,false,tmarshall(tmarshall),,,,0|i053if:,29775,3811,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create sample application,SLICE-18,30111,30107,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:41 PM,23/Feb/10 12:46 AM,10/May/19 2:36 AM,23/Feb/10 12:46 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;23/Feb/10 12:46 AM;nebhale;1800,,,,,,,,14400,0,1800,12%,14400,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18681,false,tmarshall(tmarshall),,,,0|i053i7:,29774,3809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create sample application,SLICE-17,30110,30106,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:41 PM,21/Feb/10 9:01 PM,10/May/19 2:36 AM,21/Feb/10 9:01 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;21/Feb/10 9:01 PM;nebhale;10800,;21/Feb/10 9:01 PM;nebhale;3600,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18682,false,tmarshall(tmarshall),,,,0|i053jb:,29779,3819,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create sample application,SLICE-16,30109,30105,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:40 PM,21/Feb/10 9:45 PM,10/May/19 2:36 AM,21/Feb/10 9:45 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;21/Feb/10 9:43 PM;nebhale;3600,,,,,,,,14400,0,3600,25%,14400,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18683,false,tmarshall(tmarshall),,,,0|i053j3:,29778,3817,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Spring-based application started,SLICE-11,30104,30102,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:34 PM,19/Feb/10 12:00 AM,10/May/19 2:36 AM,19/Feb/10 12:00 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;19/Feb/10 12:00 AM;nebhale;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18688,false,tmarshall(tmarshall),,,,0|i03hm7:,20396,3828,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create Spring-based appication detector,SLICE-10,30103,30102,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:34 PM,18/Feb/10 9:02 PM,10/May/19 2:36 AM,18/Feb/10 9:02 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;18/Feb/10 8:12 PM;nebhale;14400,;18/Feb/10 9:02 PM;nebhale;7200,,,,,,,3600,0,21600,600%,3600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18689,false,tmarshall(tmarshall),,,,0|i03hmf:,20397,3827,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create context loader that scans for notable JARs and starts them,SLICE-8,30101,30096,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:31 PM,22/Feb/10 11:20 PM,10/May/19 2:36 AM,22/Feb/10 11:20 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 3,,,,,,,0,,,,,,,,,,;22/Feb/10 1:57 AM;nebhale;14400,;22/Feb/10 11:20 PM;nebhale;14400,,,,,,,14400,0,28800,200%,14400,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18691,false,tmarshall(tmarshall),,,,0|i053iv:,29777,3815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scan JARs for slices and start,SLICE-7,30100,30095,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:30 PM,16/Feb/10 1:28 AM,10/May/19 2:36 AM,16/Feb/10 1:28 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;15/Feb/10 3:41 AM;nebhale;3600,;16/Feb/10 1:27 AM;nebhale;14400,,,,,,,7200,0,18000,250%,7200,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18692,false,tmarshall(tmarshall),,,,0|i03hlz:,20395,3825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create bootstrapping main method that creates classloader from contained JARs,SLICE-6,30099,30095,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,14/Feb/10 10:29 PM,15/Feb/10 2:29 AM,10/May/19 2:36 AM,15/Feb/10 2:29 AM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 2,,,,,,,0,,,,,,,,,,;15/Feb/10 2:29 AM;nebhale;10800,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,291254400,,,,,,18693,false,tmarshall(tmarshall),,,,0|i03hlr:,20394,3824,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create project,SLICE-3,30006,30004,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Blocker,Complete,nebhale,nebhale,nebhale,08/Feb/10 10:57 PM,14/Feb/10 10:44 PM,10/May/19 2:36 AM,08/Feb/10 11:02 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 1,,,,,,,0,,,,,,,,,,;08/Feb/10 11:02 PM;nebhale;900,,,,,,,,3600,0,900,25%,3600,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,291772800,,,,,,18696,false,tmarshall(tmarshall),,,,0|i03hdb:,20356,3821,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Port over Agile schemes and type from issuetracker,SLICE-2,30005,30004,Sub-task,Done,SLICE,Spring Slices,software,nebhale,,,Minor,Complete,nebhale,nebhale,nebhale,08/Feb/10 10:57 PM,10/Feb/10 8:50 PM,10/May/19 2:36 AM,08/Feb/10 11:02 PM,,,,,,,,1.0.0.M1,1.0.0.RELEASE,Sprint 1,,,,,,,0,,,,,,,,,,;08/Feb/10 11:02 PM;nebhale;7200,;08/Feb/10 11:02 PM;nebhale;7200,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,291772800,,,,,,18697,false,tmarshall(tmarshall),,,,0|i03hd3:,20355,3822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to the latest version GemFire (7.0.2),SGF-265,56776,,Improvement,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Major,Complete,jblum,jblum,jblum,28/Mar/14 3:50 PM,22/May/14 11:00 AM,10/May/19 2:36 AM,16/Apr/14 11:36 AM,1.0.0,1.4 M1 (Dijkstra),,,,,,1.4 RC1 (Dijkstra),,,,,,,,31/Mar/14 12:00 AM,0,7.0.2,GemFire,Spring,,,,,"Upgrade _Spring Data GemFire_ to the latest GA version of _GemFire_, *7.0.2*.",Spring + GemFire 7.0.2,Debugged the logic to find the source of the problem.;01/Apr/14 5:19 PM;jblum;7200,Completed;16/Apr/14 11:36 AM;jblum;14400,,,,,,,3600,0,21600,600%,3600,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,159321600,,,,,,43032,false,tmarshall(tmarshall),,,,0|i07fef:,43367,42734,,,,,,"16/Apr/14 11:36 AM;jblum;Ran into a compatibility issue with Spring Data GemFire between GemFire 7.0.1 and GemFire 7.0.2, where the result type of a GemFire Query execution changed from {{com.gemstone.gemfire.cache.query.internal.ResultsBag}} to a {{com.gemstone.gemfire.cache.query.SelectResults}}, and specifically the ({{...cache.query.internal.ResultsCollectionPdxDeserializerWrapper}}).  The only thing in common between a {{ResultsBag}} and {{SelectResults}} is that both extend {{java.util.Collection}}.",21/Apr/14 11:48 AM;jblum;Merged and committed [PR #63|https://github.com/spring-projects/spring-data-gemfire/pull/63] to {{master}} @revision [bf21a98e85|https://github.com/spring-projects/spring-data-gemfire/commit/bf21a98e8522c2d2f6b8f41389a1aafab1df0a39].,,,,,,,,,,,,,,,,,,,,,,
The 'disk-synchronous' Region attribute does not get successfully applied when explicitly set to false.,SGF-263,56532,,Bug,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Major,Fixed,jblum,jblum,jblum,21/Mar/14 12:27 AM,02/Mar/15 11:26 AM,10/May/19 2:36 AM,02/Mar/15 11:26 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,28/Mar/14 12:00 AM,0,DiskSynchronous,GemFire,Spring,,,,,"Currently, when a user sets the {{disk-synchronous}} attribute when defining a GemFire Region using Spring Data GemFire XML namespace meta-data, the value is ignored if explicitly set to false.  GemFire defaults the value of {{diskSynchronous}} RegionAttributes property to true, which effectively has no affect.

Furthermore, the {{disk-synchronous}} attribute on the {{baseReadOnlyRegionType}} in the SDG XML schema currently defaults the value to false.  However, this will have not effect since the attribute is not properly parsed, thus resulting in Regions always being defined with synchronous disk access when using the SDG XML namespace.",Spring + GemFire 7.x,;24/Mar/14 2:16 PM;jblum;900,,,,,,,,7200,0,900,12%,7200,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,161740800,,,,,,42874,false,tmarshall(tmarshall),,,,0|i07eif:,43223,42576,,,,,,21/Mar/14 12:42 AM;jblum;See GitHub PR [#59|https://github.com/spring-projects/spring-data-gemfire/pull/59] for more details.,24/Mar/14 2:17 PM;jblum;Fixed and committed to '{{master}}' in revision [1594c5f062|https://github.com/spring-projects/spring-data-gemfire/commit/1594c5f062d2006cbd1fd64a220ea56f53417650].,,,,,,,,,,,,,,,,,,,,,,
The SDG XML namespace <partitioned-region> element is missing the 'data-policy' attribute.,SGF-258,56107,,Bug,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Fixed,jblum,jblum,jblum,27/Feb/14 9:22 PM,02/Mar/15 11:25 AM,10/May/19 2:36 AM,02/Mar/15 11:25 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,14/Mar/14 12:00 AM,0,DataPolicy,GemFire,PartitionRegion,Spring,,,,"The {{<gfe:partitioned-region/>}} element in the Spring Data GemFire XML namespace is missing the {{data-policy}} attribute, which should be added for  consistency with the {{<gfe:local-region/>}} and {{<gfe:replicated-region/>}} XML namespace peer Cache Region types.",Spring + GemFire 7.0.1,;05/Mar/14 5:59 PM;jblum;7200,,,,,,,,7200,7200,7200,100%,7200,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,161740800,,,,,,42450,false,tmarshall(tmarshall),,,,0|i07c9j:,42859,42152,,,,,,21/Mar/14 12:42 AM;jblum;See GitHub PR [#59|https://github.com/spring-projects/spring-data-gemfire/pull/59] for more details.,24/Mar/14 2:20 PM;jblum;Fixed and committed to '{{master}}' in revision [1594c5f062|https://github.com/spring-projects/spring-data-gemfire/commit/1594c5f062d2006cbd1fd64a220ea56f53417650].,,,,,,,,,,,,,,,,,,,,,,
Specify strict type rules in the Spring Data GemFire XSD for peer Region 'data-policy' and 'shortcut' attributes as currently enforced by the <gfe:client-region> element's 'shortcut' attribute.,SGF-257,55947,,Improvement,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Complete,jblum,jblum,jblum,26/Feb/14 1:26 PM,22/May/14 11:00 AM,10/May/19 2:36 AM,21/Mar/14 12:42 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,14/Mar/14 12:00 AM,0,DataPolicy,GemFire,Region,Shortcut,Spring,XSD,,"Currently, the {{<gfe:client-region>}} element's {{shortcut}} attribute limits the attribute's allowed values based on an enumeration of the GemFire's {{ClientRegionShortcut}} enum, using a {{<xsd:restriction base=""xsd:string"">}} followed by {{<xsd:enumeration>}} values.

The same XSD restrictions should be applied to {{<gfe:local-region/>}}, {{<gfe:partitioned-region/>}} and {{<gfe:replicated-region/>}} elements' {{data-policy}} and {{shortcut}} attributes.

In addition, the same restriction needs to be applied to the {{<gfe:client-region/>}}'s {{data-policy}} attribute.

This is meant to discourage the use of the both the {{data-policy}} and {{shortcut}} attributes +in favor+ of SDG's high-level XSD namespace abstractions for the various peer Region types (such as Local, Partitioned and Replicated given by the namespaces elements mentioned above) in combination with the {{persistent}} attribute.  

I.e., it will not longer be possible for users to use Property Placeholder values in these attributes, and so, if users specify these attributes explicitly in their SDG config, given the validation that must occur (such as verifying a persistent DataPolicy matches the value for the {{persistent}} attribute on the Region when also specified), then they must be exact an unambiguous, or rather resolvable as parse-time.

It is important to point out that a user can achieve anything in SDG'S XML namespace that can be achieved with either the DataPolicy or Region Shortcuts.

This issue directly correlated to the work being done in [SGF-88|https://jira.springsource.org/browse/SGF-88].
",Spring + GemFire 7.x,;05/Mar/14 5:57 PM;jblum;14400,,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,161740800,,,,,,42423,false,tmarshall(tmarshall),,,,0|i07c5b:,42840,42125,,,,,,21/Mar/14 12:42 AM;jblum;See GitHub PR [#59|https://github.com/spring-projects/spring-data-gemfire/pull/59] for more details.,24/Mar/14 2:20 PM;jblum;Fixed and committed to '{{master}}' in revision [1594c5f062|https://github.com/spring-projects/spring-data-gemfire/commit/1594c5f062d2006cbd1fd64a220ea56f53417650].,,,,,,,,,,,,,,,,,,,,,,
Upgrade to the latest version of the Spring Framework (3.2.8) and Spring Data Commons (1.8.0),SGF-256,55946,,Improvement,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Complete,jblum,jblum,jblum,26/Feb/14 1:06 PM,02/Mar/15 11:25 AM,10/May/19 2:36 AM,02/Mar/15 11:25 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,14/Mar/14 12:00 AM,0,Dependencies,Spring,Upgrade,,,,,"Upgrade the Spring Data GemFire project to use the latest GA versions of...

1. Spring Framework 3.2.8
2. Spring Data Commons 1.8.0

Build, Test, Verify!",Spring + GemFire,52 test failures to fix!;10/Mar/14 4:16 PM;jblum;14400,,,,,,,,3600,0,14400,400%,3600,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,162950400,,,,,,42422,false,tmarshall(tmarshall),,,,0|i07c53:,42839,42124,,,,,,"10/Mar/14 9:56 AM;jblum;Upgrading SDG to *Spring Framework 3.2.8* was successful.  Upgrading to *Spring Data Commons 1.8.0.BUILD-SNAPSHOT* caused {color:darkred}52 test failures{color}.  Upgrading to 1.7.0.RELEASE caused the same number of test failures.  Upgrading to 1.6.1.RELEASE was successful.

The Spring Data Commons project changed the way {{Repositories}} need to be configured prior to being used.  I need to investigate the required setup and fix all {{Repository}} based tests in SDG.",10/Mar/14 6:22 PM;jblum;Fixed on {{master}} with commit [d2d54bf40c|https://github.com/spring-projects/spring-data-gemfire/commit/d2d54bf40c7b3363cd865ea892a7fc2513f9a178] for [PR #57|https://github.com/spring-projects/spring-data-gemfire/pull/57].,,,,,,,,,,,,,,,,,,,,,,
The <gfe:eviction> element's 'threshold' attribute is required even when the Eviction type is 'HEAP_PERCENTAGE'.,SGF-255,55881,,Bug,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Fixed,jblum,jblum,jblum,24/Feb/14 5:25 PM,02/Mar/15 11:39 AM,10/May/19 2:36 AM,02/Mar/15 11:39 AM,1.0.0,,,,,,,1.3.4,1.4 M1 (Dijkstra),,,,,,,14/Mar/14 12:00 AM,0,EvictionAttributes,GemFire,Region,RegionAttributes,Spring,,,"Currently, the Spring Data GemFire XML schema (XSD) requires the {{threshold}} attribute on the {{<gfe:eviction>}} element in SDG XML namespace configuration meta-data.  The {{<gfe:eviction>}} is used to set Evictions settings on a Region such as (maximums, action and algorithm/type) where the {{threshold}} corresponds to the {{maximum}} value for ENTRY_COUNT and MEMORY_SIZE.  However, the {{threshold}} has no meaning for the HEAP_PERCENTAGE Eviction type/algorithm and therefore should not be required.

The ""threshold"", or rather percentage when Regions employ the HEAP_LRU algorithm for Eviction comes from the Resource Manager's configuration applied at the Cache-level, and in SDG, that means the {{<gfe:cache>}} element's  values for {{critical-heap-percentage}} and {{eviction-heap-percentage}}.",Spring + GemFire 7.x,;24/Feb/14 8:19 PM;jblum;9000,;24/Feb/14 8:20 PM;jblum;1800,,,,,,,14400,3600,10800,75%,14400,3600,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,164160000,,,,,,42357,false,tmarshall(tmarshall),,,,0|i07byf:,42809,42059,,,,,,"24/Feb/14 5:36 PM;jblum;Actually, I have determined that {{threshold}} attribute should not be required for any setting of Eviction type/algorithm (even ENTRY_COUNT MEMORY_SIZE) that uses a 'maximum', as defined in [GemFire's User Guide|http://pubs.vmware.com/vfabric53/topic/com.vmware.vfabric.gemfire.7.0/reference/topics/cache_xml.html?path=4_1_9_1_2_13_14#eviction-attributes], since GemFire will provide sensible defaults for the 'maximum' (a.k.a. {{threshold}} attribute anyway).

Although ""default"" values are missing in the [GemFire User Guide|http://pubs.vmware.com/vfabric53/topic/com.vmware.vfabric.gemfire.7.0/reference/topics/cache_xml.html?path=4_1_9_1_2_13_14#eviction-attributes], the source code reveals that *10 megabytes* is the default for MMEORY_SIZE, and *900 entries* is the default for ENTRY_COUNT.

Again, 'maximum', or {{threshold}} does not apply to HEAP_PERCENTAGE because GemFire's Resource Manager invokes Eviction at the Cache-level for all Region's when the {{<gfe:cache>}} element's {{eviction-heap-percentage}} attribute value is reached.",24/Feb/14 8:35 PM;jblum;Fixed in GitHub master revision [bc7e284fbc|https://github.com/spring-projects/spring-data-gemfire/commit/bc7e284fbcec92a68181483b5f10046ac29ca3f3] with [PR #53|https://github.com/spring-projects/spring-data-gemfire/pull/53].,,,,,,,,,,,,,,,,,,,,,,
Creating and using GemFire Repositories based on the Spring Data Commons Repository abstraction does not work properly for domain objects stored in Subregions. ,SGF-251,55466,,Bug,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Major,Fixed,jblum,jblum,jblum,03/Feb/14 4:01 PM,02/Mar/15 11:38 AM,10/May/19 2:36 AM,02/Mar/15 11:38 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,14/Feb/14 12:00 AM,0,Repository,SpringGemFire,SubRegions,,,,,"When a user implements an application domain object associated with a GemFire Subregion, by way of the @Region annotation on the domain object class, along with a corresponding {{Repository/GemfireRepository}} interface extension for basic data access and query operations, Spring Data GemFire fails to properly find the Subregion bean defined in the Spring ApplicationContext, and results in the following Exception...

\\
{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.spring.data.gemfire.cache.SubRegionRepositoryTest': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.spring.data.gemfire.app.dao.repo.ProgrammerRepository org.spring.data.gemfire.cache.SubRegionRepositoryTest.programmersRepo; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'programmerRepository': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No region '/Users/Programmers' found for domain class class org.spring.data.gemfire.app.beans.Programmer! Make sure you have configured a Gemfire region of that name in your application context!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:376)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:110)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:312)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:284)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:76)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.spring.data.gemfire.app.dao.repo.ProgrammerRepository org.spring.data.gemfire.cache.SubRegionRepositoryTest.programmersRepo; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'programmerRepository': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No region '/Users/Programmers' found for domain class class org.spring.data.gemfire.app.beans.Programmer! Make sure you have configured a Gemfire region of that name in your application context!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:517)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	... 29 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'programmerRepository': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No region '/Users/Programmers' found for domain class class org.spring.data.gemfire.app.beans.Programmer! Make sure you have configured a Gemfire region of that name in your application context!
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:912)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:855)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:770)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	... 31 more
Caused by: java.lang.IllegalStateException: No region '/Users/Programmers' found for domain class class org.spring.data.gemfire.app.beans.Programmer! Make sure you have configured a Gemfire region of that name in your application context!
	at org.springframework.data.gemfire.repository.support.GemfireRepositoryFactory.getTemplate(GemfireRepositoryFactory.java:111)
	at org.springframework.data.gemfire.repository.support.GemfireRepositoryFactory.getTargetRepository(GemfireRepositoryFactory.java:98)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:136)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:153)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:43)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)
	... 39 more
{noformat}
","GemFire + Spring using Spring Data Commons Repository abstract, GemfireRepository extension.",;04/Feb/14 6:02 PM;jblum;43200,,,,,,,,115200,14400,43200,37%,115200,14400,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,165801600,,,,,,41943,false,tmarshall(tmarshall),,,,0|i079vb:,42471,41645,,,,,,"03/Feb/14 4:48 PM;jblum;After further code review and analysis, it has been determined that the Region reference associated with the application domain object class using the {{@Region}} annotation is actually a reference to the Region (as a bean in the Spring context) based on the Region's actual name in GemFire (as determined by {{Region.getName()}}).  Even the [Javadoc|http://docs.spring.io/spring-data-gemfire/docs/current/api/org/springframework/data/gemfire/mapping/Region.html] clearly states the {{value}} attribute of the {{@Region}} annotation is ""_The *name* of the Region the entity shall be stored in._"".

When the {{<gfe:repositories ...>}} element is parsed by SDG upon initial Spring container startup, it creates an instance of the {{GemfireRepositoryFactoryBean}} and {{GemfireRepositoryFactory}} classes, which are used to creates instances of {{GemfireRepository}} for those {{Repository}} extending interfaces for application domain objects in the application CLASSPATH, or those {{Repository}} interfaces rooted in a package defined by the {{base-packages}} attribute of {{<gfe:repositories>}} element.

So, when the FactoryBean is created, it acquires bean references to all the ""Region"" beans currently defined in the Spring context and passes the collection of Regions to the constructor of the {{GemfireRepositoryFactory}}, which uses the {{Regions}} helper class to create a mapping of the Region's actual ""name"" in GemFire to the Region reference.

As such, the value of {{@Region}} annotation {{value}} attribute must be the name of the Region in GemFire, and for Subregions, the name is the unqualified Region name, which would not be a full path reference.  For instance, consider the following Region bean definitions in SDG XML namespace as follows...

{code:xml}
  <gfe:replicated-region id=""Users"" persistent=""false"">
    <gfe:replicated-region name=""Programmers"" persistent=""false""/>
  </gfe:replicated-region>
{code}

Then, consider the following application domain object class...

{code:java}
@Region(""/Users/Programmers"")
public class Programmer extends User {

  private String programmingLanguage;
  ...
}
{code}

A developer might think the Region reference comes from the bean ID/name in the Spring context, which for the ""Programmers"" Subregion is ""/Users/Programmers"".  However, the actual name of this Subregion in GemFire is ""Programmers"".  The fully-qualified name, or ""fullPath"" of the Region in GemFire is ""/Users/Programmers"".

So, when the developer changes the {{@Region}} annotation Region reference to...

{code:java}
@Region(""Programmers"")
public class Programmer extends User {

  private String programmingLanguage;
  ...
}
{code}

The Spring Data GemFire Repository and Query infrastructure supporting codebase is able to find the Region (bean) when inspecting the application domain object classes type information for {{Repository}} proxy-based implementations.

However, this creates a new problem.

When the application domain object has certain properties (e.g. programmingLanguage) that a developer may wish to query inside his/her {{Repository/GemfireRepository}} interface definition, like so...

{code:java}
public interface ProgrammerRepository extends GemfireRepository<Programmer, String> {

  public List<Programmer> findDistinctByProgrammingLanguageOrderByUsernameAsc(String programmingLanguage);

  public List<Programmer> findDistinctByProgrammingLanguageLikeOrderByUsernameAsc(String programmingLanguage);

}
{code}

The Query constructed by the Repository abstraction infrastructure incorrectly constructs the Query String based on the {{@Region}} annotation's {{value}} attribute, or as well as the Region's unqualified name in GemFire as can be seen in the [QueryString.forRegion(..)|https://github.com/spring-projects/spring-data-gemfire/blob/master/src/main/java/org/springframework/data/gemfire/repository/query/QueryString.java] method, instead of the fully-qualified Region name (the Region's fullPath property in GemFire), which is required by GemFire's QueryService+infrastructure as [indicated in the GemFire User Guide|http://pubs.vmware.com/vfabric53/topic/com.vmware.vfabric.gemfire.7.0/developing/query_select/the_from_clause.html], and thus results in the following Exception...

{noformat}
org.springframework.data.gemfire.GemfireQueryException: Region not found:  /Programmers; nested exception is com.gemstone.gemfire.cache.query.RegionNotFoundException: Region not found:  /Programmers
	at org.springframework.data.gemfire.GemfireCacheUtils.convertGemfireAccessException(GemfireCacheUtils.java:296)
	at org.springframework.data.gemfire.GemfireAccessor.convertGemFireAccessException(GemfireAccessor.java:56)
	at org.springframework.data.gemfire.GemfireTemplate.execute(GemfireTemplate.java:365)
	at org.springframework.data.gemfire.GemfireTemplate.execute(GemfireTemplate.java:347)
	at org.springframework.data.gemfire.GemfireTemplate.find(GemfireTemplate.java:285)
	at org.springframework.data.gemfire.repository.query.StringBasedGemfireRepositoryQuery.execute(StringBasedGemfireRepositoryQuery.java:95)
	at org.springframework.data.gemfire.repository.query.PartTreeGemfireRepositoryQuery.execute(PartTreeGemfireRepositoryQuery.java:70)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:312)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at com.sun.proxy.$Proxy21.findDistinctByProgrammingLanguageOrderByUsernameAsc(Unknown Source)
	at org.spring.data.gemfire.cache.SubRegionRepositoryTest.testSubregionRepositoryInteractions(SubRegionRepositoryTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:76)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: com.gemstone.gemfire.cache.query.RegionNotFoundException: Region not found:  /Programmers
	at com.gemstone.gemfire.cache.query.internal.DefaultQuery.checkQueryOnPR(DefaultQuery.java:440)
	at com.gemstone.gemfire.cache.query.internal.DefaultQuery.execute(DefaultQuery.java:224)
	at org.springframework.data.gemfire.GemfireTemplate$15.doInGemfire(GemfireTemplate.java:290)
	at org.springframework.data.gemfire.GemfireTemplate$15.doInGemfire(GemfireTemplate.java:285)
	at org.springframework.data.gemfire.GemfireTemplate.execute(GemfireTemplate.java:358)
	... 41 more
{noformat}

This all results in the developer being unable to use the {{Repository}} abstraction/{{GemfireRepository}} extension and Query infrastructure support for Subregions and the corresponding application domain object classes.
","04/Feb/14 6:35 PM;jblum;Adding reference to an old Spring Data GemFire issues involving plural named Regions in GemFire associated with singularly named application domain object classes, like so...

{code:java}
@Region(""Accounts"")
public class Account ... {
}
{code}

This was filed in JIRA bug [SGF-156|https://jira.springsource.org/browse/SGF-156]","05/Feb/14 11:31 AM;jblum;After extensive code review and tracing through the Repository infrastructure configuration and initialization process, it is a bit clearer why the {{@Region}} annotation {{value}} attribute refers to the actual ""name"" of the Region in GemFire.  If the {{value}} attribute is not set, or rather the name of the Region as defined in GemFire is not explicitly specified, then the Region name reference is based on the simple, unqualified class name of the application domain object.  I.e., if I have application domain class annotated with {{@Region}}, having no explicit value set for the {{value}} attribute, like so...

{code:java}
@Region
public class Account {
}
{code}

Then the Repository infrastructure code bases the Region ""name"", whether a top-level Region or Subregion, on the simple, unqualified name of the application domain class (in our example, ""{{Account}}"", singular).

A bit more detail reveals that the initial OQL statement constructed by the Repository infrastructure bases the FROM clause on the simple class name of the application domain object and later replaces that with an actual reference to the underlying data store specific data structure (e.g. Region), which was based on the simple Region ""name"", instead of the more appropriate Region ""fullPath"" (thus, handling Subregions, like {{/Customers/Accounts}}).

GemFire [OQL requires all FROM clause Region references to be absolute|http://pubs.vmware.com/vfabric53/topic/com.vmware.vfabric.gemfire.7.0/developing/query_select/the_from_clause.html], beginning with a forward slash, and Subregions resolve relative to their parent Region, as in {{/Customers/Accounts""}} for Account application domain objects associated with the ""Accounts"" Subregion.","05/Feb/14 12:00 PM;jblum;Issue was resolved in the following [GitHub commit|https://github.com/spring-projects/spring-data-gemfire/commit/5660a782554849f2f71be5c89e88b28a405d9b74] and is available in the 1.4.0.BUILD-SNAPSHOT, and will also be released in 1.3.4.",,,,,,,,,,,,,,,,,,,,
Ability to bootstrap a Spring context inside a GemFire Server JVM process by starting the GemFire Server with Gfsh.,SGF-248,55280,,New Feature,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Major,Complete,jblum,jblum,jblum,22/Jan/14 11:14 AM,02/Mar/15 11:38 AM,10/May/19 2:36 AM,02/Mar/15 11:38 AM,1.0.0,,,,,,,1.4 M1 (Dijkstra),,,,,,,,14/Feb/14 12:00 AM,1,GemFire,Gfsh,Initializer,,,,,"This feature has been requested by the Spring/GemFire community at large.

1. _The Spring/GemFire Field Engineering team has posted questions like this [one|https://gopivotal-com.socialcast.com/messages/17206971] to SocialCast requesting a way to bootstrap GemFire with a Spring ApplicationContext JVM-based process, and in particular with Spring Data GemFire XML namespace configuration meta-data, using Gfsh.  The response referenced none other than the GemFire Initializer, but also talked about creating a custom Gfsh command in support of this first approach._

2. _GemFire customer, Bank of Montreal, has designed a way to bootstrap a Spring ApplicationContext inside a GemFire Server JVM process using a [GemFire Initializer component|http://pubs.vmware.com/vfabric53/topic/com.vmware.vfabric.gemfire.7.0/basic_config/the_cache/setting_cache_initializer.html?resultof=%22%49%6e%69%74%69%61%6c%69%7a%65%72%22%20%22%69%6e%69%74%69%22%20]._

The approach used in number 2 is the focus of this feature request.  I have filed a separate ticket ([#49561|https://svn.gemstone.com/trac/gemfire/ticket/49561]) in GemFire's issue tracking system (Trac) that covers the first approach.

Either way, a user of Spring and GemFire will be able to use either approach to start a GemFire Server using Gfsh and bootstrap a Spring ApplicationContext inside the JVM process.  The first approach bootstraps GemFire with a Spring context configuration inside a Spring-oriented JVM process where as the second approach bootstraps a Spring context with GemFire native configuration (e.g. {{cache.xml}}) inside a GemFire-oriented Server-based JVM process.",Spring using SDG with GemFire 7.0.2 and up.,;23/Jan/14 7:11 PM;jblum;57600,Completed all testing.;27/Jan/14 6:51 PM;jblum;57600,,,,,,,144000,57600,115200,80%,144000,57600,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,162086400,,,,,,41759,false,tmarshall(tmarshall),,,,0|i0791r:,42338,41461,,,,,,"22/Jan/14 11:28 AM;jblum;One important thing to keep in mind with the second approach (using a GemFire Initializer), is all GemFire Cache specific configuration (i.e. any {{sub-element}}, e.g. like {{transaction-listener}}, or {{attribute}}, e.g. like {{pdx-serializer-ref}}, of the {{<gfe:cache/>}} SDG XML namespace element) would now need to be configured using GemFire's native {{cache.xml}} configuration file.

None of the configuration {{sub-elements}} or {{attributes}} of the {{<gfe:cache/>}} element could be used to configure the GemFire Cache since the Cache will already have been created and initialized by the time the Initializer is invoked, creating the Spring ApplicationContext.  Thus, this means the {{<gfe:cache/>}} element is effectively reduced to creating a bean reference in the Spring ApplicationContext to the GemFire configured Cache.

This is also one of the main reasons why I emphasis the 1st approach (using Spring config meta-data and context to bootstrap GemFire instead).","24/Jan/14 4:55 PM;jblum;In addition to the restrictions on using the SDG XML namespace {{<gfe:cache/>}} element to configure the Cache, which in the context of using GemFire to bootstrap a Spring context using a callback and {{<initializer/>}} from {{cache.xml}} won't work since the Cache is already created and fully initialized by the time the initializers (callbacks) are even invoked (called), this also introduces problems for Spring Data GemFire's support for [Wiring Declarable components|http://docs.spring.io/spring-data-gemfire/docs/1.3.3.RELEASE/reference/html/apis.html#apis:declarable].

The reason this is a problem is that it assumes that the Spring container is the one doing the bootstrapping, and specifically bootstrapping GemFire.

When this is not the case, GemFire parses, creates and initializes components (such as GemFire callbacks... {{CacheListeners}}, {{CacheLoaders}}, {{CacheWriters}}, {{TransactionListeners}}, and so on) as it parses the {{cache.xml}}.  Therefore these components are created before the Spring container has even had a chance to start and get refreshed, and is therefore not even aware these components exist and may have dependencies on Spring beans defined in context.  Technically, these components extending the {{WiringDelcarableSupport}} class cause GemFire to fail to start when used and GemFire is not bootstrapped by Spring appropriately.

For this reason, I am introducing a new {{LazyWiringDeclarableSupport}} class that gets ""notified"", and thus ""observes"" when the Spring container gets created, and then wires the GemFire components requiring bean dependencies defined in the Spring context.","28/Jan/14 11:13 AM;jblum;This feature request, or rather enhancement, is functionally complete and fully tested, and is now waiting for the Spring XD team to provide meaningful feedback based on actual use.  Note, this new functionality will also have relevance at customers sites, such as Bank of Montreal.

PR for review available on GitHub @ [#49|https://github.com/spring-projects/spring-data-gemfire/pull/49].",21/Mar/14 12:46 AM;jblum;See GitHub PR [#49|https://github.com/spring-projects/spring-data-gemfire/pull/49] for more details.,,,,,,,,,,,,,,,,,,,,
Create a Spring Boot Starter POM for Spring Data GemFire,SGF-201,51177,,Improvement,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Complete,jblum,jblum,jblum,02/Oct/13 9:37 AM,02/Mar/15 11:33 AM,10/May/19 2:36 AM,02/Mar/15 11:33 AM,,,,,,,,1.4 M1 (Dijkstra),,,,,,,,,0,SDG,SpringBoot,SpringDataGemFire,SpringGemFire,,,,"It would be very helpful for application developers getting started with GemFire, Spring and Spring Data GemFire in particular, to have a Spring Boot Starter POM (spring-boot-starter-data-gemfire.pom) that can be imported and used with Spring Boot, STS, or in IntelliJ IDEA to get setup and going quickly, developing applications using Spring and GemFire.","Command-line using Spring Boot, Spring Tool Suite or IntelliJ IDEA, basically any development environment where Spring and GemFire can be and are used.",Created the basic Maven module structure for spring-data-gemfire and included a pom.xml and src/main/resources/META-INF/spring.provides file.;25/Mar/14 7:10 PM;jblum;7200,;28/Mar/14 10:25 PM;jblum;28800,Working on gettting-started Maven POM files for Spring with GemFire and just GemFire.;24/Apr/14 5:21 PM;jblum;7200,,,,,,28800,0,43200,150%,28800,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,153705600,,,,,,37667,false,tmarshall(tmarshall),,,,0|i06mbr:,38655,37369,http://projects.spring.io/spring-boot/docs/spring-boot-starters/README.html,,,,,"28/Mar/14 4:00 PM;jblum;The following module and associated files need to be added/modified in *Spring Boot* to create a ""_Starter_"" POM for *Spring Data GemFire*...

{code}
spring-boot-dependencies/pom.xml
spring-boot-starters/pom.xml
spring-boot-starters/spring-boot-starter-data-gemfire/pom.xml
spring-boot-starters/spring-boot-starter-data-gemfire/src/main/resources/META-INF/spring.provides
spring-boot-starters/spring-boot-starter-parent/pom.xml
{code}

*{color:darkred}DONE!{color}*","31/Mar/14 9:26 AM;jblum;Need to create a *Spring Boot* ""_Sample_"" application for *Spring Data GemFire* and *GemFire*; Created...

{code}
spring-boot-samples/pom.xml
spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/SampleDataGemFireApplication.java
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/domain/Gemstone.java
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/service/GemstoneRepository.java
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/service/GemstoneService.java
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/service/GemstoneServiceImpl.java
spring-boot-samples/spring-boot-sample-data-gemfire/src/main/resources/spring-data-gemfire-cache.xml
spring-boot-samples/spring-boot-sample-data-gemfire/src/test/java/sample/data/gemfire/SampleDataGemFireApplicationTest.java
{code}

*{color:darkred}DONE!{color}*","31/Mar/14 9:27 AM;jblum;Need to provide the GemFire Build Engineers with a +correct POM file+ for *GemFire* including all the transitive dependencies for *GemFire*.

*{color:darkred}DONE!!!{color}*","31/Mar/14 9:29 AM;jblum;Completed the *Spring Boot* _Starter_ POM as well as a _Sample_ application for *Spring Data GemFire* and *GemFire*.  Full details available in [PR #606|https://github.com/spring-projects/spring-boot/pull/606] for *Spring Boot*.

*{color:darkred}DONE{color}*",25/Jun/14 3:30 PM;jblum;The GemFire Maven POM file has been updated and will be available in the next release of GemFire (i.e. *7.5*).,,,,,,,,,,,,,,,,,,,
Allow custom implementations of repository methods that support Pageable,SGF-130,45575,,Improvement,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Minor,Works as Designed,dturanski,dturanski,dturanski,27/Sep/12 8:57 AM,23/May/16 9:03 PM,10/May/19 2:36 AM,09/Oct/12 7:52 AM,1.2.0.RC1,,,,,,,1.2.0,,,,,,,,,0,,,,,,,,"Currently I cannot instantiate a repository that includes a custom method implementation such as: 
{code}
public interface CustomPagingRepository {
  public Iterable<Contact> findAll(Pageable pageable);
}

public interface ContactRepository extends GemfireRepository, CustomPagingRepository {
}

public ContactRepositoryImpl implements CustomPagingRepository {
...
}
{code}

I get an Illegal state exception ""Paging is not supported in GemFireRepositories""",,;09/Oct/12 3:19 AM;olivergierke;2700,,,,,,,,,,2700,,,,2700,,,,,,,,,,,,,,09/Oct/12 3:20 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20544/mylyn-context.zip,,,,,,,,,,,,,207619200,,,,,2012-10-09 03:18:59.358,32496,false,jblum(jblum),,,,0|i05vm7:,34328,32196,,,,,,09/Oct/12 3:18 AM;olivergierke;Pull request submitted with test case that shows everything works as expected: https://github.com/SpringSource/spring-gemfire/pull/20,,,,,,,,,,,,,,,,,,,,,,,
Spring Gemfire Continuous Query Container Fails When Implementing the ContinuousQueryListener Interface,SGF-89,43196,,Bug,Closed,SGF,Spring Data GemFire,software,jblum,Spring Data GemFire,http://projects.spring.io/spring-data-gemfire,Major,Fixed,olivergierke,droberts18,droberts18,04/May/12 9:50 AM,23/May/16 9:17 PM,10/May/19 2:36 AM,07/May/12 3:12 AM,1.1.1,,,,,,,1.2.0.RC1,,,,,,,,,0,,,,,,,,"The Continuous Query Container calls the implementing class twice.  Once for the interface method and again for the handleEvent method (which doesn't exist)

Attached is a STS project that demonstrates the issue.

First start the quickstart.CacheServerApp continuous-query-cache-context.xml

Second start the quickstart.CqClientApp then follow the direction on screen. 



Snippet of expected output:
*************************************

This client will update the server cache and its CQ listener will
get events for any changes to the CQ result set.
CQ events provide the base operation (the change to the server's cache),
and the query operation (the change to the CQ's result set).
Press Enter to continue.

___________________________________________________________________
CQ looking for entries whose value is 'ClientFirstValue'...
Putting key1 with value 'ClientFirstValue'
This satisfies the query, so the CqListener will report a query
creation event from the server cache.

    CqListener:
    Received cq event for entry: key1, ClientFirstValue
    With BaseOperation = Create and QueryOperation = Create
May 4, 2012 11:39:22 AM org.springframework.data.gemfire.listener.adapter.ContinuousQueryListenerAdapter handleListenerException
SEVERE: Listener execution failed
java.lang.IllegalArgumentException: Cannot find a suitable method named [quickstart.ContinuousQueryListenerImpl#handleEvent] - is the method public and has the proper arguments?
	at org.springframework.util.Assert.isTrue(Assert.java:65)
	at org.springframework.data.gemfire.listener.adapter.ContinuousQueryListenerAdapter$MethodInvoker.<init>(ContinuousQueryListenerAdapter.java:136)
	at org.springframework.data.gemfire.listener.adapter.ContinuousQueryListenerAdapter.onEvent(ContinuousQueryListenerAdapter.java:278)
	at org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer.executeListener(ContinuousQueryListenerContainer.java:234)
	at org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer$1.run(ContinuousQueryListenerContainer.java:416)
	at java.lang.Thread.run(Thread.java:680)",,;07/May/12 2:53 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,04/May/12 9:50 AM;droberts18;cql-issue.zip;https://jira.spring.io/secure/attachment/19633/cql-issue.zip,,,,,,,,,,,,,221011200,,,,,2012-05-07 02:39:19.61,30615,false,jblum(jblum),,,,0|i05jxr:,32436,30315,,,,,,07/May/12 2:39 AM;olivergierke;I think this is mainly related to a missing {{return}} statement in case of a successfull detection of the listener implementing {{ContinuousQueryListener}} (line 270). If the instance implements the interface we must not try to detect further methods after invocation and simply finish with the invocation of the {{onEvent(…)}} method.,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException: Cannot apply DaoAuthenticationConfigurer to already built object,SEC-2822,61822,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Complete,rwinch,alex.spring@reflexion.net,alex.spring@reflexion.net,19/Jan/15 12:39 PM,06/Feb/16 6:27 AM,10/May/19 2:35 AM,20/Jan/15 2:23 PM,3.2.5,,,,,,,3.2.6,4.0.0.RC2,,,,Java Config,,,,0,,,,,,,,"Created by request from [Rob Winch|https://jira.spring.io/secure/ViewProfile.jspa?name=rwinch].

When initializing global authentication by injecting {{AuthenticationManagerBuilder}} you may get this exception

{code}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire method: public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception; nested exception is org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demo.SecurityConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.test.SpringApplicationContextLoader.loadContext(SpringApplicationContextLoader.java:98)
	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:68)
	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:86)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:72)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:170)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:110)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:212)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:200)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:252)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire method: public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception; nested exception is org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demo.SecurityConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:649)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 40 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demo.SecurityConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:164)
	at org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1365)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:964)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:949)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:606)
	... 42 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demo.SecurityConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:512)
	at org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents.getWebSecurityConfigurers(AutowiredWebSecurityConfigurersIgnoreParents.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:129)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:161)
	... 46 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.add(AbstractConfiguredSecurityBuilder.java:192)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.apply(AbstractConfiguredSecurityBuilder.java:125)
	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.apply(AuthenticationManagerBuilder.java:296)
	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.userDetailsService(AuthenticationManagerBuilder.java:193)
	at demo.SecurityConfig.configureGlobal(SecurityConfig.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 68 common frames omitted
{code}
",spring-boot 1.2.1,;20/Jan/15 12:38 PM;rwinch;14400,,,,,,,,28800,0,14400,50%,28800,0,14400,,,,,,,,SPR-12646,,,,,,,,,,,,,,,,,,,102643200,,,,,2015-01-19 12:43:33.27,9223372036854775807,true,issuemaster(issuemaster),,,,0|i0851j:,9223372036854775807,9223372036854775807,,,,,,19/Jan/15 12:43 PM;rwinch;Thanks for creating this ticket [~alex.spring@reflexion.net]! Do you by chance have a reproducible test for this?,"19/Jan/15 1:01 PM;alex.spring@reflexion.net;Here is a reproducible (with caveats) test case: https://github.com/apogrebnyak/SEC-2815/tree/SEC-2822

This is a mix between user error (60%), Eclipse(20%), and actual problem (20%).

To begin with user error.

The project has 2 {{@Configuration}} classes that have {{@EnableCaching}} annotation: {{CacheConfig}} and {{CacheConfigInvalidSecondEnableCacheDeclaration}}.  They represent the error state of my real project.
Here is the first thing that is not correct from the framework point of view.  Only valid class ({{CacheConfig}}) is imported into the application context.  The other one is not imported directly and not on any {{@ComponentScan}}.

However, it get's even crazier.

Import this application into Eclipse.
Here are the Eclipse details:
{quote}
Eclipse Java EE IDE for Web Developers.

Version: Kepler Release
Build id: 20130614-0229
{quote}

Run JUnit test on the {{demo}} application.

Now change modifier of {{SecurityConfig.configureGlobal}} to public.

Run JUnit test a few more times.  Eventually the error is triggered.  Doing Project->Clean in Eclipse resets the error, until you make changes to {{SecuirtyConfig}} again.
","19/Jan/15 9:08 PM;rwinch;Thanks for logging this and for the test case [~alex.spring@reflexion.net]! For me this seems to boil down to an issue in Spring Framework. I created SPR-12646.

I will look into ways of working around this tomorrow (I have a few ideas).",20/Jan/15 7:47 AM;alex.spring@reflexion.net;Thanks!  It drove me crazy trying to reproduce it. :),"20/Jan/15 12:38 PM;rwinch;An example of this issue can be found at https://github.com/rwinch/spring-security-sample/tree/SEC-2815

We are able to work around SPR-12646 by making AuthenticationConfiguration#enableGlobalAuthenticationAutowiredConfigurer a static method.

The following provides a workaround until the code can be properly fixed:

{code}

import java.util.Map;

import org.apache.commons.logging.*;
import org.springframework.context.*;
import org.springframework.context.annotation.*;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication;
import org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter;

@Configuration
public class PatchSec2822Config {

    @Bean
    public GlobalAuthenticationConfigurerAdapter uniqueEnableGlobalAuthenticationAutowiredConfigurer(ApplicationContext context) {
        return new EnableGlobalAuthenticationAutowiredConfigurer(context);
    }

    private static class EnableGlobalAuthenticationAutowiredConfigurer extends GlobalAuthenticationConfigurerAdapter {
        private final ApplicationContext context;
        private static final Log logger = LogFactory.getLog(EnableGlobalAuthenticationAutowiredConfigurer.class);

        public EnableGlobalAuthenticationAutowiredConfigurer(ApplicationContext context) {
            this.context = context;
        }

        @Override
        public void init(AuthenticationManagerBuilder auth) {
            Map<String, Object> beansWithAnnotation = context.getBeansWithAnnotation(EnableGlobalAuthentication.class);
            if(logger.isDebugEnabled()) {
                logger.debug(""Eagerly initializing "" + beansWithAnnotation);
            }
        }
    }
}
{code}",06/Feb/16 6:27 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/3042,,,,,,,,,,,,,,,,,,
@EnableGlobalMethodSecurity prevents postprocessing of DataSource bean,SEC-2815,61735,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Major,Complete,rwinch,alex.spring@reflexion.net,alex.spring@reflexion.net,13/Jan/15 2:32 PM,06/Feb/16 6:27 AM,10/May/19 2:36 AM,20/Jan/15 12:30 PM,3.2.5,,,,,,,3.2.6,4.0.0.RC2,,,,Core,,,,0,,,,,,,,"Adding `@EnableGlobalMethodSecurity` annotation to my extension of `WebSecurityConfigurerAdapter` prevents embedded database initialization in integration testing.

The problem is very nicely summarized here -> https://gist.github.com/dsyer/ebeb25d5afbdd9242cd5",spring-boot 1.2.0,;20/Jan/15 12:40 PM;rwinch;28800,,,,,,,,57600,0,28800,50%,57600,0,28800,,,,,,,,,,,,,SEC-2661,,,,,,,,,,,,,,102643200,,,,,2015-01-13 23:39:05.698,9223372036854775807,true,issuemaster(issuemaster),,,,0|i084jj:,9223372036854775807,9223372036854775807,,,,,,"13/Jan/15 11:39 PM;snicoll;For the record, you may want to have a look to what was done to fix what seems to be a similar problem for {{@EnableCaching}}. See [5aefcc802ef05|https://github.com/spring-projects/spring-framework/commit/5aefcc802ef05abc51bbfbeb4a78b3032ff9eee3]. The code was a bit polished after that and it requires a 4.1 feature ({{SmartInitializingSingleton}}) but you can do almost the same with a {{ContextRefreshedEvent}}.

",14/Jan/15 8:00 AM;rwinch;Thanks [~snicoll]! I will be sure to take a look at those changes.,"14/Jan/15 10:20 AM;alex.spring@reflexion.net;From dsyer's summary:

{quote}
Authors of {{@Role(ROLE_INFRASTRUCTURE)}} {{Advisor}} beans should ensure that only the {{Pointcut}} part is instantiated early. The other part is {{Advice}}, which will be needed at runtime, and should be instantiated lazily.
{quote}

I understand that it applies to {{MethodSecurityMetadataSourceAdvisor}}, but it is way over my head to see how it can be implemented.  I've tried to extend {{GlobalMethodSecurityConfiguration}} and initialize some beans in it lazily, but it still resulted in the eager initialization.","14/Jan/15 10:22 AM;alex.spring@reflexion.net;BTW, if you manage to fix it for {{MethodSecurityMetadataSourceAdvisor}}, maybe you can submit a similar fix for {{BeanFactoryTransactionAttributeSourceAdvisor}}?","15/Jan/15 11:05 AM;rwinch;I'm unable to reproduce the issue with the associated gist when using Spring Boot 1.1.2+ [example|https://github.com/rwinch/SEC-2815]. Can anyone still experiencing the issue, please post an example they have using the latest Boot and Spring Security?

In the meantime, I'm going to try with a JPA UserDetails example.",15/Jan/15 11:36 AM;rwinch;I am also unable to reproduce using a JPA example. See the [rwinch/SEC-2815 jpa branch|https://github.com/rwinch/SEC-2815].,"15/Jan/15 3:51 PM;alex.spring@reflexion.net;Here is a reproducible test case -> https://github.com/apogrebnyak/SEC-2815

I think, I was able to narrow it down to a weird interaction between {{@EnableGlobalMethodSecurity}} and {{GlobalAuthenticationConfigurerAdapter}}.

I was not able to fail the test case, until I've added dummy {{GlobalAuthenticationConfigurerAdapter}}.  Now, this test application is pretty close to the configuration hierarchy of our application.

In https://github.com/apogrebnyak/SEC-2815/blob/master/src/main/java/demo/SecurityConfig.java, either comment out  {{@EnableGlobalMethodSecurity}} annotation, or remove {{AuthenticationConfiguration}} and the test will succeed.

The problem happens, because {{dataSource}} is never passed to {{DataSourceInitializedPublisher.postProcessAfterInitialization}}, and after that {{DataSourceInitializedEvent}} is never published, and not caught by {{DataSourceInitializer}}.  As a result {{runDataScripts}} is never called.
","15/Jan/15 3:54 PM;rwinch;Excellent! Thanks for the help :) I will give this a try at the latest Monday (I have a pretty busy day tomorrow). 

Obviously this should work, but out of curiosity why are you using GlobalAuthenticationConfigurerAdapter? Do my examples help work around the issue?","16/Jan/15 3:45 AM;david_syer;I added a comment to the gist as well to indicate that while the app now runs (because of changes to make Spring Boot more defensive) it is still badly broken, as indicated by the logs.","16/Jan/15 11:54 AM;alex.spring@reflexion.net;@Rob I've minimized the reproducible case, and submitted a pull request to your repo -> https://github.com/rwinch/SEC-2815/pull/1","16/Jan/15 11:57 AM;alex.spring@reflexion.net;Regarding use of {{GlobalAuthenticationConfigurerAdapter}}.  In our application, it's probably a cut-and-paste by original subsystem developer from some tutorial.

I've tried, however, to change it to use {{configureGlobal}} sample from your {{jpa}} branch, but when I try to wire in my custom repository, I get an exception telling me: *Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@5db96fd5 to already built object*.

Here is full exception trace:
{code}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.rfxtech.monitor.SecurityConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@5db96fd5 to already built object
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.test.SpringApplicationContextLoader.loadContext(SpringApplicationContextLoader.java:105)
	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:68)
	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:86)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:72)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:170)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:110)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:212)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:200)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:252)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@5db96fd5 to already built object
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.add(AbstractConfiguredSecurityBuilder.java:192)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.apply(AbstractConfiguredSecurityBuilder.java:125)
	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.apply(AuthenticationManagerBuilder.java:296)
	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.userDetailsService(AuthenticationManagerBuilder.java:193)
	at com.rfxtech.monitor.SecurityConfig.configureGlobal(SecurityConfig.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 40 common frames omitted
{code}","19/Jan/15 7:42 AM;rwinch;[~alex.spring@reflexion.net] Thanks for your fast responses and helpful feedback. Do you mind creating another ticket for the error you are getting? This is another issue that users have been reporting, but I have been unable to reproduce.","19/Jan/15 1:13 PM;alex.spring@reflexion.net;Added https://jira.spring.io/browse/SEC-2822 for the problem described in my previous comment.

Turns out, there was a user error in my project, where {{@EnableCaching}} was declared in 2 {{@Configuration}} classes (though only one of them was actually {{@Imported}}).",19/Jan/15 1:31 PM;rwinch;[~alex.spring@reflexion.net] Thank you for creating the JIRA. I will be certain to take a look at it.,"20/Jan/15 12:29 PM;rwinch;The issue is related to the {{GlobalMethodSecurityConfiguration}} requiring a Bean {{AuthenticationConfiguration}} that depends on non-infrastructure related Beans. Specifically the following happens:

* Spring's {{AspectJAwareAdvisorAutoProxyCreator}} requires all Advisor (i.e. {{metaDataSourceAdvisor}})
* This in turn attempts to resolve the {{metaDataSourceAdvisor}}, but in order to resolve the {{metaDataSourceAdvisor}} Bean the 
 {{GlobalMethodSecurityConfiguration}} needs to be resolved
* In order to resolve {{GlobalMethodSecurityConfiguration}} all of the {{@Autowired}} fields and methods need to be resolved. This includes {{GlobalMethodSecurityConfiguration#setAuthenticationConfiguration}}.
* {{AuthenticationConfiguration}} requires all {{GlobalAuthenticationConfigurerAdapter}} to be resolved.
* Since {{GlobalAuthenticationConfigurerAdapter}} contains a Bean {{DummyRepository}} that refers to the {{DataSource}}, the {{DataSource}} is created eagerly.
* That means that {{DataSourceInitializedPublisher}} never sees the {{DataSource}} in its {{postProcessAfterInitialization}} method since the {{DataSource}} is created before {{DataSourceInitializedPublisher}}  is registered. This is a general problem with {{DataSourceInitializedPublisher}} in that it expects to be the Bean that post processes {{DataSource}} and {{EntityManagerFactory}} (in that order).

You can find a minimum reproducible test (with no dependency on Spring Security) at [SEC-2815](https://github.com/rwinch/spring-security-sample/tree/SEC-2815). Note that none of the Advice Beans have any external dependencies. HEAD~1 of the same branch demonstrates the issue with Spring Security.

To resolve this we lazily lookup the AuthenticationConfiguration using the ApplicationContext.","21/Jan/15 8:35 AM;alex.spring@reflexion.net;[Rob Winch|https://jira.spring.io/secure/ViewProfile.jspa?name=rwinchRob], thanks for fixing {{GlobalMethodSecurityConfiguration}}.  Could you also take a look at {{ProxyTransactionManagementConfiguration}} (another one described in the [original summary|https://gist.github.com/dsyer/ebeb25d5afbdd9242cd5]) and see if the similar fix applies?

If it is outside of your domain of expertise, could you, please, create JIRA in the relevant group?

Thanks,

-Alex","21/Jan/15 9:06 AM;rwinch;[~alex.spring@reflexion.net] It would likely be better for you to create a ticket in at https://jira.spring.io/browse/SPR with the category Transaction. If you provide a reproducible test case for it, I'm certain it will get looked at quickly.",21/Jan/15 1:14 PM;alex.spring@reflexion.net;Created SPR-12649 to describe problem with {{ProxyTransactionManagementConfiguration}},06/Feb/16 6:27 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2950,,,,,
Documentation states incorrect attributes for <header>,SEC-2777,60986,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Complete,rwinch,jakkeri,jakkeri,03/Dec/14 5:16 AM,06/Feb/16 6:26 AM,10/May/19 2:36 AM,20/Jan/15 2:28 PM,3.2.5,,,,,,,3.2.6,4.0.0.RC2,,,,,,,,0,,,,,,,,"Spring Security 3.2.5 documentation has an example about setting custom HeaderWriters: http://docs.spring.io/spring-security/site/docs/3.2.5.RELEASE/reference/htmlsingle/#headers-delegatingrequestmatcherheaderwriter

Building the given example gives me the following error:

{{org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 90 in XML document from class path resource [applicationContext-spring-security.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 90; columnNumber: 58; cvc-complex-type.3.2.2: Attribute 'header-ref' is not allowed to appear in element 'header'.}}
",,;20/Jan/15 2:28 PM;rwinch;600,,,,,,,,3600,0,600,16%,3600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,102643200,,,,,2014-12-03 07:01:12.892,47059,true,issuemaster(issuemaster),,,,0|i080sn:,46833,46761,,,,,,"03/Dec/14 7:01 AM;rwinch;Thanks. This is a documentation error. Instead, please use:

{code}
<header ref=""beanId""/>
{code}",06/Feb/16 6:26 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/3006,,,,,,,,,,,,,,,,,,,,,,
Consistency with ROLE_,SEC-2758,60440,,Improvement,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Complete,rwinch,gregturn,rwinch,30/Oct/14 11:55 AM,06/Feb/16 6:26 AM,10/May/19 2:36 AM,29/Jan/15 3:10 PM,,,,,,,,4.0.0.RC2,,,,,,,,,0,passivity,,,,,,,"h1. Updated Description

Spring Security does not treat roles consistently. For example, the Java Configuration allows you to perform something like:

{code}
.withUser(""user"").password(""password"").roles(""USER"")
{code}

{code}
http
   .authorizeRequests()
       .anyRequest().hasRole(""USER"")
{code}

Internally, these is automatically prefixed with ""ROLE_"". This means when using any of the following:

{code}
// or any other SpEL annotation
@PreAuthorize(""hasRole('ROLE_USER')"")
{code}

{code}
// JSR 250
@RolesAllowed(""ROLE_USER"")
{code}

{code}
<http use-expressions=""true"">
   <intercept-url pattern=""/**"" access=""hasRole('ROLE_USER')""/>
</http>
{code}

we must restate the ROLE_ even though it has already been expressed as a role.

h1. How should we improve this?

Anytime we see role elsewhere, it should automatically add the prefix of ""ROLE_"" if it is not already there (this helps things remain passive). So that means we should be able to do the following (which is the equivalent of the above example):

{code}
// or any other SpEL annotation
@PreAuthorize(""hasRole('USER')"")
{code}

{code}
// JSR 250
@RolesAllowed(""USER"")
{code}

{code}
<http use-expressions=""true"">
   <intercept-url pattern=""/**"" access=""hasRole('USER')""/>
</http>
{code}

h2. Implementation Details

h3. Expressions

To support expressions we will update the {{SecurityExpressionRoot}} to automatically prefix hasRole and hasAnyRole with ""ROLE_"" if it does not exist. For example:

{code}
public abstract class SecurityExpressionRoot implements SecurityExpressionOperations {
    ...
    private String defaultRolePrefix = ""ROLE_"";

    ...

    /**
     * <p>
     * Sets the default prefix to be added to {@link #hasAnyRole(String...)} or
     * {@link #hasRole(String)}. For example, if hasRole(""ADMIN"") or hasRole(""ROLE_ADMIN"") is passed in,
     * then the role ROLE_ADMIN will be used when the defaultRolePrefix is ""ROLE_"" (default).
     * </p>
     *
     * <p>
     * If null or empty, then no default role prefix is used.
     * </p>
     *
     * @param defaultRolePrefix the default prefix to add to roles. Default ""ROLE_"".
     */
    public void setDefaultRolePrefix(String defaultRolePrefix) {
        this.defaultRolePrefix = defaultRolePrefix;
    }

    /**
     * Prefixes role with defaultRolePrefix if defaultRolePrefix is non-null and
     * if role does not already start with defaultRolePrefix.
     *
     * @param defaultRolePrefix
     * @param role
     * @return
     */
    private static String getRoleWithDefaultPrefix(String defaultRolePrefix, String role) {
        if(role == null) {
            return role;
        }
        if(defaultRolePrefix == null || defaultRolePrefix.length() == 0) {
            return role;
        }
        if(role.startsWith(defaultRolePrefix)) {
            return role;
        }
        return defaultRolePrefix + role;
    }
}
{code}

h3. JSR 250

To support JSR 250 we will update how the {{RolesAllowed}} is parsed by updating {{Jsr250MethodSecurityMetadataSource}} much in the same way as we did with the expressions. This ensures that the {{Jsr250SecurityConfig}} is populated with an authority that is prefixed with ""ROLE_"" by default.

h2. Broken Passivity

If developers return an Authentication or UserDetails that contains authorities that do NOT contain ""ROLE_"" as the prefix, the above changes introduce a non-passive change. What might this look like and how do we fix it?

h3. Fixing Passivity

*Option A (Ensure roles start with ROLE_)*

The first option to fix things is to change our application to return authorities that are prefixed with ""ROLE_"". If we do that, then nothing else is needed. For example, with the in memory based solution we might do the following:

{code}
       ...
        <user name=""user"" password=""password"" authorities=""ROLE_USER""/>
{code}

Obviously in a production system this would likely involve a data migration. Alternatively, you could update your UserDetailsService to prefix the roles programatically.

*Option B (Update Configuration)*

Another option is to reconfigure Spring Security. 

Create a BeanPostProcessor that looks like:

{code}
package org.springframework.security.sample;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.config.BeanPostProcessor;
import org.springframework.core.PriorityOrdered;
import org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource;
import org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler;
import org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler;
import org.springframework.stereotype.Component;

@Component
public class DefaultRolesPrefixPostProcessor implements BeanPostProcessor, PriorityOrdered {

    @Override
    public Object postProcessAfterInitialization(Object bean, String beanName)
            throws BeansException {
        if(bean instanceof Jsr250MethodSecurityMetadataSource) {
            ((Jsr250MethodSecurityMetadataSource) bean).setDefaultRolePrefix(null);
        }
        if(bean instanceof DefaultMethodSecurityExpressionHandler) {
            ((DefaultMethodSecurityExpressionHandler) bean).setDefaultRolePrefix(null);
        }
        if(bean instanceof DefaultWebSecurityExpressionHandler) {
            ((DefaultWebSecurityExpressionHandler) bean).setDefaultRolePrefix(null);
        }
        return bean;
    }

    @Override
    public Object postProcessBeforeInitialization(Object bean, String beanName)
            throws BeansException {
        return bean;
    }

    @Override
    public int getOrder() {
        return PriorityOrdered.HIGHEST_PRECEDENCE;
    }
}
{code}

Then include it in your configuration:

{code}
  <b:bean class=""org.springframework.security.sample.DefaultRolesPrefixPostProcessor""/>
{code}

or

{code}
@Bean
public static DefaultRolesPrefixPostProcessor defaultRolesPrefixPostProcessor() {
    return new DefaultRolesPrefixPostProcessor();
}
{code}

h3. Samples Restoring Passivity

You can find samples attached to this JIRA that demonstrate fixing passivity.

* For XML refer to the differences between SEC-2785-xml.zip and SEC-2785-xml-4.0.zip
* For Java Configuration refer to the differences between SEC-2785-jc.zip and SEC-2785-jc-4.0.zip

h1. Original Description

Just an observation I have when working with Spring Security. You can take it or leave it.

Different APIs use roles differently. What I mean is that certain parts require ROLE_USER, while other parts only require USER. Frankly, I am never sure which one to use and rely upon examples to deduce what. Look at the following:

{code}
@Override
  public void configure(AuthenticationManagerBuilder auth) throws Exception {

    auth.inMemoryAuthentication()
      .withUser(""greg"").password(""turnquist"").roles(""USER"").and()
      .withUser(""ollie"").password(""gierke"").roles(""USER"", ""ADMIN"");
  }
{code}

And then look at this:

{code}
@PreAuthorize(""hasRole('ROLE_USER')"")
public interface ItemRepository extends CrudRepository<Item, Long>  {

  @PreAuthorize(""hasRole('ROLE_ADMIN')"")
  @Override
  Item save(Item s);

  @PreAuthorize(""hasRole('ROLE_ADMIN')"")
  @Override
  void delete(Long aLong);
}
{code}

I think we need to somehow clean this up. Probably a major, breaking affect on things, so I can't imagine such an improvement happening before a major release.

If this was scala, I would retool the APIs to either accept raw strings, which would be ""ROLE_USER"", or accept a case class like Role(""USER""), both meaning the same thing in the end. And then down the road, perhaps deprecating the plain strings.

But walking back to good ole Java, I'm not sure what the best design choice would be. This idea comes to mind:
{code}
public class Role {
    private String roleName;
    public Role(String roleName) { this.roleName = roleName; }
    ...getters/setters perhaps using Lombok...
}

public class RoleUtils {
    public static Role Role(String roleName) { return new Role(roleName); }
}
{code}
Then with some static imports, 

{code}
.withUser(""greg"").password(""turnquist"").roles(Role(""USER""), Role(""ADMIN""));
{code}

A nice little static import would make this work. Just one idea. I imagine that @PreAuthorize requires sticking to strings. If people want to create their own prefixes in lieu of ROLE_, then perhaps they can extend some Spring Security piece of the API and inject it into their configuration.",,;28/Jan/15 8:43 PM;rwinch;43200,;29/Jan/15 3:10 PM;rwinch;28800,,,,,,,14400,0,72000,500%,14400,0,72000,,,,,,,,,,,,,,29/Jan/15 9:53 AM;rwinch;SEC-2758-jc-4.0.zip;https://jira.spring.io/secure/attachment/22633/SEC-2758-jc-4.0.zip,29/Jan/15 9:53 AM;rwinch;SEC-2758-jc.zip;https://jira.spring.io/secure/attachment/22634/SEC-2758-jc.zip,29/Jan/15 9:53 AM;rwinch;SEC-2758-xml-4.0.zip;https://jira.spring.io/secure/attachment/22635/SEC-2758-xml-4.0.zip,29/Jan/15 9:53 AM;rwinch;SEC-2758-xml.zip;https://jira.spring.io/secure/attachment/22636/SEC-2758-xml.zip,,,,,,,,,,102643200,,,,,2015-01-04 09:32:00.598,46514,true,issuemaster(issuemaster),,,,0|i07xuv:,46357,46216,,,,,,"04/Jan/15 9:32 AM;dankirberger;I like to think of Roles as just a specific GrantedAuthority naming convention.

Any time I see ""role"" in the method name, I'd like to pass in ""USER"" and expect it to know I'm talking about ROLE_USER.

Any time I see a method that just asks for an ""Authority"", I'd expect to pass in ""ROLE_USER"".

I think this would be a gentler change that could be phased in with startup warning messages and such.","05/Jan/15 7:00 AM;gregturn;APIs like

{code}
@PreAuthorize(""hasRole('ROLE_USER')"")
{code}

...imply, since ""role"" is an overridable prefix, that the API should really be...

{code}
@PreAuthorize(""hasAuthority('ROLE_USER')"")
{code}

It would appear that 99% of the Spring Security community just go along with the ROLE_ prefix, such that they don't think anything about the semantics of hasRole vs. hasAuthority. I only thought of this point when reading your comment @dankirberger.","27/Jan/15 12:25 PM;rwinch;Agreed with both comments. If the method name (or annotation) has role in it, then ROLE_ should be implied. This is the same with the Java Based configuration.

The following implies ROLE_

{code}
.withUser(""greg"").password(""turnquist"").roles(""USER"")
{code}

The following does not:

{code}
.withUser(""greg"").password(""turnquist"").authorities(""ROLE_USER"")
{code}

The changes I am planning to implement will automatically prefix any annotation or method that has role in it already *if* it is not already prefixed. For example both of the following:

{code}
@PreAuthorize(""hasRole('USER')"")
{code}


{code}
@PreAuthorize(""hasRole('ROLE_USER')"")
{code}

will be treated as ROLE_USER
","17/Nov/15 11:41 PM;hohwille;I ran into this issue as my application broke after an update and I never had any ""ROLE_"" prefix in my app anywhere.
Can someone point out why a ""ROLE_"" prefix is appended at all?
Why does hasRole(""USER"") actually add ""ROLE_USER"" - why not ""USER""?
Is that something from a JEE spec or just a spring-security legacy viral effect?
Thanks for feedback...","29/Nov/15 3:08 AM;rwinch;The reason is because there is more to authorities than just roles. For example, you can have a group based authority. The ROLE_ is a way to distinguish between the type of the authority.

If the expression is stated as hasRole, then this convention should automatically be applied since the user is explicitly stating it is a role based authority. So the problem is that you are not using the ROLE_ prefix. You can follow the migration guide to figure out how to resolve your problem http://docs.spring.io/spring-security/site/docs/4.0.x/reference/htmlsingle/#m3to4 One alternative is to use hasAuthority instead of hasRole. The hasAuthority expression works because it does not imply ROLE_ being appended to the value passed in.",06/Feb/16 6:26 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2984,,,,,,,,,,,,,,,,,,
Eager instantiation in @EnableGlobalMethodSecurity can cause issues for user-defined beans,SEC-2661,58334,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Duplicate,rwinch,david_syer,david_syer,19/Jun/14 6:41 AM,06/Feb/16 6:25 AM,10/May/19 2:36 AM,27/Jan/15 10:16 AM,,,,,,,,3.2.6,4.0.0.RC2,,,,,,,,3,,,,,,,,"There is a mess that you can get into with
{{@EnableGlobalMethodSecurity}}. This annotation
lead to registration of an {{InfrastructureAdvisorAutoProxyCreator}}
which is responsible for locating the `Advisor` bean that provides the
enabled feature. The mess is caused by aggressive bean instantiation
in that component which can cause cascades of unsafe bean instantation
in the middle of the bean post-processing phase of the
{{ApplicationContext}} lifecycle (which is very early and quite
fragile). 

The net result is bad in two ways.

1. Some beans end up uninitialized, or un-postprocessed, which is a
situation that Spring anticipates (since it logs the beans that are
screwed up in a {{BeanPostProcessorChecker}} at INFO level, this is
plain to see for most users), but the side effects can be subtle.

2. Any bean which is accidentally instantiated in this phase and tries
to publish an {{ApplicationEvent}} is in for a nasty shock: the
{{ApplicationContext}} is not ready for them yet and will barf in an
ugly and confusing way, saying that it is not yet ""refreshed"".

Things are bad with {{@EnableGlobalMethodSecurity} because its {{Advisor}} doesn't defer the
instantiation of its dependencies. It needs an {{AuthenticationManager}}
at runtime, and users can put the whole kitchen sink into their
{{AuthenticationManager}} (e.g. JPA), so practically the whole bean
registry can be aggressively instantiated by the user inadvertently
(and reasonably) using Spring to configure his authentication
requirements.",,;27/Jan/15 10:16 AM;rwinch;3600,,,,,,,,57600,0,3600,6%,57600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102643200,,,,,2014-07-08 14:24:00.621,44497,true,issuemaster(issuemaster),,,,0|i07mz3:,44594,44199,https://gist.github.com/dsyer/ebeb25d5afbdd9242cd5,,,,,08/Jul/14 2:24 PM;rwinch;Note this seems to be related to http://stackoverflow.com/questions/24598959/spring-boot-security-cannot-customize-security-when-running-on-embedded-tomc/24641807#24641807,"27/Jan/15 10:16 AM;rwinch;While this issue was created after it didn't have a concrete example to reproduce the issue. The work for this issue was done on SEC-2815

A few notes about the issue:

The issue is related to the {{GlobalMethodSecurityConfiguration}} requiring a Bean {{AuthenticationConfiguration}} that depends on non-infrastructure related Beans. Specifically the following happens:

* Spring's {{AspectJAwareAdvisorAutoProxyCreator}} requires all Advisor (i.e. {{metaDataSourceAdvisor}})
* This in turn attempts to resolve the {{metaDataSourceAdvisor}}, but in order to resolve the {{metaDataSourceAdvisor}} Bean the 
 {{GlobalMethodSecurityConfiguration}} needs to be resolved
* In order to resolve {{GlobalMethodSecurityConfiguration}} all of the {{@Autowired}} fields and methods need to be resolved. This includes {{GlobalMethodSecurityConfiguration#setAuthenticationConfiguration}}.
* {{AuthenticationConfiguration}} requires all {{GlobalAuthenticationConfigurerAdapter}} to be resolved.
* Since {{GlobalAuthenticationConfigurerAdapter}} contains a Bean {{DummyRepository}} that refers to the {{DataSource}}, the {{DataSource}} is created eagerly.
* That means that {{DataSourceInitializedPublisher}} never sees the {{DataSource}} in its {{postProcessAfterInitialization}} method since the {{DataSource}} is created before {{DataSourceInitializedPublisher}}  is registered. This is a general problem with {{DataSourceInitializedPublisher}} in that it expects to be the Bean that post processes {{DataSource}} and {{EntityManagerFactory}} (in that order).

You can find a minimum reproducible test (with no dependency on Spring Security) at [SEC-2815](https://github.com/rwinch/spring-security-sample/tree/SEC-2815). Note that none of the Advice Beans have any external dependencies. HEAD~1 of the same branch demonstrates the issue with Spring Security.

To resolve this we lazily lookup the AuthenticationConfiguration using the ApplicationContext.

You can see https://github.com/spring-projects/spring-security/commit/62649af0aa07b9681e4679a2fa56112a7e3b98cf for the changes",06/Feb/16 6:25 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2881,,,,,,,,,,,,,,,,,,,,,
BadLdapGrammarException with search result from referral,SEC-2405,45773,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Fixed,rwinch,tom.field,tom.field,17/Oct/12 5:18 PM,06/Feb/16 6:23 AM,10/May/19 2:36 AM,20/Nov/13 12:05 PM,,,,,,,,3.2.0,,,,,,,,,2,,,,,,,,"{code}
org.springframework.ldap.BadLdapGrammarException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6. Encountered: <EOF> after : """"
{code}

within DirContextOperations searchForSingleEntryInternal

we have a search result where searchResult.getName() = ldap://blahblah

LdapUtils.convertCompositeNameToString() within the DistinguishedName constructor for this gives ""ldap:""

then DistinguishedName blows up with this exception. 

",,;01/Aug/13 4:23 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102643200,,,,,2012-11-16 16:38:45.944,38442,true,issuemaster(issuemaster),,,,0|i06ptj:,39221,38144,,,,,,"16/Nov/12 4:38 PM;patrickw_nf;I get the exact same error message.

I am using Artifactory, which uses Spring LDAP, to connect to an ActiveDirectory server. It is able to authenticate users who are stored directly on that AD server. However, when it tries to authenticate users who are referred by the first AD server to a second AD server, it seems like Spring LDAP cannot handle the response and spits out the error:

{noformat}
org.springframework.ldap.BadLdapGrammarException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """"
	at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:224) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DistinguishedName.<init>(DistinguishedName.java:199) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntryInternal(SpringSecurityLdapTemplate.java:222) [spring-security-ldap-3.1.0.RELEASE.jar:3.1.0.RELEASE]
	at org.springframework.security.ldap.SpringSecurityLdapTemplate$3.executeWithContext(SpringSecurityLdapTemplate.java:198) [spring-security-ldap-3.1.0.RELEASE.jar:3.1.0.RELEASE]
	at org.springframework.ldap.core.LdapTemplate.executeWithContext(LdapTemplate.java:807) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.LdapTemplate.executeReadOnly(LdapTemplate.java:793) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(SpringSecurityLdapTemplate.java:196) [spring-security-ldap-3.1.0.RELEASE.jar:3.1.0.RELEASE]
	at org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(FilterBasedLdapUserSearch.java:116) [spring-security-ldap-3.1.0.RELEASE.jar:3.1.0.RELEASE]
	at org.artifactory.security.ldap.ArtifactoryBindAuthenticator.authenticate(ArtifactoryBindAuthenticator.java:144) [artifactory-core-2.6.5.jar:na]
	at org.artifactory.security.ldap.LdapServiceImpl.testLdapConnection(LdapServiceImpl.java:67) [artifactory-core-2.6.5.jar:na]
	at org.artifactory.security.SecurityServiceImpl.testLdapConnection(SecurityServiceImpl.java:1413) [artifactory-core-2.6.5.jar:na]
	at sun.reflect.GeneratedMethodAccessor86.invoke(Unknown Source) [na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [na:1.7.0_07]
	at java.lang.reflect.Method.invoke(Method.java:601) [na:1.7.0_07]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318) [spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:196) [spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at $Proxy64.testLdapConnection(Unknown Source) [na:na]
	at sun.reflect.GeneratedMethodAccessor86.invoke(Unknown Source) [na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [na:1.7.0_07]
	at java.lang.reflect.Method.invoke(Method.java:601) [na:1.7.0_07]
	at org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler.invoke(LazyInitProxyFactory.java:416) [wicket-ioc-1.5.3.jar:1.5.3]
	at org.apache.wicket.proxy.$Proxy188.testLdapConnection(Unknown Source) [na:1.5.3]
	at org.artifactory.webapp.wicket.page.config.security.LdapCreateUpdatePanel$2.onSubmit(LdapCreateUpdatePanel.java:232) [artifactory-web-application-2.6.5.jar:na]
	at org.artifactory.common.wicket.component.links.TitledAjaxSubmitLink$1.onSubmit(TitledAjaxSubmitLink.java:60) [artifactory-web-common-2.6.5.jar:na]
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$1.onSubmit(AjaxFormSubmitBehavior.java:172) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1174) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.markup.html.form.Form.process(Form.java:838) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:762) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:158) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:166) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:316) [wicket-core-1.5.3.jar:1.5.3]
	at sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source) [na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [na:1.7.0_07]
	at java.lang.reflect.Method.invoke(Method.java:601) [na:1.7.0_07]
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:260) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:255) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64) [wicket-request-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218) [wicket-core-1.5.3.jar:1.5.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.30]
	at org.artifactory.webapp.servlet.RepoFilter.execute(RepoFilter.java:163) [artifactory-web-application-2.6.5.jar:na]
	at org.artifactory.webapp.servlet.RepoFilter.doFilter(RepoFilter.java:84) [artifactory-web-application-2.6.5.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.30]
	at org.artifactory.webapp.servlet.AccessFilter.useAuthentication(AccessFilter.java:272) [artifactory-web-application-2.6.5.jar:na]
	at org.artifactory.webapp.servlet.AccessFilter.doFilterInternal(AccessFilter.java:181) [artifactory-web-application-2.6.5.jar:na]
	at org.artifactory.webapp.servlet.AccessFilter.doFilter(AccessFilter.java:143) [artifactory-web-application-2.6.5.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.30]
	at org.artifactory.webapp.servlet.RequestFilter.doFilter(RequestFilter.java:57) [artifactory-web-application-2.6.5.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.30]
	at org.artifactory.webapp.servlet.ArtifactoryFilter.doFilter(ArtifactoryFilter.java:72) [artifactory-web-application-2.6.5.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.30]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222) [catalina.jar:7.0.30]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123) [catalina.jar:7.0.30]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472) [catalina.jar:7.0.30]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) [catalina.jar:7.0.30]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99) [catalina.jar:7.0.30]
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929) [catalina.jar:7.0.30]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) [catalina.jar:7.0.30]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) [catalina.jar:7.0.30]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002) [tomcat-coyote.jar:7.0.30]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585) [tomcat-coyote.jar:7.0.30]
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:1813) [tomcat-coyote.jar:7.0.30]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) [na:1.7.0_07]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) [na:1.7.0_07]
	at java.lang.Thread.run(Thread.java:722) [na:1.7.0_07]
Caused by: org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """"
	at org.springframework.ldap.core.DnParserImplTokenManager.getNextToken(DnParserImplTokenManager.java:678) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DnParserImpl.jj_consume_token(DnParserImpl.java:231) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DnParserImpl.SpacedEquals(DnParserImpl.java:114) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DnParserImpl.attributeTypeAndValue(DnParserImpl.java:94) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DnParserImpl.rdn(DnParserImpl.java:58) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DnParserImpl.dn(DnParserImpl.java:23) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:218) [spring-ldap-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	... 75 common frames omitted
{noformat}

I tested using an intentionally-wrong username as well as an intentionally-wrong password, and the errors in those cases are different.

I also did a lot of testing with Tomcat - I set up a security realm in server.xml that uses the first AD server, set all successfully-authenticated users to be able to use the default Tomcat manager, and tested that it is able to handle referrals to the second AD server. Therefore, the problem does not seem to be with the AD servers (unless Tomcat's way of handling them is smoothing out other errors)","09/May/13 5:06 AM;virgiliorey;We have the same problem. 

We have a OpenLDAP server with a tree referred to other OpenLDAP server. 

Using tcpdump, I can see the searching process its correct, the referral its been followed, and there is a successfull response, but then we get that exception on the log, and the authentication is aborted.

Here is the log:

{noformat}
2013-05-09 13:25:34,427 DEBUG --> Searching for user 'virgilio.rey.ext', with user search [ searchFilter: '(uid={0})', searchBase: 'o=empleados', scope: subtree, searchTimeLimit: 0, derefLinkFlag: false ] <-- (org.springframework.security.ldap.search.FilterBasedLdapUserSearch:107)
2013-05-09 13:25:34,431 DEBUG --> Got Ldap context on server 'ldap://server:389/o=xxx,c=es' <-- (org.springframework.ldap.core.support.AbstractContextSource:259)
2013-05-09 13:25:34,695 DEBUG --> Searching for entry under DN 'o=xxx,c=es', base = 'o=empleados', filter = '(uid={0})' <-- (org.springframework.security.ldap.SpringSecurityLdapTemplate:213)
2013-05-09 13:25:34,697 DEBUG --> No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException <-- (org.springframework.security.authentication.DefaultAuthenticationEventPublisher:94)
2013-05-09 13:25:34,697 ERROR --> An internal error occurred while trying to authenticate the user. <-- (org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:202)
org.springframework.security.authentication.InternalAuthenticationServiceException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """"

        at org.springframework.security.ldap.authentication.LdapAuthenticationProvider.doAuthentication(LdapAuthenticationProvider.java:191)
        at org.springframework.security.ldap.authentication.AbstractLdapAuthenticationProvider.authenticate(AbstractLdapAuthenticationProvider.java:61)
        at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:156)
        at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:174)
        at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:195)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
        at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
        at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
        at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
        at org.springframework.security.config.debug.DebugFilter.invokeWithWrappedRequest(DebugFilter.java:69)
        at org.springframework.security.config.debug.DebugFilter.doFilter(DebugFilter.java:58)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:615)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:662)

Caused by: org.springframework.ldap.BadLdapGrammarException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """"
        at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:224)
        at org.springframework.ldap.core.DistinguishedName.<init>(DistinguishedName.java:199)
        at org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntryInternal(SpringSecurityLdapTemplate.java:222)
        at org.springframework.security.ldap.SpringSecurityLdapTemplate$3.executeWithContext(SpringSecurityLdapTemplate.java:198)
        at org.springframework.ldap.core.LdapTemplate.executeWithContext(LdapTemplate.java:807)
        at org.springframework.ldap.core.LdapTemplate.executeReadOnly(LdapTemplate.java:793)
        at org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(SpringSecurityLdapTemplate.java:196)
        at org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(FilterBasedLdapUserSearch.java:116)
        at org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(BindAuthenticator.java:90)
        at org.springframework.security.ldap.authentication.LdapAuthenticationProvider.doAuthentication(LdapAuthenticationProvider.java:178)
        ... 31 more

Caused by: org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """"
        at org.springframework.ldap.core.DnParserImplTokenManager.getNextToken(DnParserImplTokenManager.java:678)
        at org.springframework.ldap.core.DnParserImpl.jj_consume_token(DnParserImpl.java:231)
        at org.springframework.ldap.core.DnParserImpl.SpacedEquals(DnParserImpl.java:114)
        at org.springframework.ldap.core.DnParserImpl.attributeTypeAndValue(DnParserImpl.java:94)
        at org.springframework.ldap.core.DnParserImpl.rdn(DnParserImpl.java:58)
        at org.springframework.ldap.core.DnParserImpl.dn(DnParserImpl.java:23)
        at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:218)
        ... 40 more

2013-05-09 13:25:34,698 DEBUG --> Authentication request failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 6.  Encountered: <EOF> after : """" <-- (org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:346)
{noformat}

There is any workarround? I think this bug is important, and priority should be higher.

Thanks!
",27/Jun/13 2:45 AM;leroy.nicolas;Have you any solution for this issue ?,"01/Aug/13 4:19 AM;marthursson;Terribly sorry for the long response time. The problem with referrals in Spring LDAP is discussed in LDAP-136; in all LdapTemplate methods that construct DirContextAdapter instances, this is automatically handled out of the box (if the appropriate property is set on the ContextSource to follow referrals). The problem here is that they are not using these methods in the specific subclass of LdapTemplate used in Spring Security. The name from the SearchResult is used as-is as an input to DistinguishedName. Since this string starts with ldap:// it's not a valid DistinguishedName and cannot be parsed.

I'm therefore tempted to say that this is not a problem bug in Spring LDAP; it should be handled in Spring Security.

As far as I can figure out, the simplest way to go about this would be for Spring Security to just use {{searchResult.getObject()}}, which can then be directly cast to a DirContextAdapter instance properly populated using the returned attributes and the DN of the found entry (due to DefaultDirContextFactory magic). Note that this requires the SearchControls to have the returningObjFlag set: {{searchControls.setReturningObjFlag(returningObjFlag)}}.

I *think* that should do the trick.","18/Nov/13 3:47 AM;marthursson;[~rwinch]: As suggested in my comment, I don't think this is a bug in Spring LDAP; the problem is solved in Spring LDAP, but Spring Security is not taking advantage of this. I think this issue should be moved to the Spring Security project.","19/Nov/13 11:58 PM;marthursson;I've started working on a fix for this one, will submit pull request shortly.",20/Nov/13 12:43 AM;marthursson;Submitted pull request: https://github.com/spring-projects/spring-security/pull/57,20/Nov/13 12:05 PM;rwinch;Thanks this has been merged into master,06/Feb/16 6:23 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2625,,,,,,,,,,,,,,,
Misleading warning about incorrect redirect URL,SEC-1980,44205,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Fixed,rwinch,hwellmann,hwellmann,25/Jun/12 8:13 AM,06/Feb/16 6:19 AM,10/May/19 2:36 AM,10/Jul/12 12:34 PM,3.1.0,,,,,,,3.1.2,,,,,Namespace,,,,0,,,,,,,,"We've started using SpEL expressions to avoid duplicating URL patterns between {{security.xml}} and our MVC controller mappings.

E.g.

{code:xml}
<form-login 
    login-page=""#{T(com.acme.Sitemap).LOGIN}"" 
    authentication-failure-url=""#{T(com.acme.Sitemap).AUTH_ERROR}""/>
{code}

Now we keep seeing spurious warnings like

{noformat}
FailFastProblemReporter - Configuration problem: #{ T(com.acme.Sitemap).AUTH_ERROR} is not a valid redirect URL (must start with '/' or http(s))
{noformat}

This appears to be caused by {{WebConfigUtils.validateHttpRedirect()}} which checks for a '$' placeholder character but not for a '#' SpEL character.

",,;10/Jul/12 12:34 PM;rwinch;3000,,,,,,,,3600,600,3000,83%,3600,600,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,102643200,,,,,2012-07-10 12:35:11.059,31308,true,issuemaster(issuemaster),,,,0|i05o7j:,33128,31008,,,,,,10/Jul/12 12:35 PM;rwinch;Thank you for reporting this issue. I have pushed a fix to master.,06/Feb/16 6:19 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2204,,,,,,,,,,,,,,,,,,,,,,
DigestAuthenticationFilter documentation is misleading,SEC-1905,41976,,Bug,Closed,SEC,Spring Security,software,rwinch,Moved to https://github.com/spring-projects/spring-security/issues,http://spring.io/spring-security,Minor,Fixed,rwinch,rothera@mac.com,rothera@mac.com,31/Jan/12 3:55 PM,06/Feb/16 6:19 AM,10/May/19 2:36 AM,11/Jul/12 11:14 AM,3.1.0,,,,,,,3.1.2,,,,,Docs and Website,,,,0,,,,,,,,"At http://static.springsource.org/spring-security/site/docs/3.1.x/reference/springsecurity-single.html#digest-processing-filter
Section 10.2.1 states ""The configured UserDetailsService is needed because DigestAuthenticationFilter must have direct access to the clear text password of a user. Digest Authentication will NOT work if you are using encoded passwords in your DAO""

This is a bit misleading. 

The Password just needs to be hashed as MD5(username:realm:password) and then the filter must have the passwordAlreadEncoded attribute
set to true. Care must be taken to ensure that the realm for the DigestAuthenticationEntryPoint is set to the same value that is used by the MD5 Hash.

The hash can be easily found with 
String DigestAuthUtils.encodePasswordInA1Format(String username, String realm, String password)
In the org.springframework.security.web.authentication.www package. ",,;11/Jul/12 11:14 AM;rwinch;2400,,,,,,,,3600,1200,2400,66%,3600,1200,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,102643200,,,,,2012-07-11 11:14:52.294,29308,true,issuemaster(issuemaster),,,,0|i03s8n:,22117,18595,,,,,,11/Jul/12 11:14 AM;rwinch;I have added a footnote that clarifies this point.,06/Feb/16 6:19 AM;issuemaster;This issue has been migrated to https://github.com/spring-projects/spring-security/issues/2136,,,,,,,,,,,,,,,,,,,,,,
Fix classloader issues blocking updating GWT's Jetty to 7.1.6,ROO-1078,32117,,Improvement,Resolved,ROO,Spring Roo,software,eruiz,"Spring Roo is a next-generation rapid application development tool for Java developers. It focuses on higher productivity, stock-standard Java APIs, high usability, avoiding engineering trade-offs and facilitating easy Roo removal.",http://projects.spring.io/spring-roo,Minor,Deferred,jat,amitmanjhi@google.com,amitmanjhi@google.com,08/Jul/10 4:13 AM,06/Oct/10 8:49 PM,10/May/19 2:36 AM,06/Oct/10 8:49 PM,1.1.0.RELEASE,,,,,,,1.1.0.RC1,,,,,GWT,,,,0,,,,,,,,"http://code.google.com/p/google-web-toolkit/source/detail?r=8311 (the update to Jetty 7.0.2) was causing https://jira.springsource.org/browse/ROO-1060 and https://jira.springsource.org/browse/ROO-1073

See if the update to Jetty 7.1.6 is smoother. If not, figure out what the problems are.",,"I found when I removed the debug code in TypeOracleMediator (which loads binary-only annotations in the system classloader), we get back to the CCE in Node.  This is more complicated, since generators ask for annotations in TypeOracle by class literals, so that means the generators have to be loaded from the same classloader that TypeOracleMediator uses to resolve binary-only annotations.  Since generators can come from GWT or user code, just introducing a new classloader for all user code doesn't solve the problem.

Since the solution isn't obvious and I am about to be on vacation for much of the next two weeks, I will roll back to Jetty6 in trunk, and then look at this again after I get back.;27/Jul/10 7:06 AM;jat;115200",,,,,,,,,57600,115200,,,57600,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,271209600,,,,,2010-07-27 06:15:23.248,22143,false,balex(balex),,,,0|i04hmn:,26230,25112,,,,,,"27/Jul/10 6:15 AM;jat;I believe I have this resolved well enough for 2.1M3.  There were two problems:
 1) Jetty7 configures org.apache.commons.logging as a system class, so it gets loaded in the system classloader.  That winds up loading org.apache.commons.logging.impl.SLF4JLogFactory, which loads org.slf4j.impl.StaticLoggerBinder, which winds up loading org.apache.log4j.Appender, all in the system classloader.  Later, org.apache.log4j.ConsoleAppender gets loaded in the WAC classloader, which is then not assignable to the Appender interface which was loaded by the system classloader.  I am not sure where the leakage is and don't have time to find it before I go on vacation, but a workaround is to force Log4J to be treated as a system class as well.  This means that multiple webapps will share a single logging configuration, but since the 99% case with GWT is there is only one webapp and the downside just limits logging flexibility, this seems acceptable for a milestone release.
 2) Jetty is processing the web.xml before the WAC is started, so when it calls WAC.loadClass(""org.springframework.web.context.ContextLoaderListener""), for example, the WAC hasn't set its classloader yet so this winds up using the system classloader.  Later, after the WAC is started with doStart(), Node is loaded under the WAC classloader and a return value is incompatible with the Node loaded earlier under the system classloader.  I think this may be a bug in Jetty (or possibly that I don't understand how the startup sequence is supposed to work), but setting the WAC classloader in its constructor seems to be sufficient to avoid this problem.","27/Jul/10 7:08 AM;jat;Will be address in M3 by rolling back to Jetty6, then work on rolling back to Jetty7.1.6 for M4.","30/Aug/10 5:09 PM;rjrjr@google.com;John, do we need this in 2.1? If so, it needs to happen soon. ","30/Aug/10 5:17 PM;jat;It would be nice, but I don't think it is critical because:
 - the WebSockets spec is currently in flux, and any GWT or Jetty support for it will have to be updated to reflect more recent specs
 - I would think upgrading Jetty would not be considered a new feature, so it could go in after the feature freeze

I don't really have a lot of time to dig into it at the moment, but an external contributor is working on it.  So my feeling is that if it he is able to fix it, we put it in, and if he isn't we don't.  If we want to support the final WebSocket standard before 2.2 comes out, there will probably have to be a point release anyway, as I don't see any way that the standard is going to get finalized before 2.1 ships.","09/Sep/10 12:15 PM;cramsdale;Moving this down to Minor. If it's still an issue for other teams, let's fix it after cutting the 2.1 branch.",04/Oct/10 12:05 PM;rjrjr@google.com;Punted update,,,,,,,,,,,,,,,,,,
Update documentation,LDAP-283,51991,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,marthursson,marthursson,21/Nov/13 5:19 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,21/Nov/13 6:38 AM,2.0.0.M1,,,,,,,2.0.0,,,,,,,,,0,,,,,,,,The documentation could use some polishing.,,;21/Nov/13 6:38 AM;marthursson;28800,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:32.412,38473,false,rwinch(rwinch),,,,0|i06pyf:,39243,38175,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/246,,,,,,,,,,,,,,,,,,,,,,,
Naming and additional methods in LdapNameBuilder,LDAP-282,51893,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,18/Nov/13 4:11 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,18/Nov/13 4:40 AM,2.0.0.M1,,,,,,,2.0.0,,,,,,,,,0,,,,,,,,"The factory methods in {{LdapNameBuilder}} should have the same name. Also, it would be nice with a couple of new methods making it possible to append a full distinguished name to the {{LdapName}} being built, e.g.: {{LdapNameBuilder.newInstance(""dc=261consulting,dc=com"").add(""ou=people"")}}.",,;18/Nov/13 4:41 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:31.889,38374,false,rwinch(rwinch),,,,0|i06pjj:,39176,38076,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/320,,,,,,,,,,,,,,,,,,,,,,,
Support different criteria in automatically generated queries,LDAP-281,51744,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,08/Nov/13 12:10 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,08/Nov/13 2:14 AM,2.0.0.M1,,,,,,,2.0.0,,,,,,,,,0,,,,,,,,"In Spring Data automatic repositories it's possible to specify different conditions, e.g. Like, EndsWith, Not, etc.

This should be supported in {{LdapQueryCreator}}.",,;08/Nov/13 2:14 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:31.201,38227,false,rwinch(rwinch),,,,0|i06owf:,39072,37929,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/319,,,,,,,,,,,,,,,,,,,,,,,
Improve Samples,LDAP-279,51726,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,07/Nov/13 1:42 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,18/Nov/13 2:04 AM,2.0.0.M1,,,,,,,2.0.0,,,,,,,,,0,,,,,,,,"It would be nice to have a really useful sample, e.g. a full user administration application.",,;18/Nov/13 2:04 AM;marthursson;115200,,,,,,,,,0,115200,,,0,115200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:29.485,38211,false,rwinch(rwinch),,,,0|i06otb:,39058,37913,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/317,,,,,,,,,,,,,,,,,,,,,,,
Add support for java.util.Set on attribute values in ODM,LDAP-275,51510,,New Feature,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,23/Oct/13 11:18 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,24/Oct/13 3:02 AM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,Working with security groups and their members you will typically want to represent the members as Sets of Names to make it easier to remove syntactically equal members.,,;24/Oct/13 3:03 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:27.532,37996,false,rwinch(rwinch),,,,0|i06nov:,38876,37698,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/313,,,,,,,,,,,,,,,,,,,,,,,
ODM should use standard Spring Converter for conversions,LDAP-274,51509,,New Feature,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,23/Oct/13 11:15 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,24/Oct/13 3:02 AM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,,,;24/Oct/13 3:02 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:27.088,37995,false,rwinch(rwinch),,,,0|i06non:,38875,37697,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/312,,,,,,,,,,,,,,,,,,,,,,,
ODM: nullable attributes are not removed from LDAP if OdmManagerImpl#update(Object) is used,LDAP-271,51239,,Defect,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,vadzim_kuzmich,vadzim_kuzmich,08/Oct/13 3:11 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,21/Oct/13 11:56 PM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,ldap,,,,,,,"Hi. I've faced with a problem using ODM.

Preconditions:
 a. There is an attributetype in ldap schema - e.g. 'someAttribute'.
 b. The type is mentioned in the MAY list of an objectClass  - e.g. 'someClass'.
 c. There is an ODM entry class mapped to the objectClass. 

Steps to reproduce:
 1. Create an entry and fill it in including a value for 'someAttribute'.
 2. Save it - odmManager.create(entry);
    Result: the entry is in DIT, 'someAttribute' exists and filled.
 3. Update the entry: set null as a new value for 'someAttribute' property.
 4. Save it - odmManager.update(entry);

Actual Result: the entry is in DIT, 'someAttribute' exists and its value the same as in p.2.

Expected Result: the entry is in DIT but without 'someAttribute'.

Note:
 I've looked through OdmManagerImpl source code and found out that before actual update is executed the method OdmManagerImpl#mapToContext(Object,DirContextOperations) is invoked. The method converts Java representation of an Ldap Entry. During the conversion only non-nullable properties of an entry are considered, null field values are ignored at all:
                    if (!attributeInfo.isList()) {
                        // Single valued - get the value of the field
                        Object fieldValue = field.get(entry);
                        // Ignore null field values
                        if (fieldValue != null) {
                            // Convert the field value to the required type and write it into the JNDI context
                            context.setAttributeValue(attributeInfo.getName().toString(), converterManager.convert(fieldValue,
                                    attributeInfo.getSyntax(), targetClass));
                        }
                    } 

Many Thanks,
Vadzim",Ldap Server: OpenLDAP 2.4,;21/Oct/13 11:56 PM;marthursson;60,;21/Oct/13 11:56 PM;marthursson;3600,,,,,,,,0,3660,,,0,3660,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-10-08 03:41:39.56,37729,false,rwinch(rwinch),,,,0|i06mlz:,38701,37431,,,,,,08/Oct/13 3:41 AM;marthursson;This looks like something we should look into for the 2.0 release.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/309,,,,,,,,,,,,,,,,,,,,,,
Support Query DSL,LDAP-269,51150,,New Feature,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,rwinch,rwinch,01/Oct/13 5:34 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,21/Oct/13 11:10 PM,,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"It would be nice if the 2.0 APIs supported Query DSL http://www.querydsl.com

* Consistency with Spring Data would be nice
* Provides type safe queries for users",,;21/Oct/13 11:10 PM;marthursson;28800,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-10-21 23:10:16.571,37641,false,rwinch(rwinch),,,,0|i06m87:,38639,37343,,,,,,"21/Oct/13 11:10 PM;marthursson;Included basic QueryDSL support, including Annotation Processor, Query class and {{QueryDslPredicateExecutor}} support.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/307,,,,,,,,,,,,,,,,,,,,,,
DN mapping in ODM,LDAP-268,51122,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,29/Sep/13 1:15 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,06/Oct/13 10:13 PM,,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"Introduce new annotation: {{@DnAttribute}}, and a {{base()}} attribute on the {{@Entry}} annotation to be used for automatically building and extracting data in Entry objects, eliminating the need to manually building the DN.

It's not uncommon for parts of the DN to be built on data in the domain object. We should make this mapping automatic, so that if the DN is possible to calculate completely from a domain object it shouldn't be necessary to manually extract data from the DN - that should be automatic.
",,;06/Oct/13 10:13 PM;marthursson;43200,,,,,,,,,0,43200,,,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:23.211,37613,false,rwinch(rwinch),,,,0|i06m47:,38621,37315,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/306,,,,,,,,,,,,,,,,,,,,,,,
Custom XML namespace configuration,LDAP-267,51061,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,25/Sep/13 5:22 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,08/Oct/13 11:55 PM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,A custom XML namespace/namespace handler should be created for Spring LDAP.,,;08/Oct/13 11:55 PM;marthursson;72000,,,,,,,,,0,72000,,,0,72000,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:22.523,37553,false,rwinch(rwinch),,,,0|i06lsv:,38570,37255,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/305,,,,,,,,,,,,,,,,,,,,,,,
Spring-data Automatic Repository Support,LDAP-266,51060,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,25/Sep/13 5:20 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,21/Oct/13 11:10 PM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,It should be pretty simple to enable automatic Repository support in the spring-data fashion using ODM functionality.,,;14/Oct/13 7:11 AM;marthursson;57600,,,,,,,,,,57600,,,,57600,,LDAP-269,LDAP-273,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:21.718,37552,false,rwinch(rwinch),,,,0|i06lsn:,38569,37254,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/241,,,,,,,,,,,,,,,,,,,,,,,
Move ODM functionality to LdapTemplate,LDAP-265,51059,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,25/Sep/13 5:14 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,06/Oct/13 10:34 PM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"Since everything is Java 5 now there's really no need for ODM to be a separate module. The {{OdmManager}} methods should be moved to {{LdapTemplate}}.

Configuration of managed classes should be made automatic, i.e. it should not be required to list the managed classes; the system can take care of that automatically.

spring-ldap-odm should be deprecated when this is in place.",,;06/Oct/13 10:34 PM;marthursson;86400,,,,,,,,,0,86400,,,0,86400,,LDAP-268,,,,,,,,,,,LDAP-254,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:21.28,37551,false,rwinch(rwinch),,,,0|i06lsf:,38568,37253,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/304,,,,,,,,,,,,,,,,,,,,,,,
Provide a means to handle exceeded count limit gracefully,LDAP-264,50886,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,marthursson,marthursson,13/Sep/13 6:43 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,18/Nov/13 3:02 AM,,,,,,,,2.0.0,,,,,,,,,0,,,,,,,,"There is currently no easy way to have {{LdapTemplate}} return the results found ""so far"" when a count limit has been exceeded. The {{SizeLimitExceededException}} typically isn't thrown until the maximum number of entries has been processed and there is currently no good way to get hold of them.",,;18/Nov/13 3:03 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:20.845,37380,false,rwinch(rwinch),,,,0|i06l0n:,38443,37082,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/303,,,,,,,,,,,,,,,,,,,,,,,
Add fluent builder support for building filters,LDAP-263,50868,,New Feature,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,12/Sep/13 12:14 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,25/Sep/13 5:08 AM,,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"Similar to e.g. Spring Data Mongo. Something along the lines of:
{code}
        String myFilterString = and()
                .append(is(""objectclass"", ""person""))
                .append(is(""sn"", ""Doe"")).build();
{code}",,;25/Sep/13 5:08 AM;marthursson;86400,,,,,,,,,0,86400,,,0,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:20.419,37362,false,rwinch(rwinch),,,,0|i06kxb:,38428,37064,,,,,,"23/Sep/13 10:32 PM;marthursson;In the end we decided on including search base, search controls and attributes to return in the builder support, like so:
{code}
import static org.springframework.ldap.query.LdapQueryBuilder.query;
....
LdapQuery query = query()
  .base(""ou=Company1, c=Sweden"")
  .searchScope(SearchScope.ONELEVEL)
  .attributes(""cn"")
  .where(""objectclass"").is(""person"").and(""sn"").is(""Person2"");
 
List<String> names = ldapTemplate.search(
  query,
  new AttributesMapper<String>() {
    @Override
    public String mapFromAttributes(Attributes attributes) throws NamingException {
      return (String) attributes.get(""cn"").get();
    }
});
{code}",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/302,,,,,,,,,,,,,,,,,,,,,,
Clean up samples and their test cases.,LDAP-262,50847,,Task,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,11/Sep/13 4:55 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,11/Sep/13 11:18 PM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"The samples have not been looked at for a long time. They are all pretty much identical and I don't think there is a reason for keeping all of them. Ideally there should be one sample and that should obviously be clean and simple.

Note that the samples currently also work as some kind of smoke test for Spring LDAP compatibility with different versions of Spring. This needs to be taken care of: we are claiming compatibility back to 2.0 so we should have integration tests verifying this.",,;11/Sep/13 11:18 PM;marthursson;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:19.999,37341,false,rwinch(rwinch),,,,0|i06kt3:,38409,37043,,,,,,11/Sep/13 11:18 PM;marthursson;Cleaned up among the samples. There is now only two sample projects; one for core and one for odm. Also created separate integration smoke tests explicitly checking Spring LDAP against different Spring versions.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/301,,,,,,,,,,,,,,,,,,,,,,
"Enable configuration of default timeLimit, countLimit and searchScope in LdapTemplate",LDAP-261,50846,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,11/Sep/13 4:15 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,11/Sep/13 4:43 AM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"This would enable use of less verbose method signatures, e.g. if the same time limit is to be used for each and every search operation.",,;11/Sep/13 4:58 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,LDAP-169,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:19.579,37340,false,rwinch(rwinch),,,,0|i06ksv:,38408,37042,,,,,,"11/Sep/13 4:43 AM;marthursson;Enabled configuration of default search scope, time limit, and count limit on {{LdapTemplate}}. These values will be used in all operations, unless something else is explicitly specified in the search method parameters.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/300,,,,,,,,,,,,,,,,,,,,,,
LdapRdn should disregard order in equals and compareTo,LDAP-260,50613,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,marthursson,marthursson,28/Aug/13 6:48 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,28/Aug/13 7:33 AM,,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"The order of the individual Rdn components should be disregarding when comparing two Rdns, e.g. the following should be valid:
{code}
assertEquals(new LdapRdn(""cn=john doe+sn=doe""), new LdapRdn(""sn=doe+cn=john doe""));
{code}",,;28/Aug/13 7:33 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:19.138,37107,false,rwinch(rwinch),,,,0|i06js7:,38243,36809,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/299,,,,,,,,,,,,,,,,,,,,,,,
LdapRdnComponent#compareTo does not compare the same way as equals,LDAP-259,50590,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,27/Aug/13 5:46 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,28/Aug/13 6:46 AM,1.3.2,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"compareTo uses toString() and compares the results, whereas equals uses equalsIgnoreCase comparing keys and values.

This means that it will be easy to come up with examples where compareTo and equals will not render the same results. Need to figure out which method is correct...",,;28/Aug/13 6:46 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:17.798,37084,false,rwinch(rwinch),,,,0|i06jnb:,38221,36786,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/298,,,,,,,,,,,,,,,,,,,,,,,
Modernize Spring LDAP API,LDAP-258,50518,,New Feature,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,26/Aug/13 12:35 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,24/Oct/13 3:07 AM,1.3.1,1.3.2,,,,,,2.0.0.M1,,,,,,,,,1,,,,,,,,"The Spring LDAP core API should be modernized to use generics etc, similar to the overhaul of JdbcTemplate in Spring 3.0. Upgrade to Java 6.

{{SimpleLdapTemplate}} and the other classes in spring-ldap-core-tiger should be deprecated.",,;29/Aug/13 12:22 AM;marthursson;7200,;09/Sep/13 3:46 AM;marthursson;86400,,,,,,,,0,93600,,,0,93600,,LDAP-265,LDAP-266,LDAP-263,LDAP-267,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-29 04:09:23.522,37012,false,rwinch(rwinch),,,,0|i06jan:,38164,36714,,,,,,"28/Aug/13 11:04 PM;marthursson;{{DistinguishedName}} may be obsolete, since Java 5 and higher includes an {{LdapName}} class which should pretty much overlap what we're trying to do with {{DistinguishedName}}. It would be pretty nice to deprecate {{DistinguishedName}} and use {{LdapName}} internally instead. Needs to be looked into more closely if that would be possible, and there's a lot of examples and documentation that needs to be updated should we decide to do this.","29/Aug/13 12:28 AM;marthursson;Initial investigations suggests that the core APIs will not be seriously affected by a {{DistinguishedName}} deprecation. In addition to the general benefit of using standard Java classes where these are available, parse performance in the Java version appears to be vastly superior to the Spring LDAP {{DistinguishedName}} version.","29/Aug/13 4:09 AM;michael-o;This should also include {{LdapRdn}} and other already-available classes.

For what it's worth: I can test code against a huge Active Directory environment with r/o access, if there is any interest.","29/Aug/13 5:01 AM;marthursson;[~michael-o]: Deprecating {{DistinguishedName}} obviously involves deprecating a number of other classes and methods as well, among them {{LdapRdn}}. Half-way through it appears to be a little worse than I expected, but not more than can be managed.","30/Aug/13 4:50 AM;marthursson;[~michael-o]: The deprecation of {{DistinguishedName}} and associated classes and methods is pretty much finished. If you're interested, feel free to try out the 2.0.M1-CI-SNAPSHOT version from the snapshot repository. I'll be happy for any feedback.","30/Aug/13 10:51 AM;michael-o;[~marthursson], I briefly scanned your code. Looks good but there one thing I'd like to know. You do use now {{LdapName}} through out the code but {{DirContextAdapter}}/{{DirContextOperations}} still extend {{DirContext}} only. Shouldn't we completely switch to {{LdapDirContext}}?","09/Sep/13 1:23 AM;marthursson;I assume you are referring to {{LdapContext}}? Since none of the {{LdapContext}} specific methods will have any effect in the {{DirContextAdapter}} I really cannot see any reason why we should extend it.

As a side note: If I were to completely redesign the API from scratch, the {{DirContextAdapter}} would probably be named differently, completely unrelated to the {{DirContext}} interface and only contain methods relevant for and related to Attribute manipulation. Renaming one of the most central classes in the API just for the heck of it doesn't seem motivated though.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/297,,,,,,,,,,,,,,,,
Dependency overhaul,LDAP-257,50517,,Task,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,26/Aug/13 12:32 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,28/Aug/13 5:35 AM,1.3.1,1.3.2,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"Upgrade versions of referenced dependencies, e.g. Spring Framework commons logging, JUnit, mock framework (should be changed to Mockito), etc.

Attempt to remove unnecessary dependencies, such as commons-lang.",,;28/Aug/13 4:48 AM;marthursson;57600,,,,,,,,,,57600,,,,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:16.839,37011,false,rwinch(rwinch),,,,0|i06jaf:,38163,36713,,,,,,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/296,,,,,,,,,,,,,,,,,,,,,,,
Require TempEntryRenamingStrategy to be explicitly configured,LDAP-256,50515,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,marthursson,marthursson,25/Aug/13 11:41 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,09/Sep/13 4:38 AM,1.3.1,1.3.2,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"As described in e.g. LDAP-168, and pointed out int the reference documentation, the {{DefaultTempEntryRenamingStrategy}} doesn't work in some complicated use cases.

Since using the default strategy may cause problems in some problem, the configuration of this should be made explicit so that the dangers of the default strategy will be more obvious.",,;09/Sep/13 4:38 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2016-02-05 21:19:16.393,37009,false,rwinch(rwinch),,,,0|i06j9z:,38161,36711,,,,,,09/Sep/13 4:38 AM;marthursson;Now requiring explicit configuration of {{TempEntryRenamingStrategy}}.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/295,,,,,,,,,,,,,,,,,,,,,,
Specify sourceCompatibility and targetCompatibility,LDAP-253,49978,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,marthursson,rwinch,rwinch,25/Jul/13 1:03 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,29/Jul/13 10:37 PM,,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,Currently the Gradle build will build defaults to use sourceCompatibility and targetCompatibility as the current JDK version (i.e. JAVA_HOME). We should explicitly set this to 1.5 to ensure that the code is 1.5 compatible.,,;29/Jul/13 10:34 PM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-07-29 06:25:10.663,36479,false,rwinch(rwinch),,,,0|i06h2v:,37805,36181,,,,,,29/Jul/13 6:25 AM;marthursson;I'm actually unsure if we should change this for the 'spring-ldap-core' artifact in the 1.3.2 version. Since this will be a patch release we should probably leave it at 1.4 as before.,29/Jul/13 6:43 AM;rwinch;Thanks for pointing that out. I have made the task more generic just to ensure that the values are specified (the values should be based upon the project).,"29/Jul/13 10:37 PM;marthursson;As far as I could figure out, sourceCompatibility and targetCompatibility was already set for all modules, since JAVA_SCRIPT is applied to all modules. Double-checked with javap on some class files.

Source and target compatibility has been changed to 1.4 for the core module.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/293,,,,,,,,,,,,,,,,,,,,
Convert to Gradle Build,LDAP-251,49624,,Task,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,rwinch,rwinch,10/Jul/13 9:25 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,16/Aug/13 4:48 AM,,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,,,;16/Aug/13 2:45 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-16 04:48:36.16,36127,false,rwinch(rwinch),,,,0|i06ffz:,37540,35829,,,,,,16/Aug/13 4:48 AM;marthursson;Think we're happy with this for now.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/291,,,,,,,,,,,,,,,,,,,,,,
spring-ldap-odm should not have its own log4j.properties,LDAP-250,48246,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,kdgregory,kdgregory,19/Apr/13 8:46 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,29/Jul/13 11:47 PM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"Including log4.properties in a library means that it may override an application's own settings (always in the case where an application uses log4j.xml for configuration, and at the classloader's whim when the application uses log4.properties).

This is a particular issue since the version packaged with this library restricts Spring logging to ERROR.

The only way to completely work-around this error is to rebuild the library JAR without the file, and save in a local repository.",all,;29/Jul/13 11:46 PM;marthursson;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-04-20 13:06:49.468,34770,false,rwinch(rwinch),,,,0|i069e7:,36560,34472,https://src.springframework.org/svn/spring-ldap/trunk/odm/src/main/resources/log4j.properties,,,,,"20/Apr/13 1:06 PM;ulsa;I agree, it's wrong to bundle a log4j.properties in src/main. I'm considering just moving the file to src/test/resources instead. Would that cause any other trouble?","20/Apr/13 5:31 PM;kdgregory;src/test/resources makes sense: it lets you log information from test classes, but doesn't end up in the final JAR",29/Jul/13 11:47 PM;marthursson;Moved the file to src/test/resources,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/290,,,,,,,,,,,,,,,,,,,,
Support for Name attribute values in DirContextAdapter (was:LdapRdnComponent lowercases key),LDAP-248,45549,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,michael-o,michael-o,25/Sep/12 6:32 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,24/Oct/13 3:06 AM,1.3.1,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,The class LdapRdnComponent always lowercases the keys. This behavior is not mentioned in RFC2253. I want my RDNs remain as-is/unmodified. Please remove the lowercase operation. DirContext#getNameInNamespace leaves the DN as-is.,,;29/Aug/13 12:22 AM;marthursson;3600,;24/Oct/13 3:06 AM;marthursson;57600,,,,,,,,0,61200,,,0,61200,,LDAP-275,LDAP-274,LDAP-258,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-01 04:31:09.809,32470,false,rwinch(rwinch),,,,0|i05vgn:,34303,32170,,,,,,26/Sep/12 1:15 AM;michael-o;This is related to LDAP-188. The default should always be none. What is the reason to modify the keys at all?,"01/Aug/13 4:31 AM;marthursson;There is a workaround as described in LDAP-188.

You are probably right that the default should have been not to touch the keys at all, but since lowercasing has been the default behavior since the very beginning of this project I think that changing the default would not be advisable.","01/Aug/13 11:24 AM;michael-o;There is no reopen issue.

I do not accept this resolution for several reasons:

1. It breaks RFC2253.
2. This is not documented in the reference documentation.
3. The system property manipulates all Spring webapps in a single JVM.
4. Default behavior *must* be as-is and docs must say that this violates the RFC.",01/Aug/13 11:24 AM;michael-o;5. Introcuding such a behavior has been incorrect from the beginning.,"06/Aug/13 11:02 PM;marthursson;I understand and basically agree with what you're saying. Still, changing the default might make problems for people that are depending on the current behavior.

I think maybe we should explore alternative solutions to this, because the root problem is actually more complicated than case folding.

Distinguished Names can be formatted in a number of different ways and still point to the same entry in the tree. E.g. {{ou=some,  ou=value}}(1) and {{OU=some,ou=value}}(2) represents the same Distinguished Name, disregarding that the actual string representations differ. This was the original reason why we Spring LDAP {{DistinguishedName#toString()}} formats all DNs consistently, regardless of their original string representation (as noted above, this was probably misguided but hey, it's the way it is...) 

This makes it very difficult to work with member attributes, where the values are string representations of Distinguished Names. If the member attribute value is (2) above, trying to remove the attribute value (1) will not work. It's basically the same problem as with the casing problem.

What we need to do is provide a simplification for changing member attributes. If we could somehow e.g. make DirContextAdapter ""Distinguished Name""-aware, I think this would be vastly more useful than discussing the toString representation. Consider the following example (which is how I think we would probaly want it to work):

We have a DirContextAdapter instance populated from LDAP with a member attribute value of {{OU=some, OU=value}}. Now, if we do:
{code}
ctx.removeAttributeValue(""member"", new DistinguishedName(""ou=some,ou=value""));
ModificationItem[] mods = ctx.getModificationItems();
{code}
...we would like for the modification item to be {{DirContext.REMOVE_ATTRIBUTE; OU=some, OU=value}}. I.e. if the input to removeAttributeValue is a DistinguishedName instance, DirContextAdapter would compare the values using DN equality and identify which value we want to remove; the modification item will contain the original value which would eliminate the problem with member manipulation.

Note that doing {{ctx.removeAttributeValue(""member"", ""ou=some,ou=value"")}} or {{ctx.removeAttributeValue(""member"", new DistinguishedName(""ou=some,ou=value"").toString())}} would still *not* work, which I think is quite OK.

What do you think, [~michael-o]?
","28/Aug/13 7:52 AM;marthursson;Since I haven't gotten any additional feedback on this, and since I think that the functionality described in my previous comment would be very useful, I'm going to look into if it would be possible to get this in place.","28/Aug/13 11:09 AM;michael-o;Matthias, sorry for the late response. I wasn't able to take a deeper look into this issue. First of all, thanks for the detailed explanation of the issue. I fully agree that {{DirContextAdapter}} is not on-par with {{DirContext}} and lacks a {{modifyAttributes(Name name, int mod_op, Attributes attrs)}} method. It needs to be extended BUT the new title for this enhancement has nothing to do with the actual issue anymore. The modification of DNs as string will still remain.

I wasn't able anything in RFC2253 nor in RFC4517. The distinguishedNameMatch does not even define caseIgnoreMatch. Did I miss something here too?

To what directory system do your given examples apply? It shouldn't to Active Directory, as far as I know. Moreover, wouldn't it be easier to stick to {{DirContext}} rather than trying to reinvent the wheel for the next major version?","28/Aug/13 10:43 PM;marthursson;The original concern with the case fold problem was described in LDAP-188, which applies to Active Directory (my example was pretty much the one described in LDAP-188).

AFAIK, when using a Distinguished Name for LDAP lookup case will typically be ignored. For instance [equality in standard Java Rdn|http://docs.oracle.com/javase/7/docs/api/javax/naming/ldap/Rdn.html#equals(java.lang.Object)] explicitly disregards casing in keys and values.

The problem in the original issue was that the automatic case conversion caused problems when adding/removing {{DistinguishedName}} strings to e.g. member attributes, where {{DirContextAdapter}} would fail to interpret equivalent distinguished name strings as equal.

To my knowledge this has been the major problem with the case conversion of {{DistinguishedName}}. What I tried to do here is propose a solution for what I understand as the actual root problem, where I honestly think that the case folding is of minor importance if we can just provide a way for {{DirContextAdapter}} to work properly with {{DistinguishedNames}}.

Now, if you have *other* functionality issues than LDAP-188 with the case folding behavior, please be more specific. I do realize that you find it a nuisance that {{DistinguishedName#toString}} returns a string in different case, but I still don't think it's all that important unless I'm presented with an actual functionality problem.

All this aside, since Spring LDAP 2.0 will require Java > 1.6 one possible solution would be to deprecate {{DistinguishedName}} in 2.0, and to use Java {{LdapNames}} internally in the framework instead. This was previously not possible since we were Java 1.4 compatible, but it may very well be completely unnecessary for us to have an own implementation of Distinguished Name. Need to look more closely into whether it would be reasonably easy to deprecate {{DistinguishedName}} however.","29/Aug/13 12:22 AM;marthursson;As a part of LDAP-258 I have started an investigation of the impact of deprecating {{DistinguishedName}} in favor of core Java {{LdapName}}, and the initial findings are very positive. This will however not eliminate the need for {{DirContextAdapter}} to efficiently handle attribute changes concerning distinguished names.","29/Aug/13 4:18 AM;michael-o;Matthias, thanks for the feedback. I can live with the new ticket. Better than fixing old bugs we can create a better -- new -- solution. I should say that we should of course remove duplicate methods from {{DirContextAdapter}} with are already included in {{DirContext}}.",29/Aug/13 4:26 AM;michael-o;Please link this issue to LDAP-258.,24/Oct/13 3:06 AM;marthursson;{{DirContextAdapter}} and ODM now uses distinguished name equality when {{javax.naming.Name}} instances are supplied to attribute modification methods in {{DirContextAdapter}} and in ODM annotated classes with {{javax.naming.Name}} fields (or collections thereof).,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/289,,,,,,,,,,,
Using Spring Security and Spring LDAP together requires that BaseLdapPathBeanPostProcessor implements interface Ordered,LDAP-247,44679,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,marthursson,jfai,jfai,25/Jul/12 2:32 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,30/Jul/13 1:20 AM,1.3.0,1.3.1,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"This issue derives from SEC-1799. A detailed issue description and discussion can be read there.

Ultimately, the Spring Security team concluded that the ordering issue of the bean post processors should be addressed by the Spring LDAP team, whereby BaseLdapPathBeanPostProcessor would implement the Ordered interface. ",,;30/Jul/13 1:21 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-07-30 01:20:52.453,31710,false,rwinch(rwinch),,,,0|i05qxj:,33569,31410,https://jira.springsource.org/browse/SEC-1799,,,,,31/May/13 5:31 PM;jfai;Are there any plans to address this issue? It has been a while ...,"30/Jul/13 1:20 AM;marthursson;Strictly speaking, this is not a change suitable for a patch release, since it changes the API of a core class. This is however not a class that should typically be subclassed or referenced directly in code, and the inconvenience of the problem could be quite significant.

Hence, this has now been fixed as suggested in SEC-1799.

Thanks for the clear description and the helpful example code highlighting the problem.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/288,,,,,,,,,,,,,,,,,,,,,
SchemaToJava doesn't handle dashes in attribute names or attributes that are both may and must,LDAP-246,44526,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,hdeadman,hdeadman,16/Jul/12 7:05 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,16/Aug/13 2:45 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,patch,,,,,,,"There are many attribute names in Active Directory that include dashes (i.e. msDS-Approx-Immed-Subordinates, see http://msdn.microsoft.com/en-us/library/cc220237(v=prot.10).aspx for list).

A dash is not allowed in Java variables or method names so the classes generated by SchemaToJava don't compile. 

Another issue is that some attributes are listed as both may and must, presumably because they are listed one way in a super-type and another way in a sub-type.

The attached patch should address both issues. It adds a ""getJavaName()"" method to AttributeSchema that currently just removes all dashes but could be changed to do additional cleanup if necessary. 

If an attribute is in both the may and must list it should be put in the must list only.  ",,;16/Aug/13 2:45 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,16/Jul/12 7:05 AM;hdeadman;SchemaToJavaPatch;https://jira.spring.io/secure/attachment/20102/SchemaToJavaPatch,17/Jul/12 12:58 PM;hdeadman;SchemaToJavaPatch2;https://jira.spring.io/secure/attachment/20107/SchemaToJavaPatch2,,,,,,,,,,,,102729600,,,,,2013-08-16 02:45:16.621,31556,false,rwinch(rwinch),,,,0|i05pzb:,33415,31256,,,,,,"17/Jul/12 12:57 PM;hdeadman;I made a second version of the patch that includes a template change with a Java comment with some verbiage and a list of all the binary attributes that are in the generated class. The list of binary attributes is output in a format that you can easily add to the spring config for your context. Without this, binary attributes in Active Directory, will show up in Java as byte[] but they will be Strings when they are pulled out of the attribute and then the default converters fail to convert the String and the byte array property. 
/**
	<entry>
		<key>
			<value>java.naming.ldap.attributes.binary</value>
		</key>
		<value> objectGUID userCert ...  </value>
	</entry>
*/",17/Jul/12 12:58 PM;hdeadman;includes template change to output comment with list of binary attributes suitable for setting java.naming.ldap.attributes.binary property,16/Aug/13 2:45 AM;marthursson;Applied the patch and verified that it now works against Active Directory as well.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/236,,,,,,,,,,,,,,,,,,,,
change OdmManagerImplFactoryBean to use LdapTemplate(or LdapOperations) rather than ContextSource,LDAP-245,43643,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,marke,marke,31/May/12 8:16 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,14/Aug/13 7:12 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,2,odm,,,,,,,"OdmManagerImplFactoryBean requires a ContextSource, this is used to create the LdapTemplate in OdmManagerImpl. However this does not allow the full configuration of the LdapTemplate, particularly the property ignorePartialResultException (often required for AD).
By changing to LdapTemplate the ContextSource and additional settings can be provided.
(Example patch included)",,;14/Aug/13 7:12 AM;marthursson;1800,,,,,,,,7200,5400,1800,25%,7200,5400,1800,,,,,,,,,,,,,,31/May/12 8:16 AM;marke;ldaptemplate.patch;https://jira.spring.io/secure/attachment/19711/ldaptemplate.patch,,,,,,,,,,,,,102729600,,,,,2013-08-14 07:12:28.711,30986,false,rwinch(rwinch),,,,0|i05m87:,32807,30686,,,,,,"14/Aug/13 7:12 AM;marthursson;Added new constructor that takes {{LdapOperations}} in {{OdmManagerImpl}}, and a setter in the FactoryBean.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/235,,,,,,,,,,,,,,,,,,,,,,
SchemaToJava fails to generate Java classes,LDAP-240,42710,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,eugen.covaci,eugen.covaci,27/Mar/12 12:55 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,15/Aug/13 6:08 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,SchemaToJava,,,,,,,"I have a LDAP schema with a structure like: country -> locality -> organization -> etc.(other children).
When running SchemaToJava with parameters: -c Locality -k com.ldap.client.domain -l ldap://<my-ip>:389 -o top,locality -u cn=root,c=ro -p <password>, I get the following exception:
--------------------------------------------------------------------------------------------------------
Exception in thread ""main"" java.lang.NullPointerException
	at org.springframework.ldap.odm.tools.SchemaReader.createAttributeSchema(SchemaReader.java:65)
	at org.springframework.ldap.odm.tools.SchemaReader.createObjectClass(SchemaReader.java:141)
	at org.springframework.ldap.odm.tools.SchemaReader.getObjectSchema(SchemaReader.java:33)
	at org.springframework.ldap.odm.tools.SchemaToJava.readSchema(SchemaToJava.java:231)
	at org.springframework.ldap.odm.tools.SchemaToJava.main(SchemaToJava.java:414)
---------------------------------------------------------------------------------------------------------

After some researches, I came to this conclusion: according to org.springframework.ldap.odm.tools.SchemaReader.createAttributeSchema(SchemaReader.java:65), any attribute of type MAY or MUST is mandatory to have SYNTAX, but an attribute like seeAlso - according to RFC4519 - has no SYNTAX (it is the SUP that can deliver his SYNTAX):

DESC	RFC4519: DN of related object
NAME	seeAlso
objectClass	synthetic_JXplorer_schema_object
objectClass	top
OID	2.5.4.34
SUP	distinguishedName

The fix for missing SYNTAX might be to recursively go for the parent's SYNTAX (here distinguishedName).
","Windows 7, Java 1.6.0_31 JDK, Spring LDAP v1.3.1",;15/Aug/13 6:09 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-15 04:12:28.408,30132,false,rwinch(rwinch),,,,0|i05gyn:,31954,29832,,,,,,"15/Aug/13 4:12 AM;marthursson;From RFC 2252, section 4.2, it appears the server can choose whether to return SUP or SYNTAX, or both. In the case of Apache Directory Server 1.5.5 and Active Directory, these servers are friendly enough return both, even for attributes that in the RFC only have SUP.

I think that the proposed solution here is probably correct, and I would like to fix it. However I need to know what LDAP server is being used here so that I can properly fix it, since I don't have an LDAP server that doesn't return the SYNTAX to test against.",15/Aug/13 6:08 AM;marthursson;Now recursively trying parent's SYNTAX if it's missing on an AttributeDefinition.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/234,,,,,,,,,,,,,,,,,,,,,
ContextMapper mapFromContext does not throw javax.naming.NamingException,LDAP-238,42323,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Critical,Complete,marthursson,lucastheisen,lucastheisen,21/Feb/12 4:52 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,28/Aug/13 8:13 AM,1.3.1,,,,,,,2.0.0.M1,,,,,,,,,0,,,,,,,,"Per the [1.3.1 source|https://src.springframework.org/svn/spring-ldap/tags/spring-ldap-1.3.1.RELEASE/core/src/main/java/org/springframework/ldap/core/ContextMapper.java] in the trunk:

{code:title=ContextMapper.java|borderStyle=solid}
public interface ContextMapper {
    /**
     * Map a single LDAP Context to an object. The supplied Object
     * <code>ctx</code> is the object from a single {@link SearchResult},
     * {@link Binding}, or a lookup operation.
     * 
     * @param ctx
     *            the context to map to an object. Typically this will be a
     *            {@link DirContextAdapter} instance, unless a project specific
     *            <code>DirObjectFactory</code> has been specified on the
     *            <code>ContextSource</code>.
     * @return an object built from the data in the context.
     */
    Object mapFromContext(Object ctx);
}
{code}

The 
{code}mapFromContext(Object ctx);{code}
Does not throw the 
{code}javax.naming.NamingException{code}  

This is done in the analogous [AttributesMapper|https://src.springframework.org/svn/spring-ldap/tags/spring-ldap-1.3.1.RELEASE/core/src/main/java/org/springframework/ldap/core/AttributesMapper.java] class, and both are handled by the 

{code}
	/**
	 * Perform a search operation, such as a search(), list() or listBindings().
	 * This method handles all the plumbing; getting a readonly context; looping
	 * through the NamingEnumeration and closing the context and enumeration. It
	 * also calls the supplied DirContextProcessor before and after the search,
	 * respectively. This enables custom pre-processing and post-processing,
	 * like for example when handling paged results or other search controls.
	 * <p>
	 * The actual list is delegated to the {@link SearchExecutor} and each
	 * {@link NameClassPair} (this might be a NameClassPair or a subclass
	 * thereof) is passed to the CallbackHandler. Any encountered
	 * NamingException will be translated using the NamingExceptionTranslator.
	 * 
	 * @param se the SearchExecutor to use for performing the actual list.
	 * @param handler the NameClassPairCallbackHandler to which each found entry
	 * will be passed.
	 * @param processor DirContextProcessor for custom pre- and post-processing.
	 * Must not be <code>null</code>. If no custom processing should take place,
	 * please use e.g.
	 * {@link #search(SearchExecutor, NameClassPairCallbackHandler)}.
	 * @throws NamingException if any error occurs. Note that a
	 * NameNotFoundException will be ignored. Instead this is interpreted that
	 * no entries were found.
	 */
	public void search(SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor) {
		DirContext ctx = contextSource.getReadOnlyContext();

		NamingEnumeration results = null;
		RuntimeException ex = null;
		try {
			processor.preProcess(ctx);
			results = se.executeSearch(ctx);

			while (results.hasMore()) {
				NameClassPair result = (NameClassPair) results.next();
				handler.handleNameClassPair(result);
			}
		}
		catch (NameNotFoundException e) {
			// It is possible to ignore errors caused by base not found
			if (ignoreNameNotFoundException) {
				log.warn(""Base context not found, ignoring: "" + e.getMessage());
			}
			else {
				ex = LdapUtils.convertLdapException(e);
			}
		}
		catch (PartialResultException e) {
			// Workaround for AD servers not handling referrals correctly.
			if (ignorePartialResultException) {
				log.debug(""PartialResultException encountered and ignored"", e);
			}
			else {
				ex = LdapUtils.convertLdapException(e);
			}
		}
		catch (javax.naming.NamingException e) {
			ex = LdapUtils.convertLdapException(e);
		}
		finally {
			try {
				processor.postProcess(ctx);
			}
			catch (javax.naming.NamingException e) {
				if (ex == null) {
					ex = LdapUtils.convertLdapException(e);
				}
				else {
					// We already had an exception from above and should ignore
					// this one.
					log.debug(""Ignoring Exception from postProcess, "" + ""main exception thrown instead"", e);
				}
			}
			closeContextAndNamingEnumeration(ctx, results);
			// If we got an exception it should be thrown.
			if (ex != null) {
				throw ex;
			}
		}
	}
{code}

Method of [LdapTemplate|https://src.springframework.org/svn/spring-ldap/tags/spring-ldap-1.3.1.RELEASE/core/src/main/java/org/springframework/ldap/core/LdapTemplate.java] which states in its javadoc comment that 
{quote}
Any encountered NamingException will be translated using the NamingExceptionTranslator.
{quote}",,;28/Aug/13 8:16 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-07-29 22:49:57.718,29598,false,rwinch(rwinch),,,,0|i04clb:,25414,21415,,,,,,"29/Jul/13 10:49 PM;marthursson;I agree this should be fixed, but changes to the API cannot be done in a patch version. Scheduling this for 2.0.","28/Aug/13 8:13 AM;marthursson;A couple of other interfaces and collaborating classes also needed to have {{NamingException}} added, but these are mostly used internally so I don't think it should be a big problem.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/233,,,,,,,,,,,,,,,,,,,,,
Spring LDAP does not correctly parse DN names that has double-quote in the middle,LDAP-237,42246,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,dataguy12,dataguy12,16/Feb/12 10:43 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,12/Aug/13 2:03 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"DistinguishedName.parse() is confused upon receiving mangled double-quotes character in the middle of the passed parameter.

Example: DN=Roger ""Bunny"" Rabbit,DC=somecompany,DC=com

The double-quote character is mangled (not clear by what, JNDI maybe?) so it looks like this \\"" instead of \"".

Before parse(): DN=Roger \\""Bunny\\"" Rabbit,DC=somecompany,DC=com

After parse(): DN=Roger \\

Solution: I have attached a patch that strips the extra backslash.  Then the parser works and it can handle properly escaped double-quotes just fine.
","JDK:
java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02, mixed mode)

OS: Any

Spring LDAP source code:
URL: https://src.springframework.org/svn/spring-ldap/tags/spring-ldap-1.3.1.RELEASE
Repository Root: https://src.springframework.org/svn/spring-ldap
Repository UUID: 2e8e966d-6415-0410-94b9-dc4e65435d03
Revision: 724
Node Kind: directory
Schedule: normal
Last Changed Author: bhale
Last Changed Rev: 716
Last Changed Date: 2010-11-30 10:00:33 -0600 (Tue, 30 Nov 2010)
",;12/Aug/13 2:21 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,16/Feb/12 10:43 AM;dataguy12;double_quotes_in_dn.diff;https://jira.spring.io/secure/attachment/19417/double_quotes_in_dn.diff,,,,,,,,,,,,,102729600,,,,,2013-08-12 02:03:57.75,29521,false,rwinch(rwinch),,,,0|i0479j:,24551,21295,,,,,,"12/Aug/13 2:03 AM;marthursson;I was initially confused by this one; when using {{DirContextAdapter}} for handling results from searches and lookups, this all worked wonderfully. This was because when constructing the {{DirContextAdapter}}, a {{CompositeName}} was passed to {{DistinguishedName}}'s constructor. When handed a {{CompositeName}}, {{DistinguishedName}} has been able to handle all kinds of {{CompositeName}} deficiencies for a long time, so that worked well.

The problem occurred when the DN was obtained from one of the ""standard"" JNDI classes, e.g. {{Binding#getName()}}, in which case a broken DN string would be returned. I would like to argue that this is actually a bug in Java's LDAP support, but it doesn't hurt to provide a simple fix in Spring LDAP.

Applied the patch, along with a couple of test cases.",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/282,,,,,,,,,,,,,,,,,,,,,,
Rollback intermittently causes data loss,LDAP-234,41165,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Critical,Complete,marthursson,aewhite,aewhite,05/Dec/11 7:29 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,01/Aug/13 2:13 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"While creating a new user and adding that user to some groups, an exception occurred during a group assignment that triggered a rollback. The rollback had a side effect of removing everyone from one of the groups that the user had been added to. This group had several thousand users.  The code used for group assignment is rather trivial...
{code}
    public void assignUserToGroups(String userDN, List<String> groupDNs) throws NamingException {
        for (String groupDN : groupDNs) {
            DirContextOperations context = this.ldapTemplate.lookupContext(groupDN);
            context.addAttributeValue(LdapConstants.LDAP_ATTR_MEMBER, userDN);

            this.ldapTemplate.modifyAttributes(context);
        }
    }
{code}
Using Dynatrace we verified that a failure occurred during the modifyAttributes call. The failure was policy based and not related to Spring LDAP. After the exception is thrown the exception bubbles up to the top layer but at edge of service layer there is a 21 second time period where Spring LDAP is doing something. We then did a check of the AD audit logs and found that the user id for this application was busily removing thousands of users from a group during that time.

The unfortunate part is that we can't be reproduced in our test environment. I have stepped through the code and found that Spring-LDAP does a replace as a rollback correction for an add. This is disconcerting since, for a time, the state of a critical group is solely dependent on the state of an application.

I realize that I am giving a sub optimal bug report due to the hard-to-reproduce aspect however I am out of idea. All evidence on our side points to a Spring-LDAP transaction oddity. I am open to suggestions though.

NOTE: JIRA lists 1.3.1 as an ""unreleased"" version while this is currently the production release version.","Windows Server 2008, ActiveDirectory",;01/Aug/13 2:16 AM;marthursson;300,;01/Aug/13 2:17 AM;marthursson;18000,,,,,,,,0,75900,,,0,75900,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-06-26 08:48:24.73,28494,false,rwinch(rwinch),,,,0|i02q8f:,15959,15072,,,,,,"11/Mar/13 6:07 AM;aewhite;I realize this is old issue but I have a theory I would like to note. During rollback it appears that Spring LDAP is trying to restore a backup of attributes that it obtained before the modification. For large grousp (1500+ members in our case) the member attribute is blank. Instead members have to read using the "";range=<lower>-<upper>"" syntax. I suspect this is the cause of the issue.","10/Apr/13 1:45 PM;aewhite;I have confirmed this is a bug related to rollbacks with large groups in Active Directory. If the group size is greater than 1500 then the AD paging takes over where normal member attribute reads would. To reproduce...

1. Create a group in AD
2. Assigned 1501+ users to the group
3. Add a new user to the group and throw an exception or cause a rollback
4. Read members of the large group

Expected: 1502 members
Actual: 0 members","26/Jun/13 8:48 AM;fischefr;It would be helpful to have at least a workaround. Did one of you try to use the method ""public void modifyAttributes(final Name dn, final ModificationItem[] mods)"" to add an element to an group? It would be interesting if a rollback causes data loss with this method, too.

I'm using spring ldap for AD and have to add people to groups with, soon. As far as I see noone is working at this problem :-(","26/Jun/13 9:04 AM;aewhite;You could setup a test to be sure but I think it only triggers up modified attributes. In this case the problem only eixsts for the members attribute. If you are modifing other attributes or adding attributes I *suspect* the members attribute will be untouched.

The workaround I did was to wrap write calls to Spring LDAP that *could* modify that attribute in a try-catch block and do a manual rollback and throw a special exception that I then tell Spring's transactions manager to ignore. ",30/Jul/13 2:04 AM;marthursson;LDAP-176 will probably come in handy when trying to figure out a solution for this.,30/Jul/13 3:51 AM;marthursson;I think that with the use of the code in sandbox for LDAP-176 we might be able to fix this. Just need to install a windows server with local AD server so that I have something to test against.,"01/Aug/13 2:13 AM;marthursson;Included and elaborated on the AD range retrieval support classes from Marius in LDAP-176. These classes are now part of the public API in core and more importantly - for this particular bug - are used per default when calculating compensating transaction operation for modifications.

Verified against a local test AD server, but it would be quite useful if someone would run a test against a 'real' AD environment (see https://github.com/SpringSource/spring-ldap/blob/master/test/integration-tests-ad/src/test/java/org/springframework/ldap/itest/ad/IncrementalAttributeMapperITest.java for the test case I was using to verify that this works). It should be available in the snapshot builds (http://repo.springsource.org/simple/libs-snapshot-local/org/springframework/ldap/).",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/279,,,,,,,,,,,,,,,,
LdifParser goes into infinite loop when passed a non-LDIF file,LDAP-233,40107,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,aliu,aliu,11/Oct/11 11:30 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,12/Aug/13 2:49 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"org.springframework.ldap.ldif.parser.LdifParser has a corner case in getRecord(), where an input file with no valid LDIF records will cause an infinite loop.  This is because the main switch statement will always hit the default (do nothing) case, and the while loop does not have a condition to terminate at EOF.

This can be fixed by having the record variable initialized to null, and delaying creation of a new LdapAttributes object to inside of the switch's NewRecord case, and then adding a check at the end of the while loop for a null read result.

This allows us to differentiate between files where an LDIF entry is malformed vs cases where no entry was found at all.  See attached for proposed fix.

An easy way to test this code is to feed an empty file into the parser.",,;12/Aug/13 2:49 AM;marthursson;1800,,,,,,,,600,0,1800,300%,600,0,1800,,,,,,,,,,,,,,11/Oct/11 11:47 PM;aliu;LdifParser.java;https://jira.spring.io/secure/attachment/18895/LdifParser.java,11/Oct/11 11:30 PM;aliu;LdifParser.java;https://jira.spring.io/secure/attachment/18894/LdifParser.java,,,,,,,,,,,,102729600,,,,,2013-08-12 02:49:08.445,27667,false,rwinch(rwinch),,,,0|i02epr:,14093,13405,,,,,,11/Oct/11 11:47 PM;aliu;Last version had a typo (returned false instead of null).  Corrected in this version.,12/Aug/13 2:49 AM;marthursson;Added test case and fixed according to patch suggestion.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/278,,,,,,,,,,,,,,,,,,,,,
Upgrade ApacheDS to 1.5.x,LDAP-232,40024,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Major,Complete,,sslavic,sslavic,04/Oct/11 6:03 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,14/Aug/13 1:40 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,1,,,,,,,,,,;14/Aug/13 1:40 AM;marthursson;480,have to learn to add the hour as well.;14/Aug/13 1:45 AM;marthursson;28800,,,,,,,,0,29280,,,0,29280,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-13 04:23:10.362,27582,false,rwinch(rwinch),,,,0|i02epz:,14094,13406,,,,,,13/Aug/13 4:23 AM;marthursson;Rescheduling this for 1.3.2 release; the 1.0.2 version of Apache DS is just not good enough.,13/Aug/13 6:47 AM;marthursson;2.0 version doesn't seem to be quite ready. Lowering scope to 1.5.5,14/Aug/13 1:40 AM;marthursson;Actually found a couple of errors in the test cases along the way.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/277,,,,,,,,,,,,,,,,,,,,
"Pool Validation polluting logs with ""IOException: connection closed"" stacktrace even though it is handled gracefully by framework",LDAP-230,38762,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,timothyja,timothyja,13/Jul/11 9:44 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,14/Aug/13 5:31 AM,1.3.0,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"In the DefaultDirContextValidator class the validateObject method catches this exception when an object in the object pool has become invalid. This is an expected outcome and is handled by the framework.

The problem is that when caught the exception is logged as a warning and the exception stack trace dumped to the logs, as this is not a rare event logs are subsiquently littered with this stacktrace and warnings.

Notes:
------
We use DefaultDirContextValidator in conjunction with the testOnBorrow Pooling setting.

Offending Code:
---------------
     catch (Exception e) {
       this.logger.warn(""DirContext '"" + dirContext + ""' failed validation with an exception."", e);
     }
 
    if (this.logger.isInfoEnabled()) {
       this.logger.info(""DirContext '"" + dirContext + ""' failed validation."");
     }

Stack Trace:
------------
[11/07/11 09:01:53:070 EST] 00000077 DefaultDirCon I org.springframework.ldap.pool.validation.DefaultDirContextValidator validateDirContext DirContext 'javax.naming.ldap.InitialLdapContext@1ace4fd' failed validation.
[11/07/11 09:08:59:130 EST] 00000085 DefaultDirCon W org.springframework.ldap.pool.validation.DefaultDirContextValidator validateDirContext DirContext 'javax.naming.ldap.InitialLdapContext@14e0984' failed validation with an exception.
                                 javax.naming.CommunicationException: connection closed [Root exception is java.io.IOException: connection closed]; remaining name ''
	at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1973)
	at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1818)
	at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1743)
	at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368)
	at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:328)
	at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:313)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:238)
	at org.springframework.ldap.pool.validation.DefaultDirContextValidator.validateDirContext(DefaultDirContextValidator.java:154)
	at org.springframework.ldap.pool.factory.DirContextPoolableObjectFactory.validateObject(DirContextPoolableObjectFactory.java:169)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:780)
	at org.springframework.ldap.pool.factory.PoolingContextSource.getContext(PoolingContextSource.java:394)
	at org.springframework.ldap.pool.factory.PoolingContextSource.getReadOnlyContext(PoolingContextSource.java:374)
	at org.springframework.ldap.core.LdapTemplate.executeReadOnly(LdapTemplate.java:770)
	at org.springframework.ldap.core.LdapTemplate.lookup(LdapTemplate.java:865)",,;14/Aug/13 5:32 AM;marthursson;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,24/Aug/11 10:45 PM;timothyja;spring-ldap-validation.patch;https://jira.spring.io/secure/attachment/18598/spring-ldap-validation.patch,,,,,,,,,,,,,102729600,,,,,2013-08-14 05:31:50.996,1639,false,rwinch(rwinch),,,,0|i010sn:,6006,7162,,,,,,24/Aug/11 10:45 PM;timothyja;I have attached my suggested patch to tone down these expected warnings,14/Aug/13 5:31 AM;marthursson;Modified log levels according to suggestion.,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/275,,,,,,,,,,,,,,,,,,,,,
Mapping objectclass in ODM,LDAP-227,37972,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,vthief,vthief,14/May/11 4:04 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,15/Aug/13 2:45 AM,1.3.1,,,,,,,1.3.2,,,,,,,,,1,,,,,,,,"In my project I use OdmManager and faced a problem. If I specify in my bean-object annotation @Entry with full set of objectclass I get correct result, but if I specify subset of objectclass I get null result. This is situation is not correct, because sometimes we need use only part of data in ldap node. Sometimes we can't know of full set  of objectclass nodes and sometimes ldap subtree consist from nodes with different set of objectclass on same level. In this situations we can't use odm manager. Source code of OdmManagedImpl:

...
445  // OK - checks its the same as the meta-data we have
446  if (!objectClassesFromJndi.equals(metaData.getObjectClasses())) {
447      // The items found has classes in addition to those searched for - so ditch it
448       return null;
449  }
....
",,;15/Aug/13 2:46 AM;marthursson;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-15 02:45:39.895,24839,false,rwinch(rwinch),,,,0|i03e5r:,19836,24242,,,,,,"15/Aug/13 2:45 AM;marthursson;This is quite reasonable.

Had to make a couple of other tweaks as well; in particular the objectclass attribute values are no longer modified on update, since updating an object that doesn't have all of the target object's classes would destroy the target object (particularly, some of the objectclasses would be removed).",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/272,,,,,,,,,,,,,,,,,,,,,,
"empty OrFilter should be false (|) and empty AndFilter should be true (&), see also rfc4526",LDAP-226,36730,,Bug,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,prigaux,prigaux,10/Mar/11 3:25 AM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,14/Aug/13 5:23 AM,1.3.0,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"rfc4526 makes it clear that (|) is false and (&) is true.

currently an empty OrFilter() is """", same for empty AndFilter().
this is logically wrong.


rationale:
AndFilter(""foo=bar"", OrFilter(""uid=u1"", ""uid=u2""))
gives (&(foo=bar)(|(uid=u1)(uid=u2)))

AndFilter(""foo=bar"", OrFilter(""uid=u1""))
gives (&(foo=bar)(uid=u1))

but

AndFilter(""foo=bar"", OrFilter())
gives (&(foo=bar))

so reducing the number of ""or""s gives more results!?
",,;14/Aug/13 5:26 AM;marthursson;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2013-08-14 05:23:47.758,24840,false,rwinch(rwinch),,,,0|i03e5j:,19835,24370,,,,,,"10/Mar/11 3:28 AM;prigaux;a simple fix would be to remove:

              if (queryList.size() <= 0) {
 
                      // only output query if contains anything
                      return buff;
 
              }

from core/src/main/java/org/springframework/ldap/filter/BinaryLogicalFilter.java,
but this implies the LDAP server implements rfc4526","14/Aug/13 5:23 AM;marthursson;While I sympathize with following the extension RFC, I'm hesitant to this change for a couple of reasons:
* It's clearly stated in the RFC that this is an optional feature. Thus, there is no guarantee for it to work, while the current implementation will work on all LDAP servers.
* Current code using empty filters may suddenly stop working if we make this change. Particularly the empty 'or' is tricky. Consider your last example (using current version of Spring LDAP): {{AndFilter(""foo=bar"", OrFilter())}}, which currently renders {{(&(foo=bar))}}. With your suggestion this will instead result in {{(&(foo=bar)(|))}}, which would then in all cases evaluate to {{false}}. The behavior of current applications (regardless of whether the empty filter is intentional or not) will change in a seemingly inexplicable way.
* Following your line rationale above, I would actually like to argue that the current behavior is more logical. Lessening the number of 'or' conditions *does* increase the number of results, which is actually what I would expect. I myself what not familiar with this RFC before, and I suspect that this may be the case for many others, and I would have been very surprised if an {{OrFilter}} with no conditions produced fewer results than one that has conditions.

What I decided to do instead is that I added two new Filter implementations: {{AbsoluteTrueFilter}} and {{AbsoluteFalseFilter}}, to be used for this particular situation.","26/Aug/13 1:27 AM;prigaux;Since I still think the behaviour is wrong for those empty filters [*]
and since it's hard to change the behaviour without breaking backward compatibility,
I suggest displaying a log error (or warning?) message.

[*] see also
http://en.wikipedia.org/wiki/Union_(set_theory)#Arbitrary_unions
http://en.wikipedia.org/wiki/Intersection_(set_theory)#Arbitrary_intersections
http://en.wikipedia.org/wiki/Intersection_(set_theory)#Nullary_intersection
",05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/271,,,,,,,,,,,,,,,,,,,,
Authentication documentation is misleading,LDAP-225,36374,,Improvement,Closed,LDAP,Spring LDAP,software,ulsa,Moved to https://github.com/spring-projects/spring-ldap/issues,http://spring.io/spring-ldap,Minor,Complete,,tb019024,tb019024,16/Feb/11 12:58 PM,05/Feb/16 9:19 PM,10/May/19 2:36 AM,14/Aug/13 3:41 AM,1.3.0,,,,,,,1.3.2,,,,,,,,,0,,,,,,,,"The documentation[1] for using Spring LDAP to authenticate users is slightly misleading. In particular, the first code block (section 10.1) is shown to generally be poor practice by the second code block (section 10.2). I suggest that the two sections be merged, or at least that the first section explicitly specify that it will not work for all directory configurations.

[1] http://static.springsource.org/spring-ldap/docs/1.3.x/reference/html/user-authentication.html",Documentation,;14/Aug/13 3:41 AM;marthursson;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,102729600,,,,,2011-02-24 10:57:57.122,24841,false,rwinch(rwinch),,,,0|i03e5b:,19834,24386,,,,,,"24/Feb/11 10:57 AM;ulsa;I agree that it could perhaps be stated better, but I'm not sure how. Do you have any suggestion?

We try to be very specific about the caveat. A couple of lines below the first example, the following advice can be read:
{noformat}
Some authentication schemes and LDAP servers require some operation to be performed on the
created DirContext instance for the actual authentication to occur. You should test and make
sure how your server setup and authentication schemes behave; failure to do so might result
in that users will be admitted into your system regardless of the DN/credentials supplied.
{noformat}

Are you saying that this is not clear enough, or do you suggest that it should be moved to the previous section?","24/Feb/11 1:15 PM;tb019024;I think that paragraph is pretty clear, but it would be more visible if it were moved earlier in the document. It's not an excuse, but I think it's easy to read the first code snippet, assume that it represents a good solution for something ""simple,"" and skip the rest of the explanation. Obviously people should read the whole page, but since the resulting bug is very subtle, I think it's helpful to be a bit more up-front about this behavior.",14/Aug/13 3:41 AM;marthursson;Added a clarifying note,05/Feb/16 9:19 PM;rwinch;This issue has been migrated to https://github.com/spring-projects/spring-ldap/issues/270,,,,,,,,,,,,,,,,,,,,
Upgrade Twitter sample to latest Spring Integration version,INTSAMPLES-85,44799,,Task,Resolved,INTSAMPLES,Spring Integration Samples,software,hillert,"The Spring Integration Samples project provides  examples, code snippets, and various sample applications covering many aspects of Spring Integration.
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new issues at <a href=""https://github.com/spring-projects/spring-integration-samples/issues"">GitHub</a> </div>
",https://github.com/SpringSource/spring-integration-samples,Minor,Complete,hillert,hillert,hillert,06/Aug/12 9:02 AM,04/Oct/12 10:39 AM,10/May/19 2:36 AM,04/Oct/12 10:39 AM,,,,,,,,2.2 RC3,,,,,Basic,,,,0,,,,,,,,,,;04/Oct/12 10:39 AM;hillert;1200,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,208051200,,,,,,31843,false,hillert(hillert),,,,0|i05rnz:,33688,31543,,,,,,06/Aug/12 10:11 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration-samples/pull/60,04/Oct/12 10:38 AM;hillert;PR Merged,,,,,,,,,,,,,,,,,,,,,,
Add XQuery Support in Spring Integration,INTEXT-12,43793,,New Feature,Resolved,INTEXT,Spring Integration Extensions,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new issues at <a href=""https://github.com/spring-projects/spring-integration-extensions/issues"">GitHub</a> </div>
",,Minor,Complete,amolnayak.spring,amolnayak.spring,amolnayak.spring,08/Jun/12 10:04 AM,16/Aug/12 10:21 PM,10/May/19 2:36 AM,16/Aug/12 10:21 PM,,,,,,,,,,,,,,,,,0,,,,,,,,"Add XQuery support in spring integration with various components like router, aggregator, transformer.",,"Spent time on analysis, then on development and writing test cases for the work done;10/Jun/12 3:09 AM;amolnayak.spring;50400",Refactoring and added initial support for datatype conversion;16/Jun/12 11:24 AM;amolnayak.spring;480,;07/Jul/12 4:03 AM;amolnayak.spring;28800,,,,,,,0,79680,,,0,79680,,,,,,,,,,,,,INTEXT-13,,,,,,,,,,,,,,212284800,,,,,2012-08-13 22:47:05.364,31095,false,hillert(hillert),,,,0|i05mw7:,32915,30795,,,,,,08/Jun/12 10:06 AM;amolnayak.spring;The issue in JIRA INT-581 is a part of this initiative taken as part of this new umbrella JIRA,"07/Jul/12 4:03 AM;amolnayak.spring;The work is all present in the branch currently
https://github.com/amolnayak311/spring-integration/tree/INT-2608
",13/Aug/12 10:47 PM;hillert;Pull request and discussion: https://github.com/SpringSource/spring-integration-extensions/pull/1,16/Aug/12 10:21 PM;hillert;Merged PR,,,,,,,,,,,,,,,,,,,,
"Possible Dropped Reply in JMS Outbound Gateway, with <reply-listener/>",INT-3885,66691,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,grussell,grussell,12/Nov/15 4:41 PM,21/Jan/16 8:14 PM,10/May/19 2:36 AM,21/Jan/16 8:14 PM,4.2.1,,,,,,,2.2.7,3.0.9,4.0.9,4.1.8,4.2.2,JMS Support,,,,0,PullRequest,,,,,,,{{replies}} should be a {{ConcurrentHashMap}}.,,;12/Nov/15 5:16 PM;grussell;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,104112000,,,,,,9223372036854775807,false,abilan(abilan),,,https://github.com/spring-projects/spring-integration/pull/1628,0|i08w9r:,9223372036854775807,9223372036854775807,https://build.spring.io/browse/INT-MJATS41-450/,,,,,20/Jan/16 10:07 PM;grussell;http://stackoverflow.com/questions/34909773/jmsoutboundgateway-error-no-sender-waiting-for-reply,20/Jan/16 10:24 PM;grussell;2.2.x PR: https://github.com/spring-projects/spring-integration/pull/1695,,,,,,,,,,,,,,,,,,,,,,
int-file:inbound-channel-adapter reordering custom scanner file sequence to lexical order,INT-3880,66596,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,Oakdalesoft,Oakdalesoft,05/Nov/15 5:23 PM,16/Nov/15 5:51 PM,10/May/19 2:36 AM,06/Nov/15 7:59 PM,4.1.6,,,,,,,4.2.2,,,,,Documentation,File Support,,,0,PullRequest,,,,,,,"Custom file scanner with non-lexical sequence configured for the inbound-channel-adapter orders the files to be processed correctly but subsequently these get re-ordered in function {{FileReadingMessageSource.scanInputDirectory()}}.

I believe its happening because freshFiles is a Set which gets added to toBeReceived:

{code}
private void scanInputDirectory() {
	List<File> filteredFiles = scanner.listFiles(directory);
	Set<File> freshFiles = new LinkedHashSet<File>(filteredFiles);
	if (!freshFiles.isEmpty()) {
		toBeReceived.addAll(freshFiles);
        }
}
{code}",All,;06/Nov/15 5:44 PM;abilan;60,;06/Nov/15 5:45 PM;abilan;3600,,,,,,,3600,0,3660,101%,3600,0,3660,,,,,,,,,,,,,,,,,,,,,,,,,,,110592000,,,,,2015-11-05 17:32:19.97,9223372036854775807,true,grussell(grussell),,,https://github.com/spring-projects/spring-integration/pull/1620,0|i08vov:,9223372036854775807,9223372036854775807,https://github.com/spring-projects/spring-integration/blob/master/spring-integration-file/src/main/java/org/springframework/integration/file/FileReadingMessageSource.java,,,,,"05/Nov/15 5:32 PM;grussell;Can you provide a test case?

{{freshFiles}} is a {{LinkedHashSet}} so the insert order is retained when the {{addAll}} iterates over it.","05/Nov/15 6:40 PM;Oakdalesoft;Ah, my fault! I need to inject a receptionOrderComparator, its the Queue that's reordering my files. Handy if it was added to the documentation - can close. Sorry/Thanks.",05/Nov/15 8:03 PM;grussell;Consider a documentation improvement.,06/Nov/15 4:59 PM;abilan;The {{receptionOrderComparator}} isn't documented at all...,,,,,,,,,,,,,,,,,,,,
Add Simple get() to RemoteFileOperations,INT-3268,55230,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,20/Jan/14 7:42 AM,30/Jan/14 7:47 PM,10/May/19 2:36 AM,20/Jan/14 8:43 AM,4.0 M2,,,,,,,4.0 M3,,,,,File Support,,,,0,PullRequest,,,,,,,"The current {{get()}} method requires a message (and callback).

Add {{get(String remoteFileName, InputStreamCallback callback)}} for cases where a message is not available rather than forcing the creation of a message just for the purpose of invoking get().",,;20/Jan/14 8:01 AM;grussell;900,,,,,,,,7200,0,900,12%,7200,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,167184000,,,,,,41709,false,grussell(grussell),,,,0|i078tz:,42303,41411,,,,,,20/Jan/14 8:01 AM;grussell;PR: https://github.com/spring-projects/spring-integration/pull/1028,,,,,,,,,,,,,,,,,,,,,,,
AMQP inbound gateway namespace attribute missing: reply-timeout,INT-3254,52551,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,ksw,ksw,03/Jan/14 7:25 AM,30/Jan/14 7:47 PM,10/May/19 2:36 AM,05/Jan/14 8:28 AM,2.2.1,,,,,,,4.0 M3,,,,,AMQP Support,,,,0,PullRequest,,,,,,,"it looks like this is a bug in the namespace; the attribute you need to set is reply-timeout, but it is not currently available on the namespace for the AMQP inbound gateway.",,;03/Jan/14 1:45 PM;grussell;1800,,,,,,,,14400,0,1800,12%,14400,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,168652800,,,,,2014-01-03 13:44:37.301,39032,false,grussell(grussell),,,,0|i06suv:,39713,38734,http://forum.spring.io/forum/spring-projects/integration/742272-splitter-aggregator-w-amqp-gateway,,,,,03/Jan/14 1:44 PM;grussell;PR: https://github.com/spring-projects/spring-integration/pull/1021,,,,,,,,,,,,,,,,,,,,,,,
Consider Making the WARN Logs in INT-3004 Fatal,INT-3005,48424,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,grussell,grussell,03/May/13 12:49 PM,30/Jan/14 7:47 PM,10/May/19 2:36 AM,29/Jan/14 9:56 AM,,,,,,,,4.0 M3,,,,,Core,,,,0,PullRequest,,,,,,,"Currently 'late', or 'extra' replies in {{sendAndReceive}} are silently dropped.

INT-3004 Adds {{WARN}} log entries.

Consider an option to make the condition fatal, perhaps using some global setting.",,;27/Jan/14 2:39 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,INT-2500,,,,,,,,,,,,,,,,,,,,,,,,,166406400,,,,,2013-11-21 00:46:51.852,34944,false,grussell(grussell),,,,0|i06agv:,36734,34646,http://forum.springsource.org/showthread.php?136732-In-my-example-how-to-handle-errors-with-agregator,,,,,"21/Nov/13 12:46 AM;abilan;Will it OK, if I provide a {{setLateReplyLogLevel}} and add {{switch}} logic to the {{TemporaryReplyChannel#send}}?","21/Nov/13 6:31 AM;grussell;The problem is that most {{MessagingTemplate}} s, although they are {{BeanFactoryAware}} do not have a {{BeanFactory}}.

We would either have to inject the property, or inject the {{BeanFactory}} (when available) into every {{MessagingTemplate}}.

Of course, if we do that, we could also have a global option for registering the header channels too.

It's probably not all that much code, but my concern is with all the additional tests we'd need.

So my vote would be to punt this to 3.1 - we already have a big leap forward in 3.0 by emitting a WARN log for late replies.

If we do that, we should remove it as a subtask of INT-2500 so we can resolve that one.","21/Jan/14 7:52 AM;abilan;Looks like we don't have now any chance to implement this feature, as far as {{TemporaryReplyChannel}} together with {{GenericMessagingTemplate}} now are moved to the Spring Messaging.
Let's close as invalid or try to push to SF JIRA.",21/Jan/14 8:38 AM;grussell;GenericMessagingTemplate has a property {{throwExceptionOnLateReply}}.,27/Jan/14 2:38 AM;abilan;PR: https://github.com/spring-projects/spring-integration/pull/1037,29/Jan/14 9:56 AM;grussell;Merged,,,,,,,,,,,,,,,,,,
MessagingTemplate: Emit WARN Log Message When Late Replies are Sent,INT-3004,48422,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,03/May/13 12:47 PM,06/Dec/13 2:26 PM,10/May/19 2:36 AM,10/May/13 12:11 AM,,,,,,,,3.0 M2,,,,,,,,,0,PullRequest,,,,,,,"Currently 'late', or 'extra' replies in {{sendAndReceive}} are silently dropped.

There are two categories of late replies:

 - the sender already timed out on the receive
 - the sender caught an exception and will never execute receive()

In the second case the thread might have exited {{sendAndReceive}} or it might be waiting on a {{receive()}} in a new replyChannel after sending to the error channel.

In addition, 'extra' replies are simply ignored (if the sender already received a reply).

In the referenced forum post, the 'extra' reply received after the gateway had already processed an {{ErrorMessage}} was just ignored because the result was sent to the original reply channel.

Add {{WARN}} log entries when any of these conditions arise, to assist in debugging these situations.
",,;03/May/13 12:59 PM;grussell;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,INT-3005,INT-3227,,,,,,,,,,,,,,,,,,189302400,,,,,2013-05-10 00:11:16.708,34942,true,grussell(grussell),,,,0|i06agf:,36732,34644,http://forum.springsource.org/showthread.php?136732-In-my-example-how-to-handle-errors-with-agregator,,,,,03/May/13 12:58 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/800,10/May/13 12:11 AM;abilan;Merged by Mark Fisher,,,,,,,,,,,,,,,,,,,,,,
enhancement 'routing-key-expression' & 'exchange-name-expression' with 'BeanFactoryResolver',INT-2999,48367,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,monkeyhands,monkeyhands,29/Apr/13 9:20 AM,24/May/13 8:02 AM,10/May/19 2:36 AM,07/May/13 10:26 AM,2.2.3,,,,,,,3.0 M2,,,,,AMQP Support,,,,0,PullRequest,spel,,,,,,"The amqp adapter routing_key_expression does not support calling a bean method to resolve a routing key.

See the Reference URL for full details.",,;29/Apr/13 3:42 PM;grussell;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,190166400,,,,,2013-04-29 15:41:02.023,34888,false,grussell(grussell),,,,0|i06a4n:,36679,34590,http://forum.springsource.org/showthread.php?136873-Use-bean-method-in-routing-key-expression-of-a-int-amqp-outbound-channel-adapter&p=444284#post444284,,,,,29/Apr/13 3:41 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/794,,,,,,,,,,,,,,,,,,,,,,,
Change 'header-mapper' annotaion expected-type from 'HeaderMapper' to the 'AmqpHeaderMapper',INT-2971,47961,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,29/Mar/13 5:17 AM,24/May/13 8:02 AM,10/May/19 2:36 AM,09/Apr/13 7:25 AM,3.0 M1,,,,,,,3.0 M2,,,,,AMQP Support,,,,0,amqp,documentation,PullRequest,xsd,,,,"Both AMQP inbound and outbound endpoints expect {{AmqpHeaderMapper}} 'headerMapper' property type, but XSD requires {{HeaderMapper}} type for {{header-mapper}} ref-attribute. {{AmqpHeaderMapper}} isn't an instance of {{HeaderMapper}}. 
In additions there is no any description of {{header-mapper}} attribute in the XSD.
IMO, in the Reference Manual AMQP paragraph should say about {{AmqpHeaderMapper}} too, not {{HeaderMapper}}.",,;01/Apr/13 1:18 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,192672000,,,,,,34492,true,grussell(grussell),,,,0|i067rj:,36296,34194,http://forum.springsource.org/showthread.php?135758-http-outbound-gateway&p=441708#post441708,,,,,01/Apr/13 1:18 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/776,,,,,,,,,,,,,,,,,,,,,,,
Core XSD: move 'charset' attribute declaration to the new 'object-to-string-transformer' complexType,INT-2958,47720,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,12/Mar/13 12:07 PM,24/May/13 8:02 AM,10/May/19 2:36 AM,13/Mar/13 9:46 AM,3.0 M1,,,,,,,3.0 M2,,,,,Core,,,,0,chain,,,,,,,"Recent {{<object-to-string-transformer>}} improvement introduced new 'charset' attribute. 
It works fine, but it is placed in the common 'inputOutputChannelGroup' attributeGroup. It produces confused visual side effect for all other root components.
From other side: {{<object-to-string-transformer>}}'s 'charset' isn't available within {{<chain>}} now. It's a bug.",,;12/Mar/13 1:12 PM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,194313600,,,,,,34305,true,grussell(grussell),,,,0|i066nz:,36118,34007,,,,,,12/Mar/13 1:12 PM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/764,,,,,,,,,,,,,,,,,,,,,,,
Improve <event:inbound-channel-adapter> perfomance,INT-2935,47436,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,15/Feb/13 4:31 AM,02/Jun/14 4:16 AM,10/May/19 2:36 AM,08/May/13 10:20 AM,,,,,,,,3.0 M2,,,,,Event Support,,,,0,PullRequest,,,,,,,"According to comments from linked PR, there is some overhead in the {{ApplicationEventListeningMessageProducer}}, when it accepts all {{ApplicationEvent}}s and then filters them by provided types. 
",,;18/Feb/13 12:26 AM;abilan;28800,,,,,,,,14400,0,28800,200%,14400,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,196300800,,,,,2013-02-15 06:26:51.105,34021,true,abilan(abilan),,,,0|i064yf:,35841,33723,https://github.com/SpringSource/spring-integration/pull/743,,,,,"15/Feb/13 4:32 AM;abilan;That is what is still hot in my head and what I was frequently.
So, I'm going to fix it soon.","15/Feb/13 6:26 AM;grussell;Just one thing to keep in mind... The current logic iterates over the configured types and takes an early exit *as soon* as it finds a matching type. If we ""register beans of type {{SmartApplicationListener}} each for provided event-type"", we will have to avoid duplicate events if types in the list are in the same hierarchy.","15/Feb/13 6:34 AM;abilan;Thanks, Gary!
But I've found another internal solution:
{code:java}
private void configureListeners() {
	this.applicationContext.getApplicationListeners().removeAll(this.listeners);
	this.listeners.clear();
	for (Class<? extends ApplicationEvent> eventType : eventTypes) {
		MessageProducerApplicationListener listener = new MessageProducerApplicationListener(eventType);
		this.applicationContext.addApplicationListener(listener);
		this.listeners.add(listener);
	}
}
{code}
Which invoked twice: {{onInit}} & {{setEventTypes}}.
Here we should still allow to reconfigure {{eventTypes}} at runtime, as it is right now.","15/Feb/13 6:46 AM;grussell;I guess I should wait for your PR but I see 2 problems.

1. Modifying the listener list at runtime could cause lost events.
2. If eventTypes contains {{'Foo'}} and {{'Bar extends Foo'}}, you will register a listener for each, and we'll get 2 {{Messages}} for every {{Bar}} event.","15/Feb/13 7:04 AM;abilan;{quote}
1. Modifying the listener list at runtime could cause lost events.
{quote}
We're getting the same with {{ApplicationEventListeningMessageProducer#stop()}} now...
{quote}
2. If eventTypes contains 'Foo' and 'Bar extends Foo', you will register a listener for each, and we'll get 2 Messages for every Bar event.
{quote}
Got it. Will consider. 
BTW it's not so easy ;)
",18/Feb/13 12:25 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/750,,,,,,,,,,,,,,,,,,
Eliminate Default Fall-back to 'conversionService' from Application Context,INT-2928,47383,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,11/Feb/13 11:34 PM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,12/Feb/13 8:02 AM,,,,,,,,3.0 M1,,,,,Core,,,,0,PullRequest,,,,,,,"There was really right idea to introduce Spring Integration own 'integrationConversionService'. We did not want to assume that the {{ConversionService}} used for dependency injection and bean creation within the container itself would necessarily use the same {{Converters}} that are needed for integration flows at runtime. They really are two different concerns.
The rationale for not falling-back is the same; we create a new {{DefaultConversionService}} instead of using one that might have been configured explicitly for use within the BeanFactory. The main idea is that someone may register {{Converters}} that are intended for use when wiring Bean constructor-args and properties that would actually produce unintended consequences if used at runtime for Spring Integration expression-evaluation against Messages, etc.
If on the other hand, someone DOES want to use the {{BeanFactory}}'s {{ConversionService}} for Spring Integration also, they can simply register one line of config with:
{code:xml}
<alias name=""conversionService"" alias=""integrationConversionService""/>
{code}
",,;11/Feb/13 11:35 PM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,196819200,,,,,,33968,true,grussell(grussell),,,,0|i064n3:,35790,33670,,,,,,11/Feb/13 11:35 PM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/722,,,,,,,,,,,,,,,,,,,,,,,
Sporadic failure of PipelineNamedReplyQueuesJmsTests,INT-2908,47244,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,30/Jan/13 12:54 AM,06/Mar/13 2:30 PM,10/May/19 2:36 AM,05/Feb/13 11:58 AM,2.2.1,,,,,,,2.2.2,3.0 M1,,,,,,,,0,PullRequest,,,,,,,Looks like {{timeouts}} property is shared between Gradle's parallel executions threads.,,;30/Jan/13 2:19 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,197942400,,,,,,33829,true,grussell(grussell),,,,0|i063sf:,35652,33531,,,,,,30/Jan/13 2:19 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/726,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Gradle 1.4 ,INT-2907,47243,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,29/Jan/13 11:45 PM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,01/Feb/13 5:17 PM,,,,,,,,3.0 M1,,,,,Build,,,,0,gradle,PullRequest,,,,,,,,;30/Jan/13 1:29 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,01/Feb/13 2:47 PM;grussell;mailtestshung.txt;https://jira.spring.io/secure/attachment/20923/mailtestshung.txt,,,,,,,,,,,,,197683200,,,,,2013-02-01 14:46:41.37,33828,false,grussell(grussell),,,,0|i063s7:,35651,33530,,,,,,30/Jan/13 1:29 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/725,"01/Feb/13 2:46 PM;grussell;We seem to have a problem with Gradle 1.4 and the mail tests. Every time I run a build, it hangs on 26 tests completed. I have attached a thread dump that I took on one test. On my most recent test, I let it run, and we got an OOM...

{code}
:spring-integration-mail:compileTestJava
:spring-integration-mail:processTestResources
:spring-integration-mail:testClasses
:spring-integration-mail:test
Exception in thread ""pool-2-thread-1"" java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.HashMap.<init>(HashMap.java:187)
	at java.util.HashMap.<init>(HashMap.java:223)
	at org.springframework.integration.MessageHeaders.<init>(MessageHeaders.java:99)
	at org.springframework.integration.message.GenericMessage.<init>(GenericMessage.java:68)
	at org.springframework.integration.support.MessageBuilder.build(MessageBuilder.java:298)
	at org.springframework.integration.mail.ImapIdleChannelAdapter$1.run(ImapIdleChannelAdapter.java:230)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Unexpected exception thrown.
java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:267)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1114)
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330)
	at org.gradle.messaging.remote.internal.Message.send(Message.java:29)
	at org.gradle.messaging.serialize.kryo.JavaSerializer$JavaWriter.write(JavaSerializer.java:62)
	at org.gradle.messaging.remote.internal.hub.MethodInvocationSerializer$MethodInvocationWriter.writeArguments(MethodInvocationSerializer.java:66)
	at org.gradle.messaging.remote.internal.hub.MethodInvocationSerializer$MethodInvocationWriter.write(MethodInvocationSerializer.java:62)
	at org.gradle.messaging.remote.internal.hub.MethodInvocationSerializer$MethodInvocationWriter.write(MethodInvocationSerializer.java:47)
	at org.gradle.messaging.serialize.kryo.TypeSafeSerializer$2.write(TypeSafeSerializer.java:46)
	at org.gradle.messaging.remote.internal.hub.InterHubMessageSerializer$MessageWriter.write(InterHubMessageSerializer.java:103)
	at org.gradle.messaging.remote.internal.hub.InterHubMessageSerializer$MessageWriter.write(InterHubMessageSerializer.java:88)
	at org.gradle.messaging.remote.internal.inet.SocketConnection.dispatch(SocketConnection.java:112)
	at org.gradle.messaging.remote.internal.hub.MessageHub$ConnectionDispatch.run(MessageHub.java:279)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
> Building > :spring-integration-mail:test > 26 tests completed, 1 skipped
{code}

When I drop back to gradle 1.2, I don't get any errors.",01/Feb/13 5:17 PM;grussell;Mail issue was a ... mail issue - see INT-2913,,,,,,,,,,,,,,,,,,,,,
AggregatingMessageHandler#setExpireGroupsUponCompletion(true) blocks invocation Thread with big persistent MessageStore,INT-2899,47167,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,24/Jan/13 7:41 AM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,12/Feb/13 11:58 AM,2.1.4,2.2. GA,,,,,,3.0 M1,,,,,Core,,,,0,aggregator,PullRequest,,,,,,"Especially it causes blocking affect on the application start-up with config:
{code:xml}
<aggregator expire-groups-upon-completion=""true""
	message-store=""persistentMessageStore""/>
{code}
As a fix, to schedule a task for expiring MessageGroups.
Similar solution is in the {{DelayHandler#reschedulePersistedMessages()}}",,;24/Jan/13 3:29 PM;abilan;14400,;25/Jan/13 4:28 AM;abilan;3600,;30/Jan/13 5:14 AM;abilan;7200,,,,,,10800,0,25200,233%,10800,0,25200,,,,,,,,,,,,,,,,,,,,,,,,,,,197856000,,,,,,33752,true,grussell(grussell),,,,0|i063bj:,35576,33454,,,,,,24/Jan/13 12:10 PM;abilan;I'm going to PR fix this night,24/Jan/13 3:23 PM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/714,"30/Jan/13 5:14 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/727
Attempt number two ;)",,,,,,,,,,,,,,,,,,,,,
<router> should have <bean> & <script> tags within <chain>,INT-2893,47146,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,23/Jan/13 2:48 AM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,05/Feb/13 10:26 AM,2.2. GA,,,,,,,3.0 M1,,,,,Core,,,,0,configuration,PullRequest,,,,,,"Now it isn't posible to have similar config:
{code:xml}
<chain>
    <router method=""route"">
	<beans:bean class=""com.my.proj.SomeRouter""/>
    </router>
</chain>

<chain>
    <router>
       <mapping value=""true"" channel=""startApplicationChannel""/>
       <mapping value=""false"" channel=""stopApplicationChannel""/>
       <groovy:script><![CDATA[
	(payload.DB_VERSION =~ /\d+.\d+.\d+/)[0] == (payload.APP_VERSION =~ /\d+.\d+.\d+/)[0]
		]]>
	</groovy:script>
    </router>
</chain>
{code}
Of course: as a workaround to place {{<router>}} outside of {{<chain>}}.",,;23/Jan/13 5:39 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,198288000,,,,,2013-01-24 10:16:05.992,33730,false,grussell(grussell),,,,0|i0636v:,35555,33432,,,,,,23/Jan/13 5:41 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/712,"24/Jan/13 10:16 AM;grussell;Artem, the word ""lost"" in the headline implies it used to be possible, but looking at your PR, it looks like this is new.

If so, we should probably make this a 3.0 feature.

Another workaround (at least for the {{bean}} case) is to use ref/method or expression=""@bean.foo(payload)"".

WDYT?","24/Jan/13 10:55 AM;abilan;Hi, Gary!
The ""lost"" word has meant, that <router>'s XSD after moving to <chain> was refactored not fully. Or an ability of nested <bean> & <script> was added later.
I got your concern and will change the headline, if you say.
From other side about only to 3.0.
No, any other components within <chain> have mentioned ability. That's why I marked it as ""Defect"".
Of course, we can live with workarounds, but how about consistency?
From other side: to combine components into <chain> minimize not only config, but quantity of managed components like channels & endpoints.","25/Jan/13 8:03 AM;grussell;I agree about consistency, but schema changes in point releases (x.x.y) should only be done rarely - typically if the schema change is an addition only (true here) AND there is no work-around (false here).

So, my vote is 3.0.0 only.","25/Jan/13 9:26 AM;abilan;Hi, Gary!
OK, I got your concenrs, thanks.
Although it sounds like we should always find workaround and here is just one elements is added, I understand an issue with XSD change in the minor release.
So, let it be just to 3.0! And we safe our time from here.
However I would like asking you to send me release rulers I wouldn't make similar mistakes henceforth ;)","25/Jan/13 9:35 AM;grussell;No problem - as soon as we get 2.2.1 out, master will be switched to 3.0 Dev and we can merge this.",,,,,,,,,,,,,,,,,,
MapToObjectTransformerParser parent-child ClassLoader issue,INT-2888,47087,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,18/Jan/13 12:57 AM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,12/Feb/13 8:02 AM,2.2. GA,,,,,,,3.0 M1,,,,,Core,,,,0,PullRequest,,,,,,,"When Spring Integration jars are located in main /lib ClassLoader and our war has its one, and we have configuration:
{code:xml}
<map-to-object-transformer type=""com.my.proj.model.SomeModel""/>
{code}
we end-up with {{ClassNotFoundException}}.
To change it to:
{code:java}
builder.getBeanDefinition().getConstructorArgumentValues().addGenericArgumentValue(type, ""java.lang.Class"");
{code}
instead of {{ClassUtils#resolveClassName}} fixing the problem and in the end we rely on the magic of {{ConversionService}} from context ;-) on {{MapToObjectTransformer}} bean instantiation.
As a workaround configure +prototype+ bean of our model:
{code:xml}
<map-to-object-transformer ref=""myModel""/>
<bean id=""myModel"" class=""com.my.proj.model.SomeModel"" scope=""prototype""/>
{code}
Unfortunately I don't know how to reproduce it as test-case, but it really works on JBOSS.",JBOSS 6,;18/Jan/13 1:39 AM;abilan;3600,;28/Jan/13 3:37 AM;abilan;3600,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,INT-2928,,,,,,,,,,,,,,,,,,,198028800,,,,,,33671,true,grussell(grussell),,,,0|i062s7:,35489,33373,,,,,,"18/Jan/13 1:38 AM;abilan;Branch ready to merge when master switches to 3.0 dev
https://github.com/artembilan/spring-integration/tree/INT-2888",28/Jan/13 3:37 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/722,,,,,,,,,,,,,,,,,,,,,,
Refactor ConsoleOutboundChannelAdapterParserTests to mock streams not hijack System.out,INT-2884,46925,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,16/Jan/13 9:50 AM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,01/Feb/13 1:20 PM,,,,,,,,3.0 M1,,,,,,,,,0,PullRequest,,,,,,,See the comments on PR: https://github.com/SpringSource/spring-integration/pull/705,,;22/Jan/13 3:00 AM;abilan;7200,,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,198115200,,,,,,33658,true,grussell(grussell),,,,0|i062pb:,35476,33360,,,,,,"22/Jan/13 3:00 AM;abilan;Branch is ready for 3.0 master:
https://github.com/artembilan/spring-integration/tree/INT-2884",28/Jan/13 12:24 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/721,,,,,,,,,,,,,,,,,,,,,,
ChainParserTests Sporadic Failure,INT-2880,46894,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,grussell,grussell,14/Jan/13 10:12 AM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,16/Jan/13 12:26 PM,2.2. GA,,,,,,,3.0 M1,,,,,Core,,,,0,PullRequest,,,,,,,https://build.springsource.org/browse/INT-B22X-278,,;15/Jan/13 1:54 AM;abilan;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,199238400,,,,,2013-01-15 01:53:59.577,33627,true,grussell(grussell),,,,0|i062if:,35445,33329,,,,,,15/Jan/13 1:53 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/705,,,,,,,,,,,,,,,,,,,,,,,
MessageGroupStoreReaper implements SmartLifecycle but it doesn't check own state in run(),INT-2878,46858,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,matt.friedman,matt.friedman,10/Jan/13 1:53 PM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,16/Jan/13 12:26 PM,,,,,,,,2.1.5,2.2.1,3.0 M1,,,Core,,,,0,PullRequest,,,,,,,{{MessageGroupStoreReaper implements SmartLifecycle}} but it doesn't check own state in run() to determine should it expire MessageGroups or not.,,;11/Jan/13 1:35 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,INT-2498,,,,,,,,,,,,,,199584000,,,,,2013-01-11 01:35:31.163,33591,true,grussell(grussell),,,,0|i062af:,35409,33293,http://forum.springsource.org/showthread.php?133968-Possible-to-delay-starting-the-message-store-reaper,,,,,11/Jan/13 1:35 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/704,,,,,,,,,,,,,,,,,,,,,,,
ObjectToJsonTransformer and DefaultJmsHeaderMapper violate JMS spec by default with content-type header,INT-2874,46827,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,andrew.goode,andrew.goode,08/Jan/13 10:00 AM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,23/Jan/13 11:18 AM,2.2. GA,,,,,,,2.2.1,3.0 M1,,,,JMS Support,,,,0,jms,json,PullRequest,,,,,"Since the 2.2 release, ObjectToJsonTransformer adds {{content-type=""application/json""}} message header by default and does not provide a way to disable/exclude the header.

This is incompatible with DefaultJmsHeaderMapper because (1) it attempts to set non-standard JMS headers as object properties on the javax.jms.Message in the {{fromHeaders(MessageHeaders, javax.jms.Message)}} method and (2) the property name 'content-type' is not a valid Java identifier, violating sections 3.5.1 and 3.8.1.1 of [the JMS spec|http://docs.oracle.com/cd/E19957-01/816-5904-10/816-5904-10.pdf].

This results in unnecessary exception handling in DefaultJmsHeaderMapper and a WARN log statement for each message. In a high-throughput system, this can easily lead to excessive logging and wasted resources.

Current workarounds include:
# Provide a custom {{header-mapper}} to each JMS {{outbound-channel-adapter}} or {{outbound-gateway}} in order to ignore or rewrite header names that are not valid Java identifiers
# Include a custom bean in flows/chains after each {{object-to-json-transformer}} to explicitly remove the 'content-type' header
# Configure log level for org.springframework.integration.jms.DefaultJmsHeaderMapper to ERROR

Potential solutions:
# Modify DefaultJmsHeaderMapper logic to ignore or rewrite (e.g. convert to camelCase) header names that are not valid Java identifiers, os possibly just handle 'content-type' exclusively
# Provide a way to disable/exclude the 'content-type' header in {{object-to-json-transformer}} (as suggested by original PR for [INT-2453|https://jira.springsource.org/browse/INT-2453])
# Change the log statement in DefaultJmsHeaderMapper ([line 140|https://github.com/SpringSource/spring-integration/blob/master/spring-integration-jms/src/main/java/org/springframework/integration/jms/DefaultJmsHeaderMapper.java#L140]) from WARN to DEBUG",,;08/Jan/13 12:38 PM;grussell;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,199756800,,,,,2013-01-08 10:10:12.783,33560,false,grussell(grussell),,,,0|i0623j:,35378,33262,,,,,,08/Jan/13 10:10 AM;grussell;Another work-around (variant of #2) is to add a <header-filter/> after the transformer to remove the header.,"08/Jan/13 10:42 AM;grussell;Interestingly, ActiveMQ doesn't complain.

Given that MessageHeaders.CONTENT_TYPE is the only ""standard"" SI header that is non-compliant, my initial thought is we should simply convert to/from camelCase (or replace hyphen with underscore) in the default header mapper for just that attribute.

While it might seem attractive to convert *any* header to/from camelCase or (s/-/_/), this would add overhead and might cause undesired side-effects, such as passing headers that are currently being dropped.

Even unconditionally manipulating the content-type might cause the same undesired behavior in some app someplace, we probably need to protect for that too, and make it optional.

I propose the following...

1. In the object-to-json-transformer, setting content-type to the empty string ("""") will suppress adding the header.
2. In DefaultJmsHeaderMapper map MessageHeaders.CONTENT_TYPE to/from jms property ""content_type"".

","08/Jan/13 10:46 AM;andrew.goode;Sounds good to me. Thanks, Gary.",08/Jan/13 12:37 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/699,,,,,,,,,,,,,,,,,,,,
Provide TCP Connection Factory getConnections(),INT-2871,46804,39782,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,04/Jan/13 2:52 PM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,14/Feb/13 11:14 AM,2.2. GA,,,,,,,3.0 M1,,,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,"Provide a mechanism to retrieve an (unmodifiable collection) of the currently open connections managed by a connection factory.

This would allow a number of application features - including the ability to broadcast to all connections, close individual connections etc.

This is complementary to the parent JIRA issue, which will enable applications to receive events when connections are opened, closed, etc.",,;08/Jan/13 9:05 AM;grussell;7200,,,,,,,,28800,0,7200,25%,28800,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,197078400,,,,,,33537,false,grussell(grussell),,,,0|i061yf:,35355,33239,,,,,,"08/Jan/13 9:05 AM;grussell;Branch ready for when master is switched to 3.0 Dev

https://github.com/garyrussell/spring-integration/commits/INT-2126

Note: I decided to expose just the connection ids (and the ability to close the connection by ID) instead of the raw connection objects.",08/Feb/13 3:35 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/743,,,,,,,,,,,,,,,,,,,,,,
AbstractRequestHandlerAdvice should use 'invocableClone().proceed()' ,INT-2858,46599,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Critical,Complete,abilan,abilan,abilan,12/Dec/12 3:35 AM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,16/Jan/13 9:56 AM,2.2. GA,,,,,,,2.2.1,3.0 M1,,,,Core,,,,0,PullRequest,,,,,,,"AbstractRequestHandlerAdvice should use {{'invocableClone().proceed()'}} to keep a reference to the other interceptors in the chain on the cyclic nested Advice invocation, e.g. {{RequestHandlerRetryAdvice}}.
The test case to reproduce:
{code:java}
final AtomicInteger counter = new AtomicInteger(2);
AbstractReplyProducingMessageHandler handler = new AbstractReplyProducingMessageHandler() {
	protected Object handleRequestMessage(Message<?> requestMessage) {
	             return ""foo"";
	}
};
List<Advice> adviceChain = new ArrayList<Advice>();
adviceChain.add(new RequestHandlerRetryAdvice());
adviceChain.add(new MethodInterceptor() {
public Object invoke(MethodInvocation invocation) throws Throwable {
               Object result = invocation.proceed();
		if (counter.getAndDecrement() > 0) {
	           	throw new RuntimeException(""intentional"");
		}
		return result;
	}
});
handler.setAdviceChain(adviceChain);
handler.afterPropertiesSet();
handler.handleMessage(new GenericMessage<String>(""Hello, world!""));
assertTrue(counter.get() == -1);
{code}
Similar sulution here: {{org.springframework.retry.interceptor.RetryOperationsInterceptor}}",,;12/Dec/12 5:38 AM;abilan;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,202089600,,,,,,33338,true,grussell(grussell),,,,0|i060q7:,35156,33040,,,,,,12/Dec/12 5:38 AM;abilan;Isseud PR: https://github.com/SpringSource/spring-integration/pull/693,,,,,,,,,,,,,,,,,,,,,,,
Make ImapMailReceiverTests#testAttachments() OS independent,INT-2846,46489,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,03/Dec/12 2:28 AM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,03/Dec/12 1:10 PM,2.2 RC3,,,,,,,2.2.1,,,,,Mail Support,,,,0,bug,PullRequest,tests,,,,,"The line of the test {{ImapMailReceiverTests#testAttachments()}}:
{code:java}
assertEquals(""bar\n"", ((Multipart) content).getBodyPart(0).getContent());
{code}
causes an issue on Windows, beacause the read of 'test.mail' resource and copy of it into {{OutputStream}} converts line-separators to OS specific. So, it returns 'bar\t\n'",Windows,;03/Dec/12 2:51 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,202867200,,,,,,33228,true,grussell(grussell),,,,0|i0601z:,35047,32930,,,,,,03/Dec/12 2:51 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/692,03/Dec/12 1:10 PM;abilan;Merged by [~grussell] ,,,,,,,,,,,,,,,,,,,,,,
Add Gradle task to validate test contexts for Spring namespaces hardcoded versions ,INT-2845,46487,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,02/Dec/12 11:51 PM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,14/Jan/13 8:53 AM,,,,,,,,2.2.1,3.0 M1,,,,Build,,,,0,gradle,PullRequest,,,,,,,,;03/Dec/12 2:00 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,202953600,,,,,,33226,true,grussell(grussell),,,,0|i0601j:,35045,32928,,,,,,03/Dec/12 2:00 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/691,,,,,,,,,,,,,,,,,,,,,,,
BeanResolver Not Available in FTP etc Expressions,INT-2838,46379,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,28/Nov/12 6:10 AM,25/Jan/13 2:12 PM,10/May/19 2:36 AM,18/Jan/13 10:02 AM,2.2 RC3,,,,,,,2.2.1,3.0 M1,,,,FTP/SFTP Support,,,,0,PullRequest,,,,,,,Expressions such as remote-directory-expression don't get a BeanResolver in their expression contexts so @beanName expressions are not permitted.,,;09/Jan/13 10:30 AM;grussell;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,198892800,,,,,2013-01-18 10:02:59.867,33179,false,grussell(grussell),,,,0|i05zr3:,34998,32881,http://stackoverflow.com/questions/13579728/spring-integration-create-dynamic-directories-using-ftpoutbound-adapter,,,,,09/Jan/13 10:30 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/701,18/Jan/13 10:02 AM;hillert;Merged PR.,,,,,,,,,,,,,,,,,,,,,,
"Add support for Jackson 2.1 (JsonToObjectTransformer, ObjectToJsonTransformer)",INT-2831,46291,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,chemist,chemist,22/Nov/12 2:15 AM,18/Jul/13 6:45 AM,10/May/19 2:36 AM,30/Apr/13 7:31 AM,2.2 RC3,,,,,,,3.0 M2,,,,,Core,,,,2,PullRequest,,,,,,,"Add support for Jackson 2.1 to JsonToObjectTransformer, ObjectToJsonTransformer.

old jackson: import org.codehaus.jackson.map.ObjectMapper;
new jackson 2.1: import com.fasterxml.jackson.databind.ObjectMapper;",,;23/Mar/13 8:29 AM;abilan;14400,,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,INT-3094,,,,,,,,,,,,,,,,,,,193363200,,,,,2012-11-22 10:51:26.08,33091,true,grussell(grussell),,,,0|i05z7j:,34910,32793,http://jackson.codehaus.org/,,,,,"22/Nov/12 10:51 AM;mark.fisher;We need to be sure that our approach is consistent with that of Spring MVC and Spring Security (OAuth), for example see the discussion here:
https://github.com/SpringSource/spring-security-oauth/pull/58
","14/Dec/12 1:06 AM;abilan;How about to follow with support for both Jacksons? As it is Spring MVC 3.2: http://static.springsource.org/spring/docs/3.2.x/spring-framework-reference/html/new-in-3.2.html#new-in-3.2-webmvc-jackson-json.
And, of course, as it done in the spring-security-oauth now: https://github.com/SpringSource/spring-security-oauth/pull/59","18/Mar/13 12:42 PM;abilan;Well, Spring AMQP will support Jackson 2 soon too: AMQP-300...
My suggestion is still here.
Guys, need youк conclusion. 
This feature is becoming demanded.
My colleagues ask me when they can start to use Jackson 2 ;)","18/Mar/13 1:29 PM;grussell;I had a quick look at the AMQP pull request last week, and his approach looks reasonable, so I would say we could go ahead.","22/Mar/13 10:36 AM;grussell;Hi Artem, thanks for grabbing this one; I am just wondering what you were thinking of doing regarding namespace support (new elements or 'use-jackson2' or similar attribute).

The reason I ask is the question of gson support (in future) came up on an internal chat today, so if we stick with a single element ({{o-t-j-t}} and {{j-t-o-t}}) maybe an enumeration would be better than a specific attribute?

Then, the next question that arises is defaults - maybe with 3.0 we should default to Jackson 2? (Unless a 1.x {{ObjectMapper}} is injected). However, I think that would mean switching to a {{FactoryBean}}.

WDYT?","22/Mar/13 12:09 PM;abilan;Guys, thanks for your attention to this one and sorry, that I didn't share my thoughts before: I was fighting with memory leaks around in-memory queues and aggregators in one of my projects ;).

So, now on the matter.

My suggestion to introduce some {{JsonMapper}} wrapper strategy and make two implementations for Jackson 1 & 2 injections to it respectively. And, of course, it will be easy to do any other implementatios, e.g. I have some old my own solution with {{@JsonTransient}} (I didn't know Jackson lib 5 years ago ;)).
And further follow with classpath scanning for Jackson libs as it is done in the Spring MVC, if there is no provided {{JsonMapper}} referense into o-t-j-t and j-t-o-t.

WDYT now?

P.S. When do you plan to release M2? Should I hurry up with this? ;)","22/Mar/13 12:44 PM;grussell;JIRA says end of next week for M2, but I don't think that will happen - we have too many big PRs to review (Mark will correct me if I'm wrong).

I am not sure about scanning the classpath to pick a version when no {{ObjectMapper}} injected - what if both are on the classpath? I suppose we could select v2 if that happens - what does MVC do?

","22/Mar/13 12:57 PM;mark.fisher;I just bumped M2 one more week to April 5. Sorry, but I should have more time over the next 2 weeks than I've had recently.","22/Mar/13 2:43 PM;abilan;{quote}
 I suppose we could select v2 if that happens - what does MVC do?
{quote}
Prefer Jackson 2, see {{RestTemplate}}

{quote}
 I should have more time over the next 2
{quote}
But I don't hope, that I will have enough time to participate with you: I have to do several releases too :).
I'd ask you to review my PRs ASAP, so I could make polishing.

And this one I'm going to do over weekend.",23/Mar/13 8:29 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/774,,,,,,,,,,,,,,
Spring Integration WS should depend on spring-webmvc,INT-2794,45899,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,hillert,hillert,26/Oct/12 2:14 PM,21/Nov/12 4:52 PM,10/May/19 2:36 AM,30/Oct/12 7:58 AM,2.2 RC2,,,,,,,2.2 RC3,,,,,Web Services,,,,0,pull-request-submitted,,,,,,,"I am in the process of updating all the SI Samples to the latest RC version. During that process I noticed, that the *ws-inbound-gateway* sample fails to execute. The Sample complains about:

{code}
java.lang.ClassNotFoundException: org.springframework.web.servlet.FrameworkServlet
{code}

It turns out the sample has been working with SI up to *2.0.5.RELEASE*. Starting with *2.0.6.RELEASE* the sample fails. 

The problem is the following Gradle config:

{code}
compile (""org.springframework.ws:spring-ws-core:$springWsVersion"") {
    exclude group: 'org.springframework', module: 'spring-webmvc'
    exclude group: 'org.springframework', module: 'spring-web'
    exclude group: 'org.springframework', module: 'spring-context-support'
}
{code}

These exclusions were added with https://jira.springsource.org/browse/INT-2036 (For 2.1 M1). Around that same time in a separate commit, we added the spring-web dependency: ""org.springframework:spring-web:$springVersion"".

https://github.com/SpringSource/spring-integration/commit/9ce8c7b519e18790327244e14906e25c1fd4cf0f

However, *org.springframework.ws.transport.http.MessageDispatcherServlet* used by the sample extends *org.springframework.web.servlet.FrameworkServlet*, which has been part of spring-webmvc-x.x..jar since spring-webmvc-1.0.jar

Therefore, Spring Integration WS should depend on ""spring-webmvc"" (instead of spring-web).
",,;26/Oct/12 4:05 PM;hillert;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,206150400,,,,,,32789,false,grussell(grussell),,,,0|i05xdr:,34614,32491,,,,,,26/Oct/12 4:05 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/658,,,,,,,,,,,,,,,,,,,,,,,
Add Sender's UDP Port to Inbound Message Header to Facilitate Reply,INT-2776,45639,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,04/Oct/12 2:44 AM,06/Nov/15 1:34 PM,10/May/19 2:36 AM,11/Oct/12 1:12 PM,2.2 RC1,,,,,,,2.2 RC2,,,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,"There are no UDP Gateways (INT-1809). The sender's IP address is included in the message header; adding the sender's port will facilitate sending a reply, perhaps in a service invoked by a <service-activator/>",,;09/Oct/12 7:11 AM;grussell;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,207619200,,,,,,32560,false,grussell(grussell),,,,0|i05w07:,34391,32260,http://stackoverflow.com/questions/12623394/udp-server-with-spring-integration,,,,,09/Oct/12 7:11 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/641,,,,,,,,,,,,,,,,,,,,,,,
AmqpOutboundEndpoint doesn't allow to use default 'exchange' & 'routingKey' from RabbitTemplate,INT-2773,45614,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,02/Oct/12 4:39 AM,11/Oct/12 4:00 PM,10/May/19 2:36 AM,11/Oct/12 4:00 PM,2.2 RC1,,,,,,,2.2 RC2,,,,,AMQP Support,,,,0,bug,,,,,,,"A test config:
{code:xml}
<rabbit:queue name=""si.test.queue"" />

<rabbit:direct-exchange name=""si.test.exchange"">
	<rabbit:bindings>
             <rabbit:binding queue=""si.test.queue"" key=""si.test.binding"" />
	</rabbit:bindings>
</rabbit:direct-exchange>

<rabbit:template id=""amqpTemplate"" connection-factory=""connectionFactory"" exchange=""si.test.exchange"" routing-key=""si.test.binding""/>

<amqp:outbound-channel-adapter channel=""toRabbit""/>
{code}
So, we are expecting a Message in the ""si.test.queue"", but it was sended into """"-exchange via """"-routing-key, as they are configured in the {{AmqpOutboundEndpoint}}:
{code:java}
private volatile String exchangeName = """";
private volatile String routingKey = """";
{code}
From the other side the {{RabbitTemplate#doSend}} has logic:
{code:java}
if (exchange == null) {
	// try to send to configured exchange
	exchange = this.exchange;
}
if (routingKey == null) {
	// try to send to configured routing key
        routingKey = this.routingKey;
}
{code}

So, or {{AmqpOutboundEndpoint}} fields should be NULL,
or {{RabbitTemplate}} should use {{StringUtils.hasText}}

And as I see it should be backported into 2.1",,;08/Oct/12 12:06 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,207792000,,,,,,32535,true,grussell(grussell),,,,0|i05vun:,34366,32235,,,,,,"02/Oct/12 4:40 AM;abilan;@Oleg, confirm, please, my thoughts before I start fixing.
I'm still newbie in the AMQP ;)","08/Oct/12 12:06 AM;abilan;So, I've made a PR https://github.com/SpringSource/spring-integration/pull/640 for review.
However I see there are a lot of refactoring should be done around {{AmqpOutboundEndpoint}} and it's parser, but I keep changes as minimal as possible to make them 'backportable' for 2.1",,,,,,,,,,,,,,,,,,,,,,
AbstractReplyProducingMessageHandler.RequestHandler has to be 'public',INT-2771,45584,,Defect,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,28/Sep/12 1:06 AM,09/Oct/12 1:52 PM,10/May/19 2:36 AM,09/Oct/12 1:52 PM,2.2 RC1,,,,,,,2.2 RC2,,,,,Core,,,,0,aop,bug,,,,,,"A piece of the StackTrace:
{quote}
Caused by: java.lang.IllegalAccessError: class org.springframework.integration.handler.$Proxy144 cannot access its superinterface org.springframework.integration.handler.AbstractReplyProducingMessageHandler$RequestHandler
	at java.lang.reflect.Proxy.defineClass0(Native Method)
	at java.lang.reflect.Proxy.getProxyClass(Proxy.java:504) 
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:581) 
	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:112)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.onInit(AbstractReplyProducingMessageHandler.java:123) 
{quote}
I think, the real issue appears from 'parent-child' ClassLoaders inside the AS environment, where Spring jars are loaded from the server /lib directory with one ClassLoaders and war - from the the /deploy with another isolated ClassLoaders. So, the Proxy is created in the web-app in one ClassLoaders, but its +private+ interface is in the another.
I don't know how to reproduce it within the test-case in the project, but change access level of {{RequestHandler}} to *public*really fix the problem.",Windows 7; JBOSS AS 6; JAVA 1.6; WEB-app,;28/Sep/12 5:04 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,208569600,,,,,,32505,true,grussell(grussell),,,,0|i05vo7:,34337,32205,,,,,,28/Sep/12 5:03 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/638,,,,,,,,,,,,,,,,,,,,,,,
JPA Outbound Gateways aren't advised with <transactional/> when they are advised with <request-handler-advice-chain>,INT-2770,45569,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,27/Sep/12 5:27 AM,24/Jul/14 6:29 AM,10/May/19 2:36 AM,09/Oct/12 1:51 PM,2.2 RC1,,,,,,,2.2 RC2,,,,,JPA Support,,,,0,bug,jpa,,,,,,"For reproducing:
{code:xml}
<int-jpa:updating-outbound-gateway id=""advised"">
   <int-jpa:transactional/>
<int-jpa:request-handler-advice-chain>
			<bean class=""org.springframework.integration.jpa.config.xml.JpaOutboundGatewayParserTests$FooAdvice"" />
		</int-jpa:request-handler-advice-chain>
</int-jpa:updating-outbound-gateway>
{code}
{code:java}
MessageHandler jpaOutboundGateway = context.getBean(""advised.handler"", MessageHandler.class);
assertTrue(AopUtils.isAopProxy(jpaOutboundGateway));
{code}
The real issue is here: {{AbstractJpaOutboundGatewayParser#parseHandler}} where the property for JPA adviceChain should be *""txAdviceChain""* instead of *""adviceChain""*.
Similar solution here: {{JpaOutboundChannelAdapterParser}}",,;28/Sep/12 5:05 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,151200000,,,,,2014-07-24 06:29:08.281,32490,true,franz.neumann(franz.neumann),,,,0|i05vkv:,34322,32190,,,,,,28/Sep/12 5:04 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/638,"24/Jul/14 6:29 AM;franz.neumann;I have similar issue. Ive got for a JPA Outbound-channel-adapter both transactional and request-handler-advice-chain. In the advice-chain I try to log the Exception, when it happens.
But its'not logged, but I know that it actually happend since the Message was sent to failover clickDbFailoverChannel . What can be a problem with it?

{code:xml}
	<int:channel id=""clickDbWithFailoverChannelSite-1"">
		<int:dispatcher load-balancer=""none"" task-executor=""clickDbSiteRouterExecutor""/>
	</int:channel>
	<int:bridge input-channel=""clickDbWithFailoverChannelSite-1""
		output-channel=""jpaOutboundChannelSite-1"" order=""1"" send-timeout=""100"" />
	<int:bridge input-channel=""clickDbWithFailoverChannelSite-1""
		output-channel=""clickDbFailoverChannel"" order=""2"" />
	<int-jpa:outbound-channel-adapter id=""jpaOutboundChannelSite-1""
		persist-mode=""PERSIST"" flush-size=""100"" entity-manager-factory=""emfSite-1"">
		<int-jpa:transactional transaction-manager=""transactionManagerSite-1"" />
		<int-jpa:request-handler-advice-chain>
			<bean class=""org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice"">
				<property name=""failureChannel"" ref=""clickDbFailureLogger""/>
				<property name=""onFailureExpression"" value=""#exception""/>
			</bean>
		</int-jpa:request-handler-advice-chain>
	</int-jpa:outbound-channel-adapter>
{code}",,,,,,,,,,,,,,,,,,,,,,
"Core XSD Schema - Allow the ""id"" attribute for elements within Chains",INT-2755,45468,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,hillert,hillert,18/Sep/12 11:12 AM,24/May/13 8:02 AM,10/May/19 2:36 AM,21/May/13 9:57 AM,2.1.3,,,,,,,3.0 M2,,,,,Core,,,,2,chain,PullRequest,,,,,,"We allow *id* attributes for non-Core components within <chain/> elements. However, the Core XSD Schema does NOT allow the *id* attribute being set. We need to relax that requirement. ",,;25/Feb/13 6:46 AM;abilan;28800,,,,,,,,14400,0,28800,200%,14400,0,28800,,INT-2321,INT-2218,,,,,INT-3009,,,,,,,,,,,,,,,,,,,195609600,,,,,2013-02-15 00:25:48.157,32389,true,grussell(grussell),,,,0|i05uyv:,34223,32089,http://forum.springsource.org/showthread.php?134901,,,,,"15/Feb/13 12:25 AM;abilan;I also need  this solution. So, I'm going to fix it soon.
However it won't be so easy, because INT-2321...",25/Feb/13 6:46 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/753,,,,,,,,,,,,,,,,,,,,,,
HTTP Content-Length Header Should NOT be Propagated to a Reply,INT-2744,45381,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,11/Sep/12 11:49 AM,28/Nov/12 7:36 AM,10/May/19 2:36 AM,20/Sep/12 9:12 AM,2.2 M4,,,,,,,2.2 RC1,,,,,HTTP Support,,,,0,PullRequest,,,,,,,,,;11/Sep/12 1:50 PM;grussell;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,INT-2837,,,,,,,,,,,,,,,,,,,210038400,,,,,,32303,false,grussell(grussell),,,,0|i05ufz:,34138,32003,,,,,,11/Sep/12 1:49 PM;grussell;Isseud PR: https://github.com/SpringSource/spring-integration/pull/618,,,,,,,,,,,,,,,,,,,,,,,
TcpReceivingChannelAdapterTests Random Failures,INT-2742,45345,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,07/Sep/12 1:56 PM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,18/Sep/12 6:18 AM,2.2 M4,,,,,,,2.2 RC1,,,,,,,,,0,PullRequest,,,,,,,Duh. Tests for error-channel processing set the error channel after the test data is sent; we're in a race to set the error-channel before the errors occur.,,;07/Sep/12 2:06 PM;grussell;600,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,210384000,,,,,,32268,false,grussell(grussell),,,,0|i05u8f:,34104,31968,,,,,,07/Sep/12 2:06 PM;grussell;Issued PR: https://github.com/SpringSource/spring-integration/pull/616,,,,,,,,,,,,,,,,,,,,,,,
Use selector on a Polled JMS Channel,INT-2740,45339,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,07/Sep/12 8:18 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,07/Sep/12 1:53 PM,2.2 M4,,,,,,,2.2 RC1,,,,,JMS Support,,,,0,PullRequest,,,,,,,"Currently, the selector attribute only applies on a JMS channel if the channel is message-driven",,;07/Sep/12 11:20 AM;grussell;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,210384000,,,,,,32262,false,grussell(grussell),,,,0|i05u73:,34098,31962,,,,,,07/Sep/12 11:20 AM;grussell;Issued PR: https://github.com/SpringSource/spring-integration/pull/614,,,,,,,,,,,,,,,,,,,,,,,
For Stored Procedure Inbound Channel Adapter: Add 'return-value-required' attribute,INT-2728,45222,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,30/Aug/12 2:05 PM,15/Feb/13 7:25 AM,10/May/19 2:36 AM,12/Feb/13 9:10 AM,2.1.3,,,,,,,3.0 M1,,,,,JDBC Support,,,,0,pull-request-submitted,,,,,,,"For the Stored Procedure Inbound Channel Adapter:

Add 'return-value-required' attribute. This attribute is already available on the Outbound Gateway.

Consider renaming this attribute more appropriately to 'with-return-value'. ",,;07/Feb/13 9:33 PM;hillert;90,,,,,,,,10800,0,90,0%,10800,0,90,,,,,,,,,,,,,,,,,,,,,,,,,,,197164800,,,,,,32144,false,grussell(grussell),,,,0|i05tgv:,33980,31844,http://forum.springsource.org/showthread.php?129601-stored-proc-inbound-channel-adapter-examples-needed,,,,,07/Feb/13 9:33 PM;hillert;PR: https://github.com/SpringSource/spring-integration/pull/742,,,,,,,,,,,,,,,,,,,,,,,
Add a note about Delayer's advice-chain into Reference Manual,INT-2722,45073,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,27/Aug/12 1:15 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,28/Aug/12 2:25 PM,,,,,,,,2.2 RC1,,,,,Documentation,,,,0,,,,,,,,,,;27/Aug/12 3:55 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,INT-2649,,,,,,,,,,,,,,,,,,,,,,,,,211334400,,,,,,32085,true,grussell(grussell),,,,0|i05t3r:,33921,31785,,,,,,27/Aug/12 3:55 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/593,,,,,,,,,,,,,,,,,,,,,,,
Failed tests on slow machine,INT-2721,45066,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,abilan,abilan,25/Aug/12 1:58 AM,05/Sep/13 10:22 AM,10/May/19 2:36 AM,11/Jun/13 10:57 AM,2.2 M4,,,,,,,2.2.5,2.2 RC1,3.0 M3,,,,,,,0,tests,,,,,,,"{{GroovyScriptExecutingMessageProcessorTests#testRefreshableScriptExecutionWithAlwaysRefresh()}}
{{DelayerHandlerRescheduleIntegrationTests}}
{{JdbcMessageStoreChannelIntegrationTests}}
{{JdbcMessageStoreTests}}
{{StoredProcOutboundGatewayWithNamespaceIntegrationTests}}","Windows 7 x86, 2GB, 2.6GHz",;25/Aug/12 4:31 AM;abilan;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,211507200,,,,,,32078,true,grussell(grussell),,,,0|i05t27:,33914,31778,,,,,,"25/Aug/12 2:00 AM;abilan;I've caught it when I was testing INT-2718.
In most cases it looks like a simple timing polishing, so I'll fix it with one PR.","25/Aug/12 2:52 AM;abilan;Some additional failed tests on Windows:
{{FtpOutboundGatewayParserTests}}
{{SftpOutboundGatewayParserTests}}
It's not necessarily that there is dir '/tmp' on root of logical Windows disk, where is the project.

",25/Aug/12 4:29 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/592,,,,,,,,,,,,,,,,,,,,,
Add support for Uri Templating to the <ws:outbound-gateway> for all transports supported by Spring WS,INT-2720,45059,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,24/Aug/12 5:25 AM,14/Aug/13 12:25 AM,10/May/19 2:36 AM,10/Apr/13 8:03 AM,,,,,,,,3.0 M2,,,,,Web Services,,,,1,PullRequest,webservices,,,,,,See comments in linked issue INT-2695.,,;29/Aug/12 1:43 AM;abilan;21600,;01/Nov/12 12:30 AM;abilan;3600,;19/Mar/13 2:44 AM;abilan;3600,,,,,,28800,0,28800,100%,28800,0,28800,,SWS-795,SPR-9798,,,,,,,,,,,,,,,,,,,,,,,,193708800,,,,,,32071,true,abilan(abilan),,,,0|i05t0n:,33907,31771,,,,,,29/Aug/12 1:32 AM;abilan;The linked issue SWS-795 describes the problem around {{URITemplate}},"19/Sep/12 12:28 AM;abilan;Mark, can you take a look into Arjen's PR https://github.com/SpringSource/spring-framework/pull/148 and say here a comment about Spring Integration 3.0 and Spring Framework compatibility? 
Will we support Spring 3.1 or just move to 3.2?
Does it makes sense for Juergen to backport of Arjen's improvement?
Thanks",01/Nov/12 12:30 AM;abilan;A commit for review: https://github.com/artembilan/spring-integration/compare/INT-2720,19/Mar/13 2:44 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/769,,,,,,,,,,,,,,,,,,,,
<chain> config is failed when nested <gateway>s have a 'request-channel' attribute,INT-2718,45039,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,23/Aug/12 2:04 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,10/Sep/12 1:35 PM,2.2 M4,,,,,,,2.2 RC1,,,,,Core,,,,0,chain,,,,,,,,,;25/Aug/12 4:30 AM;abilan;28800,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,211507200,,,,,,32051,true,grussell(grussell),,,,0|i05sw7:,33887,31751,http://forum.springsource.org/showthread.php?129514,,,,,"23/Aug/12 2:49 AM;abilan;The investigation shows, that it should be fixed inside {{AbstractConsumerEndpointParser#parseInternal}} around the invocation of method {{this.parseHandler(element, parserContext);}}.

But there is some other side effect: parsing for 'request-handler-advice-chain' is made a bit below. So, if we place adviced component inside the <chain> it won't work, because our chained handler isn't adviced.
For reproducing, config from simpleWebServiceOutboundGatewayParserTests.xml:
{code:xml}
<si:chain input-channel=""gatewayWithAdviceInsideTheChain"">
    <ws:outbound-gateway destination-provider=""destinationProvider"">
	<ws:request-handler-advice-chain>
        	<bean class=""org.springframework.integration.ws.config.WebServiceOutboundGatewayParserTests$FooAdvice""/>
	</ws:request-handler-advice-chain>
    </ws:outbound-gateway>
</si:chain>
{code}
The issue is addresed as for {{AbstractConsumerEndpointParser}}, and for {{AbstractOutboundChannelAdapterParser}}.

Well, I think, I'll fix it during this JIRA too, and soon.",25/Aug/12 4:30 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/592,,,,,,,,,,,,,,,,,,,,,,
<http:inbound-channel-adapter> doesn't support 'view-expression' attribute,INT-2717,45037,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,23/Aug/12 1:29 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,28/Aug/12 2:26 PM,2.2 M4,,,,,,,2.2 RC1,,,,,HTTP Support,,,,0,,,,,,,,"Also all common attributes for HTPP inbound-adapter & inbound-gateway should be moved to <xsd:attributeGroup>.
But, I think, I'll make it within the #INT-2312.
Rith now it should be fixed by simpler way, to avoid a maintenance in the future ;-)",,;23/Aug/12 1:50 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,211680000,,,,,2012-08-23 05:40:17.145,32049,false,grussell(grussell),,,,0|i05svr:,33885,31749,,,,,,23/Aug/12 1:49 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/591,"23/Aug/12 5:40 AM;grussell;Hi Artem,

What is the use case for this?

Given that this endpoint receives no response, I didn't consider it necessary to extend view-expression to the adapter. Most likely they just return some canned response.

I suppose you could use some @<bean> expression but, given there's no reply message, such a bean wouldn't have any message-based context to make a dynamic decision on which view to return.

I suppose it could return a different view depending on some system option, or day of the week etc.

I am not saying it's wrong, I am just intrigued as to what the driver was.","23/Aug/12 5:45 AM;oleg.zhurakousky@springsource.com;I agree. Since its adapter and not a gateway, there is no expectation for the reply aside from 200 OK or HTTP failure of some type, however it would be nice to see if there is a use case which would probably expend on Gary's 'canned response' remark (e.g., some static page to display with the status code. . .)","23/Aug/12 6:07 AM;abilan;Hello, guys! 
And thank you for your 'uppercut' ;-)
At a glance it looked like losted attribute in the XSD, but right now I see what you have in mind...
Roughly speaking, we could close this issue as the extra hassle, however it is a use-case, which I came up just:
We have some *request-* or *session-scoped* bean, which make a decision on the returned View from some request or session attributes.
Then we can use it like this:
{code:xml}
view-expression=""@scopedBean""
{code}
WDYT?","23/Aug/12 6:19 AM;grussell;@Oleg - there is already support for a fixed view via the view attribute - I was just questioning the need to make it dynamic.

@Artem - ...snip... deriving the view from a scoped bean does appear to be a valid use case.",,,,,,,,,,,,,,,,,,,
Remove all hard-coded Schema references in context files,INT-2710,44847,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,09/Aug/12 8:21 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,29/Aug/12 9:24 AM,2.1.3,,,,,,,2.2 RC1,,,,,Adapters,Testing,,,0,,,,,,,,"Several test context files still contain hard-coded Schema references:
 
DispatcherMaxSubscribersDefaultConfigurationTests-context.xml
FileOutboundChannelAdapterParserTests-context.xml
StoredProcJmxManagedBeanTests-context.xml
",,;27/Aug/12 8:24 AM;hillert;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,INT-2708,,,,,,,,,,,,,,,,,,,211334400,,,,,2012-08-09 08:31:13.319,31894,false,grussell(grussell),,,,0|i05ryn:,33736,31594,,,,,,"09/Aug/12 8:31 AM;grussell;Gunnar, we keep getting tripped up by these.

Is it possible to put something in the gradle build to catch them before they get merged (just grep for '[0-9].xsd$' in all xml files?)",27/Aug/12 8:24 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/594,,,,,,,,,,,,,,,,,,,,,,
<http:outbound> endpoint: 'expected-response-type' attribute doesn't support primitive types,INT-2706,44840,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,09/Aug/12 2:17 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Aug/12 5:05 AM,2.2 M3,,,,,,,2.2 M4,2.2 M4 Sprint 4,,,,HTTP Support,,,,0,,,,,,,,"For more info take a look into referenced forum.
The main issue is lying in 
{code:java}
expectedResponseType = Class.forName(expectedResponseTypeName);
{code}
when {{Class.forName()}} can't determine the type for Strings with primitives e.g. ""byte[]"".
The issue was appeared when was introduced {{expectedResponseTypeExpression}}",,;09/Aug/12 4:59 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,212889600,,,,,,31887,true,grussell(grussell),,,,0|i05rx3:,33729,31587,http://forum.springsource.org/showthread.php?129126,,,,,09/Aug/12 4:59 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/580,,,,,,,,,,,,,,,,,,,,,,,
Enable cachability of consumers for reply-side of JmsOutboundGateway,INT-2683,44618,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Won't Fix,grussell,mark.fisher,mark.fisher,23/Jul/12 5:37 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,07/Sep/12 8:46 AM,,,,,,,,2.2 RC1,,,,,JMS Support,,,,0,,,,,,,,"Currently, when an explicit reply Destination is configured, the JmsOutboundGateway uses a MessageSelector that expects a JMSCorrelationID to match the outbound request's JMSMessageID. When used with Spring's CachingConnectionFactory and its 'cacheConsumers' property set to TRUE, that can lead to an OutOfMemoryException since each consumer's cache key is unique (basically the destination + the message selector). Obviously, that also means we are not benefiting from the potential performance benefits of caching MessageConsumer instances either (rather than creating with each request/reply operation).

We should instead provide a more general JMSCorrelationID for outbound requests that can be used *as long as the consuming side knows to give precedence to a JMSCorrelationID property on a request* (Spring's MessageListenerAdapter does, and hence a Spring Integration inbound-gateway also does). That general JMSCorrelationID's value can be unique to the outbound-gateway instance and request-sending thread but not unique at the per-Message level as in the current code.

Because not every downstream consumer will support the ""echoing"" of a JMSCorrelationID (some will only take the JMSMessageID of the request and set it as the JMSCorrelationID of the reply), we need to maintain the current behavior as a default (also for backwards compatibility). A boolean flag should be provided to enable the JMSCorrelationID->JMSCorrelationID behavior as an optimized alternative to the JMSMessageID->JMSCorrelationID default.

NOTE: Ultimately the request/reply behavior in Spring Integration's JMS outbound-gateway needs to make its way into the core Spring JmsTemplate (see SPR-3332).",,;02/Aug/12 4:23 PM;grussell;18000,,,,,,,,,0,18000,,,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,210384000,,,,,2012-08-20 13:10:31.664,31648,false,grussell(grussell),,,,0|i05qk7:,33509,31348,,,,,,"20/Aug/12 1:10 PM;grussell;3 Issues found.

1. Message selector based on Object.hashCode() is not unique - jmsRequest can get the same hashcode as a previous one after garbage collection.

Consider - send, timeout, reply sits in reply queue with old hashcode; gc; new jmsRequest gets same hashcode, send; receive old response because the hashcode matches.

Need to use AtomicLong instead of hashcode.

2. 2a and 3a could occasionally timeout (depending on server load) exposing problem #3.

Add receive-timeouts to outbound gateways


3. Crosstalk between pipeline tests - see #2 - when that occurred, because the same infrastructure queues exist, even though the context it closed, AMQ might not shut down and messages from one test are mixed with those from other tests.

Use unique queues for each test.","20/Aug/12 4:10 PM;grussell;Just to follow up on #3, the crosstalk appears to be some problem where the context.destroy() fails to stop the DMLC in an earlier test...

Named the gateways and added some diagnostics to see if the wrong inbound gateway was consuming a test's messages...


Sending from out-7-2 [Payload=49] ...  jms_replyTo=queue://pipeline07-01, jms_messageId=ID:arwen3-59703-1345503566172-19:1:44:1:2}]

In-4-1 received [Payload=49] ...jms_replyTo=queue://pipeline07-02, delay=1005 ... jms_messageId=ID:arwen3-59703-1345503566172-19:1:52:1:3}]


In this test, the first inbound gateway from test #4 consumed test #7's message.

This explains the anomalies; there is no evidence of crosstalk on received messages (aside from the hashcode issue - #1).
","20/Aug/12 4:34 PM;grussell;Doh! - context.destroy() needs to be in a finally block.

Whenever a test fails (timeout), the older test contexts are still running and may handle the later tests' data.

To fix:

1. put context.destroy() in finally block
2. use broker.persistence=false (speeds up tests and avoids timeouts in the first place).
3. use different queues for each test.
",07/Sep/12 8:46 AM;grussell;Superseded by INT-2741,,,,,,,,,,,,,,,,,,,,
Typo in reference,INT-2678,44571,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Complete,abilan,slava.semushin,slava.semushin,19/Jul/12 12:20 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,19/Jul/12 9:59 AM,,,,,,,,2.2 M4,2.2 M4 Sprint 2,,,,Documentation,,,,0,documentation,,,,,,,"At page http://static.springsource.org/spring-integration/reference/htmlsingle/#2.1-new-samples I see a typo in word 'sampples'.

(I even create screenshot for demonstrate it! :))",,;19/Jul/12 1:48 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,19/Jul/12 12:20 AM;slava.semushin;spring-integration-typo.png;https://jira.spring.io/secure/attachment/20112/spring-integration-typo.png,,,,,,,,,,,,,214790400,,,,,2012-07-19 01:15:07.384,31601,true,grussell(grussell),,,,0|i05q9j:,33461,31301,,,,,,"19/Jul/12 1:15 AM;abilan;Thank you, Slava
Will be fixed",19/Jul/12 1:48 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/556,,,,,,,,,,,,,,,,,,,,,,
Reference Doc Chapter '19.9 JMS Samples' still points to old Git Repo,INT-2670,44519,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,14/Jul/12 7:19 PM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,09/Aug/12 10:55 AM,2.1.3,,,,,,,2.2 M4,2.2 M4 Sprint 4,,,,Documentation,,,,0,,,,,,,,"Reference Doc Chapter '19.9 JMS Samples' still points to old Git Repo

While at it, the section can probably also be improved a bit, structurally and contents-wise (e.g. it states *our new Samples Git repository*, while in fact it's the old one)",,;08/Aug/12 7:45 AM;hillert;3600,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,212976000,,,,,,31544,false,grussell(grussell),,,,0|i05pwv:,33404,31244,,,,,,08/Aug/12 7:45 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/574,,,,,,,,,,,,,,,,,,,,,,,
"Null pointer exception in spring integration with ssl, using 2.2.0.M3",INT-2660,44409,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Blocker,Complete,grussell,ssinha,ssinha,09/Jul/12 9:12 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Jul/12 2:04 PM,,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,"{code}
java.lang.NullPointerException
at org.springframework.integration.ip.tcp.connection.support.DefaultTcpNioSSLConnectionSupport.createNewConnection(DefaultTcpNioSSLConnectionSupport.java:49)
at org.springframework.integration.ip.tcp.connection.TcpNioClientConnectionFactory.obtainConnection(TcpNioClientConnectionFactory.java:93)
{code}
Looks like private volatile SSLContext sslContext; is not initialized.


Its a runtime issue. I have following defined within the appconfig.xml:
{code}
<bean id=""sslContextSupport""
class=""org.springframework.integration.ip.tcp.connection.support.DefaultTcpSSLContextSupport"">
    <constructor-arg value=""testkeystore""/>
    <constructor-arg value=""testtruststore""/>
    <constructor-arg value=""testing""/>
    <constructor-arg value=""testing""/>
</bean>
<bean id=""javaSerializer""
    class=""org.springframework.core.serializer.DefaultSerializer""/>
<bean id=""javaDeserializer""
    class=""org.springframework.core.serializer.DefaultDeserializer""/>
<int-ip:tcp-connection-factory id=""clientFactory"" host=""10.3.30.52""    
    port=""2017"" single-use=""true"" type=""client""
    deserializer=""javaDeserializer"" serializer=""javaSerializer"" using-nio=""true"" ssl-context-support=""sslContextSupport""/>
<int:channel id=""requests""></int:channel>
<int:channel id=""replies"">
    <int:queue capacity=""10""/>
</int:channel>
<int-ip:tcp-outbound-channel-adapter channel=""requests"" connection-factory=""clientFactory"" id=""outboundClient""/>
<int-ip:tcp-inbound-channel-adapter channel=""replies"" connection-factory=""clientFactory"" id=""inboundClient""/>
{code}
Within the code if I am trying to send my login request to requests channel and where its failing. In case if I debug my code I see following:
{code}
public TcpNioConnection createNewConnection(SocketChannel socketChannel,
			boolean server, boolean lookupHost) throws Exception {
SSLEngine sslEngine = this.sslContext.createSSLEngine(); // THIS IS WHERE ITS FAILING

TcpNioSSLConnection tcpNioSSLConnection = new TcpNioSSLConnection(socketChannel, server, lookupHost, sslEngine);
tcpNioSSLConnection.init();

return tcpNioSSLConnection;

}

{code}",Unix,;10/Jul/12 3:34 PM;grussell;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,215568000,,,,,2012-07-09 10:38:56.458,31410,false,grussell(grussell),,,,0|i05p1z:,33265,31110,,,,,,"09/Jul/12 10:38 AM;grussell;Hmmm... that is set up here...

{code}
	public void afterPropertiesSet() throws Exception {
		this.sslContext = this.sslContextSupport.getSSLContext();
		Assert.notNull(this.sslContext, ""SSLContex must not be null"");
	}
{code}

... which is called by the framework after the bean is instantiated.

Can you provide your complete test case, and attach a DEBUG level log showing the context initialization?","09/Jul/12 10:51 AM;grussell;I see the problem; unless you define the socket support bean in the context, we don't call afterPropertiesSet(); the work around is to define a bean...

{code}
<bean id=""connectionSupport"" class=""...DefaultTcpNioSSLConnectionSupport"">
    <constructor-arg ref=""sslContextSupport"" />
</bean>
{code}

...and provide it to the connection factory using the socket-support attribute.",09/Jul/12 10:54 AM;ssinha;What is the exact attribute name? is it socket-support? Somehow spring-integration.xsd does not have this element.,"09/Jul/12 11:09 AM;grussell;Sorry; I got the wrong attribute (although you should see it; perhaps your IDE has the old schema cached).

Anyway, it turns out we don't provide the attribute for this property in the namespace...

{code}

	/**
	 * Rare property - not exposed through namespace
	 * @param tcpNioSupport
	 */
	public void setNioConnectionSupport(TcpNioConnectionSupport tcpNioSupport) {
...
{code}

This means you'll have to define the entire connection factory as a <bean/> instead of using the <ip:tcp-connection-factory/> element.","09/Jul/12 11:32 AM;ssinha;Thanks Gary for all your support; I will wait for you guys to final 2.2.0 release before I start using Spring INT for SSL.

Cheers!
Sachin","09/Jul/12 11:59 AM;grussell;Pull Request Issued: https://github.com/SpringSource/spring-integration/pull/541

When this is merged (when you see this JIRA marked 'resolved'), you can try 2.0.4.BUILD-SNAPSHOT.

We expect to release 2.0.0.M4 at the end of the month.","09/Jul/12 12:17 PM;grussell;By the way, it's not too hard to define the connection factory as a bean...

{code}
<bean id=""clientFactory"" class=""org.springframework.integration.ip.tcp.connection.TcpNioClientConnectionFactory"">
	<constructor-arg value=""10.3.30.52"" />
	<constructor-arg value=""2017"" />
	<property name=""singleUse"" value=""true"" />
	<property name=""deserializer"" ref=""javaSerializer"" />
	<property name=""serializer"" ref=""javaSerializer"" />
	<property name=""tcpNioConnectionSupport"" ref=""connectionSupport"" />
</bean>

<bean id=""connectionSupport"" class=""org.springframework.integration.ip.tcp.connection.support.DefaultTcpNioSSLConnectionSupport"">
    	<constructor-arg ref=""sslContextSupport"" />
</bean>
{code}",,,,,,,,,,,,,,,,,
Update to Spring version 3.1.2,INT-2658,44404,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,09/Jul/12 6:59 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Jul/12 4:16 PM,,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,,,,,0,Pull,PullRequest,,,,,,,,;10/Jul/12 3:54 PM;grussell;720,,,,,,,,,0,720,,,0,720,,,,,,,,,,,,,,,,,,,,,,,,,,,215481600,,,,,,31404,false,grussell(grussell),,,,0|i05otj:,33227,31104,,,,,,10/Jul/12 3:54 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/544,,,,,,,,,,,,,,,,,,,,,,,
Spelling Error in AbstractMailReceiver,INT-2657,44386,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Complete,hillert,hillert,hillert,06/Jul/12 8:16 PM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Jul/12 8:19 PM,2.2 M3,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,Mail Support,,,,0,,,,,,,,"Line 266:

{code}
logger.debug(""Recieved "" + messages.length + "" messages"");
{code}",,;09/Jul/12 8:51 AM;hillert;1800,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,215568000,,,,,,31380,false,grussell(grussell),,,,0|i05onz:,33202,31080,,,,,,09/Jul/12 8:51 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/540,,,,,,,,,,,,,,,,,,,,,,,
Add transaction management support for DelayHandler's schedule tasks,INT-2649,44317,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,04/Jul/12 4:09 AM,27/Aug/12 3:59 AM,10/May/19 2:36 AM,06/Aug/12 9:40 AM,,,,,,,,2.2 M4,2.2 M4 Sprint 4,,,,Core,,,,0,transactions,,,,,,,,,;10/Jul/12 2:55 AM;abilan;7200,;11/Jul/12 7:27 AM;abilan;14400,,,,,,,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,213062400,,,,,2012-07-09 05:31:21.337,31298,true,abilan(abilan),,,,0|i05o5b:,33118,30998,http://forum.springsource.org/showthread.php?128015,,,,,"09/Jul/12 2:32 AM;abilan;Hi, all

A little question about consistency: there is only one method ({{releaseMessage}}) in the {{DelayHandler}} which is invoked in the separate thread and which initiates followed message-flow via send Message into {{output-channel}}. So, only this method and his thread need to be wrapped with transaction. 
Will it be OK if we'll use here just {{TransactionTemplate}} around {{DelayHandler#releaseMessage}} instead of {{TransactionInterceptor}} and proxying of entire {{DelayHandler}} as it done for {{JpaOutboundGateway}} ?","09/Jul/12 5:31 AM;grussell;Hi Artem, I was thinking the same thing.

However, to be consistent with the poller, maybe we should support both <transactional/> and <advice-chain/> sub elements? (Mutually exclusive, of course).
","09/Jul/12 6:12 AM;abilan;{quote}
support both <transactional/> and <advice-chain/> sub elements
{quote}

H-m-m... Not sure that we really need some other aspects around only one {{DelayHandler#releaseMessage}}. By the way: there is only *<transactional>* in the JPA module...
And I also say more: there is no so much usage of *<advice-chain>* with the <poller> on the practice.
With SI-namespace we provide only limited set of methods to advising with the AOP. IMO: we should eliminate <advice-chain> at all to avoid some confusing configuration.

With {{TransactionTemplate}} there is no so much changes, and for <advice-chain> we need introduce some {{DelayHandlerFactoryBean}} to write a code about proxying {{DelayHandler}}. But here I don't like to use default {{MatchAlwaysTransactionAttributeSource}} from {{IntegrationNamespaceUtils#configureTransactionAttributes}}: in this case all {{DelayHandler}}'s methods will be advised, as it is done for {{JpaOutboundGateway}}.
Or we need introduce some internal {{DelayHandler$DelayedMessageReleaser}} ;-).
Or - create proxy for each Message...

So, WDYT?
","10/Jul/12 2:54 AM;abilan;So, I thought about this more and found that *advice-chain* and AOP-proxying for {{DelayHandler}} will be the best solution.
I've linked the issue about {{RetryInterceptor}} because it is one more aspect which will be useful around Delayer's releaseMessage scheduled task.
Now I change my mind and going to build some {{FactoryBean}} to proxying {{DelayHandler}} (or some internal releaseMessage task implementation) with *advice-chain*.
Some note: to start the work I need your agreement ;-)","11/Jul/12 6:31 AM;abilan;Hi, Gary

I've made some advice-chain implementation for {{DelayHandler}} without {{FactoryBean}}, so will it be OK if I make PR and we'll see what's going on together? 
In some places I've got doubts :-(","11/Jul/12 7:18 AM;grussell;Hi Artem,

We were just talking about this; we were thinking maybe just transactional is ok for now, and we can add advice chain later, if someone has a use case. However, if you have it already, go ahead and issue a PR and we can take a look.","11/Jul/12 7:27 AM;abilan;Thank you, guys, for your attention.
Issue PR is here: https://github.com/SpringSource/spring-integration/pull/546","07/Aug/12 2:06 AM;abilan;Hi, Gary!
Thank you for merging my PR, but I was changing my mind and was going to rework dalayer's 'advice-chain' ability according to your 'request-handler-advice-chain'.
And also I was planing to remove <transactional> as you didn't provide it in the 'request-handler-advice-chain'.
However If you think that my work OK with some your polishing, let it be.

Now a little question: Does it make sense to mention this changes in the Manual and the Migration Guide?

And my apologies that I stop contributing intensively.
","07/Aug/12 4:56 AM;grussell;Hi Artem, 

No; providing the ability to making the delayer's ""dispatcher"" thread transactional is completely orthogonal to the <request-handler-advice-chain/> implementation. If I had added that feature to the delayer, it would apply to the *storing* of the delayed message only, and nothing to do with dispatching the delayed message later.

Also, the <request-handler-advice-chain /> is *not* intended to make the handleRequestMessage() transactional, it is to add advices such as expression evaluating (after success or failure) against the inbound message - such as to remove or move a file payload; circuit breaker advice; retry advice. Of course, someone *could* add a tx advice, but that is certainly *not* the intent of the feature.

Note: I did *not* add <request-handler-advice-chain/> to the delayer; at the time, I didn't think it made sense. I suppose one *could* make an argument that a retry advice might be useful when using, say, a JDBC message store. If you think it's important, open a JIRA (or we can wait until someone asks for it). Note that, while merging, I changed your property to 'delayedAdviceChain' to avoid collision with the ARPMH superclass property (which is not currently exposed on the delay handler).

","07/Aug/12 6:04 AM;abilan;OK, Gary.
Thank you very much for your clarification.

I agree with you that now {{<request-handler-advice-chain/>}} doesn't make sense to {{DelayHandler#handleRequestMessage()}}.
But who know what people will come up... Time will tell.

Nevertheless we should keep in mind: now we ""advice"" the relaese message thread, but the last one invokes {{handleRequestMessage()}} in the end. And people may be a bit confused that message-flow has different behavior when Message is delayed and when not.",,,,,,,,,,,,,,
Fix Javadoc Warnings,INT-2641,44256,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,grussell,grussell,28/Jun/12 12:34 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,29/Jun/12 7:11 AM,2.2 M3 Sprint 3,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,Documentation,,,,0,,,,,,,,Several javadocs have @links to DelayedMessageWrapper which is a private class; so this generates warnings in the build log.,,;29/Jun/12 6:32 AM;abilan;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,216432000,,,,,2012-06-29 03:45:32.859,31513,true,grussell(grussell),,,,0|i05ppz:,33373,31213,,,,,,"29/Jun/12 3:45 AM;abilan;Gary, WDYT about other JavaDoc warnings:
{quote}
AbstractDispatcher.java:42: warning - Tag @link: reference not found: OrderedAwareLinkedHashSet
JpaParserUtils.java:137: warning - @param argument ""element"" is not a parameter name.
AbstractMailReceiver.java:349: warning - @param argument ""folder"" is not a parameter name.
IntegrationMBeanExporter.java:438: warning - Tag @link: malformed: ""#setShutdownExecutor(Executor))""
IntegrationMBeanExporter.java:438: warning - Tag @link: reference not found: #setShutdownExecutor(Executor))
{quote}
?
Should I fix them here and change the title & description of the issue?
{{DelayHendler}}'s JavaDoc warning fix is very simple, so I don't want to make PR with only one line change ;-)","29/Jun/12 5:45 AM;grussell;I agree - please go ahead and fix these others too, under this JIRA.

Thannks!",29/Jun/12 6:32 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/529,,,,,,,,,,,,,,,,,,,,,
DelayerHandlerRescheduleIntegrationTests Fails on OSX,INT-2640,44249,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,28/Jun/12 6:31 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,29/Jun/12 7:04 AM,2.2 M3 Sprint 3,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,JDBC Support,,,,0,PullRequest,,,,,,,Some timing problem with Derby; the test doesn't really need derby; switching to H2 solves the problem.,,;28/Jun/12 7:13 AM;grussell;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,INT-1132,,,,,,,,,,,,,,,,,,,216518400,,,,,,31512,false,grussell(grussell),,,,0|i05ppr:,33372,31212,,,,,,28/Jun/12 7:13 AM;grussell;Issued Pull Request: https://github.com/SpringSource/spring-integration/pull/526,,,,,,,,,,,,,,,,,,,,,,,
GatewayProxyFactoryBean Annotation overwrite properties,INT-2636,44187,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,mbeil,mbeil,24/Jun/12 12:19 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,27/Jun/12 10:37 AM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,Core,,,,0,PullRequest,,,,,,,"In the GatewayProxyFactoryBean the reply timeout is overwritten by the annotation value, if an gateway annotation is given. IMHO this is an error because no where it is explained that there is a default value in the gateway annotation, where this value is set to -1 (unbound). So in case the property is set and the annotation is used as explained in the documentation, it overwrittes the reply timeout, without any notice to the developer.

The interesting lines are (#336 and following)

		Gateway gatewayAnnotation = method.getAnnotation(Gateway.class);

		long replyTimeout = this.defaultReplyTimeout;

		if (gatewayAnnotation != null) {

			replyTimeout = gatewayAnnotation.replyTimeout();

This should either be fixed by adding a note in the documentation or by changing the code

                        if (gatewayAnnotation.replyTimeout() > replyTimeout) {
                           relyTimeout = gatewayAnnotation.replyTimeout();
                        }

It took me several hours to find out why the reply timeout stayed to unbound, even if the property was set correctly. In the documentation there is no hint that the annotation has a default value of -1. IMHO the property should overwrite the annotation.",,;26/Jun/12 11:33 AM;grussell;10800,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,216691200,,,,,2012-06-26 11:32:05.917,31511,false,grussell(grussell),,,,0|i05ppj:,33371,31211,,,,,,26/Jun/12 11:32 AM;grussell;PR Issued: https://github.com/SpringSource/spring-integration/pull/524,,,,,,,,,,,,,,,,,,,,,,,
TCP: Use receiveBufferSize to Size the Piped Streams for NIO,INT-2635,43975,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,grussell,grussell,21/Jun/12 3:38 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,28/Jun/12 2:06 PM,2.2 M2,,,,,,,2.1.3,2.2 M3,2.2 M3 Sprint 4,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,,,;28/Jun/12 2:06 PM;grussell;60,;28/Jun/12 2:07 PM;grussell;3540,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,216518400,,,,,,31276,false,grussell(grussell),,,,0|i05o0f:,33096,30976,,,,,,"28/Jun/12 9:31 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/528 (2.1.x)
PR: https://github.com/SpringSource/spring-integration/pull/527 (2.2.x)",,,,,,,,,,,,,,,,,,,,,,,
Add Local File Dispostion Logic to (S)FTP Adapters,INT-2633,43946,37007,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,grussell,grussell,20/Jun/12 7:13 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Jul/12 4:08 PM,2.2 M2,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,,,,,0,PullRequest,,,,,,,"INT-1849 / INT-2147 added disposition-expression, disposition-result-channel, and dispostion-send-timeout attributes to the FileReadingMessageSource. The (S)FTP adapters utilize this message source after synchronizing the local and remote directories.

We should add the disposition attributes to the (S)FTP adapters so the local files can be disposed of in the same way.",,;06/Jul/12 10:41 AM;grussell;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,INT-2147,,,,,,,,,,,,,,,,,,,215827200,,,,,,31247,false,grussell(grussell),,,,0|i05ntz:,33067,30947,,,,,,06/Jul/12 10:19 AM;grussell;Pull Request: https://github.com/SpringSource/spring-integration/pull/538,,,,,,,,,,,,,,,,,,,,,,,
Remove from 'GroovyControlBusFactoryBean.ManagedBeansBinding#getVariable()' logic about BeanDefinition,INT-2631,43942,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,20/Jun/12 4:16 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,28/Jun/12 8:19 AM,,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,Groovy Support,,,,0,groovy,,,,,,,"{{Groovy Control Bus}} & {{Expression Control Bus}} should have similar behavior. The last one doesn't have a check around {{BeanDefinition}} during execution.
And it will be enough to catch {{BeanIsAbstractException}} in the {{Groovy Control Bus}}, as it is possible in the {{Expression Control Bus}}.
In additionals: {{Expression Control Bus}} allows to invoke commands for *prototype* Beans.
So, {{GroovyControlBusFactoryBean.ManagedBeansBinding#getVariable()}} also should follow with this logic.

The real cause of this issue is raised from the ability to use Bean's aliases in the command scripts. It's difficult to know what is the real *BeanName* for {{MessageHandler}}. But on the other side - we can't use {{beanFactory.getBeanDefinition(name)}} via *BeanAlias*.",,;22/Jun/12 6:21 AM;abilan;3600,;22/Jun/12 11:10 AM;abilan;3600,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,217036800,,,,,,31243,true,grussell(grussell),,,,0|i05nt3:,33063,30943,,,,,,22/Jun/12 6:21 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/518,,,,,,,,,,,,,,,,,,,,,,,
"Unable to convert MessageHistory, MessageHeaders via bundled converters.",INT-2630,43924,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,dvb123,dvb123,20/Jun/12 12:35 AM,05/Jul/12 2:40 PM,10/May/19 2:36 AM,27/Jun/12 12:37 PM,2.1 GA,,,,,,,2.1.3,2.2 M3,2.2 M3 Sprint 4,,,Core,,,,0,PullRequest,,,,,,,"Since updating to 2.1 and Spring 3.1 our router and one of our message transformer classes in our application now fails with a {{IllegalArgumentException}} in the Spring Core {{CollectionFactory}}

For {{MessageHistory}} we get _""Could not instantiate Collection type""_  and for {{MessageHeaders}} _""Could not instantiate Map type"".  This appears to be due to the target type not having a zero arg constructor so the calls to <class>.newInstance() fail.   

Logging this as would have thought this should work out of the box.",,;25/Jun/12 12:40 PM;grussell;21600,,,,,,,,,0,21600,,,0,21600,,,,,,,,SPR-9566,,,,,,,,,,,,,,,,,,,216172800,,,,,2012-06-25 07:51:13.415,31225,true,grussell(grussell),,,,0|i05np3:,33045,30925,,,,,,"20/Jun/12 12:45 AM;dvb123;Our code is like this:

{code}
   @Transformer
    public Object transform(@Header String token, @Headers MessageHeaders headers, @Payload Object payload) {

        if (payload instanceof Foo) {
            return transformFoo(...);
        }
        return payload;
    }

{code}

{code}
    @Router
    public String route(@Header(""someProperty"") String prop, @Header(""history"") MessageHistory messageHistory) {

   // do some processing
}
{code}

Message history is enabled as per the docs.

There are two workarounds for this - both of which are a bit smelly (?)

1.  Declare a NO OP converter for {{MessageHistory}} {{MessageHeaders}} which just returns the source.
2.  Or, Do the below in the code.

{code}
   @Transformer
    public Object transform(@Header String token, @Headers Map<String, Object> headers, @Payload Object payload) {

        if (payload instanceof Foo) {
            return transformFoo(...);
        }
        return payload;
    }

{code}

{code}
    @Router
    public String route(@Header(""someProperty"") String prop, @Header(""history"") List<Properties> messageHistory) {

   // do some processing
}
{code}

Not sure if either of these is the right way to go really..... option 2 (makes the objects mutable) ... have spent many hours looking into this.

","21/Jun/12 11:18 PM;dvb123;I believe this issue has wrong priority I meant to create it as a _major_.  It breaks our production app & the workaround(s) are not ""easy"".  Please update the ticket - I do not have the necessary privileges to edit it.

thanks.","25/Jun/12 7:51 AM;grussell;Confirmed - with SF 3.1. we now go through MapToMapConverter for the headers, which requires a no-arg constructor.

I am concerned with the performance implications of doing this; I need to understand what/why changed in Spring.
","25/Jun/12 10:58 AM;grussell;Broken by https://github.com/SpringSource/spring-framework/commit/1e39b0bbbc37cac82e19e7d8e085a6665a9166d0#diff-16 (core spring)

Notice that ReflectionHelper (previously) only attempted argument conversion if the argument's index appears in argumentsRequiringConversion

After the above commit, conversion is performed on ALL arguments unconditionally. The argumentsRequiringConversion parameter is no longer used in this method.

In this case, arguments don't need conversion...

{code}

@Transformer
public Object transform(@Headers MessageHeaders headers,
		    @Header(""history"") MessageHistory history, @Payload Object payload) {

       return payload;
}


expectedArgTypes

[@org.springframework.integration.annotation.Headers org.springframework.integration.MessageHeaders<@org.springframework.integration.annotation.Headers java.lang.String, @org.springframework.integration.annotation.Headers java.lang.Object>, @org.springframework.integration.annotation.Header org.springframework.integration.history.MessageHistory<@org.springframework.integration.annotation.Header java.util.Properties<?, ?>>, @org.springframework.integration.annotation.Payload java.lang.Object]

suppliedArgTypes

[org.springframework.integration.MessageHeaders<?, ?>, org.springframework.integration.history.MessageHistory<?>, java.lang.String]

{code}

resuling in null in argumentsRequiringConversion","25/Jun/12 12:05 PM;grussell;Tried this...

{code}
        static void convertArguments(TypeConverter converter, Object[] arguments, Object methodOrCtor,
                        int[] argumentsRequiringConversion, Integer varargsPosition) throws EvaluationException {
+               Set<Integer> argumentsToConvert = null;
+               if (argumentsRequiringConversion != null && argumentsRequiringConversion.length > 0) {
+                       argumentsToConvert = new HashSet<Integer>();
+                       for (int argIndex : argumentsRequiringConversion) {
+                               argumentsToConvert.add(argIndex);
+                       }
+               }
+
                if (varargsPosition == null) {
                        for (int i = 0; i < arguments.length; i++) {
-                               TypeDescriptor targetType = new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor, i));
-                               Object argument = arguments[i];
-                               arguments[i] = converter.convertValue(argument, TypeDescriptor.forObject(argument), targetType);
+                               if (argumentsToConvert != null && argumentsToConvert.contains(i)) {
+                                       TypeDescriptor targetType = new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor, 
+                                       Object argument = arguments[i];
+                                       arguments[i] = converter.convertValue(argument, TypeDescriptor.forObject(argument), targetType);
+                               }
                        }
                } else {
                        for (int i = 0; i < varargsPosition; i++) {
-                               TypeDescriptor targetType = new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor, i));
-                               Object argument = arguments[i];
-                               arguments[i] = converter.convertValue(argument, TypeDescriptor.forObject(argument), targetType);        
+                               if (argumentsToConvert != null && argumentsToConvert.contains(i)) {
+                                       TypeDescriptor targetType = new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor, 
+                                       Object argument = arguments[i];
+                                       arguments[i] = converter.convertValue(argument, TypeDescriptor.forObject(argument), targetType);
+                               }
                        }
                        MethodParameter methodParam = MethodParameter.forMethodOrConstructor(methodOrCtor, varargsPosition);

{code}

and ExpressionTestsUsingCoreConversionService.testConvert() failed. Seems that SpEL relies on the argumentsRequiringConversion parameter being ignored.","26/Jun/12 9:20 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/522 (2.2.x)
PR: https://github.com/SpringSource/spring-integration/pull/523 (2.1.x)

Detour Spring 3.1 change by skipping conversion if param actual and expected types are MessageHistory or MessageHeaders.","28/Jun/12 12:25 AM;dvb123;I have built 2.1.3.BUILD-SNAPSHOT with the ""detour"" & verified it fixes the problem in our application.  Many thanks.

I imagine release of 2.1.3 will be in a month or two ?
 ","28/Jun/12 4:51 AM;grussell;Hi David, 

The team will discuss on Monday but, barring any new issues, we will probably be able to cut a 2.1.3 release next week.","28/Jun/12 8:54 AM;dvb123;Interesting.  Our freeze is COP Tuesday, so there is a chance we could build with 2.1.3 when we go into production.  ","28/Jun/12 2:16 PM;grussell;We have one open issue we want to get into the 2.1.3 release; if we make our best efforts to release it mid-morning US East Coast time Monday July 2, will that work for you?

Unless something new comes it, it will only have this and 3 other fixes.

Thanks","28/Jun/12 2:23 PM;dvb123;Yes, that timescale would work.  We have the NO-OP converter workaround in place, but it would be good to release our app without that.
","02/Jul/12 2:53 PM;dvb123;2.1.3.RELEASE pulled from SpringSource repo, and integrated into our build.  Many thanks. ",,,,,,,,,,,,
Document delayer's changes from Spring Integration 2.2,INT-2623,43899,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,18/Jun/12 2:08 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,22/Jun/12 7:27 AM,,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Documentation,,,,0,documentation,,,,,,,,,;21/Jun/12 2:42 PM;abilan;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,INT-1132,INT-2622,,,,,,,,,,,,,,,,,,,,,,,,217123200,,,,,,31200,true,grussell(grussell),,,,0|i05njb:,33019,30900,,,,,,21/Jun/12 2:41 PM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/516,,,,,,,,,,,,,,,,,,,,,,,
Add support for Control Bus & JMX to DelayerHandler to allow control rescheduling at runtime,INT-2622,43898,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,18/Jun/12 2:05 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 9:08 AM,,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Core,,,,0,,,,,,,,,,Issued PR: https://github.com/SpringSource/spring-integration/pull/507;20/Jun/12 2:46 AM;abilan;10800,,,,,,,,10800,0,10800,100%,10800,0,10800,,INT-1132,,,,,,,,,,,,,,,,,,,,,,,,,217209600,,,,,,31199,true,grussell(grussell),,,,0|i05nj3:,33018,30899,,,,,,20/Jun/12 2:47 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/507 ,,,,,,,,,,,,,,,,,,,,,,,
FileOutboundChannelAdapterIntegrationTests does not pass on Windows,INT-2621,43897,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,17/Jun/12 11:54 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,18/Jun/12 3:00 PM,2.2 M3 Sprint 2,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Testing,,,,0,tests,,,,,,,"The main issue is lying on File.separator which is different on different OSs.
{{FileOutboundChannelAdapterIntegrationTests#saveToSubDirWithWrongExpression}} throws on Windows:
{quote}
java.lang.IllegalArgumentException: Destination path [target\base-directory\sub-directory\foo.txt] does not point to a directory.
{quote}
which isn't the same what expected:
{quote}
Destination path [target/base-directory/sub-directory/foo.txt] does not point to a directory.
{quote}", Windows,;18/Jun/12 1:30 AM;abilan;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,INT-805,,,,,,,,,,,,,,,,,,,,,,,,,217468800,,,,,,31198,true,grussell(grussell),,,,0|i05niv:,33017,30898,,,,,,18/Jun/12 1:28 AM;abilan;Link to issue which raised the problem: INT-805,18/Jun/12 1:29 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/501,,,,,,,,,,,,,,,,,,,,,,
File Adapter - Document directory-expression attribute in Reference Manual,INT-2618,43872,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,14/Jun/12 10:04 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,15/Jun/12 8:46 AM,,,,,,,,2.2 M3,2.2 M3 Sprint 2,,,,Documentation,File Support,,,0,,,,,,,,Document the new *directory-expression* attribute as implemented by INT-805,,;14/Jun/12 3:01 PM;hillert;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,INT-805,,,,,,,,,,,,,,,,,,,,,,,,,217728000,,,,,,31173,false,grussell(grussell),,,,0|i05ndb:,32992,30873,,,,,,"14/Jun/12 3:00 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/496

* Add documentation for directory-expression
* Add documentation for auto-create-directory attribute
* Refactor File Adapter chapter slightly so that it flows better",,,,,,,,,,,,,,,,,,,,,,,
Schema Typo s/hostory/history/,INT-2616,43853,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Trivial,Complete,hillert,grussell,grussell,13/Jun/12 1:19 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,20/Jun/12 11:56 AM,2.2 M2,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Documentation,,,,0,,,,,,,,<message-history/> element has typo.,,;18/Jun/12 1:13 PM;hillert;1800,;19/Jun/12 1:21 PM;hillert;1800,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,217209600,,,,,2012-06-18 13:13:00.345,31154,false,grussell(grussell),,,,0|i05n93:,32973,30854,,,,,,18/Jun/12 1:13 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/503,20/Jun/12 11:56 AM;hillert;PR Merged,,,,,,,,,,,,,,,,,,,,,,
Add initial support for MongoDB Inbound/Outbound Channel adapters,INT-2612,43820,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,amolnayak.spring,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,11/Jun/12 11:28 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,22/Aug/12 8:00 AM,2.2 M2,,,,,,,2.2 M4,2.2 M4 Sprint 4,,,,MongoDB Support,,,,0,,,,,,,,An umbrella issue for two subtasks to be created one for inbound and one for outbound,,;15/Jul/12 9:22 AM;amolnayak.spring;720,;28/Jul/12 11:59 AM;amolnayak.spring;86400,,,,,,,,0,87120,,,0,87120,,,,,,,,,,,,,,,,,,,,,,,,,,,213926400,,,,,2012-07-19 10:56:44.805,31121,true,grussell(grussell),,,,0|i05n1r:,32940,30821,,,,,,"19/Jul/12 10:56 AM;amolnayak.spring;Issued PR https://github.com/SpringSource/spring-integration/pull/558, currently only Outbound adapters are developed. Will be subsequently updated to include inbound adapters too.",28/Jul/12 11:58 AM;amolnayak.spring;Issued a PR https://github.com/SpringSource/spring-integration/pull/565 with all the changes for inbound and outbound adapters,,,,,,,,,,,,,,,,,,,,,,
"Come up with 'unique bean name' logic when components are defined inside the <chain> and register their own additional beans, e.g. 'JpaExecutor' in the 'RetrievingJpaOutboundGatewayParser'",INT-2607,43787,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,abilan,abilan,08/Jun/12 5:01 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 1:09 PM,2.2 M2,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Core,,,,0,chain,,,,,,,"Since handlers aren't registerd as beans when they are defined inside the <chain> there is an issue about registration some internal additional components as beans, whose beanId is based on result of {{AbstractBeanDefinitionParser#resolveId()}} with non-registered in the future current {{BeanDefinition}}.
The main issue in the end, when we define several similar components (e.g. <jpa:retrieving-outbound-gateway>, <jpa:updating-outbound-gateway> etc.) and the one of them is inside the {{<chain>}} the last one overwrites registered before some additional bean at the same {{beanId}}.
E.g:
{code:xml}
<chain>
     <jpa:retrieving-outbound-gateway/>
</chain>

<jpa:updating-outbound-gateway/>
{code}
The first one doesn't register bean with id *org.springframework.integration.jpa.outbound.JpaOutboundGatewayFactoryBean#0*.
And after invocation of:
{code:java}
final String gatewayId = this.resolveId(gatewayElement, jpaOutboundGatewayBuilder.getRawBeanDefinition(), parserContext);
{code}
uses its result with suffix "".jpaExecutor"" to register {{JpaExecutor}} bean.
But the last one does the same with the same *org.springframework.integration.jpa.outbound.JpaOutboundGatewayFactoryBean#0* {{resolveId()}} result.
",,;21/Jun/12 6:47 AM;abilan;14400,,,,,,,,28800,14400,14400,50%,28800,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,217123200,,,,,,31089,true,grussell(grussell),,,,0|i05muv:,32909,30789,,,,,,08/Jun/12 5:04 AM;abilan;Current issue risen after changes from linked INT-2321.,09/Jun/12 5:18 AM;abilan;The linked INT-1029 gave rise to this issue too.,"21/Jun/12 6:26 AM;abilan;After hard investigation throughout the project I made decision there is no need so much changes. So, I pull this issue to '2.2 M3 Sprint 3' and going to make PR soon.",21/Jun/12 6:47 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/512,,,,,,,,,,,,,,,,,,,,
Add pseudo-transaction support for POP3 Integration,INT-2606,43779,37007,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,al94781,al94781,07/Jun/12 12:32 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,14/Jun/12 2:04 PM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 2,,,,Mail Support,,,,0,,,,,,,,"We would like to use Spring Integration 2.1.1 to read mail off a POP3 mailbox transactionally. This transactionality is so that we can read an email message and persist it to Oracle and remove from the mailbox. In the event of a transaction rollback we want the email to remain in the mailbox (i.e. not be deleted).

Our problem is that, despite being in a transaction (more detail on that in a second) the mailbox is opened, the mail is retrieved, marked for deletion and the connection closed irrespective of the rest of the transaction. This means it is too late to not delete the mail if something fails later on (as the connection is closed and the mailbox gone into UPDATE state which permanently removes the email).

For more details on this see the forum post at: http://forum.springsource.org/showthread.php?127246-Transactional-POP3-Mailbox-access-with-Spring-Integration",,;13/Jun/12 5:00 AM;grussell;43200,,,,,,,,43200,0,43200,100%,43200,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,217900800,,,,,2012-06-08 04:44:52.552,31081,true,grussell(grussell),,,,0|i05mt3:,32901,30781,,,,,,"08/Jun/12 4:22 AM;al94781;We've done a little more investigation on this.  The problem lies specifically in the use of the org.springframework.integration.mail.AbstractMailReceiver.receive( ) method.  This is called by our inbound-channel-adaptor and unfortunately not only does this open the mailbox, and get the mail, but also (in the finally block) calls MailTransportUtils.closeFolder(this.folder, this.shouldDeleteMessages);  This means that effectively the POP3 part of the transaction is ""committed"" before the rest of the channel transaction is started.

What we think needs to be provided is another Receiver with the current receive() split into separate methods; one for getting the mail and marking got mail as ""to be deleted"", and a second for closing the mailbox (and making the deletions permanent, or undoing them).  The former could then be called at the start of a transaction, and the latter could be called at the end of a transaction, specifying true for ""shouldDeleteMessages"" is we are committing everything, and false if we are rolling back.

Consequently, it seems that another inbound channel adaptor will also be required to exert this control based on the outcome of the transaction which it will start.","08/Jun/12 4:44 AM;grussell;The ""Spring"" way of doing this would probably be to bind the session/folder to the thread in a ResourceHolder and have a transaction manager take the appropriate action when the thread returns.

Bear in mind, though, that this can never be a ""real"" transaction because POP3 is not transactional; it would be an approximation only. That said, worse case is you'll get duplicates (e.g. if the power goes off after the DB commit and before the mail is deleted). Transaction synchronization between the DB tx and the POP3 pseudo tx would minimize this window, but it still exists.

If your app can deal with, or reject, duplicates; all the better.

I am making this a subtask of INT-1849.","08/Jun/12 6:17 AM;mark.fisher;Thank you Gary. I was going to make the link to INT-1849 here myself. This is a good use-case, parallel to those involving file reading.","08/Jun/12 8:31 AM;al94781;Hi Gary,

We definitely would prefer to go with the grain of spring-integration rather than against it.  Consequently, what you suggest sounds like a good solution and I presume that this then means when you add a <transaction> attribute to a <poller> in a mail inbound-channel-adapter it'll work more like you would expect?

We're more than happy if this results in duplicates. As you say the ""transactional"" that POP3 thinks it is is not what everyone else means.  We're already designing things along the ""Best Efforts 1PC"" pattern with the POP3 ""commit"" as the last step so I think this would chime exactly with how this will be implemented.  We have, as a result, already built things so we can deal with duplicates.

All in all, it sounds like something we'd like to get our hands on as soon as possible.  Is there an ETA for the next release (which I guess this might be included in?)

TIA

Cheers, Andrew","11/Jun/12 5:18 PM;grussell;2.2. is scheduled for late summer.

We'll see what we can do to get it into the next milestone, due at the end of this month.","12/Jun/12 1:14 AM;al94781;Cheers Gary,

We'll watch out for the milestone.  We'd be happy to try it out in the wild once it's available.  Thanks for the update.

Regs, Andrew","12/Jun/12 4:56 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/493

Note: this still has to go through review, but you can give it a spin if you want; my branch is here https://github.com/garyrussell/spring-integration/tree/INT-1849",12/Jun/12 11:56 PM;al94781;Superb.  Cheers Gary.  We start a new iteration today so should be able to try it out today / tomorrow.,,,,,,,,,,,,,,,,
Add SmartLifecycle support for MessageHandlerChain,INT-2605,43770,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,07/Jun/12 6:39 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 7:20 AM,,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Core,,,,0,chain,,,,,,,"Since we now support a lot of components inside the {{<chain>}} and and they, in turn, may implement {{SmartLifecycle}}, it is necessary to add implementation of the last one to {{MessageHandlerChain}} as delegation to each {{MessageHandler}} which implements {{SmartLifecycle}}.",,;19/Jun/12 6:05 AM;abilan;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,217123200,,,,,2012-06-21 07:25:37.575,31072,true,grussell(grussell),,,,0|i05mrb:,32893,30772,,,,,,"08/Jun/12 4:14 AM;abilan;Current issue risen after changes from linked INT-2321.
Right now handlers inside the chain aren't registered as Beans, so their SmartLifecycle is never called.",19/Jun/12 6:05 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/505,21/Jun/12 7:20 AM;abilan;Merged by Gary Russell,"21/Jun/12 7:25 AM;grussell;Hi Artem, I usually like to wait for the build (https://build.springsource.org/browse/INT-B22X-85) to complete before resolving the JIRA.

(But I have been known to forget too :-)","21/Jun/12 7:39 AM;abilan;Hi, Gary!
Thank you that you steady down me ;-).
By the way: can we somehow to configure Bamboo to close issues automaticaly?",,,,,,,,,,,,,,,,,,,
Remove Deprecated TCP Header,INT-2604,43768,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,07/Jun/12 5:10 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 10:01 AM,2.2 M2,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Redis Support,,,,0,PullRequest,,,,,,,IPHeaders.CONNECTION_SEQ,,;07/Jun/12 9:43 AM;grussell;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,218332800,,,,,,31070,false,grussell(grussell),,,,0|i05mqv:,32891,30770,,,,,,07/Jun/12 9:43 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/485,,,,,,,,,,,,,,,,,,,,,,,
TCP Endpoints Client Mode Improvements,INT-2599,43695,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,01/Jun/12 5:51 AM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,07/Sep/12 5:31 AM,2.2 M1,,,,,,,2.2 RC1,,,,,,,,,0,PullRequest,,,,,,,"-1. Add client-mode to outbound gateway.-

2. TCP endpoints use a scheduler for checking client mode connection; currently they use a scheduler declared in the subclass, creating a new one if not supplied; there is already a getTaskScheduler() on the superclass IntegrationObjectSupport, that defaults to using the global scheduler.

3. Also fix XSD docs, which indicate default for client mode is true, when it's actually false.",,;30/Aug/12 12:45 PM;grussell;3600,,,,,,,,10800,0,3600,33%,10800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,211075200,,,,,,30997,false,grussell(grussell),,,,0|i05man:,32818,30697,,,,,,30/Aug/12 12:45 PM;grussell;Issued PR: https://github.com/SpringSource/spring-integration/pull/601,,,,,,,,,,,,,,,,,,,,,,,
Fix the static port in the HttpOutboundGatewayWithMethodExpression test once INT-2564 is addressed ,INT-2597,43686,41717,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,31/May/12 6:03 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,22/Jun/12 8:31 AM,2.2 M1,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,HTTP Support,,,,0,,,,,,,,,,;22/Jun/12 8:05 AM;hillert;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,INT-2564,,,,,,,,,,,,,,,,,,,,,,,,,217036800,,,,,2012-06-22 07:58:04.526,30988,false,grussell(grussell),,,,0|i05m8n:,32809,30688,,,,,,22/Jun/12 7:58 AM;hillert;Use *SocketUtils* to determine port dynamically rather than hard-coding it,22/Jun/12 8:03 AM;hillert;PR issued: https://github.com/SpringSource/spring-integration/pull/519,,,,,,,,,,,,,,,,,,,,,,
<int-jmx:mbean-exporter...> doesn't exist in XSD v2.1,INT-2596,43640,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,miko95,miko95,31/May/12 5:36 AM,30/Jul/14 6:05 AM,10/May/19 2:36 AM,21/Jun/12 12:38 PM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Documentation,,,,0,,,,,,,,"In the doc, section 8.1.6 Mbean exporter, the XML snippet seems out of date:

 <int-jmx:mbean-exporter default-domain=""my.company.domain"" server=""mbeanServer""/>

 <bean id=""mbeanServer"" class=""org.springframework.jmx.support.MBeanServerFactoryBean"">
     <property name=""locateExistingServerIfPossible"" value=""true""/>
 </bean>

<int-jmx:mbean-exporter...> type doesn't exist in the XSD v2.1. It seems that it has been renamed by <int-jmx:mbean-export...>.",,;19/Jun/12 12:36 PM;hillert;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,INT-2127,,,,,,,,,,,,,,217123200,,,,,2012-06-19 12:29:02.358,30983,false,abilan(abilan),,,,0|i05m7j:,32804,30683,,,,,,"19/Jun/12 12:29 PM;hillert;* <int-jmx:mbean-exporter...> doesn't exist in XSD v2.1 --> Should be **mbean-export**
* Convert tabs to spaces 
* Fix code listings that go beyond margins
* Fixed several spelling errors
* Improve consistency
* Improve column layout of tables",19/Jun/12 12:35 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/506,21/Jun/12 12:38 PM;hillert;PR Merged,,,,,,,,,,,,,,,,,,,,,
Upgrade Spring Integration WS to Spring WS 2.1.0,INT-2593,43619,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,30/May/12 8:20 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,04/Jun/12 3:49 PM,2.2 M1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Web Services,,,,0,,,,,,,,,,;04/Jun/12 3:46 PM;oleg.zhurakousky@springsource.com;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,218592000,,,,,,30962,false,grussell(grussell),,,,0|i05m2v:,32783,30662,,,,,,04/Jun/12 3:48 PM;oleg.zhurakousky@springsource.com;PR https://github.com/SpringSource/spring-integration/pull/475,,,,,,,,,,,,,,,,,,,,,,,
Move 'ServerUtils' from Spring Integration Samples (multiplex) to TCP Module,INT-2590,43582,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,hillert,hillert,26/May/12 9:17 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 11:13 AM,2.2 M1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,TCP/UDP Support,,,,0,,,,,,,,"Refactor (Move) to TCP Module: *ServerUtils.java*

from https://github.com/garyrussell/spring-integration-samples/commit/80653acd073c2c2c5243b717d603ec6dd4603dae",,;07/Jun/12 11:08 AM;grussell;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,218332800,,,,,2012-06-07 09:59:07.336,30925,false,grussell(grussell),,,,0|i05lun:,32746,30625,,,,,,"07/Jun/12 9:59 AM;grussell;Also call its waitListening() in failing tests 

https://build.springsource.org/browse/INT-B22X-63

https://build.springsource.org/artifact/INT-B22X/JOB1/build-63/Test-Results/spring-integration-ip/build/reports/tests/index.html

TcpSendingMessageHandlerTests.testOutboundChannelAdapterWithinChain
DefaultTimeoutTests.test

Also, change all TCP tests that already have a waitListening() method to use this common test method.

",07/Jun/12 11:07 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/487,,,,,,,,,,,,,,,,,,,,,,
"Reference Doc JDBC Chapter: Document the difference between ""max-rows-per-poll"" versus ""max-messages-per-poll""",INT-2574,43489,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,20/May/12 11:04 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,16/Jul/12 8:00 AM,2.2 M1,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,,,,,0,,,,,,,,"Document in the JDBC Chapter the difference between ""max-rows-per-poll"" versus ""max-messages-per-poll""

The JDBC Chapter does not mention the poller's ""max-messages-per-poll"" attribute. The problem is that to end-users both attributes do sound similar and may lead to confusing when using e.g. a JDBC Inbound Channel Adapter.",,;11/Jul/12 9:52 PM;hillert;7200,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,215395200,,,,,,30832,false,grussell(grussell),,,,0|i05l9z:,32653,30532,,,,,,11/Jul/12 9:52 PM;hillert;Issued Pull Request: https://github.com/SpringSource/spring-integration/pull/549,,,,,,,,,,,,,,,,,,,,,,,
Move SocketTestUtils.findAvailableServerSocket to Spring Integration Test Module,INT-2564,43383,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,16/May/12 2:34 PM,21/Oct/12 7:23 PM,10/May/19 2:36 AM,21/Jun/12 9:52 AM,2.2 M1,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Testing,,,,0,,,,,,,,"Refactor SocketTestUtils.java

move the following methods to the Spring Integration Module *spring-integration-test*:

* findAvailableServerSocket
* findAvailableUdpSocket

Possibly to: org.springframework.integration.test.util.SocketUtils

Also improve the methods and add a *random seed* option. 

These methods should be quite useful in conjunction with the Spring 3.1 Environment abstraction to minimize the usage of hardcoded ports in testing scenarios in order to improve portability, e.g. local machine vs. CI server. ",,;20/Jun/12 12:22 PM;hillert;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,INTSAMPLES-76,,,,,,,,,,,,,,,,,,,206582400,,,,,2012-10-21 19:23:52.321,30802,false,sbrannen(sbrannen),,,,0|i05l3b:,32623,30502,,,,,,20/Jun/12 12:22 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/510,21/Oct/12 7:23 PM;sbrannen;Please note that this relates to SPR-8032.,,,,,,,,,,,,,,,,,,,,,,
Move method PollerParser.configureTransactionAttributes to IntegrationNamespaceUtils,INT-2546,43268,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,hillert,hillert,09/May/12 1:14 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,12/Jun/12 9:34 AM,2.2 M2,,,,,,,2.2 M3,2.2 M3 Sprint 2,,,,Adapters,Core,,,0,,,,,,,,"For the JPA Adapter I copied a method:

from org.springframework.integration.config.xml.PollerParser because the respective method is private. We need to move the method ""configureTransactionAttributes"" to IntegrationNamespaceUtils to eliminate code duplication.

Currently the copied method resides in:

org.springframework.integration.jpa.config.xml.JpaParserUtils

public static BeanDefinition configureTransactionAttributes(Element txElement)",,;11/Jun/12 9:43 PM;hillert;3600,,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,217987200,,,,,,30687,false,grussell(grussell),,,,0|i05kdr:,32508,30387,,,,,,11/Jun/12 9:43 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/489,,,,,,,,,,,,,,,,,,,,,,,
Class AbstractJmsChannel is really not abstract,INT-2540,43145,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,dr_pompeii,dr_pompeii,30/Apr/12 9:31 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 9:54 AM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Core,JMS Support,,,0,PullRequest,,,,,,,The class AbstractJmsChannel is really not an abstract class,,;07/Jun/12 9:16 AM;grussell;360,,,,,,,,900,0,360,40%,900,0,360,,,,,,,,,,,,,,,,,,,,,,,,,,,218332800,,,,,2012-06-07 09:16:24.945,30564,false,grussell(grussell),,,,0|i05jmf:,32385,30264,http://forum.springsource.org/showthread.php?125931-Error-Is-AbstractJmsChannel-an-abstract-class-or-not,,,,,07/Jun/12 9:16 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/484,,,,,,,,,,,,,,,,,,,,,,,
Add priority support for int-jms:channel,INT-2523,43013,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,astorath,astorath,18/Apr/12 12:57 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,20/Jun/12 6:53 AM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,JMS Support,,,,1,,,,,,,,"1. Spring integration introduced DynamicJmsTemplate for QOS support.
Although <int-jms:channel> is initialized using DynamicJmsTemplate, its implementation does not provide any option to set JMS message priority explicitly.

DynamicJmsTemplateProperties class is private, restricting any option to change this behavior.

Consider adding QOS option to <int-jms:channel> aggregate and priority handling on AbstractJmsChannel.doSend execution.

2. javax.jms.Message interface has its own JMSPriority, JMSDeliveryMode, JMSExpiration properties. Why not using them instead of complicated DynamicJmsTemplateProperties workaround? Consider adding JMS Template class option to <int-jms:channel> for manual JmsTemplate.doSend implementation.
",,;18/Jun/12 11:50 AM;grussell;10800,,,,,,,,14400,0,10800,75%,14400,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,217382400,,,,,2012-06-18 07:35:06.467,30435,false,grussell(grussell),,,,0|i05itj:,32255,30135,,,,,,18/Jun/12 7:35 AM;m.schmidt;i'm struggling with the same issue. is there a workaround to manipulate the priority of the jms:channel?,"18/Jun/12 7:48 AM;grussell;The JmsChannelFactoryBean does expose the propertyies (priority and explicitQosEnabled); it is just not yet available through the namespace.

You can configure the channel by declaring a <bean/> with class JmsChannelFactoryBean, and setting all its attributes explicitly; for help in how/what attributes to set, see the JmsChannelParser.",18/Jun/12 11:49 AM;grussell;PR Issued: https://github.com/SpringSource/spring-integration/pull/502,,,,,,,,,,,,,,,,,,,,,
"Missing documentation of ""enableDaemonThread"" property of the SFTP session factory",INT-2521,43003,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,jackrabbit,jackrabbit,18/Apr/12 1:21 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,25/Jun/12 2:03 PM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,Documentation,,,,0,,,,,,,,"please add the proper documentation for ""enableDaemonThread"" property of the SFTP session factory",,;23/Jun/12 1:27 PM;hillert;14400,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,216950400,,,,,2012-06-23 13:26:56.289,30425,false,grussell(grussell),,,,0|i05irb:,32245,30125,,,,,,23/Jun/12 1:26 PM;hillert;PR issued: https://github.com/SpringSource/spring-integration/pull/520,,,,,,,,,,,,,,,,,,,,,,,
Resequencer With Custom Comparator Does Not Release Properly,INT-2518,43000,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,oleg.zhurakousky@springsource.com,grussell,grussell,17/Apr/12 2:19 PM,11/Mar/14 7:05 AM,10/May/19 2:36 AM,06/Jun/12 5:15 PM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Core,,,,0,pull-request-submitted,,,,,,,"The ResequencingMessageGroupProcessor allows a custom Comparator to sort the messages in the group. However, the processMessageGroup() method still uses the sequenceNumber header to decide what can be released.

The messages are sorted in some arbitrary order and then we release the partial group based on the sequence number...
{code}
currentSequence = extractSequenceNumber(message);
if (currentSequence - 1 > previousSequence) {
    //there is a gap in the sequence here
    break;
}
{code}
Well, it is very likely there will be a gap because the messages aren't sorted by sequenceNumber.

It seems to me that, if we allow a custom comparator, we must also allow a custom expression to invoke in extractSequenceNumber (or provide some other mechanism to assess what can be released).

I modified one of the test cases to show this problem

{code}

@Test
public void testBasicResequencingWithCustomComparator() throws InterruptedException {
	this.processor.setComparator(new Comparator<Message<?>>() {			
		@SuppressWarnings({ ""unchecked"", ""rawtypes"" })
		public int compare(Message<?> o1, Message<?> o2) {
			return ((Comparable)o1.getPayload()).compareTo(o2.getPayload());
		}
	});
	QueueChannel replyChannel = new QueueChannel();
	Message<?> message1 = createMessage(""789"", ""ABC"", 4, 1, replyChannel);
	Message<?> message2 = createMessage(""123"", ""ABC"", 4, 4, replyChannel);
	Message<?> message3 = createMessage(""456"", ""ABC"", 4, 3, replyChannel);
	Message<?> message4 = createMessage(""111"", ""ABC"", 4, 2, replyChannel);		
	this.resequencer.handleMessage(message1);
	this.resequencer.handleMessage(message3);
	this.resequencer.handleMessage(message2);
	this.resequencer.handleMessage(message4);		
	Message<?> reply0 = replyChannel.receive(0);
	Message<?> reply1 = replyChannel.receive(0);
	Message<?> reply2 = replyChannel.receive(0);
	Message<?> reply3 = replyChannel.receive(0);
	assertNotNull(reply0);
	assertEquals(new Integer(2), reply0.getHeaders().getSequenceNumber());
	assertNotNull(reply1);
	assertEquals(new Integer(4), reply1.getHeaders().getSequenceNumber());
	assertNotNull(reply2);
	assertEquals(new Integer(3), reply2.getHeaders().getSequenceNumber());
	assertNotNull(reply3);
	assertEquals(new Integer(1), reply3.getHeaders().getSequenceNumber());
}
{code}

Only the first message (message4) is released, even though the full ""set"" of 4 messages are complete in that sequences 1, 2, 3, 4 are all present.",,;06/Jun/12 6:51 AM;oleg.zhurakousky@springsource.com;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,217382400,,,,,2012-06-06 06:34:44.431,30422,false,abilan(abilan),,,,0|i05iqn:,32242,30122,,,,,,"06/Jun/12 6:34 AM;oleg.zhurakousky@springsource.com;The actual issue is that any Comparator that is not comparing messages based on their sequential position will not work here since the its not about putting messages in order as it is about detecting a gap between the sequences. So in other words the bug is actually in the design.
What we should have is a new feature/improvement request to expose SpEL expression to allow user to point to a custom header or something in the payload that would represent the sequential position of the Message.
For now we've decided that fixing this issue means removing _setComparator(..)_ method from the ResequencingMessageGroupProcessor and raise a new JIRA as explained above.",06/Jun/12 7:09 AM;oleg.zhurakousky@springsource.com;PR https://github.com/SpringSource/spring-integration/pull/477,18/Jun/12 5:10 AM;grussell;Work around is to set the sequenceNumber header upstream.,,,,,,,,,,,,,,,,,,,,,
Reject Inappropriate request-payload-type Attribute on Http Inbound Endpoint,INT-2516,42992,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,oleg.zhurakousky@springsource.com,grussell,grussell,17/Apr/12 7:11 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 8:43 AM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,HTTP Support,,,,0,pull-request-submitted,,,,,,,"request-payload-type is ignored for GET, HEAD, OPTIONS methods. We should detect/enforce this in onInit().

We should also document the payload-expression attribute in the reference manual.

http://stackoverflow.com/questions/10191884/spring-integration-httpinbound-gateway-payload-type

",,;06/Jun/12 7:44 AM;oleg.zhurakousky@springsource.com;3600,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,218419200,,,,,2012-06-06 07:22:18.45,30414,false,grussell(grussell),,,,0|i05iov:,32234,30114,,,,,,"06/Jun/12 7:22 AM;oleg.zhurakousky@springsource.com;Since we are allowing several methods to be specified we should do the same thing we do in the outbound gateway (HttpRequestExecutingMessageHandler) and simply issue a warning message:
For example (excerpt from HttpRequestExecutingMessageHandler) 
{code}
if (!this.shouldIncludeRequestBody(httpMethod) && this.extractPayloadExplicitlySet){
	if (logger.isWarnEnabled()){
	   logger.warn(""The 'extractPayload' attribute has no relevance for the current request since the HTTP Method is '"" +
           httpMethod + ""', and no request body will be sent for that method."");
        }
}
{code}","06/Jun/12 7:43 AM;oleg.zhurakousky@springsource.com;PR with initialization warning message https://github.com/SpringSource/spring-integration/pull/478
PR with per request warning message https://github.com/SpringSource/spring-integration/pull/479

We should only accept one",,,,,,,,,,,,,,,,,,,,,,
Additional Orderly Shutdown Behavior,INT-2515,42980,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,grussell,grussell,16/Apr/12 1:36 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,26/Jun/12 8:16 AM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,HTTP Support,TCP/UDP Support,,,0,PullRequest,,,,,,,"INT-2483 implemented orderly shutdown of many components. There are three (known) remaining issues...

1. Tcp Adapters are stopped hard - sockets closed. This means that any in-flight TCP request/response scenarios will fail (because the reply cannot be written).
2. UDP adapters may cause error messages (executor threads may be interrupted).
3. No attempt is made for orderly shutdown of messages running on external (e.g. container) threads, such as http inbound endpoints.

Suggest adding two methods to the OrderlyShutdownCapable interface

{code}
void beginShutdown();

void endShutdown();
{code}

beginShutdown() can then be used to inform endpoints such as those above (http, tcp) to not accept any more incoming requests, while leaving in-flight requests in process time to quiesce.

endShutdown() can be called after the shutdown delay to attempt to force stop the TCP endpoints and report if http requests are still in-flight.",,;26/Jun/12 8:16 AM;grussell;43200,,,,,,,,57600,0,43200,75%,57600,0,43200,,,,,,,,INT-2485,INT-256,,,,,,,,,,,,,,,,,,217123200,,,,,,30402,false,grussell(grussell),,,,0|i05im7:,32222,30102,,,,,,"18/Jun/12 6:37 AM;grussell;For HTTP inbound endpoints, I suggest we implement OrderlyShutdownCapable; after beginShutdown() has been called, we should return ""503 - Service Unavailable"" for any new requests, while allowing existing in-flight ops to complete during the termination delay.",21/Jun/12 8:22 AM;grussell;Issued PR: https://github.com/SpringSource/spring-integration/pull/514,,,,,,,,,,,,,,,,,,,,,,
Remove redundant cast in AutoCreateCandidatesCollector,INT-2514,42960,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,15/Apr/12 10:49 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,18/Jun/12 3:58 PM,2.1.1,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Core,,,,0,,,,,,,,"{code}
:spring-integration-core:compileJava
[ant:javac] /Users/ghillert/dev/git-test/spring-integration/spring-integration-core/src/main/java/org/springframework/integration/config/xml/ChannelInitializer.java:72: warning: [cast] redundant cast to org.springframework.integration.config.xml.ChannelInitializer.AutoCreateCandidatesCollector
[ant:javac] 					(AutoCreateCandidatesCollector) beanFactory.getBean(AUTO_CREATE_CHANNEL_CANDIDATES_BEAN_NAME, AutoCreateCandidatesCollector.class);
[ant:javac] 					^
[ant:javac] 1 warning
{code}",,;18/Jun/12 1:41 PM;hillert;1800,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,217382400,,,,,,30382,false,grussell(grussell),,,,0|i05ihr:,32202,30082,,,,,,15/Apr/12 1:01 PM;hillert;Noticed this issue while reducing deprecation warnings for INT-2512,18/Jun/12 1:41 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/504,,,,,,,,,,,,,,,,,,,,,,
xslt-transformer - result-transformer Only Applied if result-type Also Supplied,INT-2473,42597,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,grussell,grussell,14/Mar/12 1:54 PM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,06/Jul/12 1:14 PM,2.1 GA,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,Documentation,XML,,,0,,,,,,,,"Not sure if this is just documentation or a real bug (looks like a bug to me)...

{code}
<beans:bean id=""resultToDoc"" class=""org.springframework.integration.xml.transformer.ResultToDocumentTransformer""/>

<int-xml:xslt-transformer input-channel=""in"" output-channel=""fahrenheitChannel""
	xsl-resource=""classpath:noop.xslt"" result-transformer=""resultToDoc""/>
{code}

Results in a String payload

{code}
<int-xml:xslt-transformer input-channel=""in"" output-channel=""fahrenheitChannel""
	xsl-resource=""classpath:noop.xslt"" result-transformer=""resultToDoc"" result-type=""DOMResult""/>
{code}

Reults in a Document payload.

{code}
	<int-xml:xslt-transformer input-channel=""in"" output-channel=""fahrenheitChannel""
		xsl-resource=""classpath:noop.xslt"" result-transformer=""resultToDoc"" result-type=""StringResult""/>
{code}

Reults in a Document payload.

The problem is that the resultTransformer is only applied if the input is a Source, or 'alwaysUseResultFactory' is coerced to true by setting a result-type or result-factory.",,;27/Jun/12 10:12 PM;hillert;5400,;28/Jun/12 10:32 PM;hillert;14400,;29/Jun/12 11:41 AM;hillert;14400,,,,,,14400,0,34200,237%,14400,0,34200,,,,,,,,INT-2642,,,,,,,,,,,,,,,,,,,216432000,,,,,2012-06-29 11:22:31.84,30019,false,grussell(grussell),,,,0|i05g9z:,31843,29719,,,,,,"14/Mar/12 2:11 PM;grussell;The JavaDocs for the class describe the observed behavior so it looks like it's intended, so maybe it's just a (schema and reference) documentation issue only.","29/Jun/12 11:22 AM;hillert;Updated the reference documentation substantially. See pull request:

https://github.com/SpringSource/spring-integration/pull/530

",,,,,,,,,,,,,,,,,,,,,,
Tcp Client ConnectionFactory Failover,INT-2459,42420,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,28/Feb/12 12:39 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 2:35 PM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,"Provide a mechanism, say a comma delimited list of ""host[:port][,host[:port]]..."" to allow a client tcp-connection-factory to fail over to alternative hosts. If the [:port] option is missing, use the port from the port attribute.",,;06/Jun/12 3:37 PM;grussell;43200,,,,,,,,7200,0,43200,600%,7200,0,43200,,,,,,,,INT-2495,,,,,,,,,,,,,,,,,,,218419200,,,,,,29695,false,grussell(grussell),,,,0|i04qo7:,27695,22587,,,,,,06/Jun/12 3:37 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/482,,,,,,,,,,,,,,,,,,,,,,,
Spring Integration Http's HttpRequestExecutingMessageHandler and URI encoding,INT-2455,35943,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,janne@kytomaki.com,janne@kytomaki.com,20/Jan/11 5:45 AM,03/Jul/14 11:09 AM,10/May/19 2:36 AM,30/Apr/13 9:52 AM,2.2.1,,,,,,,3.0 M2,,,,,HTTP Support,,,,0,PullRequest,,,,,,,"I'm trying to configure an http outbound-channel-adapter that performs a GET operation to URL ""http://localhost/service?parameter=%2bsomething"":

<int-http:outbound-channel-adapter id=""httpAdapter""
                          url=""http://localhost/service?parameter=%2bsomething
	                      channel=""httpOutChannel"" 
	                      http-method=""GET"" 
	                      expected-response-type=""java.lang.String"" />

The url encoded '+' character %2b gets encoded twice, and the server receives the parameter as ""%252bsomething"". If I exchange %2b with unencoded character '+', it gets passed to the request as such (""/service?parameter=+something"") as '+' is a valid URL character. The problem seems to be with HttpRequestExecutingMessageHandler passing the URI as a String to RestTemplate.exchange(), which only encodes characters that are not valid URL characters. RestTemplate URI encoding is discussed in issue 
SPR-5516.



",,;27/Feb/13 6:27 AM;abilan;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,184118400,,,,,2012-02-25 10:57:53.239,7084,true,abilan(abilan),,,,0|i02e3z:,13995,13309,,,,,,25/Feb/12 10:57 AM;sslavic;This issue should have been reported on [Spring Integration issue tracker|https://jira.springsource.org/browse/INT]. Relevant Spring Framework bits have been resolved in SPR-5516.,"28/Feb/12 4:04 AM;abilan;So, do you mean to propagate from *HttpRequestExecutingMessageHandler* into *RestTemplate.exchange()* *URI* not *String* ?
If it is I don't agree with you.

At first: why do you provide only some encoded part of url attribute? What's problem to put instead of '%2b' '+'? 
At second: why don't you provide full encoded URL ;-)? Joke

SI-http components provide for RestTemplate url as String for using on the background some smart object: *UriTemplate*, which helps to build more flexible uri-variables processing via some *uriVariableExpressions*.

I think you should configure something like this:
{code:xml}
<int-http:outbound-channel-adapter
url=""http://localhost/service?parameter={parameter}"">
<int-http:uri-variable name=""parameter"" expression=""'+something'""/>
</int-http:outbound-channel-adapter>
{code}

And you'll get right URL-encoding.

Nevertheless it's my opinion. Maybe other people have other thoughts...","28/Feb/12 4:10 AM;oleg.zhurakousky@springsource.com;I don't think its a bug. Part of the Spring WEB API (which Spring Integration relies on) is to perform URI Encoding, so when it sees '%' it encodes it as '%25'. The point is that you don't have to perform encoding yourself and send URI in human readable form where instead of using '%2B' just use '+' (e.g., url=""http://localhost/service?parameter=+something) and it will be encoded for you by the framework.","15/Mar/12 4:51 AM;janne@kytomaki.com;Thanks for the responses. When using Spring Integration 2.0 or 2.1 with Spring Framework 3.1.1 the problem seems to be fixed. With SI 2.0 and Spring FW 3.0.5 I can still reproduce it with this configuration:

-- clip --

<int:channel id=""testInputChannel"" />
    
<int-http:outbound-channel-adapter id=""httpAdapter""
		url=""http://localhost:28080/sitest/test.html?foo={foo}&amp;something=+else""
		channel=""testInputChannel"" 
		http-method=""GET"" 
		expected-response-type=""java.lang.String"" >
		<int-http:uri-variable name=""foo"" expression=""payload.getFirst('foo')""/>
                <!-- with SI 2.1 you can use
                <int-http:uri-variable name=""foo"" expression=""payload.foo""/>
                -->
</int-http:outbound-channel-adapter>

<bean id=""httpInbound"" class=""org.springframework.integration.http.inbound.HttpRequestHandlingController"">
   <constructor-arg value=""true"" />
   <property name=""requestChannel"" ref=""testInputChannel"" />
   <property name=""extractReplyPayload"" value=""false"" />
   <property name=""supportedMethodNames"">
      <list>
         <value>GET</value>
      </list>
   </property>
</bean>

-- clip --

Making a GET request to 

/sitest/spring/testInput?foo=%2Bbar 

should cause another request to be made to 

/sitest/test.html?foo=%2Bbar&something=%2Belse. 

With SI 2.0/2.1 and Spring FW 3.1 this is the case. With SI 2.0 and Spring FW 3.0.5 the forwarded request is of form:

/sitest/test.html?foo=+bar&something=+else

I.e. the plus sign does not get encoded properly.

Anyways with Spring 3.1 this now seems to be fixed. Thanks!


","26/Apr/12 4:46 AM;pdepaolis;def springVersion = '3.1.1.RELEASE'
def springIntegrationVersion = '2.1.0.RELEASE'
I am having encoding issue with http outbound adapter.  In HttpRequestExecutingMessageHandler in method
@Override
	protected Object handleRequestMessage(Message<?> requestMessage) {


ResponseEntity<?> httpResponse = this.restTemplate.exchange(this.uri, this.httpMethod, httpRequest, this.expectedResponseType, uriVariables);
this calls resttemplate with string as uri.   i am using rabbitmq api  and vhost  = / (%2f) which gets converted to %252f.  this happens when uri is encoded.   I tested with RestTemplate with excecute with uri is java.net.URI outside of outbound and it works fine. the uri is http://localhost:55672/api/queues/%2f/some.queue I can override HttpRequestExecutingMessageHandler and call the execute with URI as input.  Is this acceptable or is this something to further explore.  thanks,
Pete		","26/Apr/12 4:58 AM;pdepaolis;I could just not have /  as vhost. my use case is:
@Slf4j
class RestRequestResponse {
    def jsonObj

    @Publisher(channel=""rabbitadmin.out"")
    GenericMessage publish(String restURI){
        HashMap<String,String>  map = new HashMap<String, String>()
        map.put(""uri"", restURI)
        return new GenericMessage(""no payload"", map)
    }

    void handle(String value){
        jsonObj = new JsonSlurper().parseText(value)
    }

so have wide access to rabbit rest api.
so is the answer not to have / as vhost in rabbit?","26/Apr/12 5:02 AM;pdepaolis;xml
<int-http:outbound-gateway  request-channel=""rabbitadmin.out""  reply-channel=""rabbitadmin.response""
                                       url=""http://localhost:55672/api/{rest}""  http-method=""GET""
                                       expected-response-type=""java.lang.String""
                                        header-mapper=""authenticationMapper"">
        <int-http:uri-variable name=""rest"" expression=""headers[uri]""/>
    </int-http:outbound-gateway>
    <int:service-activator input-channel=""rabbitadmin.response"" ref=""responseHandler""  method=""handle""/>
so wide access i mean the publish can access all of the api by passing in the rest portion.","15/Feb/13 1:00 AM;abilan;Guys, hello!
Sorry for big delay of replying.
Can you provide a news on the matter?
How it is with new version of Spring Framework 3.2.1 & Spring Integration 2.2.1?
I mean is there still a reason to investigate it? ;)
Thanks","26/Feb/13 3:31 AM;abilan;Hi all!
I've investigated it a bit and found:
1. Independently of Spring MVC, {{java.net.URI}} makes encoding, if we construct the object from parts, not full string.
So, encoding isn't a problem nor Spring Integration, neither Spring MVC
2. It can be very useful to provide an ""uri"" without any encoding: allow end-users to do it themselves, if needed

I suggest to introduce {{encode-uri=""true/false""}} attribute to the {{http:outbound}}.
And there is no need a lot of code to achieve right solution:
{code:java}
UriComponents uriComponents = UriComponentsBuilder.fromHttpUrl(uri).buildAndExpand(uriVariables);
URI realUri = this.encodeUri ? uriComponents.toUri() : new URI(uriComponents.toUriString());
ResponseEntity<?> httpResponse = this.restTemplate.exchange(realUri, httpMethod, httpRequest, expectedResponseType);
{code}","27/Feb/13 4:32 AM;abilan;Guys, fix looks very simple and very useful, especially for some non standard URLs as RabbitMQ REST API.
So, I'm going to PR it soon and you'll look.
Of course, if we decide to backport it to 2.2, it will be available only through direct {{HttpRequestExecutingMessageHandler.setEncodeUri()}}",27/Feb/13 6:27 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/755,07/Jul/13 9:02 PM;ehrdoctors;I feel this should get backported to 2.2.  I have tried to do two REST integrations (Amazon Web Services and RabbitMQ Http API and have run into this issue twice.  Is there a workaround in 2.2.4 in the XML?,"08/Jul/13 4:25 AM;abilan;[~grussell], any objections?
I can prepare minimal backport.
The main concern is about {{encode-uri}} attribute to the 2.2 XSD...","08/Jul/13 9:13 AM;ehrdoctors;just as a note, i tested the encode-uri attribute by simply updating SIversion in my project POM to <spring.integration.version>3.0.0.M2</spring.integration.version>.  My program still uses http://www.springframework.org/schema/integration/http/spring-integration-http.xsd, and it recognizes encode-uri attribute anyway and works.  not sure why...",08/Jul/13 9:15 AM;ehrdoctors;maybe because outbound-channel-adapter is not in the XSD???,"08/Jul/13 10:08 AM;abilan;{quote}
maybe because outbound-channel-adapter is not in the XSD?
{quote}
No. It is, because versionless XSD match to the latest version in the classpath. See here: https://github.com/SpringSource/spring-integration/blob/master/spring-integration-http/src/main/resources/META-INF/spring.schemas
It is a Spring Handler strategy.
BTW. If you already switched to the SI 3.0, stay with it. It fully backward compatible and doesn't have a lot new features (potentially 'bugged' ;))",,,,,,,,
docs don't mention the need to add amqp_ prefix to headers in order to have DefaultAmqpHeaderMapper add it to the message,INT-2454,42360,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,kylesm,kylesm,23/Feb/12 12:05 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,25/Jun/12 2:03 PM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,Documentation,,,,0,,,,,,,,"I was attempting to have a header enricher add a content type header to a message that was subsequently being handled by an outbound AMQP channel adapter and found that various combinations of contentType and content-type for the header name weren't working.

After digging through DefaultAmqpHeaderMapper and AmqpHeaders I realized that it needs an 'amqp_' prefix in order for the header mapper to automatically copy it. It would be good for this to be mentioned in the docs, or a better way of handling standard AMQP headers to be developed.

Here is a snippet illustrating the final config that worked:

{code}
<int:chain input-channel=""input"" output-channel=""output"">
    <int:object-to-json-transformer />
    <int:header-enricher>
        <int:header name=""amqp_contentType"" value=""application/json"" overwrite=""true"" />
    </int:header-enricher>
</int:chain>
{code}
","Mac OS X 10.7.3
Java 1.6.0_29
Spring AMQP 1.0.0.RELEASE
Spring Integration 2.1.0.RELEASE",;24/Jun/12 7:26 PM;hillert;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,216864000,,,,,2012-02-23 12:18:23.459,29635,false,grussell(grussell),,,,0|i04d1r:,25488,21500,,,,,,"23/Feb/12 12:18 PM;grussell;One option to avoid these issues is to use a SpEL expression - it can get a little verbose with long package names, though...

{code}
<int:header name=""#{T(org.springframework.integration.amqp.AmqpHeaders).CONTENT_TYPE}"" value=""application/json"" overwrite=""true"" />
{code}

I agree it should be documented though (perhaps as well as showing this technique).","23/Feb/12 12:21 PM;mark.fisher;Another (perhaps additional) nice feature would be an ""amqp:header-enricher"" element that simply provides common AMQP header names as sub-elements (like we do for mail, jms, etc.) Thoughts?","24/Jun/12 7:14 PM;hillert;Adding a dedicated (short) chapter specifically for AMQP Headers. There I am listing all available, automatically mapped AMQP Headers. ",24/Jun/12 7:25 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/521,,,,,,,,,,,,,,,,,,,,
"Document a ""selector"" JMS Adapter Attribute",INT-2448,42320,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,spinter,spinter,21/Feb/12 3:17 PM,21/Sep/12 1:13 PM,10/May/19 2:36 AM,07/Sep/12 9:43 AM,2.1.1,,,,,,,2.2 RC1,,,,,Documentation,,,,0,jms,,,,,,,"Add description of a ""selector"" attribute of a ""jms:message-driven-channel-adapter"". Since currently it is easily confused with a Spring Integration's MessageSelector used for filtering:

{code}
<jms:message-driven-channel-adapter destination=""xyzQueue""
                                        channel=""xyzPipe""
                                        selector=""someId = '75D938E89AF18C30'""/>
{code}",N/A,;28/Aug/12 10:01 AM;hillert;7200,,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,211248000,,,,,2012-08-28 10:01:24.717,29595,false,grussell(grussell),,,,0|i04ckn:,25411,21412,http://forum.springsource.org/showthread.php?123384-JMS-Adapter-Content-Based-Filtering,,,,,28/Aug/12 10:01 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/596,,,,,,,,,,,,,,,,,,,,,,,
Chapter 7.1.3 Polling Consumer - Java TX Configuration Example for Consumer is incorrect,INT-2444,42245,,Defect,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,hillert,hillert,16/Feb/12 9:31 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 11:03 AM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Documentation,,,,0,,,,,,,,"Look at chapter 7.1.3 Polling Consumer into the sample code:

{code}
consumer.setTransactionManager(txManager);
{code}

org.springframework.integration.endpoint.PollingConsumer does not have that method. ",,;20/Jun/12 2:24 PM;hillert;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,INT-2430,,,,,,,,,,,,,,,,,,,217209600,,,,,,29520,false,grussell(grussell),,,,0|i0479b:,24550,21294,,,,,,20/Jun/12 2:24 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/511,,,,,,,,,,,,,,,,,,,,,,,
"Fix HTTP documentation - Broken link at section 15.2 ""see ??? for further details""",INT-2441,42238,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,hillert,acoliver,acoliver,16/Feb/12 6:42 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,22/Jun/12 7:36 AM,2.1 GA,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Documentation,,,,0,,,,,,,,"go to http://static.springsource.org/spring-integration/reference/htmlsingle/
section 15.2

see:

""
The easiest way to do this is to provide a servlet definition in web.xml, see ??? for further details. 

""

The ??? is an empty anchor link and goes to http://static.springsource.org/spring-integration/reference/htmlsingle/#

",,;21/Jun/12 3:00 PM;hillert;5400,,,,,,,,7200,0,5400,75%,7200,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,217123200,,,,,2012-06-21 15:00:10.96,29513,false,grussell(grussell),,,,0|i0477r:,24543,21287,,,,,,21/Jun/12 3:00 PM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/517,,,,,,,,,,,,,,,,,,,,,,,
Get rid of the wrapping MessageProcessor into another MessageProcessor,INT-2433,42141,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,abilan,abilan,08/Feb/12 12:33 AM,27/Nov/13 7:20 AM,10/May/19 2:36 AM,18/Sep/13 2:43 PM,2.1 GA,,,,,,,3.0 RC1,,,,,,,,,0,PullRequest,refactoring,,,,,,Following discussions in the PR https://github.com/SpringSource/spring-integration/pull/323 it is nesessary to make some framework refactoring for getting rid of the wrapping MessageProcessor into another MessageProcessor where it is posible.,,;21/Jan/13 4:33 AM;abilan;3600,;21/Jan/13 6:23 AM;abilan;7200,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,198115200,,,,,,29416,true,grussell(grussell),,,,0|i045pr:,24300,21045,,,,,,"21/Jan/13 6:25 AM;abilan;Branch is ready for 3.0 Master:
https://github.com/artembilan/spring-integration/tree/INT-2433",28/Jan/13 12:07 AM;abilan;Issued PR:https://github.com/SpringSource/spring-integration/pull/871,,,,,,,,,,,,,,,,,,,,,,
"Event, TCP, and UDP Inbound Channel Adapter Parsers Do not Bind Auto-Generated Channels to Adapter",INT-2404,41762,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,16/Jan/12 8:42 AM,15/May/12 3:13 PM,10/May/19 2:36 AM,23/Jan/12 7:18 AM,2.0.5,2.1 GA,,,,,,2.1.1,2.2 M1,,,,Event Support,TCP/UDP Support,,,0,,,,,,,,"These three parsers use the 'channel' attribute instead of the 'channelName' parameter passed in to doParse().

Say we have an adapter with id 'xx'; results in the creation of a channel named 'xx', an adapter named 'xx.adapter' but x is not bound to x.adapter and a run time error occurs... 

Error creating bean with name 'xx.adapter.adapter'
...
outputChannel is required",,;17/Jan/12 6:49 AM;grussell;5400,,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,230601600,,,,,,29095,false,oleg.zhurakousky@springsource.com(oleg.zhurakousky@springsource.com),,,,0|i03hbb:,20347,17673,,,,,,"17/Jan/12 6:49 AM;grussell;PR Issued:

PR Closed: Superceded by PR for INT-2407",,,,,,,,,,,,,,,,,,,,,,,
"ChainElementsFailureTests reads wrong 'xmlheader' property from chain-elements-config.properties, when it must be 'xmlheaders'",INT-2392,41673,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,abilan,abilan,09/Jan/12 6:09 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,10/Aug/12 4:49 AM,2.1 GA,,,,,,,2.2 M4,2.2 M4 Sprint 4,,,,Core,Testing,,,0,,,,,,,,"Also these tests don't have enough 'asserts' logic, so they all always are passed on expected *XmlBeanDefinitionStoreException* with not checked 
*org.xml.sax.SAXParseException: Content is not allowed in prolog.* This message is exactly the reason for wrong property *'xmlheader'*.
Nevertheless I don't see any reason to have *ChainElementsFailureTests* at all: every config samples in *chain-elements-config.properties* are invalid via XSD.",,;08/Aug/12 8:11 AM;hillert;1800,,,,,,,,14400,12600,1800,12%,14400,12600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,212976000,,,,,2012-08-08 08:11:24.35,29006,false,grussell(grussell),,,,0|i033tz:,18163,17523,,,,,,08/Aug/12 8:11 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/575,,,,,,,,,,,,,,,,,,,,,,,
Add support for full RESTFul request-mappings to the HTTP inbound adapters,INT-2312,41352,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,abilan,mark.fisher,mark.fisher,15/Dec/11 2:08 PM,27/Nov/13 7:20 AM,10/May/19 2:33 AM,02/Oct/13 8:48 AM,,,,,,,,3.0 RC1,,,,,HTTP Support,,,,2,PullRequest,,,,,,,For more info see Spring-MVC Reference Manual: http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/mvc.html#mvc-ann-requestmapping,,;22/Sep/12 10:51 AM;abilan;150,;22/Sep/12 10:51 AM;abilan;72000,;28/Jan/13 5:46 AM;abilan;7200,;01/Apr/13 1:48 AM;abilan;3600,,,,,86400,3450,82950,96%,86400,3450,82950,,INT-3142,,,,,,INT-2619,INT-2528,,,,,,,,,,,,,,,,,,176688000,,,,,2011-12-16 03:56:57.5,28684,false,grussell(grussell),,,,0|i02utr:,16703,15718,http://forum.springsource.org/showthread.php?120153,,,,,"16/Dec/11 3:56 AM;abilan;Please, look into forum reference: my solution for the author of post was enough.
So, maybe is it as 'Won't fix'?
Or how about my proposition of http-method-router as nested element for http-inbound as additional strategy for request-channel?","16/Dec/11 7:39 AM;mark.fisher;I like the approach presented in the forum, and I especially agree with the comment that it helps to alleviate unnecessary duplication of the adapter configuration.

However, I do think we should support the case where someone does want a *different* adapter that happens to share a path but have a different request method. Maybe it's not urgent enough to include in 2.1 though.

As far as having a ""router"" within the adapter, that seems like a mix of concerns that we should avoid. Personally, I prefer the approach recommended in the forum to that anyways.

","16/Dec/11 7:49 AM;abilan;Ok, Mark, thanks.
Some additional question: 
{quote}
that seems like a mix of concerns that we should avoid
{quote} 
And how when do we avoid it in the implementation of *Scatter-Gather* or *Routing Slip*?..","16/Dec/11 11:14 AM;mark.fisher;Those are ""composite"" patterns, so by definition they combine concerns (since they are made of multiple components).

However, our HTTP adapters are Channel Adapters or Messaging Gateway components. As such, they should not also be Routers IMO.","16/Dec/11 12:20 PM;mark.fisher;I'm moving this issue to 2.2 since the original reporter seems happy with the alternative as recommended in the forum.

It does still seem to be a valid use-case to have more than one adapter with the same path IF you do indeed want other properties that vary (in addition to supported-methods).

*However*, it is not trivial to support that since we currently rely on the HandlerMapping strategy from the underlying Spring MVC dispatching mechanism. Because of that, we can only return URLs (no requirements for the HTTP method) that map to a particular object, and the adapters are distinct objects. In other words, in Spring MVC, you might have one Controller instance that handles /foo requests but has two different methods for handling GET and POST requests, respectively. That instance can be mapped by the HandlerMapping to ""/foo"" but it's the responsibility of the HandlerAdapter to determine which *method* is invoked according to the type of the HTTP request method (GET vs. POST). In our case though that second step is not relevant - rather than mapping first to an object and secondly to a method, we are only mapping to the object (the inbound-channel-adapter or inbound-gateway instance).
","08/Aug/12 5:17 AM;abilan;Hi, all!

Before starting implementation let me say my thoughts and ask some questions.

I see in the Spring-MVC package *org.springframework.web.servlet.mvc.condition* and want to follow here with solution from that package and some implementation of {{org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping}}.
However:
1. This package appeared in the Spring 3.1. I see we still stay out from implementation based on Spring 3.1 in our components. Before Spring Integration 3.0. So, how should I act here: 
* implement it anyway with Spring-MVC 3.1. Then we have to think of some mechanism to ignore Spring 3.1 feauter from build and tests, when we run SI-2.2 with Spring 3.0
* just wait Spring Integration 3.0.
* or implement our own ""condition"" support?

2. If you take a look into JavaDocs of {{org.springframework.web.bind.annotation.RequestMapping}} you'll see that Spring-MVC supports a lot of Request's requisites to allow use ""real REST world"", but our {{HttpRequestHandlingEndpointSupport}} just supports only ""path"" (name, id) mapping. And it allows with this issue to support request mapping by ""supported-methods"" attribute. 
So, how about adding other RESTFul abilities to our <http:inbound> components?
Nevertheless this question depends on resolution about support Spring 3.1 right now.

If you decide do not add Spring 3.1 compilation dependency now, I'll try to keep things as simple as posible and will implement some solution only about mappings for ""path"" and ""supported-methods"". 
Other features and implementation based on 'condition' package we can add in the future in 3.0.
WDYT?

Thanks a lot","14/Aug/12 6:47 AM;abilan;Guys, make a decision, please...","14/Aug/12 6:55 AM;oleg.zhurakousky@springsource.com;Yes we do indeed want to ensure that SI 2.2 is compatible with Spring 3.0, so whatever approach you take it has to run on 3.0.","14/Aug/12 7:10 AM;abilan;Thank you, Oleg.
But maybe we push this issue into 3.0 and don't implement partial solution right now?
And the more: when we come to the 3.0 we're going to refactor this 2.2 solution with Srping-MVC 3.1 to make it more KISS. Right?
What is the reason to hurry up? This issue doesn't have any vote...",27/Aug/12 4:41 AM;abilan;Initial refactoring from INT-2619 will be done during current issue. Implementation will be applied for HTTP endpoints.,22/Sep/12 10:50 AM;abilan;A commit for review: https://github.com/artembilan/spring-integration/commit/e1fda68e2ccc41dff6e95d3fc482ce26604da31c,28/Jan/13 5:46 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/723,01/Oct/13 3:38 PM;hillert;Merged PR,"02/Oct/13 2:48 AM;abilan;Doesn't work with SPR 3.2.x and above
https://build.springsource.org/browse/INT-SI22SPRING32-388
https://build.springsource.org/browse/INT-MASTERSPRING40-31",02/Oct/13 3:34 AM;abilan;PR: https://github.com/spring-projects/spring-integration/pull/907,02/Oct/13 8:48 AM;grussell;Merged polish for SPR 3.2.x +,,,,,,,,
Document all XML Top-Level Elements in XSD,INT-2290,41123,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,hillert,hillert,30/Nov/11 9:23 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 11:29 AM,2.1 RC1,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,XML,,,,0,,,,,,,,The Top-Level Elements in XSD of the Spring Integration XML Module lack proper documentation.,,;21/Jun/12 8:08 AM;hillert;3600,,,,,,,,14400,0,3600,25%,14400,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,217123200,,,,,,28452,false,grussell(grussell),,,,0|i02mzz:,15435,14665,,,,,,21/Jun/12 8:07 AM;hillert;Issued PR: https://github.com/SpringSource/spring-integration/pull/513,21/Jun/12 11:29 AM;hillert;PR Merged,,,,,,,,,,,,,,,,,,,,,,
UPDATE be optional for a JDBC outbound-gateway,INT-2289,41122,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,anshumania,anshumania,30/Nov/11 8:32 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,29/Jun/12 6:11 AM,2.1 RC1,,,,,,,2.2 M3,2.2 M3 Sprint 4,,,,JDBC Support,,,,2,jdbc,outbound,,,,,,The update statement in jdbc outbound gateway can be made optional. In many integration scenarios the select is just used as a trigger. Consider a simple case of database syncrhonization ( different datasources) etc.,,;27/Jun/12 12:07 PM;hillert;14400,,,,,,,,46800,32400,14400,30%,46800,32400,14400,,,,,,,,INT-1983,,,,,,,,,,,,,,,,,,,216604800,,,,,2012-01-21 06:43:26.192,28451,false,grussell(grussell),,,,0|i02mzr:,15434,14664,http://forum.springsource.org/showthread.php?98974-jdbc-outbound-gateway-query-only&p=375145#post375145,,,,,"21/Jan/12 6:43 AM;abilan;Mark, I'm also interested with feature when we can use *DB SELECT as service* in the message flow.
Make 'update' optional will be enough to make that accessible.
Let me implement it!

Also we may introduce some more flexible solution: nested *query* inside many other components as well as we can do it now with scripts.
{code:xml}
<service-activator>
  <jdbc:query/>
</service-activator>
{code}

And about triggering via channels.
As long as we don't provide 'control-channel' pattern and suggest to use 'control-bus' for this ability e.g. *router#setChannelMappings()*, may be it will be OK if we introduce +triggering pollers+ via 'control-bus'?
Then we have to add some attribute to poller for identify that it'll poll via some external command from control-bus.
However trigger-channel on the poller also will be appropriate.
Nevertheless I do not pretend to be a genius ...","22/Jan/12 4:46 AM;abilan;{quote}
if we introduce triggering pollers via 'control-bus'?
{quote}
Sorry, I hurried. The 'poll' method isn't a managed operation. It's passive message flow action, so it cannot be accessed via JMX...

Triggering inbound-channel-adapter via some user command will look like ""Start message flow and forget"". Now we can do it using gateway-method with void return type.
So, when we introduce *trigger-channel on the poller* we'll get the same result: end-developer also should write a gateway-method to send command message to that channel...",26/Jan/12 10:18 PM;hillert;See alo this comment: https://jira.springsource.org/browse/INT-1983?focusedCommentId=75082&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-75082,09/Apr/12 3:33 PM;hillert;Also see: http://forum.springsource.org/showthread.php?125222-Using-JDBC-to-transform-split-a-payload,27/Jun/12 12:07 PM;hillert;Issued Pull Request: https://github.com/SpringSource/spring-integration/pull/525,,,,,,,,,,,,,,,,,,,
Provide Mechanism To Limit # Subscribers to a Channel,INT-2285,41101,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,dturanski,dturanski,29/Nov/11 10:51 AM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,16/Jul/12 11:46 AM,,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,Core,,,,0,PullRequest,,,,,,,"One of the most common ""gotchas"" in the wild happens when a direct channel is unintentionally configured with multiple subscribers. This is likely a mistake in 99% of the cases, but for backwards compatibility, we need to retain the default round robin strategy.  An easy solution is to provide a load balancing strategy, e.g. 
{code}
public class SingleSubscriberLoadBalancingStrategy implements LoadBalancingStrategy {
  public Iterator<MessageHandler> getHandlerIterator(Message<?> message, List<MessageHandler> handlers) {
    if (handlers.size() <= 1) {
	return handlers.iterator();
    } 
    throw new MessageDeliveryException(""Multiple subscribers are not supported."");
  }
}
{code}
along with namespace support:
{code:xml}
<channel id=""direct"">
   <dispatcher load-balancer=""single-subscriber""/>
</channel>
{code}
Even better would be some way to make this a global default, e.g., make dispatcher a top level element: 
{code:xml}
<dispatcher load-balancer=""single-subscriber"" default=""true""/>
{code}
or
{code:xml}
<dispatcher id=""single"" load-balancer=""single-subscriber""/>

<channel id=""direct"">
   <dispatcher ref=""single""/>
</channel>
{code}",,;10/Jul/12 3:32 PM;grussell;28800,,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,215481600,,,,,2012-07-09 12:48:36.37,28430,false,grussell(grussell),,,,0|i02mtz:,15408,14640,http://forum.springsource.org/showthread.php?119035-Effect-of-Order-of-elements-in-the-spring-integration-context-file,,,,,"09/Jul/12 12:48 PM;grussell;Postponed the general concept of global configuration options to 3.0.

To support this use case, we decided to use the ChannelInitializer to define the default load-balancing strategy which, by default, will continue to be Round Robin.",10/Jul/12 3:31 PM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/543,,,,,,,,,,,,,,,,,,,,,,
TCP Outbound Gateway - Reconcile reply-timeout with INT-2262 and INT-2263,INT-2264,41014,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,22/Nov/11 2:04 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,05/Jun/12 1:41 PM,2.1 M3,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,TCP/UDP Support,,,,0,PullRequest,,,,,,,"reply-timeout currently reflects the time allowed for the remote system to respond. For consistency with other components, this attribute should reflect the time allowed when sending the reply to the reply-channel, after it has been received.",,;05/Jun/12 7:14 AM;grussell;5400,,,,,,,,14400,9000,5400,37%,14400,9000,5400,,,,,,,,INT-2262,INT-2263,,,,INT-2248,,,,,,,,,,,,,,218505600,,,,,,28342,false,grussell(grussell),,,,0|i02kmn:,15051,14345,,,,,,05/Jun/12 7:13 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/476,,,,,,,,,,,,,,,,,,,,,,,
Select and Implement New Atrtibute Reflecting Remote Server Response Timeout (for Outbound Gateways),INT-2263,41013,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,22/Nov/11 2:02 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,05/Jun/12 1:41 PM,2.1 M3,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,,,,,0,PullRequest,,,,,,,"Determines how long the gateway will wait for a reply from the remote server, before throwing an exception.

Currently reply-timeout on the TcpOutboundGateway, but that attribute should be for when sending the reply after it has been received (see INT-2262).",,;05/Jun/12 7:15 AM;grussell;1800,,,,,,,,3600,0,1800,50%,3600,0,1800,,,,,,,,INT-2262,,,,,INT-2248,,,,,,,,,,,,,,218505600,,,,,2012-06-05 06:12:15.471,28341,false,grussell(grussell),,,,0|i02kmf:,15050,14344,,,,,,"05/Jun/12 5:53 AM;grussell;Need to decide on this attribute name so I can resolve INT-2264 in the current sprint.

Some suggestions...

remote-timeout
server-timeout
peer-timeout

This is the time that the gateway will wait to receive a response from the remote system (for async gateways, such as TCP). Other gateways, ftp, http etc use some underlying library for this kind of timeout. At some point, we may want to consider giving the ability to configure that timeout via this attribute on those endpoints, but that is not what this JIRA is for; we just need to decide on a name for the attribute.

I think I lean towards remote or peer timeout.

Thoughts?
",05/Jun/12 6:12 AM;oleg.zhurakousky@springsource.com;remote-timeout is what I am thinking as well baswed on your explanation,05/Jun/12 7:12 AM;grussell;PR: https://github.com/SpringSource/spring-integration/pull/476,,,,,,,,,,,,,,,,,,,,,
Add reply-timeout to All Outbound Gateways,INT-2262,41012,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,hillert,grussell,grussell,22/Nov/11 1:59 PM,22/Aug/12 1:15 PM,10/May/19 2:36 AM,16/Jul/12 12:20 PM,2.1 M3,,,,,,,2.2 M4,2.2 M4 Sprint 1,,,,,,,,0,,,,,,,,"This is the timeout (aka sendTimeout) used when sending the reply to the reply-channel (e.g. in the case when the reply-channel is a QueueChannel).

Some gateways have it already; many do not.",,;11/Jul/12 1:23 PM;hillert;14400,,,,,,,,43200,28800,14400,33%,43200,28800,14400,,,,,,,,,,,,,INT-2248,,,,,,,,,,,,,,215395200,,,,,2012-07-11 13:02:21.677,28340,false,grussell(grussell),,,,0|i02km7:,15049,14343,,,,,,"11/Jul/12 1:02 PM;hillert;Add reply-timeout attribute to:

* Amqp Outbound Gateway
* File Outbound Gateway
* Ftp Outbound Gateway
* Sftp Outbound Gateway
* Ws Outbound Gateway

Update Schema Documentation for reply-timeout attribute:

* spring-integration-jpa-2.2.xsd
* spring-integration-jms-2.2.xsd
* spring-integration-jdbc-2.2.xsd
* spring-integration-ip-2.2.xsd
* spring-integration-http-2.2.xsd

",11/Jul/12 1:23 PM;hillert;PR issued: https://github.com/SpringSource/spring-integration/pull/547,,,,,,,,,,,,,,,,,,,,,,
Add Circuit Breaker to Spring Integration,INT-2250,40967,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,grussell,eberhardwolff,eberhardwolff,18/Nov/11 5:44 AM,17/Nov/14 12:48 AM,10/May/19 2:36 AM,06/Aug/12 6:18 AM,,,,,,,,2.2 M4,2.2 M4 Sprint 3,,,,,,,,3,PullRequest,,,,,,,For access to remote systems the Circuit Breaker pattern is established http://davybrion.com/blog/2008/05/the-circuit-breaker/ . It might make sense to add this to the synchronous Gateways and Adapters to deal with failures without overloading the remote system.,,;04/Jun/12 9:51 AM;grussell;7200,,,,,,,,28800,21600,7200,25%,28800,21600,7200,,,,,,,,,,,,,INT-2481,,,,,,,,,,,,,,217296000,,,,,2011-11-18 05:59:59.872,28295,true,abilan(abilan),,,,0|i02iyn:,14781,14087,,,,,,"18/Nov/11 5:59 AM;mark.fisher;This looks like a great case for using AOP, and it might very well be something we could support through some customizations of the spring-retry interceptors.",18/Nov/11 6:01 AM;mark.fisher;Linking to our Retry Interceptor issue which is already targetting 2.2.,"28/Dec/11 4:11 PM;grussell;While this is *related* to retries, I don't think it's a function of a retry interceptor - that is all about doing retries of calls to the actual service.

This is all about fast-failure of a message handler call (e.g. if the target system is down), whether or not the message is a retry.

That said, I suppose we could have one interceptor that handles retries and circuit breaker functionality.

Initial cut at an implementation is here... https://github.com/garyrussell/spring-integration/commit/e07d13780ef97ebfedfa9e71cfa63b96555e7f61

It's not much code; please take a look and comment if you have time.",19/Jun/12 2:42 AM;abilan;Some Circuit Breaker use-case: http://forum.springsource.org/showthread.php?127442-How-to-slow-down-message-consumer,,,,,,,,,,,,,,,,,,,,
Add expression support to <delayer>,INT-2243,40933,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,coldiges,coldiges,16/Nov/11 5:01 AM,05/Sep/13 10:27 AM,10/May/19 2:36 AM,20/Aug/13 2:50 PM,2.0.5,,,,,,,3.0 M3,,,,,Core,,,,1,PullRequest,,,,,,,In addition to setting the delay via a header value using the delay-header-name attribute it would be useful to have an expression attribute for an even more dynamic way to define the delay time.,,;15/Jun/13 7:56 AM;abilan;14400,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,180403200,,,,,2013-01-22 03:29:42.106,28259,false,grussell(grussell),,,,0|i02akf:,13421,13157,,,,,,"22/Jan/13 3:29 AM;abilan;It really will be more useful, when we can determine 'delay' value from any 'place' of the Message.
In this case 'delay-header-name' is becoming redundant and the <delayer>, in its turn, will be more consecutive with other components.
With this we may reduce config. Instead of this:
{code:xml}
<chain>
  <header-enricher>
	<header name=""DELAY"" expression=""payload.date.time + 5000""/>
  </header-enricher>
  <delayer delay-header-name=""DELAY""/>
</chain>
{code}
we will have just this:
{code:xml}
  <delayer expression=""payload.date.time + 5000""/>
{code}",15/Jun/13 7:56 AM;abilan;PR: https://github.com/SpringSource/spring-integration/pull/826,20/Aug/13 2:50 PM;grussell;Merged,,,,,,,,,,,,,,,,,,,,,
Add feature to allow users to provide they own initial search terms in IMAP adapter ,INT-1929,38252,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,oleg.zhurakousky@springsource.com,krzychu,krzychu,06/Jun/11 1:21 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 12:29 PM,2.0.4,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Adapters,,,,0,pull-request-submitted,,,,,,,Now messages are filtered out by SEEN flag. It will be useful to expose a feature to allow users to supply their own set of initial search terms. ,,;06/Jun/12 2:26 PM;oleg.zhurakousky@springsource.com;3600,;06/Jun/12 2:26 PM;oleg.zhurakousky@springsource.com;60,,,,,,,10800,0,3660,33%,10800,0,3660,,,,,,,,,,,,,,,,,,,,,,,,,,,218419200,,,,,2012-06-06 14:27:13.535,501,false,grussell(grussell),,,,0|i00j9b:,3165,4589,http://forum.springsource.org/showthread.php?110042,,,,,"06/Jun/12 2:27 PM;oleg.zhurakousky@springsource.com;PR https://github.com/SpringSource/spring-integration/pull/481
",,,,,,,,,,,,,,,,,,,,,,,
Consider changing default response type from HttpStatus to ResponseEntity on HTTP outbound gateway,INT-1760,36005,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,24/Jan/11 10:15 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 2:34 PM,2.0.1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Adapters,,,,0,pull-request-submitted,,,,,,,See comments in INT-1753,,;06/Jun/12 9:43 AM;oleg.zhurakousky@springsource.com;3600,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,INT-1759,INT-1753,,,,,,,,,,,,,,,,,,218419200,,,,,,542,false,grussell(grussell),,,,0|i00jef:,3188,4612,,,,,,06/Jun/12 9:43 AM;oleg.zhurakousky@springsource.com;PR https://github.com/SpringSource/spring-integration/pull/480,,,,,,,,,,,,,,,,,,,,,,,
Add SpEL support to map the expected-response from ResponseEntity to HTTP outbound gateway,INT-1759,36004,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,24/Jan/11 10:14 AM,31/Jul/12 12:34 PM,10/May/19 2:36 AM,07/Jun/12 2:34 PM,2.0.1,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,Adapters,,,,0,pull-request-submitted,,,,,,,See comments in INT-1753,,;06/Jun/12 9:42 AM;oleg.zhurakousky@springsource.com;3600,;06/Jun/12 2:33 PM;oleg.zhurakousky@springsource.com;3600,;06/Jun/12 2:33 PM;oleg.zhurakousky@springsource.com;3600,;06/Jun/12 2:33 PM;oleg.zhurakousky@springsource.com;3600,;07/Jun/12 9:29 AM;oleg.zhurakousky@springsource.com;3600,;07/Jun/12 9:30 AM;oleg.zhurakousky@springsource.com;3600,;07/Jun/12 9:30 AM;oleg.zhurakousky@springsource.com;3600,;07/Jun/12 9:31 AM;oleg.zhurakousky@springsource.com;3600,7200,0,28800,400%,7200,0,28800,,,,,,,,INT-1753,INT-2694,,,,,,,,,,,,,,,,,,218419200,,,,,,543,false,hillert(hillert),,,,0|i00jen:,3189,4613,,,,,,06/Jun/12 9:44 AM;oleg.zhurakousky@springsource.com;PR https://github.com/SpringSource/spring-integration/pull/480,,,,,,,,,,,,,,,,,,,,,,,
Disconnect SI samples from spring-integration-parent pom,INT-1316,32507,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,cbeams,cbeams,cbeams,02/Aug/10 11:14 AM,03/Sep/10 3:23 PM,10/May/19 2:36 AM,02/Sep/10 4:13 AM,,,,,,,,2.0 M7,,,,,,,,,0,,,,,,,,"This is more consistent with the way other projects do it (e.g.: Spring AMQP), and leaves the samples in a simpler, standalone state.  Users aren't forced to deal with the whole pom hierarchy.",,;02/Sep/10 4:13 AM;cbeams;5400,,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,276652800,,,,,,5373,true,mark.fisher(mark.fisher),,,,0|i02i2n:,14637,13944,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update template.mf files Spring 3.0.3,INT-1293,32433,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,cbeams,cbeams,cbeams,28/Jul/10 4:43 AM,03/Sep/10 3:23 PM,10/May/19 2:36 AM,02/Sep/10 5:35 AM,2.0 M6,,,,,,,2.0 M7,,,,,,,,,0,,,,,,,,,,;02/Sep/10 4:43 AM;cbeams;1800,"Discovering SpEL issue, creating SPR-7519, reverting changes.;02/Sep/10 5:35 AM;cbeams;3600",,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,273974400,,,,,,5379,true,mark.fisher(mark.fisher),,,,0|i02i6v:,14656,13963,,,,,,"02/Sep/10 4:43 AM;cbeams;All relevant poms have been upgraded from 3.0.3.RELEASE -> 3.0.4.RELEASE

All template.mf files have been upgraded [3.0.0, 4.0.0) -> [3.0.4, 4.0.0)",02/Sep/10 5:23 AM;cbeams;Reopening in order to revert back to 3.0.3.  There appears to be a SpEL regression that causes a test to fail in SI when running against 3.0.4.  See SPR-7519 for details.,"02/Sep/10 5:35 AM;cbeams;Changes have been reverted.

* template.mf files now declare range [3.0.3, 4.0.0) for all Spring dependencies
* pom.xml files are fully reverted to dependence on 3.0.3.RELEASE",,,,,,,,,,,,,,,,,,,,,
It should be possible to define a wire tap separate from the channel,INT-1234,32168,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,dturanski,iwein,iwein,11/Jul/10 9:56 PM,18/May/11 1:28 PM,10/May/19 2:36 AM,29/Apr/11 12:31 PM,,,,,,,,2.0.4,,,,,,,,,0,,,,,,,,"Right now the only namespace support for wire-tap (per INT-323) is to add is as an interceptor to a channel.

In certain situations (i.e. test cases) it makes sense to add a wire tap without modifying the original context. It would be great if there was a top level element that allowed you to do this:

{code}
<i:wire-tap tapped-channel=""midStream"" output-channel=""messagesTappedMidStream""/>
{code}",,"Changes are in http://git.springsource.org/~dturanski/spring-integration/dt-spring-integration-int-1234.  

I Tried to create a merge request, but it contains all commits on master. Only the most recent commits that I did should be applied. ;26/Apr/11 3:12 PM;dturanski;7200",,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,253324800,,,,,2011-04-22 07:50:40.228,12734,false,mark.fisher(mark.fisher),,,,0|i02ihz:,14706,14013,,,,,,"22/Apr/11 7:50 AM;oleg.zhurakousky@springsource.com;We already have Global Interceptors, so I think all I need is to make sure that <wire-tap> is configurable within global interceptors.
","26/Apr/11 11:28 AM;dturanski;I have this basically working using the GlobalChannelInterceptorParser, so the pattern attribute works the same way, e.g.

  <!-- This wiretap targets a single channel -->
   <wire-tap id=""wiretap-single-channel"" channel=""wiretap-single"" pattern=""channel""/>
   
   <!-- This wiretap targets all channels -->
   <wire-tap id=""wiretap-all-channels"" channel=""wiretap-all""/> 

The wildcard feature is very flexible, but may not be that useful since the wiretap gets random messages coming from everywhere. Is the intent to require targeting a single channel as shown in the description?

","29/Apr/11 5:00 AM;iwein;Targeting a single channel is the most useful feature in terms of testing. The wildcard stuff is cool, but I don't think I'll use it often.","29/Apr/11 8:01 AM;oleg.zhurakousky@springsource.com;After discussing it with Dave, moving it to 2.0.4",,,,,,,,,,,,,,,,,,,,
Add support for SqlParameterSource in polling (inbound) JDBC adapter,INT-1233,32141,25284,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,david_syer,david_syer,09/Jul/10 10:41 PM,31/Jul/10 3:40 PM,10/May/19 2:36 AM,10/Jul/10 3:46 AM,2.0 M5,,,,,,,2.0 M6,,,,,,,,,0,,,,,,,,"There is a field for a SqlParameterSource for the polling SELECT, but no setter.  Presumably this is an oversight.",,;10/Jul/10 3:46 AM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,276825600,,,,,2010-07-31 15:40:38.341,25568,false,mark.fisher(mark.fisher),,,,0|i02ii7:,14707,14014,,,,,,31/Jul/10 3:40 PM;mark.fisher;M6 released,,,,,,,,,,,,,,,,,,,,,,,
Provide strategy for URI placeholders from outgoing message in http-outbound-*,INT-1232,32137,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,09/Jul/10 2:06 AM,31/Jul/10 3:40 PM,10/May/19 2:36 AM,15/Jul/10 12:30 AM,2.0 M5,,,,,,,2.0 M6,,,,,Adapters,,,,0,,,,,,,,Currently only if the message payload is a Map will it be used as uriVariables.  A strategy would be nice.,,;15/Jul/10 12:30 AM;david_syer;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,276825600,,,,,2010-07-31 15:40:39.556,12465,false,mark.fisher(mark.fisher),,,,0|i02iif:,14708,14015,,,,,,15/Jul/10 12:30 AM;david_syer;Added ParameterMapper with default implementation that uses Map in payload if there is one but can also evaluate expressions against the message.,31/Jul/10 3:40 PM;mark.fisher;M6 released,,,,,,,,,,,,,,,,,,,,,,
Addition of a max row attribute to jdbc adapter,INT-1231,32136,,Improvement,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,dussab,dussab,09/Jul/10 1:45 AM,10/Jul/10 3:45 AM,10/May/19 2:36 AM,10/Jul/10 3:45 AM,2.0 M5,,,,,,,,,,,,Adapters,,,,0,,,,,,,,"If it would help to add a max-rows attribute to the adapter so that the result set is closed after only the first n-rows are converted,",NA,;10/Jul/10 3:45 AM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,278812800,,,,,,25569,true,david_syer(david_syer),,,,0|i02iin:,14709,14016,http://forum.springsource.org/showthread.php?t=87710&highlight=jdbc+adapter,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove cyclic dependencies from ip,INT-1217,31928,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,grussell,iwein,iwein,24/Jun/10 6:24 PM,31/Jul/10 3:40 PM,10/May/19 2:36 AM,05/Jul/10 3:49 AM,,,,,,,,2.0 M6,,,,,,,,,0,,,,,,,,"There is a tangle between org.springframework.integration.ip.util <-> org.springframework.integration.ip.tcp

One fix would be to move SocketUtils into the tcp package, but that doesn't seem like the most elegant thing to do.",,;05/Jul/10 3:48 AM;grussell;1800,,,,,,,,5400,3600,1800,33%,5400,3600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,276825600,,,,,2010-07-05 03:29:28.974,12796,false,mark.fisher(mark.fisher),,,,0|i053e7:,29756,25844,,,,,,"05/Jul/10 3:29 AM;grussell;>>One fix would be to move SocketUtils into the tcp package, but that doesn't seem like the most elegant thing to do.

Actually, it really does only provide tcp utils so I will move it to the tcp package.","05/Jul/10 3:44 AM;mark.fisher;Perhaps it should be renamed to TcpUtils for clarification? Alternatively, if there is any chance that SocketUtils could evolve to include functionality beyond TCP, we could move it to a common package such as org.springframework.integration.ip.util where coincidentally, there is already a SocketIoUtils. Maybe those two could merge?","05/Jul/10 3:48 AM;mark.fisher;sorry I just realized upon seeing the commit log that I was confused by the fact that SocketUtils was used in the original comment instead of ""SocketIoUtils""... so, please disregard that part of my suggestion",05/Jul/10 3:49 AM;grussell;Moved SocketIoUtils from ...util to ...tcp,31/Jul/10 3:40 PM;mark.fisher;M6 released,,,,,,,,,,,,,,,,,,,
"Add support for ""scope"" on channels",INT-1176,31781,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,mark.fisher,mark.fisher,15/Jun/10 12:59 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,16/Jun/10 10:02 PM,,,,,,,,2.0 M5,,,,,Core,,,,0,,,,,,,,"This should be a replacement for 'thread-local-channel' while also supporting web session or custom scopes. Ultimately this will also provide a foundation for ""conversation"" scope once we're building upon Spring Framework 3.1+, and perhaps in the meantime, we could implement a ""pipeline/flow"" scope.",,;16/Jun/10 10:02 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,280713600,,,,,2010-06-16 22:02:39.731,12692,false,mark.fisher(mark.fisher),,,,0|i02rgf:,16157,15257,,,,,,"16/Jun/10 10:02 PM;david_syer;Added scope= attribute to channel and parser detects it and registers a scoped proxy if the scope is not ""singleton"" or ""prototype"".

Removed ThreadLocalChannel, so instead of <thread-local-channel/> we should now use something like this:

{code}
	<bean class=""org.springframework.beans.factory.config.CustomScopeConfigurer"" xmlns=""http://www.springframework.org/schema/beans"">
		<property name=""scopes"">
			<map>
				<entry key=""thread"" value=""org.springframework.context.support.SimpleThreadScope"" />
			</map>
		</property>
	</bean>

	<channel id=""simpleChannel"" scope=""thread"">
		<queue />
	</channel>
{code}",,,,,,,,,,,,,,,,,,,,,,,
No documentation for expression attribute on filter element in section 8.2,INT-1164,31706,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,iwein,iwein,iwein,09/Jun/10 9:36 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,10/Jun/10 8:38 PM,2.0 M4,,,,,,,2.0 M5,,,,,Documentation,,,,0,,,,,,,,,,;10/Jun/10 8:38 PM;iwein;1800,,,,,,,,1200,0,1800,150%,1200,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,281232000,,,,,,25623,false,mark.fisher(mark.fisher),,,,0|i01r67:,10279,10275,,,,,,10/Jun/10 8:38 PM;iwein;done,,,,,,,,,,,,,,,,,,,,,,,
Allow External Task Executor to be Used for IP Adapters,INT-1147,31473,,Bug,Resolved,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,grussell,grussell,grussell,24/May/10 3:13 AM,12/Jul/10 6:33 AM,10/May/19 2:36 AM,12/Jul/10 6:33 AM,,,,,,,,,,,,,,,,,0,,,,,,,,"Currently, the I adapters use internal task executors for acks and sending messages. In environments such as WebLogic, this is not allowed and we need to allow for a container-managed task executor to be injected.",,;12/Jul/10 6:33 AM;grussell;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,282700800,,,,,,25638,false,grussell(grussell),,,,0|i02vin:,16816,15829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support rescheduling of release tasks for a persistent MessageStore-backed DelayHandler upon restart,INT-1132,31305,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,mark.fisher,mark.fisher,08/May/10 3:55 AM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,21/Jun/12 2:52 PM,,,,,,,,2.2 M3,2.2 M3 Sprint 3,,,,Core,,,,1,,,,,,,,See the comments in INT-737 for the details.,,;05/Jun/12 4:58 AM;abilan;86400,;08/Jun/12 6:13 AM;abilan;14400,;11/Jun/12 2:08 AM;abilan;14400,;14/Jun/12 2:16 PM;abilan;14400,;15/Jun/12 6:14 AM;abilan;14400,;18/Jun/12 2:10 AM;abilan;14400,;21/Jun/12 2:03 PM;abilan;3600,,,0,162000,,,0,162000,,,,,,,,INT-2200,,,INT-737,,,,,,,,,,,,,,,,217123200,,,,,2010-09-17 15:44:43.673,25650,true,grussell(grussell),,,,0|i02a67:,13357,13099,,,,,,20/Jul/10 10:23 AM;mark.fisher;moving to RC1,"29/Aug/10 3:25 PM;mark.fisher;Oleg, I'm not sure whether we need to add this functionality, but I'll assign it to you for now in case you want to experiment.","17/Sep/10 3:30 PM;mark.fisher;It seems there are 2 options for this: 1) require that the DelayHandler has exclusive access to its MessageStore instance (so it can get all Messages from it... although we don't have an iterator or getAll method on MessageStore in the first place) or 2) change the dependency to MessageGroupStore and assign a ""groupId"" for all Messages added to the store by a given delayer. Option #1 seems inplausible, but Option #2 seems like an odd use of ""group"". Thoughts?","17/Sep/10 3:37 PM;mark.fisher;I'm thinking about this some more, and it does seem odd that a delayer might have a delay of 10 minutes so that a Message might have been delayed 9 minutes already, but after a restart *all* Messages would be delayed for 10 minutes - even though our example Message should really only have 1 minute remaining (and that alone is odd considering it's as if time were ""frozen"" while the system was down).

However, the alternative if we do not implement this feature, is that all of the Messages that had been delayed upon shutdown/crash would simply be lost upon restart.","17/Sep/10 3:44 PM;oleg.zhurakousky@springsource.com;Ok, now since i have a better understanding of this issue #2 actually seems pretty reasonable as each DelayHandler would essentially manage its own group within the group store which isn't that bad.
However, what we will loose is the flexibility of using multiple implementations of MessageStore by multiple DelayHandlers (e.g., cache and RDBMS). They would all depend on the single implementation of the MGS. Would that be an issue?","17/Sep/10 3:51 PM;oleg.zhurakousky@springsource.com;Sorry, now all these comments are out of order ;) So this is to your last comment.
I think the problem you are describing could be solved if upon the restart of the system DelayHandler would check the timestamp of all the Messages and compare it to its delay settings and current time. This way if an example Message has already been delayed for 9 min before and the system was down for an hour, upon restart our example Message will be release right away. ",06/Dec/10 11:03 AM;oleg.zhurakousky@springsource.com;Moving it to 2.1 as it needs more discussions,"18/Oct/11 6:59 AM;abilan;Hello, colleagues
I need this solution right now.
I think, I'll try to implement it myself
",24/Dec/11 4:21 AM;abilan;Implementation of Delayer rescheduling depends on adding support of Rerty Interceptor.,"20/Feb/12 8:20 AM;abilan;I want to revisit this feature as it is still important for me.
I've investigeted *RetryPolicy* in the Spring Batch and also in the Apache Camel and now I don't understand how it can help here.
That pattern is based on +Exception resulution+, and rescheduling should work on system restart...
It's normal message flow operation: no exceptions, no rollbacks.
I suggest to convert delayer's messages to group based on delayer's id and to run rescheduling on component's startup.
It's simple way.
Another solution may be based on some *ReschedulingStategy*. Which we can use in many other stateful components: aggregator, scatter-gather, claim-check-out (?) etc.",09/May/12 12:17 PM;mark.fisher;Moving to the backlog. This can be moved back to a specific release if it's going to be available.,"11/May/12 7:03 AM;abilan;Mark, no problem! I have some thoughts, because I strictly need this solution (my customer need ;-))
But it depends on important changes in the {{MessageGroupStore}}
Please, look at my comment in the INT-2200

Thanks a lot",24/May/12 9:27 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/457,01/Jun/12 9:42 AM;oleg.zhurakousky@springsource.com;Moving it to M3 while keeping PR active,11/Jun/12 2:05 AM;abilan;Fresh PR: https://github.com/SpringSource/spring-integration/pull/488,"21/Jun/12 11:57 AM;grussell;Artem, need to adjust the timings in ...

testReschedulePersistedMessagesOnStartup

... it is a little too sensitive; the build machine can get very busy sometimes...

https://build.springsource.org/browse/INT-B22X-JOB1-91/test/case/110952529

Thanks","21/Jun/12 2:03 PM;abilan;{quote}
... it is a little too sensitive; the build machine can get very busy sometimes...

https://build.springsource.org/browse/INT-B22X-JOB1-91/test/case/11095252
{quote}
Issued PR: https://github.com/SpringSource/spring-integration/pull/515",,,,,,,
"Expose MessageStore in XML (aggregator, resequencer)",INT-1116,31247,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,03/May/10 5:06 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,05/May/10 10:51 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;05/May/10 10:51 PM;david_syer;3600,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,284342400,,,,,,25663,false,mark.fisher(mark.fisher),,,,0|i051rr:,29493,25333,,,,,,"05/May/10 10:51 PM;david_syer;Done (delayer not using MessageStore yet, so just aggregator and resequencer for 2.0.M4).",,,,,,,,,,,,,,,,,,,,,,,
JdbcMessageStore: implement MessageGroupStore,INT-1114,31236,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,02/May/10 7:36 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,05/May/10 4:34 AM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;05/May/10 4:34 AM;david_syer;10800,,,,,,,,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,284342400,,,,,,25665,false,mark.fisher(mark.fisher),,,,0|i051mv:,29471,25323,,,,,,05/May/10 4:34 AM;david_syer;Done.,,,,,,,,,,,,,,,,,,,,,,,
SimpleMessageStore: enforce or otherwise be explicit about capacity limit in MessageGroupStore operations,INT-1113,31208,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,01/May/10 9:08 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,05/May/10 2:47 AM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;05/May/10 2:47 AM;david_syer;1200,,,,,,,,3600,2400,1200,33%,3600,2400,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,284342400,,,,,,25666,false,mark.fisher(mark.fisher),,,,0|i051jb:,29455,25312,,,,,,05/May/10 2:47 AM;david_syer;Fixed by providing separate upper bound for individual and grouped messages.,,,,,,,,,,,,,,,,,,,,,,,
Break out a new interface MessageGroupStore for correlation concerns in MessageStore,INT-1112,31207,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,01/May/10 9:00 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,03/May/10 6:53 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;03/May/10 6:53 PM;david_syer;28800,,,,,,,,86400,57600,28800,33%,86400,57600,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,284688000,,,,,,25667,false,mark.fisher(mark.fisher),,,,0|i051mf:,29469,25320,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failedMessage Attribute Missing From MessageMappingException,INT-1110,31201,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,grussell,grussell,grussell,30/Apr/10 4:02 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,04/May/10 9:52 AM,2.0 M3,,,,,,,2.0 M4,,,,,Adapters,,,,0,,,,,,,,"IP Adapters do not populate the failedMessage in MessageMappingExceptions; causing the error message having no context about the original message. This needs to be corrected.

Also, we should modify the dispatcher(s) to add the failed message if it is missing.",,;30/Apr/10 11:46 AM;grussell;10800,,,,,,,,28800,0,10800,37%,28800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,284774400,,,,,,25669,false,mark.fisher(mark.fisher),,,,0|i051sf:,29496,25336,http://forum.springsource.org/showthread.php?p=297576#post297576,,,,,30/Apr/10 11:45 AM;grussell;Message is now attached to the exception. Dispatchers will check and add the message if a handler does not.,,,,,,,,,,,,,,,,,,,,,,,
Move MessageStore operations up into CorrelatingMessageHandler and remove behaviour from MessageGroup.,INT-1105,31175,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,28/Apr/10 2:26 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,01/May/10 8:56 PM,,,,,,,,2.0 M4,,,,,Core,,,,0,,,,,,,,,,;01/May/10 8:56 PM;david_syer;57600,,,,,,,,7200,0,57600,800%,7200,0,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,285033600,,,,,,25672,false,mark.fisher(mark.fisher),,,,0|i051pz:,29485,25328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JdbcMessageStore: XML namespace support,INT-1103,31159,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,26/Apr/10 11:12 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,05/May/10 7:28 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;26/Apr/10 11:14 PM;david_syer;3600,;05/May/10 7:27 PM;david_syer;7200,,,,,,,3600,0,10800,300%,3600,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,284342400,,,,,,25673,false,mark.fisher(mark.fisher),,,,0|i051mn:,29470,25322,,,,,,26/Apr/10 11:14 PM;david_syer;Done,26/Apr/10 11:16 PM;david_syer;Duh.  Closed wrong issue.,05/May/10 7:26 PM;david_syer;Done.,05/May/10 7:27 PM;david_syer;Duh.  Resolved wrong issue again.,05/May/10 7:28 PM;david_syer;Done,,,,,,,,,,,,,,,,,,,
Remove list() from MessageStore,INT-1100,31154,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,david_syer,david_syer,26/Apr/10 3:22 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,26/Apr/10 3:25 AM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,Remove list() from MessageStore: it isn't used anywhere and could be challenging to implement.,,;26/Apr/10 3:25 AM;david_syer;1800,,,,,,,,3600,1800,1800,50%,3600,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,285120000,,,,,,25676,false,mark.fisher(mark.fisher),,,,0|i051lz:,29467,25318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use UUID as primary key in JdbcMessageStore,INT-1099,31153,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,david_syer,david_syer,26/Apr/10 3:21 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,26/Apr/10 3:45 AM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;26/Apr/10 3:46 AM;david_syer;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,285120000,,,,,,25677,false,mark.fisher(mark.fisher),,,,0|i051r3:,29490,25331,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove versioning from JdbcMessageStore,INT-1098,31152,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,26/Apr/10 3:17 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,26/Apr/10 11:01 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;26/Apr/10 11:00 PM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,285120000,,,,,,25678,false,mark.fisher(mark.fisher),,,,0|i051q7:,29486,25329,,,,,,"26/Apr/10 11:00 PM;david_syer;Fixed (now that INT-1058 is resolved, there is no sense in update semantics in a message store).",,,,,,,,,,,,,,,,,,,,,,,
Create persistent queue option for Message Channels,INT-1069,30919,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,mark.fisher,mark.fisher,07/Apr/10 3:51 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,18/Jun/10 5:42 PM,,,,,,,,2.0 M5,,,,,Core,,,,0,,,,,,,,"The simplest way to support this would be to add a 'message-store' reference attribute to the current 'queue' sub-element for a Message Channel. For example:
{code}
<channel id=""persistentQueueChannel"">
   <queue message-store=""someMessageStoreRef""/>
</channel>
{code}

This is a bit odd, since the 'capacity' attribute is also available and may not be relevant in many cases with a MessageStore (unless it's desirable to limit the number of Messages stored even in that case). We could instead have a dedicated 'persistent-queue' sub-element, but considering a MessageStore might be in-memory-only, the name would suggest something that may not be true.

The 'queue' behavior is also questionable... would we support FIFO?, and if so how? Perhaps a queue is still involved but only containing the ID of a Message that is stored on send and retrieved (removed) on receive?
",,;18/Jun/10 5:42 PM;david_syer;43200,,,,,,,,28800,0,43200,150%,28800,0,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,280540800,,,,,2010-05-06 04:22:09.56,12450,false,mark.fisher(mark.fisher),,,,0|i02s73:,16277,15354,,,,,,"06/May/10 4:03 AM;mark.fisher;Started prototyping a MessageStore-backed MessageChannel. The main challenge is handling ""queue"" semantics (esp. FIFO) for what is essentially an unordered Map. If we maintain an ""idQueue"" along with the MessageStore, we need to ensure that all operations are atomic (adding to the id queue as well as the MessageStore). This goes beyond simple synchronization/locking since a MessageStore can be transactional such that its ""put"" operation actually rolls back at a later time (based on the TX-boundary) - which means the ID queue would need to also be synchronized with that transaction even though if its a simple in-memory Queue implementation, it will not itself be a transaction-aware resource.","06/May/10 4:22 AM;david_syer;Agree that it is more complicated than at first sight. A pure in-memory Queue will never be able to provide bomb-proof once-only guarantees (a put onto the queue in a TX synch can always fail after successful insert into the durable storage).  Maybe if we are up front about that it will work for enough users to make it worthwhile.

There are some transactional distributed memory products in the market place, which might be able to bridge the gap (probably as a non-XA last resource in an XA transaction, as you suggested the other day).  And of course our old friend the RDBMS might be able to handle it (by backing the MessageStore and the IdQueue in the same data source resource).  In both cases we have the interesting feature that to be fully transactional the queue has to be *in* the database, not simply mirrored in the database - there is no point trying to keep an in-memory regular Queue since it will always run the risk of being out of synch after a partial failure.

In any case (fully or weakly transactional) it is probably crucial to ensure that the MessageStore.add() and the IdQueue.put() are in the same thread (and vice versa on the consumer side).  Can we guarantee that as a starting point?","10/Jun/10 5:30 AM;mark.fisher;Dave, I'm assigning to you, since I know you've given this quite a bit of thought already on the MessageStore/MessageGroupStore side. Feel free to assign it back to me, but I thought you might want it.",18/Jun/10 5:42 PM;david_syer;Done.  The capacity attribute works as well.  FIFO behaviour depends on the MessageGroupStore (both implementations currently support it).  To use this feature users have to be aware of the scope of the channel names they use because by default all channels with the same name share a group id for the buffered messages.  If this causes problems the store can be partitioned (e.g. use a region in JDBC with the name of the application).,,,,,,,,,,,,,,,,,,,,
Message ID should be re-initialized at every endpoint,INT-1058,30835,30790,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,01/Apr/10 5:33 PM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,26/Apr/10 11:00 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;26/Apr/10 10:59 PM;david_syer;7200,,,,,,,,3600,0,7200,200%,3600,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,285120000,,,,,,25708,false,mark.fisher(mark.fisher),,,,0|i051pj:,29483,3193,,,,,,"02/Apr/10 11:39 PM;david_syer;Assigning to Mark for discussion.  The change is just to the builder to make it create a new ID for every message instance.  It might break a few tests, but I think we should do it now.",26/Apr/10 10:59 PM;david_syer;Fixed: the only major casualty was the ack protocol in the IP adapters - they now use a special ACK_ID instead of the ID header,,,,,,,,,,,,,,,,,,,,,,
JdbcMessageStore: create DDL scripts for common database platforms,INT-1052,30784,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,david_syer,david_syer,29/Mar/10 12:07 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,05/May/10 7:58 PM,,,,,,,,2.0 M4,,,,,,,,,0,,,,,,,,,,;05/May/10 7:58 PM;david_syer;3600,,,,,,,,7200,3600,3600,50%,7200,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,284342400,,,,,,25713,false,mark.fisher(mark.fisher),,,,0|i051iv:,29453,3219,,,,,,"05/May/10 7:58 PM;david_syer;Done.  Use ""mvn generate-resources"" and copy from target/generated-resources if you need to regenerate.",,,,,,,,,,,,,,,,,,,,,,,
Add support to use any <outbound-gateway> inside the <chain>,INT-1029,30558,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,abilan,hr_flick,hr_flick,11/Mar/10 6:04 PM,03/Jul/12 7:23 AM,10/May/19 2:36 AM,07/Jun/12 10:23 AM,1.0.3,,,,,,,2.2 M3,2.2 M3 Sprint 1,,,,,,,,3,,,,,,,,"The issue is more common that it described in the forum.
There are a lot of <outbound-gateway>s which can't be placed inside the <chain>.
In most cases it looks like a simple improvement of XSD, where exists *use=""required""* on 'request-channel' attribute.",,;06/Jun/12 12:13 AM;abilan;1440,;07/Jun/12 5:10 AM;abilan;14400,,,,,,,,0,15840,,,0,15840,,,,,,,,INT-2607,,,,,,,,,,,,,,,,,,,218332800,,,,,2010-03-12 17:25:00.026,25731,true,grussell(grussell),,,,0|i02lgn:,15186,3368,http://forum.springsource.org/showthread.php?t=85684,,,,,12/Mar/10 5:25 PM;iwein;As far as I can see it would be good enough to support <http:outbound-gateway ../> without channel attributes within the chain.,"01/Jun/12 1:43 PM;oleg.zhurakousky@springsource.com;Actually I believe this is done in 2.2.M1 

@Artem
Can you please confirm and link the related JIRAs and also if it is addressed can you please resolve it as duplicate
","04/Jun/12 9:50 AM;abilan;No, @Oleg, the issue is still here.
I link a similar JIRA INT-2598, where I've described the problem.
And yes: I confirm these issues doplicate each other and one of them should be fixed as 'Duplicated', but other one should be changed to more common issue.
I'll take care of them, but I want to know which is more important: *impovement* or *bug*. Or do you mark them in order of issue's ID?","04/Jun/12 9:55 AM;oleg.zhurakousky@springsource.com;Since we never really claim it to work its is not a bug so I'd stay with the improvement. 
The main point here is traceability and as long as you link them together you can resolve one as ""Duplicate"" and keep the other one assigned to yourself since you have become a <chain> expert ;)",07/Jun/12 5:09 AM;abilan;Issued PR: https://github.com/SpringSource/spring-integration/pull/483,,,,,,,,,,,,,,,,,,,
Add namespace support for an operation-invoking-outbound-gateway,INT-1018,30509,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,oleg.zhurakousky@springsource.com,mark.fisher,mark.fisher,09/Mar/10 8:58 AM,31/Jul/10 3:40 PM,10/May/19 2:36 AM,14/Jul/10 3:20 AM,,,,,,,,2.0 M6,,,,,Adapters,,,,0,,,,,,,,"In M3, we introduced the operation-invoking-channel-adapter, but we need to also support operations with return values.",,;14/Jul/10 1:58 AM;oleg.zhurakousky@springsource.com;1200,;14/Jul/10 3:21 AM;oleg.zhurakousky@springsource.com;2700,,,,,,,,900,3900,,,900,3900,,,,,,,,,,,,,,,,,,,,,,,,,,,276825600,,,,,2010-07-14 03:20:35.66,25740,false,mark.fisher(mark.fisher),,,,0|i02lj3:,15197,3211,,,,,,"14/Jul/10 3:20 AM;oleg.zhurakousky@springsource.com;The namespace support has been added and operation invoking outbound gateways could be defined as follows:
Configure Object and Operation name
{code}
<jmx:operation-invoking-outbound-gateway request-channel=""defaultInput""
			reply-channel=""defaultOutput""
			default-object-name=""org.springframework.integration.jmx.config:type=TestBean,name=testBeanForDefaultsGateway""
			default-operation-name=""testWithReturn""/>
{code}
Provide Object and Operation name as MessageHeaders (JmxHeaders.OBJECT_NAME and JmxHeaders.OPERATION_NAME)
{code}
<jmx:operation-invoking-outbound-gateway request-channel=""noDefaultInput""
			reply-channel=""noDefaultOutput""/>
{code}
Provide Object and Operation name and ReplyChannel as MessageHeaders (JmxHeaders.OBJECT_NAME and JmxHeaders.OPERATION_NAME, MessaheHeaders.REPLY_CHANNEL)
{code}
<jmx:operation-invoking-outbound-gateway request-channel=""noDefaultInput""/>
{code}








",31/Jul/10 3:40 PM;mark.fisher;M6 released,,,,,,,,,,,,,,,,,,,,,,
Implement JdbcMessageStore,INT-1010,30413,,New Feature,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Complete,david_syer,david_syer,david_syer,03/Mar/10 2:42 AM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,11/Mar/10 3:22 AM,,,,,,,,2.0 M3,,,,,,,,,0,,,,,,,,,,;11/Mar/10 6:58 AM;david_syer;14400,,,,,,,,172800,158400,14400,8%,172800,158400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,289094400,,,,,2010-03-11 03:22:47.682,25748,false,mark.fisher(mark.fisher),,,,0|i051v3:,29508,25348,,,,,,"11/Mar/10 3:22 AM;mark.fisher;This is a work-in-progress, but the initial implementation is available in M3.

See the test cases for more details (JdbcMessageStoreTests).",,,,,,,,,,,,,,,,,,,,,,,
Switch over namespace support for <resequencer/> to use CorrelatingMessageHandler in the background,INT-1006,30394,,Refactoring,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,iwein,iwein,02/Mar/10 7:20 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,03/May/10 9:08 PM,2.0 M2,,,,,,,2.0 M4,,,,,Core,,,,0,,,,,,,,This is work pulled out of the refactoring that happened in the scope of INT-330,,;03/May/10 9:08 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,INT-330,,,,,,,,,,,,,,,,,,,,,284515200,,,,,2010-05-03 08:11:27.785,25750,false,mark.fisher(mark.fisher),,,,0|i051jr:,29457,3209,,,,,,09/Mar/10 4:18 AM;iwein;Moving this to M4. I first want to see how the CorrelatingMessageHandler deals with aggregation; resequencing might be better off with a dedicated backing class,"03/May/10 8:11 AM;mark.fisher;Dave, feel free to resolve this one if it's done (I think it is).",,,,,,,,,,,,,,,,,,,,,,
Add timeout handler to Aggregator,INT-958,29540,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Complete,david_syer,paul.mckenzie,paul.mckenzie,06/Jan/10 12:45 AM,13/Sep/10 6:00 PM,10/May/19 2:36 AM,04/May/10 9:15 PM,,,,,,,,2.0 M4,,,,,Core,,,,0,,,,,,,,Provide a way of defining an optional onTimeout method which is called after the timeout period,,;04/May/10 9:15 PM;david_syer;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,284428800,,,,,2010-01-06 01:40:17.094,25787,false,mark.fisher(mark.fisher),,,,0|i04cy7:,25472,3206,http://forum.springsource.org/showthread.php?t=82636,,,,,"06/Jan/10 1:40 AM;mark.fisher;This could take the form of a TimeoutProcessor that implements MessageGroupProcessor. The default implementation could still honor the 'send-partial-results-on-timeout' boolean flag.
","03/Mar/10 2:33 AM;mark.fisher;Moving to M4. The Aggregator is being overhauled in M3 (using the new CorrelatingMessageHandler), and this issue can be considered immediately after M3.","03/May/10 8:36 AM;mark.fisher;Dave, I'm interested in your thoughts on this one. It may be related to some of the yet-to-be-completed parts of refactoring (e.g. reaper, etc).","03/May/10 7:51 PM;david_syer;It's definitely in that space.  My thinking is that the whole timeout/reaper infrastructure in the aggregator in 1.0 was a mistake, but I'm not sure yet how to handle the implied backwards compatibility issues if we kill it.  In fact I already killed it (those config options in the XML do nothing right now), so I'm thinking about what should happen next.

The reaping / cleanup responsibilities have to be separated somehow from the normal completion (as implied by this issue already).  Now that MessageGroupStore is taking the state management responsibility away from the aggregator (CorrelatingMessageHandler) the obvious direction would be to provide expiry features in the store, or preferably another component that has a reference to the store, with a callback.  A default implementation of the callback could be provided and registered by the CorrelatingMessageHandler (or some helper component).

A sensible default might actually be to do nothing.  If the message store is volatile that means un-processed messages will disappear when the JVM dies, but that surely isn't a big surprise.  If the message store is durable then the message groups will still be there when the system restarts, and processing can continue.  Given that there might be a time interval in between restarts, it makes me wonder if timeouts even make any sense.  Can someone describe a real use case where they make a difference?","04/May/10 1:47 AM;mark.fisher;I do think timeout makes sense as one option for triggering the release of a MessageGroup (e.g. send requests to 5 servers and wait for 5 responses OR 1 minute - whichever occurs first). I know that people are relying on that feature in 1.0.

As far as the responsibility of reaping/cleanup, I agree that it should be moved to a separate component that interacts with the store. My only other concern would be the memory usage of a simple in-process MessageStore implementation, but I guess in that case we need to include LRU logic within the store itself?","04/May/10 2:31 AM;david_syer;Memory usage is only an issue for sequences that never complete: as long as all the messages arrive the group is cleaned up automatically already.  So the only thing you get from the reaper pattern is some protection against leaks of sequences (which would probably be a configuration / programming error, and should not be all that common I would hope).

The 5 responses or 1 minute use case can already be handled without any reaper: the ReleaseStrategy (formerly known as CompletionStrategy) just has to refuse to release messages that come after the timeout expires.  It's an interesting enough use case that I think we should implement it in core.  That would prove the point one way or the other.

At the moment I'm favouring adding methods expireMessageGroups() and registerExpiryCallback() on MessageGroupStore.  Then delegating the expire*() call to a separate concern (either a task:* trigger or a destroy() callback, or not at all - it's up to the user).","04/May/10 2:35 AM;david_syer;The ""partial-sequence"" attribute is also a case in point.  It feels like it's in the wrong place, but we can continue to support it by allowing the CMH to register an expiry callback for it.",04/May/10 9:15 PM;david_syer;A timeout callback can now be injected into the MessageGroupStore.  This issue can be resolved pending some work to expose those features in the XML namespace (INT-1116).,,,,,,,,,,,,,,,,
Encoding cannot be set on file:outbound-channel-adapter,INT-950,29409,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,iwein,iwein,iwein,25/Dec/09 8:33 PM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,28/Dec/09 5:02 AM,2.0 M2,,,,,,,2.0 M3,,,,,,,,,0,,,,,,,,"If you can't set the encoding (or use a platform independent encoding as default), you can't write platform independent software.",,"Implemented change in xsd, parsers and added test for this. As it turns out most of the work in the foundation was already there, just the namespace support was missing.;28/Dec/09 5:00 AM;iwein;2700",,,,,,,,7200,0,2700,37%,7200,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,295401600,,,,,,25795,false,mark.fisher(mark.fisher),,,,0|i02ldz:,15174,14443,,,,,,"28/Dec/09 5:02 AM;iwein;If you're up for it, give it a go in the latest BUILD-SNAPSHOT
{code}
<file:outbound-channel-adapter ... charset=""UTF-8""/>
{code}
should work now.",,,,,,,,,,,,,,,,,,,,,,,
New MethodInvokingMessageProcessor can't deal with Mockito mocks,INT-944,29393,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,23/Dec/09 7:06 PM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,24/Dec/09 12:24 AM,2.0 M2,,,,,,,2.0 M2,,,,,Core,,,,0,,,,,,,,"When wrapping an endpoint (e.g. service-activator) around a mockito mock application context can't be loaded.

I'll commit a test case immediately.",,;24/Dec/09 12:07 AM;mark.fisher;3600,Ran into one more glitch in tests where Mockito is proxying an interface only so that the target's 'superclass' is just Object.class.;24/Dec/09 12:21 AM;mark.fisher;1800,,,,,,,7200,1800,5400,75%,7200,1800,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,295833600,,,,,2009-12-23 22:43:31.472,25799,false,mark.fisher(mark.fisher),,,,0|i02vxj:,16883,15885,,,,,,"23/Dec/09 10:43 PM;mark.fisher;Maybe I'm confused, but didn't you leave out the part that makes it a mock? All I see is a reference to an interface.",,,,,,,,,,,,,,,,,,,,,,,
When running messages through anotated methods methods can be invoked with null (while the message payload is not null),INT-915,29181,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,iwein,iwein,09/Dec/09 9:30 PM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,21/Dec/09 11:10 PM,2.0 M1,,,,,,,2.0 M2,,,,,Core,,,,1,,,,,,,,"I've run into this problem while passing around many small files, it surfaced both in a service activator and in a transformer. When I replaced both with implementations of Transformer and MessageHandler, the problem was gone.

This evening I'll try to provoke the issue in isolation, but I'm pretty sure it's related to our MethodInvoking* code.

Example stacktrace
{code}
org.springframework.integration.message.MessageHandlingException: error occurred in message handler 
[ServiceActivator for [org.springframework.integration.handler.MethodInvokingMessageProcessor@65988886]]
at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:68)
at org.springframework.integration.handler.MessageHandlerChain.handleMessage(MessageHandlerChain.java:111)
at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:116)
at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:153)
at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:123)
at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:62)
at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:119)
at org.springframework.integration.dispatcher.BroadcastingDispatcher.access$0(BroadcastingDispatcher.java:117)
at org.springframework.integration.dispatcher.BroadcastingDispatcher$1.run(BroadcastingDispatcher.java:104)
at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:50)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
at java.lang.Thread.run(Thread.java:637)
Caused by: java.lang.NullPointerException
{code}

The nullpointer is thrown the first time the argument is used (Assert.notNull(..) on the first line gives similar result)",,Investigation and simplified sample;10/Dec/09 10:07 PM;iwein;14400,;19/Dec/09 11:05 PM;iwein;21600,,,,,,,28800,28800,36000,125%,28800,28800,36000,,,,,,,,,,,,,,21/Dec/09 1:29 PM;mark.fisher;MethodInvokingMessageProcessor.java;https://jira.spring.io/secure/attachment/16029/MethodInvokingMessageProcessor.java,,,,,,,,,,,,,296006400,,,,,2009-12-10 22:59:57.134,12460,false,mark.fisher(mark.fisher),,,,0|i03ntr:,21402,17947,,,,,,"10/Dec/09 5:53 PM;iwein;I've created a little playground sample to try and provoke the issue, but sadly failed so far. I'll try to simulate some exceptions to see if that is more provocative.

http://github.com/iwein/Spring-Integration-Sandbox/tree/master/quick-samples/concurrent-test/",10/Dec/09 10:05 PM;iwein;I managed to reproduce the issue this morning (in the project linked above). It's only manifesting when exceptions are thrown from the service.,"10/Dec/09 10:10 PM;iwein;I need a break from this. Mark, could you have a go?","10/Dec/09 10:59 PM;mark.fisher;When you managed to reproduce it, any idea what the ratio is? I've been running it non-stop without any errors.","11/Dec/09 2:11 AM;mark.fisher;What makes you think this has anything to do with File payloads?

If you do think the MethodInvoking* code is at fault, then it shouldn't matter what type of payload is being passed.

I mainly bring this up after running the tests (without reproducing any failures) for several hours that ended up impacting my Eclipse process and machine (tmp dir) more than anything.
","11/Dec/09 5:44 AM;iwein;I don't think it's related to File payloads. In fact I reproduced it with String too. It happens consistently on my 2 core Macbook Pro (Intel Core 2 Duo 2.53 GHz). I can reproduce it on an 8 core linux box (High CPU XL EC2 instance), but that takes a few more cycles to force the issue.

On the linux box I use
{code}
# java -version
java version ""1.6.0_0""
IcedTea6 1.3.1 (6b12-0ubuntu6.5) Runtime Environment (build 1.6.0_0-b12)
OpenJDK 64-Bit Server VM (build 1.6.0_0-b12, mixed mode)
{code}

On the Mac:
{code}
$ java -version
java version ""1.6.0_15""
Java(TM) SE Runtime Environment (build 1.6.0_15-b03-226)
Java HotSpot(TM) 64-Bit Server VM (build 14.1-b02-92, mixed mode)
{code}","11/Dec/09 6:42 AM;mark.fisher;Tag... you're it ;)

I have run this test in the background all day... most recently with the changes to use a String (using your updated code), and I have yet to see a single RED bar.
","15/Dec/09 12:10 AM;iwein;I've found a similar issue (also not reproducible on all systems) related to headers getting lost in @Header arguments.

Cleaned and anonymized Stack trace.

{code}
**********************************************************************************************************
Message [
[Payload=********692d8f83-9882-4834-aff9-d8fdb8a599c7_5536168]
[Headers={history=[name=chunked;type=channel;timestamp=1260884995761,
 name=org.springframework.integration.transformer.MessageTransformingHandler@114562c5;type=endpoint;timestamp=1260885331518,
 name=transformed;type=channel;timestamp=1260885336141,
 name=ServiceActivator for [org.springframework.integration.handler.MethodInvokingMessageProcessor@3600e312];type=endpoint;timestamp=1260885336141,
 name=matched;type=channel;timestamp=1260885336167,
 name=org.springframework.integration.router.HeaderValueRouter@23b67d6a;type=endpoint;timestamp=1260885336167,
 name=O-matched;type=channel;timestamp=1260885336167,
 name=org.springframework.integration.handler.BridgeHandler@7284aa02;type=endpoint;timestamp=1260885336167,
 name=filteredChannel;type=channel;timestamp=1260885336167,
 name=org.springframework.integration.transformer.MessageTransformingHandler@52a34783;type=
endpoint;timestamp=1260885336167,
 name=sql-operations;type=channel;timestamp=1260885336826,
 name=executed;type=channel;timestamp=1260885344031],
$timestamp=1260884995761, accoId=*.Match@dc30dfa, brandName=**, 
$id=c5a07ef9-650d-443c-8b06-d6a7e86b4a20, chunkedFile=/Users/iwein/****/1260884995655_***.xml, 
originalFile=/Users/iwein/***/mirror/***xml.gz}]]
 caused an error on it's last endpoint. It will NOT be reprocessed without manual intervention
----------------------------------------------------------------------------------------------------------
Stacktrace:
 org.springframework.integration.message.MessageHandlingException: Message is missing required header: 'chunkedFile'
        at org.springframework.integration.handler.ArgumentArrayMessageMapper.retrieveHeaderFromMessage(ArgumentArrayMessageMapper.java:318)
        at org.springframework.integration.handler.ArgumentArrayMessageMapper.mapMessageToArguments(ArgumentArrayMessageMapper.java:184)
        at org.springframework.integration.handler.ArgumentArrayMessageMapper.fromMessage(ArgumentArrayMessageMapper.java:148)
        at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:109)
        at org.springframework.integration.handler.MethodInvokingMessageHandler.handleMessage(MethodInvokingMessageHandler.java:57)
        at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:119)
        at org.springframework.integration.dispatcher.BroadcastingDispatcher.dispatch(BroadcastingDispatcher.java:110)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:153)
        <custom handler>.handleMessage(XmlDatabaseOperator.java:86)
        at org.springframework.integration.handler.MessageHandlerChain.handleMessage(MessageHandlerChain.java:111)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
        at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:144)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:118)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:113)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
        at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:119)
        at org.springframework.integration.dispatcher.BroadcastingDispatcher.dispatch(BroadcastingDispatcher.java:110)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
        at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:144)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:118)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:113)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:153)
        at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:224)
        at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
        at org.springframework.integration.router.AbstractMessageRouter.handleMessageInternal(AbstractMessageRouter.java:76)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
        at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:144)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:118)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:113)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
        at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
        at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
        at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
        at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
        at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:144)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:118)
        at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:113)
        at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
        at org.springframework.integration.handler.MessageHandlerChain.handleMessage(MessageHandlerChain.java:111)
        at org.springframework.integration.endpoint.PollingConsumer.doPoll(PollingConsumer.java:59)
        at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.innerPoll(AbstractPollingEndpoint.java:236)
        at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.poll(AbstractPollingEndpoint.java:220)
        at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.access$0(AbstractPollingEndpoint.java:217)
        at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:208)
        at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:50)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:637)
{code}","19/Dec/09 5:12 AM;iwein;I've added some sysout logging to {{ArgumentArrayMessageMapper}}.

{code}
	private Object getValueFromMessageBasedOnEL(Message message, Class targetType, boolean rethrowException, String... expressions) {
		Object value = null;
		for (String expression : expressions) {
			StandardEvaluationContext context = new StandardEvaluationContext(message);
			context.setTypeConverter(new StandardTypeConverter(conversionService));
			try { 
				Expression exp = expressionParser.parseExpression(expression);
                System.out.println(""Expression: "" + exp.getExpressionString());
				context.addPropertyAccessor(new MapAccessor());	
				value = exp.getValue(context);
                System.out.println(""Value after exp.getValue(): ""+value);
				if (value != null && conversionService.canConvert(value.getClass(), targetType)) {
					// to accommodate Map->Properties conversion
					value = expression.equals(""headers"") ? conversionService.convert(value, targetType) : value;
					break;
				}
				else {
                    System.out.println(""Value set to null because no converter"");
					value = null;
				}
			}
			catch (Throwable e) {
				if (rethrowException) {
					throw new MessageHandlingException(message, e);
				}
			}
		}
		return value;
	}

{code}

This gives me the following output just before the test fails (white space added):

{code}
Expression: payload.input
Expression: headers.input
Expression: payload
Expression: headers
Expression: #this
Value after exp.getValue(): 
[Payload=The quick brown fox jumped over the lazy dog]
  [Headers={
    history=[name=in;type=channel;timestamp=1261249664686
             , name=ServiceActivator for [org.springframework.integration.handler.MethodInvokingMessageProcessor@583e97df];
               type=endpoint;timestamp=1261249668048], 
    $timestamp=1261249664686, 
    $id=29b4eb0b-3956-425f-b1fd-d767ea6c73a7}]
Value set to null because no converter
{code}

Next I'll add synchronization around the conversion service.

","19/Dec/09 6:05 AM;iwein;I didn't have any luck yet, but what I noticed is that when things go wrong different exceptions are thrown from {{exp.getValue(..)}}:

Normal case:
{code}
exp: payload.input
EL1008E:(pos 8): Field or property 'input' cannot be found on object of type 'java.lang.String'
exp: headers.input
EL1008E:(pos 8): Field or property 'input' cannot be found on object of type 'org.springframework.integration.core.MessageHeaders'
exp: payload
Expression: payload resulted in The quick brown fox jumped over the lazy dog
{code}

In a breaking case I get:
{code}
exp: payload.input
org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
exp: headers.input
org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
exp: payload
org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
exp: headers
org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
exp: #this
Expression: #this resulted in 
[Payload=The quick brown fox jumped over the lazy dog]
[Headers={
  history=[name=in;type=channel;timestamp=1261252537673, 
           name=ServiceActivator for [org.springframework.integration.handler.MethodInvokingMessageProcessor@628f9a32];
             type=endpoint;timestamp=1261252540365, 
           name=middle;type=channel;timestamp=1261252540368,
           name=org.springframework.integration.transformer.MessageTransformingHandler@51e67ac;type=endpoint;timestamp=1261252540368], 
  $timestamp=1261252537672, 
  $id=20d7e8eb-704d-45bc-b981-cba450584beb}]
Value set to null because no converter
{code}

I'll continue on this later if I can find some more time. Mark could you maybe try to add some sleeps in the code to see if you can provoke the problem that way? I think I've narrowed it down to a single method.","19/Dec/09 6:12 AM;iwein;Tag you're it. Do you know why this exception is thrown?:
{code}
java.lang.ClassCastException: org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
org.springframework.integration.message.GenericMessage cannot be cast to java.util.Map
	at org.springframework.context.expression.MapAccessor.canRead(MapAccessor.java:37)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:164)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:60)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:93)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:88)
	at org.springframework.integration.handler.ArgumentArrayMessageMapper.getValueFromMessageBasedOnEL(ArgumentArrayMessageMapper.java:332)
	at org.springframework.integration.handler.ArgumentArrayMessageMapper.mapMessageToArguments(ArgumentArrayMessageMapper.java:176)
	at org.springframework.integration.handler.ArgumentArrayMessageMapper.fromMessage(ArgumentArrayMessageMapper.java:146)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:104)
	at org.springframework.integration.transformer.AbstractMessageProcessingTransformer.transform(AbstractMessageProcessingTransformer.java:45)
	at org.springframework.integration.transformer.MessageTransformingHandler.handleRequestMessage(MessageTransformingHandler.java:48)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:100)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:103)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:90)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:43)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:180)
	at org.springframework.integration.channel.MessageChannelTemplate.doSend(MessageChannelTemplate.java:223)
	at org.springframework.integration.channel.MessageChannelTemplate.send(MessageChannelTemplate.java:181)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:144)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:118)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:113)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:64)
	at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:119)
	at org.springframework.integration.dispatcher.BroadcastingDispatcher.access$0(BroadcastingDispatcher.java:117)
	at org.springframework.integration.dispatcher.BroadcastingDispatcher$1.run(BroadcastingDispatcher.java:104)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:50)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
{code}","19/Dec/09 11:04 PM;iwein;Meh, I tried to add synchronization at different places in the call stack, but that didn't help yet. I'm running out of time again.","20/Dec/09 8:12 AM;mark.fisher;I can look into that stack trace and try to see what causes that, but first can you explain how it is related to this bug? Is that something you encountered while tracking this? The connection is not immediately obvious to me.","21/Dec/09 4:18 AM;iwein;That is the stacktrace of the exception that causes the expression ""payload"" to fail.","21/Dec/09 1:32 PM;mark.fisher;Iwein,

Can you drop in the attached MethodInvokingMessageProcessor in place of the existing one and let me know if the tests pass?

I am planning to commit this tomorrow, and it completely replaces the code where you seem to have tracked down the problem.

If you run against the entire test suite, you will see failures, but those will also be addressed in the commit. The main thing I want to know before committing is if the new implementation resolves this issue.

Thanks,
Mark
","21/Dec/09 3:35 PM;iwein;Mark, this bug can go to bug heaven as far as I'm concerned.

The testcase passes, also with 30 times the load.","21/Dec/09 11:10 PM;mark.fisher;The last commit should resolve this issue.

It would be very nice to know what was causing the problem. It appears to be in the fallback approach formerly used in expression evaluation. I am still unable to reproduce this (even with significantly increased load) given the referred tests. However, it might be possible to create a lower-level test using the ArgumentArrayMessageMapper directly.",,,,,,,
"Gateway should maintain and re-apply the ""original"" reply channel and error channel headers",INT-906,29131,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Dec/09 2:14 AM,13/Sep/10 5:57 PM,10/May/19 2:36 AM,06/Dec/09 10:22 AM,1.0.3,2.0 M1,,,,,,1.0.4,2.0 M2,,,,Core,,,,0,,,,,,,,"When sendAndReceive() is called, the gateway implementation sets the reply channel and error channel to anonymous temporary channels so that all replies are returned properly (and Exceptions can be pulled out of any ErrorMessage even if triggered asynchronously).

However, this operation wipes out any existing reply channel and error channel headers. Those values should be maintained and re-set on the reply Message, since the anonymous temporary channels are useless past the scope of the gateway's sendAndReceive() invocation in the first place and since those headers may have been provided by a preceding caller (who will not receive the result because of this overwriting behavior currently).

This will enable nesting of flows with gateways.",,;06/Dec/09 10:06 AM;mark.fisher;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,297302400,,,,,,12736,false,mark.fisher(mark.fisher),,,,0|i02s7j:,16279,3243,,,,,,06/Dec/09 10:07 AM;mark.fisher;will also resolve for 1.0.4,"06/Dec/09 10:21 AM;mark.fisher;The actual refactoring will happen in the doSendAndReceive() method of MessageChannelTemplate. There, we need to retain the original reply channel and error channel headers from the request Message and copy them to the reply Message before returning.",,,,,,,,,,,,,,,,,,,,,,
XmlPayloadUnmarshallingTransformer should support Message results,INT-903,29128,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,05/Dec/09 1:27 AM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,10/Dec/09 9:37 AM,2.0 M1,,,,,,,2.0 M2,,,,,,,,,0,,,,,,,,"This behavior is actually driven by the current base class: AbstractPayloadTransformer. It passes *only* the payload (not the full Message) to the sub-class' transformPayload(payload) method. It also treats the return value as a new payload *even if that subclass method returns a full Message*.

The idea is to refactor the method such that it does recognize a Message-typed return value (rather than creating a Message with another Message as its payload). However, we might want to take this one step further, by refactoring this directly into AbstractTransformer and providing a boolean value for whether to pass the Message or the payload as the argument (as in other places in the framework, it could be a boolean property named ""extractPayload""). Alternatively, we could have both as protected methods so that subclasses choose which ""level"" to override.
",,;06/Dec/09 10:21 PM;mark.fisher;7200,,,,,,,,7200,7200,7200,100%,7200,7200,7200,,,,,,,,,,,INT-909,INT-917,,,,,,,,,,,,,,,296956800,,,,,,12496,false,mark.fisher(mark.fisher),,,,0|i05233:,29544,25384,,,,,,"10/Dec/09 9:37 AM;mark.fisher;INT-917 has been created to track the more general refactoring, but this particular issue is now resolved even if the class itself might undergo some refactoring. A test has been added to avoid any regressions related to this specific issue during such refactoring.",,,,,,,,,,,,,,,,,,,,,,,
File Inbound channel for XML with unmarshaller integration,INT-899,29051,,Improvement,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,srinivas_vsk,srinivas_vsk,01/Dec/09 3:54 AM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,01/Dec/09 4:31 AM,2.0 M1,,,,,,,2.0 M2,,,,,Adapters,,,,0,,,,,,,,It would be nice to have transformation of payload of type File from a file-inbound-channel-adapter to StreamSoure as expected by JAXB unmarshaller instead of forcing the user to do a file-string transformation between these channels,,;01/Dec/09 4:28 AM;mark.fisher;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,297648000,,,,,2009-12-02 04:38:58.34,12716,false,mark.fisher(mark.fisher),,,,0|i02s5r:,16271,15349,http://forum.springsource.org/showthread.php?t=81233,,,,,"02/Dec/09 4:38 AM;mark.fisher;The unmarshalling transformer now accepts a File payload directly, so there is no longer a need to add file-to-string-transformer between the file inbound-channel-adapter and the transformer.
",,,,,,,,,,,,,,,,,,,,,,,
Create JDBC module,INT-874,28561,25284,Sub-task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,03/Nov/09 1:33 AM,13/Sep/10 5:59 PM,10/May/19 2:36 AM,03/Nov/09 2:41 AM,2.0 M1,,,,,,,2.0 M2,,,,,Adapters,,,,0,,,,,,,,The module should be created as 'org.springframework.integration.jdbc' under trunk.,,;03/Nov/09 2:41 AM;mark.fisher;5400,,,,,,,,5400,0,5400,100%,5400,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,300240000,,,,,,25846,false,mark.fisher(mark.fisher),,,,0|i051zz:,29530,25370,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
polling tasks startup too eagerly,INT-845,28314,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Blocker,Fixed,mark.fisher,mark.fisher,mark.fisher,12/Oct/09 9:52 AM,13/Sep/10 5:58 PM,10/May/19 2:36 AM,12/Oct/09 1:01 PM,2.0 M1,,,,,,,2.0 M1,,,,,Core,,,,0,,,,,,,,"EventDrivenConsumers that have TRUE for 'autoStartup' should start prior to PollingConsumers that have TRUE for 'autoStartup'. Otherwise, it's possible to get ""Dispatcher has no subscriber"" errors only because the subscriber is not YET subscribed.

The simplest way to solve this for the immediate term (2.0 M1) is to add an enum 'StartupMode' for endpoints with the following values:
    MANUAL, ON_INITIALIZATION, ON_CONTEXT_REFRESH

* for EventDrivenConsumers, 'autoStartup' of TRUE will configure ON_INITIALIZATION
* for PollingConsumers, 'autoStartup' of TRUE will configure ON_CONTEXT_REFRESH
* for both, 'autoStartup' of FALSE will configure MANUAL
* for both, TRUE is the default value

This was not a problem in the 1.0.x branch, because the TaskScheduler would not itself start until receiving the ContextRefreshedEvent. Any tasks submitted prior to that (from polling consumers) would be queued. By the time they began execution, the subscribers would have all started (thereby activating the subscription).

It might be worth considering a wrapper for the TaskScheduler (e.g. LifeCycleAwareTaskScheduler) with similar behavior.
",,;12/Oct/09 1:00 PM;mark.fisher;16200,,,,,,,,10800,0,16200,150%,10800,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,302054400,,,,,,25866,false,mark.fisher(mark.fisher),,,,0|i046zj:,24506,21260,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update samples for 2.0 M1 release,INT-844,28288,,Task,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Major,Fixed,mark.fisher,mark.fisher,mark.fisher,11/Oct/09 7:11 AM,13/Sep/10 5:58 PM,10/May/19 2:36 AM,13/Oct/09 3:14 AM,1.0.3,,,,,,,2.0 M1,,,,,Samples,,,,0,,,,,,,,"1) versions in POM must be updated (and parent POM version)
2) versions should be removed in XML Schema declarations

For OSGi samples:
   3) versions for bundle must be changed (Bundle-Version now 2.0.0)
   4) target JAR in build.xml must be updated to match version (for osgi-inbound/osgi-outbound only)
   5) any version ranges in MANIFEST.MF must be adjusted for the current version numbers
",,;12/Oct/09 12:25 AM;mark.fisher;9000,,,,,,,,10800,1800,9000,83%,10800,1800,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,302140800,,,,,,25867,false,mark.fisher(mark.fisher),,,,0|i01npb:,9717,9750,,,,,,"12/Oct/09 12:22 AM;mark.fisher;Completed steps 2-5.

Step 1 needs to be applied post-tag/pre-release.","12/Oct/09 12:42 AM;mark.fisher;Step 3 and 4 also need to be applied post-tag.

For now, I've changed the trunk versions in both places to be: 2.0.0.BUILD-SNAPSHOT
",,,,,,,,,,,,,,,,,,,,,,
Improve display details for filecopy samples,INT-843,28269,,Bug,Closed,INT,Spring Integration,software,grussell,"<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring Integration issues at <a href=""https://github.com/spring-projects/spring-integration/issues"">GitHub</a> </div>",http://projects.spring.io/spring-integration/,Minor,Fixed,mark.fisher,mark.fisher,mark.fisher,09/Oct/09 5:41 AM,13/Sep/10 5:57 PM,10/May/19 2:36 AM,23/Dec/09 8:23 AM,1.0.3,2.0 M1,,,,,,1.0.4,2.0 M2,,,,,,,,0,,,,,,,,See the original description of this problem within INT-802,,;23/Dec/09 8:08 AM;mark.fisher;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,295833600,,,,,,25868,false,mark.fisher(mark.fisher),,,,0|i0527b:,29563,3251,,,,,,"11/Dec/09 7:29 AM;mark.fisher;Iwein, I'm assigning this one to you, since you will likely be making other updates in the File samples.",23/Dec/09 8:23 AM;mark.fisher;This is resolved for both 2.0 M2 and 1.0.4.,,,,,,,,,,,,,,,,,,,,,,
WriteResult not available from thrown Exception,DATAMONGO-651,48114,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,raman,raman,11/Apr/13 8:25 AM,17/Apr/13 3:08 AM,10/May/19 2:36 AM,15/Apr/13 8:10 AM,1.2 GA,,,,,,,1.2.1,1.3 M1,,,,Core,,,,0,,,,,,,,"The {{MongoTemplate.handleAnyWriteResultErrors(…)}} method currently throws {{DataIntegrityViolationException}} if {{WriteResultChecking}} is {{EXCEPTION}}.

In some cases e.g. doing a bulk insert, it is critical for calling code to be able to examine the {{WriteResult}} returned by {{Mongo}} in order to determine which documents were written and which ones were not. The current Spring-Data code does not seem to provide this information.

Perhaps a subclass of {{DataIntegrityViolationException}} should be thrown that provides access to {{WriteResult}}?",,;15/Apr/13 8:09 AM;olivergierke;3600,,,,,,,,,,3600,,,,3600,,,,,,,,,,,,,,15/Apr/13 8:10 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/21159/mylyn-context.zip,,,,,,,,,,,,,191721600,,,,,,34643,true,tmarshall(tmarshall),,,,0|i068nz:,36442,34345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query methods on @DBRef field with the qualifier isNull throws Exception,DATAMONGO-570,46047,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,awislowski,awislowski,08/Nov/12 1:40 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,13/Nov/12 9:34 AM,1.1 GA,,,,,,,1.1.2,1.2 GA,,,,Core,Repository,,,0,,,,,,,,"For the following repository query on @DBRef field with the qualifier isNull throws Exception

public class Tree {
  private String id;
  @DBRef
  private Tree parent;
  ...
}

@Repository
public interface TreeRepository extends CrudRepository<Tree, String> {
  List<Tree> findByParentIsNull();
}


Here is the stacktrace:
Caused by: java.lang.IllegalArgumentException: [Assertion failed] - this argument is required; it must not be null
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.util.Assert.notNull(Assert.java:123)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createDBRef(MappingMongoConverter.java:672)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.toDBRef(MappingMongoConverter.java:277)
	at org.springframework.data.mongodb.core.convert.QueryMapper.convertAssociation(QueryMapper.java:266)
	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedValue(QueryMapper.java:177)
	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedObject(QueryMapper.java:90)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1332)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1318)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:504)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$Execution.readCollection(AbstractMongoQuery.java:123)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$CollectionExecution.execute(AbstractMongoQuery.java:146)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.execute(AbstractMongoQuery.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:313)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy39.findByParentIsNull(Unknown Source)",,;13/Nov/12 9:23 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,205027200,,,,,,32938,true,tmarshall(tmarshall),,,,0|i05y9z:,34759,32640,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError when objects have cycles,DATAMONGO-553,45729,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Critical,Fixed,olivergierke,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,12/Oct/12 6:36 AM,25/Mar/13 10:24 AM,10/May/19 2:36 AM,17/Oct/12 2:49 PM,1.1 GA,,,,,,,1.1.1,,,,,,,,,1,,,,,,,,"The issue was first reported to Spring Integration project: https://jira.springsource.org/browse/INT-2778 and we narrowed down the problem to the fact that the persisted object had a cycle. In the reported case persisted object is Exception who's default 'cause' is 'this' thus creating a cycle.
I think classes of type Throwable needs to be treated in a special way where instead of using Reflection getCause() should be called.
However it would also help to have some cycle detection mechanism even for the purpose of throwing a more meaningful exception (e.g., Cycle detected)",,;17/Oct/12 2:43 PM;olivergierke;2100,,,,,,,,,0,2100,,,0,2100,,,,,,,,,,,,,,17/Oct/12 2:49 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20562/mylyn-context.zip,,,,,,,,,,,,,206928000,,,,,2012-10-17 14:49:47.983,32653,false,tmarshall(tmarshall),,,,0|i05wk7:,34481,32353,,,,,,17/Oct/12 2:49 PM;olivergierke;Added an abstraction to {{MongoPersistentEntity}} to define whether the property should rather be accessed through the getter. {{MappingMongoConverter}} inspects that method and pipes it into the {{BeanWrapper}} to lookup the property value. I opened DATACMNS-243 to pull up this change to Spring Data Commons so that we can provide a more flexible mapping model to give users control over this behaviour.,,,,,,,,,,,,,,,,,,,,,,,
"MongoTemplate.save(BasicDBObject, String) results in NPE (after upgrading to 1.1.0.RELEASE",DATAMONGO-550,45714,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,oleg.zhurakousky@springsource.com,oleg.zhurakousky@springsource.com,11/Oct/12 7:52 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,15/Oct/12 9:01 AM,1.1 GA,,,,,,,1.1.1,,,,,,,,,1,,,,,,,,,,;15/Oct/12 8:00 AM;olivergierke;2700,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,15/Oct/12 9:01 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20555/mylyn-context.zip,,,,,,,,,,,,,207360000,,,,,2012-10-12 04:57:02.74,32638,true,tmarshall(tmarshall),,,,0|i05wgv:,34466,32338,,,,,,"12/Oct/12 4:57 AM;askogman;Please Oliver, this needs to be fixed. We can't use 1.1.0 otherwise.",,,,,,,,,,,,,,,,,,,,,,,
MongoTemplate.save(…) suffers from potential NullPointException,DATAMONGO-549,45708,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,10/Oct/12 11:32 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,10/Oct/12 11:59 PM,1.1 GA,,,,,,,1.1.1,,,,,Core,,,,0,,,,,,,,"{{MongoTemplate.save(…)}} runs into a {{NullPointerException}} in case the object handed in is a Mongo-primitive one ({{Map}}, {{Collection}}, Java-primitive). Also if the object handed into the method is {{null}} already we run into an NPE as well.",,;10/Oct/12 11:59 PM;olivergierke;1500,,,,,,,,0,0,1500,"9,223,372,036,854,775,807%",0,0,1500,,,,,,,,,,,,,,10/Oct/12 11:59 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20550/mylyn-context.zip,,,,,,,,,,,,,207532800,,,,,,32632,false,tmarshall(tmarshall),,,,0|i05wfj:,34460,32332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
findAll() fails with NPE - discovering the root cause,DATAMONGO-462,43918,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,kern3020,kern3020,19/Jun/12 8:57 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,19/Jun/12 10:00 AM,1.0.1,1.1 M1,,,,,,1.0.2,1.1 M2,,,,,,,,0,,,,,,,,"This bug report is based on a forum thread(see Reference URL). I do not want to duplicate the original posts. Here is my response.

Hello Oliver, 

This morning I built spring data from source which provided a more informative error (see below). My code doesn't use the  @PersistenceConstructor annotation. I'll investigate. 

My source is open source. It is pre-alpha at this time. You'll find it on github (https://github.com/kern3020/harbinger).

Exception in thread ""main"" org.springframework.data.mapping.model.MappingInstantiationException: Could not instantiate bean class [java.net.URL]: No default constructor found; nested exception is java.lang.NoSuchMethodException: java.net.URL.<init>()
	at org.springframework.data.convert.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:63)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:230)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:210)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:953)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:708)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:246)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:236)
	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:183)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:236)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:210)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:174)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:170)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:73)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1700)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1451)
	at org.springframework.data.mongodb.core.MongoTemplate.findAll(MongoTemplate.java:959)
	at org.john.app.InstituteRepository.dump(InstituteRepository.java:58)
	at org.john.app.InstituteRepository$$FastClassByCGLIB$$7799dab9.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)
	at org.john.app.InstituteRepository$$EnhancerByCGLIB$$a998483c.dump(<generated>)
	at org.john.app.ReaperApp.main(ReaperApp.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [java.net.URL]: No default constructor found; nested exception is java.lang.NoSuchMethodException: java.net.URL.<init>()
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:107)
	at org.springframework.data.convert.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:60)
	... 25 more
Caused by: java.lang.NoSuchMethodException: java.net.URL.<init>()
	at java.lang.Class.getConstructor0(Class.java:2723)
	at java.lang.Class.getDeclaredConstructor(Class.java:2002)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:104) 

","linux, spring 3.x, ",;19/Jun/12 9:59 AM;olivergierke;2700,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,19/Jun/12 10:00 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19855/mylyn-context.zip,,,,,,,,,,,,,217296000,,,,,2012-06-19 09:08:57.605,31219,false,tmarshall(tmarshall),,,,0|i05nnj:,33038,30919,http://forum.springsource.org/showthread.php?127566-findAll()-fails-with-NPE,,,,,"19/Jun/12 9:08 AM;olivergierke;Okay, I've just added a tweak to {{MappedConstructor}} in the 1.0.x branch to better indicate what's going on. This sample here now seems to be using the 1.1.0 branch where {{MappedConstructor}} is not used anymore. Still you see what the problem is: {{URL}} neither has a no-arg constructor nor a complex one annotated with {{@PersistenceConstructor}}. As {{URL}} is not under your control to add the annotation, for now the only thing you can effectively do is adding a {{Converter<URL, String>}} (for reading) and {{Converter<String, URL>}} (for writing) to manually convert from the {{URL}} to a {{String}} and back. I'll take this ticket and add these converters to the out-of-the box setup of converters applied, so as of version 1.1.0.M2 you won't need to tweak the setup anymore.

An even easier workaround for now might be to simply hold the {{URL}} property as a {{String}} rather, as the value - as it is currently persisted in the MongoDB document - is probably no valid {{URL}} either (missing the protocol prefix).","19/Jun/12 10:00 AM;olivergierke;Okay, it's been a little more tricky than expected but I've managed to solve the issue. From the commit log:

{quote}
So far URL instances were treated as entities and serialized as nested document. As there was no custom converter registered to re-instantiate the objects and URL does not contain a no-arg constructor, reading the instances back in resulted in an ugly exception in {{ReflectionEntityInstantiator}}. We now register a custom {{Converter}} to serialize URL instances as their plain {{toString()}} representation. This causes the reading working out of the box as the {{StringToObjectConverter}} registered by default uses the constructor taking a {{String}} on {{URL}} accidentally. To make sure this still works we added an explicit {{StringToURLConverter}} to implement symmetric conversions.
{quote}

Fixed in 1.0.x and 1.1.x branches, snapshots should be available in a bit. You'll probably have to adapt the existing documents to now carry the plain URL string as value for {{website}}.","19/Jun/12 10:12 AM;kern3020;Now that I am using a simple string to represent the URL, it is working fine.

Thanks, Oliver.

-jk

","19/Jun/12 10:25 AM;olivergierke;Glad it works out for you! As documented, you should be able to use {{URL}} as of the next versions.",,,,,,,,,,,,,,,,,,,,
Pageable query methods returning List are broken,DATAMONGO-446,43261,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,maciej.walkowiak,maciej.walkowiak,09/May/12 8:02 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,15/May/12 4:30 AM,,,,,,,,1.0.2,1.1 M2,,,,,,,,0,,,,,,,,"Documentation says that its possible to return {{List}} for query methods with Pageable parameter. It works for Spring Data JPA but not for Spring Data MongoDB.

In order to fix that {{org.springframework.data.mongodb.repository.query.AbstractMongoQuery.CollectionExecution}} could take provided {{Pageable}} parameter (nullable) from {{MongoParametersParameterAccessor}} and return paged result if pageable is not {{null}}.

Pull request is on its way.",,;15/May/12 4:29 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,15/May/12 4:30 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19648/mylyn-context.zip,,,,,,,,,,,,,220320000,,,,,2012-05-15 04:30:32.6,30680,false,tmarshall(tmarshall),,,,0|i05kc7:,32501,30380,,,,,,"09/May/12 8:07 AM;maciej.walkowiak;Pull request: https://github.com/SpringSource/spring-data-mongodb/pull/5

Just to clarify: before this fix paginated queries work only for methods returning Page",15/May/12 4:30 AM;olivergierke;Fixed in 1.1.x and 1.0.x branch. Snapshots should be available soon. Thanks for the contribution!,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Querydsl 2.5.0,DATAMONGO-443,43227,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,07/May/12 4:47 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,07/May/12 5:31 AM,,,,,,,,1.1 M1,,,,,Repository,,,,0,,,,,,,,,,;07/May/12 5:30 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,221011200,,,,,,30646,false,tmarshall(tmarshall),,,,0|i05k4v:,32468,30346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add support for newly introduced StartingWith, EndingWith and Containing keywords",DATAMONGO-418,42659,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,21/Mar/12 8:30 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,09/Apr/12 9:41 AM,,,,,,,,1.1 M1,,,,,Core,,,,0,,,,,,,,,,;09/Apr/12 9:41 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,DATACMNS-111,,,,,,,,,,,,09/Apr/12 9:41 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19570/mylyn-context.zip,,,,,,,,,,,,,225072000,,,,,,30081,false,tmarshall(tmarshall),,,,0|i05gnr:,31905,29781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getUserCredentials() is called twice in AbstractMongoConfiguration::mongoDbFactory(),DATAMONGO-412,42478,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,belamiru,belamiru,04/Mar/12 6:54 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,09/Mar/12 2:11 AM,1.0.1,,,,,,,1.0.2,1.1 M1,,,,Core,,,,0,,,,,,,,"During {{MongoDbFactory}} creation in {{mongoDbFactory()}}, {{getUserCredentials()}} is called twice:
{code:java}
if (getUserCredentials() == null) {
 return new SimpleMongoDbFactory(mongo(), getDatabaseName());
} else {
 return new SimpleMongoDbFactory(mongo(), getDatabaseName(), getUserCredentials());
}
{code}
It is almost not worth mentioning, but for pedantic reasons it would be better to do:
{code:java}
UserCredentials userCredentials = getUserCredentials();
if (userCredentials == null) {
 return new SimpleMongoDbFactory(mongo(), getDatabaseName());
} else {
 return new SimpleMongoDbFactory(mongo(), getDatabaseName(), userCredentials);
}
{code}
Almost always override of {{getUserCredentials()}} would look like:
{code:java}
@Override
public UserCredentials getUserCredentials() {
  return new UserCredentials(..., ...);
}
{code}
and there is no need to create {{UserCredentials}} twice, even if it only happens during startup.",,;08/Mar/12 4:11 AM;olivergierke;2400,,,,,,,,0,0,2400,"9,223,372,036,854,775,807%",0,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,226195200,,,,,2012-03-09 02:11:43.114,29901,false,tmarshall(tmarshall),,,,0|i05fjr:,31725,29601,,,,,,09/Mar/12 2:11 AM;olivergierke;Fixed the glitch in the 1.0.x branch and did a major overhaul of the JavaConfig base class to better reflect what the namespace is doing. ,,,,,,,,,,,,,,,,,,,,,,,
Inner class not supported,DATAMONGO-402,42251,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,trgoofi,trgoofi,17/Feb/12 12:31 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,09/Mar/12 6:31 AM,1.0.1,,,,,,,1.1 M1,,,,,,,,,0,,,,,,,,"Inner class not supported in 1.0.1.GA. It works fine in 1.0.0.GA
java.lang.IllegalArgumentException: No property null found for type class org.test.EnclosingClass$InsideClass
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:73)
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:92)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:312)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:294)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:258)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:239)
	at org.springframework.data.mongodb.core.convert.MappedConstructor$MappedParameter.<init>(MappedConstructor.java:125)
	at org.springframework.data.mongodb.core.convert.MappedConstructor.<init>(MappedConstructor.java:57)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:212)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:200)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:713)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:230)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:220)
	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:173)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:220)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:200)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:164)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:73)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1693)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:1405)
	at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:1224)
	at org.springframework.data.mongodb.core.MongoTemplate.findOne(MongoTemplate.java:455)
	at org.springframework.data.mongodb.core.MongoTemplate.findOne(MongoTemplate.java:450)
	at org.test.InnerClassTest.testInnerClass(InnerClassTest.java:43)",,;09/Mar/12 6:29 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,DATACMNS-134,,,,,,,,,,,,09/Mar/12 6:31 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19490/mylyn-context.zip,17/Feb/12 12:31 AM;trgoofi;test-inner-class.zip;https://jira.spring.io/secure/attachment/19420/test-inner-class.zip,,,,,,,,,,,,226108800,,,,,2012-03-09 06:16:47.827,29526,false,tmarshall(tmarshall),,,,0|i047an:,24556,21300,,,,,,"09/Mar/12 6:16 AM;olivergierke;The problem with the scenario is that using a non-static inner class causes the instantiation to fail. This is due to the fact that those classes get a constructor added by the compiler thet takes an outer class instance as argument which we don't handle. You sould be able to work around this by making the inner class a static one.

I've just added general support for this scenario to Spring Data Commons and will commit the relevant changes to the 1.1.x branch in a few seconds.",09/Mar/12 6:31 AM;olivergierke;Deployed to 1.1.x snapshots.,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Querydsl 2.3.2,DATAMONGO-394,42142,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,08/Feb/12 1:40 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,06/Mar/12 10:27 AM,,,,,,,,1.1 M1,,,,,Core,,,,0,,,,,,,,We should upgrade to the 2.3.2 bugfix version of Querydsl.,,;06/Mar/12 10:25 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,228787200,,,,,,29417,false,tmarshall(tmarshall),,,,0|i045pz:,24301,21046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ClassCastException: ""com.mongodb.BasicDBObject cannot be cast to com.mongodb.BasicDBList"" during find()",DATAMONGO-382,41783,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Blocker,Fixed,olivergierke,harlanji,harlanji,17/Jan/12 5:18 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,06/Mar/12 11:25 PM,1.0 GA,,,,,,,1.0.2,1.1 M1,,,,Core,,,,2,,,,,,,,"While upgrading from M5 to GA I started getting this error in my tests:

{noformat}
java.lang.ClassCastException: com.mongodb.BasicDBObject cannot be cast to com.mongodb.BasicDBList
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:294)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.convertToMongoType(MappingMongoConverter.java:850)
	at org.springframework.data.mongodb.core.QueryMapper.getMappedObject(QueryMapper.java:106)
	at org.springframework.data.mongodb.core.QueryMapper.getMappedObject(QueryMapper.java:102)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1259)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1248)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:471)
	at net.emota.together.service.PersonService.createOrUpdateGroupPersons(PersonService.java:372)
	at net.emota.together.core.itest.service.PersonServiceIT.createOrUpdateGroupPersons(PersonServiceIT.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
{noformat}

The query I am using is simple (and involves $in, maybe releated to my previous issue?):

{code}
{
""fbUserId"" : { ""$in"" : [ ""88888"" , ""ABCDE"" , ""12345""]}
}
{code}
",,;06/Mar/12 12:33 PM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,DATAMONGO-473,,,,,,05/Mar/12 1:56 AM;abisceanu;0001-Fixed-a-problem-caused-by-inconsistent-verification-.patch;https://jira.spring.io/secure/attachment/19471/0001-Fixed-a-problem-caused-by-inconsistent-verification-.patch,06/Mar/12 11:25 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19480/mylyn-context.zip,,,,,,,,,,,,224640000,,,,,2012-02-01 06:39:34.354,29116,true,tmarshall(tmarshall),,,,0|i03j33:,20634,17730,,,,,,01/Feb/12 6:39 AM;olivergierke;Would you mind checking this against current 1.0.x and 1.1.M1 snapshot builds. We've fixed quite a few issues in {{QueryMapper}} and I think I've seen some similar scenario in one of the other tickets.,"19/Feb/12 8:38 PM;kungfuters;I can confirm this is failing on 1.0.1 GA. My query also involves an $in. Fails here:

{code}
List<Person> personList = mongoTemplate.find(
	Query.query(Criteria.where(""invitations.email"").in(emails)
		.and(""invitations.accepted"").is(false)), Person.class);
{code}

Works on 1.0.0.RC1 but not either 1.0.0.RELEASE or 1.0.1.RELEASE.

Offending line in 1.0.1.RELEASE is line 302:

{code:title=MappingMongoConverter.java}
writeCollectionInternal((Collection<?>) obj, ClassTypeInformation.LIST, (BasicDBList) dbo);
{code}

Looks like dbo is a BasicDBObject, and it's trying to cast to BasicDBList. Btw, the dbo looks like this if it helps any:

{code}
{ ""_class"" : ""java.util.HashSet""}
{code}","19/Feb/12 8:52 PM;kungfuters;Ok, I just figured out the problem. It's only when you use a Set as your collection. Look at convertToMongoType() at line 816 of MappingMongoConverter. There is no case for dealing with a Set. In my case, my emails param was a Set of Strings. I changed it to a List of Strings, and everything works fine now.",05/Mar/12 1:56 AM;abisceanu;Instead of checking if the obj is a List i changed so it checks if the obj is an Iterable in agreement with  maybeConvertList which accepts an Iterable as parameter.,06/Mar/12 11:25 PM;olivergierke;Applied patch in 1.1.x and 1.0.x branch. Deployed snapshots.,"26/Mar/12 1:08 PM;harlanji;Sorry I couldn't get back in a more timely fashion. I can confirm that the fix works in 1.0.2.BUILD-SNAPSHOT. Also, for completeness, changing the Set in my in() call to a List also works in 1.1.0.RELEASE:

{code}
Set<String> fbUserIds = ...;
Query query = new Query(where(PERSON_FB_USER_ID).in(fbUserIds));
// to
Query query = new Query(where(PERSON_FB_USER_ID).in(new ArrayList<String>(fbUserIds)));
{code}

Thanks again!","26/Mar/12 1:08 PM;harlanji;oops, meant 1.0.1.RELEASE",,,,,,,,,,,,,,,,,
Custom Converter not used when doing $set updates,DATAMONGO-374,41686,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Cannot Reproduce,olivergierke,moonblade.wolf@gmail.com,moonblade.wolf@gmail.com,09/Jan/12 6:34 PM,15/Jul/13 3:42 AM,10/May/19 2:36 AM,10/Aug/12 1:12 AM,1.0 GA,,,,,,,,,,,,Core,Mapping / Conversion,,,0,mongodb,,,,,,,"Short summaries before the simple examples :

- Inserting new documents is OK, in the meaning that it uses my custom converter
- Updating an existing document is not OK, in the meaning that it doesnt use my custom converter

Here's my class that has the it's own converter

{code:java}
public class MyClass extends MyInterface<String> ...
{code}

Here are the the converters :
{code:java}
public class MyClassWriteConverter implements Converter<MyClass, DBObject> {
    @Override
    public DBObject convert(MyClass myClass) {
    	System.out.println(""MyClass WRITE CONVERTER !"");
    	DBObject dbo = new BasicDBObject();
    	dbo.put(""title"", myClass.getTitle());
    	dbo.put(""value"", myClass.getValue());
    	System.out.println(""value : "" + myClass.getValue());
    	System.out.println(""class : "" + myClass.getClass().getCanonicalName());
    	dbo.put(""_class"", myClass.getClass().getCanonicalName());
    	return dbo;
    }
}

public class MyClassElementReadConverter implements Converter<DBObject, MyClass> {
    @Override
    public MyClass convert(DBObject dbObject) {
    	String value = (String) dbObject.get(""value"");
    	String title = (String) dbObject.get(""title"");
    	return new MyClass(title, value);
    }
}
{code}
    
{code:xml}
<mongo:converter>
  <bean class=""kam.albert.MyClassElementReadConverter"" />
</mongo:converter>
<mongo:converter>
  <bean class=""kam.albert.MyClassElementWriteConverter"" />
</mongo:converter>
{code}

myDomain has a {{List<MyClass<?>> myClasses}}, 
and this works fine, as the custom converter is being used :

{code:java}
this.ops.save(myDomain, ""myCollection"");
{code}

Which can be seen from the debugging output :

{noformat}
MyClass ELEMENT WRITE CONVERTER !
value : my value
class : kam.albert.MyClass
{noformat}

And has the result from my {{db.myCollection.find().pretty();}} :

{code:javascript}
{myClasses : [
   {""title"" : ""my title"",
    ""value"" : ""my value"",
    ""_class"" : ""kam.albert.MyClass""}
   ]
}
{code}

All is still OK with the insert operation. But when i make {{$set}} update to an existing document like this :

{code:java}
this.ops.updateFirst(
   this.idCriteria(myClass),
   new Update()
       // set the content node
       .set(dotNotation, myClass),
       ""myCollection""
   );
{code}

The debugging output stays the same :

{code}
MyClass ELEMENT WRITE CONVERTER !
value : my value
class : kam.albert.MyClass
(edited for clarity, the other properties omitted)
DEBUG [mongodb.core.MongoTemplate]: calling update using query: { ""_id"" : ""81d3292e-fd75-410d-a1f9-b109b6d76194""} and update: { ""$set"" : { ""myClasses"" : [ { ""title"" : ""my title"" , ""value"" : ""my value""}]}] } in collection: myCollection
{code}

But the result is like without using the custom converter, without the {{_class}} attribute :
{code:javascript}
{myClasses : [
    {""title"" : ""my title"",
     ""value"" : ""my value"",
    }
]}
{code}

My current conclusions are :

 - For inserting a new document, the custom converter works fine
 - For updating though, although the custom converter seems to be called (the debugging output is there), but it seems to be using
   the default {{MappingMongoConverter}} to do the real update.

Basically, i just want my custom converter to be used in {{$set}} updates ..

Thank you !","Windows 7
Eclipse Indigo
Java 7

[INFO] +- org.springframework.data:spring-data-mongodb:jar:1.0.0.RC1:compile
[INFO] | +- org.springframework:spring-beans:jar:3.1.0.RELEASE:compile
[INFO] | +- org.springframework:spring-expression:jar:3.1.0.RELEASE:compile
[INFO] | +- org.springframework.data:spring-data-commons-core:jar:1.2.0.RC1:compile
[INFO] | | \- org.springframework:spring-tx:jar:3.1.0.RELEASE:compile
[INFO] | \- org.mongodb:mongo-java-driver:jar:2.7.1:compile",;01/Feb/12 2:29 AM;olivergierke;2040,,,,,,,,,0,2040,,,0,2040,,,,,,,,,,,,,,,,,,,,,,,,,,,183513600,,,,,2012-02-01 02:31:58.63,29019,true,tmarshall(tmarshall),,,,0|i033wv:,18176,17536,http://forum.springsource.org/showthread.php?120929-Custom-Converter-not-used-when-doing-set-updates,,,,,01/Feb/12 2:31 AM;olivergierke;Please have a look at the just commited [test case|https://github.com/SpringSource/spring-data-mongodb/commit/43501703f82f82340abefe5eeabe07f9a366e8f1] that shows a custom converter being used for updates. I've slightly polished the implementation of {{MongoTemplate.doUpdate(…)}} along the way but the test case was working with the prior implementation as well. However feel free to run your tests against the just deployed snapshot build to verify whether the polishing might have changed behavior for your scenario.,"24/Feb/12 7:50 AM;moonblade.wolf@gmail.com;I feel really bad for not making a simple example to test this situation i had. Now the sources have changed so much that i am now having difficulties to reproduce the problem. I am currently sticking as much as possible to the default mongoMapping without providing my own converters. Hopefuly i can give feedback in the future. 

Thanks a lot for the help !",10/Aug/12 1:12 AM;olivergierke;Closing due to inactivity.,21/May/13 3:34 PM;nsudan;I am seeing this problem in spring data 1.2.1.RELEASE. Looks like the link to the above test case is broken. Could you please re-post this link? Thanks a lot in advance!!!,15/Jul/13 3:42 AM;moonblade.wolf@gmail.com;This seems to be related with This seems to be related to https://jira.springsource.org/browse/DATAMONGO-724,,,,,,,,,,,,,,,,,,,
Upgrade to latest Querydsl,DATAMONGO-350,41316,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,14/Dec/11 12:03 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,21/Dec/11 11:38 PM,1.0 RC1,,,,,,,1.0 GA,,,,,Core,,,,0,,,,,,,,"Seems the APT API has changes slightly:

{code:java}
@SupportedAnnotationTypes({""com.mysema.query.annotations.*""})
public class QuerydslAnnotationProcessor extends AbstractQuerydslProcessor{
    
    @Override
    protected Configuration createConfiguration(RoundEnvironment roundEnv) {
        Class<? extends Annotation> entities = QueryEntities.class;
        Class<? extends Annotation> entity = QueryEntity.class;
        Class<? extends Annotation> superType = QuerySupertype.class;
        Class<? extends Annotation> embeddable = QueryEmbeddable.class;
        Class<? extends Annotation> embedded = QueryEmbedded.class;
        Class<? extends Annotation> skip = QueryTransient.class;
        
        return new DefaultConfiguration(
                roundEnv, processingEnv.getOptions(), Collections.<String>emptySet(), entities, entity, superType, embeddable, embedded, skip);
    }
}
{code}",,;21/Dec/11 11:38 PM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,DATACMNS-112,,,,,,,,,,,,21/Dec/11 11:38 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19240/mylyn-context.zip,,,,,,,,,,,,,233539200,,,,,,28648,false,tmarshall(tmarshall),,,,0|i02u67:,16597,15616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MongoTemplate.remove(Object arg) not working,DATAMONGO-346,41228,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Critical,Fixed,olivergierke,eldariof,eldariof,10/Dec/11 4:44 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,14/Dec/11 11:32 AM,1.0 M5,,,,,,,1.0 GA,,,,,Core,,,,0,,,,,,,,Method remove(Object arg) in org.springframework.data.mongodb.core.MongoOperations not working in spring-data-mongodb older 1.0.0.M4.,Linux calculate 2.6.39-pf4 #15 SMP PREEMPT Sat Nov 5 18:14:51 GST 2011 x86_64 Intel(R) Core(TM) i3 CPU M 330 @ 2.13GHz GenuineIntel GNU/Linux,;14/Dec/11 11:31 AM;olivergierke;3000,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,14/Dec/11 11:32 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19220/mylyn-context.zip,,,,,,,,,,,,,233539200,,,,,2011-12-12 07:29:47.752,28557,false,tmarshall(tmarshall),,,,0|i02sxz:,16398,15471,,,,,,"12/Dec/11 7:29 AM;olivergierke;What exactly means ""not working""? Have you tried with a more recent version such as the just released 1.0.RC1?","12/Dec/11 10:01 AM;eldariof;I can not delete the entity from the database via a method remove(Object arg). In the release 1.0.RC1, the method also does not remove.","14/Dec/11 11:32 AM;olivergierke;Thanks for the in-depth analysis. That made fixing the bug much easier. Deployed the fix to snapshot repo, feel free to give it a try!",,,,,,,,,,,,,,,,,,,,,
ServerAddressPropertyEditor disables default Spring conversion,DATAMONGO-343,41201,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Critical,Fixed,olivergierke,dart0,dart0,08/Dec/11 4:04 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,12/Dec/11 9:05 AM,1.0 RC1,,,,,,,1.0 GA,,,,,Core,,,,0,,,,,,,,"After upgrading to 1.0 RC1, we are getting the following error on an unrelated bean

{code}
java.lang.IllegalArgumentException: Cannot convert value of type [java.util.HashMap$Values] to required type [java.util.List]: PropertyEditor [org.springframework.data.mongodb.config.ServerAddressPropertyEditor] returned inappropriate value
{code}

The exception is thrown on a bean that has @Autowired List constructor argument where the values of the List are collected from the Spring context. (Basically, we want to inject all beans of given type). This bean has nothing to do with Mongo but when the ServerAddressPropertyEditor is defined, it's used for all conversions to java.util.List. It is not correct.",,;12/Dec/11 9:04 AM;olivergierke;3780,,,,,,,,0,0,3780,"9,223,372,036,854,775,807%",0,0,3780,,,,,,,,,,,,,,12/Dec/11 9:06 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19210/mylyn-context.zip,,,,,,,,,,,,,233712000,,,,,2011-12-12 09:05:58.647,28530,false,tmarshall(tmarshall),,,,0|i02rz3:,16241,15320,,,,,,12/Dec/11 9:05 AM;olivergierke;We're using {{ServerAddress[]}} instead of {{List}} in {{MongoFactoryBean}} now and thus can register the {{PropertyEditor}} on the array type instead of {{List}}. This should avoid the unwanted side effects. Deployed the fix to the snapshot repo so feel free to give it a try.,,,,,,,,,,,,,,,,,,,,,,,
Release 1.0.0.RC1,DATAMONGO-340,41182,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,06/Dec/11 3:38 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,06/Dec/11 4:37 PM,,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,,,;06/Dec/11 4:37 PM;olivergierke;5400,,,,,,,,,,5400,,,,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,234230400,,,,,,28511,false,tmarshall(tmarshall),,,,0|i02r1b:,16089,15195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""nin"" and ""all"" methods on Criteria should take a collection like the ""in"" method.",DATAMONGO-337,41158,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,blakgeek,blakgeek,04/Dec/11 6:58 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,06/Dec/11 10:58 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,"Criteria's in method takes both variable arguments as well as a collection.  However, the nin and all methods only accept variable arguments which makes them less useful when for things like finding a list lost values and then using them in a query.",,;06/Dec/11 10:57 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,06/Dec/11 10:58 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19200/mylyn-context.zip,,,,,,,,,,,,,234403200,,,,,,28487,true,tmarshall(tmarshall),,,,0|i02p7j:,15793,14970,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document classpath scanning for Converters,DATAMONGO-330,41120,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,30/Nov/11 6:36 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,20/Dec/11 9:24 AM,,,,,,,,1.0 GA,,,,,Documentation,,,,0,,,,,,,,,,;20/Dec/11 9:23 AM;olivergierke;1500,,,,,,,,,0,1500,,,0,1500,,,,,,,,,,,,,,20/Dec/11 9:24 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19233/mylyn-context.zip,,,,,,,,,,,,,234748800,,,,,,28449,false,tmarshall(tmarshall),,,,0|i02mzb:,15432,14662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Map value not converted correctly,DATAMONGO-329,41112,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,30/Nov/11 12:50 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,30/Nov/11 7:24 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Mapping / Conversion,,,,0,,,,,,,,"{code:java}
public class A<T> implements Serializable {

	private String valueType;
	private T value;

	public A(T value) {
		this.valueType = value.getClass().getName();
		this.value = value;
	}
}
{code}

{code:java}
Map<String, A<String>> objectToSave = new HashMap<String, A<String>>();
objectToSave.put(""test"", new A<String>(""testValue""));

A<Map<String, A<String>>> a = new A<Map<String, A<String>>>(objectToSave);
DBObject result = new BasicDBObject();

converter.write(a, result);
{code}

{code:javascript}
{ ""_id"" : ObjectId(""4ebbae36d0ab5ef4ac6b0533""), 
  ""_class"" : ""foo.bar.A"", 
  ""valueType"" : ""java.util.HashMap"", 
  ""value"" : { ""_class"" : ""java.util.HashMap"", 
              ""threshold"" : 12, 
              ""loadFactor"" : 0.75 } 
}
{code}
",,;30/Nov/11 7:23 AM;olivergierke;2400,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,30/Nov/11 7:24 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19153/mylyn-context.zip,,,,,,,,,,,,,234835200,,,,,,28441,false,tmarshall(tmarshall),,,,0|i02mwv:,15421,14653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enums can't be used in Criteria,DATAMONGO-326,41061,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,fenrir,fenrir,26/Nov/11 3:39 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,19/Dec/11 5:52 AM,1.0 M5,,,,,,,1.0 GA,,,,,,,,,0,,,,,,,,"This will give json object serialization error message:
{code}
Criteria criteria = where(""_id"").is(email).and(""status"").is(Status.INACTIVE);
{code}

To make the criteria work, I have to use the name() method of the enum:
{code}
Criteria criteria = where(""_id"").is(email).and(""status"").is(Status.INACTIVE.name());
{code}

Thanks,

Donny",,;30/Nov/11 9:07 AM;olivergierke;3000,;19/Dec/11 5:52 AM;olivergierke;2400,,,,,,,0,0,5400,"9,223,372,036,854,775,807%",0,0,5400,,,,,,,,,,,,,,30/Nov/11 9:07 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19154/mylyn-context.zip,,,,,,,,,,,,,233280000,,,,,,28389,true,tmarshall(tmarshall),,,,0|i02lyf:,15266,14505,,,,,,"17/Dec/11 3:52 AM;fenrir;Hi Oliver,

I just found that the ne(), in(), and nin() doesn't work with Enums.

Thanks!!

Donny",,,,,,,,,,,,,,,,,,,,,,,
MongoTemplate fails to correctly report a js file not found on classpath while calling mapReduce,DATAMONGO-325,40986,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,samarth,samarth,20/Nov/11 7:18 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,30/Nov/11 2:03 PM,1.0 M5,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,"Consider the follwoing code snippet:

{code}
String mapFunction = ""classpath:js/map.js"";
String reduceFunction = ""classpath:js/reduce.js"";
MapReduceOptions mapReduceOptions = new MapReduceOptions();
mapReduceOptions.outputCollection(""outColl"");

MapReduceResults<MRResult> results =mongo.mapReduce(""myColl"", mapFunction, reduceFunction, mapReduceOptions, MRResult.class);
{code}
If {{map.js}} or {{reduce.js}} are not found on the classpath, function replaceWithResourceIfNecessary silently ignores this and considers the string {{classpath:map.js}} as the map function. Following debug statement is printed which is not very helpful and does not create any suspicion.

{code}
2011-11-21 08:20:27,906 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate - Executing MapReduce on collection [myColl], mapFunction [classpath:map.js], reduceFunction [classpath:reduce.js]
{code}

This leads to the following error which is also not helpful in debugging:

{code}
2011-11-21 08:20:27,926 [main] WARN  org.springframework.data.mongodb.core.MongoTemplate - Command execution of { ""mapreduce"" : ""myColl"" , ""map"" : ""classpath:map.js"" , ""reduce"" : ""classpath:reduce.js"" , ""verbose"" : true , ""out"" : { ""replace"" : ""outColl""}} failed: db assertion failure
{code}

Error description on the mongod log is also useless:

{code}
Mon Nov 21 08:20:27 [conn9] JS Error: SyntaxError: missing ; before statement nofile_a:0
Mon Nov 21 08:20:27 [conn9] mr failed, removing collection :: caused by :: 13598 couldn't compile code for: _map
{code}

So, it becomes really hard to debug that the real problem is missing js file on the classpath.

Catching and ignoring exception in method protected String replaceWithResourceIfNecessary(String function) is a bad thing to do.

{code}
…
} catch (Exception e) {
	// ignore - could be embedded JavaScript text
}
{code}
",,;30/Nov/11 2:02 PM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,30/Nov/11 2:03 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19157/mylyn-context.zip,,,,,,,,,,,,,235612800,,,,,,28314,true,tmarshall(tmarshall),,,,0|i02kan:,14997,14295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for JSON in mongo template,DATAMONGO-324,40977,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,dart0,dart0,19/Nov/11 6:01 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,24/Nov/11 4:43 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Mapping / Conversion,,,,0,,,,,,,,"We are happily using Spring Data with MongoDB. It's great, but we have one problem. Our use-case is a bit different than the common one. We have our own Object/JSON mapping tools so we want to use everything from Spring Data except the mapping. Unfortunately it's almost impossible to use MongoTemplate without Spring Data provided Object/JSON mapping. Would it be possible to change the template in a way that would allow us to send/retreive JSON (or BSON) directly?
",,;24/Nov/11 4:04 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,24/Nov/11 4:08 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19138/mylyn-context.zip,,,,,,,,,,,,,235267200,,,,,2011-11-24 03:39:15.913,28305,false,tmarshall(tmarshall),,,,0|i02j2v:,14800,14105,http://forum.springsource.org/showthread.php?114838-Leightweight-MongoDB-support&p=380340&highlight=#post380340,,,,,24/Nov/11 3:39 AM;olivergierke;I don't think we have to alter the template actually as we should be able to handle this inside the {{MappingMongoConverter}} directly. Currently we don't handle {{DBObject}} instances explicitly as we could shortcut reading and writing by simply returning the given instance or the one just read. ,"24/Nov/11 4:08 AM;olivergierke;I've just added some test cases and they show writing of {{DBObject}} instances working. I've added a tiny shortcut to allow {{DBObject.class}} be piped into the {{read(…)}} method of {{MappingMongoConverter}} as well. Thus you should be able to do the following:

{code}
DBObject value = new BasicDBObject();
// … fill DBObject

template.save(value, ""mycollection"");

List<DBObject> result = template.findAll(DBObject.class, ""mycollection"");
{code}

Dies that satisfy your needs?","24/Nov/11 4:34 AM;dart0;Great, that's all I need. Thanks","24/Nov/11 4:43 AM;olivergierke;Great to hear this works for you. I'll be closing this as fixed for the next release. Feel free to re-open the ticket until we actually do the release or open an new one, once we released RC1.",,,,,,,,,,,,,,,,,,,,
"Throw exception in a save operation if the POJO's ID field is null and field type is not String, BigInteger or ObjectId.",DATAMONGO-322,40947,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,drypot,drypot,17/Nov/11 1:56 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,06/Dec/11 10:44 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Mapping / Conversion,,,,0,,,,,,,,findById with int type id returns null.,,;06/Dec/11 10:43 AM;olivergierke;3780,,,,,,,,,0,3780,,,0,3780,,,,,,,,DATAMONGO-321,,,,,,06/Dec/11 10:44 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19199/mylyn-context.zip,,,,,,,,,,,,,235872000,,,,,2011-11-17 09:05:55.755,28273,true,tmarshall(tmarshall),,,,0|i02ecv:,14035,13347,http://forum.springsource.org/showthread.php?117707-findById-returns-null,,,,,"17/Nov/11 9:05 AM;mark.pollack;Posted reply in forum.  To avoid misunderstanding around what conventions are supported with data types and automatically generated IDs, an exception will be thrown during a save operation if the POJO's ID field is null and is not a String, BigInteger or ObjectId type.  ",17/Nov/11 5:26 PM;drypot;Posted reply in forum.,,,,,,,,,,,,,,,,,,,,,,
Cannot retrieve persisted Enum implementing an abstract method,DATAMONGO-312,40791,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,torakiki,torakiki,06/Nov/11 9:34 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/Nov/11 3:04 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Core,,,,0,enum,override,,,,,,"I have the following sample model with enum values implementing an abstract method:
{code:title=Entity.java}
@Document
public class Entity {
    private String id;
    private ImAnEnum testEnums = ImAnEnum.ONE;

    public String getId() {
        return id;
    }
}
{code}

{code:title=ImAnEnum.java}
@Document
public enum ImAnEnum {
    ONE {
        @Override
        boolean somethingToDo() {
            return false;
        }
    },
    TWO {
        @Override
        boolean somethingToDo() {
            return false;
        }
    },
    THREE {
        @Override
        boolean somethingToDo() {
            return true;
        }
    };

    abstract boolean somethingToDo();
}
{code}

When I save the entity the document looks like:
{code:title=db document}
{
	""_id"" : ObjectId(""4eb6bf6ef5981c320579e48b""),
	""_class"" : ""com.sejda.persistence.MongoTestEnum$Entity"",
	""testEnums"" : {
		""_class"" : ""com.sejda.persistence.MongoTestEnum$ImAnEnum$1"",
		""name"" : ""ONE"",
		""ordinal"" : 0
	}
}
{code}

and when I run: 
{code}
 Entity foundEntity = mongoOps.findById(entity.getId(), Entity.class);
{code}

I get the following exception:
{code}
org.springframework.data.mapping.model.MappingInstantiationException: Could not instantiate bean class [com.sejda.persistence.MongoTestEnum$ImAnEnum$1]: Illegal arguments for constructor; nested exception is java.lang.IllegalArgumentException: Cannot reflectively create enum objects
	at org.springframework.data.mapping.model.BeanWrapper.<init>(BeanWrapper.java:122)
	at org.springframework.data.mapping.model.BeanWrapper.create(BeanWrapper.java:73)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:255)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:203)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:762)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:268)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:258)
	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:173)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:258)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:203)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:171)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:77)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1505)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:1237)
	at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:1081)
	at org.springframework.data.mongodb.core.MongoTemplate.findById(MongoTemplate.java:478)
	at org.springframework.data.mongodb.core.MongoTemplate.findById(MongoTemplate.java:471)
	at com.sejda.persistence.MongoTestEnum.testInsertAndRetrieve(MongoTestEnum.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [com.sejda.persistence.MongoTestEnum$ImAnEnum$1]: Illegal arguments for constructor; nested exception is java.lang.IllegalArgumentException: Cannot reflectively create enum objects
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:137)
	at org.springframework.data.mapping.model.BeanWrapper.<init>(BeanWrapper.java:120)
	... 45 more
Caused by: java.lang.IllegalArgumentException: Cannot reflectively create enum objects
	at java.lang.reflect.Constructor.newInstance(Constructor.java:511)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:126)
	... 46 more


{code}
",Mongo v2.0.1,;23/Nov/11 3:01 AM;olivergierke;2400,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,23/Nov/11 3:05 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19132/mylyn-context.zip,,,,,,,,,,,,,235353600,,,,,2011-11-23 03:04:54.159,28018,false,tmarshall(tmarshall),,,,0|i00kxr:,3437,4827,,,,,,23/Nov/11 3:04 AM;olivergierke;It seems we're stumbling over the fact that a {{Class}} retrieved by (in your case) {{IAmAnEnum.ONE.getClass()}} does not return {{true}} for a call of {{….isEnum()}}. That fact is breaking complex enum handling in a variety of places (see DATACMNS-99). I've fixed both the bug in SD Commons as well as in the {{MappingMongoConverter}} by rather using {{Enum.class.isAssignableFrom(…)}}. Will be available in tonight's snapshot.,,,,,,,,,,,,,,,,,,,,,,,
Allow Collections as parameters in @Query,DATAMONGO-310,40672,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,idrism,idrism,02/Nov/11 10:16 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/Nov/11 4:18 AM,,,,,,,,1.0 RC1,,,,,Repository,,,,1,,,,,,,,"When using the {{@Query}} annotation in a Repository, I'd like to do something like this:
{code}
@Query(value='{ ""tags"": { ""$in"": ?0 } }', fields='{""name"":true, ""slug"":true}')
List<MyObject> findByTags(List<String> tags)
{code}

Currently, it tries to run this query:
{code}
{ ""name"": { ""$in"": [buckets, button, carousel, freebar, header_editor, image, text, text_image, title] } }
{code}
which obviously fails because the strings are not quoted.

I believe this could be easily fixed by adding some code in [{{StringBasedMongoQuery.getParameterWithIndex}}|https://github.com/SpringSource/spring-data-document/blob/bf7c9663cf7d3ecfa353238247af8dc6c6d00d58/spring-data-mongodb/src/main/java/org/springframework/data/mongodb/repository/query/StringBasedMongoQuery.java#L99] to properly handle Collections (specifically Collections of Strings)",,;23/Nov/11 4:16 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,23/Nov/11 4:18 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19135/mylyn-context.zip,,,,,,,,,,,,,235353600,,,,,2011-11-23 04:18:45.922,27981,false,tmarshall(tmarshall),,,,0|i00mo7:,3718,5104,,,,,,23/Nov/11 4:18 AM;olivergierke;Good catch! Fixed this by letting {{MappingMongoConverter.convertToMongoType(…)}} convert the collection or map into a {{BasicDBList}} or {{BasicDBObject}} as well. This results in a MongoDB-safe {{toString()}} representation being created so that we don't have to deal with corner cases explicitly. Fix will be available in tonight's snapshot.,,,,,,,,,,,,,,,,,,,,,,,
Remove synchronized(this) from sort() and fields() methods in the Query class,DATAMONGO-305,40584,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,johannz,johannz,26/Oct/11 2:15 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,23/Nov/11 3:50 AM,1.0 M5,,,,,,,1.0 RC1,,,,,Core,,,,0,mongodb,query,,,,,,"In the {{org.springframework.data.mongodb.core.query.Query}} class, the {{sort()}} and {{fields()}} methods are synchronizing on {{this}}, before initializing and returning the sort and fields attributes.

But in {{addCriteria()}}, it is making unsynchronized access to a {{LinkedHashMap}} to store the criteria in. Because of this, it seems like this class is not intended to be thread-safe.

Using synchronized in a class that is not thread-safe can cause a performance bottleneck, and should be removed.",,;23/Nov/11 3:50 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,23/Nov/11 3:50 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19134/mylyn-context.zip,,,,,,,,,,,,,237772800,,,,,,27892,true,tmarshall(tmarshall),,,,0|i00wg7:,5302,6596,http://forum.springsource.org/showthread.php?116411-Mongo-Query-object-why-are-sort()-amp-fields()-synchronized,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change package name for Class MongoLog4jAppender,DATAMONGO-304,40563,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,thomas.risberg,thomas.risberg,24/Oct/11 1:09 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/Nov/11 2:19 AM,,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,Change package name for {{org.springframework.data.document.mongodb.log4j.MongoLog4jAppender}} - remove the document part  ,,;23/Nov/11 2:15 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,237945600,,,,,,27871,false,tmarshall(tmarshall),,,,0|i00ws7:,5356,6650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow converters to be included through scanning,DATAMONGO-301,40534,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Trivial,Fixed,olivergierke,fenrir,fenrir,20/Oct/11 11:47 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,30/Nov/11 6:37 AM,1.0 M4,,,,,,,1.0 RC1,,,,,Core,,,,1,,,,,,,,"MongoDB should be able to find converters through scanning.
Maybe something like {{<mongo:custom-converters include=""classpath*:com/myapp/*Converter"" />}} or {{<mongo:custom-converters package=""com.myapp"" suffix=""Converter"" />}}.",,;30/Nov/11 6:33 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,30/Nov/11 6:37 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19152/mylyn-context.zip,,,,,,,,,,,,,234748800,,,,,2011-11-30 06:37:37.894,27806,true,tmarshall(tmarshall),,,,0|i028fb:,13074,12836,,,,,,30/Nov/11 6:37 AM;olivergierke;Fixed. You can now use a {{base-package}} attribute at the {{custom-conversions}} element. The resulting classpath scanning will pick up implementations of {{Converter}} and {{GenericConverter}} that are declared as Spring beans (read: annotated with {{@Component}} either directly or transitively). I created DATAMONGO-330 a follow-up ticket to capture in detail update of the reference documentation.,30/Nov/11 6:57 PM;fenrir;Thanks a ton!! I'm going to try it.,,,,,,,,,,,,,,,,,,,,,,
Spring custom converters do not work for subclasses of java.lang.Number,DATAMONGO-298,40310,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,bkalali,bkalali,14/Oct/11 4:45 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,12/Dec/11 6:17 AM,1.0 M4,,,,,,,1.0 RC1,,,,,Mapping / Conversion,,,,0,conversion,,,,,,,"The detail description can be found in here
http://forum.springsource.org/showthread.php?115419-Custom-convertor-from-a-non-primitive-class-to-Integer",Spring Data Mongo DB 1.0.0 M4,;24/Nov/11 6:25 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,24/Nov/11 6:28 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19141/mylyn-context.zip,,,,,,,,,,,,,233280000,,,,,2011-11-11 11:28:36.923,27819,true,tmarshall(tmarshall),,,,0|i01mkf:,9533,9570,,,,,,"21/Oct/11 3:06 PM;bkalali;It seemed that this is not a bug. However, for our use cases where we needed to convert three different types to Integer as follows, we need to change our converters using Number instead of Integer
Boolean<-->Integer
UnixTime<-->Integer
Enums<-->Integer

The Number in the MONGO_TYPES seemed that covers all underlying sub types for our use cases.
Changing Integer to Number in all converters has resolved our issues.

It would be nice this issue to be mentioned in the Reference Documentation. Also, I think it will be helpful if the list all of the wrapper classes (e.g. Integer etc..) that are of subclass of Number to be added to the MONGO_TYPES list of CustomConversions instead of Number. In this case, if someone wrote converters based on Integer, then they would not have had any issues.","11/Nov/11 11:28 AM;mark.pollack;Thanks for creating this ticket.  It seems we need to explicitly list the subclasses of number or do some more sophisticated checking of subclasses for the classes listed in MONGO_TYPES in CustomConversions's method isMongoBasicType
","17/Nov/11 7:55 PM;bkalali;As I am fan of simple solution, I think if the the subclasses of Number along with Number itself are listed in MONGO_TYPES, then the issue will be resolved. I think it will be safe to keep the Number in the list to avoid breaking codes with converters that are already written using Number.","24/Nov/11 6:28 AM;olivergierke;I've polished the implementation inside {{CustomConversions}} to rather use MongoSimpleTypes.Holder.isSimpleType(…) instead of checking against yet another type list. This {{SimpleTypeHolder}} instance represents the core types, MongoDB can handle and thus we have a valid check for target or source types. I've added {{DBObject}} as Mongo-primitive type as well. Also see DATACMNS-100 for a small fix I had to make to get this working.","08/Dec/11 2:34 PM;bkalali;I tried this fix and and auto scanning of converters using @Component. I ran into some issues. We have so many legacy enums that we need to be bale to convert them to integers. Almost all of these types of conversions are failed which used to work fine in M5 with Number usage.

Here is a sample stack trace which happens during write. It seems that the issue is rooted from Mongo driver 2.7.1.     

java.lang.IllegalArgumentException: can't serialize class com.common.domain.enums.StorageType
	at org.bson.BasicBSONEncoder._putObjectField(BasicBSONEncoder.java:234)
	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:140)
	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:86)
	at com.mongodb.DefaultDBEncoder.writeObject(DefaultDBEncoder.java:27)
	at com.mongodb.OutMessage.putObject(OutMessage.java:142)
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:252)h
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:211)
	at com.mongodb.DBCollection.insert(DBCollection.java:57)
	at com.mongodb.DBCollection.insert(DBCollection.java:87)
	at com.mongodb.DBCollection.save(DBCollection.java:716)
	at org.springframework.data.mongodb.core.MongoTemplate$11.doInCollection(MongoTemplate.java:774)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:368)
	at org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:766)
	at org.springframework.data.mongodb.core.MongoTemplate.doSave(MongoTemplate.java:702)
	at org.springframework.data.mongodb.core.MongoTemplate.save(MongoTemplate.java:692)
	at org.springframework.data.mongodb.core.MongoTemplate.save(MongoTemplate.java:688)
	at com.firescope.edge.repository.service.CredentialRepositoryService.save(CredentialRepositoryService.java:37)
	at com.firescope.edge.repository.service.CredentialRepositoryServiceTests.testFindAllSnmpCredentials(CredentialRepositoryServiceTests.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

","09/Dec/11 7:30 AM;bkalali;It seems that converters are still broken, please see my last comment ","12/Dec/11 6:17 AM;olivergierke;Would you mind creating a new ticket containing a sample Converter signature as well as a test case on the {{MappingMongoConverter}} showing what exactly doesn't convert as expected? This ticket here is already contained as fixed in released changelogs, so I'd like to consider remaining bugs as regression (if existing). Feel free to link this one as related. Thanks!",17/Dec/11 10:31 AM;bkalali;This https://jira.springsource.org/browse/DATACMNS-113 has resolved this issue as well.,,,,,,,,,,,,,,,,
Allow MongoTemplate to be configured using MongoURI,DATAMONGO-295,40294,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,kdombeck,kdombeck,12/Oct/11 3:41 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,14/Oct/11 4:48 AM,1.0 M4,,,,,,,1.0 M5,,,,,Core,,,,0,,,,,,,,It would be nice to configure {{MongoTemplate}} and {{SimpleMongoDbFactory}} using a {{MongoURI}}. ,,;14/Oct/11 4:43 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,12/Oct/11 3:41 PM;kdombeck;mongouri_usage.patch;https://jira.spring.io/secure/attachment/19010/mongouri_usage.patch,14/Oct/11 4:48 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19012/mylyn-context.zip,,,,,,,,,,,,238809600,,,,,2011-10-14 04:48:37.214,27829,false,tmarshall(tmarshall),,,,0|i04z8v:,29084,24017,,,,,,"14/Oct/11 4:48 AM;olivergierke;Thanks for the patch! I didn't introduce the {{MongoURI}} reference to {{MongoTemplate}} as we'd like to encourage the usage of the {{MongoDbFactory}} for configuration. I've exposed a {{uri}} attribute to the {{db-factory}} namespace element to allow easy setup like this

{code:xml}
<mongo:db-factory uri=""mongodb://user:password@localhost/database"" />
{code}",,,,,,,,,,,,,,,,,,,,,,,
List elements nested in Map lose their type when persisted,DATAMONGO-294,40298,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,harlanji,harlanji,12/Oct/11 1:06 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,13/Oct/11 9:05 AM,1.0 M4,,,,,,,1.0 M5,,,,,Mapping / Conversion,,,,0,,,,,,,,"Possibly related to DATAMONGO-273, objects in a {{List}} inside of a {{Map}} lose their type and can not be deserialized properly. When I run the attached test, I see this output:

{code:javascript}
{ ""_class"" : ""net.emota.openspacedsr.MongoMapTest$Shipment"" , 
  ""boxes"" : { 
     ""one"" : [ { ""maker"" : ""Boeing"" , ""numberOfPropellers"" : 4} , 
               { ""railLine"" : ""Santa Fe"" , ""numberOfCars"" : 200} , 
               { ""make"" : ""Tesla"" , ""model"" : ""Roadster"" , ""numberOfDoors"" : 2}]
}}
{code}

Where I would expect to see a {{_class}} attribute for each list element, allowing the proper reader conversions and letting the assertions in the test case pass.
",Latest snapshot of 1.0.0.BUILD-SNAPSHOT as of 2011-10-12 / 13:00 PST,;13/Oct/11 9:02 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,12/Oct/11 1:06 PM;harlanji;MongoMapTest.java;https://jira.spring.io/secure/attachment/19011/MongoMapTest.java,13/Oct/11 9:05 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19007/mylyn-context.zip,,,,,,,,,,,,238896000,,,,,2011-10-13 09:05:19.231,27831,true,tmarshall(tmarshall),,,,0|i04z93:,29085,24018,,,,,,"13/Oct/11 9:05 AM;olivergierke;Thanks for your patience, Harlan. I just committed a general overhaul of the type information handling and streamlined collection handling as well. We now don't treat top level collections as entities anymore. Beyond that all DBObjects get type information now in case we don't have {{TypeInformation}} available or in case they are a subtype of the one available from a property e.g. On top of that, the top-level {{DBObject}} create always gets type information applied unless it's a collection.

Just deployed the current state to the snapshot repo so feel free to give it a try.","13/Oct/11 9:46 AM;harlanji;Great. I felt like I must have been testing your patience ;). Thank you for being so responsive on these, I definitely owe you a beer or five if I'm ever in your neck of the woods--feels good to see all my applications' tests passing now :D",,,,,,,,,,,,,,,,,,,,,,
Add support for new polygon based within search in Mongo 2.0.,DATAMONGO-293,40302,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,11/Oct/11 3:21 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,11/Oct/11 3:36 AM,1.0 M4,,,,,,,1.0 M5,,,,,Core,,,,0,,,,,,,,Mongo 2.0 adds the possibility to do {{$within}} queries on a polygon (which is a list of points essentially). We should add that possibility to our query API.,,;11/Oct/11 3:36 AM;olivergierke;7200,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,11/Oct/11 3:36 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19005/mylyn-context.zip,,,,,,,,,,,,,239068800,,,,,,28041,false,tmarshall(tmarshall),,,,0|i00y2n:,5565,6830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Path expressions in repository methods should honour mapping metadata,DATAMONGO-291,40287,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Oct/11 10:16 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,07/Oct/11 3:35 AM,1.0 M4,,,,,,,1.0 M5,,,,,Mapping / Conversion,Repository,,,0,,,,,,,,"Given the following domain class

{code}class User {

  @Field(""foo"")
  private String firstname;
}
{code}

and a repository interface

{code}interface UserRepository extends Repository<User, Long> {

  List<User> findByFirstname(String firstname);
}{code}

a query {{{'firstname' : ?1}}} is created which is of course wrong as the property is mapped to the field {{foo}}. The {{MongoQueryCreator}} does not seem to be aware of the mapping information.",,;07/Oct/11 3:34 AM;olivergierke;14400,,,,,,,,,0,14400,,,0,14400,,DATACMNS-84,,,,,,,,,,,,07/Oct/11 3:35 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19004/mylyn-context.zip,,,,,,,,,,,,,239500800,,,,,,28042,false,tmarshall(tmarshall),,,,0|i00y2v:,5566,6831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MongoDB Repository no query methods for $lte and $gte,DATAMONGO-286,40276,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,ralsa,ralsa,24/Sep/11 9:43 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,27/Sep/11 2:58 AM,1.0 M4,,,,,,,1.0 M5,,,,,Repository,,,,0,,,,,,,,"I try to create a repository method with lessThanOrEqual ($lte). But looks like there is not support for this.


findByAgeGreaterThanEqual   $gte
findByAgeLessThanEqual      $lte","MongoDB 2.0.0, Windows 7 x64, Java 7",;27/Sep/11 2:55 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,DATACMNS-78,,,,,,,,,,,,27/Sep/11 2:58 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18998/mylyn-context.zip,,,,,,,,,,,,,240537600,,,,,,29732,true,tmarshall(tmarshall),,,,0|i04zcv:,29102,24040,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add maxAutoConnectRetryTime for <mongo:db-factory> and  MongoOptionsFactoryBean,DATAMONGO-280,40283,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,thomas.risberg,thomas.risberg,16/Sep/11 10:45 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,27/Sep/11 5:18 AM,1.0 M4,,,,,,,1.0 M5,,,,,Core,,,,0,,,,,,,,"This is a new option, see - http://api.mongodb.org/java/2.6.5/com/mongodb/MongoOptions.html#maxAutoConnectRetryTime",,;27/Sep/11 5:14 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,27/Sep/11 5:18 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19001/mylyn-context.zip,,,,,,,,,,,,,241228800,,,,,,29731,false,tmarshall(tmarshall),,,,0|i04zcn:,29101,24039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueryUtils should be public,DATAMONGO-276,40268,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,14/Sep/11 2:25 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,14/Sep/11 4:42 AM,1.0 M4,,,,,,,1.0 M5,,,,,,,,,0,,,,,,,,The methods in {{QueryUtils}} come in handy for implementing custom repository code so we should make the class public.,,;14/Sep/11 4:34 AM;olivergierke;960,,,,,,,,,0,960,,,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,,241488000,,,,,,28045,false,tmarshall(tmarshall),,,,0|i00y3j:,5569,6834,http://forum.springsource.org/showthread.php?114449-Pageable-and-custom-queries,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DBRef fields and collections are returning nulls,DATAMONGO-275,40290,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Trivial,Fixed,olivergierke,johannz,johannz,09/Sep/11 5:03 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,17/Dec/12 3:19 AM,1.0 M4,,,,,,,1.0 M5,,,,,Mapping / Conversion,,,,3,,,,,,,,"DBRef fields and collections are returning nulls. Tentative troubleshooting: When the {{MongoMappingConverter}} stores {{DBRef}} instances in Mongo, it is storing them as {""$ref"" : ""<class name>"", ""$id"" : ""<string id>"" }. I think it should be storing them as {""$ref"" : ""<class name>"", ""$id"" : ObjectId(""<string id>"") }

When it attempts to load the object back out of the MongoDB, it looks for the id as a {{String}}, not as an {{ObjectId}}, and therefore can not resolve the {{DBRef}}. In the example below, when I attempt to access either {{InClick.ad}} or {{inClick.testAds[whatever]}}, I get {{null}} back.

{code:java}
@Document(collection = ""ads"")
public class Ad {

	@Id
	private String id;
}
{code}

{code:java}
@Document(collection = ""inClicks"")
public class InClick {

	@Id
	private String id;
	private String ip;

	@DBRef
	private Ad ad;
	
	@DBRef
	private List<Ad> testAds;
}
{code}

{code}
> db.ads.find()
{ ""_id"" : ObjectId(""4e6aa4078d4de83dc70a6c16""), ""_class"" : ""com.han.model.Ad"", ""name"" : ""Testing CO"" }
{ ""_id"" : ObjectId(""4e6aa4078d4de83dc70a6c17""), ""_class"" : ""com.han.model.Ad"", ""name"" : ""Testing CO&FL"" }
{ ""_id"" : ObjectId(""4e6aa4078d4de83dc70a6c18""), ""_class"" : ""com.han.model.Ad"", ""name"" : ""Testing CA&FL"" }
> db.inClicks.find()
{ ""_id"" : ObjectId(""4e6aa4078d4de83dc70a6c19""), ""_class"" : ""com.han.model.InClick"", ""ip"" : ""127.0.0.1"", ""ad"" : { ""$ref"" : ""ads"", ""$id"" : ""4e6aa4078d4de83dc70a6c16"" }, ""testAds"" : [
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c16""
        },
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c17""
        },
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c18""
        }
] }
{ ""_id"" : ObjectId(""4e6aa4078d4de83dc70a6c1a""), ""_class"" : ""com.han.model.InClick"", ""ip"" : ""127.0.0.1"", ""ad"" : { ""$ref"" : ""ads"", ""$id"" : ""4e6aa4078d4de83dc70a6c17"" }, ""testAds"" : [
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c16""
        },
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c17""
        },
        {
                ""$ref"" : ""ads"",
                ""$id"" : ""4e6aa4078d4de83dc70a6c18""
        }
] }
{code}
",,;30/Sep/11 3:00 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,30/Sep/11 3:17 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19000/mylyn-context.zip,,,,,,,,,,,,,201657600,,,,,2011-09-10 01:20:35.691,29728,false,tmarshall(tmarshall),,,,0|i04zbr:,29097,24035,http://forum.springsource.org/showthread.php?114421-Lists-with-DBRef-have-size-1-but-get%280%29-returns-null,,,,,"10/Sep/11 1:20 AM;ceefour;I also got hit by this bug.

""When the MongoMappingConverter stores DBRef's in Mongo, it is storing them as {""$ref"" : ""<class name>"", ""$id"" : ""<string id>"" }. I think it should be storing them as {""$ref"" : ""<class name>"", ""$id"" : ObjectId(""<string id>"") }""

The statement above is incorrect.

The right way is store the $id ID as string as described here in the official Mongo spec:

http://www.mongodb.org/display/DOCS/Database+References

using ObjectId(""id"") would result in the following structure:

    {$ref: ""collection"", $id: {$oid: ""id""} }

which is even more incorrect","12/Sep/11 9:07 AM;johannz;I disagree with you. Here is the full text from that section of the reference document

{quote}Syntax for a DBRef reference value is
{code}
{ $ref : <collname>, $id : <idvalue>[, $db : <dbname>] }
{code}
where <collname> is the collection name referenced (without the database name), and <idvalue> is the value of the _id field for the object referenced.{quote}

In the Ad class, We have declared the ID to be of type string, but the MappingMongoConverter is storing it in the Mongo object as ""_id"": ObjectId(<""String id>""). This object id is what should be referenced by the DBRef, not the Java String id.

h2. Workaround/testing
As a workaround/test of this concept, I switched the id of Ad to be of type ObjectId. Now, when the MappingMongoConverter stored the DBRefs, they were stored as { ""$ref"" : ""ads"", ""$id"" : ObjectId(""<Blah Blah>"") }, which was correct. And when it re-instantiated the inClick, it was able to resolve the DBRef correctly.

h2. Analysis
I think the problem is in the MappingMongoConverter, and how it is storing DBRefs. Looking at the code for the createDBRef method, it is not doing any type conversion of the ID that it retrieves from the target object, when it should be.

From the createDBRef method, exception handling removed:
{code}
	Object id = null;
	BeanWrapper<MongoPersistentEntity<Object>, Object> wrapper = BeanWrapper.create(target, conversionService);
	id = wrapper.getProperty(idProperty, Object.class, useFieldAccessOnly);

	String collection = dbref.collection();
	if ("""".equals(collection)) {
		collection = targetEntity.getCollection();
	}

	String dbname = dbref.db();
	DB db = StringUtils.hasText(dbname) ? mongoDbFactory.getDb(dbname) : mongoDbFactory.getDb();
	return new DBRef(db, collection, id);
{code}

h2. Suggested fix
I suspect the line ""id = wrapper.getProperty(idProperty, Object.class, useFieldAccessOnly);"" should be replaced by this code, copied from writeInternal:

{code}
	Object idObj = null;
	Class<?>[] targetClasses = new Class<?>[] { ObjectId.class, String.class, Object.class };
	for (Class<?> targetClass : targetClasses) {
		try {
			idObj = wrapper.getProperty(idProperty, targetClass, useFieldAccessOnly);
			if (null != idObj) {
				break;
			}
		} catch (ConversionException ignored) {
		} catch (IllegalAccessException e) {
			throw new MappingException(e.getMessage(), e);
		} catch (InvocationTargetException e) {
			throw new MappingException(e.getMessage(), e);
		}
	}

	if (null != idObj) {
		dbo.put(""_id"", idObj);
	} else {
		if (!VALID_ID_TYPES.contains(idProperty.getType())) {
			throw new MappingException(""Invalid data type "" + idProperty.getType().getName()
					+ "" for Id property. Should be one of "" + VALID_ID_TYPES);
		}
	}
{code}

","12/Sep/11 9:35 AM;ceefour;Forgive me for the misinformation, I should have read the docs more carefully.

Indeed what Adam has said is correct.","28/Sep/11 1:02 PM;vguna;Hi.

Is there any chance that this will be fixed in the next release?
","11/Dec/12 5:48 PM;jeacott;Hi, I'm seeing exactly this issue with spring-data-mongo 1.1.0.M2
I have a class with an Id declared as String and annotated @Id,
 and I dynamically generate a DBRef field using:
 DBRef myDBRef= new DBRef(mongoTemplate.getDb(), collection, object.getId());

I then store myDBRef in a Map<String,Object>

spring stores the value and I end up with a mongo document looking something like this:

{code}
{
  ""_id"" : ObjectId(""50c7d517f59e68fedf332b90""),
  ""_class"" : ""some.class"",
  ""createdDate"" : ISODate(""2012-12-12T00:51:35.375Z""),
  ""headers"" : {
    ""content"" : [{
        ""$ref"" : ""inventoryItem"",
        ""$id"" : ""50c7d516f59e68fedf332b8e""
      }]
  }
}
{code}

when I retrieve the Object, it contains headers{content=[null]}
I expect it to contain the referenced document. on the plus side, assuming this is a bug and gets fixed, it seems that supporting the option to not fetch/lazy load @DBRefs may not be too painful.

it occurs using MongoRepository
 repository.findOne(id); 
also occurs with a query, or with MongoTemplate directly.

Can anyone suggest a workaround?
thanks.








","17/Dec/12 3:19 AM;olivergierke;Quite a few things to notice:

1. Please don't reopen tickets that have been reported fixed against an already released version. Doing so, you essentially break the changelog. If you see similar issues or apparently related ones, please open a new ticket referring to this one.
2. The current available release version is 1.1.1.RELEASE, so please check whether you see the same problem with the latest release before opening a ticket.
3. If you manually create {{DBRef}} instances you need to take care of the proper id handling yourself of course. {{MappingMongoConverter}} actually does that as you can see in [this line|https://github.com/SpringSource/spring-data-mongodb/blob/master/spring-data-mongodb/src/main/java/org/springframework/data/mongodb/core/convert/MappingMongoConverter.java#L706].",,,,,,,,,,,,,,,,,,
Approach Sonar results to improve code quality,DATAMONGO-270,40275,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Sep/11 10:09 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,14/Sep/11 6:44 AM,1.0 M4,,,,,,,1.0 M5,,,,,Core,,,,0,,,,,,,,See https://sonar.springsource.org/dashboard/index/185.,,;14/Sep/11 6:44 AM;olivergierke;1560,,,,,,,,,0,1560,,,0,1560,,,,,,,,,,,,,,14/Sep/11 6:44 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18996/mylyn-context.zip,,,,,,,,,,,,,242092800,,,,,,28048,false,tmarshall(tmarshall),,,,0|i00y4f:,5573,6838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure Data Document examples work ,DATAMONGO-264,40274,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,06/Sep/11 7:44 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,07/Sep/11 4:47 AM,,,,,,,,1.0 M5,,,,,Core,,,,0,,,,,,,,"Examples are here https://github.com/SpringSource/spring-data-document-examples
",,;07/Sep/11 4:40 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,07/Sep/11 4:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18994/mylyn-context.zip,,,,,,,,,,,,,242092800,,,,,,29734,false,tmarshall(tmarshall),,,,0|i04zdb:,29104,24044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reference documentation for geoNear queries has no stable section id,DATAMONGO-261,40258,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,05/Sep/11 4:10 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,07/Sep/11 4:51 AM,1.0 M4,,,,,,,1.0 M5,,,,,Documentation,,,,0,,,,,,,,,,;07/Sep/11 4:49 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,242179200,,,,,,28049,false,tmarshall(tmarshall),,,,0|i00y4n:,5574,6839,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleMongoDbFactory should handle dots in database names correctly,DATAMONGO-254,40242,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,31/Aug/11 3:17 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,31/Aug/11 4:18 PM,1.0 M3,,,,,,,1.0 M4,,,,,Core,,,,0,,,,,,,,{{SimpleMongoDbFactory}} currently pipes down the given database name to Mongo as is. This is problematic if the database name contains invalid characters like dots and so on. We should throw an exception if an invalid database name is given.,,;31/Aug/11 4:18 PM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,31/Aug/11 4:18 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18992/mylyn-context.zip,,,,,,,,,,,,,242611200,,,,,,28050,false,tmarshall(tmarshall),,,,0|i00y53:,5576,6841,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MongoDB Query and Collection mapping,DATAMONGO-248,40492,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,vhub,vhub,23/Aug/11 2:06 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/Aug/11 4:50 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repository,,,,0,,,,,,,,"
{code}
// domain
@Document(collection=""users"")
public class User {
    @Id
    private ObjectId id;
    private String name;
    private List<Activity> activities;
    ... // other fields of the document
}

public class Student {
    private ObjectId id;
    private String name;
    private List<Activity> activities;
}

public class Activity {
    private String name;
    private ObjectId id;
}

// Repository

public interface StudentRepository extends MongoRepository<User, ObjectId> {
    @Query(value = ""{ 'activities.id' : ?0 }"", fields = ""{'id': 1, 'name':1, 'activities': 1}"")
    public List<Student> findStudentsByActivityId(ObjectId id);
}
{code}

Repository method ""findStudentsById"" above returns empty list.

Debug log shows the following query 
DEBUG: org.springframework.data.mongodb.core.MongoTemplat e - find using query: { ""activities.id"" : { ""$oid"" : ""4e50926a034ab67f11806c62""}} fields: { ""id"" : 1 , ""name"" : 1 , ""activities"" : 1} for class: class com.domain.Student in collection: student

The query is using collection ""student"" which does not exist. 

Since my StudentRepository interface extends MongoRepository<User, ObjectId> , which is being created using ""User"" domain class, I was expecting the query to use ""users"" collection.


What is the correct way to achieve the above query to use users collection and map results to Student domain object.

Note: Query works fine if I annotate @Document(collections=""users"") on Student domain, but this would add mongodb dependency to student domain class which I want to avoid.

Ideally I think spring data should use ""users"" collection rather for the above query, unless over ridden by a Document annotation on the Student domain object.

",,;23/Aug/11 4:47 AM;olivergierke;3420,,,,,,,,,0,3420,,,0,3420,,,,,,,,,,,,,,23/Aug/11 4:58 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18973/mylyn-context.zip,,,,,,,,,,,,,243302400,,,,,2011-08-23 04:50:45.492,29771,false,tmarshall(tmarshall),,,,0|i04zlj:,29141,24081,http://forum.springsource.org/showthread.php?113619-Spring-Data-MongoDB-Query-Result-Mapping&p=376861#post376861,,,,,"23/Aug/11 4:50 AM;olivergierke;Fixed and deployed to snapshot repository.

The reason I think it's weird is that I don't think it's a good idea to do DTO mapping on the repository layer. I'd rather expect only the repository domain type or subtypes of it being returned from repository methods. Generally your scenario seems to be a vote for some external mapping metadata so that you essentially could set up a repository for types not carrying any annotations at all. Feel free to open a ticket if you think this is waht we should be shooting for ;).",,,,,,,,,,,,,,,,,,,,,,,
QueryMapper does not handle BigInteger ids correctly,DATAMONGO-247,40334,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,23/Aug/11 12:26 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,24/Aug/11 7:41 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,,,;24/Aug/11 7:41 AM;olivergierke;3960,,,,,,,,,0,3960,,,0,3960,,,,,,,,,,,,,,24/Aug/11 7:41 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18976/mylyn-context.zip,,,,,,,,,,,,,243388800,,,,,,28052,false,tmarshall(tmarshall),,,,0|i00y5j:,5578,6843,http://forum.springsource.org/showthread.php?112000,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stack overflow when Update.pushAll(push),DATAMONGO-246,40532,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,fred,fred,19/Aug/11 3:09 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,19/Aug/11 12:38 PM,1.0 M3,,,,,,,1.0 M4,,,,,Core,,,,0,,,,,,,,"I'm get StackOverflow exception when try exec this code
{code}
	@Test
	public void assignProviders() {
		DBRef provider1 = new DBRef(mongoTemplate.getDb(), mongoTemplate.getCollectionName(Provider.class), ""1"");
		DBRef provider2 = new DBRef(mongoTemplate.getDb(), mongoTemplate.getCollectionName(Provider.class), ""3"");
		DBRef provider3 = new DBRef(mongoTemplate.getDb(), mongoTemplate.getCollectionName(Provider.class), ""9"");
		DBRef provider4 = new DBRef(mongoTemplate.getDb(), mongoTemplate.getCollectionName(Provider.class), ""2"");
		DBRef provider5 = new DBRef(mongoTemplate.getDb(), mongoTemplate.getCollectionName(Provider.class), ""12"");
		System.out.println(provider1);
		System.out.println(provider2);
		System.out.println(provider3);
		System.out.println(provider4);
		System.out.println(provider5);
	
		DBRef[] provs = new DBRef[] { provider1,provider2,provider3,provider4,provider5};
		mongoTemplate.updateFirst(Query.query(Criteria.where(""id"").is(Long.valueOf(15256L))),new Update().pushAll(""providers"", provs), Terminal.class);				
	}
{code}
i'm get output of right DBRef's:
{code}
{ ""$ref"" : ""provider"", ""$id"" : ""1"" }
{ ""$ref"" : ""provider"", ""$id"" : ""3"" }
{ ""$ref"" : ""provider"", ""$id"" : ""9"" }
{ ""$ref"" : ""provider"", ""$id"" : ""2"" }
{ ""$ref"" : ""provider"", ""$id"" : ""12"" }
{code}

and then this exception:

{code}
java.lang.StackOverflowError
	at java.util.HashMap$EntryIterator.<init>(HashMap.java:832)
	at java.util.HashMap$EntryIterator.<init>(HashMap.java:832)
	at java.util.HashMap.newEntryIterator(HashMap.java:846)
	at java.util.HashMap$EntrySet.iterator(HashMap.java:950)
	at java.util.AbstractMap.hashCode(AbstractMap.java:459)
	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)
	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:339)
	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:29)
	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)
	at org.springframework.data.util.ParameterizedTypeInformation.hashCode(ParameterizedTypeInformation.java:96)
	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)
	at org.springframework.data.util.ParameterizedTypeInformation.hashCode(ParameterizedTypeInformation.java:96)
	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)
	…
{code}

(last two lines repeated indefinitely)",,;19/Aug/11 12:37 PM;olivergierke;10140,,,,,,,,0,0,10140,"9,223,372,036,854,775,807%",0,0,10140,,,,,,,,,,,,,,19/Aug/11 12:38 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18971/mylyn-context.zip,,,,,,,,,,,,,243475200,,,,,2011-08-19 12:38:50.591,29772,true,tmarshall(tmarshall),,,,0|i04zlr:,29142,24082,,,,,,19/Aug/11 12:38 PM;olivergierke;Fixed and deployed to the snapshot repo. The simple type handling set up in {{MongoMappingContext}} didn't consider {{DBRef}} as simple type correctly which caused the type scanning infrastructure to go crazy resolving {{DBRef}} as entity. Feel free to give it a try.,"21/Aug/11 6:53 PM;fred;wow! it's great, thnx a lot for quick fix.",,,,,,,,,,,,,,,,,,,,,,
Unstructured Data does not properly nest Maps,DATAMONGO-245,40509,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,idris,idris,18/Aug/11 2:00 PM,25/Mar/13 10:23 AM,10/May/19 2:36 AM,26/Aug/11 4:51 AM,1.0 M5,,,,,,,,,,,,Core,Mapping / Conversion,,,1,mongodb,spring-data-mongodb,,,,,,"The fix for DATAMONGO-235 got rid of the Exception, but the mapping doesn't actually work properly.  I've created a test below which is now failing. Essentially, Objects within a {{List}} which was in a {{Map}} are mapped to empty {{Object}}s, rather than {{Map}}s. Here's a failing test:

{code}

@Test
public void readsMapListNestedValuesCorrectly() {

	BasicDBList list = new BasicDBList();
	BasicDBObject nested = new BasicDBObject();
	nested.append(""Hello"", ""World"");
	list.add(nested);
	DBObject source = new BasicDBObject(""mapOfObjects"", new BasicDBObject(""Foo"", list));

	ClassWithMapProperty result = converter.read(ClassWithMapProperty.class, source);
	Object firstObjectInFoo = ((List)result.mapOfObjects.get(""Foo"")).get(0);
	assertThat(firstObjectInFoo, is(instanceOf(Map.class)));
	assertThat((String)((Map)firstObjectInFoo).get(""Hello""), is(equalTo(""World"")));
}
{code}",,;19/Aug/11 1:47 PM;olivergierke;3780,;26/Aug/11 4:53 AM;olivergierke;1200,,,,,,,,0,4980,,,0,4980,,,,,,,,,,,,,,26/Aug/11 4:51 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18979/mylyn-context.zip,,,,,,,,,,,,,243043200,,,,,2011-08-19 13:48:49.341,28234,false,tmarshall(tmarshall),,,,0|i02aef:,13394,13130,,,,,,19/Aug/11 1:48 PM;olivergierke;Thanks for your patience ;). I've added some defaulting code that falls back to create plain {{Map}} instances in case we don't find any type information better than {{Object}}. Fix is deployed to the snapshot repository. Feel free to give it a try.,"19/Aug/11 2:19 PM;idris;Wow, that was fast. Thanks!","24/Aug/11 1:41 PM;idris;This worked for the test case in the description, but I have two new test cases (below) that are failing.  These are when the document has an object within an object.  It's throwing a {{NullPointerException}} in {{MappingMongoConverter}}.

{code}
@Test
public void readsMapDoublyNestedValuesCorrectly() {

	BasicDBObject nested = new BasicDBObject();
	BasicDBObject doubly = new BasicDBObject();
	doubly.append(""Hello"", ""World"");
	nested.append(""nested"", doubly);
	DBObject source = new BasicDBObject(""mapOfObjects"", new BasicDBObject(""Foo"", nested));

	ClassWithMapProperty result = converter.read(ClassWithMapProperty.class, source);
	Object foo = result.mapOfObjects.get(""Foo"");
	assertThat(foo, is(instanceOf(Map.class)));
	Object doublyNestedObject = ((Map)foo).get(""nested"");
	assertThat(doublyNestedObject, is(instanceOf(Map.class)));
	assertThat((String)((Map<?,?>) doublyNestedObject).get(""Hello""), is(equalTo(""World"")));
}
{code}

{code}
@Test
public void readsMapListDoublyNestedValuesCorrectly() {

	BasicDBList list = new BasicDBList();
	BasicDBObject nested = new BasicDBObject();
	BasicDBObject doubly = new BasicDBObject();
	doubly.append(""Hello"", ""World"");
	nested.append(""nested"", doubly);
	list.add(nested);
	DBObject source = new BasicDBObject(""mapOfObjects"", new BasicDBObject(""Foo"", list));

	ClassWithMapProperty result = converter.read(ClassWithMapProperty.class, source);
	Object firstObjectInFoo = ((List<?>) result.mapOfObjects.get(""Foo"")).get(0);
	assertThat(firstObjectInFoo, is(instanceOf(Map.class)));
	Object doublyNestedObject = ((Map)firstObjectInFoo).get(""nested"");
	assertThat(doublyNestedObject, is(instanceOf(Map.class)));
	assertThat((String)((Map<?,?>) doublyNestedObject).get(""Hello""), is(equalTo(""World"")));
}
{code}
",26/Aug/11 4:51 AM;olivergierke;The defaulting to {{Map}} didn't work when the raw type handed in was {{null}} (as it will be some way down the nesting). Fixed and deployed to snapshot repo. Thanks for your patience ;).,,,,,,,,,,,,,,,,,,,,
mongo:mapping-converter schema does not allow db-factory-ref,DATAMONGO-243,40432,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,dart0,dart0,18/Aug/11 1:45 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,24/Aug/11 8:04 AM,1.0 M3,,,,,,,1.0 M4,,,,,Core,,,,0,,,,,,,,"According to the source code of {{MappingMongoConverterParser}} it should be possible to write {{<mongo:mapping-converter id=""dataLoadingConverter"" db-factory-ref=""xxxDbFactory"">}} but the XML schema does not allow {{db-factory-ref}} attribute.",,;24/Aug/11 8:01 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,24/Aug/11 8:04 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18981/mylyn-context.zip,,,,,,,,,,,,,243734400,,,,,2011-08-18 02:42:31.988,29757,true,tmarshall(tmarshall),,,,0|i04zif:,29127,24067,,,,,,18/Aug/11 2:42 AM;olivergierke;Good catch! In the meantime you should be able to get the converter pick up the {{MongoDbFactory}} bean by naming it {{mongoDbFactory}}.,"18/Aug/11 3:00 AM;dart0;Yes, but we need multiple mongoDbFactories as we need to connect to multiple databases from one application.",,,,,,,,,,,,,,,,,,,,,,
@Indexed annotation doesn't honor field name from @Field annotation,DATAMONGO-237,40463,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,gscott,gscott,06/Aug/11 5:05 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,14/Aug/11 8:25 AM,1.0 M3,,,,,,,1.0 M4,,,,,Core,Mapping / Conversion,,,0,,,,,,,,"If I use the following annotations on a field in a Mongo Entity class:

{code}
@Field(""username"") @Indexed(unique = true)
private String _username;
{code}

The object mapper correctly maps the {{username}} field in mongo to the {{_username}} field in Java.  However, the index is created using the Java field's name {{_username}} as the index key, rather than the name specified in the {{@Field}} annotation.  As a work around, one can specify the index name in the {{@Indexed}} annotation as follows:

{code}
@Field(""username"") @Indexed(name = ""username"", unique = true)
private String _username;
{code}

But this results in the following warning log:

{code}
WARNING: The index name username doesn't match this property name: _username. Setting sparse=true on this index will prevent errors when inserting documents.
{code}

I would expect that {{@Indexed}} would honor the field name specified in the {{@Field}} annotation if present.
",Running 1.0.0.BUILD-SNAPSHOT as of 8/6/11,;14/Aug/11 8:23 AM;olivergierke;2100,,,,,,,,0,0,2100,"9,223,372,036,854,775,807%",0,0,2100,,,,,,,,,,,,,,14/Aug/11 8:25 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18967/mylyn-context.zip,,,,,,,,,,,,,244080000,,,,,2011-08-14 08:25:02.436,29764,false,tmarshall(tmarshall),,,,0|i04zjz:,29134,24074,,,,,,14/Aug/11 8:25 AM;olivergierke;Fixed and deployed into snapshot repository. Feel free to give it a try.,,,,,,,,,,,,,,,,,,,,,,,
Unable to map unstructured data,DATAMONGO-235,40292,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,idris,idris,05/Aug/11 1:17 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,15/Aug/11 11:55 AM,1.0 M3,,,,,,,1.0 M4,,,,,Core,Mapping / Conversion,,,0,mongodb,spring-data-mongodb,,,,,,"I've encountered a bug when trying to reference unstructured, multi-level data (as a Map) in Spring Data Document using MongoDB.  The bug occurs when the data contains a list.

I'm trying to represent the following object:
{code:javascript}
{
  '_id': (Object ID Here)
  'name': 'john',
  'data': {
             'pet': 'cat',
             'other': [{'some':'thing'}, {'another':'thing2'}],
             'more': { 'unstructured': 'info' }
           }
}
{code}

With the following class:
{code:java}
@Document
public class Person {
  ObjectId id;
  String name;
  Map<String, Object> data; // Schema-less data for which I do not know the structure in advance
}
{code}

When trying to load this object from MongoDB using Spring Data, I get a {{IllegalArgumentException}} (stack trace below) in {{MappingMongoConverter.findTypeToBeUsed}} because it tries to call {{dbObject.get(CUSTOM_TYPE_KEY)}} on a {{DBArray}} (because ""other"" is a {{DBArray}}).

{noformat}
java.lang.IllegalArgumentException: BasicBSONList can only work with numeric keys, not: [_class]
	at org.bson.types.BasicBSONList._getInt(BasicBSONList.java:161)
	at org.bson.types.BasicBSONList._getInt(BasicBSONList.java:152)
	at org.bson.types.BasicBSONList.get(BasicBSONList.java:104)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.findTypeToBeUsed(MappingMongoConverter.java:736)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.getMoreConcreteTargetType(MappingMongoConverter.java:759)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:138)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.readMap(MappingMongoConverter.java:715)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:641)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:240)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:230)
	at org.springframework.data.mapping.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:112)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:230)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:174)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:128)
	at org.springframework.data.document.mongodb.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1655)
	at org.springframework.data.document.mongodb.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1426)
	at org.springframework.data.document.mongodb.MongoTemplate.doFind(MongoTemplate.java:1186)
	at org.springframework.data.document.mongodb.MongoTemplate.find(MongoTemplate.java:587)
	at org.springframework.data.document.mongodb.repository.AbstractMongoQuery$Execution.readCollection(AbstractMongoQuery.java:106)
	at org.springframework.data.document.mongodb.repository.AbstractMongoQuery$SingleEntityExecution.execute(AbstractMongoQuery.java:194)
	at org.springframework.data.document.mongodb.repository.AbstractMongoQuery.execute(AbstractMongoQuery.java:84)
{noformat}

Instead, {{data}} should be created as a {{Map}} with proper objects inside, including a {{List<Map>}} for ""other""",,;15/Aug/11 11:55 AM;olivergierke;2100,,,,,,,,0,0,2100,"9,223,372,036,854,775,807%",0,0,2100,,,,,,,,,,,,,,15/Aug/11 11:55 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18966/mylyn-context.zip,,,,,,,,,,,,,243734400,,,,,2011-08-14 07:25:21.185,29730,true,tmarshall(tmarshall),,,,0|i04zcf:,29100,24038,,,,,,10/Aug/11 8:15 AM;idris;Forum post: http://forum.springsource.org/showthread.php?113059-MongoDB-Unstructued-Data,14/Aug/11 7:25 AM;olivergierke;Have you tried a recent snapshot? We've done major overhauls to collection and map handling since M3. Would be cool if you could report back if you still see issues with a current snapshot build.,"15/Aug/11 9:06 AM;idris;I just tried it on snapshot and it's still broken.  I believe the fix would be pretty simple.

If you look at [{{MappingMongoConverter.java:783}}|https://github.com/SpringSource/spring-data-document/blob/ad8b6fccb47b20f74d47/spring-data-mongodb/src/main/java/org/springframework/data/mongodb/core/convert/MappingMongoConverter.java#L783] (linked to a specific ref in GitHub, so the line numbers don't change), there is a false assumption being made.  It assumes that if the value is a {{DBObject}}, then it must be either a {{Map}} or another type of object that should be read with the {{read}} method (which is the function that eventually fails, because it does not support lists).  Either the {{read}} method needs to support {{List}}s, or there needs to be another code fork here (one for {{Map}}s, one for {{List}}s, one for other)

What do you think?","15/Aug/11 9:13 AM;idris;On second thought, perhaps the problem is that when it calls {{type.getMapValueType}}, it is getting {{Object}}, and that's not descriptive enough.  Maybe when the map value is {{Object}} or unknown, it should try to figure out the class based on the type of the DBObject from the database, rather than from the declared {{Object}} type.",15/Aug/11 11:55 AM;olivergierke;Added special handling for collections as {{Map}} value types. Polished some internals here and there. Pushed fix and deployed snapshot build to the Maven repo. Feel free to give it a try.,16/Aug/11 8:01 AM;idris;Thanks for the quick turnaround! That solved my problem and now I can actually use Spring Data :),"18/Aug/11 11:47 AM;idris;So, this actually didn't work as expected.  There is no longer an exception, but it creates a {{List}} of empty {{Object}}s, rather than a list of {{Map}}s.  Any ideas? Should I create a new issue?",18/Aug/11 2:00 PM;idris;I've created a new issue for my previous comment: DATAMONGO-245,,,,,,,,,,,,,,,,
Set cannot be used as a collection in a Document,DATAMONGO-217,40506,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,amahier,amahier,25/Jul/11 9:04 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,22/Aug/11 9:21 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,"Empty sets are serialized to empty list in mongodb (I would expect no serialization at all ...)

When this objet is read from mongodb, this empty list is transformed to a {{LinkedList}}, which in turn should be converted to a {{Set}}. But empty collections are not converted by the {{GenericConversionService}} of spring as the converter used by Spring is a {{CollectionToCollectionConverter}}. Exception is:
{code}
java.lang.IllegalArgumentException: Can not set java.util.Set field com.weka.documents.Blog.tags to java.util.LinkedList
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:146)
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:150)
	at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:63)
	at java.lang.reflect.Field.set(Field.java:657)
	at org.springframework.util.ReflectionUtils.setField(ReflectionUtils.java:92)
	at org.springframework.data.mapping.BeanWrapper.setProperty(BeanWrapper.java:159)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:242)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter$2.doWithPersistentProperty(MappingMongoConverter.java:230)
	at org.springframework.data.mapping.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:112)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:230)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:174)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.read(MappingMongoConverter.java:128)
	at org.springframework.data.document.mongodb.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1655)
	at org.springframework.data.document.mongodb.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1426)
	at org.springframework.data.document.mongodb.MongoTemplate.findAll(MongoTemplate.java:1066)
	at com.weka.documents.DocumentsStoreTest.testSaveBlogs(DocumentsStoreTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{code}
which is not very clear","Windows 6.1 SP1
java 1.6.0_25",;22/Aug/11 9:18 AM;olivergierke;3480,,,,,,,,0,0,3480,"9,223,372,036,854,775,807%",0,0,3480,,,,,,,DATAMONGO-192,,,,,,,22/Aug/11 9:08 AM;amahier;MappingMongoConverter.java;https://jira.spring.io/secure/attachment/18972/MappingMongoConverter.java,22/Aug/11 9:21 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18974/mylyn-context.zip,,,,,,,,,,,,243388800,,,,,2011-07-28 08:56:37.075,29753,false,tmarshall(tmarshall),,,,0|i04zhj:,29123,24063,,,,,,28/Jul/11 8:56 AM;olivergierke;Would you mind checking this in the recent snapshots as well? It seems the fix for DATAMONGO-192 schould fix this one as well.,"22/Aug/11 5:05 AM;amahier;I don't know if it's fixed by the related ticket.

I have the problem through the PersistenceConstructor mechanism. And the problem of the conversion comes from the spring-core conversion framework (ie from the CollectionToCollectionConverter that decides to not convert empty collections, even if it is the wrong type of collection.

To have this work in my project, I had to patch the MappingMongoConverter to not serialize empty collections at all (ie an empty or null collection is not stored at all in mongodb). It's the only solution I have found to bypass the no conversion behaviour of the spring-core.","22/Aug/11 7:33 AM;olivergierke;So what is your state of this one? Before the fix of DATAMONGO-192 we always created an {{ArrayList}} relying on the conversion service to convert it to the correct type, which it didn't for empty collections (see SPR-7728 for details). As we do not rely on this behaviour anymore that should be fixed. There's also a [test case|https://fisheye.springsource.org/viewrep/datadoc/spring-data-mongodb/src/test/java/org/springframework/data/mongodb/convert/MappingMongoConverterUnitTests.java?r1=4b4c35b904214076c45987ba396098aa6c2a0b3a&r2=ce0539a3dc454d2c7b79f3d74b4e0a7f0b142855] ensuring that beaviour.","22/Aug/11 7:44 AM;amahier;I have retrieved the latest source and compile for testing. I still have the problem. Perhaps the problem is only present when I use the PersistenceConstructor. in all your test case, I do not check if you have some tests on the PersistenceConstructor mechanism. As I understand the mapping rules, it's not the same algorithm to instantiate class through reflexion properties and through constructor.

I attempt to manage my persistent objects as immutable classes and so use extensively your PersistenceConstructor mechanism. And all my problem comes from this algorithm :)

I will attempt to give you a patch that fixes my problems",22/Aug/11 8:17 AM;olivergierke;It seems the {{PersistenceConstructor}} handling uses a different path than the plain property reading. So I should be able to reproduce the issue simply using a {{Set}} constructor parameter.,22/Aug/11 9:08 AM;amahier;the complete file (as I cannot figure how to have a simple patch for this),22/Aug/11 9:21 AM;olivergierke;I've consolidated {{Collection}} and {{Map}} handling in {{MappingMongoConverter}} so that {{PersistenceConstructor}} should benefit from the fix for DATAMONGO-192 as well.,,,,,,,,,,,,,,,,,
Allow configuring WriteConcern via MongoFactoryBean and thus the namespace,DATAMONGO-215,40437,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Jul/11 5:20 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,23/Aug/11 12:02 PM,1.0 M3,,,,,,,1.0 M4,,,,,Core,,,,0,,,,,,,,Currently there's no way to specify a {{WriteConcern}} for a {{Mongo}} instance. We should add the ability to do so.,,;23/Aug/11 11:57 AM;olivergierke;3180,,,,,,,,,0,3180,,,0,3180,,,,,,,,,,,,,,23/Aug/11 12:02 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18975/mylyn-context.zip,,,,,,,,,,,,,245808000,,,,,,28058,false,tmarshall(tmarshall),,,,0|i00y6v:,5584,6849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE doing MongoTemplate.update() with query field = null,DATAMONGO-211,40503,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,scf37,scf37,25/Jul/11 3:31 AM,25/Mar/13 10:24 AM,10/May/19 2:36 AM,25/Jul/11 5:47 AM,1.0 M3,,,,,,,,,,,,Core,,,,0,,,,,,,,"{code}
Update update = Update.update(""endDate"", date);
Query query = Query.query(Criteria.where(""endDate"").is(null)
		.and(""sysName"").is(ref.getSysName()));
template.updateMulti(query, update, ""myCollection"");
{code}

{code}
java.lang.NullPointerException
	at org.springframework.data.document.mongodb.convert.AbstractMongoConverter.maybeConvertObject(AbstractMongoConverter.java:217)
	at org.springframework.data.document.mongodb.MongoTemplate.execute(MongoTemplate.java:363)
	at org.springframework.data.document.mongodb.MongoTemplate.doUpdate(MongoTemplate.java:954)
	at org.springframework.data.document.mongodb.MongoTemplate.updateMulti(MongoTemplate.java:947)
{code}",,;25/Jul/11 5:44 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,25/Jul/11 5:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18959/mylyn-context.zip,,,,,,,,,,,,,245808000,,,,,2011-07-25 05:47:07.705,28240,false,tmarshall(tmarshall),,,,0|i02afr:,13400,13136,,,,,,"25/Jul/11 4:04 AM;scf37;Related: Update.update(""endDate"", null) causes NPE as well",25/Jul/11 5:47 AM;olivergierke;Deployed a fix for the handling inside {{AbstractMongoConverter}} to our snapshot repo. We will probably rework part of code while fixing DATAMONGO-214 as well.,,,,,,,,,,,,,,,,,,,,,,
Collections of enums not handled correctly,DATAMONGO-209,40431,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Trivial,Fixed,olivergierke,olivergierke,olivergierke,22/Jul/11 8:37 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,27/Jul/11 12:05 PM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,converter,,,,,,,Apparently collections of enums are not handled correctly. See this [StackOverflow post|http://stackoverflow.com/questions/6779929/how-to-map-a-collection-of-enums-in-spring-data-for-mongodb] for details.,,;22/Jul/11 8:57 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,245808000,,,,,2011-07-23 14:03:44.525,28060,true,tmarshall(tmarshall),,,,0|i00y7b:,5586,6851,,,,,,23/Jul/11 2:03 PM;amavisto;I'm stil getting the same error with 1.0.0.BUILD-20110723.083026-334. Need a demo project? ,"23/Jul/11 2:34 PM;olivergierke;Please give the tonight's snapshot another try. I committed [the fix|https://github.com/SpringSource/spring-data-document/commit/e1daf36ed82407f680e7b7c4777e0bc3daf593f8] locally but didn't push it to the repo so that the nightly build couldn't actually deploy it to the repository. If that still doesn't work, feel free to add some samples to dive into.","25/Jul/11 3:54 AM;amavisto;yup, that solves it, thanks a lot!",,,,,,,,,,,,,,,,,,,,,
MappingMongoConverter fails when reading empty java.util.SortedMaps,DATAMONGO-207,40510,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,florian.feigenbutz,florian.feigenbutz,21/Jul/11 8:41 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,22/Jul/11 1:23 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,"Reading empty maps from mongoDB works fine for usual Maps such as LinkedHashMaps.
When using other interface types such as SortedMaps it fails because it does not safely detect these maps.

I attached a test with 4 methods of which 1 is failing.
All test methods insert an entity containing 2 empty maps with one map being a java.util.Map and the other one a java.util.SortedMap.
When inserting the entity with empty maps Spring Data Document does not add any ""_class"" property to both of the map instances.
When reading them again the MappingMongoConverter tries to instanciate both maps with a LinkedHashMap which fails for the java.util.SortedMap (see method testFindListWithResultAndEmptyValues)

This issue might be similar to DATAMONGO-192 which was related to java.util.List(s)?",,;22/Jul/11 1:18 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,DATAMONGO-217,,,,,,21/Jul/11 8:41 AM;florian.feigenbutz;EmptySortedMapTest.java;https://jira.spring.io/secure/attachment/18954/EmptySortedMapTest.java,22/Jul/11 1:23 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18957/mylyn-context.zip,,,,,,,,,,,,246153600,,,,,2011-07-21 15:06:00.442,29758,true,tmarshall(tmarshall),,,,0|i04zin:,29128,24068,,,,,,"21/Jul/11 3:06 PM;olivergierke;As DATAMONGO-192 is fixed in master, have you tried a current snapshot? We use the standard Spring {{CollectionFactory}} to discover appropriate collection types since the fix.","22/Jul/11 12:26 AM;florian.feigenbutz;I discovered the problem with M3. Before submitting the bug I retried it with yesterday's snapshot (spring-data-mongodb-1.0.0.BUILD-20110721.083643-330.jar).
The same problem appeared with both versions.

After a debugging session I guess that there's a problem in the current implementation of org.springframework.data.mongodb.core.convert.MappingMongoConverter.readMap(TypeInformation<?>, DBObject) which tries to use findTypeToBeUsed(dbObject) in order to detect the DBObject's (in this case the java.util.Map) class.
If no such type is found it falls back to Map.class and uses the core's CollectionFactory to instanciate the correct implementation:

Class<?> mapType = customMapType == null ? Map.class : customMapType;
Map<Object, Object> map = CollectionFactory.createMap(mapType, dbObject.keySet().size());

Could this probably be fixed by adding a property ""_class=java.util.SortedMap"" property to embedded Maps? This would cause findTypeToBeUsed(dbObject) to return the correct type.","22/Jul/11 12:44 AM;florian.feigenbutz;Actually - just forgot something.
The problems appeared after upgrading from Spring Core 3.0.3 to 3.0.5.

Unfortunately I haven't been able yet to check for changes in the core's CollectionFactory between these versions.","22/Jul/11 1:23 AM;olivergierke;It seems we're suffering from a bug in {{MapToMapConverter}} in core Spring framework (see SPR-8554). For empty {{Map}} instances it simply returns the source {{Map}} instead of forcing a conversion to the given target type. The behaviour you saw was correct as we assume the {{ConversionService}} to convert the value to be set into the correct property type.

We can work around this deficiency quite simply as we get the {{TypeInformation}} of the {{Map}} handed into the method and thus don't actually have to fall back on the raw {{Map}} interface but can inspect the actual property type.

Fix is committed and deployed to snapshot repository.","22/Jul/11 1:45 AM;florian.feigenbutz;Thank you for the quick analysis and the fix.
The problem is solved using the current spring-data-mongodb snapshot.",,,,,,,,,,,,,,,,,,,
MappingMongoConverter does not read empty Sets correctly,DATAMONGO-192,40498,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,08/Jul/11 4:00 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,08/Jul/11 4:06 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,,,;08/Jul/11 4:06 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,08/Jul/11 4:06 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18953/mylyn-context.zip,,,,,,,,,,,,,247276800,,,,,,28063,false,tmarshall(tmarshall),,,,0|i00y7z:,5589,6854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleMongoRepository.exists(…) returns false for existing entities with non-ObjectId id,DATAMONGO-190,40465,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Jul/11 5:43 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,06/Jul/11 10:53 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repository,,,,0,,,,,,,,The id handed into {{SimpleMongoRepository.exists(…)}} is not converted at all before piping it into the query. This works fine for classes using {{ObjectId}} as id type anyway but will fail for ones using {{String}} ids for example.,,;06/Jul/11 10:52 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,06/Jul/11 10:53 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18946/mylyn-context.zip,,,,,,,,,,,,,247449600,,,,,,28065,false,tmarshall(tmarshall),,,,0|i00y8f:,5591,6856,,,,,,06/Jul/11 10:53 AM;olivergierke;Fixed and available in tonight's snapshot.,,,,,,,,,,,,,,,,,,,,,,,
Improve extensibility of MongoRepositoryFactoryBean,DATAMONGO-189,40469,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Jul/11 5:37 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,07/Jul/11 1:48 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repository,,,,0,,,,,,,,{{MongoRepositoryFactoryBean}} is currently not very open for extension as methods use private variables. We should rather provide callbacks to hand in the necessary variables.,,;07/Jul/11 1:47 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,07/Jul/11 1:49 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18950/mylyn-context.zip,,,,,,,,,,,,,247449600,,,,,,28066,false,tmarshall(tmarshall),,,,0|i00y8n:,5592,6857,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow means to disable repository infrastructure creating indexes,DATAMONGO-188,40470,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Jul/11 5:27 AM,19/Dec/14 11:19 AM,10/May/19 2:36 AM,07/Jul/11 4:36 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repository,,,,0,,,,,,,,Currently the only way to disable the repository creating indexes is creating a custom sub-class of {{MongoRepositoryFactoryBean}} and reimplement  {{createRepositoryFactory()}}. We should add a flag to be able to simply skip adding the {{IndexEnsuringQueryCreationListener}}. This flag should be exposed to the namespace as well. We should probably also default to not creating the indexes.,,;07/Jul/11 4:30 AM;olivergierke;5400,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,07/Jul/11 4:38 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18951/mylyn-context.zip,,,,,,,,,,,,,138412800,,,,,2014-12-19 11:19:07.712,28067,true,w_c_smith(w_c_smith),,,,0|i00y8v:,5593,6858,,,,,,07/Jul/11 4:36 AM;olivergierke;Fix should be available in tonight's snapshot.,"19/Dec/14 11:19 AM;w_c_smith;Is this feature documented anywhere? I've been looking for a way to tell the production launch not to run the indexing setup, but I couldn't find the configuration hook.",,,,,,,,,,,,,,,,,,,,,,
Order in the fields of an index,DATAMONGO-186,40525,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,jbaris,jbaris,30/Jun/11 11:45 AM,25/Mar/13 10:24 AM,10/May/19 2:36 AM,06/Jul/11 10:47 PM,1.0 M3,,,,,,,,,,,,Core,,,,0,,,,,,,,"When is created an index, the order of the fields is not respected. For example:

Index index = new Index().named(""myIndex"");
index.on(""workflowId"", Order.ASCENDING);
index.on(""startDate"", Order.ASCENDING);
index.on(""endDate"", Order.ASCENDING);
getMongoTemplate().ensureIndex(index, Process.class);

The generated index is:

> db.system.indexes.find()
{ ""name"" : ""_id_"", ""ns"" : ""test.workflow"", ""key"" : { ""_id"" : 1 }, ""v"" : 0 }
{ ""name"" : ""myIndex"", ""ns"" : ""test.workflow"", ""key"" : { ""startDate"" : 1, ""endDate"" : 1, ""workflowId"" : 1 }, ""v"" : 0 }

Note that the fields order is changed.",,;06/Jul/11 10:46 PM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,06/Jul/11 10:48 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18949/mylyn-context.zip,,,,,,,,,,,,,247449600,,,,,2011-07-06 22:47:55.088,28245,false,tmarshall(tmarshall),,,,0|i02agv:,13405,13141,,,,,,06/Jul/11 10:47 PM;olivergierke;Fix should be available in tonight's snapshot.,,,,,,,,,,,,,,,,,,,,,,,
Unable to force property order when saving document,DATAMONGO-172,40515,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Blocker,Fixed,olivergierke,serff,serff,09/Jun/11 8:04 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,06/Jul/11 10:24 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,mongodb,spring-data,,,,,,"I have a Location object that I need to force the order of the properties when they get persisted to mongodb so that I can set a GeoSpatialIndex on the field.  In order to use the GeoSpatialIndex, the first two properties must be numbers (lat/lon).  In my case, I have the following object:
Location {
   float lat;
   float lon;
   County county;
}
When the Location object is persisted in mongodb, it puts the properties in alphabetical order.  So I tried adding:
@XmlRootElement(name=""location"")
@XmlType(propOrder={""latitude"", ""longitude"", ""county""})

but this doesn't work either. I was asked to enter a JIRA for the issue.  

I'm about to try to use a custom Converter which I assume is a workaround to the issue (I hope).  It would be very nice if using the annotation (or a different one) would work though.  It would be much more simple. 

If the workaround doesn't work and there isn't another work around, this is a very major issue because I can't create a geospatial index the way it works.  ",Mac OS X (10.6) running in JBoss and also on cloudfoundry,;13/Jun/11 12:36 PM;olivergierke;5400,;06/Jul/11 10:13 AM;olivergierke;3600,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,DATACMNS-50,,,,,,,,,,,,06/Jul/11 10:24 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18948/mylyn-context.zip,,,,,,,,,,,,,247449600,,,,,2011-06-10 05:41:42.914,29748,false,tmarshall(tmarshall),,,,0|i04zgf:,29118,24058,http://forum.springsource.org/showthread.php?110425-Force-property-order-in-MongoDB-mapping&p=366345,,,,,"09/Jun/11 9:21 PM;serff;Ok, so I tried the converter but I ran into a problem with it being able to convert the nested County object.  But I ran into a larger issue.  Even if the converters work, the MongoTemplate constructors only allow for either setting the Converters OR setting a UserCredential object, not BOTH.  Cloudfoundry requires username/password to be used when connecting to MongoDB, so I have to be able to set the UserCredentials object.  So either there either needs to be setters for the UserCredentials and the Converters or a new constructor that takes both.  Right now, I'm unable to persist the object in a way that will let me use a geospatial index. Any idea when this would get fixed even in a nightly build? I may take a stab at adding the setters for the properties needed and push you a fix if I get time. ","10/Jun/11 5:41 AM;thomas.risberg;We could potentially use the @Order annotation that already exists in Spring.

	@Order(1)
	float lat;
	@Order(2)
	float lon;
	County county;

","13/Jun/11 10:23 AM;olivergierke;Hi Andrew, thanks for bringing this up. Have you tried using a wrapper class (e.g. named {{Point}}) that holds a {{float[]}} as workaround? This should lead to something like this:

{code}
class Location {
  Point point;
  Country country;
}

class Point {
  float[] coordinates;
}
{code}

That should make the code unaffected by any order issues. The query would be 
{code}
db.collection.find({""location.point"" : {""$near"" : [40, -73]} })
{code}

Unfortunately our implementations of {{Point}}, {{Box}} and {{Circle}} use properties instead of arrays right now so that the order of persisting properties suddenly becomes an issue. We probably will change those implementations to use arrays instead of properties.","06/Jul/11 10:24 AM;olivergierke;Should be fixed and available in tonight's snapshot. We dropped {{@FieldName}} over a more generic {{@Field}} that has an {{order}} attribute. All properties annotated this way will be ordered according to the attribute value followed by all unannotated properties in undetermined order. We've also annotated our domain abstractions (e.g. {{Box}}, {{Point}} etc.) to carry this annotation.",,,,,,,,,,,,,,,,,,,,
IllegalArgumentException when persisting entity with BigDecimal field,DATAMONGO-171,40521,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,thomas.risberg,thomas.risberg,09/Jun/11 4:46 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,07/Jul/11 12:36 PM,1.0 M2,1.0 M3,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,2,,,,,,,,"Problems persisting entity with BigDecimal field.

BigDecimal is not supported by MongoDB - see

http://osdir.com/ml/mongodb-user/2011-05/msg01418.html

Here is part of a stack trace:
java.lang.IllegalArgumentException: can't serialize class java.math.BigDecimal
	at org.bson.BSONEncoder.putNumber(BSONEncoder.java:316)
	at org.bson.BSONEncoder._putObjectField(BSONEncoder.java:167)
	at org.bson.BSONEncoder.putObject(BSONEncoder.java:123)
	at org.bson.BSONEncoder.putObject(BSONEncoder.java:69)
	at com.mongodb.OutMessage.putObject(OutMessage.java:189)
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:245)
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:209)
	at com.mongodb.DBCollection.insert(DBCollection.java:82)
	at org.springframework.data.document.mongodb.MongoTemplate$9.doInCollection(MongoTemplate.java:835)
	at org.springframework.data.document.mongodb.MongoTemplate.execute(MongoTemplate.java:363)
	at org.springframework.data.document.mongodb.MongoTemplate.insertDBObject(MongoTemplate.java:830)
	at org.springframework.data.document.mongodb.MongoTemplate.doInsert(MongoTemplate.java:694)
	at org.springframework.data.document.mongodb.MongoTemplate.insert(MongoTemplate.java:648)
	at org.springframework.data.document.mongodb.MongoTemplate.insert(MongoTemplate.java:636)


Looks like we removed Converter issues around BigDecimal in DATACMNS-42 and we have BigDecimal as part of SIMPLE_TYPES. So now we get this exception when the driver tries to write the BSON value.

We probably need a converter that can handle this out of the box.",,;07/Jul/11 12:36 PM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,07/Jul/11 12:36 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18955/mylyn-context.zip,,,,,,,,,,,,,249782400,,,,,,29763,false,tmarshall(tmarshall),,,,0|i04zjr:,29133,24073,http://forum.springsource.org/showthread.php?110329-Spring-Data-MongoDB-1.0.0.M2-gt-1.0.0.-M3-Upgrading-Issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Registering custom converters for a type requires treating the type as simple in mapping context,DATAMONGO-169,40499,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,08/Jun/11 12:08 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,09/Jun/11 4:41 PM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,When you register custom converters for a particular type right now you might have to register it as custom simple type on the {{MappingContext}} as well as it might not aling to the required constructor structure (e.g. UUID having multiple no-arg constructors). As the creation of the {{MappingContext}} is currently hidden behind a namespace element one currently would have to configure all beans manually if such a situation occurs.,,;09/Jun/11 4:41 PM;olivergierke;18000,,,,,,,,0,0,18000,"9,223,372,036,854,775,807%",0,0,18000,,,,,,,,,,,,,,09/Jun/11 4:41 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18945/mylyn-context.zip,,,,,,,,,,,,,249782400,,,,,,28069,false,tmarshall(tmarshall),,,,0|i00y9b:,5595,6860,,,,,,09/Jun/11 4:41 PM;olivergierke;Added {{SimpleTypeHolder}} value object to be able ton inject custom simple types into the mapping context. On the MongoDB side registering a custom converter now causes the {{SimpleTypeHolder}} instance to be set up to regard the types handled by the custom conversion as simple ones.,,,,,,,,,,,,,,,,,,,,,,,
@Document annotation is not inherited,DATAMONGO-167,40484,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,07/Jun/11 9:16 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,07/Jun/11 11:46 AM,1.0 M3,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,"Inheriting from a base class does not promote the collection of the super class to the new one:

{code}
@Document(collection = ""contacts"")
class Contact { … }

class Person extends Contact { … }
{code}

{{MongoPersistentEntity.getCollection()}} for the {{Person}} class returns {{person}} instead of {{contacts}}.",,;07/Jun/11 11:46 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,07/Jun/11 11:46 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18942/mylyn-context.zip,,,,,,,,,,,,,249955200,,,,,,28071,false,tmarshall(tmarshall),,,,0|i00y9r:,5597,6862,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception thrown on toString of Point class,DATAMONGO-162,40475,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,stuartrexking,stuartrexking,02/Jun/11 5:12 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,13/Jun/11 9:53 AM,1.0 M2,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,0,,,,,,,,"When I have logging set to debug I am seeing an java.util.IllegalFormatConversionException in org.springframework.data.document.mongodb.geo.Point.toString

Having a look at the toString on Point

{code}
@Override
public String toString() {
    return String.format(""Point [latitude=%d, longitude=%d]"", x, y);
}
{code}

Actually needs to be

{code}
@Override
public String toString() {
    return String.format(""Point [latitude=%f, longitude=%f]"", x, y);
}
{code}
",,;13/Jun/11 9:47 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,13/Jun/11 9:53 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18943/mylyn-context.zip,,,,,,,,,,,,,250387200,,,,,,29755,true,tmarshall(tmarshall),,,,0|i04zhz:,29125,24065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document not being mapped completely when using MongoRepository,DATAMONGO-161,40477,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,stuartrexking,stuartrexking,02/Jun/11 12:46 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,02/Jun/11 2:49 AM,1.0 M2,,,,,,,1.0 M3,,,,,Repository,,,,0,,,,,,,,"I am using the snapshot build.

I have an object hierarchy of

{code}
@Document(collection = ""experience"")
public class ExperienceDocument {
    @Id
    private String id;
    private ContentDocument content;
    
    ...getters and setters
}
{code}
and

{code}
public class ContentDocument {
    private Map<String, Map<String, Map<String, String>>> media;
    ...get and set
...
{code}

My config looks like this

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:mongo=""http://www.springframework.org/schema/data/mongo""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd"">

    <mongo:db-factory dbname=""test""/>
    <mongo:mapping-converter base-package=""com.some.package"" id=""mappingConverter""/>

    <bean id=""mongoTemplate"" class=""org.springframework.data.document.mongodb.MongoTemplate"">
        <constructor-arg ref=""mongoDbFactory""/>
        <constructor-arg ref=""mappingConverter""/>
    </bean>

    <mongo:repositories base-package=""com.some.package.experience"" mongo-template-ref=""mongoTemplate""/>

    <bean class=""com.some.package.experience.ExperienceServiceImpl"" id=""experienceService""
          init-method=""createIndexes"">
        <constructor-arg ref=""experienceRepository""/>
    </bean>

</beans>
{code}

Using the repository to save works without a problem. The document, in its entirety, from the mongo shell looks like this:

{code}
{
     ""_id"" : ""59320"",
     ""_class"" : ""com.some.package.experience.ExperienceDocument"",
     ""content"" : 
    {
         ""media"" : 
        {
             ""YVfYPSryvU"" : 
            {
                 ""4mQiYD0DPx"" : 
                {
                     ""j9Fb0N97cM"" : ""http://tcxhihzwae.com"" 
                }
                 
            }
             
        }
    }
}
{code}

When I call {{repository.findOne(id)}} the document is returned, but the media map in the Content Document has no values in its entry. Using mongosniffer I can see the document being found in the query. The mapping is failing.

My questions are:
1. Have I configured to use the MappingMongoConverter? I assume it is being used my default in the latest builds.
2. I concede the media fields hierarchy of maps is yucky to say the least, but it is the structure I want to save and retrieve. Should a mapping of this complexity work?
3. I notice in the examples and tests that fields that are of type Collection are sometimes initialised. Do I need to do this? Why would this be the case?

Thanks in advance. I hope its as simple as something I am doing, rather than a defect.

Stu",local,;02/Jun/11 2:49 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,02/Jun/11 2:49 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18941/mylyn-context.zip,02/Jun/11 1:43 AM;stuartrexking;test.zip;https://jira.spring.io/secure/attachment/18940/test.zip,,,,,,,,,,,,250473600,,,,,,29775,true,tmarshall(tmarshall),,,,0|i05027:,29216,24192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove setter for MongoDbFactory from MappingMongoConverter,DATAMONGO-149,40467,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,24/May/11 8:09 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,24/May/11 8:34 AM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,23/May/11 12:00 AM,0,,,,,,,,We should remove {{MappingMongoConverter.setMongoDbFactory(…)}} as well as the constructor only taking a {{MappingMongoConverter}}.,,;24/May/11 8:34 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,24/May/11 8:34 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18937/mylyn-context.zip,,,,,,,,,,,,,251164800,,,,,,28072,false,tmarshall(tmarshall),,,,0|i00y9z:,5598,6863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update reference documentation to cover changes from M2 to M3,DATAMONGO-147,40322,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Complete,mark.pollack,mark.pollack,mark.pollack,23/May/11 9:51 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,27/May/11 1:50 PM,1.0 M2,,,,,,,1.0 M3,,,,,Documentation,,,,0,,,,,,,,"Update the documentation to cover new features such as <mongo:db-factory/> and generally sync with various misc changes between M2 and M3.

Create a section in the doc for migration from M2 to M3.",,finshed mongodb.xml chapter.;24/May/11 9:38 PM;mark.pollack;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,251251200,,,,,,29782,false,tmarshall(tmarshall),,,,0|i0503r:,29223,24205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MappingMongoConverter does not convert objects for collections of interfaces,DATAMONGO-145,40471,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,22/May/11 5:41 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/May/11 2:37 AM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,,0,,,,,,,,If you have a class that contains a collection of interfaces the values inside the collection are not mapped correctly. This is due to the fact that the recursive call to map the element uses the collection's component type which of course does not contain {{PersistentProperty}} instances as it is an interface. Using abstract classes that way will probably suffer from the same issues.,,;22/May/11 6:20 AM;olivergierke;5400,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,251337600,,,,,,28073,false,tmarshall(tmarshall),,,,0|i00ya7:,5599,6864,http://forum.springsource.org/showthread.php?109673,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add an @Key annotation to allow defining the key a property is stored under,DATAMONGO-144,40455,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,20/May/11 2:49 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,20/May/11 12:01 PM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,,1,,,,,,,,"Currently the field key a property is stored under is the property name. There's no way to tweak this unforunately. So we should add an annotation that allows defining that:

{code}
public class Person {

  @Id
  private String id;
  
  @Key(""foo"")
  private String firstname;
}
{code}",,;20/May/11 12:01 PM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,20/May/11 12:01 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18935/mylyn-context.zip,,,,,,,,,,,,,251510400,,,,,2011-05-20 02:56:08.952,28074,false,tmarshall(tmarshall),,,,0|i00yaf:,5600,6865,,,,,,"20/May/11 2:56 AM;mas;Generally it is a good idea, but the Annotation @Key might be missunderstood for former SQLDB Developers.

Maybee it is better to use @Property or @Attribute or something like that.  ","20/May/11 8:05 AM;olivergierke;We're still debating the name :). Seems we will be aiming for {{@FieldName(value=""foo"")}}.",,,,,,,,,,,,,,,,,,,,,,
Problem with Converters (java.util.Locale),DATAMONGO-130,40453,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,robert.stiller,robert.stiller,07/May/11 4:48 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,24/May/11 9:43 AM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,,0,,,,,,,,"Hi,

i got the following exception when trying to save a java.util.Locale property: (Code is under the stacktrace)

{code}
java.lang.IllegalArgumentException: can't serialize class java.util.Locale
	at org.bson.BSONEncoder._putObjectField(BSONEncoder.java:205)
	at org.bson.BSONEncoder.putObject(BSONEncoder.java:121)
	at org.bson.BSONEncoder.putObject(BSONEncoder.java:67)
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:215)
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:180)
	at com.mongodb.DBCollection.insert(DBCollection.java:72)
	at com.mongodb.DBCollection.save(DBCollection.java:537)
	at com.mongodb.DBCollection.save(DBCollection.java:517)
	at org.springframework.data.document.mongodb.MongoTemplate$10.doInCollection(MongoTemplate.java:710)
	at org.springframework.data.document.mongodb.MongoTemplate.execute(MongoTemplate.java:282)
	at org.springframework.data.document.mongodb.MongoTemplate.saveDBObject(MongoTemplate.java:707)
	at org.springframework.data.document.mongodb.MongoTemplate.doSave(MongoTemplate.java:607)
	at org.springframework.data.document.mongodb.MongoTemplate.save(MongoTemplate.java:597)
	at org.springframework.data.document.mongodb.repository.SimpleMongoRepository.save(SimpleMongoRepository.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:355)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.invoke(RepositoryFactorySupport.java:336)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy16.save(Unknown Source)
	at example.repo.RepositoryTest.test(RepositoryTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{code}

{code}
package example.repo;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import org.springframework.data.annotation.Id;
import org.springframework.data.document.mongodb.mapping.Document;

import com.google.code.morphia.annotations.Entity;

@Document(collection = ""examples"")
@Entity
public class Example implements Serializable {
    
    private static final long serialVersionUID = 2827176530940493389L;
    
    @Id
    protected String id;
    protected Locale country;
    protected Map<Locale, String> names = new HashMap<Locale, String>();
    
    public Locale getCountry() {
        return country;
    }
    
    public String getId() {
        return id;
    }
    
    public Map<Locale, String> getNames() {
        return names;
    }
    
    public void setCountry(Locale newCountry) {
        country = newCountry;
    }
    
    public void setId(String newId) {
        id = newId;
    }
    
    public void setNames(Map<Locale, String> newNames) {
        names = newNames;
    }   
}
{code}
{code}
package example.repo;

import org.springframework.data.document.mongodb.repository.MongoRepository;
import org.springframework.data.document.mongodb.repository.QueryDslPredicateExecutor;

public interface ExampleService extends MongoRepository<Example, String>, QueryDslPredicateExecutor<Example> {
}
{code}
{code}
package example.repo;

import java.util.Locale;

import javax.inject.Inject;

import junit.framework.Assert;
import junit.framework.TestCase;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.data.document.mongodb.MongoTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = ""classpath:/testApplicationContext.xml"")
public class RepositoryTest extends TestCase {
    
    @Inject
    protected MongoTemplate template;
    @Inject
    protected ExampleService exampleService;
    
    public ExampleService getExampleService() {
        return exampleService;
    }
    
    public MongoTemplate getTemplate() {
        return template;
    }
    
    public void setExampleService(ExampleService newExampleService) {
        exampleService = newExampleService;
    }
    
    public void setTemplate(MongoTemplate newTemplate) {
        template = newTemplate;
    }
    
    @Before
    @Override
    public void setUp() throws Exception {
        template.dropCollection(""examples"");
        template.createCollection(""examples"");
        super.setUp();
    }
    
    @After
    @Override
    public void tearDown() throws Exception {
        template.dropCollection(""examples"");
        super.tearDown();
    }
    
    @Test
    public void test() {
        Example example = new Example();
        
        example.setCountry(Locale.GERMANY);
        example.getNames().put(Locale.GERMANY, ""Deutschland"");
        example.getNames().put(Locale.US, ""Germany"");
        
        example = exampleService.save(example);
        
        Assert.assertEquals(example, exampleService.findAll().get(0));
    }
}
{code}

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans
    xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:context=""http://www.springframework.org/schema/context""
    xmlns:spring-data=""http://www.springframework.org/schema/data/mongo""
    xsi:schemaLocation=""
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd"">
    
    <spring-data:mongo host=""127.0.0.1"" port=""27017"" id=""mongo""/>
    
    <bean id=""mongoTemplate"" class=""org.springframework.data.document.mongodb.MongoTemplate"">
        <constructor-arg ref=""mongo""/>
        <constructor-arg value=""testdb""/>
        <constructor-arg>
            <spring-data:mapping-converter/>
        </constructor-arg>
    </bean>
    
    <spring-data:repositories base-package=""example.repo"" mongo-template-ref=""mongoTemplate"">
    </spring-data:repositories>
    
    <context:annotation-config/>
	
</beans>
{code}

{code}
package example.repo;

import java.util.Locale;

import org.springframework.core.convert.converter.Converter;

public class LocaleToStringConverter implements Converter<Locale, String> {
    
    public String convert(Locale source) {
        return source.toString();
    }
}
{code}

{code}
package example.repo;

import java.util.Locale;

import org.springframework.core.convert.converter.Converter;
import org.springframework.util.StringUtils;

public class StringToLocaleConverter implements Converter<String, Locale> {
    
    public Locale convert(String source) {
        return StringUtils.parseLocaleString(source);
    }
}
{code}

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans
    xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:context=""http://www.springframework.org/schema/context""
    xmlns:spring-data=""http://www.springframework.org/schema/data/mongo""
    xsi:schemaLocation=""
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd"">
    
    <spring-data:mongo host=""127.0.0.1"" port=""27017"" id=""mongo""/>
    
    <bean id=""mappingContext"" class=""org.springframework.data.document.mongodb.mapping.MongoMappingContext""/>
    
    <bean id=""mongoConverter"" class=""org.springframework.data.document.mongodb.convert.MappingMongoConverter"">
        <constructor-arg ref=""mappingContext""/>
        <property name=""converters"">
            <set>
                <bean class=""example.repo.LocaleToStringConverter""/>
                <bean class=""example.repo.StringToLocaleConverter""/>
            </set>
        </property>
    </bean>
    
    <bean id=""mongoTemplate"" class=""org.springframework.data.document.mongodb.MongoTemplate"">
        <constructor-arg ref=""mongo""/>
        <constructor-arg value=""testdb""/>
        <constructor-arg ref=""mongoConverter""/>
    </bean>
    
    <spring-data:repositories base-package=""example.repo"" mongo-template-ref=""mongoTemplate"">
    </spring-data:repositories>
    
    <context:annotation-config/>
	
</beans>
{code}

I guess the converters are not used correctly since there is a ""native"" support for java.util.Locale objects if using the Converter-Framework of Spring.
(org.springframework.core.convert.support.StringToLocaleConverter). Another exception occures when reading a map with a Locale as key-type: (Code is under the stacktrace)
To save the map i had to have to register an own Converter (see code) - it seems that the converters are not correctly used at this point too.

{code}
java.lang.ClassCastException: java.lang.String cannot be cast to java.util.Locale
	at example.repo.RepositoryTest.test(RepositoryTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{code}

{code}
package example.repo;

import java.util.Locale;

import org.springframework.core.convert.converter.Converter;
import org.springframework.data.mapping.MappingBeanHelper;
import org.springframework.util.StringUtils;

public class StringToLocaleConverter implements Converter<String, Locale> {
    
    public Locale convert(String source) {
        return StringUtils.parseLocaleString(source);
    }
    
    public void init() {
        MappingBeanHelper.getConversionService().addConverter(this);
        MappingBeanHelper.getConversionService().addConverterFactory(new StringToLocaleConverterFactory());
    }
}
{code}

{code}
package example.repo;

import java.util.Locale;

import org.springframework.core.convert.converter.Converter;
import org.springframework.data.mapping.MappingBeanHelper;

public class LocaleToStringConverter implements Converter<Locale, String> {
    
    public String convert(Locale source) {
        return source.toString();
    }
    
    public void init() {
        MappingBeanHelper.getConversionService().addConverter(this);
    }
}
{code}

{code}
package example.repo;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import org.springframework.data.annotation.Id;
import org.springframework.data.document.mongodb.mapping.Document;

import com.google.code.morphia.annotations.Entity;

@Document(collection = ""examples"")
@Entity
public class Example implements Serializable {
    
    private static final long serialVersionUID = 2827176530940493389L;
    
    @Id
    protected String id;
    // protected Locale country;
    protected Map<Locale, String> names = new HashMap<Locale, String>();
    
    // public Locale getCountry() {
    // return country;
    // }
    
    @Override
    public boolean equals(Object obj) {
        Example ex = (Example) obj;
        return id.equals(ex.id) && names.equals(ex.names);
    }
    
    public String getId() {
        return id;
    }
    
    public Map<Locale, String> getNames() {
        return names;
    }
    
    // public void setCountry(Locale newCountry) {
    // country = newCountry;
    // }
    
    public void setId(String newId) {
        id = newId;
    }
    
    public void setNames(Map<Locale, String> newNames) {
        names = newNames;
    }
}
{code}

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans
    xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:context=""http://www.springframework.org/schema/context""
    xmlns:spring-data=""http://www.springframework.org/schema/data/mongo""
    xsi:schemaLocation=""
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd"">
    
    <spring-data:mongo host=""127.0.0.1"" port=""27017"" id=""mongo""/>
    
    <bean id=""mongoTemplate"" class=""org.springframework.data.document.mongodb.MongoTemplate"">
        <constructor-arg ref=""mongo""/>
        <constructor-arg value=""testdb""/>
        <constructor-arg>
            <spring-data:mapping-converter/>
        </constructor-arg>
    </bean>
    
    <spring-data:repositories base-package=""example.repo"" mongo-template-ref=""mongoTemplate"">
    </spring-data:repositories>
    
    <bean class=""example.repo.LocaleToStringConverter"" init-method=""init"" depends-on=""mongoTemplate""/>
    <bean class=""example.repo.StringToLocaleConverter"" init-method=""init"" depends-on=""mongoTemplate""/>
    
    <context:annotation-config/>
</beans>
{code}

{code}
package example.repo;

import java.util.Locale;
import java.util.Map;

import javax.inject.Inject;

import junit.framework.Assert;
import junit.framework.TestCase;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.data.document.mongodb.MongoTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = ""classpath:/testApplicationContext.xml"")
public class RepositoryTest extends TestCase {
    
    @Inject
    protected MongoTemplate template;
    @Inject
    protected ExampleService exampleService;
    
    public ExampleService getExampleService() {
        return exampleService;
    }
    
    public MongoTemplate getTemplate() {
        return template;
    }
    
    public void setExampleService(ExampleService newExampleService) {
        exampleService = newExampleService;
    }
    
    public void setTemplate(MongoTemplate newTemplate) {
        template = newTemplate;
    }
    
    @Before
    @Override
    public void setUp() throws Exception {
        template.dropCollection(""examples"");
        template.createCollection(""examples"");
        super.setUp();
    }
    
    @After
    @Override
    public void tearDown() throws Exception {
        template.dropCollection(""examples"");
        super.tearDown();
    }
    
    @Test
    public void test() {
        Example example = new Example();
        
        // example.setCountry(Locale.GERMANY);
        example.getNames().put(Locale.GERMANY, ""Deutschland"");
        example.getNames().put(Locale.US, ""Germany"");
        
        example = exampleService.save(example);
        
        for (Map.Entry<Locale, String> entry : exampleService.findAll().get(0).getNames().entrySet()) {
            System.out.println(entry.getKey().getCountry());
            System.out.println(entry.getValue());
        }
        
        Assert.assertEquals(example, exampleService.findAll().get(0));
    }
    
}
{code}

{code}
If i hadn't registered my own converter the following exception were thrown (even with ""native"" Converter Support from Spring-Converter-Framework for java.util.Locale):

org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from 'java.util.Locale' to 'java.lang.String'
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:181)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:133)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.writeMapInternal(MappingMongoConverter.java:511)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.writePropertyInternal(MappingMongoConverter.java:480)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter$4.doWithPersistentProperty(MappingMongoConverter.java:372)
	at org.springframework.data.mapping.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:189)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.write(MappingMongoConverter.java:358)
	at org.springframework.data.document.mongodb.convert.MappingMongoConverter.write(MappingMongoConverter.java:323)
	at org.springframework.data.document.mongodb.MongoTemplate.doSave(MongoTemplate.java:604)
	at org.springframework.data.document.mongodb.MongoTemplate.save(MongoTemplate.java:597)
	at org.springframework.data.document.mongodb.repository.SimpleMongoRepository.save(SimpleMongoRepository.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:355)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.invoke(RepositoryFactorySupport.java:336)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy16.save(Unknown Source)
	at example.repo.RepositoryTest.test(RepositoryTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{code}

I hope these information help you a little bit when trying to fix this.",,;07/May/11 10:28 AM;olivergierke;1800,Bugfix.;13/May/11 3:51 AM;olivergierke;1800,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,24/May/11 9:43 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18938/mylyn-context.zip,13/May/11 3:54 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18932/mylyn-context.zip,07/May/11 10:38 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18936/mylyn-context.zip,,,,,,,,,,,251164800,,,,,2011-05-07 10:38:22.187,29789,false,tmarshall(tmarshall),,,,0|i0505b:,29230,24212,,,,,,"07/May/11 10:38 AM;olivergierke;Applied a [fix|https://github.com/SpringSource/spring-data-document/commit/55ce0b8272c2e7ac11369ce55634bc6510353e20] that is available in the latest snapshot. The issue was that we are de-registering {{ObjectToStringConverter}} and {{ConversionServiceFactory.addDefaultConverters()}} does not register explicit converters from {{Boolean}}, {{Number}}, {{Locale}} and the like to {{String}}. I've filed a ticket (SPR-8306) against Spring covering that. Meanwhile we simply call {{toString()}} on simple key types, which is what {{ObjectToStringConverter}} would have done anyway.

Regarding the application of custom converters, M2 contained a bug (DATAMONGO-101), which should be fixed already.","13/May/11 3:04 AM;robert.stiller;I've tested the latest snapshot and it still does not work correctly. I've got the same error message when the Locale is the key of a map.

I think the problem is, that the type(class) of the key is not persisted and thus I've got my ""String is not convertible into Locale"" error.","13/May/11 3:54 AM;olivergierke;Thanks for trying the snapshot, Robert. We only tested writing the values and forgot testing the read side of things. I've just pushed a fix and deployed a snapshot. We're now using the conversion service to convert the map key into the type we discover from the generics information of the property. Feel free to give it another try and re-open the ticket in case you still find an issue with this.","17/May/11 9:29 AM;robert.stiller;Hi, i checked out the latest version from git, from the snapshot repository and even from the latest zip-artefact of the bamboo build report, but it still does not work - neither as key of a map nor as simple value - I've got still the same exception.

I looked at the sources and saw, that a specific converter is still removed in the constructor of MongoMappingConverter.java (Object to String). Is it possible, that this line of code could cause the exception?","17/May/11 9:44 AM;olivergierke;Have you had a look at the test cases? Right now you need to register an explicit converter to achieve e.g. correct {{Locale}} conversion. Unfortunately we have to remove the {{ObjectToStringConverter}} as otherwise the conversion service will answer {{true}} to every call to {{canConvert(…)}} with {{String}} as target type. In turn the default converter setup does not register explicit converters for some of the ""primitive"" types (SPR-8306).","17/May/11 11:09 AM;robert.stiller;No, I don't look at the testcases, but I will do and hopefully get rid of my exceptions :D
Thanks.","24/May/11 9:43 AM;olivergierke;After some discussion we decided to add a custom converter non-simple Mongo types affected by this issue ({{Locale}}, {{Character}}). You should not have the need to register a custom converter for {{Locale}} anymore.",,,,,,,,,,,,,,,,,
Support inheritance with Document mappings,DATAMONGO-128,40523,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,tim.dennison@gmail.com,tim.dennison@gmail.com,06/May/11 7:17 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,10/May/11 9:40 AM,1.0 M2,,,,,,,1.0 M3,,,,,Repository,,,,0,,,,,,,,"I would like Spring Data to support inheritance in order to persist domain classes of the same super type (interface or abstract class) to the same collection.  Upon querying, I would expect spring data to materialize the correct concrete implementation.

At a minimum, it would be nice to see the Document ""type"" stored along with the object.  Even better might be to support discriminators via  @DiscriminatorColumn/@DiscriminatorValue annotations :)
","windows 7, Java 6",;10/May/11 9:24 AM;olivergierke;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,10/May/11 9:40 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18931/mylyn-context.zip,,,,,,,,,,,,,252374400,,,,,2011-05-10 07:08:37.158,29822,false,tmarshall(tmarshall),,,,0|i050cn:,29263,24249,http://forum.springsource.org/showthread.php?t=108899,,,,,"09/May/11 8:06 AM;tim.dennison@gmail.com;Interestingly enough, I see that the [morphia|http://code.google.com/p/morphia] project includes the class name of the class annotated with @Entity by default. See [@Entity|http://code.google.com/p/morphia/wiki/EntityAnnotation].   ","10/May/11 7:08 AM;jbrisbin;This wouldn't fit all circumstances, though. What if I wanted to reconstitute this object in a Node.js application? The value of ""_class"" doesn't mean anything to me in that context.

If the problem is needing to know which subclass to instantiate for a given document, I'm not sure baking that information into the value document is the way to go for all cases. I'd hate to have to write a blog post that explains how my earlier blog post about the cross-platform nature of the library being an advantage is obsolete now and when you save a document using the Java language Mongo support, you need to load that document with the Java language Mongo support.

I implemented this feature in Riak using headers. I store the Java class name in a metadata header. Too bad MongoDB doesn't have the concept of metadata headers like Riak does, as that would be a perfect place for meta information about the document being stored. :)","10/May/11 9:40 AM;olivergierke;Fix is up. We now add a type discriminator field to the top-level document which gets considered whenever you're querying for a supertype of it or the type itself. It's still possible to query for an entirely different type though. The discriminator field should be regarded as type hint to clients reading the documents. We will add some intermediate mapping layer (see DATAMONGO-63) to allow adapting existing databases using other type discriminator keys and values.

On the repository side we still require the managed root object to carry the id property due to some internals. I've covered that issue in DATAMONGO-131. Should be easy to solve.",,,,,,,,,,,,,,,,,,,,,
Upgrade to QueryDsl 2.2.0-beta4,DATAMONGO-115,40429,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,03/May/11 1:14 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,03/May/11 4:06 AM,1.0 M2,,,,,,,1.0 M3,,,,,Core,,,,0,,,,,,,,"That version includes an improvement to treat not annotated classes as embedded ones as well. See [the ticket|https://bugs.launchpad.net/bugs/767024] in the Querydsl bug tracker.

",,"Updated commons, mongo and the music example.;03/May/11 3:58 AM;olivergierke;5400",,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,03/May/11 4:06 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18928/mylyn-context.zip,,,,,,,,,,,,,253065600,,,,,,28078,false,tmarshall(tmarshall),,,,0|i00ybb:,5604,6869,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NotNull/IsNotNull not implemented in MongoQueryCreator,DATAMONGO-113,40427,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,derekhardy,derekhardy,02/May/11 1:33 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,07/May/11 6:58 AM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,,0,,,,,,,,"When using the findByXYZNotNull or the findByIsNotNull in the repository query methods, the resulting logical query of 

{""$ne"" : null}

is not created.",,;07/May/11 6:58 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,07/May/11 6:58 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18930/mylyn-context.zip,,,,,,,,,,,,,252979200,,,,,2011-05-03 05:06:07.598,29825,false,tmarshall(tmarshall),,,,0|i050db:,29266,24253,http://forum.springsource.org/showthread.php?t=108665,,,,,"03/May/11 5:06 AM;thomas.risberg;I've added support for $ne to Criteria, so this issue can now be resolved.",,,,,,,,,,,,,,,,,,,,,,,
Add findById method to MongoTemplate.,DATAMONGO-108,40419,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,mark.pollack,mark.pollack,26/Apr/11 7:37 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,18/May/11 2:20 PM,1.0 M2,,,,,,,1.0 M3,,,,,,,,,0,,,,,,,,"Added methods to {{MongoTemplate}}, removed {{Criteria.whereId(…)}}.",,;18/May/11 2:19 PM;olivergierke;5400,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,252806400,,,,,,29805,false,tmarshall(tmarshall),,,,0|i0508v:,29246,24229,,,,,,"05/May/11 7:37 AM;mark.pollack;findById(String collectionName, Object id, Class targetClass)
findById(Class clazz, Object id)",,,,,,,,,,,,,,,,,,,,,,,
Explicit Converters only registered one way.,DATAMONGO-101,40409,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,stuartrexking,stuartrexking,21/Apr/11 6:23 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,27/Apr/11 5:55 AM,1.0 M2,,,,,,,1.0 M3,,,,,Mapping / Conversion,,,,0,,,,,,,,"Explicit Converters are only registered for one way conversion: Object -> DBObject.

I tested this using SimpleMongoConverter and MappingMongoConverter.",,;27/Apr/11 5:55 AM;olivergierke;9000,,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,,,,,,,,,,,,,27/Apr/11 5:55 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18929/mylyn-context.zip,,,,,,,,,,,,,254016000,,,,,,29827,true,tmarshall(tmarshall),,,,0|i050en:,29272,24264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Let repository namespace pickup the default mapping context bean and allow configuration,DATAMONGO-69,40339,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,22/Mar/11 11:38 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,23/Mar/11 2:47 AM,,,,,,,,1.0 M2,,,,,Repository,,,,0,,,,,,,,Currently the repository namespace neither picks up a potentially available {{mappingContext}} bean to configure the {{RepositoryFactoryBean}} nor does it allow to wire a custom one in.,,;23/Mar/11 2:46 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,23/Mar/11 2:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18919/mylyn-context.zip,,,,,,,,,,,,,256608000,,,,,,28082,false,tmarshall(tmarshall),,,,0|i00yc7:,5608,6873,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Converters to support use of a 'typeId' strategy to determine class to marshall/unmarshal from Mongo ,DATAMONGO-63,40251,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,17/Mar/11 2:49 PM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,26/Aug/11 11:27 AM,1.0 M2,,,,,,,1.0 M4,,,,,Mapping / Conversion,,,,1,,,,,,,,"Looking into some previous work might be useful.  In Spring AMQP there is

public interface ClassMapper {

	String getClassIdFieldName();
	
	String fromClass(Class<?> clazz);
	
	Class<?> toClass(String classId);
}

which is used by the JsonMessageConverter to support this pattern.  Look at DefaultClassMapper as well.",,;26/Aug/11 11:22 AM;olivergierke;13020,,,,,,,,0,0,13020,"9,223,372,036,854,775,807%",0,0,13020,,,,,,,,,,,,,,26/Aug/11 11:27 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18978/mylyn-context.zip,,,,,,,,,,,,,243043200,,,,,2011-08-26 11:27:18.467,28790,false,tmarshall(tmarshall),,,,0|i030av:,17591,17005,,,,,,"26/Aug/11 11:27 AM;olivergierke;Fixed and deployed to snapshot repository. Take a look at {{TypeMapper}}, {{DefaultTypeMapper}} and {{ConfigurableTypeMapper}}.",,,,,,,,,,,,,,,,,,,,,,,
Document @Query annotation for repositories,DATAMONGO-59,40383,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Complete,mark.pollack,olivergierke,olivergierke,10/Mar/11 12:03 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,06/Apr/11 10:26 PM,,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,We have an {{@Ouery}} annotation that allows to define the JSON query as well as the fields to be retrieved on repository methods. We should document that feature appropriately.,,Polished JavaDoc of @Query;29/Mar/11 11:04 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,257644800,,,,,,28085,false,tmarshall(tmarshall),,,,0|i00yd3:,5612,6877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor SimpleMongoConverter to take Converters instead of ConversionService,DATAMONGO-57,40391,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,10/Mar/11 12:28 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,17/Mar/11 7:17 AM,1.0 M1,,,,,,,1.0 M2,,,,,,,,,0,,,,,,,,"We could leverage the {{ConversionService}} a bit more if it didn't contain the generic {{ObjectToStringConverter}} that results in inaccurate results for {{ConversionService.canConvert(..., String.class)}} (because in the default configuration it always can).

To work around that issue we should setup our own configuration of {{GenericConversionService}} and rather allow users to register custom {{Converter}} implementations that would be used for type-to-DBObject marshaling and type-to-String marshaling (for simple-like-types, e.g. JodaTime {{LocalDate}}).",,;17/Mar/11 7:20 AM;olivergierke;7200,,,,,,,,10800,3600,7200,66%,10800,3600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,257731200,,,,,,28087,false,tmarshall(tmarshall),,,,0|i00ydj:,5614,6879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query methods in Mongo don't handle AND keyword correctly,DATAMONGO-49,40349,,Bug,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,02/Mar/11 12:20 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,02/Mar/11 2:19 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,"When triggering queries like
{code}
List<Person> findByLastnameLikeAndAgeBetween(String lastname, int from, int);
{code}
only the last criteria will be issued against Mongo.",,;02/Mar/11 2:19 AM;olivergierke;7080,,,,,,,,0,0,7080,"9,223,372,036,854,775,807%",0,0,7080,,,,,,,,,,,,,,02/Mar/11 2:19 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18921/mylyn-context.zip,,,,,,,,,,,,,258422400,,,,,,28093,false,tmarshall(tmarshall),,,,0|i00yev:,5620,6885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt new metadata API,DATAMONGO-47,40381,,Task,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Feb/11 4:41 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,25/Feb/11 5:10 AM,,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,,,;25/Feb/11 4:41 AM;olivergierke;7200,,,,,,,,,0,7200,,,0,7200,,DATACMNS-17,,,,,,,,,,,,25/Feb/11 4:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18924/mylyn-context.zip,,,,,,,,,,,,,258768000,,,,,,28094,false,tmarshall(tmarshall),,,,0|i00yf3:,5621,6886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add support for specifying attributes to entities, e.g., collection name, field names, etc.",DATAMONGO-40,40500,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,oshankershutterfly,oshankershutterfly,28/Jan/11 11:28 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,17/Mar/11 3:07 PM,,,,,,,,1.0 M2,,,,,Core,,,,1,,,,,,,,"Need to be able to specify the collection name for each repository. The collection name used for each entity should be specifiable as an annotation, e.g., the Table annotation.

Another important enabler for using spring-data-mongo in production code is to add a few annotations which have similar functionality to the @Reference, @Embedded etc. in Morphia, and for naming the fieldnames in the persistence store differently from the fieldnames used in the Java Entity. Of course these annotations should be consistent with JPA annotations, and should be a superset of JPA annotations.

See the thread http://forum.springsource.org/showthread.php?t=102127 in the Forum.",,;17/Mar/11 3:07 PM;olivergierke;9000,,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,,,,,,,,,,,,,17/Mar/11 3:08 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18927/mylyn-context.zip,,,,,,,,,,,,,259286400,,,,,,29852,true,tmarshall(tmarshall),,,,0|i050lz:,29305,24343,,,,,,19/Feb/11 5:56 PM;oshankershutterfly;See also the forum thread http://forum.springsource.org/showthread.php?p=346693#post346693 where the hard-coding of the id field is discussed.,,,,,,,,,,,,,,,,,,,,,,,
Validation support to MongoTemplate,DATAMONGO-36,40354,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,20/Jan/11 8:03 AM,25/Mar/13 9:30 AM,10/May/19 2:36 AM,09/Sep/12 3:00 AM,1.0 M2,,,,,,,1.1 M1,,,,,Core,,,,1,,,,,,,,"Spring 3.0 supports JSR-303.  If  

<bean id=""validator"" class=""org.springframework.validation.beanvalidation.LocalValidatorFactoryBean""/>

is defined, we can ask the container for the validator (is there an Aware interface?) and then perform validation within MongoTemplate methods that take a POJO for Create, update, or delete operations.
",,;27/Apr/12 6:41 AM;olivergierke;4800,,,,,,,,0,0,4800,"9,223,372,036,854,775,807%",0,0,4800,,,,,,,,,,,,,,27/Apr/12 6:43 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19621/mylyn-context.zip,,,,,,,,,,,,,210211200,,,,,2012-04-23 21:24:48.351,28258,false,tmarshall(tmarshall),,,,0|i02ak7:,13420,13156,,,,,,22/Mar/11 11:05 AM;mark.pollack;This can be integrated into the eventing support in MongoTemplate,"23/Apr/12 12:22 PM;mark.pollack;Mr. Walkowiak has provided the glue code for this

http://maciejwalkowiak.pl/blog/2012/04/20/jsr-303-validation-with-spring-data-mongodb/
",23/Apr/12 9:24 PM;maciej.walkowiak;Pull request waiting for approval: https://github.com/SpringSource/spring-data-mongodb/pull/2,27/Apr/12 6:43 AM;olivergierke;Fixed by integrating Maciej's contribution. We now auto detect the presence of {{javax.validation}} API on the classpath and register an approrpiate {{Validator}} as well as an event listener that triggers validaton right before persisting the entities.,"07/Sep/12 5:09 AM;nisabek;Hi,

I cannot access this feature using latest - 1.0.2 GA version as it contains spring-mongo-1.0.xsd instead of needed spring-mongo-1.1.xsd.

Thanks in advance.
Regards,
Nune",09/Sep/12 3:00 AM;olivergierke;That's right as the support will was introduced in the 1.1.x timeline and will not be back-ported to the 1.0.x one. So you have to use the latest 1.1 version to get access to it. Please refrain from re-opening tickets that have been closed against an already released version as the ticket has already made it into the changelog already. Create a new ticket in case needed then.,,,,,,,,,,,,,,,,,,
Add support for Between keyword for repository query methods,DATAMONGO-31,40382,,Improvement,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,16/Dec/10 6:57 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,21/Dec/10 5:45 AM,,,,,,,,1.0 M1,,,,,Core,,,,0,,,,,,,,"Currently one cannot use {{Between}} as keyword inside query method names. It would be cool if we allowed something like this:

{code}
List<Person> findByAgeBetween(int from, int to);
{code}

This should logically result in:

{code}
find({""age"" : {""$gte"" : from, ""$lte"" : to}})
{code}",,;16/Dec/10 7:03 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,264902400,,,,,,28101,false,tmarshall(tmarshall),,,,0|i00ygn:,5628,6893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow use of @Query annotation to define queries,DATAMONGO-24,40304,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,03/Dec/10 12:29 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,21/Feb/11 10:11 AM,,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,As queries a defined using a JSON syntax in MongoDB we could allow usage of {{Query}} annotation on query methods.,,;16/Feb/11 11:16 AM;olivergierke;7200,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,21/Feb/11 10:11 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18920/mylyn-context.zip,,,,,,,,,,,,,266025600,,,,,,28104,false,tmarshall(tmarshall),,,,0|i00yhb:,5631,6896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow usage of pagination and sorting with repositories,DATAMONGO-22,40330,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,olivergierke,olivergierke,02/Dec/10 11:47 PM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,03/Dec/10 12:06 PM,,,,,,,,1.0 M1,,,,,Core,,,,0,,,,,,,,We should add sorting and pagination behaviour to the base repository implementation as well as to the execution of query methods.,,;03/Dec/10 12:06 PM;olivergierke;10800,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,03/Dec/10 12:06 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18922/mylyn-context.zip,,,,,,,,,,,,,266112000,,,,,,28105,false,tmarshall(tmarshall),,,,0|i00yhj:,5632,6897,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add generic repository implementation for MongoDB,DATAMONGO-17,40364,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Major,Fixed,olivergierke,olivergierke,olivergierke,02/Dec/10 9:37 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,02/Dec/10 5:07 PM,,,,,,,,1.0 M1,,,,,Core,,,,0,,,,,,,,We should add a repository implementation to execute criteria queries that are derived from query methods.,,;02/Dec/10 5:07 PM;olivergierke;14400,Added support for 'Like' keyword in finders.;03/Dec/10 12:28 AM;olivergierke;1800,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,266112000,,,,,,28107,false,tmarshall(tmarshall),,,,0|i00yhz:,5634,6899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration with GridFS features,DATAMONGO-6,40286,,New Feature,Closed,DATAMONGO,Spring Data MongoDB,software,cstrobl,,http://projects.spring.io/spring-data-mongodb,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,01/Dec/10 11:00 AM,25/Mar/13 9:31 AM,10/May/19 2:36 AM,01/Feb/12 1:53 AM,,,,,,,,1.1 M1,,,,,Core,,,,8,,,,,,,,"Provide Spring Resource abstraction for GridFS.
Helper class around common use cases.

File upload servlet?",,;19/Oct/11 6:19 AM;olivergierke;960,,,,,,,,0,0,960,"9,223,372,036,854,775,807%",0,0,960,,,,,,,,,,,,,,,,,,,,,,,,,,,229392000,,,,,2011-04-05 09:22:34.989,27824,false,tmarshall(tmarshall),,,,0|i00wwn:,5376,6670,,,,,,05/Apr/11 9:22 AM;mas;fast content search would be great,"05/Apr/11 9:29 AM;mark.pollack;can you elaborate a bit? Something like this http://nosql.mypopescu.com/post/383437318/integrating-mongodb-with-solr ? 

I believe that mongodb itself will be offering some text search feature in the future but that might not be around gridfs....","05/Apr/11 10:26 AM;mas;Since GridFS is dealing with binary data it certainly makes not sense for all kind of data.

I suggest that there should be standard functionality for text files (text, xml, html,..)
and the possibility to add ""adapters"" for custom data.

This should probably be done by indexing the binary content. The ""adapter"" should be 
able to add custom indexes. For example if you have a pdf document you could implement a
custom adapter that opens the pdf and adds the text of the pdf to the index.

On the other hand you could also have an zip archive that has some content you are looking for.
For the standard functionality the mimetype (GridFS is aware of that) should be enough (text, xml,..) to be able to determine how the index should be created.

For zip files the mimetype is not enough. Imagine you have different kinds of zip archives.
One may contain images, another may have word or openoffice documents or even a mix.
So my idea is that you can add such a custom adapter depending on the mimetype and a filepattern.

iamges_001.zip -> dont index
documents_001.zip -> extract zip file, add index for pdf documents.

Something like that. I think is is a common usecase and it would be really great to have that. 

Using Lucene i would create that index in order to retrieve the id of the file/data and then get that file/data. But i didn't evaluate which technologie i would use for that and actually i haven't use
Lucene. As far as i know Solr is a full text search server and i would not recommend that because in my opinion a server is not a must have. 

I hope this was understandable.","05/Apr/11 10:33 AM;mas;I just had another idea that would be nice to have, but is probably hard: MimeType Sniffing for InputStreams that you can store.",29/Nov/11 7:25 AM;olivergierke;Current draft is at [this GitHub branch|https://github.com/SpringSource/spring-data-mongodb/tree/DATADOC-6-gridfs]. Feedback is welcome!,01/Feb/12 1:53 AM;olivergierke;Just merged the initial draft into the master branch and deployed a snapshot build. No integration with any indexing support yet. We might want to create a separate ticket for that if there's demand.,,,,,,,,,,,,,,,,,,
LockModePopulatingMethodInterceptor leak causes OutOfMemoryError: PermGen space,DATAJPA-268,46005,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,enrique.dacostacambio,enrique.dacostacambio,06/Nov/12 4:11 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,06/Nov/12 6:05 AM,1.1.1,1.1.2,1.1 GA,1.2 GA,,,,1.2.1,1.3 GA,,,,,,,,0,,,,,,,,"In cases where locking is not externally set (like when invoking it form a non @Transactional call stack) {{org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor.LockModePopulatingMethodIntercceptor.invoke(MethodInvocation)}} is registering the locking mode itself (with the target method as key) using {{org.springframework.transaction.support.TransactionSynchronizationManager.bindResource(Object, Object)}}, but is not calling {{org.springframework.transaction.support.TransactionSynchronizationManager#unbindResource(Object)}} afterwards.

In environments where the classloaders are discarded but the threads are reused, like in any application or web server with a service thread pool and hot redeployments, the VM ends up running out of PermGen space since {@link java.lang.Thread#threadLocals} will keep a strong reference to the bound method keeping alive the otherwise unused class loader and all its, classes and objects graph.

Sorry about the test case, it was written in a rush.

Heap dump can be found here (18Mb): https://dl.dropbox.com/u/1249691/LockModeRepositoryPostProcessor_LockModePopulatingMethodIntercceptorMemoryLeakTest.zip","Commonly on Application or Web Servers, but reproducible in any scenario.",;06/Nov/12 5:36 AM;olivergierke;900,,,,,,,,28800,28800,900,3%,28800,28800,900,,,,,,,,,,,,,,06/Nov/12 4:13 AM;enrique.dacostacambio;LockModeRepositoryPostProcessor_LockModePopulatingMethodIntercceptorMemoryLeakTest.java;https://jira.spring.io/secure/attachment/20604/LockModeRepositoryPostProcessor_LockModePopulatingMethodIntercceptorMemoryLeakTest.java,,,,,,,,,,,,,205200000,,,,,2012-11-06 06:05:50.958,32896,false,tmarshall(tmarshall),,,,0|i05y0v:,34718,32598,,,,,,"06/Nov/12 6:05 AM;olivergierke;Fixed by adding a {{try/finally}} block to release the resource. Available in the snapshot repo (1.3.0.BUILD-SNAPSHOT), feel free to give it a try.",,,,,,,,,,,,,,,,,,,,,,,
Calls on Repository Methods with Pageable parameters fail when using horizontal partitioning (eclipseLink),DATAJPA-257,45510,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,laures,laures,21/Sep/12 1:20 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,09/Oct/12 12:24 AM,1.1.2,,,,,,,1.2 GA,,,,,,,,,0,,,,,,,,"When a Repository method with a Pageable parameter is called this call results in a count query for the entity. If the entity is partitioned EclipseLink (imho every jpa provider) will fire this query on every node associated with the partitioned entity and union the result.

This means the result for the count is no longer one row but multiple rows which causes an exception.

Proposed Fix:

add a flag that can be configured per entity or per call (on the pageable?) that removes the count query.

alternatively remove the count query as it is very expensive anyway (at least on tables with a lot of rows, which is one of the main use cases for pageable requests).

Associated Classes:
org.springframework.data.jpa.repository.support.SimpleJpaRepository
","EclipseLink, Spring-Data-JPA. Horizontal Partitioning",;21/Sep/12 3:15 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,21/Sep/12 5:25 AM;laures;partitioning-testcase.zip;https://jira.spring.io/secure/attachment/20515/partitioning-testcase.zip,21/Sep/12 6:34 AM;olivergierke;partitioning.zip;https://jira.spring.io/secure/attachment/20516/partitioning.zip,,,,,,,,,,,,207705600,,,,,2012-09-21 01:53:15.749,32431,false,tmarshall(tmarshall),,,,0|i05v7z:,34264,32131,,,,,,"21/Sep/12 1:53 AM;olivergierke;There is already more advanced count handling in {{PagedExecution}} (which was originally implemented to deal with {{group-by}} clauses in manually defined query methods). We could actually re-use this special handling for {{findAll(…)}} as well. What exception are you seeing exactly? One in EclipseLink or on the Spring Data side?

Dropping the count query entirely is not an option as we need to find out the total elements to produce the necessary metadata for a {{Page}} instance (e.g. to calculate the y in ""page x of y"").","21/Sep/12 2:19 AM;laures;eclipse link throws an exception because there are multiple results and getSingleResult was called.

{code}[EL Fine]: sql: 2012-09-20 17:34:56.783--ServerSession(2115822880)--Connection(1286812198)--Thread(Thread[qtp698765276-22,5,main])--SELECT COUNT(ID) FROM GAMEINSTANCEACCOUNTAUTHENTICATION
[EL Fine]: sql: 2012-09-20 17:34:56.786--ServerSession(2115822880)--Connection(1841423104)--Thread(Thread[qtp698765276-22,5,main])--SELECT COUNT(ID) FROM GAMEINSTANCEACCOUNTAUTHENTICATION
17:34:56.798 [qtp698765276-22] WARN  o.e.jetty.servlet.ServletHandler - /accounts
org.springframework.dao.IncorrectResultSizeDataAccessException: More than one result was returned from Query.getSingleResult(); nested exception is javax.persistence.NonUniqueResultException: More than one result was returned from Query.getSingleResult()
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:312) ~[spring-orm-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.orm.jpa.DefaultJpaDialect.translateExceptionIfPossible(DefaultJpaDialect.java:120) ~[spring-orm-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:58) ~[spring-tx-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213) ~[spring-tx-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:163) ~[spring-tx-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:91) ~[spring-data-jpa-1.1.2.RELEASE.jar:na]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at $Proxy26.findAll(Unknown Source) ~[na:na]
	at net.bigpoint.bpplatform.player.auth.service.GameInstanceAccountAuthenticationService.findAll(GameInstanceAccountAuthenticationService.java:40) ~[classes/:na]
	at net.bigpoint.bpplatform.player.auth.rest.GameInstanceAccountAuthenticationController.getList(GameInstanceAccountAuthenticationController.java:65) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_05]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_05]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_05]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_05]
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:213) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:126) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:96) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:617) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:578) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778) ~[spring-webmvc-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735) ~[javax.servlet-3.0.0.v201112011016.jar:na]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) ~[javax.servlet-3.0.0.v201112011016.jar:na]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:648) ~[jetty-servlet-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1336) ~[jetty-servlet-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160) ~[spring-security-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307) ~[jetty-servlet-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453) [jetty-servlet-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:559) [jetty-security-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382) [jetty-servlet-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.Server.handle(Server.java:365) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635) [jetty-http-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235) [jetty-http-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) [jetty-server-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627) [jetty-io-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51) [jetty-io-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) [jetty-util-8.1.7.v20120910.jar:8.1.7.v20120910]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) [jetty-util-8.1.7.v20120910.jar:8.1.7.v20120910]
	at java.lang.Thread.run(Thread.java:722) [na:1.7.0_05]
Caused by: javax.persistence.NonUniqueResultException: More than one result was returned from Query.getSingleResult()
	at org.eclipse.persistence.internal.jpa.QueryImpl.throwNonUniqueResultException(QueryImpl.java:870) ~[eclipselink-2.4.0.jar:2.4.0.v20120608-r11652]
	at org.eclipse.persistence.internal.jpa.QueryImpl.getSingleResult(QueryImpl.java:450) ~[eclipselink-2.4.0.jar:2.4.0.v20120608-r11652]
	at org.eclipse.persistence.internal.jpa.EJBQueryImpl.getSingleResult(EJBQueryImpl.java:382) ~[eclipselink-2.4.0.jar:2.4.0.v20120608-r11652]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:405) ~[spring-data-jpa-1.1.2.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:304) ~[spring-data-jpa-1.1.2.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:273) ~[spring-data-jpa-1.1.2.RELEASE.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_05]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_05]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_05]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_05]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334) ~[spring-data-commons-core-1.3.2.RELEASE.jar:na]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319) ~[spring-data-commons-core-1.3.2.RELEASE.jar:na]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110) ~[spring-tx-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172) ~[spring-aop-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155) ~[spring-tx-3.1.2.RELEASE.jar:3.1.2.RELEASE]
	... 68 common frames omitted
{code}","21/Sep/12 2:34 AM;olivergierke;Okay, that seems to indicate applying the behavior we already have in {{PagedExecution}} would make sense in {{findAll(…)}} as well. As it's quite hard to automatically test that, how quick could you give a snapshot a try in case I get the fix into the repo?","21/Sep/12 2:38 AM;laures;pretty fast. just need to change some code back from the findAll(spec,sort) back to findall(spec,pageable)","21/Sep/12 3:17 AM;olivergierke;I've just pushed potential fixes for this to [master|https://github.com/SpringSource/spring-data-jpa/commit/81ebe37725385ec8d008a1f4bb3e2cb0558ef93e] as well as the [1.1.x branch|https://github.com/SpringSource/spring-data-jpa/commit/4406420c7706318242cca341caca10135f3b456c] applying the same behavior as in {{PagedExecution}}: using {{getResultList}} use the first value returned if only one result gets returned or the number of returned elements if multiple ones were returned. Not sure if the latter is correct for your case as I don't know how the result EclipseLink provides is actually structured.

If the fix doesn't work for you I'd be interested what you get back as result in {{QueryUtils.executeCountQuery(…)}}. Snapshots are deployed for both 1.1.3.BUILD-SNAPSHOT as well as 1.2.0.BUILD-SNAPSHOT. Make sure you use the new Artifactory snapshot repo at http://repo.springsource.org/libs-snapshot.","21/Sep/12 3:27 AM;laures;eclipse project with one hash partitioned entity and a small test case.

exception is thrown in the testFindAllPaged test.

will try your snapshot asap","21/Sep/12 5:25 AM;laures;tested your snapshot. better but not perfect. 

as you guessed simply counting the rows does not work. the numbers should be added together for the total count.

currently the method works if the pageable starts with page 0 but for later pages the result is always an empty iterable (because the count result is lower then the calulated limit based on the pageable). I added test methods to my example project.

(there is another side effect from partitioning: the result set for findAll(...) has up to: pagesize * <number_of_partitions> rows. but this is unsuprising)","21/Sep/12 6:34 AM;olivergierke;I've changed the behavior of the code to sum up the returned elements. I've also adapted your test cases slightly to verify more of the returned {{Page}} instance.

Do you know what the reasoning is for EclipseLink to return 20 elements if you explicitly ask for 10? I mean I perfectly understand the implementation (2 partitions, 10 from each) but this essentially renders the {{setMaxResults(…)}} methods broken as it doesn't work as expected as the JPA spec clearly states that it defines how many results shall be returned. It also renders {{setFirstResult(…)}} to work in a different way than expected, as it now acts as ""set first result of the partition"". Summarizing, this completely breaks any paginated access to the data as although you have 1000 elements you cannot access the start of the second half by definining {{new PageRequest(5, 10)}} as this definition is out of range due to the EclipseLink re-definition of the semantics of the method call. It's pretty much implementation details leaking into the clients in the worst possible manner (not causing failure but simply returning stuff other than defined).

I strongly suggest filing a ticket against EclipseLink to at least discuss this issue.",21/Sep/12 7:47 AM;laures;you are right. the intended entities might still be part of the returned result set (depending on the partitioning mechanism) but you can never know which one they are.,09/Oct/12 12:24 AM;olivergierke;I'll mark this as fixed for now to get the stuff into the upcoming releases. We now calculate the total correctly. However I still think the feature is half broken due to the way EclipseLink handles the calls necessary for result set slicing.,,,,,,,,,,,,,,
@Query(nativeQuery=true) can't return List<Integer>,DATAJPA-207,43187,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,phoenix0619,phoenix0619,04/May/12 2:27 AM,25/Mar/13 9:28 AM,10/May/19 2:36 AM,15/May/12 9:08 AM,1.1 RC1,,,,,,,1.1 GA,,,,,Core,,,,0,NativeQuery,,,,,,,"{code:java}
@Query(value = ""select t.userId from tbl_robot_info t"", nativeQuery = true)
public List<Integer> getRobotIdList();
{code}

This will throw {{org.hibernate.MappingException: Unknown entity: java.lang.Integer}}.
But I do need get the userId list only, instead of fetch all columns of tbl_robot_info.

Maybe we can {{createNativeQuery(…)}} without {{resultClass}} when the returnType is not an entity?",,;15/May/12 9:08 AM;olivergierke;6000,,,,,,,,0,0,6000,"9,223,372,036,854,775,807%",0,0,6000,,,,,,,,,,,,,,15/May/12 9:08 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19649/mylyn-context.zip,,,,,,,,,,,,,220924800,,,,,2012-05-09 02:18:27.194,30606,true,tmarshall(tmarshall),,,,0|i05jvr:,32427,30306,,,,,,09/May/12 2:18 AM;tailuchen;I encountered the same problem. maybe @query need more parameters when using NativeQuery?,,,,,,,,,,,,,,,,,,,,,,,
JpaQueryExecution started to throw NullPointerException if pageable is null,DATAJPA-201,43087,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,uthark,uthark,25/Apr/12 1:42 AM,25/Mar/13 9:28 AM,10/May/19 2:36 AM,27/Apr/12 9:47 AM,1.1 RC1,,,,,,,1.1 GA,,,,,Core,,,,0,,,,,,,,"In version 1.1.0.M1 it was possible to pass null for parameter pageable.

Now JpaQueryExecution throws NullPointerException.

java.lang.NullPointerException
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$PagedExecution.doExecute(JpaQueryExecution.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:56)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:95)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:85)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)",,;26/Apr/12 10:25 AM;olivergierke;900,;27/Apr/12 9:47 AM;olivergierke;1980,,,,,,,,0,2880,,,0,2880,,,,,,,,,,,,,,27/Apr/12 12:42 AM;uthark;DATAJPA-201.testcase.patch;https://jira.spring.io/secure/attachment/19620/DATAJPA-201.testcase.patch,27/Apr/12 9:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19623/mylyn-context.zip,26/Apr/12 10:26 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19617/mylyn-context.zip,,,,,,,,,,,221875200,,,,,2012-04-26 10:26:42.618,30509,false,tmarshall(tmarshall),,,,0|i05ja7:,32330,30209,,,,,,26/Apr/12 10:26 AM;olivergierke;I've just tried to reproduce this adding another [test case|https://github.com/SpringSource/spring-data-jpa/commit/9c20aff99dd8bb984d56bf0fa58a51d542548f8d] but fail to see a {{NullPointerException}}. Would you mind having a look in how far the invoked methods differ from the one you defined?,"27/Apr/12 12:42 AM;uthark;I reproduced the issue.

See attached patch with testcase.
","27/Apr/12 12:49 AM;olivergierke;Sorry, stupid me. The test case I added wasn't executed due to the missing {{@Test}} annotation. Activating the test really breaks it. I'll have a look. Thanks for the additional effort!",27/Apr/12 12:51 AM;uthark;It happens. ,"27/Apr/12 9:47 AM;olivergierke;{quote}
The optimization for DATAJPA-124 introduced a {{NullPointerException}} being thrown if the {{Pageable}} instance handed to a paging query was null. Added a guard to handle this situation correctly. Unfortunately had to disable the test case for EclipseLink as the bug with HSQL still exists.
{quote}",,,,,,,,,,,,,,,,,,,
Support Before and After keywords for query creation,DATAJPA-188,42882,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,09/Apr/12 9:25 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,10/Apr/12 9:27 AM,,,,,,,,1.1 GA,,,,,Core,,,,0,,,,,,,,,,;10/Apr/12 9:27 AM;olivergierke;2700,,,,,,,,,0,2700,,,0,2700,,DATACMNS-141,,,,,,,,,,,,10/Apr/12 9:27 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19573/mylyn-context.zip,,,,,,,,,,,,,223430400,,,,,,30304,false,tmarshall(tmarshall),,,,0|i05i0f:,32124,30004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid count query generated when using Pageable and NamedQuery with existing order by,DATAJPA-142,41360,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,nugs,nugs,16/Dec/11 4:11 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,11/Jan/12 6:16 AM,1.0.2,,,,,,,1.1 RC1,,,,,Core,,,,0,,,,,,,,"Taking:

{code}
@NamedQuery(name = ""Test.findQuery"", query = ""from Test te where te.name like ?1 order by te.name desc"")
{code}

And executing using:

{code}
repository.findQuery(name, new PageRequest(0, 5));
{code}

Results in:

{code}
org.springframework.orm.hibernate3.HibernateJdbcException: 
JDBC exception on Hibernate data access: 
SQLException for SQL [select count(test0_.id) as col_0_0_ from test test0_ where test0_.name=? order by test0_.name desc]; 
SQL state [null]; 
error code [0]; could not execute query; 
nested exception is org.hibernate.exception.GenericJDBCException: could not execute query...
{code}

I'm in 2 minds whether this is actually ""correct"" behaviour and whether there can be a more friendly/elegant way of warning or erroring out upfront if pageable requests are made on a named query with ordering etc. or whether the count query should be amended to exclude the order by (though there are probably a myriad of edge case scenarios that would then need to be catered for.)

Or is it just a case of 'caveat emptor' when mapping to a named query and using pageable finders? I'd hope there was some middle ground!","Hibernate 3.8.6-Final
Spring 3.1.0",;11/Jan/12 6:14 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,11/Jan/12 6:16 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19293/mylyn-context.zip,,,,,,,,,,,,,231120000,,,,,2011-12-19 09:28:03.203,28692,false,tmarshall(tmarshall),,,,0|i02uvj:,16711,15726,,,,,,16/Dec/11 4:14 AM;nugs;Note: It's only when the findQuery has a return type of 'Page<T>' as that's when the additional count() query is mapped in.,"19/Dec/11 9:28 AM;olivergierke;The workaround for problem is simply using {{@Query}} at the moment as you can specify a dedicated {{countQuery}} there if necessary. So you'd have to define bothe the actual query plus the count query inside the {{@Query}} annotation. We could inspect a potentially declared {{countQuery}} inside an {{@Query}} annotation as well but that would mean you have to mix configuration styles witch is a bit of problematic I think. So I generally see two options: 

# provide a {{countQueryName}} attribute ind {{@Query}} one could use to point to a named query to be used as count query. This would probably still leave you with a slight duplication but at least allows to stick with one configuration style
# manipulate the extracted named query even more than we currently do already and throw away order by clauses

I'd prefer the first way as the second one opens up quite a few potential issues due to the gazillion ways you can write a query and safely generating the count query from the original one (stripping away the {{order by}} clause. We'd probably have to take a deeper look at the query language specification then.","20/Dec/11 12:07 AM;nugs;I agree - I think 1 would be preferable and a lot cleaner (and less error prone) than query manipulation.

Additionally - can we better advise the exception output to aid developers? If the framework fails to execute the generated count query - let the developer know (as part of the exception message) they can specify a dedicated count query which could resolve the issue for them?","20/Dec/11 3:51 AM;olivergierke;Okay, I'll strick with the additional attribute and a default of {{$domainClass.$methodName.count}}. This allows simply defining the additional query in JPA specific configuration (annotations or {{orm.xml}}) without even annotating the method. SCheduling for 1.1.RC1.","11/Jan/12 6:16 AM;olivergierke;Implemented and deployed into 1.1.0.BUILD-SNAPSHOT.


{quote}
DATAJPA-142 - Allow using a NamedQuery for count queries in pagination.

We will now prefer a declared NamedQuery for count queries instead of deriving it from the actual NamedQuery under the following conditions:

- by default a query named ${namedQueryName}.count exists
- the name of the NamedQuery to be used is defined in @Query(countQueryName = ""…"")

Note that a potential reconfiguration of the NamedQuery name will be taken into account for the according count query name to assure symmetry.
{quote}

{code:java}
Page<User> findByLastname(String lastname, Pageable pageable)
NamedQuery name: User.findByLastname
Count NamedQuery name: User.findByLastname.count

@Query(name = ""Foo.bar"")
Page<User> findByLastname(String lastname, Pageable pageable)
NamedQuery name: Foo.bar
Count NamedQuery name: Foo.bar.count

@Query(countName = ""Foo.bar.count"")
Page<User> findByLastname(String lastname, Pageable pageable)
NamedQuery name: User.findByLastname
Count NamedQuery name: Foo.bar.count

@Query(name = ""Foo.bar"", countName = ""something"")
Page<User> findByLastname(String lastname, Pageable pageable)
NamedQuery name: Foo.bar
Count NamedQuery name: something
{code}",,,,,,,,,,,,,,,,,,,
JpaMetamodelEntityInformation cannot deal with mapped superclasses,DATAJPA-141,41319,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,14/Dec/11 12:30 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,15/Dec/11 8:29 AM,1.0.2,1.1 M1,,,,,,1.1 RC1,,,,,Core,,,,0,,,,,,,,Currently repository interfaces cannot be used with a {{@MappedSuperclass}} annotated JPA entity class as we try to lookup an {{EntityType}} from the {{EntityManager}}'s {{Metamodel}} which {{MappedSuperclass}} aren't. We should rather use {{….managedType(…)}} and see if it implements {{IdentitifiedType}} to look for id information.,,;15/Dec/11 8:29 AM;olivergierke;3720,,,,,,,,0,0,3720,"9,223,372,036,854,775,807%",0,0,3720,,,,,,,,,,,,,,15/Dec/11 8:29 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19223/mylyn-context.zip,,,,,,,,,,,,,233452800,,,,,,28651,false,tmarshall(tmarshall),,,,0|i02u6v:,16600,15619,,,,,,15/Dec/11 8:29 AM;olivergierke;Fixed. Unfortunately the fix doesn't work with Hibernate due to a bug in it's impementation of {{Metamodel}} which does not regard {{@MappedSuperclass}} annotated classes although specified. See the according [bug report|https://hibernate.onjira.com/browse/HHH-6896] for details.,,,,,,,,,,,,,,,,,,,,,,,
Release 1.0.2.RELEASE,DATAJPA-133,41179,,Task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,olivergierke,olivergierke,06/Dec/11 12:43 PM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,06/Dec/11 2:20 PM,,,,,,,,1.0.2,,,,,Infrastructure,,,,0,,,,,,,,,,;06/Dec/11 2:21 PM;olivergierke;5400,,,,,,,,,,5400,,,,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,234230400,,,,,,28508,false,tmarshall(tmarshall),,,,0|i02qsn:,16050,15156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow customization of NamedQuery to be used in @Query annotation,DATAJPA-129,41152,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,02/Dec/11 4:06 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,02/Dec/11 4:34 PM,,,,,,,,1.1 RC1,,,,,Core,,,,0,,,,,,,,Currently named queries are looked up by a naming convention. We could allow users to define the name manually by declaring an attribute in the {{@Query}} annotation.,,;02/Dec/11 4:33 PM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,02/Dec/11 4:34 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19178/mylyn-context.zip,,,,,,,,,,,,,234576000,,,,,,28481,false,tmarshall(tmarshall),,,,0|i02p5b:,15783,14960,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@OneToOne mappings in AbstractAuditable should rather be @ManyToOne ones,DATAJPA-120,40636,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,31/Oct/11 9:53 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,02/Dec/11 8:43 AM,1.0.1,1.1 M1,,,,,,1.0.2,1.1 RC1,,,,Core,,,,0,,,,,,,,,,;02/Dec/11 8:43 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,02/Dec/11 8:43 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19176/mylyn-context.zip,,,,,,,,,,,,,237340800,,,,,,27945,false,tmarshall(tmarshall),,,,0|i00nmn:,3873,5228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NoSuchMethodError when a BooleanBuilder is passed as an argument to findAll method,DATAJPA-115,40154,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,skram,skram,13/Oct/11 8:41 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,14/Oct/11 5:41 AM,1.0.1,1.1 M1,,,,,,1.0.2,1.1 RC1,,,,Core,,,,0,BooleanBuilder,findAll,JPA,NoSuchMethodError,QueryDSL,,,"I have a Jpa repository that utilizes QueryDSL's fluent API:

{code:title=IUserRepository.java|borderStyle=solid}
public interface IUserRepository extends JpaRepository<User, Long>, QueryDslPredicateExecutor<User>
{code}

Then I have a service that reads records from the repository via the findAll() method. I have a requirement that
the fields must be dynamic and the records are pageable:

{code:title=UserService.java|borderStyle=solid}
@Service
@Transactional
public class UserService implements IUserService {
	
	@Autowired
	private IUserRepository userRepository;
	
	@Autowired
	private EntityManagerFactory emf;

	@Override
	public Page<User> readFromRepository(String username, Pageable page) {
		
		PathBuilder<User> entityPath = new PathBuilder<User>(User.class, ""user"");
		StringPath path = entityPath.get(new StringPath(""username""));
		BooleanExpression hasUsername = path.eq(username);
	
		BooleanBuilder builder = new BooleanBuilder();
		builder.and(hasUsername);
		
		return userRepository.findAll(builder, page);
	}
...
}
{code}

However an exception is thrown whenever that method is called:
{noformat} 
java.lang.NoSuchMethodError: com.mysema.query.jpa.JPQLQuery.offset(J)Lcom/mysema/query/Query;
	at org.springframework.data.jpa.repository.support.QueryDslJpaRepository.applyPagination(QueryDslJpaRepository.java:168)
	at org.springframework.data.jpa.repository.support.QueryDslJpaRepository.findAll(QueryDslJpaRepository.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:322)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy24.findAll(Unknown Source)
	at org.demo.service.UserService.readFromRepository(UserService.java:43)
{noformat}

I tried digging into the code and the source and I can't find the reasons why. The internal implementation doesn't show any missing methods. I have checked my jars but I didn't find any old dependencies. I tested my project both at home and at work (Ubuntu, Windows, proxied, non-proxied environments). But I keep getting the same exception.

When I check the following:
{noformat}
org.springframework.data.jpa.repository.support.QueryDslJpaRepository.applyPagination(QueryDslJpaRepository.java:168)
{noformat}

{code:title=QueryDslJpaRepository.java|borderStyle=solid}
	protected JPQLQuery applyPagination(JPQLQuery query, Pageable pageable) {

		if (pageable == null) {
			return query;
		}

		query.offset(pageable.getOffset());
		query.limit(pageable.getPageSize());

		return applySorting(query, pageable.getSort());
	}
{code}


As a workaround, I did the following code:
{code:title=UserService.java|borderStyle=solid}
@Service
@Transactional
public class UserService implements IUserService {
	
	@Autowired
	private IUserRepository userRepository;
	
	@Autowired
	private EntityManagerFactory emf;

...
	@Override
	public List<User> readFromEntityManager(String username, Pageable page) {
		
		PathBuilder<User> entityPath = new PathBuilder<User>(User.class, ""user"");
		StringPath path = entityPath.get(new StringPath(""username""));
		BooleanExpression hasUsername = path.ne(username);
		
		BooleanBuilder builder = new BooleanBuilder();
		builder.and(hasUsername);
		
		EntityManager em = emf.createEntityManager();
		
		JPQLQuery result = new JPAQuery(em).from(entityPath).where(builder);
		
		if (page != null) {
			result.offset(page.getOffset());
			result.limit(page.getPageSize());
		}
		
		return result.list(entityPath);
	}
...
}
{code}

And it works perfectly. I tried to match as possible the original Spring JPA implementation. I don't really know what's wrong with the findAll() method, but directly calling the EntityManagerFactory somehow did the trick.

I have attached a strip-down version of my webapp. It's a Maven project with unit tests included. Just run Maven test to verify the error. 

You need to have MySQL and create a db ""testdb"". No data is needed but you can prepopulate them. There's a data.sql inside the classpath. (I'm trying to initialize the db with jdbc:initialize-database but it keeps throwing an error. You might wanna take a peek of that error if you like).

By the way my Maven properties:
{noformat}
	<properties>
		<spring.version>3.1.0.RC1</spring.version>
		<spring.data.jpa.version>1.1.0.M1</spring.data.jpa.version>
		<querydsl.version>2.2.3</querydsl.version>
	</properties>
{noformat}

Thanks. 

","Ubuntu 10.04 (non-proxy network), Windows XP SP2 (proxied network), STS 2.6.1 Release, Maven2, Querydsl 2.2.3",;14/Oct/11 5:38 AM;olivergierke;300,,,,,,,,0,0,300,"9,223,372,036,854,775,807%",0,0,300,,,,,,,,,,,,,,13/Oct/11 8:41 PM;skram;demo-web.zip;https://jira.spring.io/secure/attachment/18903/demo-web.zip,14/Oct/11 5:41 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18905/mylyn-context.zip,,,,,,,,,,,,238809600,,,,,2011-10-14 05:34:26.397,27714,true,tmarshall(tmarshall),,,,0|i010y7:,6031,7187,,,,,,"13/Oct/11 8:43 PM;skram;By the way, the reason why I have the following code is because the fields will come from JSON. The ""username"" name here is just a sample field

{noformat}
PathBuilder<User> entityPath = new PathBuilder<User>(User.class, ""user"");
StringPath path = entityPath.get(new StringPath(""username""));
BooleanExpression hasUsername = path.eq(username);
{noformat}","14/Oct/11 5:34 AM;olivergierke;We're currently building against Querydsl 2.2.0. Is there a chance you try running your code against that version? It seems there we're some breaking API changes that require recompilation against the newer version from our side. I'll consider this ticket as a general ""upgrade to 2.2.3"".",14/Oct/11 5:41 AM;olivergierke;Fixed and deployed to both 1.1.x and 1.0.x branch.,"14/Oct/11 7:03 AM;skram;Thanks for the quick action. I pulled the latest snapshot, and my app worked. I'm no longer getting java.lang.NoSuchMethodError. My test suite are now all green.

I believe the problem has been resolved.",,,,,,,,,,,,,,,,,,,,
The SimpleJpaRepository's deleteAll() should not call em.clear().,DATAJPA-111,40060,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,keesun,keesun,06/Oct/11 6:23 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,12/Oct/11 2:51 AM,1.0.1,1.1 M1,,,,,,1.0.2,1.1 RC1,,,,Core,,,,0,,,,,,,,"Now, the {{SimpleJpaRepository}}'s {{deleteAll()}} calls {{em.clear()}}. So, If I use {{B.deleteAll()}} after {{A.insert()}}, the insertion of {{A}} is ignored.

{code:java}
@Transactional
public void doSomething() {
  Book springBook = new Book(""spring"");
  bookRepository.save(springBook);
  
  CardRepository.deleteAll();
  
  //then, the springBook will not be inserted to the DB, because in the deleteAll(), em.clear() is called.
}
{code}",,;12/Oct/11 2:51 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,239500800,,,,,,27620,true,tmarshall(tmarshall),,,,0|i02087:,11746,11673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error identifying 'alias' when the entity's name has numbers,DATAJPA-110,39968,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,cimendoza,cimendoza,28/Sep/11 3:18 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,11/Oct/11 9:28 AM,1.0.1,1.1 M1,,,,,,1.0.2,1.1 RC1,,,,Core,,,,0,entity,name,numbers,pattern,,,,"When a query is generated by spring-data, an error is provocated by {{org.springframework.data.jpa.repository.query.QueryUtils}} because does not recognize names of entities containing numbers. Example of entity name: {{T05User}}.
The error is on line 57 of class {{QueryUtils}}, the pattern does not match with words that contains numbers.
{code:java}
private static final String IDENTIFIER = ""[\\p{L}._$]+"";
{code}
A proposed solution is
{code}
private static final String IDENTIFIER = ""[\\p{L}(\\d*)._$]+"";
{code}",irrelevant,;11/Oct/11 9:24 AM;olivergierke;600,,,,,,,,1800,1800,600,33%,1800,1800,600,,,,,,,,,,,,,,11/Oct/11 9:28 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18889/mylyn-context.zip,,,,,,,,,,,,,239068800,,,,,2011-10-11 09:28:43.451,12980,false,tmarshall(tmarshall),,,,0|i0208f:,11747,11674,,,,,,11/Oct/11 9:28 AM;olivergierke;Fixed and deployed to both 1.1.0.BUILD-SNAPSHOT as wel as 1.0.2.BUILD-SNAPSHOT.,,,,,,,,,,,,,,,,,,,,,,,
Add support for LessThanEqual and GreaterThanEquals keywords,DATAJPA-108,39935,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,27/Sep/11 2:35 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,11/Oct/11 9:16 AM,,,,,,,,1.1 RC1,,,,,Core,,,,0,,,,,,,,,,;11/Oct/11 9:16 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,11/Oct/11 9:16 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18888/mylyn-context.zip,,,,,,,,,,,,,239068800,,,,,,12763,false,tmarshall(tmarshall),,,,0|i00yif:,5636,6901,,,,,,11/Oct/11 9:16 AM;olivergierke;Fixed and deployed to snapshot repository.,,,,,,,,,,,,,,,,,,,,,,,
Invalid use of part.getProperty().toDotPath() in JpaQueryCreator,DATAJPA-96,39497,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,logemann,logemann,29/Aug/11 2:05 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,04/Sep/11 6:09 AM,1.0 GA,,,,,,,1.0.1,1.1 M1,,,,Core,,,,0,,,,,,,,"As explained in great details in the forum (see reference). Short Summary: 

All usages of {{part.getProperty().toDotPath()}} in {{JpaQueryCreator}} are invalid because the persistence provider expects single attributes and not object graphs as input of {{get()}} method.

Happens with {{LIKE}}, {{NOT_LIKE}}, {{BETWEEN}} and perhaps in other places too.",,;04/Sep/11 5:57 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,04/Sep/11 6:09 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18710/mylyn-context.zip,,,,,,,,,,,,,242265600,,,,,2011-09-04 06:09:35.243,3656,false,tmarshall(tmarshall),,,,0|i02t3z:,16425,15498,http://forum.springsource.org/showthread.php?113890-issue-with-Like-Or-and-nested-Properties-in-SpringData-JPA,,,,,04/Sep/11 6:09 AM;olivergierke;Fixed and deployed snapshots for both target versions.,,,,,,,,,,,,,,,,,,,,,,,
JpaEntityInformationSupport.getMetadata(...) swallows exception indicating the domain class not being found in the metamodel,DATAJPA-93,39321,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,24/Aug/11 11:13 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,04/Sep/11 5:36 AM,1.0 GA,,,,,,,1.0.1,1.1 M1,,,,Core,,,,0,,,,,,,,We must not catch the {{IllegalArgumentException}} thrown by {{JpaMetamodelEntityInformation}}.,,;04/Sep/11 5:35 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,04/Sep/11 5:36 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18709/mylyn-context.zip,,,,,,,,,,,,,243216000,,,,,,1635,false,tmarshall(tmarshall),,,,0|i00yjz:,5643,6908,http://stackoverflow.com/questions/6931331/java-lang-illegalargumentexception-in-spring-data-jpa,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When a Pageable query is run multiple times, a NoSuchElementException happens",DATAJPA-90,39254,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,skram,skram,20/Aug/11 4:45 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,21/Aug/11 7:56 AM,1.0 GA,,,,,,,1.0.1,1.1 M1,,,,,,,,0,,,,,,,,"When using the latest Spring Data JPA 1.0.0.RELEASE, my web project suddenly throws multiple exceptions of the type:

{code}
java.util.NoSuchElementException
	at java.util.AbstractList$Itr.next(AbstractList.java:350)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$ParameterExpressionProvider.next(JpaQueryCreator.java:314)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:213)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:50)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:107)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:86)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.createQuery(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.createQuery(PartTreeJpaQuery.java:78)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:81)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:55)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy42.findByFirstname(Unknown Source)
	at org.springframework.data.jpa.repository.UserRepositoryFinderTests.executesPagingMethodToListCorrectly(UserRepositoryFinderTests.java
{code}

It happens every 5 seconds because I have a scheduler that polls every 5 seconds. It turns out when calling the a Pageable query multiple times, this exception happens. See http://forum.springsource.org/showthread.php?113201-Spring-Data-JPA-bug

Also, I have described this problem at http://forum.springsource.org/showthread.php?113598-Spring-Data-JPA-and-Spring-Data-MongoDB-Integration-Hell

Even at debug level I'm not getting any reasons why this happens.

But when I revert back to 1.0.0.RC1, everything works normal. No errors. Scheduler runs. Queries work as usual. Even at debug level, I ca","STS 2.6.1, Ubuntu 9.04",;21/Aug/11 7:53 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,21/Aug/11 7:56 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18582/mylyn-context.zip,,,,,,,,,,,,,243388800,,,,,2011-08-21 03:27:29.373,1685,false,tmarshall(tmarshall),,,,0|i02t4n:,16428,15501,http://forum.springsource.org/showthread.php?113598-Spring-Data-JPA-and-Spring-Data-MongoDB-Integration-Hell,,,,,21/Aug/11 3:27 AM;olivergierke;Added stack trace to bug description for reference.,21/Aug/11 7:56 AM;olivergierke;Fixed and deployed to snapshot repo. This one seems to have sneeked in on adding query caching for Criteria queries not needing recreation. Feel free to give it a try.,"21/Aug/11 6:47 PM;skram;I've updated my Maven artifacts to use the latest build snapshots for Spring Data JPA and Mongo (I'm getting a different error with Mongo). But for Spring Data JPA, I still get the same exception:

{noformat}
[(TaskUtils.java:95:scheduler-2) 09:22:46]Unexpected error occurred in scheduled task.
java.util.NoSuchElementException
	at java.util.AbstractList$Itr.next(AbstractList.java:350)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$ParameterExpressionProvider.next(JpaQueryCreator.java:315)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:186)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.and(JpaQueryCreator.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.and(JpaQueryCreator.java:51)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:107)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:86)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.createQuery(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.createQuery(PartTreeJpaQuery.java:78)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:81)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:55)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy110.findByStatusAndProviderIdAndScannedAndScheduleBetween(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy111.findByStatusAndProviderIdAndScannedAndScheduleBetween(Unknown Source)
	at org.krams.tutorial.service.MessageService.findUnpostedMessages(MessageService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy113.findUnpostedMessages(Unknown Source)
	at org.krams.tutorial.service.MessageScheduler.post(MessageScheduler.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy124.post(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:64)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:53)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)


{noformat}

By the way, I'm letting Maven handle the dependencies:

{noformat}
<spring.data.jpa.version>1.0.0.BUILD-SNAPSHOT</spring.data.jpa.version>
<spring.data.mongo.version>1.0.0.BUILD-SNAPSHOT</spring.data.mongo.version>
{noformat}

From the looks of it, it still uses spring-data-commons-core-1.1.0.RC1 because it omitted spring-data-commons-core-1.2.0.BUILD-SNAPSHOT

Or do you think I should explicitly declare that spring-data-commons-core-1.2.0.BUILD-SNAPSHOT and omit the 1.1.0.RC1? I'm gonna try it anyway and I will post my findings later","21/Aug/11 7:02 PM;skram;I've explicitly declared in my Maven:

{noformat}
<dependency>
 <groupId>org.springframework.data</groupId>
 <artifactId>spring-data-commons-core</artifactId>
 <version>1.2.0.BUILD-SNAPSHOT</version>
</dependency>
{noformat}


However, I got a NoClassDefFoundError. I'm not sure what class is missing though. All I did is changed the version dependency of spring-data-commons-core
 
{noformat}
[DEBUG] [scheduler-2 09:55:49] (ErrorLogAspect.java:logAround:43) Error caught...saving to db log: java.lang.NoClassDefFoundError: Could not initialize class org.springframework.data.jpa.repository.query.AbstractJpaQuery$1
[DEBUG] [scheduler-2 09:55:49] (ErrorLogAspect.java:logAround:43) Error caught...saving to db log: java.lang.ClassCastException: java.lang.NoClassDefFoundError cannot be cast to java.lang.Exception
[ERROR] [scheduler-2 09:55:49] (TaskUtils.java:handleError:95) Unexpected error occurred in scheduled task.
java.lang.NoClassDefFoundError: Could not initialize class org.springframework.data.jpa.repository.query.AbstractJpaQuery$1
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.getExecution(AbstractJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy122.findByTypeAndMessageAndArguments(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy123.findByTypeAndMessageAndArguments(Unknown Source)
	at org.krams.tutorial.aop.ErrorLogService.save(ErrorLogService.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy124.save(Unknown Source)
	at org.krams.tutorial.aop.ErrorLogAspect.logAround(ErrorLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy126.post(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:64)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:53)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
{noformat}","21/Aug/11 7:12 PM;skram;I've reverted back my Spring Data JPA dependency to:

{noformat}
<spring.data.jpa.version>1.0.0.RC1</spring.data.jpa.version>
<spring.data.mongo.version>1.0.0.BUILD-SNAPSHOT</spring.data.mongo.version>
{noformat}

which updates the spring-data-commons-core dependency to *1.1.0.M2* Note, I've retained the latest MongoDB build.

However, because of the difference in their commons dependency, I now get an error for Mongo:

{noformat}
(ContextLoader.java:238:Thread-10) 10:08:51]Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'initMongoService' defined in ServletContext resource [/WEB-INF/spring-mongo.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.springframework.data.mapping.model.BasicPersistentEntity.<init>(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:900)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:455)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:294)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:215)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4701)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5204)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5199)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NoSuchMethodError: org.springframework.data.mapping.model.BasicPersistentEntity.<init>(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
	at org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity.<init>(BasicMongoPersistentEntity.java:47)
	at org.springframework.data.mongodb.core.mapping.MongoMappingContext.createPersistentEntity(MongoMappingContext.java:54)
	at org.springframework.data.mongodb.core.mapping.MongoMappingContext.createPersistentEntity(MongoMappingContext.java:30)
	at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:209)
	at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:145)
	at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:126)
	at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:60)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.writeInternal(MappingMongoConverter.java:334)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.write(MappingMongoConverter.java:305)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:529)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:491)
	at org.krams.tutorial.service.InitMongoService.init(InitMongoService.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)
	... 20 more
{noformat}

","21/Aug/11 7:15 PM;skram;So I've reverted back Spring Data Mongo to an older version (the one announced in the Spring main page):

{noformat}
<spring.data.mongo.version>1.0.0.M3</spring.data.mongo.version>
{noformat}

and I'm still using  spring-data-commons-core 1.1.0.M2 Spring Data MongoDB relies on 1.1.0.M1 which has been excluded by Maven automatically. However, because of this, I now have a missing class! If you check my starting post (especially the forum link I've posted), this is it all started. So that means I'm back from the beginning.

{noformat}
[(ContextLoader.java:238:Thread-10) 10:11:29]Context initialization failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from relative location [spring-mongo.xml]
Offending resource: ServletContext resource [/WEB-INF/applicationContext.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from ServletContext resource [/WEB-INF/spring-mongo.xml]; nested exception is java.lang.NoClassDefFoundError: org/springframework/data/repository/support/RepositoryFactoryBeanSupport
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:275)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:200)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:185)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:144)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:114)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:509)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:427)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:294)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:215)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4701)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5204)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5199)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from ServletContext resource [/WEB-INF/spring-mongo.xml]; nested exception is java.lang.NoClassDefFoundError: org/springframework/data/repository/support/RepositoryFactoryBeanSupport
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:412)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:259)
	... 27 more
{noformat}","21/Aug/11 7:22 PM;skram;So to make all this work, I had to use Spring Data JPA 1.0.0.RC1 again, and disable Mongo from my app. 

By the way, when I reverted back to 1.0.0.M3 MongoDB, I have to change the class references since I think the build-snapshot for Mongo has a new package structure, i.e the MongoTemplate. But again since I get a *java.lang.NoClassDefFoundError: org/springframework/data/repository/support/RepositoryFactoryBeanSupport*, I had to disable Mongo since the JPA is actually the core of my app.

For Mongo, I was planning to move the error logging database from JPA to Mongo. My big concern here is what if I integrate my app with another Spring Data project. I hope there's a unified process where the spring-data-commons-core is indeed fixed for all Spring Data projects. I mean one cannot use an updated commons while the others are left behind. That's just my suggestion

","22/Aug/11 5:02 AM;olivergierke;I guess you'll have a hard time getting the stuff to work in combination as esp. Spring Data Mongo is in the flow currently and thus Spring Data Commons gets quite some changes from time to time. This will probably get less problematic as soon as we approach major release versions of Mongo as well.

So to verify the fix please exclude the Mongo stuff for now.

See [this test case|https://github.com/SpringSource/spring-data-jpa/commit/0144be5b16c66b77707771975917bbc6f3370244] for verification that repeated invocation fails. Revert the change in {{PartTreeJpaQuery}} to see it failing with your exception before.","22/Aug/11 5:31 AM;skram;Oliver, thanks for the help. Actually, everything is all fixed now. I wasn't reading carefully the build version you did. I thought it's still 1.0.0.BUILD-SNAPSHOT. Then I re-read the version at the top and it reads 1.1. So I updated to 1.1.0.BUILD-SNAPSHOT and all issues have been resolved.

In fact, even the Mongo issue has been resolved. In other words, I can now use both Spring Data JPA and Mongo using the latest snapshot builds! In addition, they also run fine with RabbitMq using the latest Spring AMQP 1.0.0.RC3. And all of them are deployed to CloudFoundry. (Yeah, I'm fond of using the latest builds).  

Again, my big thanks. Case(s) resolved.

","22/Aug/11 7:42 AM;olivergierke;Well, the SNAPSHOT builds should usually work together quite well as I have to update JPA in case I need to change something in Commons to satisfy a bugfix in Mongo for example and vice versa. As I already mentioned we will have a more closer eye on inter project scenarios as soon as Mongo has a GA release version.",,,,,,,,,,,,,,
find-Method throws exception when a group-by-clause is used,DATAJPA-86,39179,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,jens.greive,jens.greive,13/Aug/11 3:49 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,05/Sep/11 3:16 AM,1.0 RC1,,,,,,,1.0.1,1.1 M1,,,,Core,,,,0,,,,,,,,"When using a repository to get a {{Page}} object with this method {{Page<T> findAll(Specification<T> specification, Pageable pageable)}} two queries are generated. A count-Query to get the total number of results and the actual query to get the results for the page. When the specification-parameter contains a {{group by}}-clause the count-query throws an exception {{org.springframework.dao.IncorrectResultSizeDataAccessException}} result returns more than one elements). The problem is that the {{group by}}-clause returns more than one result row for the count query and only a single result with one number is expected.

Example:
{code}
SELECT DISTINCT COUNT(id) FROM Table WHERE value > 70 GROUP BY name;
{code}
Result:
4 (for name1)
7 (for name2)
2 (for name3)

So if there's more than one result being returned from the count query we actually have to consider the size of the list instead of the value returned.",,;04/Sep/11 8:00 AM;olivergierke;5940,,,,,,,,0,0,5940,"9,223,372,036,854,775,807%",0,0,5940,,,,,,,,,,,,,,05/Sep/11 3:16 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18712/mylyn-context.zip,,,,,,,,,,,,,242179200,,,,,2011-09-04 08:01:23.848,2245,false,tmarshall(tmarshall),,,,0|i022pr:,12149,12018,,,,,,04/Sep/11 8:01 AM;olivergierke;Fixed and deployed for 1.1 branch. Backport will follow tomorrow.,05/Sep/11 3:16 AM;olivergierke;Pushed and deployed backport.,,,,,,,,,,,,,,,,,,,,,,
Count query for manually declared queries (either @Query or NamedQuery) get pagination applied,DATAJPA-77,38807,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,18/Jul/11 11:29 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,19/Jul/11 12:53 AM,1.0 RC1,,,,,,,1.0 GA,,,,,Core,,,,0,,,,,,,,"When executing a paging query the executing infrastructure triggers a count query to compute the number of overall results. If you define the query manually by using {{@Query}} or via a JPA NamedQuery the count query generation seems to also get the pagination information applied (see forum post for example).

This seems to boil down to {{SimpleJpaQuery.createCountQuery(...)}} calling {{ParameterBinder.bindAndPrepare(...)}} instead of {{prepare(...)}} as the former call applies pagination information to the query.",,;19/Jul/11 12:26 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,19/Jul/11 12:53 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18482/mylyn-context.zip,,,,,,,,,,,,,246412800,,,,,,2307,false,tmarshall(tmarshall),,,,0|i00ykn:,5646,6911,http://forum.springsource.org/showthread.php?112201-Using-spring-data-jpa-named-queries-and-pagination,,,,,19/Jul/11 12:53 AM;olivergierke;Fix deployed to snapshot repository.,,,,,,,,,,,,,,,,,,,,,,,
Support for locking,DATAJPA-73,38624,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,buechelix,buechelix,04/Jul/11 3:28 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,06/Dec/11 2:20 AM,,,,,,,,1.1 RC1,,,,,,,,,2,,,,,,,,"An additional annotation which indicates that locking should be used.

{code}
public interface ContactRepository extends JpaRepository<Contact, Long> {
  @Lock(LockModeType.PESSIMISTIC_WRITE)
  public Contact findById( Long id );
}
{code}

and

{code}
  @Query(""select c from Contact c where c.username = ?"")
  @Lock(LockModeType.READ)
  public List<Contact> findByName(String name);
{code}

Also mentioned: http://redmine.synyx.org/boards/2/topics/257",,;06/Dec/11 2:20 AM;olivergierke;9000,,,,,,,,0,0,9000,"9,223,372,036,854,775,807%",0,0,9000,,,,,,,,,,,,,,06/Dec/11 2:20 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19195/mylyn-context.zip,,,,,,,,,,,,,234144000,,,,,2011-12-05 02:31:08.237,2263,false,tmarshall(tmarshall),,,,0|i00w5j:,5254,6545,,,,,,"05/Dec/11 2:31 AM;rvullriede;I'd like to have that feature, too. Currently it is not possible to use pessimistic locking without directly messing around with an EntityManager.","06/Dec/11 2:20 AM;olivergierke;Repository query methods can now be equipped with a {{@Lock}} annotation that carries the {{LockModeType}} to be used when executing the query. Beyond that, CRUD methods can be redeclared to carry lock metadata as well.
    
{code:java}
interface UserRepository extends Repository<User, Long> {

  // CRUD method redeclaration
  @Lock(LockModeType.READ)
  List<User> findAll();

  // Query method
  @Lock(LockModeType.READ)
  List<User> findByLastname(String lastname);
}
{code}

Thanks to Aleksander Blomskøld for providing the query execution side of the implementation!","07/Dec/11 1:50 AM;rvullriede;Thanks for the quick implementation. I'll give it a try :-)
btw. since there seems to be no JIRA <-> GIT integration, can you please provide a link to the changeset?",07/Dec/11 2:48 AM;olivergierke;Actually the source tab lists the commits but here's the [direct link|https://github.com/SpringSource/spring-data-jpa/commit/c915077074a42068ac8c64c032f675a0614251d0] for your convenience :).,,,,,,,,,,,,,,,,,,,,
Missing specific spring-data package import in template.mf,DATAJPA-72,38514,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,paulo.mach,paulo.mach,24/Jun/11 7:40 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,07/Jul/11 5:01 AM,1.0 RC1,,,,,,,1.0 GA,,,,,Core,,,,0,specification-compatibility,,,,,,,"On the template.mf, packages matching ""org.springframework.*"" will generate wrong package version import on the MANIFEST.MF for spring-data-commons-core dependencies, (i.e. ""[3.0.5,4.0)"" instead of, for example, ""[1.1.0.M2,2.0)"")",,;07/Jul/11 5:00 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,07/Jul/11 5:01 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18435/mylyn-context.zip,,,,,,,,,,,,,248486400,,,,,,2308,true,tmarshall(tmarshall),,,,0|i022q7:,12151,12020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improving performance by caching CriteriaQuery,DATAJPA-71,38491,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,gwa,gwa,22/Jun/11 10:33 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,19/Jul/11 12:54 AM,1.0 RC1,,,,,,,1.0 GA,,,,,Core,,,,0,performance,,,,,,,"The CriteriaQuery caching will drastically improve performance on small query.

",,;19/Jul/11 12:05 AM;olivergierke;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,19/Jul/11 12:54 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18483/mylyn-context.zip,,,,,,,,,,,,,246412800,,,,,2011-07-19 00:54:45.204,2309,false,tmarshall(tmarshall),,,,0|i022qf:,12152,12021,,,,,,22/Jun/11 10:37 AM;gwa;Note this issue follow the DATAJPA-64,19/Jul/11 12:54 AM;olivergierke;Deployed fix into snapshot repository.,,,,,,,,,,,,,,,,,,,,,,
AuditingEntityListener problem with determining if entity is new,DATAJPA-68,38290,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,kshronts,kshronts,08/Jun/11 8:23 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,13/Jun/11 4:25 PM,1.0 M2,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,"Actually ran into this problem in the Hades library but I see the code is still the same.  Using EclipseLink (2.1.3), the id is already set on the entity when it is passed to the method annotated with {{@PrePersist}} and {{@PreUpdate}} so calling {{isNew()}} on the entity to determine if the creation audits should be applied doesn't work (always returns false).  I suggest splitting the {{@PrePersist}} and {{@PreUpdate}} to separate methods and not using {{isNew()}}.",,;13/Jun/11 4:24 PM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,13/Jun/11 4:25 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18336/mylyn-context.zip,,,,,,,,,,,,,249868800,,,,,2011-06-08 10:51:09.395,2310,false,tmarshall(tmarshall),,,,0|i01vvz:,11043,11022,,,,,,"08/Jun/11 10:51 AM;olivergierke;So you are saying you have an entity with an id that will be auto-incremented on the database side and this has already happened when the method annotated with {{@PrePersist}}. If so, you might want to raise a bug agains EclipseLink as this would clearly violate the spec:

{quote}
The  PrePersist and  PreRemove callback methods are invoked for a given entity before the respective EntityManager persist and remove operations for that entity are executed.
{quote}
(JPA 2.0 Spec, section 3.5.2)

However I don't want to play the SEP card here as we can clearly work around that issue by following your suggestion.
","08/Jun/11 12:34 PM;kshronts;Yes, I experienced the problem with auto generated id's.  I'm not sure this is in violation of the spec though as it doesn't explicitly say if the id will be available or not.  Wouldn't the same problem occur if you use application assigned id's?  Now that I think about it, isn't using the isNew() method problematic when using application assigned id's or am I missing something?","08/Jun/11 1:05 PM;olivergierke;If you decide to use application assigned ids you typically implement {{Persistable}} as then there's no way for us to determine whether an entity is new or not otherwise. As soon as you implement the interface the {{EntityInformation}} instance will rather call {{Persistable.isNew()}} over inspecting the id field so that should be fine.

Actually the only way you can assign an autogenerated id *without* having the entity persisted first is using a sequence that the persistence provider grabs batches of so that it can assign the id *before* actually writing it to the DB. So might be that the spec is not that precise about that par to explicitly allow this kind of optimization. Anyway, I have it on the list for RC1. Should be easy to fix.",,,,,,,,,,,,,,,,,,,,,
spring-data-jpa should have querydsl as an optional package import in OSGi headers,DATAJPA-62,38026,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,aappddeevv,aappddeevv,18/May/11 1:38 PM,25/Mar/13 9:28 AM,10/May/19 2:36 AM,24/May/11 8:36 AM,1.0 M2,,,,,,,1.0 RC1,,,,,Infrastructure,,,,0,,,,,,,,"spring-data-jpa recently had OSGi headers added. However, the headers should only have the querydsl package dependencies marked optional. This way, the querydsl jar is not required when loaded by OSGi.

This assumes that querydsl is not being used internally by the spring-data-jpa module.",,;24/May/11 7:47 AM;olivergierke;180,,,,,,,,,0,180,,,0,180,,,,,,,,,,,,,,,,,,,,,,,,,,,251683200,,,,,,2312,true,tmarshall(tmarshall),,,,0|i01vwf:,11045,11024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
defer the error message in JpaQueryMethod ctor,DATAJPA-59,37891,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,christoph.e,christoph.e,10/May/11 4:44 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,11/May/11 4:47 AM,1.0 M2,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,"by Oliver Gierke: ""We could defer the error message until we actually discover a named query to be used""",,;11/May/11 4:46 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,11/May/11 4:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18199/mylyn-context.zip,,,,,,,,,,,,,252288000,,,,,2011-05-11 04:47:33.316,2315,false,tmarshall(tmarshall),,,,0|i01vx3:,11048,11027,http://forum.springsource.org/showthread.php?107031-You-cannot-use-Pageable-as-method-parameter-if-your-persistence-provider-cannot-extra,,,,,11/May/11 4:47 AM;olivergierke;Fixed and deployed to snapshot repository.,,,,,,,,,,,,,,,,,,,,,,,
Persistable.isNew is not used by JpaPersistableEntityInformation,DATAJPA-58,37802,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Critical,Fixed,olivergierke,inisos,inisos,06/May/11 6:25 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,19/May/11 11:02 PM,1.0 M2,,,,,,,1.0 RC1,,,,,Core,,,,0,,,,,,,,"The {{isNew(…)}}  method is not used by {{JpaPersistableEntityInformation}} , which causes unwanted behavior in {{Repository.save(…)}} 

{{JpaPersistableEntityInformation}}  should extend {{PersistableEntityInformation}} instead of {{AbstractEntityInformation}}",,Bugfix.;10/May/11 3:21 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,10/May/11 3:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18188/mylyn-context.zip,,,,,,,,,,,,,251596800,,,,,2011-05-19 23:02:40.937,2316,false,tmarshall(tmarshall),,,,0|i01vxb:,11049,11028,,,,,,"10/May/11 3:39 PM;inisos;Thanks, it fixes the bug :)

But why do JpaPersistableEntityInformation extend JpaMetamodelEntityInformation instead of PersistableEntityInformation, which already has proper isNew(), getId() and getIdType()?!
(I didn't find a class which extends JpaMetamodelEntityInformation in data-jpa.)

PS: Thanks for this project!",19/May/11 3:24 PM;inisos;see last question.,"19/May/11 11:02 PM;olivergierke;We don't want to rely on the user specifying the ID type correctly in {{Persistable<ID>}} and thus rather rely on the JPA metamodel. Beyond that these two shouldn't really differ anyway, although the ID type might be less concrete that what you've specified in {{Persistable<T>}}.",,,,,,,,,,,,,,,,,,,,,
IN and NOT IN keywords need to be documented.,DATAJPA-56,37698,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,01/May/11 8:32 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,13/Jun/11 4:42 PM,1.0 M2,,,,,,,1.0 RC1,,,,,Documentation,,,,1,,,,,,,,,,;13/Jun/11 4:41 PM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,252806400,,,,,2011-05-03 19:26:53.834,2317,true,tmarshall(tmarshall),,,,0|i00ykv:,5647,6912,,,,,,"03/May/11 7:26 PM;bluestix;I am trying to make an IN query work but don't know how... pls document.

I tried this:

@Query(""FROM MyObject obj WHERE obj.id in (:ids)"")

And 

ids = 'somevalue','someothervalue','weeee'



This is not working for some reason. Doesn't throw an error but doesn't return results.


","05/May/11 2:14 PM;bluestix;I looked at the original bug and saw the syntax there: findBySomeValueIn(Collection<String> values)

That works.

Still needs to be documented though. I am just adding this comment in case anyone else is stuck.",,,,,,,,,,,,,,,,,,,,,,
"Query hints associated to finders using Pageable are applied also when counting, that's not always appropriate",DATAJPA-54,37510,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,davide.romanini,davide.romanini,15/Apr/11 1:59 AM,25/Mar/13 9:28 AM,10/May/19 2:36 AM,06/Sep/11 4:51 AM,1.0 M1,,,,,,,1.1 RC1,,,,,Core,,,,0,,,,,,,,"Suppose you have a finder like this:
{code}
@Query(""select p from Person p"")
@QueryHints({@QueryHint(name=""eclipselink.batch"", value=""p.addresses"")})
List<Person> findAllWithAddresses(Pageable p);
{code}

The use case could be a paginated data table where I want to show persons with their principal address avoiding the n+1 select problem.

The problem is that {{SimpleJpaRepository}} applies the hint also when counting, that's not allowed by eclipselink. Perhaps there should be a flag to specify that hints must not be applied when counting. 

",,;06/Sep/11 4:48 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,06/Sep/11 4:51 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18722/mylyn-context.zip,,,,,,,,,,,,,242092800,,,,,2011-09-06 04:51:09.929,2266,false,tmarshall(tmarshall),,,,0|i02og7:,15670,14847,,,,,,06/Sep/11 4:51 AM;olivergierke;Fixed and deployed to snapshot repository. {{@QueryHints}} no has a {{forCounting}} property defaulting to {{false}} that allows to disable hint application for the count query triggered during pagination.,,,,,,,,,,,,,,,,,,,,,,,
Update documentation regarding latest changes in programming model to use Specifications,DATAJPA-43,37069,,Task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,29/Mar/11 11:13 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,13/Jun/11 5:34 PM,1.0 M2,,,,,,,1.0 RC1,,,,,Documentation,,,,0,,,,,,,,With M2 we have changed the way to work with {{Specification}} objects (to align the model to the newly introduced Querydsl support). We have to update the reference documentation to reflect those changes.,,;13/Jun/11 5:11 PM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,256003200,,,,,,2320,false,tmarshall(tmarshall),,,,0|i00yl3:,5648,6913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OSGi bundle release,DATAJPA-42,37044,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,ractive,ractive,28/Mar/11 12:42 PM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,28/Mar/11 11:46 PM,1.0 M2,,,,,,,1.0 RC1,,,,,Infrastructure,,,,0,,,,,,,,We'd like to see the spring data JPA project to be released as an OSGi bundle.,,;28/Mar/11 11:46 PM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,244252800,,,,,2011-03-28 23:46:40.902,2321,false,tmarshall(tmarshall),,,,0|i01vxz:,11052,11031,,,,,,"28/Mar/11 11:46 PM;olivergierke;Good catch, seems we missed configuring the JAR plugin to use the Bundlor generated Manifest file. Should be fixed in upcoming snapshot. Will propagate this through other Spring Data projects as well.","29/Mar/11 7:06 AM;ractive;I have been wondering if the template.mf file was just for decoration. ;-)
Thanks for fixing this so quickly.","10/Aug/11 11:22 AM;tcharl;It's not yet fixed either if we're in the 1.0 RELEASE version...
Please deploy it in the spring bundle repo.

Best regards, Charlie",12/Aug/11 5:52 AM;olivergierke;Would you mind opening a ticket in the [EBR bug tracker|https://issuetracker.springsource.com/browse/EBR]?,,,,,,,,,,,,,,,,,,,,
Junit dependency has the compile scope ,DATAJPA-33,36547,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,pabloa,pabloa,27/Feb/11 3:36 PM,25/Mar/13 9:28 AM,10/May/19 2:36 AM,10/Mar/11 8:46 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,"Junit dependency has the compile scope. 

<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>${junit.version}</version>
</dependency>

It would have to be

<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>${junit.version}</version>
	<scope>test</scope>
</dependency>

",,;10/Mar/11 8:46 AM;olivergierke;300,,,,,,,,0,0,300,"9,223,372,036,854,775,807%",0,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,258595200,,,,,,2324,true,tmarshall(tmarshall),,,,0|i02riv:,16168,15268,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt new metadata API,DATAJPA-32,36523,,Task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Feb/11 4:43 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,25/Feb/11 5:07 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,,,;25/Feb/11 4:43 AM;olivergierke;7200,,,,,,,,,0,7200,,,0,7200,,DATACMNS-17,,,,,,,,,,,,25/Feb/11 5:08 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17663/mylyn-context.zip,,,,,,,,,,,,,258768000,,,,,,2325,false,tmarshall(tmarshall),,,,0|i00ylj:,5650,6915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Querying for a page invalidly calculates total number of pages for query methods,DATAJPA-29,36459,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Critical,Fixed,olivergierke,olivergierke,olivergierke,22/Feb/11 11:35 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,22/Feb/11 12:55 PM,,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,When using pagination with a query method the returned {{Page}}'s metadata is invalid. The total number of pages gets calculated wrongly.,,;22/Feb/11 12:55 PM;olivergierke;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,22/Feb/11 12:56 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17652/mylyn-context.zip,,,,,,,,,,,,,259027200,,,,,,2328,false,tmarshall(tmarshall),,,,0|i00ylz:,5652,6917,http://forum.springsource.org/showthread.php?t=104016,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EntityMetadata implementation should use JPA metamodel instead of manual annotation parsing,DATAJPA-28,36436,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,21/Feb/11 10:30 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,25/Feb/11 5:45 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,Currently {{ReflectiveEntityInformation}} manually parses {{Id}} and {{EmbeddedId}} annotations to find the entity's id field or method. Unfortunately this excludes users using XML to map their entities. We should rather use the JPA 2.0 metamodel API to lookup the id fields. To do so we also should create a template method that gets the {{EntityManager}} to create an {{IsNewAware}} as well. Beyond that we could probably get rid of {{JpaRepositorySupport}} entirely.,,;21/Feb/11 11:05 AM;olivergierke;1800,,,,,,,,14400,12600,1800,12%,14400,12600,1800,,,,,,,,,,,,,,25/Feb/11 5:45 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17665/mylyn-context.zip,,,,,,,,,,,,,259113600,,,,,,2329,false,tmarshall(tmarshall),,,,0|i00ym7:,5653,6918,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update SLF4J to current version,DATAJPA-25,36397,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,gordonad,gordonad,18/Feb/11 10:14 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,21/Feb/11 8:19 AM,1.0 M1,,,,,,,1.0 M2,,,,,Infrastructure,,,,0,,,,,,,,The version of SLF4J 1.5 is 2 years old and should be updated to use 1.6.1 or better.,,Updated property in pom.xml.;21/Feb/11 8:18 AM;olivergierke;300,,,,,,,,0,0,300,"9,223,372,036,854,775,807%",0,0,300,,,,,,,,,,,,,,21/Feb/11 8:20 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17641/mylyn-context.zip,,,,,,,,,,,,,259113600,,,,,2011-02-21 08:19:44.445,2332,false,tmarshall(tmarshall),,,,0|i02t5j:,16432,15505,,,,,,21/Feb/11 8:19 AM;olivergierke;Fixed and deployed snapshot.,,,,,,,,,,,,,,,,,,,,,,,
Should spring-jpa-1.0.xsd reference spring-repository-1.0.xsd instead of spring-repository.xsd.,DATAJPA-24,36371,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,thomas.risberg,thomas.risberg,16/Feb/11 8:37 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,21/Feb/11 8:26 AM,1.0 M1,,,,,,,1.0 M2,,,,,Namespace,,,,1,,,,,,,,Should spring-jpa-1.0.xsd reference spring-repository-1.0.xsd instead of spring-repository.xsd.,,;21/Feb/11 8:26 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,21/Feb/11 8:26 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17642/mylyn-context.zip,,,,,,,,,,,,,259459200,,,,,,2333,false,tmarshall(tmarshall),,,,0|i02t5r:,16433,15506,,,,,,17/Feb/11 8:38 AM;thomas.risberg;See comment on DATAJPA-21 https://jira.springsource.org/browse/DATAJPA-21?focusedCommentId=63449&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_63449,,,,,,,,,,,,,,,,,,,,,,,
Creating queries from method names with IsNull and IsNotNull is broken,DATAJPA-23,36338,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,sslavic,sslavic,14/Feb/11 8:01 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,14/Feb/11 9:16 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,1,,,,,,,,"In {{JpaQueryCreator}}'s {{toPredicate(…)}} method instead of following lines

{code}
        case IS_NULL:
            return root.isNull();
        case IS_NOT_NULL:
            return root.isNotNull();
{code}

should be

{code}
        case IS_NULL:
            return path.isNull();
        case IS_NOT_NULL:
            return path.isNotNull();
{code}
",,;14/Feb/11 8:55 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,14/Feb/11 9:17 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17612/mylyn-context.zip,,,,,,,,,,,,,259718400,,,,,2011-02-14 09:16:57.941,2334,false,tmarshall(tmarshall),,,,0|i02t5z:,16434,15507,,,,,,14/Feb/11 9:16 AM;olivergierke;Fixed and snapshot deployed.,,,,,,,,,,,,,,,,,,,,,,,
Reference documentation shows invalid JPQL in example,DATAJPA-20,36287,,Improvement,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,olivergierke,olivergierke,10/Feb/11 2:29 PM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,14/Feb/11 9:49 AM,1.0 M1,,,,,,,1.0 M2,,,,,Documentation,,,,0,,,,,,,,"The keyword reference in the Query creation section of the reference documentation shows an invalid sample query for the {{OrderBy}} clause:
{code}
... where x.age > ?1 order by x.lastname desc
{code}
should be
{code}
... where x.age = ?1 order by x.lastname desc
{code}


http://static.springsource.org/spring-data/data-jpa/docs/1.0.0.M1/reference/html/#jpa.query-methods.query-creation",,;14/Feb/11 9:36 AM;olivergierke;300,,,,,,,,300,300,300,100%,300,300,300,,,,,,,,,,,,,,14/Feb/11 9:49 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17613/mylyn-context.zip,,,,,,,,,,,,,260064000,,,,,,2335,false,tmarshall(tmarshall),,,,0|i00ymf:,5654,6919,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Port Hades extension module,DATAJPA-19,36067,,Task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,28/Jan/11 8:58 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,11/Mar/11 7:50 AM,1.0 M1,,,,,,,1.0 M2,,,,,,,,,0,,,,,,,,"In Hades there is an extension module that includes some integration into Spring MVC that makes a few things quite easy.

First, it provides a custom {{WebArgumentResolver}} to automatically parse pagination information from the {{HttpServletRequest}} so that one can simply refer to it from a controller method:

{code}
public String showUsers(Model model, Pageable pageable) {
  model.addAttribute(""users"", repository.readAll(pageable));
  return ""users"";
}
{code}

Second there's a {{PropertyEditor}} and {{Converter}} implementation that is aware of all the repositories residing in an {{ApplicationContext}} so that we can provide a {{WebArgumentResolver}} to directly get a loaded entity injected into the controller method instead of injecting the {{id}} and the developer needing to manually load the entity:

{code}
@RequestMapping(""/users/{id}"")
public String showUser(@PathVariable(""id"") User user) {
  ...
}
{code}

h2. Questions open

Where to put that code? Introducing a dependency towards the web module of Spring is not a good idea. So we have to come up with either a separate module in the same repo or have a separate repo even.",,;11/Mar/11 7:50 AM;olivergierke;22500,,,,,,,,0,0,22500,"9,223,372,036,854,775,807%",0,0,22500,,,,,,,,,,,,,,11/Mar/11 7:50 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17717/mylyn-context.zip,,,,,,,,,,,,,257558400,,,,,,2336,false,tmarshall(tmarshall),,,,0|i00ymn:,5655,6920,,,,,,11/Mar/11 8:23 AM;olivergierke;Created a new Maven module in Spring Data Commons and put the code there.,,,,,,,,,,,,,,,,,,,,,,,
Port sample projects,DATAJPA-17,36026,35060,Sub-task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Jan/11 9:46 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,26/Jan/11 9:16 AM,,,,,,,,1.0 M1,,,,,,,,,0,,,,,,,,There's the Hades sample application (currently included with the Hades release train) and a showcase project at github that should be ported to Spring Data JPA.,,;26/Jan/11 9:34 AM;olivergierke;240,;26/Jan/11 9:52 AM;olivergierke;14160,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,261446400,,,,,,2337,false,tmarshall(tmarshall),,,,0|i00ymv:,5656,6921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide query validation on based on validation infrastructure in Spring Data Commons,DATAJPA-14,35987,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,23/Jan/11 8:33 AM,25/Mar/13 9:27 AM,10/May/19 2:36 AM,10/Mar/11 9:47 AM,1.0 M1,,,,,,,1.0 M2,,,,,Core,,,,0,,,,,,,,We should integrate query validation for String based queries.,,;10/Mar/11 9:46 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,10/Mar/11 9:47 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17711/mylyn-context.zip,,,,,,,,,,,,,261619200,,,,,,2340,false,tmarshall(tmarshall),,,,0|i00ynb:,5658,6923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repository findOne method throws Exception with Oracle,DATAJPA-13,35953,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,oshankershutterfly,oshankershutterfly,20/Jan/11 3:29 PM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,20/Jan/11 4:52 PM,,,,,,,,1.0 M1,,,,,Core,,,,0,,,,,,,,"
When I call findOne with a JpaRepository working against an Oracle DB, I get an ""result returns more than one elements"" exception. Instead of an exception, I would expect the findOne method to return one of the records matching the specification, as Mongo does.

Outline of code:
		JpaRepository repository = ....;
		Specification spec =...;
		return repository.findOne(spec);
Exception:

Exception in thread ""main"" com.shutterfly.platform.infrastructure.dal.MDBFactoryBean$1: result returns more than one elements
	at com.shutterfly.platform.infrastructure.dal.MDBFactoryBean.translateExceptionIfPossible(MDBFactoryBean.java:11)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:58)
....",,Bugfix.;20/Jan/11 4:51 PM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,20/Jan/11 4:52 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17534/mylyn-context.zip,,,,,,,,,,,,,261792000,,,,,2011-01-20 16:52:14.589,2341,true,tmarshall(tmarshall),,,,0|i02t6n:,16437,15510,,,,,,20/Jan/11 4:52 PM;olivergierke;Fixed with d108bc9fed74a66ae6a444772efe558b13bc6340.,"20/Jan/11 5:07 PM;olivergierke;I implemented the fix for a {{Specification}} not returning any object. This will result in {{null}} being returned now. However I haven't changed the code to implement an arbitrary result in case of multiple objects being returned as we don't have no control over the ordering in that case so that multiple calls to the same data store could result in differing results.

Would it suit you simply calling {{findAll(Specification spec)}} and use the first one returned?","20/Jan/11 5:32 PM;oshankershutterfly;Yes, what you propose is the best solution. There will be a difference in the findOne behavior when using MongoDB vs Oracle, but we can't avoid a few such differences (;-)).",20/Jan/11 11:52 PM;olivergierke;Well I think we could restrict the MongoDB version of {{findOne(…)}} to align to that convention. So we would stay consistent and could outline the way I proposed in the comment above in the documentation as a workaround.,"21/Jan/11 10:01 AM;oshankershutterfly;I would say we leave things the way they are now. The Mongo users of the API would expect findOne to return one object, as the Mongo API does. So the best way is to have findOne return what the Mongo API returns. ",,,,,,,,,,,,,,,,,,,
Problem with using org.springframework.data.jpa.domain.sample.User with Oracle,DATAJPA-11,35853,,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Won't Fix,olivergierke,oshankershutterfly,oshankershutterfly,13/Jan/11 1:18 PM,25/Jan/11 7:54 AM,10/May/19 2:36 AM,25/Jan/11 7:54 AM,,,,,,,,1.0 M1,,,,,Core,,,,0,,,,,,,,"I downlaoded the spring-data-jpa and ran the sample UserRepositoryFinderTests application with both the embedded HSQL DB and against Oracle. The test against Oracle ran into a problem because the class User needed a table named USER, and the generated SQL for inserting into this table was giving errors, because the name USER is apparently reserved, and the SQL statement should qualify the table name with the schema name. It may be a good idea to rename the User class so that the sample works out of the box with Oracle. Everything worked fine when I changed the class name, e.g., when User is renamed to JPAUser.",,;25/Jan/11 7:35 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,261446400,,,,,2011-01-25 07:54:19.121,2342,false,tmarshall(tmarshall),,,,0|i02t6v:,16438,15511,,,,,,"25/Jan/11 7:54 AM;olivergierke;I've decided not to fix this ones a adding an {{@Table}} annotation fix seems to break the OpenJpa test cases for whatever reason. From a rather general point of view the test cases work, when you check out the source code. Your request is pretty much like ""I change the test cases and then it breaks"" which is a bit unfortunate.

So as it is not a real bummer I'll close it as won't fix.",,,,,,,,,,,,,,,,,,,,,,,
Integration of QueryDsl library,DATAJPA-8,35617,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Major,Fixed,olivergierke,olivergierke,olivergierke,27/Dec/10 9:54 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,15/Mar/11 11:48 AM,,,,,,,,1.0 M2,,,,,Core,,,,6,,,,,,,,"The QueryDSL library offers a fluent interface for building type safe (JPA) queries. The API looks a lot smoother than the JPA Criteria API so that an integration would be quite a cool thing. I can imagine collaboration in the following areas:

h2. Offer Specifications based on QueryDSL

We could offer an alternative to the standard JPA Criteria API based Specifications as the implementations should become much nicer with Querydsl. So we could have something like this:

{code}public interface QueryDslSpecificationExecutor<T> {

  T findAll(QueryDslSpecification<T>);

  // further Specification executing methods like in JpaRepository
}
{code}

We could create a QueryDsl specific subclass of {{SimpleJpaRepository}} and use this subclass in case the entity specific repository interface implements this 'mixin' so to speak.

h2. Provide a simple base class for custom query implementations

To ease building queries with QueryDsl we could provide a base class that gets an {{EntityManager}} injected and allows to create queries via a helper method. This class could be used for custom repository implementations then.

h2. Links

- http://source.mysema.com/display/querydsl/Querydsl
- http://source.mysema.com/static/querydsl/2.0.6/reference/html/",,;29/Dec/10 9:55 AM;olivergierke;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,DATAMONGO-41,DATAJPA-12,,,,,,,,,,,,,,,,,,257385600,,,,,2010-12-29 00:55:28.19,2343,true,tmarshall(tmarshall),,,,0|i00ynj:,5659,6924,,,,,,"29/Dec/10 12:55 AM;timowest;The signature could be something like this 

{code:java}
public interface QueryDslSpecificationExecutor<T> {

  List<T> findAll(Predicate... filters);

  List<T> findAll(Predicate filter, OrderSpecifier... order);

  List<T> findAll(OrderSpecifier order);

  List<T> findOne(Predicate... filters);
}

public class QuerydslRepository<T> extends SimpleJpaRepository<T> implements QueryDslSpecificationExecutor<T> {

  public QuerydslRepository(EntityPath<T> entityPath, EntityManager entityManager){
    super(entityPath.getType(), entityManager);
    // ...
  }

}

{code}  

This covers filtering and ordering.

For example with a domain class User and a query class QUser this could become something like this 

{code:java}
QUser user = QUser.user;
QuerydslRepository repository = new QuerydslRepository(user, entityManager);
// active users ordered by last name and first name
List<User> activeUsers = repository.findAll(user.active.eq(true), user.lastName.asc(), user.firstName.as);
// single user
User johnSmith = repository.findOne(user.firstName.eq(""John""), user.lastName.eq(""Smith""));
{code}
","29/Dec/10 9:54 AM;olivergierke;I've created a first draft and have pushed the changes here: https://github.com/SpringSource/spring-data-jpa/commit/98b2a892b062de5bbeaf8a3cc5ba18223ced252b

Feel free to comment :)","29/Dec/10 11:05 AM;timowest;This looks mostly ok. Here are some comments :

* createPath looks a bit fragile, better take the EntityPath in the constructor
** The implementation breaks if the Q-prefix is replaced with something else or when the Q-types are generated into some other package.
** It breaks as well, if the User wants a different variable for root. e.g. new QUser(""myUser"") or if the uncapitalization creates a different result.

* public T findOne(Predicate predicate) -> public T findOne(Predicate... predicate)

* public List<T> findAll(Predicate predicate) -> public List<T> findAll(Predicate... predicate) 

* the path variable in toOrder can be reused, could be an instance variable","30/Dec/10 4:15 AM;olivergierke;Here's the rational for why I've chosen the implementation to be as it currently is:

We need a constructor that only takes the actual domain class as the client should not be aware of other technical dependencies. If used from within our namespace all we have is the repository interface that we can derive the domain class from via reflection. It doesn't seem to be possible to derive a query type from a domain type directly so we have to fallback on applying the conventions to look up the query type. However I will add a constructor taking {{EntityType<T>}} as parameter so that one can instantiate {{new QueryDslJpaRepository(QUser.class, em)}} although this is probably not the way people mostly will use it.

I am still unsure about the varargs and that's mostly because I don't really get the advantage of simply listing various predicates over explicitly and-concatenating them. Could you given an example where the restriction to a single predicate would cause a hit-the-wall? Especially for {{findOne(…)}} i think it's strange from another point of view: as varargs allow handing no {{Predicate}} at all this would allow a call to {{findOne()} (no {{Predicate}}) which will probably fail almost always except for the case of one entity stored. I'm not aggressively against it, I just don't get the benefit ;).

At {{toOrder}} good catch, will apply that. ",30/Dec/10 5:16 AM;olivergierke;Here's the updated version: https://github.com/SpringSource/spring-data-jpa/commit/2d781dfe3767efaea55033f7fbfe9ee3134accde,"30/Dec/10 7:01 AM;timowest;The constructors look ok now. In most cases the constructor taking the domain class will work as well, in some cases not.

With the explicit and-concatenation you will need to close more parenthesis. I guess in the end it is a matter of taste.

We at Mysema are used to concatenate the filters via varargs :

{code:java}
List<User> users = query.where(
    user.active,
    user.firstName.eq(""Foo""),
    user.lastName.eq(""Bar""))
  .list(user);
{code}

compared to 
 
{code:java}
List<User> users = query.where(
    user.active.and(user.firstName.eq(""Foo"")).and(user.lastName.eq(""Bar"")))
  .list(user);
{code}

It is just syntactically lighter, no other benefits. But you are right that it doesn't make so much sense for findOne.

One way to make the constructor taking only the domain class safer is to lookup the Q-class and taking the static field with the same type as the class. The Querydsl code generation does some escaping to the default instance if it clashes with a property name.

With this change also the constructor taking the domain class will be fairly safe to use.","30/Dec/10 12:43 PM;timowest;The parenthesis counting gets even worth when nesting boolean expressions :

{code:java}
List<User> users = query.where(    
    user.firstName.eq(""Foo"").or(user.lastName.eq(""Bar"")),
    user.validUntil.lt(date1).or(user.validUntil.gt(date2)))
  .list(user);
{code}

compared to 

{code:java}
List<User> users = query.where(  
    .and(user.firstName.eq(""Foo"").or(user.lastName.eq(""Bar"")))
    .and(user.validUntil.lt(date1).or(user.validUntil.gt(date2))))
  .list(user);
{code}

You will see the differences clearly when you use Querydsl in fluent style instead of creating the predicates via variables.

Sorry for being so persistent on this issue, I just want to be sure you understand the difference.","31/Dec/10 12:58 AM;timowest;There was a mistake in my last code snippet. Here is the fixed version 

{code:java}
List<User> users = query.where(  
    user.firstName.eq(""Foo"").or(user.lastName.eq(""Bar"")))
    .and(user.validUntil.lt(date1).or(user.validUntil.gt(date2))))
  .list(user);
{code}","08/Jan/11 2:03 AM;timowest;I looked at the new commits in the Querydsl branch. Here are some comments

* In the loop where you search for the default path entity path you need to take the first static (!) field with the same type

e.g.

{code}
public class QUser {

  public final QUser friend;

  public static final QUser user = new QUser(""user""); // this one

}
{code}

* The Q class for inner classes is <package>.<prefix><outerclass>_<inner class>

e.g. 

com.example.Outer.Inner becomes com.example.QOuter_Inner

Otherwise this looks good.",08/Jan/11 3:23 AM;olivergierke;Thanks for the hints! Just fixed both issues: https://github.com/SpringSource/spring-data-jpa/commit/960bf09fb0fe1d8b726d967cde8bedebbd24864c,13/Mar/11 1:07 AM;sslavic;Will this at least preliminary work-in-progress support make it into the spring data jpa v1.0 M2?,"13/Mar/11 1:55 AM;olivergierke;It's scheduled for M2, so yes :).","13/Mar/11 3:20 AM;sslavic;Asking because there were [""rumors""|http://twitter.com/#!/olivergierke/status/34643029939859456] :) it will be available in M1 already.",,,,,,,,,,,
Port Hades reference documentation,DATAJPA-3,35130,35060,Sub-task,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,olivergierke,olivergierke,29/Nov/10 11:12 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,09/Feb/11 9:50 AM,,,,,,,,1.0 M1,,,,,,,,,0,,,,,,,,There's quite comprehensive Docbook based reference documentation for the Hades project that we should migrate as well.,,"Copied basic Docbook setup from Document project, split up originial Hades documentation into parts.;23/Dec/10 11:45 AM;olivergierke;7200",,,,,,,,28800,21600,7200,25%,28800,21600,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,266371200,,,,,,2345,false,tmarshall(tmarshall),,,,0|i00ynz:,5661,6926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JpaRepository should contain a findOne method that take a Specification object,DATAJPA-2,35109,,New Feature,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,27/Nov/10 4:24 AM,25/Mar/13 9:29 AM,10/May/19 2:36 AM,28/Nov/10 8:13 AM,,,,,,,,1.0 M1,,,,,,,,,0,,,,,,,,See discussion in https://fisheye.springsource.org/cru/DATA-JPA-CR-3#c610,,;28/Nov/10 8:12 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,28/Nov/10 8:13 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17409/mylyn-context.zip,,,,,,,,,,,,,266457600,,,,,2010-11-28 08:13:45.706,2346,false,tmarshall(tmarshall),,,,0|i02t73:,16439,15512,,,,,,28/Nov/10 8:13 AM;olivergierke;Fix for this will be included in initial push to the repo.,,,,,,,,,,,,,,,,,,,,,,,
Mapping sub-system should exclude Groovy introduced properties from persistent properties,DATACMNS-228,45361,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,10/Sep/12 2:05 AM,25/Mar/13 9:23 AM,10/May/19 2:36 AM,10/Sep/12 6:29 AM,1.4 RC1,,,,,,,1.4 Final,,,,,Mapping / Conversion,,,,0,,,,,,,,"When using Groovy classes with the mapping metadata sub-system, the Groovy compiler introduced fields like {{metaClass}} should not be considered a persistent property.",,;10/Sep/12 6:28 AM;olivergierke;5400,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,10/Sep/12 6:29 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20425/mylyn-context.zip,,,,,,,,,,,,,210211200,,,,,,32284,false,tmarshall(tmarshall),,,,0|i05ubr:,34119,31984,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a developer, I want an application event to be emitted when RepositoryPopulator finishes",DATACMNS-224,45258,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,nealeu,nealeu,03/Sep/12 2:29 AM,25/Mar/13 9:23 AM,10/May/19 2:36 AM,04/Sep/12 1:33 AM,1.4 RC1,,,,,,,1.4 Final,,,,,,,,,0,,,,,,,,"Repository populator support is currently triggered by the {{ContextRefreshed}} event, thus happens after all lifecycle callbacks.

In order to allow activity to be guaranteed to be triggered after the repositories have been populated, {{RepositoryPopulator}} implementations should emit a {{RepositoriesPopulated}} event.",,;04/Sep/12 1:30 AM;olivergierke;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,04/Sep/12 1:33 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20414/mylyn-context.zip,,,,,,,,,,,,,210816000,,,,,,32180,true,tmarshall(tmarshall),,,,0|i05tp3:,34017,31880,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RepositoryPopulator should log each resource that it processes,DATACMNS-223,45256,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,nealeu,nealeu,03/Sep/12 12:45 AM,25/Mar/13 9:23 AM,10/May/19 2:36 AM,04/Sep/12 2:29 AM,1.4 RC1,,,,,,,1.4 Final,,,,,Repositories,,,,0,,,,,,,,{{log.info(…)}} of each resource in {{ResourceReaderRepositoryPopulator.populate(Repositories)}} would be useful.,,;04/Sep/12 1:03 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,04/Sep/12 2:35 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/20415/mylyn-context.zip,,,,,,,,,,,,,210816000,,,,,,32178,true,tmarshall(tmarshall),,,,0|i05ton:,34015,31878,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release 1.4 GA,DATACMNS-192,44469,,Task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,12/Jul/12 3:07 AM,25/Mar/13 9:23 AM,10/May/19 2:36 AM,10/Oct/12 3:38 AM,,,,,,,,1.4 Final,,,,,,,,,0,,,,,,,,,,;10/Oct/12 3:38 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,205632000,,,,,2012-11-01 08:19:49.568,31480,true,tmarshall(tmarshall),,,,0|i05pjz:,33346,31180,,,,,,"01/Nov/12 8:19 AM;ceefour;Please fix:

1. Download page (http://www.springsource.org/download/community?project=Spring%2520Data%2520Commons) still lists 1.4.0.RC1 and 1.3.2 as recent
2. Project page (http://www.springsource.org/spring-data/commons) lists 1.1.0.RELEASE as latest.",,,,,,,,,,,,,,,,,,,,,,,
Release 1.3.0.RC1,DATACMNS-148,42921,,Task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,12/Apr/12 1:54 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,16/Apr/12 1:13 AM,,,,,,,,1.3 RC1,,,,,,,,,0,,,,,,,,,,;16/Apr/12 1:13 AM;olivergierke;2700,,,,,,,,,0,2700,,,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,223257600,,,,,,30343,false,tmarshall(tmarshall),,,,0|i05i93:,32163,30043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove deprecations in MappingContextEvent,DATACMNS-143,42826,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,04/Apr/12 8:44 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,27/Apr/12 10:18 AM,,,,,,,,1.3 RC2,,,,,Core,,,,0,,,,,,,,,,;27/Apr/12 10:16 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,27/Apr/12 10:18 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19624/mylyn-context.zip,,,,,,,,,,,,,223862400,,,,,,30248,false,tmarshall(tmarshall),,,,0|i05hnz:,32068,29948,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve API of UserCredentials,DATACMNS-142,42789,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,02/Apr/12 6:17 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Apr/12 6:31 AM,,,,,,,,1.3 RC1,,,,,Core,,,,0,,,,,,,,"- remove {{UserCredentials()}} and provide constant {{NO_CREDENTIALS}} instead
- add {{hasUsername()}} and {{hasPassword()}} methods",,;02/Apr/12 6:27 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,02/Apr/12 6:31 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19559/mylyn-context.zip,,,,,,,,,,,,,224035200,,,,,,30211,false,tmarshall(tmarshall),,,,0|i05hfr:,32031,29911,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some osgi imports are marked required in manifest.mf,DATACMNS-136,42637,,Bug,Resolved,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,kooper,kooper,19/Mar/12 2:55 PM,20/Feb/14 2:55 AM,10/May/19 2:36 AM,20/Mar/12 4:55 AM,1.3 M1,,,,,,,1.3 RC1,,,,,Core,,,,0,,,,,,,,"Looking at the pom some dependencies are marked as optional, but are not marked optional in the MANIFEST.MF for osgi.

I believe the following should be marked as optional.
org.springframework.aop.framework_[3.0.7,4.0.0).
org.springframework.context_[3.0.7,4.0.0).
org.springframework.context.annotation_[3.0.7,4.0.0).
org.springframework.context.expression_[3.0.7,4.0.0).
org.springframework.dao_[3.0.7,4.0.0).
org.springframework.dao.support_[3.0.7,4.0.0).
org.springframework.expression_[3.0.7,4.0.0).
org.springframework.expression.spel.standard_[3.0.7,4.0.0).
org.springframework.expression.spel.support_[3.0.7,4.0.0).
org.springframework.transaction_[3.0.7,4.0.0).
org.springframework.transaction.annotation_[3.0.7,4.0.0).
org.springframework.transaction.interceptor_[3.0.7,4.0.0).
org.springframework.transaction.support_[3.0.7,4.0.0).
org.springframework.validation_[3.0.7,4.0.0).
",,;20/Mar/12 4:45 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,19/Mar/12 5:44 PM;kooper;spring.osgi.patch;https://jira.spring.io/secure/attachment/19536/spring.osgi.patch,,,,,,,,,,,,,225158400,,,,,2012-03-20 04:55:02.739,30059,false,olivergierke(olivergierke),,,,0|i05giv:,31883,29759,,,,,,19/Mar/12 5:44 PM;kooper;Patch to fix optional plugins,20/Mar/12 4:55 AM;olivergierke;Good catch! Applied fix and deployed to snapshot repository of 1.3.x.,,,,,,,,,,,,,,,,,,,,,,
EntityInstantiator should be capable of instantiating member classes,DATACMNS-134,42531,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,09/Mar/12 5:49 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,09/Mar/12 6:08 AM,1.2.1,1.3 M1,,,,,,1.3 RC1,,,,,Core,,,,0,,,,,,,,The instantiation of non-static member classes currently fails as they get a constructor created by the compile that does not have a corresponding property. We should be able to detect a {{Parameter}} instance to be a reference to the enclosing class and use return this value for {{ParameterValueProvider.getParameterValue(...)}}.,,;09/Mar/12 6:07 AM;olivergierke;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,09/Mar/12 6:08 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19489/mylyn-context.zip,,,,,,,,,,,,,226108800,,,,,,29954,false,tmarshall(tmarshall),,,,0|i05fvj:,31778,29654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documented Configuration of Conversion Service with DomainClassConverter Does Not Work,DATACMNS-133,42149,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,singleshot,singleshot,08/Feb/12 10:51 PM,21/May/12 5:13 AM,10/May/19 2:36 AM,21/May/12 4:54 AM,1.2.1,1.3 M1,,,,,,1.3 RC1,,,,,Core,Documentation,,,1,,,,,,,,"The Spring Data JPA documentation describes configuring a DomainClassConverter like so:
{code:xml}
<mvc:annotation-driven conversion-service=""conversionService"" />

<bean id=""conversionService"" class=""....context.support.ConversionServiceFactoryBean"">
  <property name=""converters"">
    <list>
      <bean class=""org.springframework.data.repository.support.DomainClassConverter"">
        <constructor-arg ref=""conversionService"" />
      </bean>
    </list>
  </property>
</bean>
{code}

However, this fails to work from an apparent cyclic instantiation error (""Error creating bean with name 'conversionService': FactoryBean which is currently in creation returned null from getObject"").

This is one workaround for the problem:

{code:xml}
<bean id=""conversionService"" class=""org.springframework.core.convert.support.DefaultConversionService""/>

<bean class=""org.springframework.beans.factory.config.MethodInvokingFactoryBean"">
  <property name=""targetClass"" value=""org.springframework.core.convert.support.ConversionServiceFactory""/>
  <property name=""targetMethod"" value=""registerConverters""/>
  <property name=""arguments"">
    <util:list>
      <set>
        <bean class=""org.springframework.data.repository.support.DomainClassConverter"">
          <constructor-arg ref=""conversionService""/>
        </bean>
      </set>
      <ref bean=""conversionService""/>
    </util:list>
  </property>
</bean>
{code}
",spring-data-commons-core 1.2.0.RELEASE on the classpath.,;20/Mar/12 3:04 AM;olivergierke;1800,,,,,,,,10800,10800,1800,16%,10800,10800,1800,,SPR-9143,SPR-8954,SPR-9177,,,,,,,,,,,,,,,,,,,,,,,219801600,,,,,2012-02-10 07:01:43.259,29424,false,tmarshall(tmarshall),,,,0|i045rz:,24310,21055,http://forum.springsource.org/showthread.php?122944-Help-with-DomainClassConverter-configuration,,,,,"08/Feb/12 10:54 PM;singleshot;My workaround should indicate that {{<mvc:annotation-driven conversion-service=""conversionService"" />}} is still necessary.",09/Feb/12 9:11 PM;singleshot;It turns out my workaround only allows the spring context to load but does not actually work.,"09/Feb/12 9:44 PM;singleshot;I've played around with this a bit. There are 3 issues, in order of increasing importance:
# The documentation indicates a {{<list>}} should be used for the conversion service's converters, but it should be a {{<set>}}.
# The documentation describes a circular dependency that will not load.
# The {{DomainClassConverter}} does not properly register repository metadata (at least with my configuration).

Obviously the documentation just needs tweaking.

The dependency should be somewhat straightforward - I've implemented my own quick and dirty {{""LazyConversionServiceFactoryBean""}} that eliminates a null conversion service value generated at load time. It basically returns a lazy proxy for the conversion service pending full initialization of the service, allowing the load cycle to complete. It's not worth posting, and I'm sure there is some Spring magic available that would render it obsolete.

I haven't dug into why repository metadata does not get registered. The call to {{BeanFactoryUtils.beansOfTypeIncludingAncestors(context, RepositoryFactoryInformation.class)}} returns an empty collection which is the problem. Poking around in a debugger I see I do have some repositories loaded, but I don't see anything related to {{RepositoryFactoryInformation}} (could be a high up interface/base I just don't see).
","09/Feb/12 10:07 PM;singleshot;OK, it looks like {{RepositoryFactoryInformation}} is in the class/interface hierarchy of JPA repositories and should be returned by  {{BeanFactoryUtils.beansOfTypeIncludingAncestors()}}. However, the JPA repository beans I examined in the debugger are actually AOP proxies and this appears to be the reason {{beansOfTypeIncludingAncestors}} does not find them.",10/Feb/12 7:01 AM;olivergierke;We're suffering from a bug in Spring framework here which doesn't allow factor ybeans to be found by their interfaces if type prediction is in place for these factory beans (which is the case for Spring Data repository factories). For details have a look at SPR-8954. It's already fixed and will be released with Spring 3.1.1.,"10/Feb/12 7:05 AM;olivergierke;Regarding the initialization problem you might wanna try declaring the {{DomainClassConverter}} as root bean (not as inner one). This should actually register the bean as in creation and might solve the problem as the {{ConversionService}} can then be instantiated, handed into the {{DomainClassConverter}}'s constructor before that in turn is set on the {{ConversionService}}. Not 100% sure but worth a try.",17/Feb/12 6:58 AM;wdekker;I've just tried the converter with spring 3.1.1 but the collection from  BeanFactoryUtils.beansOfTypeIncludingAncestors is still empty.,22/Feb/12 12:48 PM;davispw;@William Dekker: Upgrading to Spring 3.1.1.RELEASE fixed the 'beansOfTypeIncludingAncestors' problem for me.  I've also got spring-data-jpa-1.0.3.RELEASE and spring-data-commons-1.2.1.RELEASE.,25/Feb/12 7:23 AM;singleshot;I have upgraded to the versions [~davispw] indicates but the call to {{beansOfTypeIncludingAncestors}} in {{DomainClassConverter}} still returns zero results (even though I have two working JPA repositories).,"26/Feb/12 7:48 PM;jimshi;@Mike Whittemore: Yes, I've encountered the same problem with you. After I had my spring upgraded to 3.1.1, the collection from BeanFactoryUtils.beansOfTypeIncludingAncestors is still empty. I've no assurance to say it's fixed.","26/Feb/12 8:58 PM;jimshi;Let analyze the source code from spring-beans 3.1.1. We can find the change they made for this issue fix SPR-8954, However it doesn't work in spring data ""RepositoryFactoryBeanSupport"" scenario:
See AbstractBeanFactory.isFactoryBean (line 1333)
return (predictedType != null && FactoryBean.class.isAssignableFrom(predictedType)) ||
	(mbd.hasBeanClass() && FactoryBean.class.isAssignableFrom(mbd.getBeanClass()));
They add the logical ""or"" condition to make sure isFactoryBean return true if the RootBeanDefinition mbd is a factory bean. I think they made this change for doing preparation of getBeanNamesForType method (line 317)


Now, let see DefaultListableBeanFactory.getBeanNamesForType (line 321-323)
    beanName = FACTORY_BEAN_PREFIX + beanName;
    matchFound = (includeNonSingletons || mbd.isSingleton()) && isTypeMatch(beanName, type);
Add a prefix to bean name to make sure its type matched if it's a factory bean. Besides, this is the right place why beansOfTypeIncludingAncestors does not work for Spring Data Repository:

See DefaultListableBeanFactory.isTypeMatch (line 510)
    Class<?> beanClass = predictBeanType(beanName, mbd, FactoryBean.class, typeToMatch);
The predicted bean class from ""RepositoryFactoryBeanSupport"" is actually the right repository class we defined for our DAO, UserRepository, XxxRepository, e.g., it certainly wouldn't be matched with the ""RepositoryFactoryInformation"", so the condition typeToMatch.isAssignableFrom(beanClass) would always return false, However it's one of the logic ""and"" condition for isTypeMatch method return clause.
",27/Feb/12 5:45 AM;olivergierke;I've just pushed a [test case|https://github.com/SpringSource/spring-data-jpa/commit/4e6a93390fa4f9f4235fe9e57c9dd8a894e80e99] showing the {{RepositoryFactoryInformation}} beans are found when running against Spring 3.1.1 using XML configuration. Trying to come up with a more local integration test in Spring Data Commons I tried using JavaConfig and discovered the fix not being complete (covered in SPR-9143). For the time being: those of you who still don't see any beans being found: are you using XML configuration? In how far does your setup differ from the one in test case?,"27/Feb/12 7:30 PM;jimshi;@Oliver Gierke I have tested your test case, It also indicates RepositoryFactoryInformation could be found. Now, I am much more confused why it doesn't work on DomainClassConverter. Is it possible the occasion of getBeanNamesForTypeof on context aware of DomainClassConverter is not reasonable?",28/Feb/12 7:10 AM;olivergierke;It seems we're running into a corner case here: in case the factory was already instantiated at the time the lookup happens we find it. In case it's not instantiated yet we don't. I have created SPR-9177 to track this.,"28/Feb/12 9:54 AM;olivergierke;Thinking this through there's a workaround for the issue and it might be possible that the workaround is what some people see this working already. For the code to work in general it's essential to have the repository factories instantiated *before* the {{DomainClassConverter}} trying to access them. This will naturally be the case when used in a web application with 2 {{ApplicationContexts}} where the root context contains the repository beans and the context created by the {{DispatcherServlet}} containing the {{DomainClassConverter}}. So until the fix for SPR-9177 we'll have to rely on such a scenario. I'll update the documentation accoringly for the next releases of SD Commons.

Regarding the setup in XML configuration it's probably best to create a component something like this:

{code:java}
class DomainClassConverterRegistrar<T extends ConversionService & ConverterRegistry> implements ApplicationContextAware {
  
  private final T conversionService;

  public DomainClassConverterRegistrar(T conversionService) {
    this.conversionService = conversionService;
  }

  @Override
  public void setApplicationContext(ApplicationContext context) {
    DomainClassConverter converter = new DomainClassConverter(conversionService);
    converter.setApplicationContext(converter);
    conversionService.addConverter(converter);
  }
}
{code}

You can then do:

{code:xml}
<bean class=""….DomainClassConverterRegistrar"">
  <constructor-arg ref=""conversionService"" />
</bean>

<bean id=""conversionService"" class=""….ConversionServiceFactorBean"" />
{code}

Actually this is behavior {{DomainClassConverter}} could implement itself and I will change the implementation of the class accordingly. For now consider the code snippet above as workaround.","28/Feb/12 10:17 AM;olivergierke;Pushed and deployed the necessary changes to {{DomainClassConverter}}. You should now be able to simply declare the converter as follows:

{code:xml}
<bean class=""....DomainClassConverter"">
  <constructor-arg ref=""conversionService"" />
</bean>

<bean id=""conversionService"" class=""....ConversionServiceFactoryBean"" />
{code}

The custom class is not necessary as of the snapshot deployment.","12/Mar/12 1:13 PM;jltnf@hotmail.com;Seems still not resolving the beans from parent context on the DomainClassConverter.  Would this work?  

Instead of:
CrudRepository<Object, Serializable> repository = BeanFactoryUtils.beanOfType(context, objectType);

To:
CrudRepository<Object, Serializable> repository = BeanFactoryUtils.beanOfTypeIncludingAncestors(context, objectType);","21/Mar/12 8:09 AM;olivergierke;Good catch, fixed and deployed to 1.3.0.BUILD-SNAPSHOT.",17/May/12 8:26 AM;codagtr;I have tried this with the JPA 1.1.0.RELEASE and commons 1.3.0.RELEASE and the workaround is still needed,21/May/12 4:54 AM;olivergierke;Please do not re-open issues assigned to already released versions. File a new ticket instead. Which workaround are you refering to?,,,,
AbstractPersistentProperty is missing reasonable equals(…) / hashCode() methods,DATACMNS-121,41831,,Bug,Resolved,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,mhunger,mhunger,20/Jan/12 5:20 PM,20/Feb/14 3:03 AM,10/May/19 2:36 AM,11/Apr/12 12:09 PM,,,,,,,,1.3 RC1,,,,,,,,,0,,,,,,,,"If a superclass contains a property field which is shadowed in the subclass (and might have different attributes type, annotations etc), both properties are added to the properties set:

It should instead:

* have a correct equals / hashCode in AbstractPersistentProperty based on the name
* check for already existing properties with that name in the set (probably change to map) and throw an MappingException",,;11/Apr/12 12:08 PM;olivergierke;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,11/Apr/12 12:09 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19576/mylyn-context.zip,,,,,,,,,,,,,223257600,,,,,2012-01-30 07:53:23.165,29164,false,olivergierke(olivergierke),,,,0|i03m2v:,21119,17842,,,,,,"30/Jan/12 7:53 AM;olivergierke;What's generally wrong with shadowing properties? Shouldn't we rather have two independent instances registered ({{Foo.bar}}, {{Bar.bar}}) and populate both? Which essentially boils down to identity per class + name.","04/Apr/12 9:25 AM;olivergierke;As per our discussion today, doesn't it make sense to implement {{equals(…)}} / {{hashCode()}} per the underlying field. The generics scenario we discussed would the return the very same instance even for the field of the generic type. The only thing we need to acknowledge then is that one rather needs to use {{getTypeInformation()}} to retrieve the actual type (potentially derived from generics) but that is implied by the current API anyway. Alternatively we would have to consider the {{PersistentProperty}} instances different with the downsides we discussed.

What do you think?","11/Apr/12 10:51 AM;mhunger;So implementing hashCode() using the field and equals with field + TypeInformation should be enough. 

And I agree that using TypeInformation to retrieve the actual type for this property is the way to go.

I really would like to have two instances being comparable and equal if they are both constructed from the same actual class.",,,,,,,,,,,,,,,,,,,,,
PreferredConstructor.Parameter does not have equals(...) and hashCode() methods,DATACMNS-120,41763,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,16/Jan/12 10:17 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,11/Apr/12 9:25 AM,1.2 Final,,,,,,,1.3 RC1,,,,,Core,,,,0,,,,,,,,If this is fixed {{MappedConstructor.getFor(...)}} in Spring Data Mongo could rather hold a {{Map}} of {{Parameter}} to {{MappedParameter}} to avoid iterating over all {{MappedParameter}} instances on each call.,,;03/Apr/12 1:31 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,230688000,,,,,,29096,false,tmarshall(tmarshall),,,,0|i03hbj:,20348,17674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong custom implementation automatically detected,DATACMNS-114,41396,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,wdekker,wdekker,19/Dec/11 3:21 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,20/Dec/11 3:35 AM,1.2 RC1,,,,,,,1.2 Final,,,,,Repositories,,,,0,,,,,,,,"We have two repositories with a similar name suffix. Both repositories have a custom interface and implementation, also ending with a similar name suffix. When automatically scanning the repositories, and their custom implementation, the wrong custom implementation is wired to our repository bean. Resulting in the following exception:

{noformat}
Caused by: java.lang.IllegalArgumentException: No property find found for type class com.myproject.Contract
	at org.springframework.data.repository.query.parser.Property.<init>(Property.java:76)
	at org.springframework.data.repository.query.parser.Property.<init>(Property.java:97)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:312)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:326)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:326)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:326)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:292)
	at org.springframework.data.repository.query.parser.Property.from(Property.java:251)
	at org.springframework.data.repository.query.parser.Property.from(Property.java:232)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:48)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:242)
	at org.springframework.data.repository.query.parser.PartTree.buildTree(PartTree.java:101)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:77)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:92)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:159)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:71)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:303)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:157)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:120)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:39)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)
	... 67 more
{noformat}

For example:

We have a repository named {{ContractRepository}} with a custom interface {{ContractRepositoryCustom}} and an implementation {{ContractRepositoryImpl}}, all defined inside the same package. In another package we have a repository, for another entity type, named {{AnotherContractRepository}} with a custom interface {{AnotherContractRepositoryCustom}} and an implementation {{AnotherContractRepositoryImpl}}. When starting the application context, the {{contractRepository}} bean is linked to our {{anotherContractRepositoryImpl}} rather than the {{contractRepositoryImpl}}.

This behavior seems to be operating system dependent, as it only occurs on our Linux CI server.

The cause of our problem can be found at {{AbstractRepositoryConfigDefinitionParser.detectCustomImplementation(...)}}. It might be desirable to scan on {{getImplementationClassName()}} before applying the wildcard prefix.",,;20/Dec/11 3:34 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,20/Dec/11 3:35 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19232/mylyn-context.zip,,,,,,,,,,,,,233107200,,,,,2011-12-19 09:39:42.529,28728,false,tmarshall(tmarshall),,,,0|i02vq7:,16850,15852,,,,,,"19/Dec/11 9:39 AM;olivergierke;Good catch! As we're using a {{RegexTypeFilter}} which operates on the fully-qualified class name both implementation classes get found during component scanning. As we simply return the first one found we run into a situation where we return the wrong one (depending on the order of the classpath resources returned - probably the point where you see the OS dependence). I think this should be easily solveable by trying to lookup classes matching {{.*\.$implementationClassName}}.

Moving this to Spring Data Commons as it has to be fixed over there.",,,,,,,,,,,,,,,,,,,,,,,
"Add dynamic finder keywords StartingWith, EndingWith & Containing",DATACMNS-111,41277,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,matthewadams,matthewadams,13/Dec/11 10:45 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,21/Mar/12 9:11 AM,1.0 Final,1.2 M2,,,,,,1.3 RC1,,,,,Repositories,,,,0,finder,jdoql,jpa,jpql,,,,"When querying for substrings, enable more portable query keywords ""StartingWith"", ""EndingWith"" & ""Containing"" [similar to JDOQL's support for String#startsWith(String), #endsWith(String) & #contains(String)].  Also, clarify ""Like"" queries to be provider-specific.  For example, ""Like"" in SD JPA would mean that the given string being searched for is JPA-specific and can contain JPQL's ""_"" & ""%"" wildcards and the JPQL LIKE ESCAPE character is ""\"".",,;21/Mar/12 9:10 AM;olivergierke;1800,,,,,,,,0,0,1800,"9,223,372,036,854,775,807%",0,0,1800,,,,,,,,,,,,,,21/Mar/12 9:11 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19539/mylyn-context.zip,,,,,,,,,,,,,225072000,,,,,2011-12-19 09:18:21.997,28609,false,tmarshall(tmarshall),,,,0|i02tuf:,16544,15563,http://forum.springsource.org/showthread.php?120072-findByXxxLike-amp-Wildcards,,,,,19/Dec/11 9:18 AM;olivergierke;Good catch! A bit short for the 1.2 timeframe but a definitive must-have for the first 1.3 milestone.,21/Mar/12 9:11 AM;olivergierke;Added keywords and created related tickets in the store implementation projects.,,,,,,,,,,,,,,,,,,,,,,
Setup hybrid Spring 3.0.6 / 3.1 build,DATACMNS-103,41071,,Task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,28/Nov/11 3:01 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,28/Nov/11 7:16 AM,,,,,,,,1.2 RC1,,,,,,,,,0,,,,,,,,Would be cool if we could build a build setup that allows compiling and building against Spring 3.1 but maintain a base 3.0.6 dependency for existing users.,,;28/Nov/11 6:59 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,DATAMONGO-335,,,,,,,,,,,,,,,,,,,234921600,,,,,,28399,false,tmarshall(tmarshall),,,,0|i02m9z:,15318,14556,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Document usage of DomainClassConverter, DomainClassPropertyEditor as well as PageableArgumentResolver",DATACMNS-95,40618,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,30/Oct/11 5:38 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Dec/11 6:15 AM,1.2 M1,1.2 M2,,,,,,1.2 RC1,,,,,Documentation,,,,1,,,,,,,,"The following classes for general Spring conversion and Spring MVC integration are not documented yet:

* {{DomainClassConverter}}
* {{DomainClassPropertyEditor}}
* {{PageableArgumentResolver}}",,;02/Dec/11 6:11 AM;olivergierke;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,02/Dec/11 6:16 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19174/mylyn-context.zip,,,,,,,,,,,,,237427200,,,,,,27927,false,tmarshall(tmarshall),,,,0|i00wbr:,5282,6577,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add more comparison operators to Type,DATACMNS-94,40585,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,mhunger,mhunger,26/Oct/11 6:15 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,05/Dec/11 5:44 AM,,,,,,,,1.2 RC1,,,,,,,,,0,,,,,,,,"{code}
Type.REGEXP, ""=~"" // e.g. n.name =~ /Tob.*/
Type.EXISTS, """" //e.g. property exists n.name
{code}
",,;05/Dec/11 3:39 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,05/Dec/11 5:44 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19189/mylyn-context.zip,,,,,,,,,,,,,237772800,,,,,,27893,false,tmarshall(tmarshall),,,,0|i00wfz:,5301,6595,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OSGi manifest should have dynamic import package directive added,DATACMNS-93,40561,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,24/Oct/11 12:41 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,08/Nov/11 3:22 AM,1.2 M1,1.2 M2,,,,,,1.2 RC1,,,,,,,,,0,,,,,,,,In OSGi environments {{RepositoryInterfaceAwareBeanPostProcessor}} might not be able to load repository interfaces if they are located in a different bundle. Adding {{DynamicImport-Package: *}} to the OSGi manifest should do the trick.,,;08/Nov/11 3:21 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,DATACMNS-83,,,,,,08/Nov/11 3:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19096/mylyn-context.zip,,,,,,,,,,,,,236131200,,,,,2011-11-14 04:31:55.744,27853,true,tmarshall(tmarshall),,,,0|i00wsv:,5359,6653,,,,,,14/Nov/11 4:31 AM;ractive;Thanks for adding this!,,,,,,,,,,,,,,,,,,,,,,,
CrudRepository exceptions,DATACMNS-91,40170,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Trivial,Fixed,olivergierke,ash2k,ash2k,15/Oct/11 8:26 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Dec/11 4:59 AM,1.1 Final,1.2 M1,,,,,,1.2 RC1,,,,,Repositories,,,,0,javadoc,,,,,,,"1. org.springframework.data.repository.CrudRepository's methods findOne(ID id), exists(ID id) throw java.lang.IllegalArgumentException but delete(ID id) don't. It seems it should, right?
2. Above mentioned methods have typos in javadocs - they mention ""primaryKey"" instead of ""id"".
",,;02/Dec/11 4:54 AM;olivergierke;3000,,,,,,,,0,0,3000,"9,223,372,036,854,775,807%",0,0,3000,,,,,,,,DATAMONGO-302,,,,,,02/Dec/11 4:59 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19172/mylyn-context.zip,,,,,,,,,,,,,238723200,,,,,,27730,true,tmarshall(tmarshall),,,,0|i00w8f:,5267,6561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TypeDiscoverer.getMapValueType causes ArrayIndexOutOfBoundsException in some cases,DATACMNS-88,40152,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,shutyaev,shutyaev,13/Oct/11 11:33 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,05/Dec/11 7:59 AM,,,,,,,,1.2 RC1,,,,,Core,,,,0,,,,,,,,"The issue can be illustrated on a simple example:
{code:java}
public class Localized<T> extends HashMap<Locale, T> {
     // class body
}
public class Foo {
     Localized<String> param;
}
{code}
So when {{TypeDiscoverer.getMapValueType}} is invoked to determine the type of {{Foo.param}} at these lines:
{code:java}
if (type instanceof ParameterizedType) {
     ParameterizedType parameterizedType = (ParameterizedType) type;
     return createInfo(parameterizedType.getActualTypeArguments()[1]);
}
{code}
we get an {{ArrayIndexOutOfBoundsException}} because {{getActualTypeArguments}} returns only {{String}} and not {{Locale, String}} as is expected.",,;05/Dec/11 7:59 AM;olivergierke;10800,,,,,,,,0,0,10800,"9,223,372,036,854,775,807%",0,0,10800,,,,,,,,,,,,,,05/Dec/11 7:59 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19192/mylyn-context.zip,,,,,,,,,,,,,234316800,,,,,,27712,true,tmarshall(tmarshall),,,,0|i00x0f:,5393,6687,,,,,,18/Oct/11 11:13 PM;shutyaev;Is there any progress on this issue? Is it at least confirmed?,05/Dec/11 2:56 AM;shutyaev;Any progress?,,,,,,,,,,,,,,,,,,,,,,
RepositoryInterfaceAwareBeanPostProcessor should log not being able to load the repo interface,DATACMNS-83,39986,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,30/Sep/11 1:05 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,30/Sep/11 2:42 AM,1.2 M1,,,,,,,1.2 M2,,,,,Repositories,,,,0,,,,,,,,If a repository interface configured on a {{RepositoryFactoryBean}} cannot be loaded we currently don't return a predicted bean type from {{RepositoryInterfaceAwareBeanPostProcessor}}. We should log a warning in case this happens as it's quite hard to discover the root cause of the repository type not be discovered.,,;30/Sep/11 1:20 AM;olivergierke;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,30/Sep/11 2:38 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18857/mylyn-context.zip,,,,,,,,,,,,,237945600,,,,,2011-10-24 05:04:28.56,27544,true,tmarshall(tmarshall),,,,0|i00wsn:,5358,6652,,,,,,"24/Oct/11 5:04 AM;ractive;We use spring data neo4j in an OSGi environment. After this change I noticed WARN log entries that state ""Couldn't load class ...."" and I had a look at the code.
This approach does not work with OSGi, because the classloader RepositoryInterfaceAwareBeanPostProcessor.class.getClassLoader() has no access to the interface classes of our bundle. One solution would be to use the dreaded ""DynamicImport-Package: *"" in spring data commons to let spring data commons know all other packages. Another approach could be to pass the beanClass param to the getClassForPropertyValue method and try to load the class with this class loader, but I'm not sure what the class in beanClass really is...

I'm also a bit puzzled why it works anyway!?!","24/Oct/11 5:48 AM;ractive;Adding ""DynamicImport-Package: *"" to the template.mf works. Spring data commons then can load repository interfaces of any bundle.
The other approach by passing beanClass to getClassForPropertyValue doesn't work, because beanClass is a class is from spring data neo4j.

Anyway. I'd recommend adding ""DynamicImport-Package: *"" to the template.mf. See [pull request 12|https://github.com/SpringSource/spring-data-commons/pull/12].",,,,,,,,,,,,,,,,,,,,,,
Add LessThanEquals and GreaterThanEquals as supported query keywords,DATACMNS-78,39934,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,27/Sep/11 1:57 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,27/Sep/11 2:33 AM,1.2 M1,,,,,,,1.2 M2,,,,,Repositories,,,,0,,,,,,,,,,;27/Sep/11 2:32 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,27/Sep/11 2:33 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18833/mylyn-context.zip,,,,,,,,,,,,,240364800,,,,,,12685,false,tmarshall(tmarshall),,,,0|i00x2f:,5402,6696,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reference documentation contains invalid cross reference,DATACMNS-71,39596,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Trivial,Fixed,olivergierke,olivergierke,olivergierke,05/Sep/11 4:08 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Dec/11 6:15 AM,1.2 M1,,,,,,,1.2 RC1,,,,,Documentation,,,,0,,,,,,,,The table listing namespace attributes contains a reference to a section not existing.,,;02/Dec/11 5:20 AM;olivergierke;1200,;02/Dec/11 5:45 AM;olivergierke;2400,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,02/Dec/11 6:15 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19173/mylyn-context.zip,,,,,,,,,,,,,242179200,,,,,,6088,false,tmarshall(tmarshall),,,,0|i00w8n:,5268,6562,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance issues with RepositoryInterfaceAwareBeanPostProcessor when using @Transactional,DATACMNS-69,39500,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,netke,netke,30/Aug/11 2:50 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,31/Aug/11 12:33 PM,1.1 Final,,,,,,,1.2 M1,,,,,Repositories,,,,5,bean-post-processor,performance,repository,,,,,"There is a major performance issue with {{RepositoryInterfaceAwareBeanPostProcessor}} when using {{@Transactional}} support in application's service classes. The problem is that the method {{RepositoryInterfaceAwareBeanPostProcessor.predictBeanType(Class<?> beanClass, String beanName)}} is relatively slow due to a usage of {{ClassUtils.resolveClassName(...)}}. The actual problem is that the method in question is called whenever someone calls {{BeanFactoryUtils.beansOfTypeIncludingAncestors(...)}} and that someone happens to be {{TransactionAspectUtils.getTransactionManager(...)}} method, which is called before a call of any method annotated with {{@Transactional}} annotation. These calls happens because {{RepositoryInterfaceAwareBeanPostProcessor}} implements {{SmartInstantiationAwareBeanPostProcessor}}.

Can {{RepositoryInterfaceAwareBeanPostProcessor.predictBeanType(Class<?> beanClass, String beanName)}} method be optimized?",,;31/Aug/11 12:24 PM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,31/Aug/11 12:33 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18702/mylyn-context.zip,,,,,,,,,,,,,242265600,,,,,2011-08-30 08:07:40.886,3850,false,tmarshall(tmarshall),,,,0|i00x47:,5410,6704,,,,,,"30/Aug/11 8:07 AM;sslavic;Root cause: SPR-6870
See [this|http://jawspeak.com/2010/11/28/spring-slow-autowiring-by-type-getbeannamesfortype-fix-10x-speed-boost-3600ms-to/] for more details.","31/Aug/11 12:33 PM;olivergierke;Good catch! I've added caching for the types resolved so that we don't try to continuously re-resolve the type based on the {{BeanDefinition}}. Deployed to snapshot repository, so feel free to give it a try.","01/Sep/11 4:31 AM;philw;Hi Oliver,

I think there is a problem with the fix committed for this:
https://github.com/SpringSource/spring-data-commons/commit/a32d80379b085ed0751aacdc2187ea06bb91fab2

The problem is that the cache key cannot be the beanClass as it is always JpaRepositoryFactoryBean.  This means if I have more than one Repository autowire fails because the second repository always resolves to the bean type of the first.

Can the cache be keyed on the bean name instead?  

Phil.



",01/Sep/11 4:46 AM;philw;https://github.com/SpringSource/spring-data-commons/pull/9,"04/Sep/11 10:28 PM;olivergierke;Thanks, Phil!",,,,,,,,,,,,,,,,,,,
Upgrade to Querydsl 2.2.0,DATACMNS-53,38809,,Task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,19/Jul/11 3:49 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,19/Jul/11 3:51 AM,,,,,,,,1.1 RC1,,,,,,,,,0,,,,,,,,,,;19/Jul/11 3:50 AM;olivergierke;300,,,,,,,,,0,300,,,0,300,,,,,,,,,,,,,,19/Jul/11 3:51 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18484/mylyn-context.zip,,,,,,,,,,,,,246326400,,,,,,2192,false,tmarshall(tmarshall),,,,0|i00x7r:,5426,6720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extend mapping metadata to allow defining order of PersistentProperties,DATACMNS-50,38662,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,06/Jul/11 8:06 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,06/Jul/11 10:21 AM,1.1 M2,,,,,,,1.1 RC1,,,,,Mapping / Conversion,,,,0,,,,,,,,The order {{PersistentProperty}} instances are processed (e.g. by calling {{PersistentEntity.doWithProperties(…)}}) might be important to clients. Thus we should create a possibility to hook in a comparator defining the property order to set up a {{TreeMap}} with so that {{PersistentProperty}} instances are ordered upon addition.,,;06/Jul/11 10:12 AM;olivergierke;1980,,,,,,,,,0,1980,,,0,1980,,,,,,,,,,,,,,06/Jul/11 10:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18427/mylyn-context.zip,,,,,,,,,,,,,247449600,,,,,,2194,false,tmarshall(tmarshall),,,,0|i00x87:,5428,6722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create infrastructure to externalize queries,DATACMNS-49,38505,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,23/Jun/11 4:15 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,23/Jun/11 11:48 AM,1.1 M2,,,,,,,1.1 RC1,,,,,Repositories,,,,0,,,,,,,,,,;23/Jun/11 11:45 AM;olivergierke;10800,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,23/Jun/11 11:48 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18391/mylyn-context.zip,,,,,,,,,,,,,248572800,,,,,,2195,false,tmarshall(tmarshall),,,,0|i00x8f:,5429,6723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Property check for repository methods fails for properties starting with _,DATACMNS-45,38271,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,07/Jun/11 9:26 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,08/Jun/11 2:46 PM,1.1 M1,,,,,,,1.1 M2,,,,,Repositories,,,,0,,,,,,,,"If you have a class

{code}
class Person {
  private int _age;
  
  public int getAge() {
    return _age;
  }
}
{code}

and a repository interface

{code}
interface PersonRepository extends Repository<Person, Long> {
  Person findByAge(int age);
}
{code}

creating a proxy instance for the interface will fail with an exception claiming that no property {{age}} is found. This is due to the fact that {{TypeDiscoverer}} is currently only considering fields right now and we should think about if it makes sense to make it really property aware.

A workaround to simply use {{findBy_Age}} fails as well as {{_}} is used as custom delimiter to manually define property paths. So we should at least guard the code to correctly resolve {{_age}} in case there's no content in front of the {{_}}.",,;07/Jun/11 3:49 PM;olivergierke;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,08/Jun/11 2:46 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18317/mylyn-context.zip,,,,,,,,,,,,,249955200,,,,,,2199,false,tmarshall(tmarshall),,,,0|i00x9b:,5433,6727,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ParametersParameterAccessor iterator will never iterate...,DATACMNS-44,38244,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,gwa,gwa,05/Jun/11 11:19 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,07/Jun/11 12:44 PM,1.1 M1,,,,,,,1.1 M2,,,,,Repositories,,,,0,,,,,,,,"In the ParametersParameterAccessor class, the BindableParameterIterator is invalid : 

The hasNext() method test ""values.length <= currentIndex;"" instead of ""values.length >= currentIndex;"" ...",,;07/Jun/11 12:44 PM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,07/Jun/11 12:44 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18315/mylyn-context.zip,,,,,,,,,,,,,250128000,,,,,,2200,true,tmarshall(tmarshall),,,,0|i00x9j:,5434,6728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreferredConstructorDiscoverer - wrong exception message,DATACMNS-43,38241,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Trivial,Fixed,olivergierke,the4yeast,the4yeast,05/Jun/11 4:02 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,07/Jun/11 11:51 AM,1.1 M1,,,,,,,1.1 M2,,,,,,,,,0,,,,,,,,"The exception is thrown at
{code}
org.springframework.data.mapping.PreferredConstructorDiscoverer.<init>(PreferredConstructorDiscoverer.java:81).
{code}

The message is ""Multiple constructors with arguments found in class [xxx]! Annotate one with @PreferedConstructor explicitly to select it to be used in persistence operations"". There is no such annotation, the name is {{PersistenceConstructor}}.",,;07/Jun/11 11:51 AM;olivergierke;300,,,,,,,,600,600,300,50%,600,600,300,,,,,,,,,,,,,,07/Jun/11 11:51 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18314/mylyn-context.zip,,,,,,,,,,,,,250128000,,,,,,2201,true,tmarshall(tmarshall),,,,0|i00x9r:,5435,6729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MappingContext does not map BigDecimal correctly,DATACMNS-42,38236,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Complete,olivergierke,olivergierke,olivergierke,03/Jun/11 8:44 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,06/Jun/11 3:52 PM,1.1 M1,,,,,,,1.1 M2,,,,,,,,,0,,,,,,,,,,;06/Jun/11 2:49 PM;olivergierke;5400,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,06/Jun/11 3:52 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18312/mylyn-context.zip,,,,,,,,,,,,,250128000,,,,,2011-06-05 04:07:40.635,2202,true,tmarshall(tmarshall),,,,0|i00x9z:,5436,6730,,,,,,"05/Jun/11 4:07 AM;the4yeast;Now it's not possible to use BigDecimals, a PersistenceConstructor has to be used. Since it cannot be used directly on the class, a workaround has to be created.

Any possibility of improving it? Thanks in advance :)",,,,,,,,,,,,,,,,,,,,,,,
Rename @RepositoryProxy to @RepositoryDefinition,DATACMNS-40,38087,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,23/May/11 2:44 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,24/May/11 8:34 AM,1.0 Final,,,,,,,1.1 M1,,,,,Repositories,,,,0,,,,,,,,,,;23/May/11 2:53 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,251251200,,,,,,2204,false,tmarshall(tmarshall),,,,0|i00xaf:,5438,6732,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TypeInformation should support WildcardType,DATACMNS-39,38074,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,22/May/11 3:53 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Dec/11 6:37 AM,1.0 Final,,,,,,,1.2 RC1,,,,,,,,,0,,,,,,,,"Currently properties that use wildcard types are not supported by the {{TypeInformation}} subsystem. This means that properties like this one

{code}
class Foo {
  List<? extends Bar> bars;
}
{code}

cause an {{IllegalArgumentException}}.",,;02/Dec/11 6:36 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,02/Dec/11 6:37 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/19175/mylyn-context.zip,,,,,,,,,,,,,251337600,,,,,,2205,false,tmarshall(tmarshall),,,,0|i00xan:,5439,6733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add delete by id method to repository interface,DATACMNS-35,37028,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,tony_k,tony_k,27/Mar/11 11:00 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,11/May/11 9:41 AM,1.0 Final,,,,,,,1.1 M1,,,,,Repositories,,,,0,,,,,,,,"Currently one has to provide an instance of the {{T}} type for repository to delete, sometimes in a web app, all you have handy is the id as passed encoded in a hyperlink, so there is an extra step to construct or look up an instance of {{T}} for a delete operation.

It would be more convenient to have a method as {{delete(ID id)}}, so unless this is a deliberate design decision, request is to add such a method.",,;11/May/11 9:41 AM;olivergierke;2700,,,,,,,,0,0,2700,"9,223,372,036,854,775,807%",0,0,2700,,,,,,,,,,,,,,,,,,,,,,,,,,,252288000,,,,,2011-04-15 11:12:23.98,2209,false,tmarshall(tmarshall),,,,0|i00xbj:,5443,6737,,,,,,"15/Apr/11 11:12 AM;olivergierke;There's two major reasons we don't expose an {{delete(ID id)}} yet. The first one is that the {{EntityManager}} only exposes a {{remove(Object entity)}} int the first place so that it is rather simple to do that. The second point aligns to you're requirement of not loading the entity at all. To achieve that we'd have to trigger a JQPL query which - according to the spec - does not cause related entities to be updated or deleted. This would the create a delta in the semantics of {{delete(T entity)}} and {{delete(ID id)}} which is a bit inconvenient.

Having that said, I perfectly get your point of deleting an entity by id just from a convenience point of view. So I think we could add an {{delete(ID id)}} method that uses {{findOne(ID id)}} under the hood and would thus save you one call to the repository plus execute the operation in a single transaction then.",11/May/11 9:41 AM;olivergierke;Added method to the interface as well as implementations for JPA and Mongo.,,,,,,,,,,,,,,,,,,,,,,
Improve algorithm to detect persistence constructor,DATACMNS-34,37818,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,09/May/11 2:18 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,10/May/11 1:38 AM,1.0 Final,,,,,,,1.1 M1,,,,,,,,,0,,,,,,,,"The algorithm to detect persistence constructors has some drawbacks currently:

# It neglects no-arg constructors that have an {{@PersistenceContext}} annotation. This might be useful if the constructors having arguments are taking domain types that derive an internal structure which is persisted. In that case you don't want to expose these low-level inner types in a constructor but rather use a protected empty one and let the converter populate the properties then.
# The algorithm working with the constructors taking parameters relies on the order of constructors returned by {{Class.getDeclaredConstructors()}} which is not guaranteed to be consistent. In case of multiple constructors and no usage of the {{@PersistenceConstructor}} annotation the constructor being used can not be determined unambiguously.

I suggest to alter the algorithm to the following:

# Use default constructor if no constructor is specified
# Use single defined constructor if only one is specified
# Insist on {{@PersistenceConstructor}} if multiple constructors were found",,"Basic algorithm refinements, eliminated some bugs discovered on the way. Extended generification of mapping context.;10/May/11 1:38 AM;olivergierke;18000",,,,,,,,0,0,18000,"9,223,372,036,854,775,807%",0,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,252460800,,,,,,2210,false,tmarshall(tmarshall),,,,0|i00xbr:,5444,6738,,,,,,"10/May/11 1:38 AM;olivergierke;I slightly modified the 3rd step of the algorithm documented above. If we have multiple constructors found, none of them is annotated and there's a no-arg constructor amongst them, we will chose this one as persistence constructor. Falling back to the no-arg constructor is a neat thing to persist classes that we don't have under control. So the priority is pretty much as follows:

# Explictly annotated {{@PersistenceConstructor}}
# No-arg constructor
# Single defined multiple-argument constructor

",,,,,,,,,,,,,,,,,,,,,,,
Repository.count() return type should be a primitive long,DATACMNS-33,37485,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,ralph,ralph,13/Apr/11 10:28 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,21/Apr/11 1:09 AM,1.0 Final,,,,,,,1.1 M1,,,,,Repositories,,,,0,,,,,,,,"The Interface {{org.springframework.data.repository.Repository}} has the method

{{Long count();}}

It's return type is {{Long}} (Wrapper Class), but it should be a primitive {{long}}, because there is no reason to return null.",,;21/Apr/11 1:05 AM;olivergierke;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,21/Apr/11 1:09 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18055/mylyn-context.zip,,,,,,,,,,,,,254707200,,,,,,2211,true,tmarshall(tmarshall),,,,0|i00xbz:,5445,6739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unify Querydsl support code out of Spring Data JPA and Spring Data Mongo,DATACMNS-32,37588,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,20/Apr/11 9:37 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,20/Apr/11 11:43 AM,1.0 Final,,,,,,,1.1 M1,,,,,Repositories,,,,0,,,,,,,,Spring Data JPA and Spring Data Mongo contain copied support code for Querydsl integration. We should refactor that into Spring Data Commons to avoid duplication.,,;20/Apr/11 11:43 AM;olivergierke;4500,,,,,,,,0,0,4500,"9,223,372,036,854,775,807%",0,0,4500,,,,,,,,,,,,,,20/Apr/11 11:43 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18052/mylyn-context.zip,,,,,,,,,,,,,254102400,,,,,,2212,false,tmarshall(tmarshall),,,,0|i00xc7:,5446,6740,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check for null in arguement passed to MappingBeanHelper.isSimpleType,DATACMNS-31,37585,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,mark.pollack,mark.pollack,20/Apr/11 8:36 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,10/Jun/11 3:05 PM,,,,,,,,1.1 M2,,,,,,,,,0,,,,,,,,"I don't remember now how I ended up in this case while doing some testing with Mongo, but got a NPE is method.",,;10/Jun/11 3:03 PM;olivergierke;360,,,,,,,,,0,360,,,0,360,,,,,,,,,,,,,,,,,,,,,,,,,,,254102400,,,,,,2213,false,tmarshall(tmarshall),,,,0|i00xcf:,5447,6741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make org.springframework.data.domain.* java.io.Serializable,DATACMNS-30,37505,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Blocker,Fixed,olivergierke,speajus,speajus,14/Apr/11 8:49 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,20/Apr/11 10:21 AM,1.0 M2,,,,,,,1.1 M1,,,,,,,,,0,third-party-compatibility,,,,,,,"Please make the data domain class's implement java.io.Serializable.

I expose my JPARepositoryDAO's as JMS Queue's, via Apache Camel  All works well with the exception of Page not being java.io.Serializable, Externalizable is a pain, it would be really great if this java.io.Serializable could be added to the domain class's.  Now I have to either patch, implement the same interface and map, or something else.  I recognize that there is a bit of an issue with the fields being final and the no args constructor requirement

This is also important in many webapp situations where these might be put in the HttpServletSession, in a clustered environment it won't work.",,;20/Apr/11 8:19 AM;olivergierke;2400,,,,,,,,28800,28800,2400,8%,28800,28800,2400,,,,,,,,,,,,,,20/Apr/11 10:21 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/18051/mylyn-context.zip,,,,,,,,,,,,,253843200,,,,,2011-04-20 10:21:11.956,2214,true,tmarshall(tmarshall),,,,0|i00xcn:,5448,6742,,,,,,20/Apr/11 10:21 AM;olivergierke;Fixed build should be available in the snapshot repository.,"23/Apr/11 7:03 AM;philippkoelmel;Serializable is missing on class Sort.Order, thus PageRequest won't go over the wire, if you use Sort. ",,,,,,,,,,,,,,,,,,,,,,
Non-public constructor not regarded as persistence constructor,DATACMNS-26,37006,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Mar/11 3:43 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,29/Mar/11 9:12 AM,,,,,,,,1.0 M6,,,,,,,,,0,,,,,,,,"The detection mechanism for the persistence constructor does not seem to detect private constructors. Given the following class:

{code}
public class Foo {

  public static final Foo ONE = new Foo(1);
  public static final Foo TWO = new Foo(2);

  private int value;
  
  private Foo(int value); { ... }
}
{code}

Same applies to package protected constructors. Of course one would better use an enum for that currently but one might need this construct here to get Mongo's {{$gt}} and {{$lt}} to work correctly.",,;29/Mar/11 9:06 AM;olivergierke;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,256348800,,,,,,2218,false,tmarshall(tmarshall),,,,0|i00xdj:,5452,6746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RepositoryFactorySupport.getRepositoryBaseClass(…) should rather get a RepositoryMetadata instead of plain repository interface,DATACMNS-24,37055,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,28/Mar/11 11:27 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,04/Apr/11 11:07 PM,1.0 M5,,,,,,,1.0 M6,,,,,Repositories,,,,0,,,,,,,,"Implementations of that class might want to inspect entity information to decide about the base class as well, thus it would be helpful not to have to lookup that information manually.",,;31/Mar/11 12:27 PM;olivergierke;600,;04/Apr/11 11:07 PM;olivergierke;3600,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,04/Apr/11 11:07 PM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17989/mylyn-context.zip,,,,,,,,,,,,,256089600,,,,,,2220,false,tmarshall(tmarshall),,,,0|i00xdz:,5454,6748,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin repository missing for maven build,DATACMNS-22,36783,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Trivial,Fixed,olivergierke,sslavic,sslavic,12/Mar/11 3:58 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,20/Mar/11 11:27 AM,1.0 M4,,,,,,,1.0 M5,,,,,,,,,0,,,,,,,,"Somewhat related to DATAJPA-26 repository.springframework.maven.release plugin repository ( http://maven.springframework.org/release ) is missing for spring data commons project:

""Unresolveable build extension: Plugin org.springframework.build.aws:org.springframework.build.aws.maven:3.1.0.RELEASE or one of its dependencies could not be resolved...""",,;20/Mar/11 11:24 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,256780800,,,,,2011-03-20 11:27:31.196,2222,false,tmarshall(tmarshall),,,,0|i00xef:,5456,6750,,,,,,20/Mar/11 11:27 AM;olivergierke;Should be available in tonight's snapshot. The plugin is actually only needed to distribute release artifacts so you should be fine just commenting it out to get it building.,,,,,,,,,,,,,,,,,,,,,,,
Rename Repository.findById(…) to findOne(…),DATACMNS-20,36738,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,10/Mar/11 9:54 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,11/Mar/11 9:22 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repositories,,,,0,,,,,,,,All finder methods inside {{Repository}} are named {{findAll…}} so it's a bit weired that the method to find a single element by id actually refers to the property and is not called {{findOne}} instead. Especially as we already have {{findOne(Specification specification)}} inside JPA sub-interface for example. So I suggest ro rename the method to {{findOne(ID id)}}.,,;11/Mar/11 9:22 AM;olivergierke;900,,,,,,,,0,0,900,"9,223,372,036,854,775,807%",0,0,900,,,,,,,,,,,,,,11/Mar/11 9:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17718/mylyn-context.zip,,,,,,,,,,,,,257644800,,,,,,2224,false,tmarshall(tmarshall),,,,0|i00xev:,5458,6752,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid entity metadata when domain class implements persistable,DATACMNS-19,36550,,Bug,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Critical,Fixed,olivergierke,sslavic,sslavic,28/Feb/11 2:07 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Mar/11 12:11 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repositories,,,,2,,,,,,,,"Latest snapshot (spring-data-jpa-1.0.0.BUILD-20110227.093237-171.jar) introduced a bug which makes find queries (with Specification API) to fail for domain objects which implement {{Persistable}}. I believe issue is either in {{JpaRepositoryFactory}} stragery for creating entity information - if domain class implements {{Persistable}}, {{PersistableEntityMetadata}} fixes domain class to {{Persistable.class}} which looses actual domain class. Here is relevant stack trace snippet:

{code}
java.lang.IllegalArgumentException: Not an entity: interface org.springframework.data.domain.Persistable
	at org.hibernate.ejb.metamodel.MetamodelImpl.entity(MetamodelImpl.java:160)
	at org.hibernate.ejb.criteria.QueryStructure.from(QueryStructure.java:138)
	at org.hibernate.ejb.criteria.CriteriaQueryImpl.from(CriteriaQueryImpl.java:179)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.applySpecificationToCriteria(SimpleJpaRepository.java:450)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.getQuery(SimpleJpaRepository.java:385)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:268)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.invoke(RepositoryFactorySupport.java:249)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy60.findAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy61.findAll(Unknown Source)
{code}",,"Applied patch, cleanup.;01/Mar/11 11:58 PM;olivergierke;1200",,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,28/Feb/11 6:53 AM;sslavic;DATAJPA-34-part-1.patch;https://jira.spring.io/secure/attachment/17671/DATAJPA-34-part-1.patch,28/Feb/11 6:53 AM;sslavic;DATAJPA-34-part-2.patch;https://jira.spring.io/secure/attachment/17672/DATAJPA-34-part-2.patch,02/Mar/11 12:11 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17681/mylyn-context.zip,,,,,,,,,,,258508800,,,,,,2225,true,tmarshall(tmarshall),,,,0|i00xf3:,5459,6753,,,,,,28/Feb/11 6:53 AM;sslavic;Patches that did the trick for me: [^DATAJPA-34-part-1.patch] & [^DATAJPA-34-part-2.patch],,,,,,,,,,,,,,,,,,,,,,,
Create infrastructure to post process RepositoryQuery objects,DATACMNS-18,36529,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,25/Feb/11 9:43 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,10/Mar/11 9:03 AM,1.0 M3,,,,,,,1.0 M4,,,,,Repositories,,,,0,,,,,,,,To be able to create indexes for repositories we have to be able to listen to the creation of {{RepositoryQuery}} objects and trigger listeners.,,;10/Mar/11 9:03 AM;olivergierke;14400,,,,,,,,0,0,14400,"9,223,372,036,854,775,807%",0,0,14400,,,,,,,,,,,,,,10/Mar/11 9:04 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17708/mylyn-context.zip,,,,,,,,,,,,,257644800,,,,,,2226,false,tmarshall(tmarshall),,,,0|i00xfb:,5460,6754,,,,,,10/Mar/11 9:03 AM;olivergierke;Fixed with https://github.com/SpringSource/spring-data-commons/commit/e157f380bb2109b7a6fe45a909c495b67e7b6ed3.,,,,,,,,,,,,,,,,,,,,,,,
Introduce value object for domain class and repository metadata,DATACMNS-17,36488,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,23/Feb/11 11:44 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,25/Feb/11 5:04 AM,,,,,,,,1.0 M4,,,,,Repositories,,,,0,,,,,,,,Currently the repositories are using the domain class directly and interact with {{IsNewAware}} and {{IdAware}}.  We should introduce an interface for all this entity information and provide a basic value object to encapsulate the domain class and adapt repository- and  repository factory base classes to rather use this one.,,;25/Feb/11 4:43 AM;olivergierke;7200,,,,,,,,0,0,7200,"9,223,372,036,854,775,807%",0,0,7200,,,,,,,,,,,,,,25/Feb/11 5:04 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17662/mylyn-context.zip,25/Feb/11 4:49 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17661/mylyn-context.zip,,,,,,,,,,,,258940800,,,,,,2227,false,tmarshall(tmarshall),,,,0|i00xfj:,5461,6755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add Distinct as supported keyword,DATACMNS-15,36407,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,18/Feb/11 12:18 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,21/Feb/11 10:09 AM,,,,,,,,1.0 M4,,,,,Repositories,,,,0,,,,,,,,"The query parsing mechanism could detect a {{Distinct}} inside method name prefix, e.g. {{findDistinctBy}} and expose that through the {{PartTree}} class for {{AbstractQueryCreator}} to alterqueries about to becreated accordingly.",,;21/Feb/11 10:09 AM;olivergierke;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,21/Feb/11 10:09 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17643/mylyn-context.zip,,,,,,,,,,,,,259372800,,,,,,2229,false,tmarshall(tmarshall),,,,0|i00xfz:,5463,6757,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change log4j and slf4j-log4j12 maven dependencies scope,DATACMNS-14,36306,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,anthavio,anthavio,11/Feb/11 7:34 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,04/Apr/11 11:08 PM,1.0 M3,,,,,,,1.0 M4,,,,,,,,,2,,,,,,,,"In M3 pom.xml (used by spring-data-jpa M1) there are weird log4j dependencies alongside ""standard"" slf4j ones. Probably should be in test scope.",,;10/Mar/11 9:22 AM;olivergierke;1200,,,,,,,,0,0,1200,"9,223,372,036,854,775,807%",0,0,1200,,,,,,,,,,,,,,10/Mar/11 9:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17709/mylyn-context.zip,,,,,,,,,,,,,255484800,,,,,2011-02-14 01:36:40.521,2230,false,tmarshall(tmarshall),,,,0|i00xg7:,5464,6758,,,,,,"14/Feb/11 1:36 AM;sslavic;+1

For spring framework modules, logging implementation, log4j, is marked as compile scope optional dependency. Related ticket: SPR-5327","27/Feb/11 5:57 PM;pabloa;In my case, I am using slf4j + logback 

I had to put a weird exclusion in my pom.xml to wipe slf4j-log4j12

			<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons-core</artifactId>
			<version>1.0.0.M3</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>


I think we have to follow the SLF4J facade recommendation. Extracted from SLF4J Manual:

{quote}
As of SLF4J version 1.6.0, if no binding is found on the class path, then slf4j-api will default to a no-operation implementation discarding all log requests. Thus, instead of throwing a NoClassDefFoundError because the org.slf4j.impl.StaticLoggerBinder class is missing, SLF4J version 1.6.0 and later will emit a single warning message about the absence of a binding and proceed to discard all log requests without further protest. For example, let Wombat be some biology-related framework depending on SLF4J for logging. In order to avoid imposing a logging framework on the end-user, Wombat's distribution includes slf4j-api.jar but no binding. Even in the absence of any SLF4J binding on the class path, Wombat's distribution will still work out-of-the-box, and without requiring the end-user to download a binding from SLF4J's web-site. Only when the end-user decides to enable logging will she need to install the SLF4J binding corresponding to the logging framework chosen by the end-user. 
{quote}",10/Mar/11 9:22 AM;olivergierke;Reduced scope of all but the SLF4J API module to test scope which should then resolve yll off the issues you mentioned. Feel free to give it a try and report back if you still face problems.,04/Apr/11 10:15 AM;olivergierke;Log4J dependency is still in runtime scope due to reverted fix inside a merge commit.,04/Apr/11 11:08 PM;olivergierke;Should be fixed by Jon's latest commit that makes us using Commons Logging again.,,,,,,,,,,,,,,,,,,,
Move registration of PersistenceExceptionTranslationPostProcessor into JPA module,DATACMNS-13,36048,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,26/Jan/11 11:47 PM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,02/Feb/11 5:40 AM,1.0 M1,,,,,,,1.0 M2,,,,,Repositories,,,,0,,,,,,,,"Currently the abstract base class for implementing repository namespace parsers inevitably registers a {{PersistenceExceptionTranslationPostProcessor}}. As there might be repository implementations where the actual API we code against already does exception translation we unnecessary create the need to have a {{PersistenceExceptionTranslator}} bean registered in the {{ApplicationContext}}.

We should move that registration into the JPA specific namespace parser implementation.",,;27/Jan/11 4:52 AM;olivergierke;1200,,,,,,,,1800,1800,1200,66%,1800,1800,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,261360000,,,,,,2231,false,tmarshall(tmarshall),,,,0|i00xgf:,5465,6759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make usage of transactions optional for repositories,DATACMNS-12,36039,,Improvement,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Critical,Fixed,olivergierke,olivergierke,olivergierke,26/Jan/11 7:27 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,26/Jan/11 7:56 AM,1.0 M1,,,,,,,1.0 M2,,,,,Repositories,,,,0,,,,,,,,"The current {{RepositoryFactoryBeanSupport}} implementation creates a {{TransactionInterceptor}} using the configured transaction manager to create transactions. As the {{TransactionInterceptor}} simply skips creating a transaction if there is no transaction manager defined in the current {{ApplicationContext}} this works fine in cases where you use a NoSql store standalone. But as this will pick up any transaction manager defined in the {{ApplicationContext}} this will cause issues as soon as somebody starts using another (transaction-capable) persistence store (e.g. JPA).

So I suggest extracting the transaction setup into a {{TransactionalRepositoryFactoryBeanSupport}} class that the appropriate persistence technologies can then use. We have to update the namespace to reflect those changes as well.",,Refactoring and adapting changes in Spring Data JPA and Mongo;26/Jan/11 7:56 AM;olivergierke;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,26/Jan/11 7:59 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17549/mylyn-context.zip,,,,,,,,,,,,,261360000,,,,,,2232,false,tmarshall(tmarshall),,,,0|i00xgn:,5466,6760,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Introduce method name parser that allows building criteria based queries from method names,DATACMNS-10,35185,,New Feature,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,02/Dec/10 2:07 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,24/Dec/10 2:34 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,"With {{...repository.query.parser.PartSource}} we currently have an API to build {{String}} based queries from query method names. This works quite well in the JPA specific implementation of the query parser.

The NoSQL datastores mostly work with a criteria API instead and the {{PartSource}} doesn't really work nicely in that case as we have to combine query creation and parameter binding in one step (which is not the case for string based queries).

Beyond that the general parsing algorithm could be extracted from the JPA module and provide base classes to have persistence technology specific subclasses in turn that simply hook into the process and build the query with their specific criteria API.",,;02/Dec/10 10:01 AM;olivergierke;10800,,,,,,,,,,10800,,,,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,266198400,,,,,,2234,false,tmarshall(tmarshall),,,,0|i00xh3:,5468,6762,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Factor out methods containing page/sorting abstraction into separate interface,DATACMNS-9,35114,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,28/Nov/10 7:13 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,28/Nov/10 8:22 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,As we're still in debate whether we will include the pagination and sorting abstraction in the core repository interface we should factor it into a separate interface first. Depending on the feedback we get we can still move it back into the core one again at a later point in time.,,;28/Nov/10 8:21 AM;olivergierke;600,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,28/Nov/10 8:22 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17410/mylyn-context.zip,,,,,,,,,,,,,266457600,,,,,,2235,false,tmarshall(tmarshall),,,,0|i00xhb:,5469,6763,,,,,,28/Nov/10 8:22 AM;olivergierke;Will be included in intial push to Github.,,,,,,,,,,,,,,,,,,,,,,,
Merge auditing package into domain package,DATACMNS-8,35051,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,22/Nov/10 9:39 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,22/Nov/10 9:57 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,We can combine the {{domain}} and {{auditing}} packages as both deal with rather domain related things.,,;22/Nov/10 9:57 AM;olivergierke;900,,,,,,,,,0,900,,,0,900,,,,,,,,,,,,,,22/Nov/10 9:58 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17387/mylyn-context.zip,,,,,,,,,,,,,266976000,,,,,,2236,false,tmarshall(tmarshall),,,,0|i00xhj:,5470,6764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Make IsNewAware, IdAware and EntityInformation top level types",DATACMNS-6,35045,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,22/Nov/10 3:45 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,22/Nov/10 5:30 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,"Currently {{IsNewAware}}, {{IdAware}} and {{EntityInformation}} are inner types of {{GenericRepositorySupport}}. We rather should make them public.",,;22/Nov/10 5:29 AM;olivergierke;1800,,,,,,,,1800,1800,1800,100%,1800,1800,1800,,,,,,,,,,,,,,22/Nov/10 5:30 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17386/mylyn-context.zip,,,,,,,,,,,,,266976000,,,,,,2238,false,tmarshall(tmarshall),,,,0|i00xhz:,5472,6766,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move JPA specific methods into JPA module,DATACMNS-4,35043,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,22/Nov/10 3:32 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,22/Nov/10 4:44 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,There are still methods inside {{GenericRepository}} that seem to be rather JPA specific (like {{flush()}}). We should be conservative here and move them into the JPA specific interface for the start. If it turns out all repositories support them we can still move them into the general one.,,;22/Nov/10 4:43 AM;olivergierke;900,,,,,,,,1800,900,900,50%,1800,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,266976000,,,,,,2240,false,tmarshall(tmarshall),,,,0|i00xif:,5474,6768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename CRUD methods in GenericRepository to start with findBy rather than readBy,DATACMNS-3,35042,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Minor,Fixed,olivergierke,olivergierke,olivergierke,22/Nov/10 3:21 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,22/Nov/10 4:55 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,As discussed with Mark during the review we should call the CRUD methods on {{GenericRepository}} interface to start with {{findBy}} as {{readBy}} is too general.,,;22/Nov/10 4:56 AM;olivergierke;420,,,,,,,,1800,1380,420,23%,1800,1380,420,,,,,,,,,,,,,,22/Nov/10 4:55 AM;olivergierke;mylyn-context.zip;https://jira.spring.io/secure/attachment/17384/mylyn-context.zip,,,,,,,,,,,,,266976000,,,,,,2241,false,tmarshall(tmarshall),,,,0|i00xin:,5475,6769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename GenericRepository to Repository,DATACMNS-2,35041,35040,Sub-task,Closed,DATACMNS,Spring Data Commons,software,olivergierke,,,Major,Fixed,olivergierke,olivergierke,olivergierke,22/Nov/10 3:16 AM,25/Mar/13 9:25 AM,10/May/19 2:36 AM,22/Nov/10 4:14 AM,,,,,,,,1.0 M1,,,,,Repositories,,,,0,,,,,,,,As suggested by Mark during the review we should rename the {{GenericRepository}} interface to plain {{Repository}}.,,;22/Nov/10 4:14 AM;olivergierke;900,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,266976000,,,,,,2242,false,tmarshall(tmarshall),,,,0|i00xiv:,5476,6770,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to latest Cassandra drivers,DATACASS-239,66833,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Fixed,dwebb,dwebb,dwebb,23/Nov/15 9:58 PM,17/Feb/16 1:58 PM,10/May/19 2:36 AM,23/Dec/15 9:59 AM,1.3.1 (Gosling SR1),,,,,,,1.4 M1 (Hopper),,,,,Infrastructure,,,,0,,,,,,,,"Update the project to use:
# cassandra-unit 2.1.9.2
# dse-driver 2.1.7.1
# cassandra-all 2.1.11

Exclude conflicting netty libraries from the dse-driver dependency.",,"Dependency management between all modules that we use.  API changes, etc. Trial and Error.;24/Nov/15 12:52 AM;dwebb;144000",,,,,,,,,0,144000,,,0,144000,,,,,,,DATACASS-193,,,,,,,,,,,,,,,,,,,,109123200,,,,,,9223372036854775807,true,mp911de(mp911de),,,,0|i08x4n:,9223372036854775807,9223372036854775807,,,,21.0,,,,,,,,,,,,,,,,,,,,,,,,,
Reconsider usage of ingestions for general CQL test cases,DATACASS-197,61956,,Bug,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Complete,dwebb,olivergierke,olivergierke,26/Jan/15 6:17 AM,09/Feb/16 6:25 PM,10/May/19 2:36 AM,26/Jan/15 7:45 AM,1.0.4 (Dijkstra SR4),1.1.1 (Evans SR1),1.2 M1 (Fowler),,,,,1.0.5 (Dijkstra SR5),1.1.2 (Evans SR2),1.2 RC1 (Fowler),,,1.x: Spring CQL,,,,0,,,,,,,,"The test cases in {{CQLOperationsTests}} are using {{CqlTemplate.ingest(…)}} to ingest data into Cassandra. This is an asynchronous operation but the test cases assert on the presence of the just inserted data right after the ingestion.

This causes the test cases to be likely to fail in case the machine isn't able to insert the data right away.",,Test Fixing;26/Jan/15 7:45 AM;dwebb;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,135129600,,,,,2015-01-26 07:45:21.769,9223372036854775807,true,olivergierke(olivergierke),,,,0|i085pr:,9223372036854775807,9223372036854775807,,,55 - Evans SR2,3.0,,"26/Jan/15 7:45 AM;dwebb;Refactored tests that did not need to use ingest() to just use a synchronous insert.

Created new getBookWithRetry() in order to test asynchronous ingest() calls.

Bamboo Build successful.",,,,,,,,,,,,,,,,,,,,,,,
ingest() methods do not cache PreparedStatements causing performance bottleneck,DATACASS-139,58640,,Bug,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Blocker,Complete,dwebb,dwebb,dwebb,04/Jul/14 11:45 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,08/Aug/14 5:29 AM,1.0.1 (Dijkstra SR1),,,,,,,1.0.4 (Dijkstra SR4),1.1 RC1 (Evans),,,,Template API,,,,0,,,,,,,,"in CQLOperations/CQLTemplate, the ingest methods take only a CQL String a a multidimensional data structure, and they convert the CQL to a PreparedStatement. 

Currently, the module prepares the statement for every call and this is not the proper way to use PreparedStatements with Cassandra.

Figure out a way to cache the preparedStatements based on the CQL String value to prevent preparing the statement with each call to ingest().",,Working out caching strategy and making sure tests pass.;04/Jul/14 9:44 PM;dwebb;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,149904000,,,,,2014-07-10 07:03:57.332,44800,true,tmarshall(tmarshall),,,,0|i07okf:,44852,44502,,,,5.0,,"04/Jul/14 9:44 PM;dwebb;I have converted the SimplePreparedStatementCreator to CachedPreparedStatementCreator, and updated all references.  This was only used in our tests and our CQLTemplate.  I have create a new SimplePreparedStatementCreator with comments on advising against it's use.

CachedPreparedStatementCreator caches all CQL by Session -> Keyspace -> CQL String in a ConcurrentHashMap.
",10/Jul/14 7:03 AM;olivergierke;I've moved the commit for this ticket into a feature branch. Please try not to push partial work to the master branch as we try to be able to release at every point in time.,"08/Aug/14 5:29 AM;dwebb;Caching is completed.  After further analysis, there is no other enhancement to the async ingest methods since they have 1:n operations.",,,,,,,,,,,,,,,,,,,,,
Add support for missing DataTypes to DefaultCassandraRowValueProvider,DATACASS-92,55592,,Bug,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Major,Complete,dwebb,wienczny,wienczny,10/Feb/14 9:17 PM,09/Feb/16 6:25 PM,10/May/19 2:36 AM,17/Feb/14 8:04 PM,1.0 M1 (Dijkstra),,,,,,,1.0 M1 (Dijkstra),,,,,Core,,,,0,,,,,,,,"Currently there is only support for columes of types text, cint and bytes in org.springframework.data.cassandra.convert.DefaultCassandraRowValueProvider. The missing types from DataType should be added.

To reproduce try to read a column of type boolean from cassandra. In this case the column falls through and it is handled as bytes. In the handler for bytes an assertion fails, because datatypes are wrong (boolean != bytes).
This should be reproducible for all datatypes except text, cint and bytes.",,Completed non-Collection mappings.;12/Feb/14 9:28 PM;dwebb;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,164764800,,,,,2014-02-12 21:28:29.199,42068,true,olivergierke(olivergierke),,,,0|i004ef:,716,41770,,,Sprint 4,5.0,,"12/Feb/14 9:28 PM;dwebb;Stephan, Give the CI Server time to push a new SNAPSHOT and try your boolean value mapping again.  Everything is working except Set, List and Map, which we plan to get squared away soon.  Thanks for reporting the bug.",13/Feb/14 6:43 AM;wienczny;It seems to work for me. Thanks for your quick response!,17/Feb/14 8:04 PM;dwebb;Completed with all support for Collections.,,,,,,,,,,,,,,,,,,,,,
XML parsing fails on property placeholders,DATACASS-71,53952,,Bug,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Critical,Complete,dwebb,matthewadams,matthewadams,16/Jan/14 5:25 AM,09/Feb/16 6:26 PM,10/May/19 2:36 AM,21/Jan/14 12:31 PM,1.0 M1 (Dijkstra),,,,,,,,,,,,1.x: Spring CQL,Infrastructure,,,0,,,,,,,,"The use of property placeholders (""${ ... }"") causes xml namespace parsing to fail because property placeholder expressions haven't been replaced before xml parsing time.

Test case that causes the error is attached.  Zip is relative to the repo root directory.",,Refactoring the ClusterConfigParser to work with Property-Placeholders.;21/Jan/14 12:31 PM;dwebb;50400,,,,,,,,,0,50400,,,0,50400,,,,,,,,,,,,,,16/Jan/14 5:25 AM;matthewadams;placeholder-bug.zip;https://jira.spring.io/secure/attachment/21621/placeholder-bug.zip,,,,,,,,,,,,,167097600,,,,,2014-01-21 12:31:46.765,40432,true,olivergierke(olivergierke),,,,0|i0713b:,41047,40134,,,,3.0,,"21/Jan/14 12:31 PM;dwebb;Completed the XML Parser over the weekend and now committing.

All attributes now work with Property-Placeholders.",,,,,,,,,,,,,,,,,,,,,,,
Add more queryAsynchronously methods to Operations Interface,DATACASS-69,52683,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Critical,Complete,dwebb,dwebb,dwebb,14/Jan/14 7:59 AM,20/Apr/18 10:20 AM,10/May/19 2:36 AM,23/Jan/14 7:37 PM,1.0 M1 (Dijkstra),,,,,,,1.0 M1 (Dijkstra),,,,,Template API,,,,0,,,,,,,,"Implement the following:

	<T> T queryAsynchronously(final String cql, final QueryOptions options, ResultSetExtractor<T> rse, Long timeout,
			TimeUnit timeUnit);

	ResultSetFuture queryAsynchronously(final String cql, final QueryOptions options);

	void queryAsynchronously(final String cql, final QueryOptions options, Runnable listener, Executor executor);",,Designed interfaces and added impl.;23/Jan/14 7:37 PM;dwebb;14400,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,166924800,,,,,,39163,true,mp911de(mp911de),,,,0|i00caf:,2023,38865,,,,3.0,,23/Jan/14 7:37 PM;dwebb;Completed all Async Query Overrides.,,,,,,,,,,,,,,,,,,,,,,,
Support create & drop indexes,DATACASS-62,52310,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Complete,dwebb,dwebb,dwebb,11/Dec/13 1:50 PM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,13/Dec/13 1:17 PM,1.0 M1 (Dijkstra),,,,,,,,,,,,1.x: Spring CQL,Cassandra Administration,,,0,,,,,,,,"Need CreateIndexSpecification & DropIndexSpecification along with corresponding *CqlGenerator classes.

Model code after *TableSpecification & *TableCqlGenerator classes.",,Implementation of task.;13/Dec/13 1:17 PM;dwebb;15120,,,,,,,,,0,15120,,,0,15120,,,,,,,,,,,,,,,,,,,,,,,,,,,170467200,,,,,,38789,true,tmarshall(tmarshall),,,,0|i06rlb:,39508,38491,,,,5.0,,13/Dec/13 6:41 AM;dwebb;IndexSpecifications Created...moving on to CqlGenerators and Unit Tests.,13/Dec/13 1:17 PM;dwebb;Completed all CQL Generators and Unit/Integration Tests.,,,,,,,,,,,,,,,,,,,,,,
Remove class SpringDataKeyspace,DATACASS-47,52075,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Major,Complete,dwebb,matthewadams,matthewadams,26/Nov/13 8:36 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,12/Dec/13 11:21 AM,1.0 M1 (Dijkstra),,,,,,,,,,,,Cassandra Administration,Core,,,0,,,,,,,,This class appears to provide little value & should be removed.,,"Completed removal of class, refactoring, and unit test cleanup.;12/Dec/13 11:21 AM;dwebb;3600",,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,170553600,,,,,2013-12-12 11:21:55.23,38555,true,tmarshall(tmarshall),,,,0|i06qb3:,39300,38257,,,,2.0,,"12/Dec/13 11:21 AM;dwebb;Completed removal of class, refactoring, and unit test cleanup.",,,,,,,,,,,,,,,,,,,,,,,
Better PreparedStatement Support,DATACASS-39,52011,51789,Sub-task,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Complete,dwebb,dwebb,dwebb,22/Nov/13 8:37 PM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,25/Nov/13 7:43 PM,1.0 M1 (Dijkstra),,,,,,,1.0 M1 (Dijkstra),,,,,Template API,,,,0,,,,,,,,"Currently we have a PreparedStatementCreator very similar to Spring-JDBC.  This needs to be tuned for better usability given how the DataStax Driver actually uses BoundStatement for execution.

Need support for:
# Caching a PreparedStatement for many operations
",,Design and Code.;25/Nov/13 7:43 PM;dwebb;23520,,,,,,,,,0,23520,,,0,23520,,,,,,,,,,,,,,,,,,,,,,,,,,,172022400,,,,,,38493,true,tmarshall(tmarshall),,,,0|i06q1b:,39256,38195,,,,5.0,,25/Nov/13 12:25 PM;dwebb;This is acheived now through the ingest() methods in CassandraOperations.,"25/Nov/13 7:43 PM;dwebb;Completed the ingest() methods on CassandraOperations and CassandraTemplate.  
Unit tests added for all 3 new methods.
Changed the CassandraOperationsTest to use the new AbstractEmbeddedCassandraIntegrationTest and I un-hooked the Spring Context from the integration test.",,,,,,,,,,,,,,,,,,,,,,
Unit Tests for CassandraOperations,DATACASS-35,51852,51789,Sub-task,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Major,Complete,dwebb,dwebb,dwebb,14/Nov/13 12:16 PM,05/May/17 5:04 PM,10/May/19 2:36 AM,27/Nov/13 1:27 PM,,,,,,,,,,,,,Template API,,,,0,,,,,,,,Create Unit tests coverage for all CassandraOperations.,,Test Creation;27/Nov/13 1:27 PM;dwebb;28800,,,,,,,,,0,28800,,,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,63417600,,,,,2017-05-05 17:04:52.453,38334,true,sureshreddy.adi@gmail.com(sureshreddy.adi@gmail.com),,,,0|i06pc7:,39143,38036,,,,2.0,,27/Nov/13 1:27 PM;dwebb;Completed Tests,"05/May/17 5:04 PM;sureshreddy.adi@gmail.com;Can you please share the git link to code ?
thanks ",,,,,,,,,,,,,,,,,,,,,,
Convert Template to ThriftTemplate with full wrappers and Callbacks,DATACASS-27,49859,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Blocker,Complete,dwebb,dwebb,dwebb,21/Jul/13 10:49 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,21/Jul/13 1:33 PM,1.0 M1 (Dijkstra),,,,,,,,,,,,Template API,,,,0,,,,,,,,Refactor the Template class to better use the Callback pattern and exception translation.  Put all calls to C* through the execute methods that translate exceptions.,,Code changes.;21/Jul/13 1:33 PM;dwebb;4800,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,182995200,,,,,,36360,true,tmarshall(tmarshall),,,,0|i06gg7:,37703,36062,,,,5.0,,21/Jul/13 1:33 PM;dwebb;Completed refactoring.,,,,,,,,,,,,,,,,,,,,,,,
Create ExceptionTranslator and fold into Template API,DATACASS-24,49856,,New Feature,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Blocker,Complete,matthewadams,dwebb,dwebb,21/Jul/13 8:10 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,25/Nov/13 7:23 AM,1.0 M1 (Dijkstra),,,,,,,,,,,,Template API,,,,0,,,,,,,,Create an ExceptionMapping Class for the C* exceptions and use in the Template API to ensure user only gets Spring DataAccessExceptions.,,Researched Astyanax Exception types and created the Exception Translator.;21/Jul/13 10:09 AM;dwebb;7200,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,173577600,,,,,,36358,true,tmarshall(tmarshall),,,,0|i06gfz:,37702,36060,,,,5.0,,21/Jul/13 10:10 AM;dwebb;Completed and Checked In.,07/Nov/13 11:22 AM;dwebb;Need to double check this against ExceptionTranslator from Alex.,,,,,,,,,,,,,,,,,,,,,,
Delete Operations,DATACASS-19,48844,48826,Sub-task,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Critical,Complete,dwebb,dwebb,dwebb,30/May/13 6:31 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,30/May/13 7:13 AM,,,,,,,,1.0 M1 (Dijkstra),,,,,Template API,,,,0,,,,,,,,"Define and implement the Delete Operations.

# Delete One
# Delete Collection",,;30/May/13 7:14 AM;dwebb;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,187488000,,,,,,35357,true,tmarshall(tmarshall),,,,0|i06cdj:,37043,35059,,,Sprint 1,0.0,,"30/May/13 7:13 AM;dwebb;Completed:

{code}
remove(T)
{code}
{code}
remove(Collection<T>)
{code}

Both added to unit tests and passing unit tests and functional tests.
",30/May/13 7:13 AM;dwebb;Completed work.,,,,,,,,,,,,,,,,,,,,,,
Update (Save) Operations,DATACASS-18,48843,48826,Sub-task,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Fixed,dwebb,dwebb,dwebb,30/May/13 6:30 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,30/May/13 7:12 AM,,,,,,,,1.0 M1 (Dijkstra),,,,,Template API,,,,0,,,,,,,,"Define and implement the Update(Save) Operations.

# Update One
# Update Collection",,;30/May/13 7:12 AM;dwebb;1800,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,187488000,,,,,,35356,true,tmarshall(tmarshall),,,,0|i06cdb:,37042,35058,,,Sprint 1,0.0,,"30/May/13 7:12 AM;dwebb;Completed:

{code}
save(T)
{code}
{code}
save(Collection<T>)
{code}

Both added to unit tests and both passing unit and functional tests.",,,,,,,,,,,,,,,,,,,,,,,
Create Operations,DATACASS-17,48842,48826,Sub-task,Closed,DATACASS,Spring Data for Apache Cassandra,software,mp911de,,,Minor,Fixed,dwebb,dwebb,dwebb,30/May/13 6:30 AM,09/Feb/16 6:34 PM,10/May/19 2:36 AM,30/May/13 6:52 AM,,,,,,,,1.0 M1 (Dijkstra),,,,,Template API,,,,0,,,,,,,,"Define and implement the Create Operations.

# Create One
# Create Collection",,;30/May/13 6:57 AM;dwebb;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,187488000,,,,,,35355,true,tmarshall(tmarshall),,,,0|i06cd3:,37041,35057,,,Sprint 1,0.0,,"30/May/13 6:52 AM;dwebb;Completed:

{code}insert(T){code}
{code}insert(Collection<T>){code}

Both added to Unit Tests.

Unit and Functional tests passing.",,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Spring Integration 2.0,BATCHADM-58,32297,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Complete,david_syer,david_syer,david_syer,19/Jul/10 9:37 PM,11/Aug/10 5:48 AM,10/May/19 2:36 AM,11/Aug/10 5:48 AM,,,,,,,,1.2.0.M1,,,,,,,,,0,,,,,,,,,,;11/Aug/10 5:48 AM;david_syer;28800,,,,,,,,7200,0,28800,400%,7200,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,277862400,,,,,,3730,false,david_syer(david_syer),,,,0|i02z4v:,17402,16693,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Finish remote chunking implementation: update step execution with progress data from remote side,BATCHADM-49,30941,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Complete,david_syer,david_syer,david_syer,08/Apr/10 2:07 AM,27/Apr/10 11:05 PM,10/May/19 2:36 AM,27/Apr/10 11:05 PM,,,,,,,,1.0.0.RC1,,,,,Integration,,,,0,,,,,,,,Finish remote chunking implementation: update step contributions from remote side.,,;08/Apr/10 2:11 AM;david_syer;14400,;27/Apr/10 11:05 PM;david_syer;14400,,,,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,285724800,,,,,,3739,false,david_syer(david_syer),,,,0|i02z7z:,17416,16836,,,,,,"08/Apr/10 2:11 AM;david_syer;Added RemoteChunkHandlerFactoryBean to split an existing step into master-worker.  Needs some reflection hacks to pull out the components of the step, but that's probably OK as long as we are clear that it only works for existing <step/> with nested <chunk/>.","09/Apr/10 8:34 PM;david_syer;Added JMS integration test.  Everything works but 1) the skip/retry semantics are different than a local step, 2) there are windows for middleware failure where data could be lost because the JMS receive for the master is not in the same transaction (or thread) as the Step.",19/Apr/10 3:35 AM;david_syer;Added check for redelivered header (which would signal a problem on the master).,,,,,,,,,,,,,,,,,,,,,
Remove MessageOrientedStep,BATCHADM-48,30932,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Fixed,david_syer,david_syer,david_syer,07/Apr/10 9:08 PM,07/Apr/10 9:37 PM,10/May/19 2:36 AM,07/Apr/10 9:36 PM,,,,,,,,1.0.0.RC1,,,,,,,,,0,,,,,,,,Remove MessageOrientedStep.  It doesn't add much value because a Gateway with interface Tasklet or Step would do the same job.,,;07/Apr/10 9:37 PM;david_syer;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,286761600,,,,,,3740,false,david_syer(david_syer),,,,0|i02z8f:,17418,16838,,,,,,07/Apr/10 9:36 PM;david_syer;Fixed - replaced MessageOrientedStep with a simple delegate pattern and a gateway.,,,,,,,,,,,,,,,,,,,,,,,
Downgrade to Spring Integration 1.0,BATCHADM-41,30764,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Complete,david_syer,david_syer,david_syer,27/Mar/10 1:09 AM,27/Mar/10 3:17 AM,10/May/19 2:36 AM,27/Mar/10 3:17 AM,,,,,,,,1.0.0.M3,,,,,,,,,0,,,,,,,,"The 2.0 release date is slipping, so it would be safer to depend on 1.0",,;27/Mar/10 3:17 AM;david_syer;28800,,,,,,,,86400,57600,28800,33%,86400,57600,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,287798400,,,,,,3747,false,david_syer(david_syer),,,,0|i02zaf:,17427,16847,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to use jdbc: namespace,BATCHADM-40,30698,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Complete,david_syer,david_syer,david_syer,22/Mar/10 4:59 AM,22/Mar/10 5:01 AM,10/May/19 2:36 AM,22/Mar/10 5:01 AM,,,,,,,,1.0.0.M3,,,,,,,,,0,,,,,,,,,,;22/Mar/10 5:01 AM;david_syer;28800,,,,,,,,86400,86400,28800,33%,86400,86400,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,288144000,,,,,,3748,false,david_syer(david_syer),,,,0|i02zan:,17428,16848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Job configuration upload overwrites all existing jobs,BATCHADM-38,30569,,Bug,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Fixed,david_syer,david_syer,david_syer,12/Mar/10 4:43 PM,12/Mar/10 7:02 PM,10/May/19 2:36 AM,12/Mar/10 7:02 PM,1.0.0.M3,,,,,,,1.0.0.M3,,,,,Manager,,,,0,,,,,,,,"Job configuration upload either overwrites existing jobs or throws duplicate job exception (depending on whether we choose to reload() or load() it in the JobLoader).  There is no way to identify the Resource that is being loaded, so any resource coming from an upload is treated equally.  Might be tough to fix in general, but at least something with the original filename might be do-able.",,;12/Mar/10 7:02 PM;david_syer;7200,,,,,,,,14400,7200,7200,50%,14400,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,289008000,,,,,,3750,false,david_syer(david_syer),,,,0|i02zef:,17445,16865,,,,,,12/Mar/10 7:02 PM;david_syer;Fixed up to the point where the uploaded filename has to be unique: i.e. jobs will overwrite those previously loaded in files with the same name.  Best practice is to name the files differently (per job or job category anyway).,,,,,,,,,,,,,,,,,,,,,,,
Change naming convention for root context overrides,BATCHADM-34,30304,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Complete,david_syer,david_syer,david_syer,24/Feb/10 7:51 PM,01/Apr/10 9:06 PM,10/May/19 2:36 AM,01/Apr/10 9:06 PM,,,,,,,,1.0.0.M3,,,,,,,,,0,,,,,,,,Change naming convention for root context overrides.  Using META-INF/spring causes clashes with Spring DM in an OSGi container.,,;01/Apr/10 9:06 PM;david_syer;14400,,,,,,,,14400,0,14400,100%,14400,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,290390400,,,,,,3754,false,david_syer(david_syer),,,,0|i02z93:,17421,16841,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dates are displayed in GMT instead of using the locale of the jvm,BATCHADM-29,30012,,Defect,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Minor,Fixed,david_syer,afryer,afryer,09/Feb/10 10:16 AM,03/Mar/10 10:08 PM,10/May/19 2:36 AM,03/Mar/10 10:08 PM,1.0.0,,,,,,,1.0.0.M3,,,,,Manager,,,,0,,,,,,,,"Version 1.0.0.CI-SNAPSHOT

The timezone is hardcoded in the org.springframework.batch.admin.web.JobExecutionController class. 
In this class you see the following hardcoding of timezone to GMT all over the place...

model.addAttribute(new JobExecutionInfo(jobExecution, TimeZone.getTimeZone(""GMT""))); 

I think it would be better to default the timezone to the users locale and make it possible to override it using a configuration setting.  I'm in a GMT+10 timezone so displaying GMT times makes times appear way off and there is no indication on the web page that the time is displayed in GMT.  
",,;03/Mar/10 10:08 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,,,,2010-03-03 22:08:02.884,3759,false,david_syer(david_syer),,,,0|i02zfb:,17449,16869,http://forum.springsource.org/showthread.php?t=84419,,,,,"09/Feb/10 1:46 PM;afryer;I had more of a look and think I can see why you set all Timezones to GMT.  The duration in the JobExecutionInfo class is formatted using the same formatter as the startTime.  The duration must use a GMT timezone formatter otherwise it will be displayed incorrectly (in my case being in a GMT+10 timezone, the duration was displayed as 10 hours more than it actually was using the default TimeZone).  I added a new SimpleDateFormat to format the duration that is set to GMT timezone.  The other formatters (dateFormat and timeFormat) should use the TimeZone passed in to the JobExecutionInfo constructor, which should be TimeZone.getDefault() unless configured otherwise.  In fact it might be even better to remove TimeZone from the JobExecutionInfo constructor.","03/Mar/10 10:08 PM;david_syer;Parameterized time zone in the controllers (defaults to VM locale).  User can override by adding a bean definition called ""userTimeZone"" to servlet application context.",,,,,,,,,,,,,,,,,,,,,,
File upload triggers job twice in sample,BATCHADM-26,29973,,Bug,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Fixed,david_syer,david_syer,david_syer,07/Feb/10 3:59 AM,07/Feb/10 10:45 PM,10/May/19 2:36 AM,07/Feb/10 10:45 PM,1.0.0.M3,,,,,,,1.0.0.M3,,,,,Manager,,,,0,,,,,,,,Child context refresh causes double subscription to the input-files channel because there are two children with the same context configuration (one is a hack for the remote step and that can be fixed - see servlet/service-context.xml).,,;07/Feb/10 10:45 PM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,291859200,,,,,,3762,false,david_syer(david_syer),,,,0|i02zhb:,17458,16876,,,,,,"07/Feb/10 10:45 PM;david_syer;Fixed by introducing a JobLocatorStepLocator to locate steps in child contexts.  Slightly awkward that this means the target Step has to be defined in a Job, but that seems like a small price to pay given that the JobRegistry guarantees uniqueness of job names, but step names could be duplicated in multiple jobs.",,,,,,,,,,,,,,,,,,,,,,,
Allow file delete with pattern for path (in protected subdirectory),BATCHADM-24,29940,,New Feature,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Minor,Fixed,david_syer,david_syer,david_syer,04/Feb/10 2:03 AM,08/Feb/10 2:13 AM,10/May/19 2:36 AM,08/Feb/10 2:13 AM,1.0.0.M2,,,,,,,1.0.0.M3,,,,,,,,,0,,,,,,,,,,;08/Feb/10 2:11 AM;david_syer;14400,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,291859200,,,,,,3764,false,david_syer(david_syer),,,,0|i02zgn:,17455,16873,,,,,,08/Feb/10 2:11 AM;david_syer;Done.  The LocalFileService was completely revised to work as a facade for the files without having to know the base directory.,,,,,,,,,,,,,,,,,,,,,,,
Create reference docs,BATCHADM-2,28639,,Task,Resolved,BATCHADM,Spring Batch Admin,software,mminella,"NOTE: Spring Batch Admin will be moving into the Spring Attic with an end of life date to be December 31, 2017. The functionality of Spring Batch Admin has been mostly duplicated and expanded upon via Spring Cloud Data Flow and we encourage all users to migrate to that going forward. Documentation on that migration process can be found in the Spring Batch Admin Github repository here.
",https://docs.spring.io/spring-batch-admin/trunk/,Major,Fixed,david_syer,david_syer,david_syer,09/Nov/09 6:23 PM,05/Jan/10 1:47 AM,10/May/19 2:36 AM,05/Jan/10 1:47 AM,,,,,,,,1.0.0.M3,,,,,Documentation,,,,0,,,,,,,,,,Add doxia book with basic content copied from main site.  TODO: create separate book content under books/reference;18/Nov/09 2:25 AM;david_syer;7200,,,,,,,,28800,28800,7200,25%,28800,28800,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,299635200,,,,,,3786,false,david_syer(david_syer),,,,0|i01rk7:,10342,10331,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiResourceItemReader fails on Restart if read() method was not called.,BATCH-1798,40072,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,robert.kasanicky,sonwar,sonwar,07/Oct/11 1:40 PM,26/Jun/12 7:15 AM,10/May/19 2:36 AM,09/Oct/11 3:52 AM,2.1.8,,,,,,,2.1.9,,,,,Infrastructure,,,,0,bug,restart,,,,,,"The MultiResourceItemReader starts with -1 as currentResource. If the ItemProcessor fails on first commit (I tested with a ""throw new RuntimeException()""), this index remains -1 on ExecutionContext. Then, on restart, we get:
 
 java.lang.ArrayIndexOutOfBoundsException: -1
	at org.springframework.batch.item.file.MultiResourceItemReader.open(MultiResourceItemReader.java:171)


The fix is something like:

   if (executionContext.containsKey(executionContextUserSupport.getKey(RESOURCE_KEY))) {
	currentResource = executionContext.getInt(executionContextUserSupport.getKey(RESOURCE_KEY));

	// begin fix block
	if (currentResource == -1) {
		currentResource = 0;
	}
        // end fix block

        delegate.setResource(resources[currentResource]);
	delegate.open(executionContext);
   }",Windows/Linux,;09/Oct/11 3:53 AM;robert.kasanicky;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,239241600,,,,,2011-10-09 03:52:23.255,27632,true,david_syer(david_syer),,,,0|i02a4v:,13351,13094,,,,,,"07/Oct/11 6:32 PM;sonwar;I forgotten to say... The fix is on ItemStream's open() method. No need for checking ""resources.length != 0"", since that check is made before. 

So, the currentResource=0 code solves the bug.","09/Oct/11 3:52 AM;robert.kasanicky;Fixed as suggested. Note the bug is not triggered by crashing on the 1st commit, rather by crashing without calling {{read()}} on the reader. I guess you must be calling the reader from an ItemProcessor or so.",,,,,,,,,,,,,,,,,,,,,,
Override GroupAwareJob#toString method,BATCH-1650,34725,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,robert.kasanicky,jerome.delagnes,jerome.delagnes,07/Nov/10 2:05 PM,08/Nov/10 6:33 AM,10/May/19 2:36 AM,08/Nov/10 6:33 AM,2.1.3,,,,,,,2.1.4,,,,,Core,,,,0,,,,,,,,"SimpleJobLauncher (line :118) logs this kind of message before job execution :

	logger.info(""Job: ["" + job + ""] launched with the following parameters: ["" + jobParameters + ""]"");

It helps us to trace job execution.

Unfortunately, GroupAwareJob currently does not override the toString method as AbstractJob does.

The result message looks like :

	Job: [org.springframework.batch.core.configuration.support.GroupAwareJob@8398e7] launched with the following parameters: [{...}]

Please, override the GroupAwareJob#toString() method according the AbstractJob#toString() method output format.

	public String toString() {
		return ClassUtils.getShortName(delegate) + "": [name="" + getName() + ""]"";
	}
",,;08/Nov/10 6:33 AM;robert.kasanicky;900,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,268272000,,,,,,5785,true,robert.kasanicky(robert.kasanicky),,,,0|i02j8v:,14827,14131,,,,,,"07/Nov/10 2:10 PM;jerome.delagnes;Oops...

	@Override
	public String toString() { 
		return ClassUtils.getShortName(delegate.getClass()) + "": [name="" + getName() + ""]""; 
	}
",,,,,,,,,,,,,,,,,,,,,,,
XML configuration: p-namespace does not work on inline tasklet bean element,BATCH-1593,32022,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,daniel.soneira,daniel.soneira,30/Jun/10 9:57 PM,08/Jul/10 10:29 PM,10/May/19 2:36 AM,08/Jul/10 10:29 PM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"Setting properties on inline bean elements does not work when using the p-namespace:
{code}
    <step id=""step-recovery"">
      <tasklet>
        <beans:bean class=""com.example.batch.retry.RetryTasklet"" p:passOnRetryNumber=""4"">
        </beans:bean>
      </tasklet>
    </step>
{code}
works (property element):
{code}
    <step id=""step-recovery"">
      <tasklet>
        <beans:bean class=""com.example.batch.retry.RetryTasklet"">
          <beans:property name=""passOnRetryNumber"" value=""4""/>
        </beans:bean>
      </tasklet>
    </step>
{code}
works (referencing top level bean element):
{code}    <step id=""step-recovery"">
      <tasklet>
        <beans:bean ref=""retryTasklet""/>
      </tasklet>
    </step>
    
    <beans:bean id=""retryTasklet"" class=""com.example.batch.retry.RetryTasklet"" p:passOnRetryNumber=""4""/>
{code}",,;08/Jul/10 10:29 PM;david_syer;3600,,,,,,,,1800,0,3600,200%,1800,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,278812800,,,,,2010-07-08 22:29:11.623,11134,false,david_syer(david_syer),,,,0|i03v0v:,22568,19043,,,,,,"08/Jul/10 10:29 PM;david_syer;Fixed.  The same problem arose in all nested bean elements (job, listener, chunk).",,,,,,,,,,,,,,,,,,,,,,,
OraclePagingQueryProvider.generateJumpToItemQuery generates an incorrect query,BATCH-1590,31969,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Complete,david_syer,aneilson,aneilson,28/Jun/10 4:45 AM,29/Jun/10 2:56 AM,10/May/19 2:36 AM,28/Jun/10 9:16 PM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"When running a partitioned job that uses JdbcPagingItemReader as the input, some input rows are being omitted and some are being processed twice. This is happening as a result of JdbcPagingItemReader.doJumpToPage attempting to position the reader at the start of that partition (the 'read.count' and 'read.count.max' properties have been set in the step execution context to delimit the partitions). 

This problem is only seen when the sortKey will cause the rows to be sorted in an order other than the underlying database storage engine returns them (e.g., not the primary clustering key or query-covering index).

The jumpToItemSql that is generated by the query provider looks something like the following:

SELECT * FROM (SELECT customer AS SORT_KEY, ROWNUM as TMP_ROW_NUM FROM batch_input ORDER BY customer ASC) WHERE TMP_ROW_NUM = 30

This does not return the intended result because the assignment of the TMP_ROW_NUM values happens before the sort, so the effect is exactly the same as if the ORDER BY clause was omitted.

A possible workaround is to add another select level so that the sort happens before TMP_ROW_NUM values are assigned:

SELECT * FROM (SELECT SORT_KEY, ROWNUM AS TMP_ROW_NUM FROM (SELECT customer AS SORT_KEY FROM batch_input ORDER BY SORT_KEY ASC)) WHERE TMP_ROW_NUM = 30",Oracle 11g,;28/Jun/10 9:16 PM;david_syer;3600,,,,,,,,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,279590400,,,,,2010-06-28 21:16:48.553,11137,true,aneilson(aneilson),,,,0|i03v13:,22569,19045,,,,,,28/Jun/10 9:16 PM;david_syer;Fixed I think (slightly ugly hack in SqlPagingQueryUtils).  Can you try it?,"29/Jun/10 12:52 AM;aneilson;The change makes my test case work correctly now. The hack around extracting the alias will cause problems if selectClause contains other aliases. 

I think the proper fix is to have OraclePagingQueryProvider.generateJumpToItemQuery not use SqlPagingQueryUtils.generateRowNumQuery at all since adding the extra select level is not needed for generateFirstPageQuery and generateRemainingPagesQuery (because the outer predicate is <=). If you use some other method to generate the query for generateJumpToItemQuery, then you could use the knowledge that the select clause is in the form ""xxx AS SORT_KEY"", and you wouldn't need any regex hacks to extract the alias.","29/Jun/10 2:19 AM;aneilson;I replaced OraclePagingQueryProvider.generateJumpToItemQuery with the following, and it works for me. This code would not have the problems with the regex workaround:

{code}
public String generateJumpToItemQuery(int itemIndex, int pageSize) {
    int page = itemIndex / pageSize;
    int offset = (page * pageSize);
    offset = offset==0 ? 1 : offset;
    
    StringBuilder sql = new StringBuilder();
    sql.append(""SELECT * FROM (SELECT SORT_KEY, ROWNUM AS TMP_ROW_NUM FROM (SELECT "");
    
    // If there is a where clause, it might reference aliases in the select clause,
    // but otherwise, it isn't needed.
    if (StringUtils.hasText(getWhereClause())) {
        sql.append(getSelectClause()).append("", "");
    }
    
    sql.append(getSortKey()).append("" AS SORT_KEY FROM "").append(getFromClause());
    
    if (StringUtils.hasText(getWhereClause())) {
        sql.append("" WHERE "");
        sql.append(getWhereClause());
    }
    
    sql.append("" ORDER BY SORT_KEY"").append(isAscending() ? "" ASC"" : "" DESC"");    
    sql.append("")) WHERE TMP_ROW_NUM = "").append(offset);
    
    return sql.toString();
}
{code}","29/Jun/10 2:46 AM;david_syer;I did something similar, and it seems to work.  I'm not sure why the alias for SORT_KEY is necessary.  My tests all work without it.  Can you shed any light on that?","29/Jun/10 2:56 AM;aneilson;I don't see any reason why the SORT_KEY alias being there. I suppose I just copied from existing code. I removed it from my version of the code, and it works fine without it. Omitting it is better.",,,,,,,,,,,,,,,,,,,
Have RunIDIncrementer reuse given parameters,BATCH-1589,31968,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,jason.lindquist,jason.lindquist,28/Jun/10 2:46 AM,28/Jun/10 3:33 AM,10/May/19 2:36 AM,28/Jun/10 3:33 AM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"I'm not the original poster, but I didn't see this listed in JIRA and it is a good improvement.

Hello,

wouldn't it be better if the RunIdIncrementer preserved all other job parameters than the run.id (for which it does the increase the long value)?

Just changing from

[code]
public JobParameters getNext(JobParameters parameters) {
    if (parameters == null || parameters.isEmpty()) {
        return new JobParametersBuilder().addLong(RUN_ID_KEY, 1L).toJobParameters();
    }
    long id = parameters.getLong(RUN_ID_KEY, 1L) + 1;
    return new JobParametersBuilder().addLong(RUN_ID_KEY, id).toJobParameters();
}
[/code]

to

[code]
public JobParameters getNext(final JobParameters parameters) {
    if (parameters == null || parameters.isEmpty()) {
        return new JobParametersBuilder().addLong(RUN_ID_KEY, 1L).toJobParameters();
    }
    final long id = parameters.getLong(RUN_ID_KEY, 1L) + 1;
    return new JobParametersBuilder(parameters).addLong(RUN_ID_KEY, id).toJobParameters();
}
[/code]

(i.e. add the original parameters as constructor arg to the JobParametersBuilder on the last line) would do this!

Perhaps something to change in a upcoming release of Spring Batch as it would increase the usefulness of this incrementer.

Thanks,
Anders ",,;28/Jun/10 3:33 AM;david_syer;1200,,,,,,,,1800,1800,1200,66%,1800,1800,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,279676800,,,,,,11138,true,david_syer(david_syer),,,,0|i03v1b:,22570,19046,http://forum.springsource.org/showthread.php?t=85741,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Job Excecution Listener - XML Namespace parsing fails for methods named different to ""beforeJob"", ""afterJob""",BATCH-1588,31967,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Complete,david_syer,daniel.soneira,daniel.soneira,28/Jun/10 12:24 AM,28/Jun/10 3:56 AM,10/May/19 2:36 AM,28/Jun/10 3:56 AM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"The following XML configuration for a job listener does not work as the two configured methods are not called:

-------- XML - Configuration --------
<job id=""..."">
  ...
  <listener ref=""pojoListener"" before-job-method=""before"" after-job-method=""after""/>
</job>

<bean id=""pojoListener"" class=""com.example.MyListener""/>
--------

MyListener is a simple POJO and does not implement JobExecutionListener and has no annotated methods either.

I've debugged the problem and it seems the offending code is in the private method
AbstractListenerParser#getMethodNameAttributes

That method returns {""beforeJob"", ""afterJob""} instead of the XML attribute names {""before-job-method"", ""after-job-method""}.

The unit test ""JobExecutionListenerParserTests"" does not seem to test this case.

I suspect that the same problem exists for Step Listeners as they share the same code base.",,;28/Jun/10 3:56 AM;david_syer;1800,,,,,,,,14400,12600,1800,12%,14400,12600,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,279676800,,,,,2010-06-28 03:56:25.32,11139,false,david_syer(david_syer),,,,0|i03v1j:,22571,19047,,,,,,28/Jun/10 3:56 AM;david_syer;Fixed I think.  Thanks for the detailed report.  Actually it was a simple typo (using methodName instead of propertyName in the parser).,,,,,,,,,,,,,,,,,,,,,,,
DefaultFieldSetFactory is not setting the numberFormat in the enhance() call,BATCH-1587,31910,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Complete,david_syer,martinahrer,martinahrer,24/Jun/10 3:15 AM,24/Jun/10 11:26 PM,10/May/19 2:36 AM,24/Jun/10 11:26 PM,2.1.1,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"enhance is testing for (numberFormat!=null) but then calling fieldSet.setDateFormat(dateFormat);

	private FieldSet enhance(DefaultFieldSet fieldSet) {
		if (dateFormat!=null) {
			fieldSet.setDateFormat(dateFormat);
		}
		if (numberFormat!=null) {
			fieldSet.setDateFormat(dateFormat);
		}	
		return fieldSet;
	}
",,;24/Jun/10 11:26 PM;david_syer;1800,,,,,,,,600,0,1800,300%,600,0,1800,,,,,,,,,,,,,,24/Jun/10 3:15 AM;martinahrer;NumberFormatSupportingDefaultFieldSetFactory.java;https://jira.spring.io/secure/attachment/16782/NumberFormatSupportingDefaultFieldSetFactory.java,,,,,,,,,,,,,280022400,,,,,,11140,true,david_syer(david_syer),,,,0|i03v1r:,22572,19048,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PostgresPagingQueryProvider generateJumpToItemQuery generates bad SQL,BATCH-1571,31407,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,ergopro1,ergopro1,18/May/10 2:15 PM,18/May/10 9:09 PM,10/May/19 2:36 AM,18/May/10 6:54 PM,2.0.0,,,,,,,2.1.2,,,,,Infrastructure,,,,0,,,,,,,,"Using the Spring Batch Admin (1.0.1.BUILD-SNAPSHOT), click EXECUTIONS, select NEXT page (the numbers of EXECUTIONS is exceeding 20) ,generate following error:

org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [SELECT E.JOB_EXECUTION_ID AS SORT_KEY FROM BATCH_JOB_EXECUTION E, BATCH_JOB_INSTANCE I WHERE E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID ORDER BY E.JOB_EXECUTION_ID DESC LIMIT 19 1]; nested exception is org.postgresql.util.PSQLException: ERROR: syntax error at or near ""1""

The problem is due to the generated SQL based on the code below. I have suggested a minor fix for the problem. 

In addition, I believe the offset value does not need to be minus one as Postgres will automatically get the start value for next page correctly. (unless you have another reason for it)

<code>
	public String generateJumpToItemQuery(int itemIndex, int pageSize) {
		int page = itemIndex / pageSize;
-->		int offset = (page * pageSize) - 1;
-->		offset = offset<0 ? 0 : offset;

-->		String limitClause = new StringBuilder().append(""LIMIT "").append(offset).append("" 1"").toString();
		return SqlPagingQueryUtils.generateLimitJumpToQuery(this, limitClause);
	}
</code>

Note: debug variables:
itemIndex = 20
pageSize = 20
page = 1
offset = 1
limitClause = LIMIT 19 1

Code Fix suggestion:
		int offset = (page * pageSize);
                String limitClause = new StringBuilder().append(""LIMIT "").append(pageSize).append("" OFFSET "").append(offset).toString();

Thanks,
Eng","Client - Windows 7, java version ""1.6.0_17"", 
Database - PostgreSQL 8.4.1 ",;18/May/10 6:54 PM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,283219200,,,,,2010-05-18 18:54:41.148,11153,false,david_syer(david_syer),,,,0|i03v33:,22578,19059,,,,,,"18/May/10 6:54 PM;david_syer;Thanks for spotting that.  The suggested fix is not quite correct, but close.","18/May/10 7:35 PM;ergopro1;After reading the diff of the changes, I believe the new fix will generate one record instead of the intended number of records (based on the pageSize) because the query contains LIMIT 1 OFFSET xxx.

Is this the intended behavior?",18/May/10 9:09 PM;david_syer;That is the intended behaviour of jumpToItemQuery().,,,,,,,,,,,,,,,,,,,,,
MultiResourceItemReader.getCurrentResource cause java.lang.ArrayIndexOutOfBoundsException when .read() was not called,BATCH-1569,31394,,Defect,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,romgerale,romgerale,17/May/10 5:42 AM,17/May/10 10:12 PM,10/May/19 2:36 AM,17/May/10 10:12 PM,2.1.1,,,,,,,2.1.2,,,,,Infrastructure,,,,0,,,,,,,,"Only after first .read(), variable currentResource got a value greather or equal to zero(0). So if stream was openned, or not read yet, one activation on getCurrentResource method generates ArrayIndexOutOfBoundsException.

Below a proposed fix:

	public Resource getCurrentResource() {
		if (currentResource >= resources.length ) { //proposed: || currentResource  < 0
			return null;
		}
		return resources[currentResource];
	}
","Jdk 1.5, windows",;17/May/10 10:12 PM;robert.kasanicky;900,,,,,,,,900,0,900,100%,900,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,283305600,,,,,2010-05-17 22:12:56.771,5787,true,robert.kasanicky(robert.kasanicky),,,,0|i02j9b:,14829,14133,,,,,,17/May/10 10:12 PM;robert.kasanicky;added test and fixed as proposed,,,,,,,,,,,,,,,,,,,,,,,
incorrect apachemq artifactId,BATCH-1564,31188,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,robert.kasanicky,robert.kasanicky,robert.kasanicky,28/Apr/10 8:41 PM,29/Apr/10 12:18 AM,10/May/19 2:36 AM,29/Apr/10 12:17 AM,,,,,,,,2.1.2,,,,,,,,,0,,,,,,,,"infrastructure-tests/pom.xml declares apachemq dependency with artifactId ""com.springsource.org.apache.activemq"" which cannot be resolved after fresh checkout from repository. Using ""apachemq-core"" instead works fine.",,;29/Apr/10 12:18 AM;robert.kasanicky;300,,,,,,,,300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,,284947200,,,,,,5789,true,robert.kasanicky(robert.kasanicky),,,,0|i02j9r:,14831,14135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restart of partitioned job should prevent starting multiple step execution instances for a partition,BATCH-1553,31014,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,,aneilson,aneilson,14/Apr/10 12:18 AM,20/Apr/10 10:37 PM,10/May/19 2:36 AM,20/Apr/10 10:37 PM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"It is possible that on a restart of a partitioned step that an instance of a partitioned step execution could be initiated while an existing execution of that same partition is active.

Currently, org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter#shouldStart only checks whether the step status is UNKNOWN or COMPLETED. It might be useful for it to take other status values into account to avoid restarting that partition if it might already be executing. This is probably difficult to do without knowledge of the processing grid. For example, if the status was STARTED, there might still be an active step execution for that partition that is executing on another node in the processing grid. Starting another step execution for the same partition would be very bad.

It is probably up to the author of the PartitionHandler to do something to put the processing grid into a known state (e.g., shut down any currently executing step executions) before submitting any new ones. Perhaps this requirement should be mentioned in the documentation.",,;20/Apr/10 10:37 PM;david_syer;3600,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,285638400,,,,,2010-04-20 22:37:58.614,11161,false,david_syer(david_syer),,,,0|i03v47:,22583,19064,http://forum.springsource.org/showthread.php?t=87446,,,,,20/Apr/10 10:37 PM;david_syer;Added special cases to SimpleStepExecutionSplitter,,,,,,,,,,,,,,,,,,,,,,,
ExecutionContextPromotionListener strict flag misinterpreted in listener code,BATCH-1547,30865,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,03/Apr/10 8:25 PM,04/Apr/10 3:05 AM,10/May/19 2:36 AM,04/Apr/10 3:05 AM,2.0.3,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,See BATCH-1309 for the original issue.,,;04/Apr/10 3:05 AM;david_syer;1800,,,,,,,,1800,1800,1800,100%,1800,1800,1800,,,,,,,,,,,,,,04/Apr/10 1:31 AM;randyhall;ExecutionContextPromotionListenerFix2.patch;https://jira.spring.io/secure/attachment/16374/ExecutionContextPromotionListenerFix2.patch,,,,,,,,,,,,,287020800,,,,,2010-04-04 01:31:23.293,11167,false,david_syer(david_syer),,,,0|i03v4n:,22585,19066,,,,,,"04/Apr/10 1:31 AM;randyhall;Here is the patch I originally uploaded to BATCH-1309 with the proposed fix. You can always go to the comments on BATCH-1309 for the discussion.

Yes, it seems that I'm the first person to actually try to use strict=true...",04/Apr/10 3:05 AM;david_syer;fixed and modified a test to detect a reversion,,,,,,,,,,,,,,,,,,,,,,
Some issues with pagination in Oracle,BATCH-1546,30854,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,david_syer,david_syer,03/Apr/10 3:15 AM,05/Apr/10 6:50 PM,10/May/19 2:36 AM,05/Apr/10 6:50 PM,2.1.0,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,"Some issues with pagination in Oracle were reported in the forum, but not raised in JIRA.  Here is a ticket to track the investigation...  http://forum.springsource.org/showthread.php?t=85919",,;05/Apr/10 6:50 PM;david_syer;28800,,,,,,,,86400,57600,28800,33%,86400,57600,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,286934400,,,,,,11168,false,david_syer(david_syer),,,,0|i03v4v:,22586,19067,,,,,,05/Apr/10 6:50 PM;david_syer;There was a bug that didn't affect any out of the box item readers in trunk (but would have in 2.1.0): the jump to page query needed an alias for the rownum.,,,,,,,,,,,,,,,,,,,,,,,
OrderedComposite cannot register two items with the same order,BATCH-1543,30805,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,snicoll,snicoll,30/Mar/10 1:18 AM,23/Jun/10 8:33 PM,10/May/19 2:36 AM,23/Jun/10 8:33 PM,2.1.0,,,,,,,2.1.2,,,,,Core,,,,0,,,,,,,,"We have added a custom listener that extends StepListener and OrderedComposite is very handy to use when multiple listeners are involved. Unfortunately, it's not public. 

Can you make it public or part of the API?",,;23/Jun/10 8:33 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,280886400,,,,,2010-04-01 04:02:19.867,11171,false,david_syer(david_syer),,,,0|i03v5b:,22588,196,,,,,,"01/Apr/10 4:02 AM;david_syer;I'd prefer to leave it as it is.  If it is generally useful then it would be better in the Spring Framework, not in Spring Batch.  I'm sure you will agree that the code is pretty simple and you can easily copy it and use it with your own packaging.",01/Apr/10 5:31 PM;snicoll;Fair enough. I honestly don't understand the difference but I agree the code is really simple.,"14/Jun/10 8:10 PM;snicoll;I had a more closer look to this one and I might have found a bug. I am not sure if this is the expected behavior or not but to me it should be a problem.

The OrderedComposite creates a Tree with a special comparator taking @Ordered into account. That's fine since that is the very purpose of it but the side effect is that it considers two objects having the same priority equals! So you can register two items with the same @Order value. 

Is that expected?","14/Jun/10 8:11 PM;snicoll;I meant, you can't register two items with the same priority",,,,,,,,,,,,,,,,,,,,
Thread safety in JobExecution and StepExecution collections,BATCH-1542,30771,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,david_syer,david_syer,27/Mar/10 7:22 PM,27/Mar/10 7:23 PM,10/May/19 2:36 AM,27/Mar/10 7:23 PM,2.0.0,2.1.0,,,,,,2.1.1,,,,,,,,,0,,,,,,,,The collections inside JobExecution and StepExecution should have copy-on-write concurrency protection.  The only place we are likely to see the effect is in really fast step and job executions using the MapJobRepository (which is only thread safe since BATCH-1541 anyway).,,;27/Mar/10 7:23 PM;david_syer;1200,,,,,,,,1200,1200,1200,100%,1200,1200,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,287712000,,,,,,11172,false,david_syer(david_syer),,,,0|i03v5j:,22589,19069,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make MapJobRepository work for multi-threaded steps and jobs,BATCH-1541,30770,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Complete,david_syer,david_syer,david_syer,27/Mar/10 7:17 PM,27/Mar/10 7:36 PM,10/May/19 2:36 AM,27/Mar/10 7:19 PM,1.0.0,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,"Since only the update of the ExecutionContext in a Step is really sensitive to the transaction boundary, and in a multi-threaded step there is usually no state in the context it should be possible to tweak the Map*Dao to behave correctly in a concurrent environment.  There are three things that break: updating a step execution in a multi-threaded step, saving a step execution in a multi-threaded split, and saving a job execution in a multi-threaded launcher.",,;27/Mar/10 7:19 PM;david_syer;57600,,,,,,,,172800,115200,57600,33%,172800,115200,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,287712000,,,,,,11173,false,david_syer(david_syer),,,,0|i03v5r:,22590,19070,,,,,,27/Mar/10 7:19 PM;david_syer;Fixed with various tweaks to the Daos.  Mostly concerned removing the transaction proxy collections in favour of simple concurrent collections.,27/Mar/10 7:36 PM;david_syer;See also BATCH-1542,,,,,,,,,,,,,,,,,,,,,,
Modify JdbcPagingItemReader to use startAfterValue on restart,BATCH-1537,30674,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,figura,figura,19/Mar/10 1:08 PM,25/Mar/10 10:59 PM,10/May/19 2:36 AM,25/Mar/10 10:59 PM,2.1.0,,,,,,,2.1.1,,,,,Infrastructure,,,,0,,,,,,,,"I'm using JdbcPagingItemReader in a Oracle environment to retrieve data from a large table.

When restarting a job, the paging reader generates a query that uses a ""ROWNUM = pageNumber * pageSize"". If the job previously read many pages before being stoped, this query makes Oracle to go over thousands of lines, resulting in poor performance.

It would be nice if the JdbcPagingItemReader saved the startAfterValue variable when updating the ExecutionContext, and on restart, used this variable instead of trying to jump to the last page.",Oracle,;25/Mar/10 10:59 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,287884800,,,,,2010-03-25 22:59:12.954,11176,false,david_syer(david_syer),,,,0|i03v5z:,22591,19071,,,,,,25/Mar/10 10:59 PM;david_syer;Done.  Thanks for the sugestion.,,,,,,,,,,,,,,,,,,,,,,,
API change and is not reflected in API and documentation examples,BATCH-1533,30588,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,dr_pompeii,dr_pompeii,14/Mar/10 5:57 PM,22/Mar/10 4:07 AM,10/May/19 2:36 AM,22/Mar/10 4:07 AM,2.1.0,,,,,,,2.1.1,,,,,Documentation,Samples,,,0,,,,,,,,"The variable name changed from itemProcessors to delegates through the versions from ""spring-batch-2.0.1.RELEASE"" to ""spring-batch-2.1.0.RELEASE"" for the class
org\springframework\batch\item\support\CompositeItemProcessor<I, O>
API documentation and documentation sample not updated

For the sections 8.6. Declarative Iteration and  9.5. Declarative Retry, about 
its pointcut expressions both are wrong, because ""* com...*"" has three points and must be two ""* com..*""

",,;22/Mar/10 4:07 AM;david_syer;600,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,288835200,,,,,,11180,true,david_syer(david_syer),,,,0|i01nsv:,9733,9764,http://forum.springsource.org/showthread.php?t=86134,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restart of a partitioned Step should not call Partitioner,BATCH-1531,30534,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,grossh,grossh,11/Mar/10 12:00 AM,05/Oct/10 9:42 AM,10/May/19 2:36 AM,13/Aug/10 1:28 AM,2.1.0,,,,,,,2.1.1,2.1.3,,,,,,,,0,,,,,,,,"For a PartionStep the Partitioner is called on every restart of the failed or stopped step.
This should only be done if the step is executed the first time or if the flag allowStartIfComplete=true.

The reasons for this change:
1) Partitioning is a very time and resource consuming process in our jobs. Those resouces should not be wasted
2) In our environment the system is not exclusively reserved for the job. Other business may happen and modify the data relevant for the selection of the partition blocks. As a result the data assigned to the blocks may differ. But as only failed steps will be repeated the repeated partioned step might work on other data then expected.

All information to repeat a failed partition step is already stored in the repository. Therefore the partitioning is not necessary but increases the risk of data missmatch
",SpingBatch V2.1,;20/Apr/10 9:51 PM;david_syer;3600,,,,,,,,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,271123200,,,,,2010-04-20 21:50:42.757,11182,false,david_syer(david_syer),,,,0|i03v6v:,22595,19074,http://forum.springsource.org/showthread.php?t=84982&highlight=partition,,,,,20/Apr/10 9:50 PM;david_syer;Fixed.  Please test a snapshot if you have time.,"11/May/10 12:40 AM;grossh;The improvement does not seem to work correctly.

In my opinion there are two faults in the code:
1) SimpleStepExecutionSplitter.getContexts() sets the gridSize to the context and checks hereafter, whether the context is dirty. Propably expecting that setting the property with the same value does not set dirty. But this is not true, the context implementation sets dirty in any case! So the partitioning code will always be called - even if it is a restart.
2) SimpleStepExecutionSplitter.getContexts() calls SimplePartitioner().partition() always with a fixed gridSize coming from the step definition. But according to the documentation the gridSize is just a hint which can be ignored by the partitioner. So the real numer of partition steps may be completely different to gridSize. Either should the real number of steps stored in the context after the initial partitioning, or its number has to be determined from the existing step executions in the database.
","12/May/10 6:36 PM;david_syer;On point 1: seems like a bug in ExecutionContext (BATCH-1566).  I think if we fix that we should be in good shape.

On point 2: the partitioner should be called with a grid size from the step definition only in the case that a) it is a new step execution, not a restart, and b) the step definition has a grid size (it depends on the PartitionHandler implementation).  The grid size is a hint in general (again depending on the PartitionHandler implementation), but if you only use the TaskExecutorPartitionHandler then it is wired in the step definition. If we fix BATCH-1566 then it is also a hint in the sense that you might change the step configuration between restarts, but the actual number of partitions should be the same as the first execution.","09/Aug/10 7:18 AM;snicoll;It seems our build is affected by this change. When a partitionJob fails and we try to restart it we get the following:

{noformat}
2010-08-09 15:19:40 batch.core.step.AbstractStep [ERROR] Encountered an error executing the step
java.lang.IllegalArgumentException: Unable to invoke method: [public final void $Proxy60.beforeStep(org.springframework.batch.core.StepExecution)] on object: [com.bsb.sf.batch.service.staging.internal.JpaStagingItemReader@4434f7] with arguments: [[StepExecution: id=6, name=step1:partition0, status=STARTED, exitStatus=EXECUTING, readCount=0, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=0, rollbackCount=0, exitDescription=]]
	at org.springframework.batch.support.SimpleMethodInvoker.invokeMethod(SimpleMethodInvoker.java:108)
	at org.springframework.batch.core.listener.MethodInvokerMethodInterceptor.invoke(MethodInvokerMethodInterceptor.java:68)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy63.beforeStep(Unknown Source)
	at org.springframework.batch.core.listener.CompositeStepExecutionListener.beforeStep(CompositeStepExecutionListener.java:76)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:192)
	at org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler$1.call(TaskExecutorPartitionHandler.java:108)
	at org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler$1.call(TaskExecutorPartitionHandler.java:106)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.batch.support.SimpleMethodInvoker.invokeMethod(SimpleMethodInvoker.java:105)
	... 13 more
Caused by: java.lang.IllegalStateException: A mandatory key [sequence.minSequence] has not been found in the execution context
	at com.bsb.sf.batch.util.JobExecutionUtils.checkKeysInContext(JobExecutionUtils.java:28)
	at com.bsb.sf.batch.service.staging.internal.StagingItemPartitionReaderInitializer.initialize(StagingItemPartitionReaderInitializer.java:28)
	at com.bsb.sf.batch.service.staging.internal.StagingItemPartitionReaderInitializer.initialize(StagingItemPartitionReaderInitializer.java:22)
	at com.bsb.sf.batch.service.staging.internal.BaseStagingItemReader.beforeStep(BaseStagingItemReader.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy60.beforeStep(Unknown Source)
	... 18 more
{noformat}

The partitioner is not called anymore, fine but it seems it did not retain the value of the previous execution context. Does that ring a bell? Switching back to 2.1.0.RELEASE fixes theses issue (6 tests are restarting a partition step and they all fail with 2.1.2).","09/Aug/10 8:46 AM;david_syer;In the SimpleStepExecutionSplitter there is a method {{getStartable(..)}} that mutates its argument, setting up the ExecutionContext.  It has this stanza:

{code}
if (isRestart) {
	stepExecution.setExecutionContext(lastStepExecution.getExecutionContext());
}
{code}

Can you dig into you code and find out why he thinks your case is not a restart?","10/Aug/10 7:17 AM;snicoll;I did and here is what I've found. I have a staged job with a partition. For the illustrations purpose i set the grid size to 1. My test throws an exception when it reads the second element (only for the first instance). When I run the instance for the first time I get this

2010-08-10 15:47:51 batch.core.step.AbstractStep [DEBUG] Step execution complete: StepExecution: id=3, name=step1.partition, status=FAILED, exitStatus=FAILED, readCount=1, filterCount=0, writeCount=0 readSkipCount=0, writeSkipCount=0, processSkipCount=0, commitCount=0, rollbackCount=1
2010-08-10 15:47:51 job.flow.support.SimpleFlow [DEBUG] Completed state=templateJob.step1.partition with status=FAILED
2010-08-10 15:47:51 job.flow.support.SimpleFlow [DEBUG] Handling state=templateJob.fail18
2010-08-10 15:47:51 job.flow.support.SimpleFlow [DEBUG] Completed state=templateJob.fail18 with status=FAILED
2010-08-10 15:47:51 batch.core.job.AbstractJob [DEBUG] Job execution complete: JobExecution: id=1, startTime=Tue Aug 10 15:47:44 CEST 2010, endTime=null, lastUpdated=Tue Aug 10 15:47:44 CEST 2010, status=FAILED, exitStatus=exitCode=FAILED;exitDescription=, job=[JobInstance: id=1, JobParameters=[{accountPrefix=99b50708-dbc7-4f31-b27e-84765568bf0e, 0.step1.reader.fatal.fatalAt=1}], Job=[exceptionDefaultPartitionJobTest]]
2010-08-10 15:47:51 core.launch.support.SimpleJobLauncher [INFO] Job: [FlowJob: [name=exceptionDefaultPartitionJobTest]] completed with the following parameters: [{accountPrefix=99b50708-dbc7-4f31-b27e-84765568bf0e, 0.step1.reader.fatal.fatalAt=1}] and the following status: [FAILED]

Upon restart, I have debug SimpleStepExecutionSplitter and the lastStepExecution is null which is why it thinks it's not a restart. I don't understand why the lastStepExecution is null as it clearly stated it failed on the first run.

Any idea? More debugging output is needed on your end?


","12/Aug/10 7:35 AM;david_syer;This could happen if you use a Partitioner that doesn't use the same naming convention for partitions as SimplePartitioner.  Can you check?  If that's the problem the workaround is easy (and please open another JIRA to fix the little hack).  I usually extend SimplePartitioner and use its contexts as a starting point for my own, so I never change the names.",12/Aug/10 7:52 AM;snicoll;We're using a different convention indeed. I will create the issue right the way,12/Aug/10 7:57 AM;snicoll;See BATCH-1616,"13/Aug/10 1:28 AM;david_syer;Re-opened and re-resolved.  the default behaviour changed again in 2.1.3: if you don't want the framework to call your Partitioner on restart, it needs to implement a new interface PartitionNameProvider.","05/Oct/10 6:02 AM;snicoll;Dave, wouldn't that make sense to explain the rationale behind this change in the documentation and/or the Javadoc of the PartitionNameProvider? ",05/Oct/10 9:42 AM;david_syer;Good point.  Done.,,,,,,,,,,,,
Let job-repository assign id to itself by default.,BATCH-1530,30532,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Complete,david_syer,david@davidkarlsen.com,david@davidkarlsen.com,10/Mar/10 8:59 PM,23/Mar/10 7:56 PM,10/May/19 2:36 AM,23/Mar/10 7:56 PM,2.1.0,,,,,,,2.1.1,,,,,Infrastructure,,,,0,,,,,,,,"When declaring the job-repository as:
<batch:job-repository />
I get:

Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Configuration problem: Id is required for element 'job-repository' when used as a top-level tag

Which is kinda weird - as it has a name, but not an id.

Declaring it as
 <batch:job-repository id=""job-repository""/>

solves the problem.",N/A,;23/Mar/10 7:56 PM;david_syer;600,,,,,,,,1800,1200,600,33%,1800,1200,600,,,,,,,,,,,,,,,,,,,,,,,,,,,288921600,,,,,,11183,true,david_syer(david_syer),,,,0|i03v73:,22596,19075,,,,,,"14/Mar/10 12:55 AM;david@davidkarlsen.com;ups - typo - should read
<batch:job-repository id=""jobRepository""/>
",,,,,,,,,,,,,,,,,,,,,,,
Explicit protection against exceptions in SkipPolicy to prevent infinite loop in RetryTemplate,BATCH-1529,30504,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,nvanhoren,nvanhoren,09/Mar/10 2:44 AM,04/Apr/10 9:18 PM,10/May/19 2:36 AM,04/Apr/10 9:18 PM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"We use a RetryTemplate build using FaultTolerantFactoryBean. When an exception is thrown in one of our custom ErrorListener, the RetryTemplate decides that the exception is not fatal and retries. If that exception is consistently thrown by the ErrorListener the RetryTemplate will retry indefinitely and so an infinite loop will occur.",,;04/Apr/10 9:18 PM;david_syer;7200,,,,,,,,7200,7200,7200,100%,7200,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,289267200,,,,,2010-03-09 03:01:34.887,11184,false,david_syer(david_syer),,,,0|i03v7b:,22597,19076,,,,,,09/Mar/10 3:01 AM;david_syer;What is an ErrorListener (not part of Batch)?  How did you install it or configure your step?,"09/Mar/10 3:19 AM;nvanhoren;Yes, sorry, I get confused with all the helpers we made.
The exception is thrown in the shouldSkip() method of a custom implementation of SkipPolicy which was simply given to the FaultTolerantStepFactoryBean. In our case, the SkipPolicy must update a status in database to indicate that the item(s) are in error or skipped. So it can sometimes throw exceptions (in case of problem with database communication,...).",09/Mar/10 6:09 PM;david_syer;There is explicit protection in the framework for exceptions thrown by listeners (including skip listeners).  Since you throw the exception in the SkipPolicy this won't apply.  A workaround is to catch and wrap the exception in something fatal (e.g. RetryException).,,,,,,,,,,,,,,,,,,,,,
"Namespace context partition element requires bean with name ""transactionManager""",BATCH-1528,30494,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,mpilone,mpilone,08/Mar/10 12:01 PM,09/Mar/10 6:31 PM,10/May/19 2:36 AM,09/Mar/10 6:31 PM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"When trying to use the batch:partition context element, I get the error:
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined

Looking at the code, it looks like a problem in CoreNamespacePostProcessor.injectDefaults at line 136. The processor checks for a transactionManager and if not found, uses the default. However the AbstractStepParser.parsePartition method never looks for or sets a transaction manager. This results in a lookup to the default transaction manager which fails.

The bean configuration is:
<batch:job id=""simpleJob"" job-repository=""jobRepository"">
        <batch:step id=""step1.master"">
          <batch:partition step=""step1"" partitioner=""partitioner"">
              <batch:handler grid-size=""10"" task-executor=""keyValueExtractionTaskExecutor""/>
          </batch:partition>
        </batch:step>
    </batch:job>
    
        <batch:step id=""step1"">
            <batch:tasklet transaction-manager=""catalogTransactionManager"">
                <batch:chunk reader=""granuleStaleItemReader"" writer=""keyValueItemWriter""
                    commit-interval=""20"" processor=""granuleKeyValueExtractionProcessor""/>
            </batch:tasklet>
        </batch:step>


The stack trace is attached.
",,;09/Mar/10 6:31 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,08/Mar/10 12:01 PM;mpilone;stacktrace.txt;https://jira.spring.io/secure/attachment/16264/stacktrace.txt,,,,,,,,,,,,,289267200,,,,,2010-03-09 18:18:17.409,11185,false,david_syer(david_syer),,,,0|i03v7j:,22598,19077,,,,,,"08/Mar/10 12:11 PM;mpilone;I should note that for various other reasons I can't use the name ""transactionManager"" for my transaction manager bean name. That's how I stumbled upon this.","09/Mar/10 6:18 PM;david_syer;Thanks for the report.  Since the PartitionStep does not require a transaction manager, a simple workaround is to provide a bean definition called ""transactionManager"" (it won't be used except by CoreNamespacePostProcessor).",09/Mar/10 6:31 PM;david_syer;Fixed by checking in the post processor if a transaction manager is required,,,,,,,,,,,,,,,,,,,,,
ExitStatus description can be null when re-hyrated from  Oracle,BATCH-1525,30383,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,snicoll,snicoll,01/Mar/10 8:24 PM,02/Mar/10 3:18 AM,10/May/19 2:36 AM,02/Mar/10 3:17 AM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"The equals implementation (or the toString) of ExitStatus may not work legitimately in all cases.

In Oracle, an empty String is considered as null and fails our build because we assert the exit status matched the expected (that is, a given exit code and an empty exit description). 

We got this

java.lang.AssertionError: expected:<exitCode=COMPLETED WITH ERROR;exitDescription=> but was:<exitCode=COMPLETED WITH ERROR;exitDescription=null>

It's not a big deal and we can deal with that in our test utilities but if the equals supported that use case, that would be great since we don't really want to put a 'null' exit description. Besides the default constructor does this

public ExitStatus(String exitCode) {
   this(exitCode, """");
}

",,;02/Mar/10 3:18 AM;david_syer;600,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,289872000,,,,,2010-03-02 03:17:39.463,11188,false,david_syer(david_syer),,,,0|i03v7z:,22600,19079,,,,,,02/Mar/10 3:17 AM;david_syer;Thanks for spotting that.  It's actually the other constructor that's the problem really (although only in practice if used in conjunction with Oracle as you pointed out).  That's how I fixed it.,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failure of FaultTolerantStepFactoryBean in multi-threaded test,BATCH-1522,30341,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,david_syer,david_syer,01/Mar/10 12:07 AM,02/Mar/10 10:48 PM,10/May/19 2:36 AM,02/Mar/10 10:48 PM,2.1.0,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,Intermittent failure of FaultTolerantStepFactoryBean in multi-threaded test.  Could be nothing (because the test FaultTolerantStepFactoryBeanRollbackTests uses a MapJobRepositoryFactoryBean).,,;02/Mar/10 10:48 PM;david_syer;28800,,,,,,,,7200,0,28800,400%,7200,0,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,289872000,,,,,,11189,false,david_syer(david_syer),,,,0|i03v87:,22601,19080,,,,,,"02/Mar/10 10:48 PM;david_syer;It turns out there was a nasty little bug lurking.  When a chunk fails we sometimes have to reset the version on the StepExecution, and this happens in a TransactionSynchronization (so as late as possible).  Unfortunately, the lock that is taken in TaskletStep to prevent concurrent updates of the StepExecution can be released earlier than the version is reset.  Fixed this by moving the lock release code to *after* the version update.",,,,,,,,,,,,,,,,,,,,,,,
Allow null ItemWriter as long as ItemProcessor is provided,BATCH-1520,30337,30054,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,david_syer,david_syer,28/Feb/10 8:29 PM,28/Feb/10 9:37 PM,10/May/19 2:36 AM,28/Feb/10 9:28 PM,,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,,,;28/Feb/10 9:28 PM;david_syer;3600,,,,,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,11191,false,david_syer(david_syer),,,,0|i03v8n:,22603,53,,,,,,"28/Feb/10 9:37 PM;david_syer;Done.  The writeCount is still incremented, but listeners are not called.",,,,,,,,,,,,,,,,,,,,,,,
tablePrefix in AbstractJdbcBatchMetadataDao cannot be set,BATCH-1516,30303,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Invalid,david_syer,lorenzo,lorenzo,24/Feb/10 7:00 PM,02/Mar/10 10:12 PM,10/May/19 2:36 AM,02/Mar/10 10:12 PM,2.1.0.RC1,,,,,,,,,,,,Core,,,,0,,,,,,,,"In some cases, e.g. when using Spring-Batch-Admin or the sample jUnit-test DatabaseShutdownFunctionalTests, 
the tablePrefix cannot be set properly. 

Spring-Batch then uses the DB2 default prefix (username), which is not correct.
In other jUnit-Tests, the tablePrefix can be set with a property in the jobRepository-Bean.

For now, I've changed the class AbstractJdbcBatchMetadataDao to use a tablePrefix like DB2UTST.BATCH_, but 
I think there should be another way to do this.

Thanks a lot
Lorenzo
","DB2, Spring Batch Core, Spring Batch Admin",;02/Mar/10 10:11 PM;david_syer;3600,,,,,,,,0,0,3600,"9,223,372,036,854,775,807%",0,0,3600,,,,,,,,,,,,,,24/Feb/10 7:00 PM;lorenzo;spring-batch-stacktrace.txt;https://jira.spring.io/secure/attachment/16238/spring-batch-stacktrace.txt,,,,,,,,,,,,,289872000,,,,,2010-02-26 23:43:01.94,11193,true,david_syer(david_syer),,,,0|i034wf:,18336,56,http://forum.springsource.org/showthread.php?p=285604#post285604,,,,,"26/Feb/10 11:43 PM;david_syer;I'm not really sure I understand what the problem is.  If you want to you can set the table prefix, right?  It's just that the samples do not?  But they don't need to, so what is the problem exactly?","01/Mar/10 5:32 PM;lorenzo;The problem is, that setting the property in the jobRepository does not work in all cases.
I think changing the class AbstractJdbcBatchMetadataDao as I have done, is not the correct way to do this.","01/Mar/10 8:22 PM;david_syer;I'm still not 100% clear on this.  The unit test you mentioned uses a standard JobRepositoryFactoryBean configuration, so you can add a table prefix.  Are you saying you did that and it still failed?

Spring Batch Admin is a different project.  Please see BATCHADM-5 and the user guide for details of how to set the table prefix for the extended daos used there.  There is a factory bean for the JobService with the same features as the JobRepositoryFactoryBean.","02/Mar/10 6:32 PM;lorenzo;Yes, the job uses the simple-job-launcher-context.xml, which I changed as follows:

<code>
	<bean id=""jobRepository""
		class=""org.springframework.batch.core.repository.support.JobRepositoryFactoryBean""
		p:databaseType=""db2"" p:tablePrefix=""DB2UTST.BATCH_""
		p:dataSource-ref=""dataSource"" p:transactionManager-ref=""transactionManager"" />

	<bean id=""mapJobRepository""
		class=""org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean""
		p:databaseType=""db2"" p:tablePrefix=""DB2UTST.BATCH_""
		lazy-init=""true"" autowire-candidate=""false"" />
</code>

I don't understand this. Other tests, which use the same JobRepository, work perfectly.

Concerning spring-batch-admin, i set the <property name=""defaultValue"" value=""db2"" /> in
env-context.xml, added p:databaseType=""db2"" p:tablePrefix=""DB2UTST.BATCH_"" to the jobRepository
in execution-context.xml and added a batch-db2.properties file. This should be enough. I think
it's the same problem in both cases, that sometimes the jobRepository is not initialized correctly,
or overwritten after initializing...

","02/Mar/10 7:03 PM;david_syer;Spring Batch Admin has a JobService as well as a JobRepository and they both need the table prefix to be set.  There may also be a JobExplorer that you need to configure separately.  Please try that and double check it and if it really doesn't work open an issue in the BATCHADM JIRA (it's a different project).

I think you have the same non-problem in the Sprin Batch samples.  The DatabaseShutdownFunctionalTests is probably the only sample to use the JobExplorer.  Make sure you set the table prefix there as well.","02/Mar/10 8:01 PM;lorenzo;I've added the property to the jobExplorer:

	<bean id=""jobExplorer""
		class=""org.springframework.batch.core.explore.support.JobExplorerFactoryBean""
		p:tablePrefix=""DB2UTST.BATCH_""
		p:dataSource-ref=""dataSource"" />

but still, the jUnit test won't work without my 'AbstractJdbcBatchMetadataDao'-Hack:

	protected String getQuery(String base) {
		return StringUtils.replace(base, ""%PREFIX%"", ""DB2UTST.BATCH_"");
	}

Btw, the jUnit Tests 'JobOperatorFunctionalTests' and 'SkipSampleFunctionalTests' are also affected.","02/Mar/10 8:31 PM;david_syer;I don't understand what is happening.  How about posting a stack trace?  If you can find a bug, we can fix it.","02/Mar/10 10:05 PM;lorenzo;Sorry, you were right. Adding the property to the jobExplorer does the trick. 
It didn't work at first because I didn't undo my hack to 'AbstractJdbcBatchMetadataDao' correctly.

I expect it will work in the Spring-Batch-Admin tool too. 

Thanks a lot
Lorenz",,,,,,,,,,,,,,,,
HibernateItemReaderHelper requires queryProvider field to be an instance of AbstractHibernateQueryProvider,BATCH-1513,30097,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,alext,alext,14/Feb/10 9:52 PM,26/Feb/10 11:49 PM,10/May/19 2:36 AM,26/Feb/10 11:49 PM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"HibernateItemReaderHelper.afterPropertiesSet() method contains the following code:

Assert.state(queryProvider instanceof AbstractHibernateQueryProvider,
					""Hibernate query provider must be set"");

I think this is not needed as the queryProvider field is not cast to AbstractHibernateQueryProvider within HibernateItemReaderHelper.
Also if query provider defined as a scoped bean:
<bean id=""myQueryProvider"" class=""MyQueryProvider"" scope=""step"" /> 
proxy is not an instance of AbstractHibernateQueryProvider even though MyQueryProvider extends AbstractHibernateQueryProvider   ",,;26/Feb/10 11:49 PM;david_syer;600,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,290217600,,,,,2010-02-26 23:49:56.048,11195,false,david_syer(david_syer),,,,0|i03v93:,22605,14,,,,,,"26/Feb/10 11:49 PM;david_syer;Fixed.  A workaround is to use proxy-target-class=""true"" in the step scope declaration.",,,,,,,,,,,,,,,,,,,,,,,
Make ApplicationContext ids unique and identifiable in ClasspathXmlApplicationContextsFactoryBean,BATCH-1508,29985,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Complete,david_syer,david_syer,david_syer,07/Feb/10 10:10 PM,28/Feb/10 11:22 PM,10/May/19 2:36 AM,28/Feb/10 11:22 PM,2.1.0,,,,,,,2.1.1,,,,,Core,,,,0,,,,,,,,"Make ApplicationContext ids unique and identifiable in ClasspathXmlApplicationContextsFactoryBean.  The id is used by Spring to identify the bean factory for serialization, so if the factory bean is used in a cluster it would be nice to have a consistent naming convention.",,;28/Feb/10 11:22 PM;david_syer;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,290044800,,,,,,11197,false,david_syer(david_syer),,,,0|i03v9r:,22608,10,,,,,,28/Feb/10 11:22 PM;david_syer;Fixed: uses the resource URI (or toString if that fails).,,,,,,,,,,,,,,,,,,,,,,,
"FlowJob.getStep() only looks at state names, not step names",BATCH-1507,29982,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,07/Feb/10 8:20 PM,07/Feb/10 8:38 PM,10/May/19 2:36 AM,07/Feb/10 8:37 PM,2.1.0,,,,,,,2.1.1,,,,,,,,,0,,,,,,,,"FlowJob.getStep() only looks at state names, not step names, so anyone using the StepLocator interface is in for a surprise.  The state name happens to be the same as the step name in the existing uint tests (irony), but when created by the XML namespace parsers they are different.",,;07/Feb/10 8:38 PM;david_syer;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,291859200,,,,,,11198,false,david_syer(david_syer),,,,0|i03v9z:,22609,13,,,,,,07/Feb/10 8:37 PM;david_syer;Fixed by trying both the name passed in and a concatenation of that and the job name.,,,,,,,,,,,,,,,,,,,,,,,
JobExecution marked COMPLETE on failure to save step execution metadata,BATCH-1503,29897,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,nitty,nitty,01/Feb/10 12:52 AM,10/Feb/10 10:27 AM,10/May/19 2:36 AM,07/Feb/10 1:29 AM,2.0.4,2.1.0.RC1,,,,,,2.1.1,,,,,,,,,0,,,,,,,,"Exception occurs in the writer, there's a failure in persisting step context- the job status is set to COMPLETE instead of FAILED.

Steps to create
# Change the batch schema EXIT_MESSAGE VARCHAR(2500) to EXIT_MESSAGE VARCHAR(25).
# Force the writer to throw some exception.
# Error occurs while persisting the step context but the job context gets updated to COMPLETE.","Windows, Unix",;07/Feb/10 1:29 AM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,10/Feb/10 10:27 AM;nitty;hello_batch.zip;https://jira.spring.io/secure/attachment/16168/hello_batch.zip,06/Feb/10 7:52 AM;nitty;hello_batch.zipx;https://jira.spring.io/secure/attachment/16149/hello_batch.zipx,,,,,,,,,,,,291600000,,,,,2010-02-01 08:30:34.749,11202,true,nitty(nitty),,,,0|i0253b:,12534,12,http://forum.springsource.org/showthread.php?t=83827,,,,,"01/Feb/10 8:30 AM;david_syer;The status should be UNKNOWN and it seems to work for me.  Can you post the logs (enable INFO for org.springframework.batch and debug for org.springframework.batch.core.step)?  Can you also post the configuration of your step, please?",01/Feb/10 7:25 PM;david_syer;Actually the status could be FAILED if the update fails (UNKOWN when the commit fails).  Anyway it still works for me.  Can you post the Job configuration as well?,"06/Feb/10 7:51 AM;nitty;Dave,
Sorry I couldn't get back on this earlier.

The step status remains STARTED with exit code EXECUTING

The job status is COMPLETED with exit code  COMPLETED.

I have attached the sample code, schema, logs and db_results.",06/Feb/10 7:52 AM;nitty;attached,06/Feb/10 7:51 PM;david_syer;Thanks for the attachment.  I can't open it.  Can you re-attach it as a regular zip?,"07/Feb/10 12:47 AM;david_syer;OK, I see the problem now (we had tested failures in ExecutionContext persistence, but this is an error in the step execution persistence itself).  really this should never happen once you have the database set up properly, so it's not really a critical bug.  Fixing now...","07/Feb/10 1:29 AM;david_syer;Added special case to EndState, looking for UNKNOWN status.  The alternative would be to add an explicit transition to every last step in a flow.  This seems cleaner.

P.S. the attachment is still useless for most people so if you could replace it with a normal zip that would be great.",10/Feb/10 10:27 AM;nitty;uploading sample again,,,,,,,,,,,,,,,,
FetchSize not accessible in HibernateCursorItemReader,BATCH-1494,29833,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Trivial,Fixed,david_syer,force.majeure81,force.majeure81,27/Jan/10 1:27 AM,27/Jan/10 9:36 PM,10/May/19 2:36 AM,27/Jan/10 9:34 PM,2.1.0.RC1,,,,,,,2.1.0,,,,,Infrastructure,,,,0,,,,,,,,"In 2.1.0.RC1, 'setFetchSize' is no longer an accessible property on 'HibernateCursorItemReader'.  Appears to now be a private variable (defaulting to 0) encapsulated on 'HibernateItemReaderHelper'.",,;27/Jan/10 9:36 PM;david_syer;1800,,,,,,,,1800,0,1800,100%,1800,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,292809600,,,,,2010-01-27 21:34:49.712,11211,false,david_syer(david_syer),,,,0|i03tt3:,22371,18839,,,,,,27/Jan/10 9:34 PM;david_syer;Fixed.  Thanks for catching that.,,,,,,,,,,,,,,,,,,,,,,,
Step listeners detected and invoked twice,BATCH-1493,29828,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,madrian,madrian,26/Jan/10 11:33 AM,27/Jan/10 9:12 PM,10/May/19 2:36 AM,27/Jan/10 9:11 PM,2.0.1,,,,,,,2.1.0,,,,,Core,,,,0,,,,,,,,"Whenever a StepListener is manually configured via the <listener> tag and its implementing class also happens to be an ItemReader, ItemWriter or ItemProcessor then the StepListener is also detected and registered automatically by Spring Batch. This makes the detection twice, registered twice and thus the StepListener's methods being invoked twice as well.

It would be better if duplicate listeners can be detected and avoided by Spring Batch.

Please see Spring Forum thread for more details.

",Java 1.5 on Fedora,;27/Jan/10 9:12 PM;david_syer;1200,,,,,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,292809600,,,,,2010-01-27 21:11:36.153,11212,false,david_syer(david_syer),,,,0|i03vbj:,22616,19086,http://forum.springsource.org/showthread.php?t=83710,,,,,27/Jan/10 9:11 PM;david_syer;Fixed in SImpleStepFactoryBean (checks for duplicate before auto-registering).,,,,,,,,,,,,,,,,,,,,,,,
Could not customize grid-size element,BATCH-1489,29706,,Bug,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Critical,Fixed,david_syer,snicoll,snicoll,18/Jan/10 2:59 AM,27/May/10 6:54 PM,10/May/19 2:36 AM,18/Jan/10 6:54 PM,2.1.0.RC1,,,,,,,2.1.0,,,,,Core,Samples,,,0,,,,,,,,"I am trying to create a simple partitioner implementation and my grid size is always 6 no matter what. I realized that it was the default value and that my configuration was not taken into account.

My config is based on the jdbcPartitionJob in the samples. Something like

{code:xml}
<step id=""partitionStep"" xmlns=""http://www.springframework.org/schema/batch"">
    <partition step=""mainStep"" partitioner=""partitioner"">
        <handler grid-size=""10"" task-executor=""myTaskExecutor""/>
    </partition>
</step>
{code}

According to the AbstractStepParser, it expects the grid-size on the partition element and not the handler element. Unfortunately, setting that value on the partition violates the schema.

It's probably a bad copy/paste since this code is surrounded by {{if (handlerElement != null) {}} :)",,;18/Jan/10 6:54 PM;david_syer;600,,,,,,,,0,0,600,"9,223,372,036,854,775,807%",0,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,293587200,,,,,2010-01-18 18:54:17.986,11215,false,david_syer(david_syer),,,,0|i01nt3:,9734,64,,,,,,"18/Jan/10 6:54 PM;david_syer;Good catch, thanks.",,,,,,,,,,,,,,,,,,,,,,,
Adding getters to retry beans,BATCH-1487,29672,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,sebge2,sebge2,14/Jan/10 6:45 PM,18/Jan/10 7:07 PM,10/May/19 2:36 AM,18/Jan/10 7:07 PM,2.1.0.M4,,,,,,,2.1.0.RC1,,,,,Infrastructure,,,,0,,,,,,,,"Hello,

Default RetryPolicies and SkipPolicies have no getter, so I cannot know their current values.

For example:
org.springframework.batch.retry.backoff.FixedBackOffPolicy.getBackOffPeriod()
org.springframework.batch.retry.policy.SimpleRetryPolicy.getMaxAttempts()
org.springframework.batch.retry.policy.TimeoutRetryPolicy.getTimeout()

Best,

Sébastien",,;18/Jan/10 7:07 PM;david_syer;1200,,,,,,,,1800,600,1200,66%,1800,600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,293587200,,,,,2010-01-18 19:07:12.068,11217,false,david_syer(david_syer),,,,0|i03vbz:,22618,19088,,,,,,18/Jan/10 7:07 PM;david_syer;Fixed.,,,,,,,,,,,,,,,,,,,,,,,
Add HibernatePagingItemReader,BATCH-1486,29646,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,13/Jan/10 3:37 AM,13/Jan/10 3:57 AM,10/May/19 2:36 AM,13/Jan/10 3:57 AM,2.1.0.M4,,,,,,,2.1.0.RC1,,,,,Infrastructure,,,,0,,,,,,,,"Add HibernatePagingItemReader - the ""cursor"" based one is plagued by inefficiency of memory use and JDBC driver variability.  A paging reader like the Jpa one should work just fine.",,;13/Jan/10 3:57 AM;david_syer;14400,,,,,,,,7200,0,14400,200%,7200,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,294019200,,,,,,11218,false,david_syer(david_syer),,,,0|i03vc7:,22619,19089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H2 support,BATCH-1459,29258,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,snicoll,snicoll,15/Dec/09 1:50 AM,28/Dec/09 7:53 PM,10/May/19 2:36 AM,19/Dec/09 2:34 AM,2.1.0.M3,,,,,,,2.1.0.M4,,,,,Core,,,,0,,,,,,,,"H2 is not currently supported out-of-the box. It is possible to make it working quite easily by faking HSQL or by using the Oracle compatibility mode of h2.

Besides, since the DatabaseType.fromMetaData method does not handle h2 url, the job repository definition should have an explicit databaseType.



",,;19/Dec/09 2:34 AM;david_syer;10800,,,,,,,,7200,0,10800,150%,7200,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,296265600,,,,,2009-12-15 02:28:21.384,3658,false,david_syer(david_syer),,,,0|i03vg7:,22637,19107,,,,,,15/Dec/09 2:28 AM;lucas.l.ward;Does this database type require a new schema file? ,"15/Dec/09 6:18 PM;snicoll;I am using the hsqldb schema file and it is working fine. I just have an issue with the H2's database sequencer implementation (H2SequenceMaxValueIncrementer).

Hopefully, running the samples will reveal most issues.",19/Dec/09 2:34 AM;david_syer;Added H2 support and got the samples working.,,,,,,,,,,,,,,,,,,,,,
Add FlowStep: a Step implementation that executes a flow,BATCH-1458,29157,27686,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,07/Dec/09 5:49 PM,08/Dec/09 4:46 AM,10/May/19 2:36 AM,08/Dec/09 4:46 AM,2.1.0.M3,,,,,,,2.1.0.M4,,,,,Core,,,,0,,,,,,,,,,;08/Dec/09 4:46 AM;david_syer;7200,,,,,,,,7200,7200,7200,100%,7200,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,297129600,,,,,,8259,false,david_syer(david_syer),,,,0|i03vgf:,22638,19108,,,,,,08/Dec/09 4:46 AM;david_syer;Done.  Including XML support.,,,,,,,,,,,,,,,,,,,,,,,
BeanWrapperFieldSetMapper should throw BindException (so the errors can be accessed),BATCH-1448,28845,,Improvement,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,litius,litius,20/Nov/09 4:09 AM,23/Nov/09 6:00 PM,10/May/19 2:36 AM,23/Nov/09 6:00 PM,2.1.0.M2,,,,,,,2.1.0.M3,,,,,Infrastructure,,,,0,,,,,,,,"Currently when BeanWrapperFieldSetMapper mapping fields with DataBinder, it throws a BindingException:

{code}
		if (binder.getBindingResult().hasErrors()) {
			List<ObjectError> errors = binder.getBindingResult().getAllErrors();
			List<String> messages = new ArrayList<String>(errors.size());
			for (ObjectError error : errors) {
				messages.add(error.getDefaultMessage());
			}
			throw new BindingException("""" + messages);
		}
{code}

BeanWrapperFieldSetMapper should return BindingResult as it is the preferred API for error handling

To be backwards compatible, this might be done through configuration (just thinking)

If Exception is still necessary, instead of collecting error messages in a single String, may return a ""BindingResult"" as Exception params.",,;23/Nov/09 6:00 PM;david_syer;7200,,,,,,,,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,298425600,,,,,2009-11-23 03:46:41.78,11248,false,david_syer(david_syer),,,,0|i03vhz:,22645,19115,,,,,,"23/Nov/09 3:46 AM;david_syer;I think maybe you misread the code snippet.  The single String is just a courtesy to the user reading a log file with a stack trace: the BindingException is an instance of Errors, which has all the error handling API that you want.

The exception is necessary to meet the FieldSetMapper contract (nothing to do with implementation choice).

Resolving as Invalid, but please comment if you want to keep it open.","23/Nov/09 7:25 AM;litius;Maybe I am not looking at the right ""BindingException"", but the one I see in ""BeanWrapperFieldSetMapper"" is:

{code}
        public class BindingException extends RuntimeException
{code}

So there is no way to use it in a same fashion as ""BindingResult"". 

There are a couple of interesting use cases for being able to map errors from ""BeanWrapperFieldSetMapper"" through ""ResourceBundle"":

1. Errors are saved in DB with appropriate locale

2. If there are any errors, message with exception payload is created, and send to the end channel (Spring Integration) that directs it to UI (so again, error messages + locale are needed)","23/Nov/09 6:00 PM;david_syer;Sorry, you are right: BindingException should have been BindException (which is checked).  I changed the signature of FieldSetMapper and now BeanWrapperFieldSetMapper throws it properly.",,,,,,,,,,,,,,,,,,,,,
Add JobStep: a Step implementation that executes a Job,BATCH-1443,28747,27686,Sub-task,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Minor,Fixed,david_syer,david_syer,david_syer,15/Nov/09 11:07 PM,16/Nov/09 12:20 AM,10/May/19 2:36 AM,16/Nov/09 12:20 AM,,,,,,,,2.1.0.M3,,,,,Core,,,,0,,,,,,,,Add JobStep: a Step implementation that executes a Job.  Required also is a JobParametersExtractor strategy interface for creating JobParameters from a StepExecution.,,;16/Nov/09 12:20 AM;david_syer;14400,,,,,,,,10800,0,14400,133%,10800,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,299116800,,,,,,11252,false,david_syer(david_syer),,,,0|i03vin:,22648,19118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for CallbackPreferringPlatformTransactionManager (and for native TX in WAS),BATCH-1437,28661,,New Feature,Resolved,BATCH,Spring Batch,software,mminella,Spring Batch: batch and bulk processing in the enterprise environment,http://projects.spring.io/spring-batch/,Major,Fixed,david_syer,david_syer,david_syer,10/Nov/09 7:24 PM,10/Nov/09 11:12 PM,10/May/19 2:36 AM,10/Nov/09 11:10 PM,2.0.0,,,,,,,2.1.0.M3,,,,,,,,,0,,,,,,,,"Support for CallbackPreferringPlatformTransactionManager would enable native transaction manager support on Websphere, which is currently broken for parallel chunking since the background thread that each chunk executes in is not allowed to start a transaction.",,"Refactored TaskletStep so that it uses a TransactionCallback.  It's actually much nicer that way because commit failures can be detected and accounted for with a proper rollback, instead of just panicking and using BatchStatus.UNKNOWN.;10/Nov/09 10:47 PM;david_syer;7200","Removed FatalException as well, since it isn't needed any more - the fatal condition can be detected in a TX synchronization.;10/Nov/09 11:10 PM;david_syer;1200",,,,,,,7200,0,8400,116%,7200,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,299548800,,,,,,11258,false,david_syer(david_syer),,,,0|i03vjb:,22651,19121,,,,,,"10/Nov/09 11:12 PM;david_syer;Changed issue type to New Feature - the bug was minor and only affected WAS users, but the new feature is generally quite useful.  In particular transaction commit failures are handled more correctly (so as long as the rollback succeeds, then the state is maintained).",,,,,,,,,,,,,,,,,,,,,,,
Remove POMs from Project Trees After Gradle Migration,AMQP-246,44243,,Bug,Closed,AMQP,Spring AMQP,software,grussell,"The Spring AMQP project applies core Spring concepts to the development of AMQP-based messaging solutions. 
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring AMQP issues at <a href=""https://github.com/spring-projects/spring-amqp/issues"">GitHub</a> </div>
",http://projects.spring.io/spring-amqp/,Minor,Complete,hillert,grussell,grussell,27/Jun/12 11:54 AM,23/Aug/12 2:56 PM,10/May/19 2:36 AM,27/Jun/12 12:44 PM,1.1.2,,,,,,,1.1.2,,,,,Build,,,,0,,,,,,,,,,;27/Jun/12 12:29 PM;hillert;1200,,,,,,,,,0,1200,,,0,1200,,,,,,,,AMQP-83,,,,,,,,,,,,,,,,,,,216604800,,,,,2012-06-27 12:29:13.021,31720,false,grussell(grussell),,,,0|i05q2f:,33429,31420,,,,,,27/Jun/12 12:29 PM;hillert;Issued PR: https://github.com/SpringSource/spring-amqp/pull/47,,,,,,,,,,,,,,,,,,,,,,,
Create 'release' CI build plan for AMQP,AMQP-84,34853,34852,Sub-task,Closed,AMQP,Spring AMQP,software,grussell,"The Spring AMQP project applies core Spring concepts to the development of AMQP-based messaging solutions. 
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring AMQP issues at <a href=""https://github.com/spring-projects/spring-amqp/issues"">GitHub</a> </div>
",http://projects.spring.io/spring-amqp/,Minor,Complete,hillert,cbeams,cbeams,12/Nov/10 2:08 PM,29/Mar/13 7:36 PM,10/May/19 2:36 AM,19/Jun/12 1:23 PM,,,,,,,,1.2.0.M1,,,,,Build,,,,0,,,,,,,,Clone the INT-RELEASE build plan to AMQP-RELEASE and update appropriately.,,;19/Jun/12 1:21 PM;hillert;3600,;19/Jun/12 1:21 PM;hillert;30,;19/Jun/12 1:22 PM;hillert;1770,,,,,,14400,9000,5400,37%,14400,9000,5400,,GRADLE-24,,,,,,,,,,,,,,,,,,,,,,,,,217296000,,,,,2012-06-19 13:23:29.397,3971,false,grussell(grussell),,,,0|i029cv:,13225,12970,,,,,,"08/Jun/12 8:11 AM;cbeams;I'd recommend only one build plan for snapshots and releases, modeled after SPR and INT.","19/Jun/12 1:23 PM;hillert;Implemented 2 Build Plans:

https://build.springsource.org/browse/AMQP-MASTER
https://build.springsource.org/browse/AMQP-SONAR",,,,,,,,,,,,,,,,,,,,,,
Migrate build to Gradle,AMQP-83,34852,,Task,Closed,AMQP,Spring AMQP,software,grussell,"The Spring AMQP project applies core Spring concepts to the development of AMQP-based messaging solutions. 
<div style=""background-color: white; border: 1px solid red; margin: 3px; padding: 2px; font-weight: bold; text-align: center;"">
Please create new Spring AMQP issues at <a href=""https://github.com/spring-projects/spring-amqp/issues"">GitHub</a> </div>
",http://projects.spring.io/spring-amqp/,Major,Complete,hillert,cbeams,cbeams,12/Nov/10 2:07 PM,23/Aug/12 2:56 PM,10/May/19 2:36 AM,19/Jun/12 1:24 PM,,,,,,,,1.1.2,1.2.0.M1,,,,Build,,,,0,,,,,,,,"Per discussions, move AMQP build infrastructure to Gradle in time for 1.0.0.M2.  The 'gradle' branch contains a complete port of the build already.  This simply needs to be merged into master.",,;19/Jun/12 1:24 PM;hillert;3600,,,,,,,,28800,25200,3600,12%,43200,34200,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,217296000,,,,,2012-06-01 08:01:19.052,3972,false,grussell(grussell),,,,0|i029d3:,13226,12971,,,,,,01/Jun/12 8:01 AM;hillert;Pull Request: https://github.com/SpringSource/spring-amqp/pull/42,19/Jun/12 1:24 PM;hillert;PR merged,,,,,,,,,,,,,,,,,,,,,,
